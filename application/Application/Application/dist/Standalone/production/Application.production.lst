

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 27 13:12:02 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   220                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   221                           	psect	text183,global,reloc=2,class=CODE,delta=1
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	text185,global,reloc=2,class=CODE,delta=1
   224                           	psect	text186,global,reloc=2,class=CODE,delta=1
   225                           	psect	text187,global,reloc=2,class=CODE,delta=1
   226                           	psect	text188,global,reloc=2,class=CODE,delta=1
   227                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   228                           	psect	text189,global,reloc=2,class=CODE,delta=1
   229                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   230                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   231                           	dabs	1,0x400,48,_BDT
   232                           	dabs	1,0x438,8,_CtrlTrfData
   233                           	dabs	1,0x430,8,_SetupPkt
   234  0000                     
   235                           ; Version 1.45
   236                           ; Generated 16/11/2017 GMT
   237                           ; 
   238                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   239                           ; All rights reserved.
   240                           ; 
   241                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   242                           ; 
   243                           ; Redistribution and use in source and binary forms, with or without modification, are
   244                           ; permitted provided that the following conditions are met:
   245                           ; 
   246                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   247                           ;        conditions and the following disclaimer.
   248                           ; 
   249                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   250                           ;        of conditions and the following disclaimer in the documentation and/or other
   251                           ;        materials provided with the distribution.
   252                           ; 
   253                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   254                           ;        software without specific prior written permission.
   255                           ; 
   256                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   257                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   258                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   259                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   260                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   261                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   262                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   263                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   264                           ; 
   265                           ; 
   266                           ; Code-generator required, PIC18F46J50 Definitions
   267                           ; 
   268                           ; SFR Addresses
   269  0000                     
   270                           	psect	idataBANK0
   271  006982                     __pidataBANK0:
   272                           	opt stack 0
   273                           
   274                           ;initializer for findEmptySpot@currentPosition
   275  006982  10                 	db	16
   276                           
   277                           ;initializer for isNumberInMemory@currentPosition
   278  006983  10                 	db	16
   279                           
   280                           	psect	idataBANK1
   281  006984                     __pidataBANK1:
   282                           	opt stack 0
   283                           
   284                           ;initializer for _isMemoryEmpty
   285  006984  01                 	db	1
   286                           
   287                           ;initializer for InitGprsNetwork@GprsInitSts
   288  006985  01                 	db	1
   289                           
   290                           	psect	idataBANK2
   291  0068FA                     __pidataBANK2:
   292                           	opt stack 0
   293                           
   294                           ;initializer for Terminal@EchoOption
   295  0068FA  01                 	db	1
   296                           
   297                           ;initializer for _MainSystemTimebaseFlag
   298  0068FB  01                 	db	1
   299                           
   300                           ;initializer for _ConnTimeout
   301  0068FC  00                 	db	0
   302  0068FD  01                 	db	1
   303  0068FE  0000               	dw	0
   304  006900  0000               	dw	0
   305  006902  0000               	dw	0
   306  006904  0000               	dw	0
   307  006906  00                 	db	0
   308                           
   309                           	psect	idataBANK3
   310  006044                     __pidataBANK3:
   311                           	opt stack 0
   312                           
   313                           ;initializer for ModemEvtParser@F9112
   314  006044  2B                 	db	43
   315  006045  43                 	db	67
   316  006046  4D                 	db	77
   317  006047  54                 	db	84
   318  006048  49                 	db	73
   319                           
   320                           ;initializer for ModemEvtParser@F9110
   321  006049  2B                 	db	43
   322  00604A  43                 	db	67
   323  00604B  4C                 	db	76
   324  00604C  49                 	db	73
   325  00604D  50                 	db	80
   326                           
   327                           ;initializer for ModemEvtParser@F9108
   328  00604E  52                 	db	82
   329  00604F  49                 	db	73
   330  006050  4E                 	db	78
   331  006051  47                 	db	71
   332                           
   333                           ;initializer for MyApp_Task@F9040
   334  006052  63                 	db	99
   335  006053  61                 	db	97
   336  006054  74                 	db	116
   337                           
   338                           ;initializer for triggerRelay@F9029
   339  006055  50                 	db	80
   340  006056  00                 	db	0
   341                           
   342                           ;initializer for Term_MainSm@TermDelay
   343  006057  01                 	db	1
   344  006058  01                 	db	1
   345  006059  0000               	dw	0
   346  00605B  0000               	dw	0
   347  00605D  0000               	dw	0
   348  00605F  0000               	dw	0
   349  006061  00                 	db	0
   350                           
   351                           ;initializer for _ConnWait
   352  006062  00                 	db	0
   353  006063  01                 	db	1
   354  006064  0000               	dw	0
   355  006066  0000               	dw	0
   356  006068  0000               	dw	0
   357  00606A  0000               	dw	0
   358  00606C  00                 	db	0
   359                           
   360                           ;initializer for SendSmsSm@SwTimer
   361  00606D  01                 	db	1
   362  00606E  01                 	db	1
   363  00606F  0000               	dw	0
   364  006071  0000               	dw	0
   365  006073  0000               	dw	0
   366  006075  0000               	dw	0
   367  006077  00                 	db	0
   368                           
   369                           ;initializer for CheckModem@Timeout
   370  006078  00                 	db	0
   371  006079  01                 	db	1
   372  00607A  0000               	dw	0
   373  00607C  0000               	dw	0
   374  00607E  0000               	dw	0
   375  006080  0000               	dw	0
   376  006082  00                 	db	0
   377                           
   378                           	psect	idataBANK4
   379  0067E2                     __pidataBANK4:
   380                           	opt stack 0
   381                           
   382                           ;initializer for ModemEvtParser@F9114
   383  0067E2  43                 	db	67
   384  0067E3  61                 	db	97
   385  0067E4  6C                 	db	108
   386  0067E5  6C                 	db	108
   387  0067E6  20                 	db	32
   388  0067E7  52                 	db	82
   389  0067E8  65                 	db	101
   390  0067E9  61                 	db	97
   391  0067EA  64                 	db	100
   392  0067EB  79                 	db	121
   393                           
   394                           ;initializer for MyApp_Task@receivedNumber
   395  0067EC  2B                 	db	43
   396  0067ED  33                 	db	51
   397  0067EE  39                 	db	57
   398  0067EF  30                 	db	48
   399  0067F0  31                 	db	49
   400  0067F1  32                 	db	50
   401  0067F2  33                 	db	51
   402  0067F3  34                 	db	52
   403  0067F4  35                 	db	53
   404  0067F5  36                 	db	54
   405  0067F6  37                 	db	55
   406  0067F7  38                 	db	56
   407  0067F8  39                 	db	57
   408                           
   409                           	psect	idataBANK5
   410  005B28                     __pidataBANK5:
   411                           	opt stack 0
   412                           
   413                           ;initializer for _TaskTable
   414  005B28  60                 	db	low _Mdm_DrvMainFn
   415  005B29  69                 	db	high _Mdm_DrvMainFn
   416  005B2A  00                 	db	0
   417  005B2B  0000               	dw	0
   418  005B2D  000A               	dw	10
   419  005B2F  00                 	db	0
   420  005B30  E0                 	db	low _I2cSlv_MainTask
   421  005B31  58                 	db	high _I2cSlv_MainTask
   422  005B32  00                 	db	0
   423  005B33  0000               	dw	0
   424  005B35  0001               	dw	1
   425  005B37  00                 	db	0
   426  005B38  78                 	db	low _Mdm_MainTask
   427  005B39  5B                 	db	high _Mdm_MainTask
   428  005B3A  00                 	db	0
   429  005B3B  0000               	dw	0
   430  005B3D  0001               	dw	1
   431  005B3F  00                 	db	0
   432  005B40  2A                 	db	low _MdmHttp_MainTask
   433  005B41  5E                 	db	high _MdmHttp_MainTask
   434  005B42  00                 	db	0
   435  005B43  0000               	dw	0
   436  005B45  0001               	dw	1
   437  005B47  00                 	db	0
   438  005B48  02                 	db	low _UsbDevice_MainTask
   439  005B49  65                 	db	high _UsbDevice_MainTask
   440  005B4A  00                 	db	0
   441  005B4B  0000               	dw	0
   442  005B4D  0001               	dw	1
   443  005B4F  00                 	db	0
   444  005B50  92                 	db	low _Wdg_MainTask
   445  005B51  65                 	db	high _Wdg_MainTask
   446  005B52  00                 	db	0
   447  005B53  0000               	dw	0
   448  005B55  0064               	dw	100
   449  005B57  00                 	db	0
   450  005B58  56                 	db	low _Led_MainTask
   451  005B59  3C                 	db	high _Led_MainTask
   452  005B5A  00                 	db	0
   453  005B5B  0000               	dw	0
   454  005B5D  0032               	dw	50
   455  005B5F  00                 	db	0
   456  005B60  94                 	db	low _Rtcm_MainTask
   457  005B61  4E                 	db	high _Rtcm_MainTask
   458  005B62  00                 	db	0
   459  005B63  0000               	dw	0
   460  005B65  0064               	dw	100
   461  005B67  00                 	db	0
   462  005B68  4C                 	db	low _Term_MainTask
   463  005B69  67                 	db	high _Term_MainTask
   464  005B6A  00                 	db	0
   465  005B6B  0000               	dw	0
   466  005B6D  0001               	dw	1
   467  005B6F  00                 	db	0
   468  005B70  BC                 	db	low _MyApp_Task
   469  005B71  0A                 	db	high _MyApp_Task
   470  005B72  00                 	db	0
   471  005B73  0000               	dw	0
   472  005B75  0064               	dw	100
   473  005B77  00                 	db	0
   474                           
   475                           	psect	mediumconst
   476  00FC10                     __pmediumconst:
   477                           	opt stack 0
   478  00FC10  00                 	db	0
   479  00FC11                     MyApp_Task@F9035:
   480                           	opt stack 0
   481  00FC11  00                 	db	0
   482  00FC12  00                 	db	0
   483  00FC13  00                 	db	0
   484  00FC14  00                 	db	0
   485  00FC15  00                 	db	0
   486  00FC16  00                 	db	0
   487  00FC17  00                 	db	0
   488  00FC18  00                 	db	0
   489  00FC19  00                 	db	0
   490  00FC1A  00                 	db	0
   491  00FC1B  00                 	db	0
   492  00FC1C  00                 	db	0
   493  00FC1D  00                 	db	0
   494  00FC1E                     __end_ofMyApp_Task@F9035:
   495                           	opt stack 0
   496  00FC1E                     _USB_SD_Ptr:
   497                           	opt stack 0
   498  00FC1E  5B                 	db	low _sd000
   499  00FC1F  FE                 	db	high _sd000
   500  00FC20  14                 	db	low _sd001
   501  00FC21  FE                 	db	high _sd001
   502  00FC22  EE                 	db	low _sd002
   503  00FC23  FD                 	db	high _sd002
   504  00FC24                     __end_of_USB_SD_Ptr:
   505                           	opt stack 0
   506  00FC24                     MyApp_Task@F9038:
   507                           	opt stack 0
   508  00FC24  4E                 	db	78
   509  00FC25  55                 	db	85
   510  00FC26  4D                 	db	77
   511  00FC27  2B                 	db	43
   512  00FC28                     __end_ofMyApp_Task@F9038:
   513                           	opt stack 0
   514  00FC28                     parseCommand@F9023:
   515                           	opt stack 0
   516  00FC28  44                 	db	68
   517  00FC29  45                 	db	69
   518  00FC2A  4C                 	db	76
   519  00FC2B                     __end_ofparseCommand@F9023:
   520                           	opt stack 0
   521  00FC2B                     parseCommand@F9021:
   522                           	opt stack 0
   523  00FC2B  41                 	db	65
   524  00FC2C  44                 	db	68
   525  00FC2D  44                 	db	68
   526  00FC2E                     __end_ofparseCommand@F9021:
   527                           	opt stack 0
   528  00FC2E                     _USB_CD_Ptr:
   529                           	opt stack 0
   530  00FC2E  AB                 	db	low _configDescriptor1
   531  00FC2F  FD                 	db	high _configDescriptor1
   532  00FC30                     __end_of_USB_CD_Ptr:
   533                           	opt stack 0
   534  00FC30                     _TaskNumber:
   535                           	opt stack 0
   536  00FC30  000A               	dw	10
   537  00FC32                     __end_of_TaskNumber:
   538                           	opt stack 0
   539  00FC32                     _MsgFormat:
   540                           	opt stack 0
   541  00FC32  48                 	db	72
   542  00FC33  6F                 	db	111
   543  00FC34  73                 	db	115
   544  00FC35  74                 	db	116
   545  00FC36  20                 	db	32
   546  00FC37  6D                 	db	109
   547  00FC38  65                 	db	101
   548  00FC39  73                 	db	115
   549  00FC3A  73                 	db	115
   550  00FC3B  61                 	db	97
   551  00FC3C  67                 	db	103
   552  00FC3D  65                 	db	101
   553  00FC3E  20                 	db	32
   554  00FC3F  66                 	db	102
   555  00FC40  6F                 	db	111
   556  00FC41  72                 	db	114
   557  00FC42  6D                 	db	109
   558  00FC43  61                 	db	97
   559  00FC44  74                 	db	116
   560  00FC45  3A                 	db	58
   561  00FC46  20                 	db	32
   562  00FC47  0D                 	db	13
   563  00FC48  0A                 	db	10
   564  00FC49  5B                 	db	91
   565  00FC4A  6F                 	db	111
   566  00FC4B  70                 	db	112
   567  00FC4C  5F                 	db	95
   568  00FC4D  74                 	db	116
   569  00FC4E  79                 	db	121
   570  00FC4F  70                 	db	112
   571  00FC50  65                 	db	101
   572  00FC51  5D                 	db	93
   573  00FC52  3A                 	db	58
   574  00FC53  5B                 	db	91
   575  00FC54  6F                 	db	111
   576  00FC55  70                 	db	112
   577  00FC56  5D                 	db	93
   578  00FC57  3A                 	db	58
   579  00FC58  5B                 	db	91
   580  00FC59  6C                 	db	108
   581  00FC5A  65                 	db	101
   582  00FC5B  6E                 	db	110
   583  00FC5C  5D                 	db	93
   584  00FC5D  3A                 	db	58
   585  00FC5E  5B                 	db	91
   586  00FC5F  61                 	db	97
   587  00FC60  64                 	db	100
   588  00FC61  64                 	db	100
   589  00FC62  72                 	db	114
   590  00FC63  5D                 	db	93
   591  00FC64  3A                 	db	58
   592  00FC65  5B                 	db	91
   593  00FC66  70                 	db	112
   594  00FC67  61                 	db	97
   595  00FC68  79                 	db	121
   596  00FC69  6C                 	db	108
   597  00FC6A  6F                 	db	111
   598  00FC6B  61                 	db	97
   599  00FC6C  64                 	db	100
   600  00FC6D  5D                 	db	93
   601  00FC6E  0D                 	db	13
   602  00FC6F  0A                 	db	10
   603  00FC70  0D                 	db	13
   604  00FC71  0A                 	db	10
   605  00FC72  5B                 	db	91
   606  00FC73  6F                 	db	111
   607  00FC74  70                 	db	112
   608  00FC75  5F                 	db	95
   609  00FC76  74                 	db	116
   610  00FC77  79                 	db	121
   611  00FC78  70                 	db	112
   612  00FC79  65                 	db	101
   613  00FC7A  5D                 	db	93
   614  00FC7B  20                 	db	32
   615  00FC7C  3D                 	db	61
   616  00FC7D  20                 	db	32
   617  00FC7E  53                 	db	83
   618  00FC7F  4F                 	db	79
   619  00FC80  2C                 	db	44
   620  00FC81  53                 	db	83
   621  00FC82  42                 	db	66
   622  00FC83  0D                 	db	13
   623  00FC84  0A                 	db	10
   624  00FC85  5B                 	db	91
   625  00FC86  6F                 	db	111
   626  00FC87  70                 	db	112
   627  00FC88  5D                 	db	93
   628  00FC89  20                 	db	32
   629  00FC8A  3D                 	db	61
   630  00FC8B  20                 	db	32
   631  00FC8C  52                 	db	82
   632  00FC8D  3A                 	db	58
   633  00FC8E  20                 	db	32
   634  00FC8F  72                 	db	114
   635  00FC90  65                 	db	101
   636  00FC91  61                 	db	97
   637  00FC92  64                 	db	100
   638  00FC93  2C                 	db	44
   639  00FC94  57                 	db	87
   640  00FC95  3A                 	db	58
   641  00FC96  20                 	db	32
   642  00FC97  77                 	db	119
   643  00FC98  72                 	db	114
   644  00FC99  69                 	db	105
   645  00FC9A  74                 	db	116
   646  00FC9B  65                 	db	101
   647  00FC9C  0D                 	db	13
   648  00FC9D  0A                 	db	10
   649  00FC9E  5B                 	db	91
   650  00FC9F  6C                 	db	108
   651  00FCA0  65                 	db	101
   652  00FCA1  6E                 	db	110
   653  00FCA2  5D                 	db	93
   654  00FCA3  20                 	db	32
   655  00FCA4  3D                 	db	61
   656  00FCA5  20                 	db	32
   657  00FCA6  32                 	db	50
   658  00FCA7  20                 	db	32
   659  00FCA8  62                 	db	98
   660  00FCA9  79                 	db	121
   661  00FCAA  74                 	db	116
   662  00FCAB  65                 	db	101
   663  00FCAC  20                 	db	32
   664  00FCAD  41                 	db	65
   665  00FCAE  53                 	db	83
   666  00FCAF  43                 	db	67
   667  00FCB0  49                 	db	73
   668  00FCB1  49                 	db	73
   669  00FCB2  0D                 	db	13
   670  00FCB3  0A                 	db	10
   671  00FCB4  5B                 	db	91
   672  00FCB5  61                 	db	97
   673  00FCB6  64                 	db	100
   674  00FCB7  64                 	db	100
   675  00FCB8  72                 	db	114
   676  00FCB9  5D                 	db	93
   677  00FCBA  20                 	db	32
   678  00FCBB  3D                 	db	61
   679  00FCBC  20                 	db	32
   680  00FCBD  32                 	db	50
   681  00FCBE  20                 	db	32
   682  00FCBF  62                 	db	98
   683  00FCC0  79                 	db	121
   684  00FCC1  74                 	db	116
   685  00FCC2  65                 	db	101
   686  00FCC3  20                 	db	32
   687  00FCC4  41                 	db	65
   688  00FCC5  53                 	db	83
   689  00FCC6  43                 	db	67
   690  00FCC7  49                 	db	73
   691  00FCC8  49                 	db	73
   692  00FCC9  0D                 	db	13
   693  00FCCA  0A                 	db	10
   694  00FCCB  5B                 	db	91
   695  00FCCC  70                 	db	112
   696  00FCCD  61                 	db	97
   697  00FCCE  79                 	db	121
   698  00FCCF  6C                 	db	108
   699  00FCD0  6F                 	db	111
   700  00FCD1  61                 	db	97
   701  00FCD2  64                 	db	100
   702  00FCD3  5D                 	db	93
   703  00FCD4  20                 	db	32
   704  00FCD5  3D                 	db	61
   705  00FCD6  20                 	db	32
   706  00FCD7  6D                 	db	109
   707  00FCD8  61                 	db	97
   708  00FCD9  78                 	db	120
   709  00FCDA  20                 	db	32
   710  00FCDB  32                 	db	50
   711  00FCDC  30                 	db	48
   712  00FCDD  20                 	db	32
   713  00FCDE  62                 	db	98
   714  00FCDF  79                 	db	121
   715  00FCE0  74                 	db	116
   716  00FCE1  65                 	db	101
   717  00FCE2  20                 	db	32
   718  00FCE3  41                 	db	65
   719  00FCE4  53                 	db	83
   720  00FCE5  43                 	db	67
   721  00FCE6  49                 	db	73
   722  00FCE7  49                 	db	73
   723  00FCE8  0D                 	db	13
   724  00FCE9  0A                 	db	10
   725  00FCEA  0D                 	db	13
   726  00FCEB  0A                 	db	10
   727  00FCEC  54                 	db	84
   728  00FCED  65                 	db	101
   729  00FCEE  72                 	db	114
   730  00FCEF  6D                 	db	109
   731  00FCF0  69                 	db	105
   732  00FCF1  6E                 	db	110
   733  00FCF2  61                 	db	97
   734  00FCF3  6C                 	db	108
   735  00FCF4  20                 	db	32
   736  00FCF5  4D                 	db	77
   737  00FCF6  6F                 	db	111
   738  00FCF7  64                 	db	100
   739  00FCF8  65                 	db	101
   740  00FCF9  3A                 	db	58
   741  00FCFA  20                 	db	32
   742  00FCFB  43                 	db	67
   743  00FCFC  4F                 	db	79
   744  00FCFD  4D                 	db	77
   745  00FCFE  4D                 	db	77
   746  00FCFF  41                 	db	65
   747  00FD00  4E                 	db	78
   748  00FD01  44                 	db	68
   749  00FD02  20                 	db	32
   750  00FD03  4D                 	db	77
   751  00FD04  4F                 	db	79
   752  00FD05  44                 	db	68
   753  00FD06  45                 	db	69
   754  00FD07  0D                 	db	13
   755  00FD08  0A                 	db	10
   756  00FD09  4D                 	db	77
   757  00FD0A  6F                 	db	111
   758  00FD0B  64                 	db	100
   759  00FD0C  65                 	db	101
   760  00FD0D  6D                 	db	109
   761  00FD0E  20                 	db	32
   762  00FD0F  54                 	db	84
   763  00FD10  79                 	db	121
   764  00FD11  70                 	db	112
   765  00FD12  65                 	db	101
   766  00FD13  3A                 	db	58
   767  00FD14  20                 	db	32
   768  00FD15  47                 	db	71
   769  00FD16  53                 	db	83
   770  00FD17  4D                 	db	77
   771  00FD18  2F                 	db	47
   772  00FD19  47                 	db	71
   773  00FD1A  50                 	db	80
   774  00FD1B  52                 	db	82
   775  00FD1C  53                 	db	83
   776  00FD1D  0D                 	db	13
   777  00FD1E  0A                 	db	10
   778  00FD1F  0D                 	db	13
   779  00FD20  0A                 	db	10
   780  00FD21  00                 	db	0
   781  00FD22                     __end_of_MsgFormat:
   782                           	opt stack 0
   783  00FD22                     _Welcome:
   784                           	opt stack 0
   785  00FD22  2A                 	db	42
   786  00FD23  2A                 	db	42
   787  00FD24  2A                 	db	42
   788  00FD25  2A                 	db	42
   789  00FD26  2A                 	db	42
   790  00FD27  2A                 	db	42
   791  00FD28  2A                 	db	42
   792  00FD29  2A                 	db	42
   793  00FD2A  2A                 	db	42
   794  00FD2B  2A                 	db	42
   795  00FD2C  2A                 	db	42
   796  00FD2D  2A                 	db	42
   797  00FD2E  2A                 	db	42
   798  00FD2F  2A                 	db	42
   799  00FD30  2A                 	db	42
   800  00FD31  2A                 	db	42
   801  00FD32  2A                 	db	42
   802  00FD33  2A                 	db	42
   803  00FD34  2A                 	db	42
   804  00FD35  2A                 	db	42
   805  00FD36  2A                 	db	42
   806  00FD37  2A                 	db	42
   807  00FD38  2A                 	db	42
   808  00FD39  2A                 	db	42
   809  00FD3A  2A                 	db	42
   810  00FD3B  2A                 	db	42
   811  00FD3C  2A                 	db	42
   812  00FD3D  2A                 	db	42
   813  00FD3E  2A                 	db	42
   814  00FD3F  2A                 	db	42
   815  00FD40  2A                 	db	42
   816  00FD41  2A                 	db	42
   817  00FD42  2A                 	db	42
   818  00FD43  2A                 	db	42
   819  00FD44  2A                 	db	42
   820  00FD45  2A                 	db	42
   821  00FD46  2A                 	db	42
   822  00FD47  2A                 	db	42
   823  00FD48  2A                 	db	42
   824  00FD49  2A                 	db	42
   825  00FD4A  2A                 	db	42
   826  00FD4B  2A                 	db	42
   827  00FD4C  2A                 	db	42
   828  00FD4D  2A                 	db	42
   829  00FD4E  2A                 	db	42
   830  00FD4F  2A                 	db	42
   831  00FD50  2A                 	db	42
   832  00FD51  2A                 	db	42
   833  00FD52  2A                 	db	42
   834  00FD53  0D                 	db	13
   835  00FD54  0A                 	db	10
   836  00FD55  20                 	db	32
   837  00FD56  20                 	db	32
   838  00FD57  20                 	db	32
   839  00FD58  20                 	db	32
   840  00FD59  20                 	db	32
   841  00FD5A  20                 	db	32
   842  00FD5B  20                 	db	32
   843  00FD5C  20                 	db	32
   844  00FD5D  20                 	db	32
   845  00FD5E  20                 	db	32
   846  00FD5F  20                 	db	32
   847  00FD60  20                 	db	32
   848  00FD61  20                 	db	32
   849  00FD62  20                 	db	32
   850  00FD63  20                 	db	32
   851  00FD64  20                 	db	32
   852  00FD65  20                 	db	32
   853  00FD66  20                 	db	32
   854  00FD67  4D                 	db	77
   855  00FD68  45                 	db	69
   856  00FD69  52                 	db	82
   857  00FD6A  43                 	db	67
   858  00FD6B  55                 	db	85
   859  00FD6C  52                 	db	82
   860  00FD6D  59                 	db	89
   861  00FD6E  20                 	db	32
   862  00FD6F  53                 	db	83
   863  00FD70  59                 	db	89
   864  00FD71  53                 	db	83
   865  00FD72  54                 	db	84
   866  00FD73  45                 	db	69
   867  00FD74  4D                 	db	77
   868  00FD75  0D                 	db	13
   869  00FD76  0A                 	db	10
   870  00FD77  2A                 	db	42
   871  00FD78  2A                 	db	42
   872  00FD79  2A                 	db	42
   873  00FD7A  2A                 	db	42
   874  00FD7B  2A                 	db	42
   875  00FD7C  2A                 	db	42
   876  00FD7D  2A                 	db	42
   877  00FD7E  2A                 	db	42
   878  00FD7F  2A                 	db	42
   879  00FD80  2A                 	db	42
   880  00FD81  2A                 	db	42
   881  00FD82  2A                 	db	42
   882  00FD83  2A                 	db	42
   883  00FD84  2A                 	db	42
   884  00FD85  2A                 	db	42
   885  00FD86  2A                 	db	42
   886  00FD87  2A                 	db	42
   887  00FD88  2A                 	db	42
   888  00FD89  2A                 	db	42
   889  00FD8A  2A                 	db	42
   890  00FD8B  2A                 	db	42
   891  00FD8C  2A                 	db	42
   892  00FD8D  2A                 	db	42
   893  00FD8E  2A                 	db	42
   894  00FD8F  2A                 	db	42
   895  00FD90  2A                 	db	42
   896  00FD91  2A                 	db	42
   897  00FD92  2A                 	db	42
   898  00FD93  2A                 	db	42
   899  00FD94  2A                 	db	42
   900  00FD95  2A                 	db	42
   901  00FD96  2A                 	db	42
   902  00FD97  2A                 	db	42
   903  00FD98  2A                 	db	42
   904  00FD99  2A                 	db	42
   905  00FD9A  2A                 	db	42
   906  00FD9B  2A                 	db	42
   907  00FD9C  2A                 	db	42
   908  00FD9D  2A                 	db	42
   909  00FD9E  2A                 	db	42
   910  00FD9F  2A                 	db	42
   911  00FDA0  2A                 	db	42
   912  00FDA1  2A                 	db	42
   913  00FDA2  2A                 	db	42
   914  00FDA3  2A                 	db	42
   915  00FDA4  2A                 	db	42
   916  00FDA5  2A                 	db	42
   917  00FDA6  2A                 	db	42
   918  00FDA7  2A                 	db	42
   919  00FDA8  0D                 	db	13
   920  00FDA9  0A                 	db	10
   921  00FDAA  00                 	db	0
   922  00FDAB                     __end_of_Welcome:
   923                           	opt stack 0
   924  00FDAB                     _configDescriptor1:
   925                           	opt stack 0
   926  00FDAB  09                 	db	9
   927  00FDAC  02                 	db	2
   928  00FDAD  43                 	db	67
   929  00FDAE  00                 	db	0
   930  00FDAF  02                 	db	2
   931  00FDB0  01                 	db	1
   932  00FDB1  00                 	db	0
   933  00FDB2  C0                 	db	192
   934  00FDB3  32                 	db	50
   935  00FDB4  09                 	db	9
   936  00FDB5  04                 	db	4
   937  00FDB6  00                 	db	0
   938  00FDB7  00                 	db	0
   939  00FDB8  01                 	db	1
   940  00FDB9  02                 	db	2
   941  00FDBA  02                 	db	2
   942  00FDBB  01                 	db	1
   943  00FDBC  00                 	db	0
   944  00FDBD  05                 	db	5
   945  00FDBE  24                 	db	36
   946  00FDBF  00                 	db	0
   947  00FDC0  10                 	db	16
   948  00FDC1  01                 	db	1
   949  00FDC2  04                 	db	4
   950  00FDC3  24                 	db	36
   951  00FDC4  02                 	db	2
   952  00FDC5  02                 	db	2
   953  00FDC6  05                 	db	5
   954  00FDC7  24                 	db	36
   955  00FDC8  06                 	db	6
   956  00FDC9  00                 	db	0
   957  00FDCA  01                 	db	1
   958  00FDCB  05                 	db	5
   959  00FDCC  24                 	db	36
   960  00FDCD  01                 	db	1
   961  00FDCE  00                 	db	0
   962  00FDCF  01                 	db	1
   963  00FDD0  07                 	db	7
   964  00FDD1  05                 	db	5
   965  00FDD2  81                 	db	129
   966  00FDD3  03                 	db	3
   967  00FDD4  08                 	db	8
   968  00FDD5  00                 	db	0
   969  00FDD6  02                 	db	2
   970  00FDD7  09                 	db	9
   971  00FDD8  04                 	db	4
   972  00FDD9  01                 	db	1
   973  00FDDA  00                 	db	0
   974  00FDDB  02                 	db	2
   975  00FDDC  0A                 	db	10
   976  00FDDD  00                 	db	0
   977  00FDDE  00                 	db	0
   978  00FDDF  00                 	db	0
   979  00FDE0  07                 	db	7
   980  00FDE1  05                 	db	5
   981  00FDE2  02                 	db	2
   982  00FDE3  02                 	db	2
   983  00FDE4  40                 	db	64
   984  00FDE5  00                 	db	0
   985  00FDE6  00                 	db	0
   986  00FDE7  07                 	db	7
   987  00FDE8  05                 	db	5
   988  00FDE9  82                 	db	130
   989  00FDEA  02                 	db	2
   990  00FDEB  40                 	db	64
   991  00FDEC  00                 	db	0
   992  00FDED  00                 	db	0
   993  00FDEE                     __end_of_configDescriptor1:
   994                           	opt stack 0
   995  00FDEE                     _sd002:
   996                           	opt stack 0
   997  00FDEE  26                 	db	38
   998  00FDEF  03                 	db	3
   999  00FDF0  0054               	dw	84
  1000  00FDF2  0065               	dw	101
  1001  00FDF4  0072               	dw	114
  1002  00FDF6  006D               	dw	109
  1003  00FDF8  0069               	dw	105
  1004  00FDFA  006E               	dw	110
  1005  00FDFC  0061               	dw	97
  1006  00FDFE  006C               	dw	108
  1007  00FE00  0020               	dw	32
  1008  00FE02  0049               	dw	73
  1009  00FE04  006E               	dw	110
  1010  00FE06  0074               	dw	116
  1011  00FE08  0065               	dw	101
  1012  00FE0A  0072               	dw	114
  1013  00FE0C  0066               	dw	102
  1014  00FE0E  0061               	dw	97
  1015  00FE10  0063               	dw	99
  1016  00FE12  0065               	dw	101
  1017  00FE14                     __end_of_sd002:
  1018                           	opt stack 0
  1019  00FE14                     _sd001:
  1020                           	opt stack 0
  1021  00FE14  1E                 	db	30
  1022  00FE15  03                 	db	3
  1023  00FE16  004D               	dw	77
  1024  00FE18  0065               	dw	101
  1025  00FE1A  0072               	dw	114
  1026  00FE1C  0063               	dw	99
  1027  00FE1E  0075               	dw	117
  1028  00FE20  0072               	dw	114
  1029  00FE22  0079               	dw	121
  1030  00FE24  0020               	dw	32
  1031  00FE26  0053               	dw	83
  1032  00FE28  0079               	dw	121
  1033  00FE2A  0073               	dw	115
  1034  00FE2C  0074               	dw	116
  1035  00FE2E  0065               	dw	101
  1036  00FE30  006D               	dw	109
  1037  00FE32                     __end_of_sd001:
  1038                           	opt stack 0
  1039  00FE32                     _MsgReady:
  1040                           	opt stack 0
  1041  00FE32  0D                 	db	13
  1042  00FE33  0A                 	db	10
  1043  00FE34  53                 	db	83
  1044  00FE35  79                 	db	121
  1045  00FE36  73                 	db	115
  1046  00FE37  74                 	db	116
  1047  00FE38  65                 	db	101
  1048  00FE39  6D                 	db	109
  1049  00FE3A  20                 	db	32
  1050  00FE3B  52                 	db	82
  1051  00FE3C  65                 	db	101
  1052  00FE3D  61                 	db	97
  1053  00FE3E  64                 	db	100
  1054  00FE3F  79                 	db	121
  1055  00FE40  2E                 	db	46
  1056  00FE41  2E                 	db	46
  1057  00FE42  2E                 	db	46
  1058  00FE43  20                 	db	32
  1059  00FE44  0D                 	db	13
  1060  00FE45  0A                 	db	10
  1061  00FE46  0D                 	db	13
  1062  00FE47  0A                 	db	10
  1063  00FE48  00                 	db	0
  1064  00FE49                     __end_of_MsgReady:
  1065                           	opt stack 0
  1066  00FE49                     _device_dsc:
  1067                           	opt stack 0
  1068  00FE49  12                 	db	18
  1069  00FE4A  01                 	db	1
  1070  00FE4B  0200               	dw	512
  1071  00FE4D  02                 	db	2
  1072  00FE4E  00                 	db	0
  1073  00FE4F  00                 	db	0
  1074  00FE50  08                 	db	8
  1075  00FE51  04D8               	dw	1240
  1076  00FE53  000A               	dw	10
  1077  00FE55  0100               	dw	256
  1078  00FE57  01                 	db	1
  1079  00FE58  02                 	db	2
  1080  00FE59  00                 	db	0
  1081  00FE5A  01                 	db	1
  1082  00FE5B                     __end_of_device_dsc:
  1083                           	opt stack 0
  1084  00FE5B                     _sd000:
  1085                           	opt stack 0
  1086  00FE5B  04                 	db	4
  1087  00FE5C  03                 	db	3
  1088  00FE5D  0409               	dw	1033
  1089  00FE5F                     __end_of_sd000:
  1090                           	opt stack 0
  1091  0000                     _RPINR1	set	3815
  1092  0000                     _UEP0bits	set	3878
  1093  0000                     _UIEbits	set	3894
  1094  0000                     _UADDR	set	3896
  1095  0000                     _UIE	set	3894
  1096  0000                     _UEIE	set	3895
  1097  0000                     _UCFG	set	3897
  1098  0000                     _RTCCAL	set	3902
  1099  0000                     _PADCFG1bits	set	3900
  1100  0000                     _RTCCFGbits	set	3903
  1101  0000                     _DSCONLbits	set	3916
  1102  0000                     _DSGPR1	set	3919
  1103  0000                     _DSGPR0	set	3918
  1104  0000                     _DSCONHbits	set	3917
  1105  0000                     _ANCON1bits	set	3913
  1106  0000                     _UEP1	set	3879
  1107  0000                     _UEP0	set	3878
  1108  0000                     _T1CONbits	set	4045
  1109  0000                     _PORTDbits	set	3971
  1110  0000                     _USTAT	set	3940
  1111  0000                     _PIR2bits	set	4001
  1112  0000                     _UCON	set	3941
  1113  0000                     _UIRbits	set	3938
  1114  0000                     _UCONbits	set	3941
  1115  0000                     _UIR	set	3938
  1116  0000                     _UEIR	set	3939
  1117  0000                     _PIE2bits	set	4000
  1118  0000                     _BAUDCON2	set	3964
  1119  0000                     _RCSTA2	set	3996
  1120  0000                     _BAUDCON1	set	3966
  1121  0000                     _RCSTA1	set	4012
  1122  0000                     _TRISCbits	set	3988
  1123  0000                     _TXSTA2	set	4008
  1124  0000                     _TXSTA1	set	4013
  1125  0000                     _RCREG2	set	4010
  1126  0000                     _RCREG1	set	4015
  1127  0000                     _TXREG2	set	4009
  1128  0000                     _TXREG1	set	4014
  1129  0000                     _SPBRG2	set	4011
  1130  0000                     _SPBRGH2	set	3965
  1131  0000                     _SPBRG1	set	4016
  1132  0000                     _SPBRGH1	set	3967
  1133  0000                     _PR4	set	3959
  1134  0000                     _PR2	set	4043
  1135  0000                     _PIE1bits	set	3997
  1136  0000                     _IPR1bits	set	3999
  1137  0000                     _T4CONbits	set	3958
  1138  0000                     _T2CONbits	set	4042
  1139  0000                     _ALRMVALL	set	3982
  1140  0000                     _ALRMVALH	set	3983
  1141  0000                     _RTCVALH	set	3993
  1142  0000                     _RTCVALL	set	3992
  1143  0000                     _ALRMRPTbits	set	3984
  1144  0000                     _ALRMCFGbits	set	3985
  1145  0000                     _PIE3bits	set	4003
  1146  0000                     _IPR3bits	set	4005
  1147  0000                     _OSCCONbits	set	4051
  1148  0000                     _PORTEbits	set	3972
  1149  0000                     _TRISEbits	set	3990
  1150  0000                     _WDTCONbits	set	4032
  1151  0000                     _INTCON2bits	set	4081
  1152  0000                     _TRISBbits	set	3987
  1153  0000                     _OSCTUNEbits	set	3995
  1154  0000                     _SSP2CON1	set	3954
  1155  0000                     _TRISDbits	set	3989
  1156  0000                     _SSP2BUF	set	3957
  1157  0000                     _SSP2CON2bits	set	3953
  1158  0000                     _SSP2STAT	set	3955
  1159  0000                     _SSP2CON2	set	3953
  1160  0000                     _SSP2ADD	set	3956
  1161  0000                     _PIR1bits	set	3998
  1162  0000                     _PIR3bits	set	4004
  1163  0000                     _INTCON3bits	set	4080
  1164  0000                     _INTCONbits	set	4082
  1165  0000                     _RCONbits	set	4048
  1166  00FE5F                     STR_21:
  1167  00FE5F  20                 	db	32
  1168  00FE60  4C                 	db	76	;'L'
  1169  00FE61  61                 	db	97	;'a'
  1170  00FE62  7A                 	db	122	;'z'
  1171  00FE63  79                 	db	121	;'y'
  1172  00FE64  20                 	db	32
  1173  00FE65  64                 	db	100	;'d'
  1174  00FE66  65                 	db	101	;'e'
  1175  00FE67  76                 	db	118	;'v'
  1176  00FE68  69                 	db	105	;'i'
  1177  00FE69  63                 	db	99	;'c'
  1178  00FE6A  65                 	db	101	;'e'
  1179  00FE6B  2E                 	db	46
  1180  00FE6C  2E                 	db	46
  1181  00FE6D  2E                 	db	46
  1182  00FE6E  79                 	db	121	;'y'
  1183  00FE6F  6F                 	db	111	;'o'
  1184  00FE70  75                 	db	117	;'u'
  1185  00FE71  27                 	db	39
  1186  00FE72  76                 	db	118	;'v'
  1187  00FE73  65                 	db	101	;'e'
  1188  00FE74  20                 	db	32
  1189  00FE75  62                 	db	98	;'b'
  1190  00FE76  65                 	db	101	;'e'
  1191  00FE77  65                 	db	101	;'e'
  1192  00FE78  6E                 	db	110	;'n'
  1193  00FE79  20                 	db	32
  1194  00FE7A  74                 	db	116	;'t'
  1195  00FE7B  69                 	db	105	;'i'
  1196  00FE7C  6D                 	db	109	;'m'
  1197  00FE7D  65                 	db	101	;'e'
  1198  00FE7E  64                 	db	100	;'d'
  1199  00FE7F  2D                 	db	45
  1200  00FE80  6F                 	db	111	;'o'
  1201  00FE81  75                 	db	117	;'u'
  1202  00FE82  74                 	db	116	;'t'
  1203  00FE83  21                 	db	33
  1204  00FE84  21                 	db	33
  1205  00FE85  21                 	db	33
  1206  00FE86  0D                 	db	13
  1207  00FE87  0A                 	db	10
  1208  00FE88  00                 	db	0
  1209  00FE89                     STR_8:
  1210  00FE89  41                 	db	65	;'A'
  1211  00FE8A  54                 	db	84	;'T'
  1212  00FE8B  2B                 	db	43
  1213  00FE8C  53                 	db	83	;'S'
  1214  00FE8D  41                 	db	65	;'A'
  1215  00FE8E  50                 	db	80	;'P'
  1216  00FE8F  42                 	db	66	;'B'
  1217  00FE90  52                 	db	82	;'R'
  1218  00FE91  3D                 	db	61	;'='
  1219  00FE92  33                 	db	51	;'3'
  1220  00FE93  2C                 	db	44
  1221  00FE94  31                 	db	49	;'1'
  1222  00FE95  2C                 	db	44
  1223  00FE96  22                 	db	34
  1224  00FE97  43                 	db	67	;'C'
  1225  00FE98  6F                 	db	111	;'o'
  1226  00FE99  6E                 	db	110	;'n'
  1227  00FE9A  74                 	db	116	;'t'
  1228  00FE9B  79                 	db	121	;'y'
  1229  00FE9C  70                 	db	112	;'p'
  1230  00FE9D  65                 	db	101	;'e'
  1231  00FE9E  22                 	db	34
  1232  00FE9F  2C                 	db	44
  1233  00FEA0  22                 	db	34
  1234  00FEA1  47                 	db	71	;'G'
  1235  00FEA2  50                 	db	80	;'P'
  1236  00FEA3  52                 	db	82	;'R'
  1237  00FEA4  53                 	db	83	;'S'
  1238  00FEA5  22                 	db	34
  1239  00FEA6  0D                 	db	13
  1240  00FEA7  00                 	db	0
  1241  00FEA8                     STR_14:
  1242  00FEA8  41                 	db	65	;'A'
  1243  00FEA9  54                 	db	84	;'T'
  1244  00FEAA  2B                 	db	43
  1245  00FEAB  48                 	db	72	;'H'
  1246  00FEAC  54                 	db	84	;'T'
  1247  00FEAD  54                 	db	84	;'T'
  1248  00FEAE  50                 	db	80	;'P'
  1249  00FEAF  50                 	db	80	;'P'
  1250  00FEB0  41                 	db	65	;'A'
  1251  00FEB1  52                 	db	82	;'R'
  1252  00FEB2  41                 	db	65	;'A'
  1253  00FEB3  3D                 	db	61	;'='
  1254  00FEB4  22                 	db	34
  1255  00FEB5  43                 	db	67	;'C'
  1256  00FEB6  49                 	db	73	;'I'
  1257  00FEB7  44                 	db	68	;'D'
  1258  00FEB8  22                 	db	34
  1259  00FEB9  2C                 	db	44
  1260  00FEBA  31                 	db	49	;'1'
  1261  00FEBB  0D                 	db	13
  1262  00FEBC  00                 	db	0
  1263  00FEBD                     STR_9:
  1264  00FEBD  41                 	db	65	;'A'
  1265  00FEBE  54                 	db	84	;'T'
  1266  00FEBF  2B                 	db	43
  1267  00FEC0  53                 	db	83	;'S'
  1268  00FEC1  41                 	db	65	;'A'
  1269  00FEC2  50                 	db	80	;'P'
  1270  00FEC3  42                 	db	66	;'B'
  1271  00FEC4  52                 	db	82	;'R'
  1272  00FEC5  3D                 	db	61	;'='
  1273  00FEC6  33                 	db	51	;'3'
  1274  00FEC7  2C                 	db	44
  1275  00FEC8  31                 	db	49	;'1'
  1276  00FEC9  2C                 	db	44
  1277  00FECA  22                 	db	34
  1278  00FECB  41                 	db	65	;'A'
  1279  00FECC  50                 	db	80	;'P'
  1280  00FECD  4E                 	db	78	;'N'
  1281  00FECE  22                 	db	34
  1282  00FECF  2C                 	db	44
  1283  00FED0  22                 	db	34
  1284  00FED1  00                 	db	0
  1285  00FED2                     STR_23:
  1286  00FED2  46                 	db	70	;'F'
  1287  00FED3  72                 	db	114	;'r'
  1288  00FED4  61                 	db	97	;'a'
  1289  00FED5  6D                 	db	109	;'m'
  1290  00FED6  65                 	db	101	;'e'
  1291  00FED7  77                 	db	119	;'w'
  1292  00FED8  6F                 	db	111	;'o'
  1293  00FED9  72                 	db	114	;'r'
  1294  00FEDA  6B                 	db	107	;'k'
  1295  00FEDB  20                 	db	32
  1296  00FEDC  56                 	db	86	;'V'
  1297  00FEDD  65                 	db	101	;'e'
  1298  00FEDE  72                 	db	114	;'r'
  1299  00FEDF  73                 	db	115	;'s'
  1300  00FEE0  69                 	db	105	;'i'
  1301  00FEE1  6F                 	db	111	;'o'
  1302  00FEE2  6E                 	db	110	;'n'
  1303  00FEE3  3A                 	db	58	;':'
  1304  00FEE4  20                 	db	32
  1305  00FEE5  00                 	db	0
  1306  00FEE6                     STR_15:
  1307  00FEE6  41                 	db	65	;'A'
  1308  00FEE7  54                 	db	84	;'T'
  1309  00FEE8  2B                 	db	43
  1310  00FEE9  48                 	db	72	;'H'
  1311  00FEEA  54                 	db	84	;'T'
  1312  00FEEB  54                 	db	84	;'T'
  1313  00FEEC  50                 	db	80	;'P'
  1314  00FEED  50                 	db	80	;'P'
  1315  00FEEE  41                 	db	65	;'A'
  1316  00FEEF  52                 	db	82	;'R'
  1317  00FEF0  41                 	db	65	;'A'
  1318  00FEF1  3D                 	db	61	;'='
  1319  00FEF2  22                 	db	34
  1320  00FEF3  55                 	db	85	;'U'
  1321  00FEF4  52                 	db	82	;'R'
  1322  00FEF5  4C                 	db	76	;'L'
  1323  00FEF6  22                 	db	34
  1324  00FEF7  2C                 	db	44
  1325  00FEF8  22                 	db	34
  1326  00FEF9  00                 	db	0
  1327  00FEFA                     STR_31:
  1328  00FEFA  41                 	db	65	;'A'
  1329  00FEFB  54                 	db	84	;'T'
  1330  00FEFC  2B                 	db	43
  1331  00FEFD  43                 	db	67	;'C'
  1332  00FEFE  4D                 	db	77	;'M'
  1333  00FEFF  47                 	db	71	;'G'
  1334  00FF00  44                 	db	68	;'D'
  1335  00FF01  41                 	db	65	;'A'
  1336  00FF02  3D                 	db	61	;'='
  1337  00FF03  44                 	db	68	;'D'
  1338  00FF04  45                 	db	69	;'E'
  1339  00FF05  4C                 	db	76	;'L'
  1340  00FF06  20                 	db	32
  1341  00FF07  41                 	db	65	;'A'
  1342  00FF08  4C                 	db	76	;'L'
  1343  00FF09  4C                 	db	76	;'L'
  1344  00FF0A  0D                 	db	13
  1345  00FF0B  0A                 	db	10
  1346  00FF0C  00                 	db	0
  1347  00FF0D                     STR_27:
  1348  00FF0D  42                 	db	66	;'B'
  1349  00FF0E  75                 	db	117	;'u'
  1350  00FF0F  69                 	db	105	;'i'
  1351  00FF10  6C                 	db	108	;'l'
  1352  00FF11  64                 	db	100	;'d'
  1353  00FF12  20                 	db	32
  1354  00FF13  44                 	db	68	;'D'
  1355  00FF14  61                 	db	97	;'a'
  1356  00FF15  74                 	db	116	;'t'
  1357  00FF16  65                 	db	101	;'e'
  1358  00FF17  3A                 	db	58	;':'
  1359  00FF18  20                 	db	32
  1360  00FF19  25                 	db	37
  1361  00FF1A  73                 	db	115	;'s'
  1362  00FF1B  0D                 	db	13
  1363  00FF1C  0A                 	db	10
  1364  00FF1D  00                 	db	0
  1365  00FF1E                     STR_16:
  1366  00FF1E  41                 	db	65	;'A'
  1367  00FF1F  54                 	db	84	;'T'
  1368  00FF20  2B                 	db	43
  1369  00FF21  48                 	db	72	;'H'
  1370  00FF22  54                 	db	84	;'T'
  1371  00FF23  54                 	db	84	;'T'
  1372  00FF24  50                 	db	80	;'P'
  1373  00FF25  41                 	db	65	;'A'
  1374  00FF26  43                 	db	67	;'C'
  1375  00FF27  54                 	db	84	;'T'
  1376  00FF28  49                 	db	73	;'I'
  1377  00FF29  4F                 	db	79	;'O'
  1378  00FF2A  4E                 	db	78	;'N'
  1379  00FF2B  3D                 	db	61	;'='
  1380  00FF2C  30                 	db	48	;'0'
  1381  00FF2D  0D                 	db	13
  1382  00FF2E  00                 	db	0
  1383  00FF2F                     STR_29:
  1384  00FF2F  41                 	db	65	;'A'
  1385  00FF30  54                 	db	84	;'T'
  1386  00FF31  2B                 	db	43
  1387  00FF32  43                 	db	67	;'C'
  1388  00FF33  4D                 	db	77	;'M'
  1389  00FF34  47                 	db	71	;'G'
  1390  00FF35  44                 	db	68	;'D'
  1391  00FF36  3D                 	db	61	;'='
  1392  00FF37  31                 	db	49	;'1'
  1393  00FF38  2C                 	db	44
  1394  00FF39  30                 	db	48	;'0'
  1395  00FF3A  0D                 	db	13
  1396  00FF3B  0A                 	db	10
  1397  00FF3C  00                 	db	0
  1398  00FF3D  41                 	db	65	;'A'
  1399  00FF3E  54                 	db	84	;'T'
  1400  00FF3F  2B                 	db	43
  1401  00FF40  48                 	db	72	;'H'
  1402  00FF41  54                 	db	84	;'T'
  1403  00FF42  54                 	db	84	;'T'
  1404  00FF43  50                 	db	80	;'P'
  1405  00FF44  53                 	db	83	;'S'
  1406  00FF45  53                 	db	83	;'S'
  1407  00FF46  4C                 	db	76	;'L'
  1408  00FF47  3D                 	db	61	;'='
  1409  00FF48  30                 	db	48	;'0'
  1410  00FF49  0D                 	db	13
  1411  00FF4A  00                 	db	0
  1412  00FF4B                     STR_10:
  1413  00FF4B  41                 	db	65	;'A'
  1414  00FF4C  54                 	db	84	;'T'
  1415  00FF4D  2B                 	db	43
  1416  00FF4E  53                 	db	83	;'S'
  1417  00FF4F  41                 	db	65	;'A'
  1418  00FF50  50                 	db	80	;'P'
  1419  00FF51  42                 	db	66	;'B'
  1420  00FF52  52                 	db	82	;'R'
  1421  00FF53  3D                 	db	61	;'='
  1422  00FF54  31                 	db	49	;'1'
  1423  00FF55  2C                 	db	44
  1424  00FF56  31                 	db	49	;'1'
  1425  00FF57  0D                 	db	13
  1426  00FF58  00                 	db	0
  1427  00FF59                     STR_11:
  1428  00FF59  41                 	db	65	;'A'
  1429  00FF5A  54                 	db	84	;'T'
  1430  00FF5B  2B                 	db	43
  1431  00FF5C  53                 	db	83	;'S'
  1432  00FF5D  41                 	db	65	;'A'
  1433  00FF5E  50                 	db	80	;'P'
  1434  00FF5F  42                 	db	66	;'B'
  1435  00FF60  52                 	db	82	;'R'
  1436  00FF61  3D                 	db	61	;'='
  1437  00FF62  32                 	db	50	;'2'
  1438  00FF63  2C                 	db	44
  1439  00FF64  31                 	db	49	;'1'
  1440  00FF65  0D                 	db	13
  1441  00FF66  00                 	db	0
  1442  00FF67                     STR_13:
  1443  00FF67  41                 	db	65	;'A'
  1444  00FF68  54                 	db	84	;'T'
  1445  00FF69  2B                 	db	43
  1446  00FF6A  48                 	db	72	;'H'
  1447  00FF6B  54                 	db	84	;'T'
  1448  00FF6C  54                 	db	84	;'T'
  1449  00FF6D  50                 	db	80	;'P'
  1450  00FF6E  53                 	db	83	;'S'
  1451  00FF6F  53                 	db	83	;'S'
  1452  00FF70  4C                 	db	76	;'L'
  1453  00FF71  3D                 	db	61	;'='
  1454  00FF72  31                 	db	49	;'1'
  1455  00FF73  0D                 	db	13
  1456  00FF74  00                 	db	0
  1457  00FF75                     STR_2:
  1458  00FF75  41                 	db	65	;'A'
  1459  00FF76  54                 	db	84	;'T'
  1460  00FF77  2B                 	db	43
  1461  00FF78  49                 	db	73	;'I'
  1462  00FF79  50                 	db	80	;'P'
  1463  00FF7A  52                 	db	82	;'R'
  1464  00FF7B  3D                 	db	61	;'='
  1465  00FF7C  39                 	db	57	;'9'
  1466  00FF7D  36                 	db	54	;'6'
  1467  00FF7E  30                 	db	48	;'0'
  1468  00FF7F  30                 	db	48	;'0'
  1469  00FF80  0D                 	db	13
  1470  00FF81  0A                 	db	10
  1471  00FF82  00                 	db	0
  1472  00FF83                     STR_17:
  1473  00FF83  41                 	db	65	;'A'
  1474  00FF84  54                 	db	84	;'T'
  1475  00FF85  2B                 	db	43
  1476  00FF86  48                 	db	72	;'H'
  1477  00FF87  54                 	db	84	;'T'
  1478  00FF88  54                 	db	84	;'T'
  1479  00FF89  50                 	db	80	;'P'
  1480  00FF8A  52                 	db	82	;'R'
  1481  00FF8B  45                 	db	69	;'E'
  1482  00FF8C  41                 	db	65	;'A'
  1483  00FF8D  44                 	db	68	;'D'
  1484  00FF8E  0D                 	db	13
  1485  00FF8F  00                 	db	0
  1486  00FF90                     STR_18:
  1487  00FF90  41                 	db	65	;'A'
  1488  00FF91  54                 	db	84	;'T'
  1489  00FF92  2B                 	db	43
  1490  00FF93  48                 	db	72	;'H'
  1491  00FF94  54                 	db	84	;'T'
  1492  00FF95  54                 	db	84	;'T'
  1493  00FF96  50                 	db	80	;'P'
  1494  00FF97  54                 	db	84	;'T'
  1495  00FF98  45                 	db	69	;'E'
  1496  00FF99  52                 	db	82	;'R'
  1497  00FF9A  4D                 	db	77	;'M'
  1498  00FF9B  0D                 	db	13
  1499  00FF9C  00                 	db	0
  1500  00FF9D                     STR_12:
  1501  00FF9D  41                 	db	65	;'A'
  1502  00FF9E  54                 	db	84	;'T'
  1503  00FF9F  2B                 	db	43
  1504  00FFA0  48                 	db	72	;'H'
  1505  00FFA1  54                 	db	84	;'T'
  1506  00FFA2  54                 	db	84	;'T'
  1507  00FFA3  50                 	db	80	;'P'
  1508  00FFA4  49                 	db	73	;'I'
  1509  00FFA5  4E                 	db	78	;'N'
  1510  00FFA6  49                 	db	73	;'I'
  1511  00FFA7  54                 	db	84	;'T'
  1512  00FFA8  0D                 	db	13
  1513  00FFA9  00                 	db	0
  1514  00FFAA                     STR_32:
  1515  00FFAA  41                 	db	65	;'A'
  1516  00FFAB  54                 	db	84	;'T'
  1517  00FFAC  2B                 	db	43
  1518  00FFAD  43                 	db	67	;'C'
  1519  00FFAE  4C                 	db	76	;'L'
  1520  00FFAF  49                 	db	73	;'I'
  1521  00FFB0  50                 	db	80	;'P'
  1522  00FFB1  3D                 	db	61	;'='
  1523  00FFB2  31                 	db	49	;'1'
  1524  00FFB3  0D                 	db	13
  1525  00FFB4  0A                 	db	10
  1526  00FFB5  00                 	db	0
  1527  00FFB6                     STR_28:
  1528  00FFB6  4D                 	db	77	;'M'
  1529  00FFB7  61                 	db	97	;'a'
  1530  00FFB8  72                 	db	114	;'r'
  1531  00FFB9  20                 	db	32
  1532  00FFBA  32                 	db	50	;'2'
  1533  00FFBB  37                 	db	55	;'7'
  1534  00FFBC  20                 	db	32
  1535  00FFBD  32                 	db	50	;'2'
  1536  00FFBE  30                 	db	48	;'0'
  1537  00FFBF  32                 	db	50	;'2'
  1538  00FFC0  32                 	db	50	;'2'
  1539  00FFC1  00                 	db	0
  1540  00FFC2                     STR_4:
  1541  00FFC2  41                 	db	65	;'A'
  1542  00FFC3  54                 	db	84	;'T'
  1543  00FFC4  2B                 	db	43
  1544  00FFC5  43                 	db	67	;'C'
  1545  00FFC6  4D                 	db	77	;'M'
  1546  00FFC7  47                 	db	71	;'G'
  1547  00FFC8  52                 	db	82	;'R'
  1548  00FFC9  3D                 	db	61	;'='
  1549  00FFCA  31                 	db	49	;'1'
  1550  00FFCB  0D                 	db	13
  1551  00FFCC  0A                 	db	10
  1552  00FFCD  00                 	db	0
  1553  00FFCE                     STR_5:
  1554  00FFCE  41                 	db	65	;'A'
  1555  00FFCF  54                 	db	84	;'T'
  1556  00FFD0  2B                 	db	43
  1557  00FFD1  43                 	db	67	;'C'
  1558  00FFD2  4D                 	db	77	;'M'
  1559  00FFD3  47                 	db	71	;'G'
  1560  00FFD4  53                 	db	83	;'S'
  1561  00FFD5  3D                 	db	61	;'='
  1562  00FFD6  22                 	db	34
  1563  00FFD7  00                 	db	0
  1564  00FFD8                     STR_33:
  1565  00FFD8  28                 	db	40
  1566  00FFD9  6E                 	db	110	;'n'
  1567  00FFDA  75                 	db	117	;'u'
  1568  00FFDB  6C                 	db	108	;'l'
  1569  00FFDC  6C                 	db	108	;'l'
  1570  00FFDD  29                 	db	41
  1571  00FFDE  00                 	db	0
  1572  00FFDF                     STR_3:
  1573  00FFDF  41                 	db	65	;'A'
  1574  00FFE0  54                 	db	84	;'T'
  1575  00FFE1  45                 	db	69	;'E'
  1576  00FFE2  30                 	db	48	;'0'
  1577  00FFE3  0D                 	db	13
  1578  00FFE4  0A                 	db	10
  1579  00FFE5  00                 	db	0
  1580  00FFE6                     STR_1:
  1581  00FFE6  41                 	db	65	;'A'
  1582  00FFE7  54                 	db	84	;'T'
  1583  00FFE8  0D                 	db	13
  1584  00FFE9  0A                 	db	10
  1585  00FFEA  00                 	db	0
  1586  00FFEB  41                 	db	65	;'A'
  1587  00FFEC  54                 	db	84	;'T'
  1588  00FFED  41                 	db	65	;'A'
  1589  00FFEE  0D                 	db	13
  1590  00FFEF  00                 	db	0
  1591  00FFF0                     STR_6:
  1592  00FFF0  41                 	db	65	;'A'
  1593  00FFF1  54                 	db	84	;'T'
  1594  00FFF2  48                 	db	72	;'H'
  1595  00FFF3  0D                 	db	13
  1596  00FFF4  00                 	db	0
  1597  00FFF5                     STR_24:
  1598  00FFF5  2E                 	db	46
  1599  00FFF6  00                 	db	0
  1600  0000                     
  1601                           ; #config settings
  1602  00FFF7  00                 	db	0	; dummy byte at the end
  1603  0000                     
  1604                           	psect	cinit
  1605  0024EA                     __pcinit:
  1606                           	opt stack 0
  1607  0024EA                     start_initialization:
  1608                           	opt stack 0
  1609  0024EA                     __initialization:
  1610                           	opt stack 0
  1611                           
  1612                           ; Initialize objects allocated to BANK5 (80 bytes)
  1613                           ; load TBLPTR registers with __pidataBANK5
  1614  0024EA  0E28               	movlw	low __pidataBANK5
  1615  0024EC  6EF6               	movwf	tblptrl,c
  1616  0024EE  0E5B               	movlw	high __pidataBANK5
  1617  0024F0  6EF7               	movwf	tblptrh,c
  1618  0024F2  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1619  0024F4  6EF8               	movwf	tblptru,c
  1620  0024F6  EE05  F086         	lfsr	0,__pdataBANK5
  1621  0024FA  EE10 F050          	lfsr	1,80
  1622  0024FE                     copy_data0:
  1623  0024FE  0009               	tblrd		*+
  1624  002500  CFF5 FFEE          	movff	tablat,postinc0
  1625  002504  50E5               	movf	postdec1,w,c
  1626  002506  50E1               	movf	fsr1l,w,c
  1627  002508  E1FA               	bnz	copy_data0
  1628                           
  1629                           ; Initialize objects allocated to BANK3 (63 bytes)
  1630                           ; load TBLPTR registers with __pidataBANK3
  1631  00250A  0E44               	movlw	low __pidataBANK3
  1632  00250C  6EF6               	movwf	tblptrl,c
  1633  00250E  0E60               	movlw	high __pidataBANK3
  1634  002510  6EF7               	movwf	tblptrh,c
  1635  002512  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1636  002514  6EF8               	movwf	tblptru,c
  1637  002516  EE03  F0BC         	lfsr	0,__pdataBANK3
  1638  00251A  EE10 F03F          	lfsr	1,63
  1639  00251E                     copy_data1:
  1640  00251E  0009               	tblrd		*+
  1641  002520  CFF5 FFEE          	movff	tablat,postinc0
  1642  002524  50E5               	movf	postdec1,w,c
  1643  002526  50E1               	movf	fsr1l,w,c
  1644  002528  E1FA               	bnz	copy_data1
  1645                           
  1646                           ; Initialize objects allocated to BANK2 (13 bytes)
  1647                           ; load TBLPTR registers with __pidataBANK2
  1648  00252A  0EFA               	movlw	low __pidataBANK2
  1649  00252C  6EF6               	movwf	tblptrl,c
  1650  00252E  0E68               	movlw	high __pidataBANK2
  1651  002530  6EF7               	movwf	tblptrh,c
  1652  002532  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1653  002534  6EF8               	movwf	tblptru,c
  1654  002536  EE02  F0F3         	lfsr	0,__pdataBANK2
  1655  00253A  EE10 F00D          	lfsr	1,13
  1656  00253E                     copy_data2:
  1657  00253E  0009               	tblrd		*+
  1658  002540  CFF5 FFEE          	movff	tablat,postinc0
  1659  002544  50E5               	movf	postdec1,w,c
  1660  002546  50E1               	movf	fsr1l,w,c
  1661  002548  E1FA               	bnz	copy_data2
  1662                           
  1663                           ; Initialize objects allocated to BANK1 (2 bytes)
  1664                           ; load TBLPTR registers with __pidataBANK1
  1665  00254A  0E84               	movlw	low __pidataBANK1
  1666  00254C  6EF6               	movwf	tblptrl,c
  1667  00254E  0E69               	movlw	high __pidataBANK1
  1668  002550  6EF7               	movwf	tblptrh,c
  1669  002552  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1670  002554  6EF8               	movwf	tblptru,c
  1671  002556  0009               	tblrd		*+	;fetch initializer
  1672  002558  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1673  00255C  0009               	tblrd		*+	;fetch initializer
  1674  00255E  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1675                           
  1676                           ; Initialize objects allocated to BANK4 (23 bytes)
  1677                           ; load TBLPTR registers with __pidataBANK4
  1678  002562  0EE2               	movlw	low __pidataBANK4
  1679  002564  6EF6               	movwf	tblptrl,c
  1680  002566  0E67               	movlw	high __pidataBANK4
  1681  002568  6EF7               	movwf	tblptrh,c
  1682  00256A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1683  00256C  6EF8               	movwf	tblptru,c
  1684  00256E  EE04  F0D6         	lfsr	0,__pdataBANK4
  1685  002572  EE10 F017          	lfsr	1,23
  1686  002576                     copy_data3:
  1687  002576  0009               	tblrd		*+
  1688  002578  CFF5 FFEE          	movff	tablat,postinc0
  1689  00257C  50E5               	movf	postdec1,w,c
  1690  00257E  50E1               	movf	fsr1l,w,c
  1691  002580  E1FA               	bnz	copy_data3
  1692                           
  1693                           ; Initialize objects allocated to BANK0 (2 bytes)
  1694                           ; load TBLPTR registers with __pidataBANK0
  1695  002582  0E82               	movlw	low __pidataBANK0
  1696  002584  6EF6               	movwf	tblptrl,c
  1697  002586  0E69               	movlw	high __pidataBANK0
  1698  002588  6EF7               	movwf	tblptrh,c
  1699  00258A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1700  00258C  6EF8               	movwf	tblptru,c
  1701  00258E  0009               	tblrd		*+	;fetch initializer
  1702  002590  CFF5 F0E1          	movff	tablat,__pdataBANK0
  1703  002594  0009               	tblrd		*+	;fetch initializer
  1704  002596  CFF5 F0E2          	movff	tablat,__pdataBANK0+1
  1705                           
  1706                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1707  00259A  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1708  00259E  EE13 F020          	lfsr	1,800
  1709  0025A2                     clear_0:
  1710  0025A2  6AEE               	clrf	postinc0,c
  1711  0025A4  50E5               	movf	postdec1,w,c
  1712  0025A6  50E1               	movf	fsr1l,w,c
  1713  0025A8  E1FC               	bnz	clear_0
  1714  0025AA  50E2               	movf	fsr1h,w,c
  1715  0025AC  E1FA               	bnz	clear_0
  1716                           
  1717                           ; Clear objects allocated to BANK9 (200 bytes)
  1718  0025AE  EE09  F000         	lfsr	0,__pbssBANK9
  1719  0025B2  0EC8               	movlw	200
  1720  0025B4                     clear_1:
  1721  0025B4  6AEE               	clrf	postinc0,c
  1722  0025B6  06E8               	decf	wreg,f,c
  1723  0025B8  E1FD               	bnz	clear_1
  1724                           
  1725                           ; Clear objects allocated to BANK8 (250 bytes)
  1726  0025BA  EE08  F000         	lfsr	0,__pbssBANK8
  1727  0025BE  0EFA               	movlw	250
  1728  0025C0                     clear_2:
  1729  0025C0  6AEE               	clrf	postinc0,c
  1730  0025C2  06E8               	decf	wreg,f,c
  1731  0025C4  E1FD               	bnz	clear_2
  1732                           
  1733                           ; Clear objects allocated to BANK7 (246 bytes)
  1734  0025C6  EE07  F000         	lfsr	0,__pbssBANK7
  1735  0025CA  0EF6               	movlw	246
  1736  0025CC                     clear_3:
  1737  0025CC  6AEE               	clrf	postinc0,c
  1738  0025CE  06E8               	decf	wreg,f,c
  1739  0025D0  E1FD               	bnz	clear_3
  1740                           
  1741                           ; Clear objects allocated to BANK6 (220 bytes)
  1742  0025D2  EE06  F000         	lfsr	0,__pbssBANK6
  1743  0025D6  0EDC               	movlw	220
  1744  0025D8                     clear_4:
  1745  0025D8  6AEE               	clrf	postinc0,c
  1746  0025DA  06E8               	decf	wreg,f,c
  1747  0025DC  E1FD               	bnz	clear_4
  1748                           
  1749                           ; Clear objects allocated to BANK5 (134 bytes)
  1750  0025DE  EE05  F000         	lfsr	0,__pbssBANK5
  1751  0025E2  0E86               	movlw	134
  1752  0025E4                     clear_5:
  1753  0025E4  6AEE               	clrf	postinc0,c
  1754  0025E6  06E8               	decf	wreg,f,c
  1755  0025E8  E1FD               	bnz	clear_5
  1756                           
  1757                           ; Clear objects allocated to BANK3 (188 bytes)
  1758  0025EA  EE03  F000         	lfsr	0,__pbssBANK3
  1759  0025EE  0EBC               	movlw	188
  1760  0025F0                     clear_6:
  1761  0025F0  6AEE               	clrf	postinc0,c
  1762  0025F2  06E8               	decf	wreg,f,c
  1763  0025F4  E1FD               	bnz	clear_6
  1764                           
  1765                           ; Clear objects allocated to BANK2 (43 bytes)
  1766  0025F6  EE02  F0C8         	lfsr	0,__pbssBANK2
  1767  0025FA  0E2B               	movlw	43
  1768  0025FC                     clear_7:
  1769  0025FC  6AEE               	clrf	postinc0,c
  1770  0025FE  06E8               	decf	wreg,f,c
  1771  002600  E1FD               	bnz	clear_7
  1772                           
  1773                           ; Clear objects allocated to BANK1 (53 bytes)
  1774  002602  EE01  F0C9         	lfsr	0,__pbssBANK1
  1775  002606  0E35               	movlw	53
  1776  002608                     clear_8:
  1777  002608  6AEE               	clrf	postinc0,c
  1778  00260A  06E8               	decf	wreg,f,c
  1779  00260C  E1FD               	bnz	clear_8
  1780                           
  1781                           ; Clear objects allocated to BANK4 (150 bytes)
  1782  00260E  EE04  F040         	lfsr	0,__pbssBANK4
  1783  002612  0E96               	movlw	150
  1784  002614                     clear_9:
  1785  002614  6AEE               	clrf	postinc0,c
  1786  002616  06E8               	decf	wreg,f,c
  1787  002618  E1FD               	bnz	clear_9
  1788                           
  1789                           ; Clear objects allocated to BANK0 (49 bytes)
  1790  00261A  EE00  F0B0         	lfsr	0,__pbssBANK0
  1791  00261E  0E31               	movlw	49
  1792  002620                     clear_10:
  1793  002620  6AEE               	clrf	postinc0,c
  1794  002622  06E8               	decf	wreg,f,c
  1795  002624  E1FD               	bnz	clear_10
  1796                           
  1797                           ; Clear objects allocated to COMRAM (31 bytes)
  1798  002626  EE00  F023         	lfsr	0,__pbssCOMRAM
  1799  00262A  0E1F               	movlw	31
  1800  00262C                     clear_11:
  1801  00262C  6AEE               	clrf	postinc0,c
  1802  00262E  06E8               	decf	wreg,f,c
  1803  002630  E1FD               	bnz	clear_11
  1804  002632                     end_of_initialization:
  1805                           	opt stack 0
  1806  002632                     __end_of__initialization:
  1807                           	opt stack 0
  1808  002632  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1809  002634  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1810  002636  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1811  002638  6EF8               	movwf	tblptru,c
  1812  00263A  0100               	movlb	0
  1813  00263C  EF84  F034         	goto	_main	;jump to C main() function
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           postdec1	equ	0xFE5
  1821                           fsr1h	equ	0xFE2
  1822                           fsr1l	equ	0xFE1
  1823                           
  1824                           	psect	bssCOMRAM
  1825  000023                     __pbssCOMRAM:
  1826                           	opt stack 0
  1827  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1828                           	opt stack 0
  1829  000023                     	ds	2
  1830  000025                     _USBDeferOUTDataStagePackets:
  1831                           	opt stack 0
  1832  000025                     	ds	1
  1833  000026                     _USBDeferINDataStagePackets:
  1834                           	opt stack 0
  1835  000026                     	ds	1
  1836  000027                     _USBStatusStageEnabledFlag2:
  1837                           	opt stack 0
  1838  000027                     	ds	1
  1839  000028                     _USBStatusStageEnabledFlag1:
  1840                           	opt stack 0
  1841  000028                     	ds	1
  1842  000029                     CheckModem@CheckMdmSts:
  1843                           	opt stack 0
  1844  000029                     	ds	1
  1845  00002A                     _ComChecCompleted:
  1846                           	opt stack 0
  1847  00002A                     	ds	1
  1848  00002B                     Uart_Uart1RxIsr@UartRxData:
  1849                           	opt stack 0
  1850  00002B                     	ds	1
  1851  00002C                     Uart_MdmGsmGprsReadService@RxState:
  1852                           	opt stack 0
  1853  00002C                     	ds	1
  1854  00002D                     MdmCntSm@MdmCntState:
  1855                           	opt stack 0
  1856  00002D                     	ds	1
  1857  00002E                     RiSm@MdmDrvState:
  1858                           	opt stack 0
  1859  00002E                     	ds	1
  1860  00002F                     _Mmd_RingIndicator:
  1861                           	opt stack 0
  1862  00002F                     	ds	1
  1863  000030                     I2c_ReadData@ReadStatus:
  1864                           	opt stack 0
  1865  000030                     	ds	1
  1866  000031                     I2c_ReadData@TentativeCounter:
  1867                           	opt stack 0
  1868  000031                     	ds	1
  1869  000032                     I2c_ReadData@DataCounter:
  1870                           	opt stack 0
  1871  000032                     	ds	1
  1872  000033                     I2c_ReadData@I2cReadState:
  1873                           	opt stack 0
  1874  000033                     	ds	1
  1875  000034                     I2c_WriteData@WriteStatus:
  1876                           	opt stack 0
  1877  000034                     	ds	1
  1878  000035                     I2c_WriteData@TentativeCounter:
  1879                           	opt stack 0
  1880  000035                     	ds	1
  1881  000036                     I2c_WriteData@I2cNextState:
  1882                           	opt stack 0
  1883  000036                     	ds	1
  1884  000037                     I2c_WriteData@I2cWriteState:
  1885                           	opt stack 0
  1886  000037                     	ds	1
  1887  000038                     _memorizedNumbersCount:
  1888                           	opt stack 0
  1889  000038                     	ds	1
  1890  000039                     _MdmStsReady:
  1891                           	opt stack 0
  1892  000039                     	ds	1
  1893  00003A                     _NewStringMdmTerminal:
  1894                           	opt stack 0
  1895  00003A                     	ds	1
  1896  00003B                     _NewMdmEvtParserRequest:
  1897                           	opt stack 0
  1898  00003B                     	ds	1
  1899  00003C                     _NewStringReceived:
  1900                           	opt stack 0
  1901  00003C                     	ds	1
  1902  00003D                     _MdmResetRequest:
  1903                           	opt stack 0
  1904  00003D                     	ds	1
  1905  00003E                     _CallClosedEvent:
  1906                           	opt stack 0
  1907  00003E                     	ds	1
  1908  00003F                     _IncomingCallEvent:
  1909                           	opt stack 0
  1910  00003F                     	ds	1
  1911  000040                     _NewSmsEvent:
  1912                           	opt stack 0
  1913  000040                     	ds	1
  1914  000041                     _ActivateRiDetection:
  1915                           	opt stack 0
  1916  000041                     	ds	1
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           postdec1	equ	0xFE5
  1924                           fsr1h	equ	0xFE2
  1925                           fsr1l	equ	0xFE1
  1926                           
  1927                           	psect	bssBANK0
  1928  0000B0                     __pbssBANK0:
  1929                           	opt stack 0
  1930  0000B0                     _inPipes:
  1931                           	opt stack 0
  1932  0000B0                     	ds	6
  1933  0000B6                     _pBDTEntryIn:
  1934                           	opt stack 0
  1935  0000B6                     	ds	6
  1936  0000BC                     _CDCDataOutHandle:
  1937                           	opt stack 0
  1938  0000BC                     	ds	2
  1939  0000BE                     _pBDTEntryEP0OutNext:
  1940                           	opt stack 0
  1941  0000BE                     	ds	2
  1942  0000C0                     _pBDTEntryEP0OutCurrent:
  1943                           	opt stack 0
  1944  0000C0                     	ds	2
  1945  0000C2                     _RxLen:
  1946                           	opt stack 0
  1947  0000C2                     	ds	2
  1948  0000C4                     _cdc_tx_len:
  1949                           	opt stack 0
  1950  0000C4                     	ds	1
  1951  0000C5                     _cdc_trf_state:
  1952                           	opt stack 0
  1953  0000C5                     	ds	1
  1954  0000C6                     _cdc_rx_len:
  1955                           	opt stack 0
  1956  0000C6                     	ds	1
  1957  0000C7                     _USBDeferStatusStagePacket:
  1958                           	opt stack 0
  1959  0000C7                     	ds	1
  1960  0000C8                     _USBStatusStageTimeoutCounter:
  1961                           	opt stack 0
  1962  0000C8                     	ds	1
  1963  0000C9                     _endpoint_number:
  1964                           	opt stack 0
  1965  0000C9                     	ds	1
  1966  0000CA                     _controlTransferState:
  1967                           	opt stack 0
  1968  0000CA                     	ds	1
  1969  0000CB                     _shortPacketStatus:
  1970                           	opt stack 0
  1971  0000CB                     	ds	1
  1972  0000CC                     _USBDeviceState:
  1973                           	opt stack 0
  1974  0000CC                     	ds	1
  1975  0000CD                     _I2cComSts:
  1976                           	opt stack 0
  1977  0000CD                     	ds	1
  1978  0000CE                     HttpGetMethod@GetMethodNextState:
  1979                           	opt stack 0
  1980  0000CE                     	ds	1
  1981  0000CF                     InitGprsNetwork@GprsNetInitNextState:
  1982                           	opt stack 0
  1983  0000CF                     	ds	1
  1984  0000D0                     _MdmStatus:
  1985                           	opt stack 0
  1986  0000D0                     	ds	1
  1987  0000D1                     _PhoneNumbLen:
  1988                           	opt stack 0
  1989  0000D1                     	ds	1
  1990  0000D2                     _SmsLen:
  1991                           	opt stack 0
  1992  0000D2                     	ds	1
  1993  0000D3                     _SystemState:
  1994                           	opt stack 0
  1995  0000D3                     	ds	1
  1996  0000D4                     _USTATcopy:
  1997                           	opt stack 0
  1998  0000D4                     	ds	1
  1999  0000D5                     _USBActiveConfiguration:
  2000                           	opt stack 0
  2001  0000D5                     	ds	1
  2002  0000D6                     _I2cReadDataEvt:
  2003                           	opt stack 0
  2004  0000D6                     	ds	1
  2005  0000D7                     _I2cWriteDataEvt:
  2006                           	opt stack 0
  2007  0000D7                     	ds	1
  2008  0000D8                     _GetMethod:
  2009                           	opt stack 0
  2010  0000D8                     	ds	1
  2011  0000D9                     _InitNetwork:
  2012                           	opt stack 0
  2013  0000D9                     	ds	1
  2014  0000DA                     _SmsTxtReady:
  2015                           	opt stack 0
  2016  0000DA                     	ds	1
  2017  0000DB                     _GetSmsText:
  2018                           	opt stack 0
  2019  0000DB                     	ds	1
  2020  0000DC                     _SmsEvent:
  2021                           	opt stack 0
  2022  0000DC                     	ds	1
  2023  0000DD                     _ClipEvent:
  2024                           	opt stack 0
  2025  0000DD                     	ds	1
  2026  0000DE                     _RingEvent:
  2027                           	opt stack 0
  2028  0000DE                     	ds	1
  2029  0000DF                     _SendSmsEvent:
  2030                           	opt stack 0
  2031  0000DF                     	ds	1
  2032  0000E0                     _MdmOnOffPulseRequest:
  2033                           	opt stack 0
  2034  0000E0                     	ds	1
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           postdec1	equ	0xFE5
  2042                           fsr1h	equ	0xFE2
  2043                           fsr1l	equ	0xFE1
  2044                           
  2045                           	psect	dataBANK0
  2046  0000E1                     __pdataBANK0:
  2047                           	opt stack 0
  2048  0000E1                     findEmptySpot@currentPosition:
  2049                           	opt stack 0
  2050  0000E1                     	ds	1
  2051  0000E2                     isNumberInMemory@currentPosition:
  2052                           	opt stack 0
  2053  0000E2                     	ds	1
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           postdec1	equ	0xFE5
  2061                           fsr1h	equ	0xFE2
  2062                           fsr1l	equ	0xFE1
  2063                           
  2064                           	psect	bssBANK1
  2065  0001C9                     __pbssBANK1:
  2066                           	opt stack 0
  2067  0001C9                     _outPipes:
  2068                           	opt stack 0
  2069  0001C9                     	ds	8
  2070  0001D1                     _CDCDataInHandle:
  2071                           	opt stack 0
  2072  0001D1                     	ds	2
  2073  0001D3                     initFsm@currentState:
  2074                           	opt stack 0
  2075  0001D3                     	ds	1
  2076  0001D4                     initEeprom@currentState:
  2077                           	opt stack 0
  2078  0001D4                     	ds	1
  2079  0001D5                     initGprsModem@currentState:
  2080                           	opt stack 0
  2081  0001D5                     	ds	1
  2082  0001D6                     MyApp_Task@currentState:
  2083                           	opt stack 0
  2084  0001D6                     	ds	1
  2085  0001D7                     	ds	1
  2086  0001D8                     	ds	1
  2087  0001D9                     	ds	1
  2088  0001DA                     	ds	1
  2089  0001DB                     	ds	1
  2090  0001DC                     GsmGprsTerminal@SMS:
  2091                           	opt stack 0
  2092  0001DC                     	ds	1
  2093  0001DD                     	ds	1
  2094  0001DE                     _control_signal_bitmap:
  2095                           	opt stack 0
  2096  0001DE                     	ds	1
  2097  0001DF                     _cdc_mem_type:
  2098                           	opt stack 0
  2099  0001DF                     	ds	1
  2100  0001E0                     _USBTicksSinceSuspendEnd:
  2101                           	opt stack 0
  2102  0001E0                     	ds	1
  2103  0001E1                     _BothEP0OutUOWNsSet:
  2104                           	opt stack 0
  2105  0001E1                     	ds	1
  2106  0001E2                     _USBBusIsSuspended:
  2107                           	opt stack 0
  2108  0001E2                     	ds	1
  2109  0001E3                     _RemoteWakeup:
  2110                           	opt stack 0
  2111  0001E3                     	ds	1
  2112  0001E4                     I2cSlv_QueryI2cData@Ret:
  2113                           	opt stack 0
  2114  0001E4                     	ds	1
  2115  0001E5                     I2cSlv_QueryI2cData@I2cOpState:
  2116                           	opt stack 0
  2117  0001E5                     	ds	1
  2118  0001E6                     I2cSendMsgSm@I2cComState:
  2119                           	opt stack 0
  2120  0001E6                     	ds	1
  2121  0001E7                     _I2cBusStatus:
  2122                           	opt stack 0
  2123  0001E7                     	ds	1
  2124  0001E8                     HttpGetMethod@GetMOutSts:
  2125                           	opt stack 0
  2126  0001E8                     	ds	1
  2127  0001E9                     HttpGetMethod@GetMethodState:
  2128                           	opt stack 0
  2129  0001E9                     	ds	1
  2130  0001EA                     InitGprsNetwork@GprsNetInitState:
  2131                           	opt stack 0
  2132  0001EA                     	ds	1
  2133  0001EB                     _PostMethod:
  2134                           	opt stack 0
  2135  0001EB                     	ds	1
  2136  0001EC                     _HttpGetMethodSts:
  2137                           	opt stack 0
  2138  0001EC                     	ds	1
  2139  0001ED                     _GprsNetworkSts:
  2140                           	opt stack 0
  2141  0001ED                     	ds	1
  2142  0001EE                     _ApnLenLocal:
  2143                           	opt stack 0
  2144  0001EE                     	ds	1
  2145  0001EF                     SendSmsSm@SendSms_NextState:
  2146                           	opt stack 0
  2147  0001EF                     	ds	1
  2148  0001F0                     SendSmsSm@SendSms_State:
  2149                           	opt stack 0
  2150  0001F0                     	ds	1
  2151  0001F1                     GetSmsSm@GetSmsState:
  2152                           	opt stack 0
  2153  0001F1                     	ds	1
  2154  0001F2                     ConfigureModem@NextState:
  2155                           	opt stack 0
  2156  0001F2                     	ds	1
  2157  0001F3                     ConfigureModem@MdmConfigState:
  2158                           	opt stack 0
  2159  0001F3                     	ds	1
  2160  0001F4                     TurnOnModem@TurnOnMdmState:
  2161                           	opt stack 0
  2162  0001F4                     	ds	1
  2163  0001F5                     _AlarmEvent:
  2164                           	opt stack 0
  2165  0001F5                     	ds	1
  2166  0001F6                     _Led3OutSts:
  2167                           	opt stack 0
  2168  0001F6                     	ds	1
  2169  0001F7                     _Led3Sts:
  2170                           	opt stack 0
  2171  0001F7                     	ds	1
  2172  0001F8                     _Led2OutSts:
  2173                           	opt stack 0
  2174  0001F8                     	ds	1
  2175  0001F9                     _Led2Sts:
  2176                           	opt stack 0
  2177  0001F9                     	ds	1
  2178  0001FA                     _Led1OutSts:
  2179                           	opt stack 0
  2180  0001FA                     	ds	1
  2181  0001FB                     _Led1Sts:
  2182                           	opt stack 0
  2183  0001FB                     	ds	1
  2184  0001FC                     _ReadAddress:
  2185                           	opt stack 0
  2186  0001FC                     	ds	1
  2187  0001FD                     I2cDummyTx@DummyBuffer:
  2188                           	opt stack 0
  2189  0001FD                     	ds	1
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           postdec1	equ	0xFE5
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           
  2200                           	psect	dataBANK1
  2201  0001FE                     __pdataBANK1:
  2202                           	opt stack 0
  2203  0001FE                     _isMemoryEmpty:
  2204                           	opt stack 0
  2205  0001FE                     	ds	1
  2206  0001FF                     InitGprsNetwork@GprsInitSts:
  2207                           	opt stack 0
  2208  0001FF                     	ds	1
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           
  2219                           	psect	bssBANK2
  2220  0002C8                     __pbssBANK2:
  2221                           	opt stack 0
  2222  0002C8                     _pCDCDst:
  2223                           	opt stack 0
  2224  0002C8                     	ds	3
  2225  0002CB                     _pCDCSrc:
  2226                           	opt stack 0
  2227  0002CB                     	ds	3
  2228  0002CE                     _ep_data_out:
  2229                           	opt stack 0
  2230  0002CE                     	ds	3
  2231  0002D1                     _ep_data_in:
  2232                           	opt stack 0
  2233  0002D1                     	ds	3
  2234  0002D4                     _pDst:
  2235                           	opt stack 0
  2236  0002D4                     	ds	2
  2237  0002D6                     ConfigureModem@DelayValueMs:
  2238                           	opt stack 0
  2239  0002D6                     	ds	2
  2240  0002D8                     TurnOnModem@Counter:
  2241                           	opt stack 0
  2242  0002D8                     	ds	2
  2243  0002DA                     UpdateSchFlag@InterruptCounter:
  2244                           	opt stack 0
  2245  0002DA                     	ds	2
  2246  0002DC                     MdmCntSm@Counter:
  2247                           	opt stack 0
  2248  0002DC                     	ds	2
  2249  0002DE                     RiSm@Counter:
  2250                           	opt stack 0
  2251  0002DE                     	ds	2
  2252  0002E0                     _ExtInt1IsrCallback:
  2253                           	opt stack 0
  2254  0002E0                     	ds	2
  2255  0002E2                     _ExtInt0IsrCallback:
  2256                           	opt stack 0
  2257  0002E2                     	ds	2
  2258  0002E4                     _RtccIsrCallback:
  2259                           	opt stack 0
  2260  0002E4                     	ds	2
  2261  0002E6                     _Tmr4IsrCallback:
  2262                           	opt stack 0
  2263  0002E6                     	ds	2
  2264  0002E8                     _Tmr2IsrCallback:
  2265                           	opt stack 0
  2266  0002E8                     	ds	2
  2267  0002EA                     	ds	1
  2268  0002EB                     	ds	1
  2269  0002EC                     Term_MainSm@TermMainSmState:
  2270                           	opt stack 0
  2271  0002EC                     	ds	1
  2272  0002ED                     Terminal@FormatOption:
  2273                           	opt stack 0
  2274  0002ED                     	ds	1
  2275  0002EE                     Terminal@SlaveAddr:
  2276                           	opt stack 0
  2277  0002EE                     	ds	1
  2278  0002EF                     Terminal@PackageLen:
  2279                           	opt stack 0
  2280  0002EF                     	ds	1
  2281  0002F0                     Terminal@TermState:
  2282                           	opt stack 0
  2283  0002F0                     	ds	1
  2284  0002F1                     _USBAlternateInterface:
  2285                           	opt stack 0
  2286  0002F1                     	ds	2
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	dataBANK2
  2298  0002F3                     __pdataBANK2:
  2299                           	opt stack 0
  2300  0002F3                     Terminal@EchoOption:
  2301                           	opt stack 0
  2302  0002F3                     	ds	1
  2303  0002F4                     _MainSystemTimebaseFlag:
  2304                           	opt stack 0
  2305  0002F4                     	ds	1
  2306  0002F5                     _ConnTimeout:
  2307                           	opt stack 0
  2308  0002F5                     	ds	11
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           
  2319                           	psect	bssBANK3
  2320  000300                     __pbssBANK3:
  2321                           	opt stack 0
  2322  000300                     _Rtcm_RtccAlarm:
  2323                           	opt stack 0
  2324  000300                     	ds	6
  2325  000306                     _pBDTEntryOut:
  2326                           	opt stack 0
  2327  000306                     	ds	6
  2328  00030C                     _BaudRateGen:
  2329                           	opt stack 0
  2330  00030C                     	ds	4
  2331  000310                     _USB1msTickCount:
  2332                           	opt stack 0
  2333  000310                     	ds	4
  2334  000314                     _OsTmr_OsTickCounter:
  2335                           	opt stack 0
  2336  000314                     	ds	4
  2337  000318                     	ds	2
  2338  00031A                     _UsbMasterPhoneNumberLen:
  2339                           	opt stack 0
  2340  00031A                     	ds	2
  2341  00031C                     _ApnLocal:
  2342                           	opt stack 0
  2343  00031C                     	ds	2
  2344  00031E                     ConfigureModem@DelayCounter:
  2345                           	opt stack 0
  2346  00031E                     	ds	2
  2347  000320                     _UartConfig:
  2348                           	opt stack 0
  2349  000320                     	ds	21
  2350  000335                     _callerNumber:
  2351                           	opt stack 0
  2352  000335                     	ds	13
  2353  000342                     I2cSlv_QueryI2cData@TimeoutTimer:
  2354                           	opt stack 0
  2355  000342                     	ds	11
  2356  00034D                     _I2cConfig:
  2357                           	opt stack 0
  2358  00034D                     	ds	10
  2359  000357                     _Led3Blink:
  2360                           	opt stack 0
  2361  000357                     	ds	9
  2362  000360                     _Led2Blink:
  2363                           	opt stack 0
  2364  000360                     	ds	9
  2365  000369                     _Led1Blink:
  2366                           	opt stack 0
  2367  000369                     	ds	9
  2368  000372                     _dummy_encapsulated_cmd_response:
  2369                           	opt stack 0
  2370  000372                     	ds	8
  2371  00037A                     _line_coding:
  2372                           	opt stack 0
  2373  00037A                     	ds	7
  2374  000381                     _Led3Pulse:
  2375                           	opt stack 0
  2376  000381                     	ds	6
  2377  000387                     _Led2Pulse:
  2378                           	opt stack 0
  2379  000387                     	ds	6
  2380  00038D                     _Led1Pulse:
  2381                           	opt stack 0
  2382  00038D                     	ds	6
  2383  000393                     _I2cRxPacket:
  2384                           	opt stack 0
  2385  000393                     	ds	6
  2386  000399                     _memoryPreamble:
  2387                           	opt stack 0
  2388  000399                     	ds	5
  2389  00039E                     _I2cTxPacket:
  2390                           	opt stack 0
  2391  00039E                     	ds	5
  2392  0003A3                     _HttpGetDataLocal:
  2393                           	opt stack 0
  2394  0003A3                     	ds	5
  2395  0003A8                     Terminal@Addr:
  2396                           	opt stack 0
  2397  0003A8                     	ds	4
  2398  0003AC                     Terminal@Len:
  2399                           	opt stack 0
  2400  0003AC                     	ds	4
  2401  0003B0                     _AlCfg:
  2402                           	opt stack 0
  2403  0003B0                     	ds	4
  2404  0003B4                     _RtcConfig:
  2405                           	opt stack 0
  2406  0003B4                     	ds	4
  2407  0003B8                     _setupCallTicks:
  2408                           	opt stack 0
  2409  0003B8                     	ds	2
  2410  0003BA                     initGprsModem@modemCounter:
  2411                           	opt stack 0
  2412  0003BA                     	ds	2
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           
  2423                           	psect	dataBANK3
  2424  0003BC                     __pdataBANK3:
  2425                           	opt stack 0
  2426  0003BC                     ModemEvtParser@F9112:
  2427                           	opt stack 0
  2428  0003BC                     	ds	5
  2429  0003C1                     ModemEvtParser@F9110:
  2430                           	opt stack 0
  2431  0003C1                     	ds	5
  2432  0003C6                     ModemEvtParser@F9108:
  2433                           	opt stack 0
  2434  0003C6                     	ds	4
  2435  0003CA                     MyApp_Task@F9040:
  2436                           	opt stack 0
  2437  0003CA                     	ds	3
  2438  0003CD                     triggerRelay@F9029:
  2439                           	opt stack 0
  2440  0003CD                     	ds	2
  2441  0003CF                     Term_MainSm@TermDelay:
  2442                           	opt stack 0
  2443  0003CF                     	ds	11
  2444  0003DA                     _ConnWait:
  2445                           	opt stack 0
  2446  0003DA                     	ds	11
  2447  0003E5                     SendSmsSm@SwTimer:
  2448                           	opt stack 0
  2449  0003E5                     	ds	11
  2450  0003F0                     CheckModem@Timeout:
  2451                           	opt stack 0
  2452  0003F0                     	ds	11
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1h	equ	0xFE2
  2461                           fsr1l	equ	0xFE1
  2462                           
  2463                           	psect	bssBANK4
  2464  000440                     __pbssBANK4:
  2465                           	opt stack 0
  2466  000440                     _UsbMasterPhoneNumber:
  2467                           	opt stack 0
  2468  000440                     	ds	15
  2469  00044F                     	ds	10
  2470  000459                     _cdc_notice:
  2471                           	opt stack 0
  2472  000459                     	ds	10
  2473  000463                     _Rtcm_SystemDate:
  2474                           	opt stack 0
  2475  000463                     	ds	8
  2476  00046B                     Term_MainSm@Data:
  2477                           	opt stack 0
  2478  00046B                     	ds	50
  2479  00049D                     _smsText:
  2480                           	opt stack 0
  2481  00049D                     	ds	20
  2482  0004B1                     _EepromBuffer:
  2483                           	opt stack 0
  2484  0004B1                     	ds	15
  2485  0004C0                     Terminal@SwTimer:
  2486                           	opt stack 0
  2487  0004C0                     	ds	11
  2488  0004CB                     I2cSlv_QueryI2cData@QueryTimer:
  2489                           	opt stack 0
  2490  0004CB                     	ds	11
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           postdec1	equ	0xFE5
  2498                           fsr1h	equ	0xFE2
  2499                           fsr1l	equ	0xFE1
  2500                           
  2501                           	psect	dataBANK4
  2502  0004D6                     __pdataBANK4:
  2503                           	opt stack 0
  2504  0004D6                     ModemEvtParser@F9114:
  2505                           	opt stack 0
  2506  0004D6                     	ds	10
  2507  0004E0                     MyApp_Task@receivedNumber:
  2508                           	opt stack 0
  2509  0004E0                     	ds	13
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postdec1	equ	0xFE5
  2517                           fsr1h	equ	0xFE2
  2518                           fsr1l	equ	0xFE1
  2519                           
  2520                           	psect	bssBANK5
  2521  000500                     __pbssBANK5:
  2522                           	opt stack 0
  2523  000500                     _cdc_data_rx:
  2524                           	opt stack 0
  2525  000500                     	ds	64
  2526  000540                     Terminal@TermRxBuffer:
  2527                           	opt stack 0
  2528  000540                     	ds	50
  2529  000572                     _PhoneNumber:
  2530                           	opt stack 0
  2531  000572                     	ds	20
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           postdec1	equ	0xFE5
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           
  2542                           	psect	dataBANK5
  2543  000586                     __pdataBANK5:
  2544                           	opt stack 0
  2545  000586                     _TaskTable:
  2546                           	opt stack 0
  2547  000586                     	ds	80
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           postdec1	equ	0xFE5
  2555                           fsr1h	equ	0xFE2
  2556                           fsr1l	equ	0xFE1
  2557                           
  2558                           	psect	bssBANK6
  2559  000600                     __pbssBANK6:
  2560                           	opt stack 0
  2561  000600                     _OsAlarms:
  2562                           	opt stack 0
  2563  000600                     	ds	220
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           
  2574                           	psect	bssBANK7
  2575  000700                     __pbssBANK7:
  2576                           	opt stack 0
  2577  000700                     _Mdm_SmsRx:
  2578                           	opt stack 0
  2579  000700                     	ds	102
  2580  000766                     Terminal@Payload:
  2581                           	opt stack 0
  2582  000766                     	ds	80
  2583  0007B6                     _cdc_data_tx:
  2584                           	opt stack 0
  2585  0007B6                     	ds	64
  2586                           tblptru	equ	0xFF8
  2587                           tblptrh	equ	0xFF7
  2588                           tblptrl	equ	0xFF6
  2589                           tablat	equ	0xFF5
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           postdec1	equ	0xFE5
  2593                           fsr1h	equ	0xFE2
  2594                           fsr1l	equ	0xFE1
  2595                           
  2596                           	psect	bssBANK8
  2597  000800                     __pbssBANK8:
  2598                           	opt stack 0
  2599  000800                     GsmGprsTerminal@UsbBuffer:
  2600                           	opt stack 0
  2601  000800                     	ds	200
  2602  0008C8                     _MessageText:
  2603                           	opt stack 0
  2604  0008C8                     	ds	50
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1h	equ	0xFE2
  2613                           fsr1l	equ	0xFE1
  2614                           
  2615                           	psect	bssBANK9
  2616  000900                     __pbssBANK9:
  2617                           	opt stack 0
  2618  000900                     GsmGprsTerminal@UartBuffer:
  2619                           	opt stack 0
  2620  000900                     	ds	200
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           postinc0	equ	0xFEE
  2626                           wreg	equ	0xFE8
  2627                           postdec1	equ	0xFE5
  2628                           fsr1h	equ	0xFE2
  2629                           fsr1l	equ	0xFE1
  2630                           
  2631                           	psect	bssBIGRAMl
  2632  000AC8                     __pbssBIGRAMl:
  2633                           	opt stack 0
  2634  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2635                           	opt stack 0
  2636  000AC8                     	ds	400
  2637  000C58                     _RxBuffer:
  2638                           	opt stack 0
  2639  000C58                     	ds	400
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           postdec1	equ	0xFE5
  2647                           fsr1h	equ	0xFE2
  2648                           fsr1l	equ	0xFE1
  2649                           
  2650                           	psect	cstackBANK10
  2651  000A00                     __pcstackBANK10:
  2652                           	opt stack 0
  2653  000A00                     Terminal@UsbRxBuffer:
  2654                           	opt stack 0
  2655                           
  2656                           ; 200 bytes @ 0x0
  2657  000A00                     	ds	200
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           postdec1	equ	0xFE5
  2665                           fsr1h	equ	0xFE2
  2666                           fsr1l	equ	0xFE1
  2667                           
  2668                           	psect	cstackBANK3
  2669  0003FB                     __pcstackBANK3:
  2670                           	opt stack 0
  2671  0003FB                     ??_InitializeTasks:
  2672  0003FB                     ??_ScheduleTasks:
  2673                           
  2674                           ; 1 bytes @ 0x0
  2675  0003FB                     	ds	2
  2676  0003FD                     InitializeTasks@ActiveTaskIndex:
  2677                           	opt stack 0
  2678                           
  2679                           ; 1 bytes @ 0x2
  2680  0003FD                     	ds	2
  2681  0003FF                     ScheduleTasks@ActiveTaskIndex:
  2682                           	opt stack 0
  2683                           
  2684                           ; 1 bytes @ 0x4
  2685  0003FF                     	ds	1
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postdec1	equ	0xFE5
  2693                           fsr1h	equ	0xFE2
  2694                           fsr1l	equ	0xFE1
  2695                           
  2696                           	psect	cstackBANK2
  2697  000200                     __pcstackBANK2:
  2698                           	opt stack 0
  2699  000200                     Terminal@UsbTxBuffer:
  2700                           	opt stack 0
  2701                           
  2702                           ; 200 bytes @ 0x0
  2703  000200                     	ds	200
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           fsr1h	equ	0xFE2
  2712                           fsr1l	equ	0xFE1
  2713                           
  2714                           	psect	cstackBANK1
  2715  000100                     __pcstackBANK1:
  2716                           	opt stack 0
  2717  000100                     initEeprom@addressToRead:
  2718                           	opt stack 0
  2719  000100                     isNumberInMemory@phoneNumber:
  2720                           	opt stack 0
  2721  000100                     findEmptySpot@readBuffer:
  2722                           	opt stack 0
  2723  000100                     SendSmsSm@UartMessage:
  2724                           	opt stack 0
  2725  000100                     InitGprsNetwork@UartMessage:
  2726                           	opt stack 0
  2727  000100                     Terminal@TermTxBuffer:
  2728                           	opt stack 0
  2729  000100                     HttpGetMethod@UartMessage:
  2730                           	opt stack 0
  2731                           
  2732                           ; 200 bytes @ 0x0
  2733  000100                     	ds	1
  2734  000101                     initEeprom@memoryOpResult:
  2735                           	opt stack 0
  2736                           
  2737                           ; 1 bytes @ 0x1
  2738  000101                     	ds	1
  2739  000102                     initEeprom@isInitialized:
  2740                           	opt stack 0
  2741  000102                     isNumberInMemory@readBuffer:
  2742                           	opt stack 0
  2743                           
  2744                           ; 13 bytes @ 0x2
  2745  000102                     	ds	1
  2746  000103                     initFsm@isInitialized:
  2747                           	opt stack 0
  2748                           
  2749                           ; 1 bytes @ 0x3
  2750  000103                     	ds	10
  2751  00010D                     findEmptySpot@searchInProgress:
  2752                           	opt stack 0
  2753                           
  2754                           ; 1 bytes @ 0xD
  2755  00010D                     	ds	1
  2756  00010E                     findEmptySpot@searchFailed:
  2757                           	opt stack 0
  2758                           
  2759                           ; 1 bytes @ 0xE
  2760  00010E                     	ds	1
  2761  00010F                     isNumberInMemory@searchInProgress:
  2762                           	opt stack 0
  2763  00010F                     findEmptySpot@memoryOpResult:
  2764                           	opt stack 0
  2765                           
  2766                           ; 1 bytes @ 0xF
  2767  00010F                     	ds	1
  2768  000110                     isNumberInMemory@searchFailed:
  2769                           	opt stack 0
  2770  000110                     findEmptySpot@positionInMemory:
  2771                           	opt stack 0
  2772                           
  2773                           ; 1 bytes @ 0x10
  2774  000110                     	ds	1
  2775  000111                     isNumberInMemory@memoryOpResult:
  2776                           	opt stack 0
  2777                           
  2778                           ; 1 bytes @ 0x11
  2779  000111                     	ds	1
  2780  000112                     isNumberInMemory@positionInMemory:
  2781                           	opt stack 0
  2782                           
  2783                           ; 1 bytes @ 0x12
  2784  000112                     	ds	1
  2785  000113                     MyApp_Task@emptyNumber:
  2786                           	opt stack 0
  2787                           
  2788                           ; 13 bytes @ 0x13
  2789  000113                     	ds	13
  2790  000120                     MyApp_Task@cmpString:
  2791                           	opt stack 0
  2792                           
  2793                           ; 3 bytes @ 0x20
  2794  000120                     	ds	3
  2795  000123                     MyApp_Task@cmdAddNumber:
  2796                           	opt stack 0
  2797                           
  2798                           ; 4 bytes @ 0x23
  2799  000123                     	ds	4
  2800  000127                     MyApp_Task@memoryResult:
  2801                           	opt stack 0
  2802                           
  2803                           ; 1 bytes @ 0x27
  2804  000127                     	ds	1
  2805  000128                     MyApp_Task@numberInMemory:
  2806                           	opt stack 0
  2807                           
  2808                           ; 1 bytes @ 0x28
  2809  000128                     	ds	10
  2810  000132                     InitGprsNetwork@Index:
  2811                           	opt stack 0
  2812  000132                     Term_MainSm@FwkMajorStr:
  2813                           	opt stack 0
  2814                           
  2815                           ; 4 bytes @ 0x32
  2816  000132                     	ds	4
  2817  000136                     Term_MainSm@FwkMinorStr:
  2818                           	opt stack 0
  2819                           
  2820                           ; 4 bytes @ 0x36
  2821  000136                     	ds	4
  2822  00013A                     Term_MainSm@FwkBuildStr:
  2823                           	opt stack 0
  2824                           
  2825                           ; 4 bytes @ 0x3A
  2826  00013A                     	ds	142
  2827  0001C8                     HttpGetMethod@Index:
  2828                           	opt stack 0
  2829                           
  2830                           ; 1 bytes @ 0xC8
  2831  0001C8                     	ds	1
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           postdec1	equ	0xFE5
  2839                           fsr1h	equ	0xFE2
  2840                           fsr1l	equ	0xFE1
  2841                           
  2842                           	psect	cstackBANK0
  2843  000060                     __pcstackBANK0:
  2844                           	opt stack 0
  2845  000060                     
  2846                           ; 1 bytes @ 0x0
  2847  000060                     	ds	8
  2848  000068                     ??_LowPriorityIsr:
  2849                           
  2850                           ; 1 bytes @ 0x8
  2851  000068                     	ds	21
  2852  00007D                     ??_isdigit:
  2853  00007D                     ??_isspace:
  2854  00007D                     ??_isupper:
  2855  00007D                     ??_Rtcc_GetRtccValue:
  2856  00007D                     ??_UartTxBufferStatus:
  2857  00007D                     ??_USBStdGetDscHandler:
  2858  00007D                     ??_USBStdGetStatusHandler:
  2859  00007D                     ?_GetLastInteractionNumber:
  2860                           	opt stack 0
  2861  00007D                     ?_USBTransferOnePacket:
  2862                           	opt stack 0
  2863  00007D                     ?_strlen:
  2864                           	opt stack 0
  2865  00007D                     ?_sprintf:
  2866                           	opt stack 0
  2867  00007D                     ?_initPreamble:
  2868                           	opt stack 0
  2869  00007D                     ?___wmul:
  2870                           	opt stack 0
  2871  00007D                     ?___awdiv:
  2872                           	opt stack 0
  2873  00007D                     ?___awmod:
  2874                           	opt stack 0
  2875  00007D                     ?___lwmod:
  2876                           	opt stack 0
  2877  00007D                     ?_GetOsTickCounter:
  2878                           	opt stack 0
  2879  00007D                     ?___lmul:
  2880                           	opt stack 0
  2881  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2882                           	opt stack 0
  2883  00007D                     SetAckStatus@AckSts:
  2884                           	opt stack 0
  2885  00007D                     WriteByte@Byte:
  2886                           	opt stack 0
  2887  00007D                     ReadByte@Byte:
  2888                           	opt stack 0
  2889  00007D                     Mcu_SetWdgSts@WdgSts:
  2890                           	opt stack 0
  2891  00007D                     RtccIrqInit@Priority:
  2892                           	opt stack 0
  2893  00007D                     Rtcc_SetRtcStatus@Status:
  2894                           	opt stack 0
  2895  00007D                     TmrBInit@Prescaler:
  2896                           	opt stack 0
  2897  00007D                     Tmr_TmrBIrqSet@Priority:
  2898                           	opt stack 0
  2899  00007D                     Tmr_StartTmr@TmrNumb:
  2900                           	opt stack 0
  2901  00007D                     UartWriteByte@ByteToWrite:
  2902                           	opt stack 0
  2903  00007D                     USBTransferOnePacket@dir:
  2904                           	opt stack 0
  2905  00007D                     USBConfigureEndpoint@direction:
  2906                           	opt stack 0
  2907  00007D                     USBCtrlTrfTxService@byteToSend:
  2908                           	opt stack 0
  2909  00007D                     USBCtrlTrfRxService@i:
  2910                           	opt stack 0
  2911  00007D                     Led_SetLedStatus@LedSts:
  2912                           	opt stack 0
  2913  00007D                     toupper@c:
  2914                           	opt stack 0
  2915  00007D                     tolower@c:
  2916                           	opt stack 0
  2917  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2918                           	opt stack 0
  2919  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2920                           	opt stack 0
  2921  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2922                           	opt stack 0
  2923  00007D                     Uart_ClearRxBuffer@Index:
  2924                           	opt stack 0
  2925  00007D                     GenerateEvt@Event:
  2926                           	opt stack 0
  2927  00007D                     ReceiveEvt@Event:
  2928                           	opt stack 0
  2929  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2930                           	opt stack 0
  2931  00007D                     StringCompare@String1:
  2932                           	opt stack 0
  2933  00007D                     ClearBuffer@Buffer:
  2934                           	opt stack 0
  2935  00007D                     isNumberValid@phoneNumber:
  2936                           	opt stack 0
  2937  00007D                     sprintf@sp:
  2938                           	opt stack 0
  2939  00007D                     ___wmul@multiplier:
  2940                           	opt stack 0
  2941  00007D                     ___awdiv@dividend:
  2942                           	opt stack 0
  2943  00007D                     ___awmod@dividend:
  2944                           	opt stack 0
  2945  00007D                     ___lwmod@dividend:
  2946                           	opt stack 0
  2947  00007D                     memcpy@d1:
  2948                           	opt stack 0
  2949  00007D                     memset@p1:
  2950                           	opt stack 0
  2951  00007D                     strcat@to:
  2952                           	opt stack 0
  2953  00007D                     strcpy@to:
  2954                           	opt stack 0
  2955  00007D                     strlen@s:
  2956                           	opt stack 0
  2957  00007D                     ___lmul@multiplier:
  2958                           	opt stack 0
  2959                           
  2960                           ; 4 bytes @ 0x1D
  2961  00007D                     	ds	1
  2962  00007E                     ??_USBConfigureEndpoint:
  2963  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2964                           	opt stack 0
  2965  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2966                           	opt stack 0
  2967  00007E                     TmrBInit@Postscaler:
  2968                           	opt stack 0
  2969  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2970                           	opt stack 0
  2971  00007E                     UartWriteByte@Module:
  2972                           	opt stack 0
  2973  00007E                     UartTxBufferStatus@Module:
  2974                           	opt stack 0
  2975  00007E                     USBCtrlTrfRxService@byteToRead:
  2976                           	opt stack 0
  2977  00007E                     USBCtrlTrfInHandler@lastDTS:
  2978                           	opt stack 0
  2979  00007E                     Led_SetLedStatus@Led:
  2980                           	opt stack 0
  2981  00007E                     _isdigit$6368:
  2982                           	opt stack 0
  2983  00007E                     _isspace$6637:
  2984                           	opt stack 0
  2985  00007E                     _isupper$6640:
  2986                           	opt stack 0
  2987  00007E                     I2c_WriteData@WritePacket:
  2988                           	opt stack 0
  2989  00007E                     Rtcc_RtcConfig@RtcConfig:
  2990                           	opt stack 0
  2991  00007E                     USBTransferOnePacket@data:
  2992                           	opt stack 0
  2993  00007E                     USBStdGetStatusHandler@p:
  2994                           	opt stack 0
  2995                           
  2996                           ; 2 bytes @ 0x1E
  2997  00007E                     	ds	1
  2998  00007F                     ??_strlen:
  2999  00007F                     ??_Rtcc_AlarmConfig:
  3000  00007F                     ??_TmrBInit:
  3001  00007F                     Irq_InitIntController@IntPriorityEn:
  3002                           	opt stack 0
  3003  00007F                     Rtcc_GetRtccValue@RetValue:
  3004                           	opt stack 0
  3005  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3006                           	opt stack 0
  3007  00007F                     UartTxBufferStatus@TxBufferStatus:
  3008                           	opt stack 0
  3009  00007F                     GenerateEvt@EventStatus:
  3010                           	opt stack 0
  3011  00007F                     isdigit@c:
  3012                           	opt stack 0
  3013  00007F                     isspace@c:
  3014                           	opt stack 0
  3015  00007F                     isupper@c:
  3016                           	opt stack 0
  3017  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3018                           	opt stack 0
  3019  00007F                     StringCompare@String2:
  3020                           	opt stack 0
  3021  00007F                     ClearBuffer@Len:
  3022                           	opt stack 0
  3023  00007F                     sprintf@f:
  3024                           	opt stack 0
  3025  00007F                     ___wmul@multiplicand:
  3026                           	opt stack 0
  3027  00007F                     ___awdiv@divisor:
  3028                           	opt stack 0
  3029  00007F                     ___awmod@divisor:
  3030                           	opt stack 0
  3031  00007F                     ___lwmod@divisor:
  3032                           	opt stack 0
  3033  00007F                     memcpy@s1:
  3034                           	opt stack 0
  3035  00007F                     memset@c:
  3036                           	opt stack 0
  3037  00007F                     strcat@from:
  3038                           	opt stack 0
  3039  00007F                     strcpy@from:
  3040                           	opt stack 0
  3041                           
  3042                           ; 2 bytes @ 0x1F
  3043  00007F                     	ds	1
  3044  000080                     ??_isalpha:
  3045  000080                     ??_isxdigit:
  3046  000080                     ??_I2c_WriteData:
  3047  000080                     ??_Rtcc_RtcConfig:
  3048  000080                     Rtcc_GetRtccValue@RegValue:
  3049                           	opt stack 0
  3050  000080                     TmrBInit@TmrNumb:
  3051                           	opt stack 0
  3052  000080                     ReceiveEvt@EventStatus:
  3053                           	opt stack 0
  3054  000080                     USBTransferOnePacket@len:
  3055                           	opt stack 0
  3056  000080                     isNumberValid@isNumberOk:
  3057                           	opt stack 0
  3058  000080                     I2c_ReadData@ReadPacket:
  3059                           	opt stack 0
  3060  000080                     Uart_WriteConstString@ConstStringToWrite:
  3061                           	opt stack 0
  3062  000080                     Uart_WriteString@StringToWrite:
  3063                           	opt stack 0
  3064  000080                     Uart_WriteStringLen@StringToWrite:
  3065                           	opt stack 0
  3066  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3067                           	opt stack 0
  3068  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3069                           	opt stack 0
  3070                           
  3071                           ; 2 bytes @ 0x20
  3072  000080                     	ds	1
  3073  000081                     ?_GetElapsedTime:
  3074                           	opt stack 0
  3075  000081                     ?_Rtcm_GetRtccDate:
  3076                           	opt stack 0
  3077  000081                     Mdm_IsSmsReceived@Ret:
  3078                           	opt stack 0
  3079  000081                     Mdm_IsRinging@Ret:
  3080                           	opt stack 0
  3081  000081                     I2cSlv_I2cReadMsgSts@Result:
  3082                           	opt stack 0
  3083  000081                     USBTransferOnePacket@ep:
  3084                           	opt stack 0
  3085  000081                     Led_SetLedBlinkTime@Led:
  3086                           	opt stack 0
  3087  000081                     isNumberValid@i:
  3088                           	opt stack 0
  3089  000081                     ___awdiv@counter:
  3090                           	opt stack 0
  3091  000081                     ___awmod@counter:
  3092                           	opt stack 0
  3093  000081                     ___lwmod@counter:
  3094                           	opt stack 0
  3095  000081                     _isalpha$6634:
  3096                           	opt stack 0
  3097  000081                     _isxdigit$6644:
  3098                           	opt stack 0
  3099  000081                     OsTmr_StartTimer@Timer:
  3100                           	opt stack 0
  3101  000081                     StringCompare@Len:
  3102                           	opt stack 0
  3103  000081                     ClearBuffer@Index:
  3104                           	opt stack 0
  3105  000081                     ___wmul@product:
  3106                           	opt stack 0
  3107  000081                     memcpy@n:
  3108                           	opt stack 0
  3109  000081                     memset@n:
  3110                           	opt stack 0
  3111  000081                     strcat@cp:
  3112                           	opt stack 0
  3113  000081                     strcpy@cp:
  3114                           	opt stack 0
  3115  000081                     strlen@cp:
  3116                           	opt stack 0
  3117  000081                     GetElapsedTime@StartTime:
  3118                           	opt stack 0
  3119  000081                     ___lmul@multiplicand:
  3120                           	opt stack 0
  3121                           
  3122                           ; 4 bytes @ 0x21
  3123  000081                     	ds	1
  3124  000082                     ??_I2c_ReadData:
  3125  000082                     Uart_WriteConstString@Module:
  3126                           	opt stack 0
  3127  000082                     Uart_WriteString@Module:
  3128                           	opt stack 0
  3129  000082                     Uart_WriteStringLen@Len:
  3130                           	opt stack 0
  3131  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3132                           	opt stack 0
  3133  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3134                           	opt stack 0
  3135  000082                     USBConfigureEndpoint@EPNum:
  3136                           	opt stack 0
  3137  000082                     ___awdiv@sign:
  3138                           	opt stack 0
  3139  000082                     ___awmod@sign:
  3140                           	opt stack 0
  3141  000082                     isalpha@c:
  3142                           	opt stack 0
  3143  000082                     isxdigit@c:
  3144                           	opt stack 0
  3145  000082                     USBTransferOnePacket@handle:
  3146                           	opt stack 0
  3147                           
  3148                           ; 2 bytes @ 0x22
  3149  000082                     	ds	1
  3150  000083                     ?_GetCallerNumber:
  3151                           	opt stack 0
  3152  000083                     ?_atoi:
  3153                           	opt stack 0
  3154  000083                     ?_xtoi:
  3155                           	opt stack 0
  3156  000083                     ?___lwdiv:
  3157                           	opt stack 0
  3158  000083                     Uart_WriteStringLen@Index:
  3159                           	opt stack 0
  3160  000083                     Mdm_SetSmsFormat@Index:
  3161                           	opt stack 0
  3162  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3163                           	opt stack 0
  3164  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3165                           	opt stack 0
  3166  000083                     getSetupCall@isCalledReceived:
  3167                           	opt stack 0
  3168  000083                     sprintf@flag:
  3169                           	opt stack 0
  3170  000083                     memcpy@tmp:
  3171                           	opt stack 0
  3172  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3173                           	opt stack 0
  3174  000083                     USBConfigureEndpoint@handle:
  3175                           	opt stack 0
  3176  000083                     putUSBUSART@data:
  3177                           	opt stack 0
  3178  000083                     atoi@s:
  3179                           	opt stack 0
  3180  000083                     ___awdiv@quotient:
  3181                           	opt stack 0
  3182  000083                     ___lwdiv@dividend:
  3183                           	opt stack 0
  3184  000083                     memset@p:
  3185                           	opt stack 0
  3186  000083                     xtoi@s:
  3187                           	opt stack 0
  3188  000083                     OsTmr_StartTimer@Timeout:
  3189                           	opt stack 0
  3190                           
  3191                           ; 4 bytes @ 0x23
  3192  000083                     	ds	1
  3193  000084                     Uart_WriteStringLen@Module:
  3194                           	opt stack 0
  3195  000084                     I2cSlv_SendI2cMsg@TxSts:
  3196                           	opt stack 0
  3197  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3198                           	opt stack 0
  3199  000084                     CDCTxService@i:
  3200                           	opt stack 0
  3201  000084                     getsUSBUSART@buffer:
  3202                           	opt stack 0
  3203  000084                     sprintf@ap:
  3204                           	opt stack 0
  3205  000084                     memcpy@d:
  3206                           	opt stack 0
  3207  000084                     Mdm_SetSmsFormat@UartMessage:
  3208                           	opt stack 0
  3209                           
  3210                           ; 20 bytes @ 0x24
  3211  000084                     	ds	1
  3212  000085                     ??_atoi:
  3213  000085                     ??_xtoi:
  3214  000085                     ??_GetElapsedTime:
  3215  000085                     Rtcc_SetRtccValue@Value:
  3216                           	opt stack 0
  3217  000085                     USBDeviceInit@i:
  3218                           	opt stack 0
  3219  000085                     USBEnableEndpoint@options:
  3220                           	opt stack 0
  3221  000085                     putUSBUSART@length:
  3222                           	opt stack 0
  3223  000085                     CDCTxService@byte_to_send:
  3224                           	opt stack 0
  3225  000085                     StringCompare@Result:
  3226                           	opt stack 0
  3227  000085                     StringCopy@SourceStr:
  3228                           	opt stack 0
  3229  000085                     ___lwdiv@divisor:
  3230                           	opt stack 0
  3231  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3232                           	opt stack 0
  3233  000085                     ___lmul@product:
  3234                           	opt stack 0
  3235                           
  3236                           ; 4 bytes @ 0x25
  3237  000085                     	ds	1
  3238  000086                     ??_Rtcc_SetRtccValue:
  3239  000086                     getsUSBUSART@len:
  3240                           	opt stack 0
  3241  000086                     sprintf@c:
  3242                           	opt stack 0
  3243  000086                     USBEnableEndpoint@p:
  3244                           	opt stack 0
  3245  000086                     StringCompare@Index:
  3246                           	opt stack 0
  3247  000086                     memcpy@s:
  3248                           	opt stack 0
  3249                           
  3250                           ; 2 bytes @ 0x26
  3251  000086                     	ds	1
  3252  000087                     atoi@sign:
  3253                           	opt stack 0
  3254  000087                     ___lwdiv@counter:
  3255                           	opt stack 0
  3256  000087                     xtoi@sign:
  3257                           	opt stack 0
  3258  000087                     StringCopy@DestStr:
  3259                           	opt stack 0
  3260  000087                     sprintf@cp:
  3261                           	opt stack 0
  3262                           
  3263                           ; 2 bytes @ 0x27
  3264  000087                     	ds	1
  3265  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3266                           	opt stack 0
  3267  000088                     USBEnableEndpoint@ep:
  3268                           	opt stack 0
  3269  000088                     parseCommand@text:
  3270                           	opt stack 0
  3271  000088                     atoi@a:
  3272                           	opt stack 0
  3273  000088                     ___lwdiv@quotient:
  3274                           	opt stack 0
  3275  000088                     xtoi@val:
  3276                           	opt stack 0
  3277                           
  3278                           ; 2 bytes @ 0x28
  3279  000088                     	ds	1
  3280  000089                     ??_Rtcm_GetRtccDate:
  3281  000089                     ?_strtol:
  3282                           	opt stack 0
  3283  000089                     ?___lldiv:
  3284                           	opt stack 0
  3285  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3286                           	opt stack 0
  3287  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3288                           	opt stack 0
  3289  000089                     StringCopy@Len:
  3290                           	opt stack 0
  3291  000089                     strtol@s:
  3292                           	opt stack 0
  3293  000089                     ___lldiv@dividend:
  3294                           	opt stack 0
  3295  000089                     Rtcm_SetRtccDate@Date:
  3296                           	opt stack 0
  3297                           
  3298                           ; 8 bytes @ 0x29
  3299  000089                     	ds	1
  3300  00008A                     xtoi@c:
  3301                           	opt stack 0
  3302  00008A                     LedBlinkStateMachine@LedBlink:
  3303                           	opt stack 0
  3304  00008A                     LedPulseStateMachine@LedPulse:
  3305                           	opt stack 0
  3306  00008A                     secondsAppTimer@counter:
  3307                           	opt stack 0
  3308  00008A                     utoa@buf:
  3309                           	opt stack 0
  3310  00008A                     parseCommand@addNumberCmd:
  3311                           	opt stack 0
  3312  00008A                     Rtcm_GetRtccDate@LocalDate:
  3313                           	opt stack 0
  3314                           
  3315                           ; 8 bytes @ 0x2A
  3316  00008A                     	ds	1
  3317  00008B                     ??_StringCopy:
  3318  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3319                           	opt stack 0
  3320  00008B                     strtol@endptr:
  3321                           	opt stack 0
  3322                           
  3323                           ; 2 bytes @ 0x2B
  3324  00008B                     	ds	1
  3325  00008C                     LedPulseStateMachine@Led:
  3326                           	opt stack 0
  3327  00008C                     secondsAppTimer@isCyclic:
  3328                           	opt stack 0
  3329  00008C                     utoa@val:
  3330                           	opt stack 0
  3331                           
  3332                           ; 2 bytes @ 0x2C
  3333  00008C                     	ds	1
  3334  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3335                           	opt stack 0
  3336  00008D                     StringCopy@Index:
  3337                           	opt stack 0
  3338  00008D                     strtol@base:
  3339                           	opt stack 0
  3340  00008D                     parseCommand@deleteNumberCmd:
  3341                           	opt stack 0
  3342  00008D                     GetElapsedTime@TimeValue:
  3343                           	opt stack 0
  3344  00008D                     ___lldiv@divisor:
  3345                           	opt stack 0
  3346                           
  3347                           ; 4 bytes @ 0x2D
  3348  00008D                     	ds	1
  3349  00008E                     utoa@base:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x2E
  3353  00008E                     	ds	1
  3354  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3355  00008F                     ??_strtol:
  3356  00008F                     secondsAppTimer@seconds:
  3357                           	opt stack 0
  3358  00008F                     Mdm_GetSmsData@MessageText:
  3359                           	opt stack 0
  3360  00008F                     Eeprom_Write@WriteBuffer:
  3361                           	opt stack 0
  3362  00008F                     LedStateMachine@LedSts:
  3363                           	opt stack 0
  3364  00008F                     ModemEvtParser@CallReadyString:
  3365                           	opt stack 0
  3366                           
  3367                           ; 10 bytes @ 0x2F
  3368  00008F                     	ds	1
  3369  000090                     parseCommand@state:
  3370                           	opt stack 0
  3371  000090                     secondsAppTimer@isExpired:
  3372                           	opt stack 0
  3373  000090                     utoa@v:
  3374                           	opt stack 0
  3375                           
  3376                           ; 2 bytes @ 0x30
  3377  000090                     	ds	1
  3378  000091                     ??_USBStdFeatureReqHandler:
  3379  000091                     Mdm_GetSmsData@GetSmsStatus:
  3380                           	opt stack 0
  3381  000091                     USBStdSetCfgHandler@i:
  3382                           	opt stack 0
  3383  000091                     Eeprom_Write@DataLength:
  3384                           	opt stack 0
  3385  000091                     LedStateMachine@LedOut:
  3386                           	opt stack 0
  3387  000091                     secondsAppTimer@destinationTicks:
  3388                           	opt stack 0
  3389  000091                     GetElapsedTime@CurrentTimestamp:
  3390                           	opt stack 0
  3391  000091                     ___lldiv@quotient:
  3392                           	opt stack 0
  3393                           
  3394                           ; 4 bytes @ 0x31
  3395  000091                     	ds	1
  3396  000092                     Eeprom_Write@WriteSts:
  3397                           	opt stack 0
  3398  000092                     utoa@c:
  3399                           	opt stack 0
  3400  000092                     USBStdFeatureReqHandler@pUEP:
  3401                           	opt stack 0
  3402                           
  3403                           ; 2 bytes @ 0x32
  3404  000092                     	ds	1
  3405  000093                     Eeprom_Write@MemoryAddress:
  3406                           	opt stack 0
  3407  000093                     waitSetupCall@isCallArrived:
  3408                           	opt stack 0
  3409  000093                     strtol@sign:
  3410                           	opt stack 0
  3411  000093                     LedStateMachine@LedBlink:
  3412                           	opt stack 0
  3413  000093                     itoa@buf:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x33
  3417  000093                     	ds	1
  3418  000094                     USBStdFeatureReqHandler@current_ep_data:
  3419                           	opt stack 0
  3420  000094                     Eeprom_Write@SlaveAddress:
  3421                           	opt stack 0
  3422  000094                     strtol@a:
  3423                           	opt stack 0
  3424                           
  3425                           ; 4 bytes @ 0x34
  3426  000094                     	ds	1
  3427  000095                     Eeprom_Write@CommandLength:
  3428                           	opt stack 0
  3429  000095                     ___lldiv@counter:
  3430                           	opt stack 0
  3431  000095                     OsTmr_GetTimerStatus@Timer:
  3432                           	opt stack 0
  3433  000095                     USBStdFeatureReqHandler@p:
  3434                           	opt stack 0
  3435  000095                     LedStateMachine@LedPulse:
  3436                           	opt stack 0
  3437  000095                     itoa@val:
  3438                           	opt stack 0
  3439                           
  3440                           ; 2 bytes @ 0x35
  3441  000095                     	ds	1
  3442  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3443                           	opt stack 0
  3444  000096                     SetUartBaudRate@UartConfig:
  3445                           	opt stack 0
  3446  000096                     saveNumberInMemory@phoneNumber:
  3447                           	opt stack 0
  3448  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3449                           	opt stack 0
  3450                           
  3451                           ; 4 bytes @ 0x36
  3452  000096                     	ds	1
  3453  000097                     ??_USBCtrlEPService:
  3454  000097                     itoa@base:
  3455                           	opt stack 0
  3456                           
  3457                           ; 2 bytes @ 0x37
  3458  000097                     	ds	1
  3459  000098                     Tmr_TmrBPrSet@Prescaler:
  3460                           	opt stack 0
  3461  000098                     Mdm_SetSmsFormat@TextFormat:
  3462                           	opt stack 0
  3463  000098                     USBDeviceTasks@i:
  3464                           	opt stack 0
  3465  000098                     LedStateMachine@LedOutSts:
  3466                           	opt stack 0
  3467  000098                     saveNumberInMemory@address:
  3468                           	opt stack 0
  3469  000098                     strtol@c:
  3470                           	opt stack 0
  3471                           
  3472                           ; 1 bytes @ 0x38
  3473  000098                     	ds	1
  3474  000099                     Tmr_TmrBPrSet@Postscaler:
  3475                           	opt stack 0
  3476  000099                     SetUartBaudRate@Module:
  3477                           	opt stack 0
  3478  000099                     LedStateMachine@Led:
  3479                           	opt stack 0
  3480  000099                     initGprsModem@isInitialized:
  3481                           	opt stack 0
  3482  000099                     itoa@cp:
  3483                           	opt stack 0
  3484  000099                     ModemEvtParser@ClipString:
  3485                           	opt stack 0
  3486                           
  3487                           ; 5 bytes @ 0x39
  3488  000099                     	ds	1
  3489  00009A                     ??_Led_MainTask:
  3490  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3491                           	opt stack 0
  3492  00009A                     SetUartBaudRate@BaudRateRegister:
  3493                           	opt stack 0
  3494  00009A                     SetBaudRate@McuClockHz:
  3495                           	opt stack 0
  3496                           
  3497                           ; 4 bytes @ 0x3A
  3498  00009A                     	ds	1
  3499  00009B                     ??_SendSmsSm:
  3500  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3501                           	opt stack 0
  3502  00009B                     OsTmr_Wait@WaitTimer:
  3503                           	opt stack 0
  3504  00009B                     InitGprsNetwork@Apn:
  3505                           	opt stack 0
  3506  00009B                     HttpGetMethod@GetData:
  3507                           	opt stack 0
  3508                           
  3509                           ; 2 bytes @ 0x3B
  3510  00009B                     	ds	1
  3511  00009C                     SetUartBaudRate@DivisionFactor:
  3512                           	opt stack 0
  3513  00009C                     Tmr_TmrBPrSet@Divisor:
  3514                           	opt stack 0
  3515                           
  3516                           ; 4 bytes @ 0x3C
  3517  00009C                     	ds	1
  3518  00009D                     ??_HttpGetMethod:
  3519  00009D                     InitGprsNetwork@ApnLen:
  3520                           	opt stack 0
  3521  00009D                     Uart_InitUartModule@UartConfig:
  3522                           	opt stack 0
  3523  00009D                     OsTmr_Wait@DelayMs:
  3524                           	opt stack 0
  3525                           
  3526                           ; 4 bytes @ 0x3D
  3527  00009D                     	ds	1
  3528  00009E                     ??_SetBaudRate:
  3529  00009E                     ??_InitGprsNetwork:
  3530  00009E                     ModemEvtParser@SmsString:
  3531                           	opt stack 0
  3532                           
  3533                           ; 5 bytes @ 0x3E
  3534  00009E                     	ds	1
  3535  00009F                     ??_Uart_InitUartModule:
  3536                           
  3537                           ; 1 bytes @ 0x3F
  3538  00009F                     	ds	1
  3539  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3540                           	opt stack 0
  3541                           
  3542                           ; 2 bytes @ 0x40
  3543  0000A0                     	ds	1
  3544  0000A1                     Uart_InitUartModule@Module:
  3545                           	opt stack 0
  3546  0000A1                     OsTmr_Wait@Ret:
  3547                           	opt stack 0
  3548                           
  3549                           ; 1 bytes @ 0x41
  3550  0000A1                     	ds	1
  3551  0000A2                     ??_Terminal:
  3552  0000A2                     I2c_InitI2cModule@I2cConfig:
  3553                           	opt stack 0
  3554  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3555                           	opt stack 0
  3556                           
  3557                           ; 2 bytes @ 0x42
  3558  0000A2                     	ds	1
  3559  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3560                           	opt stack 0
  3561  0000A3                     ModemEvtParser@RingString:
  3562                           	opt stack 0
  3563                           
  3564                           ; 4 bytes @ 0x43
  3565  0000A3                     	ds	1
  3566  0000A4                     ??_I2c_InitI2cModule:
  3567  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3568                           	opt stack 0
  3569  0000A4                     Terminal@i:
  3570                           	opt stack 0
  3571  0000A4                     InitSchedTimer@TmrBConfig:
  3572                           	opt stack 0
  3573                           
  3574                           ; 7 bytes @ 0x44
  3575  0000A4                     	ds	1
  3576  0000A5                     Terminal@ReceivedBytes:
  3577                           	opt stack 0
  3578  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3579                           	opt stack 0
  3580                           
  3581                           ; 2 bytes @ 0x45
  3582  0000A5                     	ds	1
  3583  0000A6                     Terminal@Index:
  3584                           	opt stack 0
  3585                           
  3586                           ; 1 bytes @ 0x46
  3587  0000A6                     	ds	1
  3588  0000A7                     ModemEvtParser@Match:
  3589                           	opt stack 0
  3590  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3591                           	opt stack 0
  3592                           
  3593                           ; 1 bytes @ 0x47
  3594  0000A7                     	ds	1
  3595  0000A8                     ModemEvtParser@CompareIdx:
  3596                           	opt stack 0
  3597  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3598                           	opt stack 0
  3599                           
  3600                           ; 1 bytes @ 0x48
  3601  0000A8                     	ds	1
  3602  0000A9                     Eeprom_Read@ReadBuffer:
  3603                           	opt stack 0
  3604                           
  3605                           ; 2 bytes @ 0x49
  3606  0000A9                     	ds	2
  3607  0000AB                     Eeprom_Read@DataLength:
  3608                           	opt stack 0
  3609                           
  3610                           ; 1 bytes @ 0x4B
  3611  0000AB                     	ds	1
  3612  0000AC                     Eeprom_Read@MemoryAddress:
  3613                           	opt stack 0
  3614                           
  3615                           ; 1 bytes @ 0x4C
  3616  0000AC                     	ds	1
  3617  0000AD                     Eeprom_Read@SlaveAddress:
  3618                           	opt stack 0
  3619                           
  3620                           ; 1 bytes @ 0x4D
  3621  0000AD                     	ds	1
  3622  0000AE                     Eeprom_Read@ReadSts:
  3623                           	opt stack 0
  3624                           
  3625                           ; 1 bytes @ 0x4E
  3626  0000AE                     	ds	1
  3627  0000AF                     Eeprom_Read@QuerySts:
  3628                           	opt stack 0
  3629                           
  3630                           ; 1 bytes @ 0x4F
  3631  0000AF                     	ds	1
  3632  0000B0                     tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           postdec1	equ	0xFE5
  3639                           fsr1h	equ	0xFE2
  3640                           fsr1l	equ	0xFE1
  3641                           
  3642                           ; 1 bytes @ 0x50
  3643                           
  3644                           	psect	cstackCOMRAM
  3645  000001                     __pcstackCOMRAM:
  3646                           	opt stack 0
  3647  000001                     i2GenerateEvt@Event:
  3648                           	opt stack 0
  3649                           
  3650                           ; 2 bytes @ 0x0
  3651  000001                     	ds	2
  3652  000003                     i2GenerateEvt@EventStatus:
  3653                           	opt stack 0
  3654                           
  3655                           ; 1 bytes @ 0x2
  3656  000003                     	ds	1
  3657  000004                     Uart_MdmGsmGprsReadService@UartData:
  3658                           	opt stack 0
  3659                           
  3660                           ; 1 bytes @ 0x3
  3661  000004                     	ds	1
  3662  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3663                           	opt stack 0
  3664                           
  3665                           ; 2 bytes @ 0x4
  3666  000005                     	ds	2
  3667  000007                     ??_HighPriorityIsr:
  3668                           
  3669                           ; 1 bytes @ 0x6
  3670  000007                     	ds	18
  3671  000019                     ?i1___wmul:
  3672                           	opt stack 0
  3673  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3674                           	opt stack 0
  3675  000019                     i1GenerateEvt@Event:
  3676                           	opt stack 0
  3677  000019                     i1___wmul@multiplier:
  3678                           	opt stack 0
  3679                           
  3680                           ; 2 bytes @ 0x18
  3681  000019                     	ds	2
  3682  00001B                     i1GenerateEvt@EventStatus:
  3683                           	opt stack 0
  3684  00001B                     i1___wmul@multiplicand:
  3685                           	opt stack 0
  3686                           
  3687                           ; 2 bytes @ 0x1A
  3688  00001B                     	ds	1
  3689  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3690                           	opt stack 0
  3691                           
  3692                           ; 2 bytes @ 0x1B
  3693  00001C                     	ds	1
  3694  00001D                     i1___wmul@product:
  3695                           	opt stack 0
  3696                           
  3697                           ; 2 bytes @ 0x1C
  3698  00001D                     	ds	1
  3699  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3700                           	opt stack 0
  3701                           
  3702                           ; 1 bytes @ 0x1D
  3703  00001E                     	ds	1
  3704  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3705                           	opt stack 0
  3706                           
  3707                           ; 1 bytes @ 0x1E
  3708  00001F                     	ds	1
  3709  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3710                           	opt stack 0
  3711                           
  3712                           ; 1 bytes @ 0x1F
  3713  000020                     	ds	1
  3714  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3715                           	opt stack 0
  3716                           
  3717                           ; 2 bytes @ 0x20
  3718  000021                     	ds	2
  3719  000023                     tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           postdec1	equ	0xFE5
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           
  3729                           ; 1 bytes @ 0x22
  3730 ;;
  3731 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3732 ;;
  3733 ;; *************** function _main *****************
  3734 ;; Defined at:
  3735 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  2   14[None  ] short 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels required when called:   23
  3755 ;; This function calls:
  3756 ;;		_Sch_MainScheduler
  3757 ;;		_SystemInit
  3758 ;; This function is called by:
  3759 ;;		Startup code after reset
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text0
  3764  006908                     __ptext0:
  3765                           	opt stack 0
  3766  006908                     _main:
  3767                           	opt stack 8
  3768                           
  3769                           ;main.c: 61: SystemInit();
  3770                           
  3771                           ;incstack = 0
  3772  006908  EC79  F031         	call	_SystemInit	;wreg free
  3773                           
  3774                           ;main.c: 64: Sch_MainScheduler();
  3775  00690C  EC6E  F033         	call	_Sch_MainScheduler	;wreg free
  3776                           
  3777                           ;main.c: 67: return 0;
  3778                           ;	Return value of _main is never used
  3779  006910  EF66  F000         	goto	start
  3780  006914                     __end_of_main:
  3781                           	opt stack 0
  3782                           tblptru	equ	0xFF8
  3783                           tblptrh	equ	0xFF7
  3784                           tblptrl	equ	0xFF6
  3785                           tablat	equ	0xFF5
  3786                           postinc0	equ	0xFEE
  3787                           wreg	equ	0xFE8
  3788                           postdec1	equ	0xFE5
  3789                           fsr1h	equ	0xFE2
  3790                           fsr1l	equ	0xFE1
  3791                           
  3792 ;; *************** function _SystemInit *****************
  3793 ;; Defined at:
  3794 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:   15
  3815 ;; This function calls:
  3816 ;;		_InitSchedTimer
  3817 ;;		_Irq_InitIntController
  3818 ;;		_Mcu_ConfigExtInt
  3819 ;;		_Mcu_StartSystemPll
  3820 ;;		_Pm_DsReleasePinControl
  3821 ;;		_Tmr_RegisterTmr2IsrCallback
  3822 ;; This function is called by:
  3823 ;;		_main
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text1
  3828  0062F2                     __ptext1:
  3829                           	opt stack 0
  3830  0062F2                     _SystemInit:
  3831                           	opt stack 15
  3832                           
  3833                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3834                           
  3835                           ;incstack = 0
  3836  0062F2  ECAD  F034         	call	_Pm_DsReleasePinControl	;wreg free
  3837                           
  3838                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3839  0062F6  EC5F  F033         	call	_Mcu_StartSystemPll	;wreg free
  3840                           
  3841                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3842  0062FA  0E01               	movlw	1
  3843  0062FC  0100               	movlb	0	; () banked
  3844  0062FE  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3845  006300  0E01               	movlw	1
  3846  006302  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3847  006304  0E01               	movlw	1
  3848  006306  EC1D  F032         	call	_Irq_InitIntController
  3849                           
  3850                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3851  00630A  0EEC               	movlw	low _Sch_SchmIntService
  3852  00630C  0100               	movlb	0	; () banked
  3853  00630E  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3854  006310  0E68               	movlw	high _Sch_SchmIntService
  3855  006312  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3856  006314  EC90  F034         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3857                           
  3858                           ;sys_init.c: 132: InitSchedTimer();
  3859  006318  ECD9  F031         	call	_InitSchedTimer	;wreg free
  3860                           
  3861                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3862  00631C  EC99  F033         	call	_Mcu_ConfigExtInt	;wreg free
  3863  006320  0012               	return		;funcret
  3864  006322                     __end_of_SystemInit:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           postdec1	equ	0xFE5
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           
  3876 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3877 ;; Defined at:
  3878 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3881 ;;		 -> Sch_SchmIntService(1), 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3897 ;;Total ram usage:        2 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:   11
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_SystemInit
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text2
  3908  006920                     __ptext2:
  3909                           	opt stack 0
  3910  006920                     _Tmr_RegisterTmr2IsrCallback:
  3911                           	opt stack 18
  3912                           
  3913                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3914                           
  3915                           ;incstack = 0
  3916  006920  C07D  F2E8         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3917  006924  C07E  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3918  006928  0012               	return		;funcret
  3919  00692A                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3920                           	opt stack 0
  3921                           tblptru	equ	0xFF8
  3922                           tblptrh	equ	0xFF7
  3923                           tblptrl	equ	0xFF6
  3924                           tablat	equ	0xFF5
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           postdec1	equ	0xFE5
  3928                           fsr1h	equ	0xFE2
  3929                           fsr1l	equ	0xFE1
  3930                           
  3931 ;; *************** function _Pm_DsReleasePinControl *****************
  3932 ;; Defined at:
  3933 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		None
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:   11
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_SystemInit
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text3
  3962  00695A                     __ptext3:
  3963                           	opt stack 0
  3964  00695A                     _Pm_DsReleasePinControl:
  3965                           	opt stack 18
  3966                           
  3967                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3968                           
  3969                           ;incstack = 0
  3970  00695A  010F               	movlb	15	; () banked
  3971  00695C  914C               	bcf	76,0,b	;volatile
  3972                           
  3973                           ; BSR set to: 15
  3974  00695E  0012               	return		;funcret
  3975  006960                     __end_of_Pm_DsReleasePinControl:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           postinc0	equ	0xFEE
  3982                           wreg	equ	0xFE8
  3983                           postdec1	equ	0xFE5
  3984                           fsr1h	equ	0xFE2
  3985                           fsr1l	equ	0xFE1
  3986                           
  3987 ;; *************** function _Mcu_StartSystemPll *****************
  3988 ;; Defined at:
  3989 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4007 ;;Total ram usage:        2 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:   11
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_SystemInit
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text4
  4018  0066BE                     __ptext4:
  4019                           	opt stack 0
  4020  0066BE                     _Mcu_StartSystemPll:
  4021                           	opt stack 18
  4022                           
  4023                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4024                           
  4025                           ; BSR set to: 15
  4026                           ;incstack = 0
  4027  0066BE  0E03               	movlw	3
  4028  0066C0  0100               	movlb	0	; () banked
  4029  0066C2  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4030  0066C4  0EE8               	movlw	232
  4031  0066C6  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4035  0066C8  8C9B               	bsf	3995,6,c	;volatile
  4036  0066CA                     l11971:
  4037                           
  4038                           ; BSR set to: 0
  4039  0066CA  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4040  0066CC  A0D8               	btfss	status,0,c
  4041  0066CE  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4042  0066D0  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4043  0066D2  E1FB               	bnz	l11971
  4044  0066D4  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4045  0066D6  B4D8               	btfsc	status,2,c
  4046  0066D8  0012               	return	
  4047  0066DA  D7F7               	goto	l237
  4048  0066DC                     __end_of_Mcu_StartSystemPll:
  4049                           	opt stack 0
  4050                           tblptru	equ	0xFF8
  4051                           tblptrh	equ	0xFF7
  4052                           tblptrl	equ	0xFF6
  4053                           tablat	equ	0xFF5
  4054                           postinc0	equ	0xFEE
  4055                           wreg	equ	0xFE8
  4056                           postdec1	equ	0xFE5
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function _Mcu_ConfigExtInt *****************
  4062 ;; Defined at:
  4063 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:   11
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_SystemInit
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text5
  4092  006732                     __ptext5:
  4093                           	opt stack 0
  4094  006732                     _Mcu_ConfigExtInt:
  4095                           	opt stack 18
  4096                           
  4097                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;incstack = 0
  4101  006732  8093               	bsf	3987,0,c	;volatile
  4102                           
  4103                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4104  006734  8695               	bsf	3989,3,c	;volatile
  4105                           
  4106                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4107  006736  010F               	movlb	15	; () banked
  4108  006738  8949               	bsf	73,4,b	;volatile
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;mcu_drv.c: 108: RPINR1 = 20;
  4112  00673A  0E14               	movlw	20
  4113  00673C  010E               	movlb	14	; () banked
  4114  00673E  6FE7               	movwf	231,b	;volatile
  4115                           
  4116                           ; BSR set to: 14
  4117                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4118  006740  88F2               	bsf	intcon,4,c	;volatile
  4119                           
  4120                           ; BSR set to: 14
  4121                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4122  006742  86F0               	bsf	intcon3,3,c	;volatile
  4123                           
  4124                           ; BSR set to: 14
  4125                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4126  006744  8CF0               	bsf	intcon3,6,c	;volatile
  4127                           
  4128                           ; BSR set to: 14
  4129                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4130  006746  9CF1               	bcf	intcon2,6,c	;volatile
  4131                           
  4132                           ; BSR set to: 14
  4133                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4134  006748  9AF1               	bcf	intcon2,5,c	;volatile
  4135                           
  4136                           ; BSR set to: 14
  4137  00674A  0012               	return		;funcret
  4138  00674C                     __end_of_Mcu_ConfigExtInt:
  4139                           	opt stack 0
  4140                           tblptru	equ	0xFF8
  4141                           tblptrh	equ	0xFF7
  4142                           tblptrl	equ	0xFF6
  4143                           tablat	equ	0xFF5
  4144                           intcon	equ	0xFF2
  4145                           intcon2	equ	0xFF1
  4146                           intcon3	equ	0xFF0
  4147                           postinc0	equ	0xFEE
  4148                           wreg	equ	0xFE8
  4149                           postdec1	equ	0xFE5
  4150                           fsr1h	equ	0xFE2
  4151                           fsr1l	equ	0xFE1
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _Irq_InitIntController *****************
  4155 ;; Defined at:
  4156 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  IntPriorityE    1    wreg     enum E7720
  4159 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4160 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;Total ram usage:        3 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:   11
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_SystemInit
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text6
  4187  00643A                     __ptext6:
  4188                           	opt stack 0
  4189  00643A                     _Irq_InitIntController:
  4190                           	opt stack 18
  4191                           
  4192                           ; BSR set to: 14
  4193                           ;incstack = 0
  4194                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4195  00643A  0100               	movlb	0	; () banked
  4196  00643C  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4197                           
  4198                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4199  00643E  0100               	movlb	0	; () banked
  4200  006440  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4201  006442  D002               	bra	u10675
  4202  006444  9ED0               	bcf	4048,7,c	;volatile
  4203  006446  D001               	bra	u10676
  4204  006448                     u10675:
  4205  006448  8ED0               	bsf	4048,7,c	;volatile
  4206  00644A                     u10676:
  4207                           
  4208                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4209  00644A  0100               	movlb	0	; () banked
  4210  00644C  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4211  00644E  D002               	bra	u10685
  4212  006450  9EF2               	bcf	intcon,7,c	;volatile
  4213  006452  D001               	bra	u10686
  4214  006454                     u10685:
  4215  006454  8EF2               	bsf	intcon,7,c	;volatile
  4216  006456                     u10686:
  4217                           
  4218                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4219  006456  0100               	movlb	0	; () banked
  4220  006458  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4221  00645A  D002               	bra	u10695
  4222  00645C  9CF2               	bcf	intcon,6,c	;volatile
  4223  00645E  D001               	bra	u10696
  4224  006460                     u10695:
  4225  006460  8CF2               	bsf	intcon,6,c	;volatile
  4226  006462                     u10696:
  4227  006462  0012               	return		;funcret
  4228  006464                     __end_of_Irq_InitIntController:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           intcon	equ	0xFF2
  4235                           intcon2	equ	0xFF1
  4236                           intcon3	equ	0xFF0
  4237                           postinc0	equ	0xFEE
  4238                           wreg	equ	0xFE8
  4239                           postdec1	equ	0xFE5
  4240                           fsr1h	equ	0xFE2
  4241                           fsr1l	equ	0xFE1
  4242                           status	equ	0xFD8
  4243                           
  4244 ;; *************** function _InitSchedTimer *****************
  4245 ;; Defined at:
  4246 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4261 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;Total ram usage:        7 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:   14
  4267 ;; This function calls:
  4268 ;;		_Tmr_TmrBConfig
  4269 ;; This function is called by:
  4270 ;;		_SystemInit
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text7
  4275  0063B2                     __ptext7:
  4276                           	opt stack 0
  4277  0063B2                     _InitSchedTimer:
  4278                           	opt stack 15
  4279                           
  4280                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4281                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4282                           
  4283                           ;incstack = 0
  4284  0063B2  0E04               	movlw	4
  4285  0063B4  0100               	movlb	0	; () banked
  4286  0063B6  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4287                           
  4288                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4289  0063B8  0E0C               	movlw	12
  4290  0063BA  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4291                           
  4292                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4293  0063BC  0E00               	movlw	0
  4294  0063BE  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4295                           
  4296                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4297  0063C0  0E01               	movlw	1
  4298  0063C2  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4299                           
  4300                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4301  0063C4  0E03               	movlw	3
  4302  0063C6  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4303  0063C8  0EE8               	movlw	232
  4304  0063CA  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4305                           
  4306                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4307  0063CC  0E01               	movlw	1
  4308  0063CE  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4312  0063D0  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4313  0063D2  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4314  0063D4  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4315  0063D6  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4316  0063D8  0E02               	movlw	2
  4317  0063DA  EC5C  F01F         	call	_Tmr_TmrBConfig
  4318  0063DE  0012               	return		;funcret
  4319  0063E0                     __end_of_InitSchedTimer:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           intcon	equ	0xFF2
  4326                           intcon2	equ	0xFF1
  4327                           intcon3	equ	0xFF0
  4328                           postinc0	equ	0xFEE
  4329                           wreg	equ	0xFE8
  4330                           postdec1	equ	0xFE5
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function _Tmr_TmrBConfig *****************
  4336 ;; Defined at:
  4337 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  TmrNumb         1    wreg     unsigned char 
  4340 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4341 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4356 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;Total ram usage:        4 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:   13
  4360 ;; This function calls:
  4361 ;;		_TmrBInit
  4362 ;;		_Tmr_StartTmr
  4363 ;;		_Tmr_TmrBIrqSet
  4364 ;;		_Tmr_TmrBPrSet
  4365 ;; This function is called by:
  4366 ;;		_InitSchedTimer
  4367 ;;		_InitAuxTimer
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text8
  4372  003EB8                     __ptext8:
  4373                           	opt stack 0
  4374  003EB8                     _Tmr_TmrBConfig:
  4375                           	opt stack 15
  4376                           
  4377                           ;incstack = 0
  4378                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4379  003EB8  0100               	movlb	0	; () banked
  4380  003EBA  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4381                           
  4382                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4383  003EBC  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4384  003EC0  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4385  003EC4  50DF               	movf	indf2,w,c
  4386  003EC6  0100               	movlb	0	; () banked
  4387  003EC8  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4388  003ECA  EE20 F001          	lfsr	2,1
  4389  003ECE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4390  003ED0  26D9               	addwf	fsr2l,f,c
  4391  003ED2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4392  003ED4  22DA               	addwfc	fsr2h,f,c
  4393  003ED6  50DF               	movf	indf2,w,c
  4394  003ED8  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4395  003EDA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4396  003EDC  EC90  F025         	call	_TmrBInit
  4397                           
  4398                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4399  003EE0  0100               	movlb	0	; () banked
  4400  003EE2  EE20 F002          	lfsr	2,2
  4401  003EE6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4402  003EE8  26D9               	addwf	fsr2l,f,c
  4403  003EEA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4404  003EEC  22DA               	addwfc	fsr2h,f,c
  4405  003EEE  04DE               	decf	postinc2,w,c
  4406  003EF0  A4D8               	btfss	status,2,c
  4407  003EF2  D00E               	goto	l546
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;tmr_drv.c: 277: {
  4411                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4412  003EF4  EE20 F003          	lfsr	2,3
  4413  003EF8  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4414  003EFA  26D9               	addwf	fsr2l,f,c
  4415  003EFC  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4416  003EFE  22DA               	addwfc	fsr2h,f,c
  4417  003F00  50DF               	movf	indf2,w,c
  4418  003F02  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4419  003F04  0E01               	movlw	1
  4420  003F06  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4421  003F08  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4422  003F0A  EC81  F02E         	call	_Tmr_TmrBIrqSet
  4423                           
  4424                           ;tmr_drv.c: 280: }
  4425  003F0E  D00E               	goto	l547
  4426  003F10                     l546:
  4427                           
  4428                           ;tmr_drv.c: 281: else
  4429                           ;tmr_drv.c: 282: {
  4430                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4431  003F10  0100               	movlb	0	; () banked
  4432  003F12  EE20 F003          	lfsr	2,3
  4433  003F16  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4434  003F18  26D9               	addwf	fsr2l,f,c
  4435  003F1A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4436  003F1C  22DA               	addwfc	fsr2h,f,c
  4437  003F1E  50DF               	movf	indf2,w,c
  4438  003F20  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4439  003F22  0E00               	movlw	0
  4440  003F24  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4441  003F26  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4442  003F28  EC81  F02E         	call	_Tmr_TmrBIrqSet
  4443  003F2C                     l547:
  4444                           
  4445                           ;tmr_drv.c: 285: }
  4446                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4447  003F2C  0100               	movlb	0	; () banked
  4448  003F2E  EE20 F004          	lfsr	2,4
  4449  003F32  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4450  003F34  26D9               	addwf	fsr2l,f,c
  4451  003F36  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4452  003F38  22DA               	addwfc	fsr2h,f,c
  4453  003F3A  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4454  003F3E  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4455  003F42  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4456  003F46  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4457  003F4A  50DF               	movf	indf2,w,c
  4458  003F4C  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4459  003F4E  EE20 F001          	lfsr	2,1
  4460  003F52  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4461  003F54  26D9               	addwf	fsr2l,f,c
  4462  003F56  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4463  003F58  22DA               	addwfc	fsr2h,f,c
  4464  003F5A  50DF               	movf	indf2,w,c
  4465  003F5C  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4466  003F5E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4467  003F60  ECD2  F019         	call	_Tmr_TmrBPrSet
  4468                           
  4469                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4470  003F64  0100               	movlb	0	; () banked
  4471  003F66  EE20 F006          	lfsr	2,6
  4472  003F6A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4473  003F6C  26D9               	addwf	fsr2l,f,c
  4474  003F6E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4475  003F70  22DA               	addwfc	fsr2h,f,c
  4476  003F72  04DE               	decf	postinc2,w,c
  4477  003F74  A4D8               	btfss	status,2,c
  4478  003F76  0012               	return	
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;tmr_drv.c: 290: {
  4482                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4483  003F78  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4484  003F7A  EC2F  F033         	call	_Tmr_StartTmr
  4485                           
  4486                           ;tmr_drv.c: 293: }
  4487  003F7E  0012               	return	
  4488  003F80                     __end_of_Tmr_TmrBConfig:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           intcon	equ	0xFF2
  4495                           intcon2	equ	0xFF1
  4496                           intcon3	equ	0xFF0
  4497                           postinc0	equ	0xFEE
  4498                           wreg	equ	0xFE8
  4499                           postdec1	equ	0xFE5
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           postdec2	equ	0xFDD
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _Tmr_TmrBPrSet *****************
  4510 ;; Defined at:
  4511 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  TmrNumb         1    wreg     unsigned char 
  4514 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4515 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4516 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4519 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4520 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      enum E7736
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4530 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;Total ram usage:       10 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:   12
  4537 ;; This function calls:
  4538 ;;		___lldiv
  4539 ;;		___lmul
  4540 ;; This function is called by:
  4541 ;;		_Tmr_TmrBConfig
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text9
  4546  0033A4                     __ptext9:
  4547                           	opt stack 0
  4548  0033A4                     _Tmr_TmrBPrSet:
  4549                           	opt stack 15
  4550                           
  4551                           ;incstack = 0
  4552                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4553  0033A4  0100               	movlb	0	; () banked
  4554  0033A6  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4555                           
  4556                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4557                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4558  0033A8  0E00               	movlw	0
  4559  0033AA  0100               	movlb	0	; () banked
  4560  0033AC  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4561  0033AE  0E00               	movlw	0
  4562  0033B0  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4563  0033B2  0E00               	movlw	0
  4564  0033B4  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4565  0033B6  0E00               	movlw	0
  4566  0033B8  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4570  0033BA  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4571  0033BC  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4572  0033BE  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4573  0033C2  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4574  0033C6  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4575  0033C8  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4576  0033CA  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4577  0033CE  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4578  0033D2  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4579  0033D4  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4580  0033D6  ECEC  F02B         	call	___lmul	;wreg free
  4581  0033DA  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4582  0033DE  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4583  0033E2  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4584  0033E6  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4585                           
  4586                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4587  0033EA  0E00               	movlw	0
  4588  0033EC  0100               	movlb	0	; () banked
  4589  0033EE  6F89               	movwf	___lldiv@dividend& (0+255),b
  4590  0033F0  0E1B               	movlw	27
  4591  0033F2  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4592  0033F4  0EB7               	movlw	183
  4593  0033F6  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4594  0033F8  0E00               	movlw	0
  4595  0033FA  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4596  0033FC  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4597  003400  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4598  003404  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4599  003408  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4600  00340C  EC5F  F028         	call	___lldiv	;wreg free
  4601  003410  0100               	movlb	0	; () banked
  4602  003412  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4603  003414  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4604  003416  E13A               	bnz	l14931
  4605  003418  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4606  00341A  A0D8               	btfss	status,0,c
  4607  00341C  D02D               	goto	l529
  4608  00341E  D036               	goto	l528
  4609  003420                     
  4610                           ; BSR set to: 0
  4611                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4612                           
  4613                           ; BSR set to: 0
  4614  003420  0E00               	movlw	0
  4615  003422  6F89               	movwf	___lldiv@dividend& (0+255),b
  4616  003424  0E1B               	movlw	27
  4617  003426  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4618  003428  0EB7               	movlw	183
  4619  00342A  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4620  00342C  0E00               	movlw	0
  4621  00342E  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4622  003430  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4623  003434  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4624  003438  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4625  00343C  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4626  003440  EC5F  F028         	call	___lldiv	;wreg free
  4627  003444  0100               	movlb	0	; () banked
  4628  003446  5189               	movf	?___lldiv& (0+255),w,b
  4629  003448  6ECB               	movwf	4043,c	;volatile
  4630                           
  4631                           ;tmr_drv.c: 210: break;
  4632  00344A  D01D               	goto	l531
  4633  00344C                     
  4634                           ; BSR set to: 0
  4635                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4636                           
  4637                           ; BSR set to: 0
  4638  00344C  0E00               	movlw	0
  4639  00344E  6F89               	movwf	___lldiv@dividend& (0+255),b
  4640  003450  0E1B               	movlw	27
  4641  003452  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4642  003454  0EB7               	movlw	183
  4643  003456  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4644  003458  0E00               	movlw	0
  4645  00345A  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4646  00345C  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4647  003460  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4648  003464  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4649  003468  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4650  00346C  EC5F  F028         	call	___lldiv	;wreg free
  4651  003470  0100               	movlb	0	; () banked
  4652  003472  5189               	movf	?___lldiv& (0+255),w,b
  4653  003474  6E77               	movwf	3959,c	;volatile
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;tmr_drv.c: 219: }
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;tmr_drv.c: 218: break;
  4660                           
  4661                           ;tmr_drv.c: 217: default:
  4662                           
  4663                           ;tmr_drv.c: 215: break;
  4664  003476  D007               	goto	l531
  4665  003478                     l529:
  4666                           
  4667                           ; BSR set to: 0
  4668                           
  4669                           ; BSR set to: 0
  4670  003478  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4671                           
  4672                           ; Switch size 1, requested type "space"
  4673                           ; Number of cases is 2, Range of values is 2 to 4
  4674                           ; switch strategies available:
  4675                           ; Name         Instructions Cycles
  4676                           ; simple_byte            7     4 (average)
  4677                           ;	Chosen strategy is simple_byte
  4678  00347A  0A02               	xorlw	2	; case 2
  4679  00347C  B4D8               	btfsc	status,2,c
  4680  00347E  D7D0               	goto	l530
  4681  003480  0A06               	xorlw	6	; case 4
  4682  003482  B4D8               	btfsc	status,2,c
  4683  003484  D7E3               	goto	l532
  4684  003486                     l531:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4688                           
  4689                           ; BSR set to: 0
  4690  003486  0E00               	movlw	0
  4691  003488  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4692                           
  4693                           ;tmr_drv.c: 223: }
  4694  00348A  0012               	return	
  4695  00348C                     l528:
  4696  00348C                     l14931:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;tmr_drv.c: 224: else
  4700                           ;tmr_drv.c: 225: {
  4701                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4702  00348C  0E01               	movlw	1
  4703  00348E  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4704                           
  4705                           ; BSR set to: 0
  4706  003490  0012               	return	
  4707  003492                     __end_of_Tmr_TmrBPrSet:
  4708                           	opt stack 0
  4709                           tblptru	equ	0xFF8
  4710                           tblptrh	equ	0xFF7
  4711                           tblptrl	equ	0xFF6
  4712                           tablat	equ	0xFF5
  4713                           prodh	equ	0xFF4
  4714                           prodl	equ	0xFF3
  4715                           intcon	equ	0xFF2
  4716                           intcon2	equ	0xFF1
  4717                           intcon3	equ	0xFF0
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           postdec1	equ	0xFE5
  4721                           fsr1h	equ	0xFE2
  4722                           fsr1l	equ	0xFE1
  4723                           indf2	equ	0xFDF
  4724                           postinc2	equ	0xFDE
  4725                           postdec2	equ	0xFDD
  4726                           fsr2h	equ	0xFDA
  4727                           fsr2l	equ	0xFD9
  4728                           status	equ	0xFD8
  4729                           
  4730 ;; *************** function _Tmr_TmrBIrqSet *****************
  4731 ;; Defined at:
  4732 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  TmrNumb         1    wreg     unsigned char 
  4735 ;;  Priority        1   29[BANK0 ] enum E7716
  4736 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4751 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4752 ;;Total ram usage:        3 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:   11
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_Tmr_TmrBConfig
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text10
  4763  005D02                     __ptext10:
  4764                           	opt stack 0
  4765  005D02                     _Tmr_TmrBIrqSet:
  4766                           	opt stack 16
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;incstack = 0
  4770                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4771  005D02  0100               	movlb	0	; () banked
  4772  005D04  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4773                           
  4774                           ;tmr_drv.c: 156: switch (TmrNumb)
  4775  005D06  D01A               	goto	l520
  4776  005D08                     l521:
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4780  005D08  929E               	bcf	3998,1,c	;volatile
  4781                           
  4782                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4783  005D0A  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4784  005D0C  D002               	bra	u8865
  4785  005D0E  929F               	bcf	3999,1,c	;volatile
  4786  005D10  D001               	bra	u8866
  4787  005D12                     u8865:
  4788  005D12  829F               	bsf	3999,1,c	;volatile
  4789  005D14                     u8866:
  4790                           
  4791                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4792  005D14  0100               	movlb	0	; () banked
  4793  005D16  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4794  005D18  D002               	bra	u8875
  4795  005D1A  929D               	bcf	3997,1,c	;volatile
  4796  005D1C  D001               	bra	u8876
  4797  005D1E                     u8875:
  4798  005D1E  829D               	bsf	3997,1,c	;volatile
  4799  005D20                     u8876:
  4800                           
  4801                           ;tmr_drv.c: 165: break;
  4802  005D20  0012               	return	
  4803  005D22                     l523:
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4807  005D22  96A4               	bcf	4004,3,c	;volatile
  4808                           
  4809                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4810  005D24  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4811  005D26  D002               	bra	u8885
  4812  005D28  96A5               	bcf	4005,3,c	;volatile
  4813  005D2A  D001               	bra	u8886
  4814  005D2C                     u8885:
  4815  005D2C  86A5               	bsf	4005,3,c	;volatile
  4816  005D2E                     u8886:
  4817                           
  4818                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4819  005D2E  0100               	movlb	0	; () banked
  4820  005D30  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4821  005D32  D002               	bra	u8895
  4822  005D34  96A3               	bcf	4003,3,c	;volatile
  4823  005D36  D001               	bra	u8896
  4824  005D38                     u8895:
  4825  005D38  86A3               	bsf	4003,3,c	;volatile
  4826  005D3A                     u8896:
  4827                           
  4828                           ;tmr_drv.c: 178: }
  4829                           
  4830                           ;tmr_drv.c: 177: break;
  4831                           
  4832                           ;tmr_drv.c: 176: default:
  4833                           
  4834                           ;tmr_drv.c: 174: break;
  4835  005D3A  0012               	return	
  4836  005D3C                     l520:
  4837  005D3C  0100               	movlb	0	; () banked
  4838  005D3E  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4839                           
  4840                           ; Switch size 1, requested type "space"
  4841                           ; Number of cases is 2, Range of values is 2 to 4
  4842                           ; switch strategies available:
  4843                           ; Name         Instructions Cycles
  4844                           ; simple_byte            7     4 (average)
  4845                           ;	Chosen strategy is simple_byte
  4846  005D40  0A02               	xorlw	2	; case 2
  4847  005D42  B4D8               	btfsc	status,2,c
  4848  005D44  D7E1               	goto	l521
  4849  005D46  0A06               	xorlw	6	; case 4
  4850  005D48  A4D8               	btfss	status,2,c
  4851  005D4A  0012               	return	
  4852  005D4C  D7EA               	goto	l523
  4853  005D4E                     __end_of_Tmr_TmrBIrqSet:
  4854                           	opt stack 0
  4855                           tblptru	equ	0xFF8
  4856                           tblptrh	equ	0xFF7
  4857                           tblptrl	equ	0xFF6
  4858                           tablat	equ	0xFF5
  4859                           prodh	equ	0xFF4
  4860                           prodl	equ	0xFF3
  4861                           intcon	equ	0xFF2
  4862                           intcon2	equ	0xFF1
  4863                           intcon3	equ	0xFF0
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           postdec1	equ	0xFE5
  4867                           fsr1h	equ	0xFE2
  4868                           fsr1l	equ	0xFE1
  4869                           indf2	equ	0xFDF
  4870                           postinc2	equ	0xFDE
  4871                           postdec2	equ	0xFDD
  4872                           fsr2h	equ	0xFDA
  4873                           fsr2l	equ	0xFD9
  4874                           status	equ	0xFD8
  4875                           
  4876 ;; *************** function _Tmr_StartTmr *****************
  4877 ;; Defined at:
  4878 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  TmrNumb         1    wreg     unsigned char 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;Total ram usage:        1 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:   11
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_Tmr_TmrBConfig
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text11
  4907  00665E                     __ptext11:
  4908                           	opt stack 0
  4909  00665E                     _Tmr_StartTmr:
  4910                           	opt stack 16
  4911                           
  4912                           ;incstack = 0
  4913                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4914  00665E  0100               	movlb	0	; () banked
  4915  006660  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4916                           
  4917                           ;tmr_drv.c: 245: switch (TmrNumb)
  4918  006662  D004               	goto	l538
  4919  006664                     l539:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4923  006664  84CA               	bsf	4042,2,c	;volatile
  4924                           
  4925                           ;tmr_drv.c: 250: break;
  4926  006666  0012               	return	
  4927  006668                     l541:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4931  006668  8476               	bsf	3958,2,c	;volatile
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;tmr_drv.c: 259: }
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;tmr_drv.c: 258: break;
  4938                           
  4939                           ;tmr_drv.c: 257: default:
  4940                           
  4941                           ;tmr_drv.c: 255: break;
  4942  00666A  0012               	return	
  4943  00666C                     l538:
  4944                           
  4945                           ; BSR set to: 0
  4946  00666C  0100               	movlb	0	; () banked
  4947  00666E  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4948                           
  4949                           ; Switch size 1, requested type "space"
  4950                           ; Number of cases is 2, Range of values is 2 to 4
  4951                           ; switch strategies available:
  4952                           ; Name         Instructions Cycles
  4953                           ; simple_byte            7     4 (average)
  4954                           ;	Chosen strategy is simple_byte
  4955  006670  0A02               	xorlw	2	; case 2
  4956  006672  B4D8               	btfsc	status,2,c
  4957  006674  D7F7               	goto	l539
  4958  006676  0A06               	xorlw	6	; case 4
  4959  006678  A4D8               	btfss	status,2,c
  4960  00667A  0012               	return	
  4961  00667C  D7F5               	goto	l541
  4962  00667E                     __end_of_Tmr_StartTmr:
  4963                           	opt stack 0
  4964                           tblptru	equ	0xFF8
  4965                           tblptrh	equ	0xFF7
  4966                           tblptrl	equ	0xFF6
  4967                           tablat	equ	0xFF5
  4968                           prodh	equ	0xFF4
  4969                           prodl	equ	0xFF3
  4970                           intcon	equ	0xFF2
  4971                           intcon2	equ	0xFF1
  4972                           intcon3	equ	0xFF0
  4973                           postinc0	equ	0xFEE
  4974                           wreg	equ	0xFE8
  4975                           postdec1	equ	0xFE5
  4976                           fsr1h	equ	0xFE2
  4977                           fsr1l	equ	0xFE1
  4978                           indf2	equ	0xFDF
  4979                           postinc2	equ	0xFDE
  4980                           postdec2	equ	0xFDD
  4981                           fsr2h	equ	0xFDA
  4982                           fsr2l	equ	0xFD9
  4983                           status	equ	0xFD8
  4984                           
  4985 ;; *************** function _TmrBInit *****************
  4986 ;; Defined at:
  4987 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  TmrNumb         1    wreg     unsigned char 
  4990 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4991 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5007 ;;Total ram usage:        4 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:   11
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_Tmr_TmrBConfig
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text12
  5018  004B20                     __ptext12:
  5019                           	opt stack 0
  5020  004B20                     _TmrBInit:
  5021                           	opt stack 16
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;incstack = 0
  5025                           ;TmrBInit@TmrNumb stored from wreg
  5026  004B20  0100               	movlb	0	; () banked
  5027  004B22  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5028                           
  5029                           ;tmr_drv.c: 75: switch (TmrNumb)
  5030  004B24  D03F               	goto	l500
  5031  004B26                     l503:
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5035  004B26  90CA               	bcf	4042,0,c	;volatile
  5036  004B28  D001               	goto	L1
  5037  004B2A                     l505:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5041  004B2A  80CA               	bsf	4042,0,c	;volatile
  5042  004B2C                     L1:
  5043                           
  5044                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5045  004B2C  92CA               	bcf	4042,1,c	;volatile
  5046                           
  5047                           ;tmr_drv.c: 91: break;
  5048  004B2E  D00E               	goto	l504
  5049  004B30                     l506:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5053  004B30  80CA               	bsf	4042,0,c	;volatile
  5054                           
  5055                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5056  004B32  82CA               	bsf	4042,1,c	;volatile
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;tmr_drv.c: 100: }
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;tmr_drv.c: 99: break;
  5063                           
  5064                           ;tmr_drv.c: 98: default:
  5065                           
  5066                           ;tmr_drv.c: 96: break;
  5067  004B34  D00B               	goto	l504
  5068  004B36                     
  5069                           ; BSR set to: 0
  5070  004B36  0100               	movlb	0	; () banked
  5071  004B38  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5072                           
  5073                           ; Switch size 1, requested type "space"
  5074                           ; Number of cases is 3, Range of values is 1 to 16
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte           10     6 (average)
  5078                           ;	Chosen strategy is simple_byte
  5079  004B3A  0A01               	xorlw	1	; case 1
  5080  004B3C  B4D8               	btfsc	status,2,c
  5081  004B3E  D7F3               	goto	l503
  5082  004B40  0A05               	xorlw	5	; case 4
  5083  004B42  B4D8               	btfsc	status,2,c
  5084  004B44  D7F2               	goto	l505
  5085  004B46  0A14               	xorlw	20	; case 16
  5086  004B48  B4D8               	btfsc	status,2,c
  5087  004B4A  D7F2               	goto	l506
  5088  004B4C                     l504:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5092                           
  5093                           ; BSR set to: 0
  5094  004B4C  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5095  004B50  0EFF               	movlw	255
  5096  004B52  277F               	addwf	??_TmrBInit& (0+255),f,b
  5097  004B54  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5098  004B56  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5099  004B58  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5100  004B5A  50CA               	movf	4042,w,c	;volatile
  5101  004B5C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5102  004B5E  0B87               	andlw	-121
  5103  004B60  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5104  004B62  6ECA               	movwf	4042,c	;volatile
  5105                           
  5106                           ;tmr_drv.c: 104: break;
  5107  004B64  0012               	return	
  5108  004B66                     l511:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5112  004B66  9076               	bcf	3958,0,c	;volatile
  5113  004B68  D001               	goto	L2
  5114  004B6A                     l513:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5118  004B6A  8076               	bsf	3958,0,c	;volatile
  5119  004B6C                     L2:
  5120                           
  5121                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5122  004B6C  9276               	bcf	3958,1,c	;volatile
  5123                           
  5124                           ;tmr_drv.c: 120: break;
  5125  004B6E  D00D               	goto	l512
  5126  004B70                     l514:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5130  004B70  8076               	bsf	3958,0,c	;volatile
  5131                           
  5132                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5133  004B72  8276               	bsf	3958,1,c	;volatile
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;tmr_drv.c: 129: }
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;tmr_drv.c: 128: break;
  5140                           
  5141                           ;tmr_drv.c: 127: default:
  5142                           
  5143                           ;tmr_drv.c: 125: break;
  5144  004B74  D00A               	goto	l512
  5145  004B76                     
  5146                           ; BSR set to: 0
  5147                           
  5148                           ; BSR set to: 0
  5149  004B76  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5150                           
  5151                           ; Switch size 1, requested type "space"
  5152                           ; Number of cases is 3, Range of values is 1 to 16
  5153                           ; switch strategies available:
  5154                           ; Name         Instructions Cycles
  5155                           ; simple_byte           10     6 (average)
  5156                           ;	Chosen strategy is simple_byte
  5157  004B78  0A01               	xorlw	1	; case 1
  5158  004B7A  B4D8               	btfsc	status,2,c
  5159  004B7C  D7F4               	goto	l511
  5160  004B7E  0A05               	xorlw	5	; case 4
  5161  004B80  B4D8               	btfsc	status,2,c
  5162  004B82  D7F3               	goto	l513
  5163  004B84  0A14               	xorlw	20	; case 16
  5164  004B86  B4D8               	btfsc	status,2,c
  5165  004B88  D7F3               	goto	l514
  5166  004B8A                     l512:
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5170                           
  5171                           ; BSR set to: 0
  5172  004B8A  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5173  004B8E  0EFF               	movlw	255
  5174  004B90  277F               	addwf	??_TmrBInit& (0+255),f,b
  5175  004B92  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5176  004B94  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5177  004B96  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5178  004B98  5076               	movf	3958,w,c	;volatile
  5179  004B9A  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5180  004B9C  0B87               	andlw	-121
  5181  004B9E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5182  004BA0  6E76               	movwf	3958,c	;volatile
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;tmr_drv.c: 137: }
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;tmr_drv.c: 136: break;
  5189                           
  5190                           ;tmr_drv.c: 135: default:
  5191                           
  5192                           ;tmr_drv.c: 133: break;
  5193  004BA2  0012               	return	
  5194  004BA4                     l500:
  5195                           
  5196                           ; BSR set to: 0
  5197  004BA4  0100               	movlb	0	; () banked
  5198  004BA6  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5199                           
  5200                           ; Switch size 1, requested type "space"
  5201                           ; Number of cases is 2, Range of values is 2 to 4
  5202                           ; switch strategies available:
  5203                           ; Name         Instructions Cycles
  5204                           ; simple_byte            7     4 (average)
  5205                           ;	Chosen strategy is simple_byte
  5206  004BA8  0A02               	xorlw	2	; case 2
  5207  004BAA  B4D8               	btfsc	status,2,c
  5208  004BAC  D7C4               	goto	l502
  5209  004BAE  0A06               	xorlw	6	; case 4
  5210  004BB0  A4D8               	btfss	status,2,c
  5211  004BB2  0012               	return	
  5212  004BB4  D7E0               	goto	l510
  5213  004BB6                     __end_of_TmrBInit:
  5214                           	opt stack 0
  5215                           tblptru	equ	0xFF8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           tablat	equ	0xFF5
  5219                           prodh	equ	0xFF4
  5220                           prodl	equ	0xFF3
  5221                           intcon	equ	0xFF2
  5222                           intcon2	equ	0xFF1
  5223                           intcon3	equ	0xFF0
  5224                           postinc0	equ	0xFEE
  5225                           wreg	equ	0xFE8
  5226                           postdec1	equ	0xFE5
  5227                           fsr1h	equ	0xFE2
  5228                           fsr1l	equ	0xFE1
  5229                           indf2	equ	0xFDF
  5230                           postinc2	equ	0xFDE
  5231                           postdec2	equ	0xFDD
  5232                           fsr2h	equ	0xFDA
  5233                           fsr2l	equ	0xFD9
  5234                           status	equ	0xFD8
  5235                           
  5236 ;; *************** function _Sch_MainScheduler *****************
  5237 ;; Defined at:
  5238 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:   22
  5259 ;; This function calls:
  5260 ;;		_InitializeTasks
  5261 ;;		_ScheduleTasks
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text13
  5268  0066DC                     __ptext13:
  5269                           	opt stack 0
  5270  0066DC                     _Sch_MainScheduler:
  5271                           	opt stack 8
  5272                           
  5273                           ;os_sched.c: 178: InitializeTasks();
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;incstack = 0
  5277  0066DC  EC92  F029         	call	_InitializeTasks	;wreg free
  5278                           
  5279                           ;os_sched.c: 180: SystemState = RunningState;
  5280  0066E0  0E01               	movlw	1
  5281  0066E2  0100               	movlb	0	; () banked
  5282  0066E4  6FD3               	movwf	_SystemState& (0+255),b
  5283  0066E6                     
  5284                           ;os_sched.c: 188: {
  5285                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5286                           
  5287                           ; BSR set to: 0
  5288  0066E6  0102               	movlb	2	; () banked
  5289  0066E8  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5290  0066EA  A4D8               	btfss	status,2,c
  5291  0066EC  D7FC               	goto	l790
  5292                           
  5293                           ; BSR set to: 2
  5294                           ;os_sched.c: 191: {
  5295                           ;os_sched.c: 196: ScheduleTasks();
  5296  0066EE  ECC2  F018         	call	_ScheduleTasks	;wreg free
  5297                           
  5298                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5299  0066F2  0E01               	movlw	1
  5300  0066F4  0102               	movlb	2	; () banked
  5301  0066F6  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5302                           
  5303                           ; BSR set to: 2
  5304                           
  5305                           ; BSR set to: 2
  5306  0066F8  D7F6               	goto	l790
  5307  0066FA                     __end_of_Sch_MainScheduler:
  5308                           	opt stack 0
  5309                           tblptru	equ	0xFF8
  5310                           tblptrh	equ	0xFF7
  5311                           tblptrl	equ	0xFF6
  5312                           tablat	equ	0xFF5
  5313                           prodh	equ	0xFF4
  5314                           prodl	equ	0xFF3
  5315                           intcon	equ	0xFF2
  5316                           intcon2	equ	0xFF1
  5317                           intcon3	equ	0xFF0
  5318                           postinc0	equ	0xFEE
  5319                           wreg	equ	0xFE8
  5320                           postdec1	equ	0xFE5
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           indf2	equ	0xFDF
  5324                           postinc2	equ	0xFDE
  5325                           postdec2	equ	0xFDD
  5326                           fsr2h	equ	0xFDA
  5327                           fsr2l	equ	0xFD9
  5328                           status	equ	0xFD8
  5329                           
  5330 ;; *************** function _ScheduleTasks *****************
  5331 ;; Defined at:
  5332 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;		None
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  ActiveTaskIn    1    4[BANK3 ] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;Total ram usage:        5 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:   21
  5353 ;; This function calls:
  5354 ;;		_I2cSlv_MainTask
  5355 ;;		_Led_MainTask
  5356 ;;		_MdmHttp_MainTask
  5357 ;;		_Mdm_DrvMainFn
  5358 ;;		_Mdm_MainTask
  5359 ;;		_MyApp_Task
  5360 ;;		_Rtcm_MainTask
  5361 ;;		_Term_MainTask
  5362 ;;		_UsbDevice_MainTask
  5363 ;;		_Wdg_MainTask
  5364 ;; This function is called by:
  5365 ;;		_Sch_MainScheduler
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text14
  5370  003184                     __ptext14:
  5371                           	opt stack 0
  5372  003184                     _ScheduleTasks:
  5373                           	opt stack 8
  5374                           
  5375                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5376                           
  5377                           ; BSR set to: 2
  5378                           ;incstack = 0
  5379  003184  0E00               	movlw	0
  5380  003186  0103               	movlb	3	; () banked
  5381  003188  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5382                           
  5383                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5384  00318A  0E00               	movlw	0
  5385  00318C  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5386  00318E                     l16251:
  5387                           
  5388                           ; BSR set to: 3
  5389  00318E  0E30               	movlw	low _TaskNumber
  5390  003190  6EF6               	movwf	tblptrl,c
  5391  003192                     	if	1	;There is more than 1 active tblptr byte
  5392  003192  0EFC               	movlw	high _TaskNumber
  5393  003194  6EF7               	movwf	tblptrh,c
  5394  003196                     	endif
  5395  003196                     	if	0	;There are less than 3 active tblptr bytes
  5396  003196                     	endif
  5397  003196  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5398  003198  6FFB               	movwf	??_ScheduleTasks& (0+255),b
  5399  00319A  6BFC               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5400  00319C  0009               	tblrd		*+
  5401  00319E  50F5               	movf	tablat,w,c
  5402  0031A0  5DFB               	subwf	??_ScheduleTasks& (0+255),w,b
  5403  0031A2  0009               	tblrd		*+
  5404  0031A4  50F5               	movf	tablat,w,c
  5405  0031A6  59FC               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5406  0031A8  B0D8               	btfsc	status,0,c
  5407  0031AA  0012               	return	
  5408                           
  5409                           ; BSR set to: 3
  5410                           ;os_sched.c: 106: {
  5411                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5412                           
  5413                           ; BSR set to: 3
  5414                           
  5415                           ; BSR set to: 3
  5416  0031AC  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5417  0031AE  0D08               	mullw	8
  5418  0031B0  0E03               	movlw	3
  5419  0031B2  26F3               	addwf	prodl,f,c
  5420  0031B4  0E00               	movlw	0
  5421  0031B6  22F4               	addwfc	prodh,f,c
  5422  0031B8  0E86               	movlw	low _TaskTable
  5423  0031BA  24F3               	addwf	prodl,w,c
  5424  0031BC  6ED9               	movwf	fsr2l,c
  5425  0031BE  0E05               	movlw	high _TaskTable
  5426  0031C0  20F4               	addwfc	prodh,w,c
  5427  0031C2  6EDA               	movwf	fsr2h,c
  5428  0031C4  2ADE               	incf	postinc2,f,c
  5429  0031C6  0E00               	movlw	0
  5430  0031C8  22DD               	addwfc	postdec2,f,c
  5431                           
  5432                           ; BSR set to: 3
  5433                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5434  0031CA  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5435  0031CC  0D08               	mullw	8
  5436  0031CE  0E05               	movlw	5
  5437  0031D0  26F3               	addwf	prodl,f,c
  5438  0031D2  0E00               	movlw	0
  5439  0031D4  22F4               	addwfc	prodh,f,c
  5440  0031D6  0E86               	movlw	low _TaskTable
  5441  0031D8  24F3               	addwf	prodl,w,c
  5442  0031DA  6ED9               	movwf	fsr2l,c
  5443  0031DC  0E05               	movlw	high _TaskTable
  5444  0031DE  20F4               	addwfc	prodh,w,c
  5445  0031E0  6EDA               	movwf	fsr2h,c
  5446  0031E2  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5447  0031E4  0D08               	mullw	8
  5448  0031E6  0E03               	movlw	3
  5449  0031E8  26F3               	addwf	prodl,f,c
  5450  0031EA  0E00               	movlw	0
  5451  0031EC  22F4               	addwfc	prodh,f,c
  5452  0031EE  0E86               	movlw	low _TaskTable
  5453  0031F0  24F3               	addwf	prodl,w,c
  5454  0031F2  6EE1               	movwf	fsr1l,c
  5455  0031F4  0E05               	movlw	high _TaskTable
  5456  0031F6  20F4               	addwfc	prodh,w,c
  5457  0031F8  6EE2               	movwf	fsr1h,c
  5458  0031FA  50DE               	movf	postinc2,w,c
  5459  0031FC  5CE6               	subwf	postinc1,w,c
  5460  0031FE  50DE               	movf	postinc2,w,c
  5461  003200  58E6               	subwfb	postinc1,w,c
  5462  003202  A0D8               	btfss	status,0,c
  5463  003204  D04E               	goto	l775
  5464                           
  5465                           ; BSR set to: 3
  5466                           ;os_sched.c: 111: {
  5467                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5468  003206  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5469  003208  0D08               	mullw	8
  5470  00320A  0E03               	movlw	3
  5471  00320C  26F3               	addwf	prodl,f,c
  5472  00320E  0E00               	movlw	0
  5473  003210  22F4               	addwfc	prodh,f,c
  5474  003212  0E86               	movlw	low _TaskTable
  5475  003214  24F3               	addwf	prodl,w,c
  5476  003216  6ED9               	movwf	fsr2l,c
  5477  003218  0E05               	movlw	high _TaskTable
  5478  00321A  20F4               	addwfc	prodh,w,c
  5479  00321C  6EDA               	movwf	fsr2h,c
  5480  00321E  0E00               	movlw	0
  5481  003220  6EDE               	movwf	postinc2,c
  5482  003222  0E00               	movlw	0
  5483  003224  6EDD               	movwf	postdec2,c
  5484                           
  5485                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5486  003226  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5487  003228  0D08               	mullw	8
  5488  00322A  0E02               	movlw	2
  5489  00322C  26F3               	addwf	prodl,f,c
  5490  00322E  0E00               	movlw	0
  5491  003230  22F4               	addwfc	prodh,f,c
  5492  003232  0E86               	movlw	low _TaskTable
  5493  003234  24F3               	addwf	prodl,w,c
  5494  003236  6ED9               	movwf	fsr2l,c
  5495  003238  0E05               	movlw	high _TaskTable
  5496  00323A  20F4               	addwfc	prodh,w,c
  5497  00323C  6EDA               	movwf	fsr2h,c
  5498  00323E  0E01               	movlw	1
  5499  003240  6EDF               	movwf	indf2,c
  5500                           
  5501                           ; BSR set to: 3
  5502                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5503  003242  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5504  003244  0D08               	mullw	8
  5505  003246  0E86               	movlw	low _TaskTable
  5506  003248  24F3               	addwf	prodl,w,c
  5507  00324A  6ED9               	movwf	fsr2l,c
  5508  00324C  0E05               	movlw	high _TaskTable
  5509  00324E  20F4               	addwfc	prodh,w,c
  5510  003250  6EDA               	movwf	fsr2h,c
  5511  003252  D801               	call	u16288
  5512  003254  D017               	goto	u16289
  5513  003256                     u16288:
  5514  003256  0005               	push	
  5515  003258  6EFA               	movwf	pclath,c
  5516  00325A  50DE               	movf	postinc2,w,c
  5517  00325C  6EFD               	movwf	tosl,c
  5518  00325E  50DE               	movf	postinc2,w,c
  5519  003260  6EFE               	movwf	tosh,c
  5520  003262  50F8               	movf	tblptru,w,c
  5521  003264  6EFF               	movwf	tosu,c
  5522  003266  50FA               	movf	pclath,w,c
  5523  003268  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5524  00326A  0D08               	mullw	8
  5525  00326C  0E07               	movlw	7
  5526  00326E  26F3               	addwf	prodl,f,c
  5527  003270  0E00               	movlw	0
  5528  003272  22F4               	addwfc	prodh,f,c
  5529  003274  0E86               	movlw	low _TaskTable
  5530  003276  24F3               	addwf	prodl,w,c
  5531  003278  6ED9               	movwf	fsr2l,c
  5532  00327A  0E05               	movlw	high _TaskTable
  5533  00327C  20F4               	addwfc	prodh,w,c
  5534  00327E  6EDA               	movwf	fsr2h,c
  5535  003280  50DF               	movf	indf2,w,c
  5536  003282  0012               	return		;indir
  5537  003284                     u16289:
  5538                           
  5539                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5540  003284  0103               	movlb	3	; () banked
  5541  003286  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5542  003288  0D08               	mullw	8
  5543  00328A  0E02               	movlw	2
  5544  00328C  26F3               	addwf	prodl,f,c
  5545  00328E  0E00               	movlw	0
  5546  003290  22F4               	addwfc	prodh,f,c
  5547  003292  0E86               	movlw	low _TaskTable
  5548  003294  24F3               	addwf	prodl,w,c
  5549  003296  6ED9               	movwf	fsr2l,c
  5550  003298  0E05               	movlw	high _TaskTable
  5551  00329A  20F4               	addwfc	prodh,w,c
  5552  00329C  6EDA               	movwf	fsr2h,c
  5553  00329E  0E00               	movlw	0
  5554  0032A0  6EDF               	movwf	indf2,c
  5555  0032A2                     l775:
  5556                           
  5557                           ; BSR set to: 3
  5558                           
  5559                           ; BSR set to: 3
  5560                           
  5561                           ;os_sched.c: 117: else
  5562                           ;os_sched.c: 118: {
  5563                           
  5564                           ; BSR set to: 3
  5565  0032A2  2BFF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5566  0032A4  D774               	goto	l16251
  5567  0032A6                     __end_of_ScheduleTasks:
  5568                           	opt stack 0
  5569                           tosu	equ	0xFFF
  5570                           tosh	equ	0xFFE
  5571                           tosl	equ	0xFFD
  5572                           pclath	equ	0xFFA
  5573                           tblptru	equ	0xFF8
  5574                           tblptrh	equ	0xFF7
  5575                           tblptrl	equ	0xFF6
  5576                           tablat	equ	0xFF5
  5577                           prodh	equ	0xFF4
  5578                           prodl	equ	0xFF3
  5579                           intcon	equ	0xFF2
  5580                           intcon2	equ	0xFF1
  5581                           intcon3	equ	0xFF0
  5582                           postinc0	equ	0xFEE
  5583                           wreg	equ	0xFE8
  5584                           postinc1	equ	0xFE6
  5585                           postdec1	equ	0xFE5
  5586                           fsr1h	equ	0xFE2
  5587                           fsr1l	equ	0xFE1
  5588                           indf2	equ	0xFDF
  5589                           postinc2	equ	0xFDE
  5590                           postdec2	equ	0xFDD
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function _InitializeTasks *****************
  5596 ;; Defined at:
  5597 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  ActiveTaskIn    1    2[BANK3 ] unsigned char 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5612 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5613 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5614 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
  5615 ;;Total ram usage:        3 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:   21
  5618 ;; This function calls:
  5619 ;;		_I2cSlv_MainTask
  5620 ;;		_Led_MainTask
  5621 ;;		_MdmHttp_MainTask
  5622 ;;		_Mdm_DrvMainFn
  5623 ;;		_Mdm_MainTask
  5624 ;;		_MyApp_Task
  5625 ;;		_Rtcm_MainTask
  5626 ;;		_Term_MainTask
  5627 ;;		_UsbDevice_MainTask
  5628 ;;		_Wdg_MainTask
  5629 ;; This function is called by:
  5630 ;;		_Sch_MainScheduler
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text15
  5635  005324                     __ptext15:
  5636                           	opt stack 0
  5637  005324                     _InitializeTasks:
  5638                           	opt stack 8
  5639                           
  5640                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5641                           
  5642                           ; BSR set to: 3
  5643                           ;incstack = 0
  5644  005324  0E00               	movlw	0
  5645  005326  0103               	movlb	3	; () banked
  5646  005328  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5647                           
  5648                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5649  00532A  0E00               	movlw	0
  5650  00532C  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5651  00532E                     l16239:
  5652                           
  5653                           ; BSR set to: 3
  5654  00532E  0E30               	movlw	low _TaskNumber
  5655  005330  6EF6               	movwf	tblptrl,c
  5656  005332                     	if	1	;There is more than 1 active tblptr byte
  5657  005332  0EFC               	movlw	high _TaskNumber
  5658  005334  6EF7               	movwf	tblptrh,c
  5659  005336                     	endif
  5660  005336                     	if	0	;There are less than 3 active tblptr bytes
  5661  005336                     	endif
  5662  005336  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5663  005338  6FFB               	movwf	??_InitializeTasks& (0+255),b
  5664  00533A  6BFC               	clrf	(??_InitializeTasks+1)& (0+255),b
  5665  00533C  0009               	tblrd		*+
  5666  00533E  50F5               	movf	tablat,w,c
  5667  005340  5DFB               	subwf	??_InitializeTasks& (0+255),w,b
  5668  005342  0009               	tblrd		*+
  5669  005344  50F5               	movf	tablat,w,c
  5670  005346  59FC               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5671  005348  B0D8               	btfsc	status,0,c
  5672  00534A  0012               	return	
  5673                           
  5674                           ; BSR set to: 3
  5675                           ;os_sched.c: 86: {
  5676                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5677                           
  5678                           ; BSR set to: 3
  5679                           
  5680                           ; BSR set to: 3
  5681  00534C  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5682  00534E  0D08               	mullw	8
  5683  005350  0E86               	movlw	low _TaskTable
  5684  005352  24F3               	addwf	prodl,w,c
  5685  005354  6ED9               	movwf	fsr2l,c
  5686  005356  0E05               	movlw	high _TaskTable
  5687  005358  20F4               	addwfc	prodh,w,c
  5688  00535A  6EDA               	movwf	fsr2h,c
  5689  00535C  D801               	call	u16248
  5690  00535E  D017               	goto	u16249
  5691  005360                     u16248:
  5692  005360  0005               	push	
  5693  005362  6EFA               	movwf	pclath,c
  5694  005364  50DE               	movf	postinc2,w,c
  5695  005366  6EFD               	movwf	tosl,c
  5696  005368  50DE               	movf	postinc2,w,c
  5697  00536A  6EFE               	movwf	tosh,c
  5698  00536C  50F8               	movf	tblptru,w,c
  5699  00536E  6EFF               	movwf	tosu,c
  5700  005370  50FA               	movf	pclath,w,c
  5701  005372  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5702  005374  0D08               	mullw	8
  5703  005376  0E07               	movlw	7
  5704  005378  26F3               	addwf	prodl,f,c
  5705  00537A  0E00               	movlw	0
  5706  00537C  22F4               	addwfc	prodh,f,c
  5707  00537E  0E86               	movlw	low _TaskTable
  5708  005380  24F3               	addwf	prodl,w,c
  5709  005382  6ED9               	movwf	fsr2l,c
  5710  005384  0E05               	movlw	high _TaskTable
  5711  005386  20F4               	addwfc	prodh,w,c
  5712  005388  6EDA               	movwf	fsr2h,c
  5713  00538A  50DF               	movf	indf2,w,c
  5714  00538C  0012               	return		;indir
  5715  00538E                     u16249:
  5716  00538E  0103               	movlb	3	; () banked
  5717  005390  2BFD               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5718  005392  D7CD               	goto	l16239
  5719  005394                     __end_of_InitializeTasks:
  5720                           	opt stack 0
  5721                           tosu	equ	0xFFF
  5722                           tosh	equ	0xFFE
  5723                           tosl	equ	0xFFD
  5724                           pclath	equ	0xFFA
  5725                           tblptru	equ	0xFF8
  5726                           tblptrh	equ	0xFF7
  5727                           tblptrl	equ	0xFF6
  5728                           tablat	equ	0xFF5
  5729                           prodh	equ	0xFF4
  5730                           prodl	equ	0xFF3
  5731                           intcon	equ	0xFF2
  5732                           intcon2	equ	0xFF1
  5733                           intcon3	equ	0xFF0
  5734                           postinc0	equ	0xFEE
  5735                           wreg	equ	0xFE8
  5736                           postinc1	equ	0xFE6
  5737                           postdec1	equ	0xFE5
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           postdec2	equ	0xFDD
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function _MyApp_Task *****************
  5748 ;; Defined at:
  5749 ;;		line 142 in file "../Source/c/04_App/app.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  Options         1    wreg     unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  Options         1    0[COMRAM] unsigned char 
  5754 ;;  emptyNumber    13   19[BANK1 ] const unsigned char [13]
  5755 ;;  cmdAddNumber    4   35[BANK1 ] const unsigned char [4]
  5756 ;;  cmpString       3   32[BANK1 ] unsigned char [3]
  5757 ;;  numberInMemo    1   40[BANK1 ] unsigned char 
  5758 ;;  memoryResult    1   39[BANK1 ] enum E8114
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5771 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5772 ;;Total ram usage:       22 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:   19
  5775 ;; This function calls:
  5776 ;;		_GetCallerNumber
  5777 ;;		_GetLastInteractionNumber
  5778 ;;		_Led_SetLedBlinkTime
  5779 ;;		_Led_SetLedStatus
  5780 ;;		_Mdm_GetSmsData
  5781 ;;		_Mdm_HangPhoneCall
  5782 ;;		_Mdm_IsRinging
  5783 ;;		_Mdm_IsSmsReceived
  5784 ;;		_Mdm_RequestSmsData
  5785 ;;		_StringCompare
  5786 ;;		_StringCopy
  5787 ;;		_Uart_WriteConstString
  5788 ;;		_findEmptySpot
  5789 ;;		_initFsm
  5790 ;;		_initMemorizedNumbersCount
  5791 ;;		_isNumberInMemory
  5792 ;;		_parseCommand
  5793 ;;		_saveNumberInMemory
  5794 ;;		_waitSetupCall
  5795 ;; This function is called by:
  5796 ;;		_InitializeTasks
  5797 ;;		_ScheduleTasks
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text16
  5802  000ABC                     __ptext16:
  5803                           	opt stack 0
  5804  000ABC                     _MyApp_Task:
  5805                           	opt stack 9
  5806                           
  5807                           ;app.c: 144: const uint8_t emptyNumber[((UINT8)(13))] = {0};
  5808                           
  5809                           ; BSR set to: 3
  5810                           ;incstack = 0
  5811  000ABC  0E11               	movlw	low MyApp_Task@F9035
  5812  000ABE  6EF6               	movwf	tblptrl,c
  5813  000AC0                     	if	1	;There is more than 1 active tblptr byte
  5814  000AC0  0EFC               	movlw	high MyApp_Task@F9035
  5815  000AC2  6EF7               	movwf	tblptrh,c
  5816  000AC4                     	endif
  5817  000AC4                     	if	0	;There are less than 3 active tblptr bytes
  5818  000AC4                     	endif
  5819  000AC4  EE21  F013         	lfsr	2,MyApp_Task@emptyNumber
  5820  000AC8  0E0C               	movlw	12
  5821  000ACA                     u15950:
  5822  000ACA  0009               	tblrd		*+
  5823  000ACC  CFF5 FFDE          	movff	tablat,postinc2
  5824  000AD0  06E8               	decf	wreg,f,c
  5825  000AD2  E2FB               	bc	u15950
  5826                           
  5827                           ;app.c: 145: static UINT8 receivedNumber[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5
      +                          ', '6', '7', '8', '9'};
  5828                           ;app.c: 150: const uint8_t cmdAddNumber[] = {'N', 'U', 'M', '+'};
  5829  000AD4  0E24               	movlw	low MyApp_Task@F9038
  5830  000AD6  6EF6               	movwf	tblptrl,c
  5831  000AD8                     	if	1	;There is more than 1 active tblptr byte
  5832  000AD8  0EFC               	movlw	high MyApp_Task@F9038
  5833  000ADA  6EF7               	movwf	tblptrh,c
  5834  000ADC                     	endif
  5835  000ADC                     	if	0	;There are less than 3 active tblptr bytes
  5836  000ADC                     	endif
  5837  000ADC  0009               	tblrd		*+
  5838  000ADE  CFF5 F123          	movff	tablat,MyApp_Task@cmdAddNumber
  5839  000AE2  0009               	tblrd		*+
  5840  000AE4  CFF5 F124          	movff	tablat,MyApp_Task@cmdAddNumber+1
  5841  000AE8  0009               	tblrd		*+
  5842  000AEA  CFF5 F125          	movff	tablat,MyApp_Task@cmdAddNumber+2
  5843  000AEE  000A               	tblrd		*-
  5844  000AF0  CFF5 F126          	movff	tablat,MyApp_Task@cmdAddNumber+3
  5845                           
  5846                           ;app.c: 151: uint8_t cmpString[] = {'c', 'a', 't'};
  5847  000AF4  C3CA  F120         	movff	MyApp_Task@F9040,MyApp_Task@cmpString
  5848  000AF8  C3CB  F121         	movff	MyApp_Task@F9040+1,MyApp_Task@cmpString+1
  5849  000AFC  C3CC  F122         	movff	MyApp_Task@F9040+2,MyApp_Task@cmpString+2
  5850                           
  5851                           ;app.c: 153: static gateFsmStates currentState = GATE_INIT;
  5852                           ;app.c: 154: I2cOpStsType memoryResult = OP_COMPLETE;
  5853  000B00  0E01               	movlw	1
  5854  000B02  0101               	movlb	1	; () banked
  5855  000B04  6F27               	movwf	MyApp_Task@memoryResult& (0+255),b
  5856                           
  5857                           ; BSR set to: 1
  5858                           ;app.c: 155: uint8_t numberInMemory = 0;
  5859  000B06  0E00               	movlw	0
  5860  000B08  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  5861                           
  5862                           ;app.c: 157: switch (SystemState)
  5863  000B0A  D184               	goto	l2607
  5864  000B0C                     
  5865                           ;app.c: 162: Led_SetLedBlinkTime(1u,100,900);
  5866                           
  5867                           ; BSR set to: 1
  5868  000B0C  0E00               	movlw	0
  5869  000B0E  0100               	movlb	0	; () banked
  5870  000B10  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5871  000B12  0E64               	movlw	100
  5872  000B14  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5873  000B16  0E03               	movlw	3
  5874  000B18  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5875  000B1A  0E84               	movlw	132
  5876  000B1C  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5877  000B1E  0E01               	movlw	1
  5878  000B20  ECEE  F02C         	call	_Led_SetLedBlinkTime
  5879                           
  5880                           ;app.c: 163: break;
  5881  000B24  0012               	return	
  5882  000B26                     
  5883                           ;app.c: 170: if (initFsm())
  5884  000B26  ECF1  F02E         	call	_initFsm	;wreg free
  5885  000B2A  0900               	iorlw	0
  5886  000B2C  B4D8               	btfsc	status,2,c
  5887  000B2E  0012               	return	
  5888                           
  5889                           ;app.c: 171: {
  5890                           ;app.c: 172: if (isMemoryEmpty)
  5891  000B30  0101               	movlb	1	; () banked
  5892  000B32  51FE               	movf	_isMemoryEmpty& (0+255),w,b
  5893  000B34  B4D8               	btfsc	status,2,c
  5894  000B36  D036               	goto	l2614
  5895                           
  5896                           ; BSR set to: 1
  5897                           ;app.c: 173: {
  5898                           ;app.c: 174: if (waitSetupCall())
  5899  000B38  EC0C  F02E         	call	_waitSetupCall	;wreg free
  5900  000B3C  0900               	iorlw	0
  5901  000B3E  B4D8               	btfsc	status,2,c
  5902  000B40  D003               	goto	l2615
  5903                           
  5904                           ;app.c: 175: {
  5905                           ;app.c: 176: currentState = GATE_SAVE_FIRST_MASTER;
  5906  000B42  0E01               	movlw	1
  5907  000B44  0101               	movlb	1	; () banked
  5908  000B46  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5909  000B48                     l2615:
  5910                           
  5911                           ;app.c: 177: }
  5912                           ;app.c: 178: if (Mdm_IsSmsReceived())
  5913                           
  5914                           ; BSR set to: 1
  5915  000B48  ECA5  F032         	call	_Mdm_IsSmsReceived	;wreg free
  5916  000B4C  0900               	iorlw	0
  5917  000B4E  A4D8               	btfss	status,2,c
  5918                           
  5919                           ;app.c: 179: {
  5920                           ;app.c: 180: Mdm_RequestSmsData();
  5921  000B50  EC5E  F034         	call	_Mdm_RequestSmsData	;wreg free
  5922                           
  5923                           ;app.c: 181: }
  5924                           ;app.c: 182: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  5925  000B54  0E9D               	movlw	low _smsText
  5926  000B56  0100               	movlb	0	; () banked
  5927  000B58  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5928  000B5A  0E04               	movlw	high _smsText
  5929  000B5C  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5930  000B5E  EC36  F02A         	call	_Mdm_GetSmsData	;wreg free
  5931  000B62  06E8               	decf	wreg,f,c
  5932  000B64  A4D8               	btfss	status,2,c
  5933  000B66  0012               	return	
  5934                           
  5935                           ;app.c: 183: {
  5936                           ;app.c: 184: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5937  000B68  0E2F               	movlw	low STR_29
  5938  000B6A  0100               	movlb	0	; () banked
  5939  000B6C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5940  000B6E  0EFF               	movlw	high STR_29
  5941  000B70  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5942  000B72  0E01               	movlw	1
  5943  000B74  ECC0  F02F         	call	_Uart_WriteConstString
  5944                           
  5945                           ;app.c: 185: if (StringCompare(smsText, cmdAddNumber, sizeof(cmdAddNumber)))
  5946  000B78  0E9D               	movlw	low _smsText
  5947  000B7A  0100               	movlb	0	; () banked
  5948  000B7C  6F7D               	movwf	StringCompare@String1& (0+255),b
  5949  000B7E  0E04               	movlw	high _smsText
  5950  000B80  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5951  000B82  0E23               	movlw	low MyApp_Task@cmdAddNumber
  5952  000B84  6F7F               	movwf	StringCompare@String2& (0+255),b
  5953  000B86  0E01               	movlw	high MyApp_Task@cmdAddNumber
  5954  000B88  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5955  000B8A  0E00               	movlw	0
  5956  000B8C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5957  000B8E  0E04               	movlw	4
  5958  000B90  6F81               	movwf	StringCompare@Len& (0+255),b
  5959  000B92  EC6B  F02D         	call	_StringCompare	;wreg free
  5960  000B96  0900               	iorlw	0
  5961  000B98  B4D8               	btfsc	status,2,c
  5962  000B9A  0012               	return	
  5963                           
  5964                           ;app.c: 186: {
  5965                           ;app.c: 187: currentState = GATE_SAVE_FIRST_MASTER;
  5966  000B9C  0E01               	movlw	1
  5967  000B9E  0101               	movlb	1	; () banked
  5968  000BA0  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5969                           
  5970                           ; BSR set to: 1
  5971                           ;app.c: 188: }
  5972                           ;app.c: 189: }
  5973                           ;app.c: 190: }
  5974                           
  5975                           ; BSR set to: 1
  5976  000BA2  0012               	return	
  5977  000BA4                     l2614:
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;app.c: 191: else
  5981                           ;app.c: 192: {
  5982                           ;app.c: 193: Led_SetLedStatus(1u, LED_STS_ON);
  5983                           
  5984                           ; BSR set to: 1
  5985  000BA4  0E01               	movlw	1
  5986  000BA6  0100               	movlb	0	; () banked
  5987  000BA8  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5988  000BAA  0E01               	movlw	1
  5989  000BAC  ECC1  F031         	call	_Led_SetLedStatus
  5990                           
  5991                           ;app.c: 194: currentState = GATE_WAIT_EVENT;
  5992  000BB0  0E03               	movlw	3
  5993  000BB2  0101               	movlb	1	; () banked
  5994  000BB4  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5995                           
  5996                           ; BSR set to: 1
  5997                           ;app.c: 195: }
  5998                           ;app.c: 196: }
  5999                           ;app.c: 197: break;
  6000                           
  6001                           ; BSR set to: 1
  6002  000BB6  0012               	return	
  6003  000BB8                     
  6004                           ; BSR set to: 1
  6005                           ;app.c: 200: saveNumberInMemory(16, GetCallerNumber());
  6006                           
  6007                           ; BSR set to: 1
  6008  000BB8  ECF7  F030         	call	_GetCallerNumber	;wreg free
  6009  000BBC  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
  6010  000BC0  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
  6011  000BC4  0E10               	movlw	16
  6012  000BC6  ECB3  F033         	call	_saveNumberInMemory
  6013                           
  6014                           ;app.c: 201: currentState = GATE_UPDATE_NUMBERS_COUNT;
  6015  000BCA  0E02               	movlw	2
  6016  000BCC  0101               	movlb	1	; () banked
  6017  000BCE  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6018                           
  6019                           ;app.c: 202: break;
  6020  000BD0  0012               	return	
  6021  000BD2                     
  6022                           ; BSR set to: 1
  6023                           ;app.c: 205: initMemorizedNumbersCount();
  6024                           
  6025                           ; BSR set to: 1
  6026  000BD2  ECC0  F033         	call	_initMemorizedNumbersCount	;wreg free
  6027                           
  6028                           ;app.c: 206: Led_SetLedStatus(1u, LED_STS_ON);
  6029  000BD6  0E01               	movlw	1
  6030  000BD8  0100               	movlb	0	; () banked
  6031  000BDA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  6032  000BDC  0E01               	movlw	1
  6033  000BDE  ECC1  F031         	call	_Led_SetLedStatus
  6034                           
  6035                           ;app.c: 207: currentState = GATE_WAIT_EVENT;
  6036  000BE2  0E03               	movlw	3
  6037  000BE4  0101               	movlb	1	; () banked
  6038  000BE6  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6039                           
  6040                           ;app.c: 208: break;
  6041  000BE8  0012               	return	
  6042  000BEA                     
  6043                           ; BSR set to: 1
  6044                           ;app.c: 211: if (Mdm_IsSmsReceived())
  6045                           
  6046                           ; BSR set to: 1
  6047  000BEA  ECA5  F032         	call	_Mdm_IsSmsReceived	;wreg free
  6048  000BEE  0900               	iorlw	0
  6049  000BF0  A4D8               	btfss	status,2,c
  6050                           
  6051                           ;app.c: 212: {
  6052                           ;app.c: 213: Mdm_RequestSmsData();
  6053  000BF2  EC5E  F034         	call	_Mdm_RequestSmsData	;wreg free
  6054                           
  6055                           ;app.c: 214: }
  6056                           ;app.c: 215: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  6057  000BF6  0E9D               	movlw	low _smsText
  6058  000BF8  0100               	movlb	0	; () banked
  6059  000BFA  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  6060  000BFC  0E04               	movlw	high _smsText
  6061  000BFE  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  6062  000C00  EC36  F02A         	call	_Mdm_GetSmsData	;wreg free
  6063  000C04  06E8               	decf	wreg,f,c
  6064  000C06  A4D8               	btfss	status,2,c
  6065  000C08  D022               	goto	l2625
  6066                           
  6067                           ;app.c: 216: {
  6068                           ;app.c: 217: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  6069  000C0A  0E2F               	movlw	low STR_29
  6070  000C0C  0100               	movlb	0	; () banked
  6071  000C0E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  6072  000C10  0EFF               	movlw	high STR_29
  6073  000C12  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  6074  000C14  0E01               	movlw	1
  6075  000C16  ECC0  F02F         	call	_Uart_WriteConstString
  6076                           
  6077                           ;app.c: 218: currentState = parseCommand(smsText);
  6078  000C1A  0E9D               	movlw	low _smsText
  6079  000C1C  0100               	movlb	0	; () banked
  6080  000C1E  6F88               	movwf	parseCommand@text& (0+255),b
  6081  000C20  0E04               	movlw	high _smsText
  6082  000C22  6F89               	movwf	(parseCommand@text+1)& (0+255),b
  6083  000C24  EC5B  F022         	call	_parseCommand	;wreg free
  6084  000C28  0101               	movlb	1	; () banked
  6085  000C2A  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6086                           
  6087                           ; BSR set to: 1
  6088                           ;app.c: 219: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
  6089  000C2C  EC8A  F034         	call	_GetLastInteractionNumber	;wreg free
  6090  000C30  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
  6091  000C34  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
  6092  000C38  0EE0               	movlw	low MyApp_Task@receivedNumber
  6093  000C3A  0100               	movlb	0	; () banked
  6094  000C3C  6F87               	movwf	StringCopy@DestStr& (0+255),b
  6095  000C3E  0E04               	movlw	high MyApp_Task@receivedNumber
  6096  000C40  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
  6097  000C42  0E00               	movlw	0
  6098  000C44  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
  6099  000C46  0E0D               	movlw	13
  6100  000C48  6F89               	movwf	StringCopy@Len& (0+255),b
  6101  000C4A  EC03  F02B         	call	_StringCopy	;wreg free
  6102  000C4E                     l2625:
  6103                           
  6104                           ;app.c: 220: }
  6105                           ;app.c: 221: if (Mdm_IsRinging())
  6106  000C4E  EC93  F032         	call	_Mdm_IsRinging	;wreg free
  6107  000C52  0900               	iorlw	0
  6108  000C54  B4D8               	btfsc	status,2,c
  6109  000C56  0012               	return	
  6110                           
  6111                           ;app.c: 222: {
  6112                           ;app.c: 223: Mdm_HangPhoneCall();
  6113  000C58  EC3C  F034         	call	_Mdm_HangPhoneCall	;wreg free
  6114                           
  6115                           ;app.c: 224: currentState = GATE_TRIGGER_CMD;
  6116  000C5C  0E09               	movlw	9
  6117  000C5E  0101               	movlb	1	; () banked
  6118  000C60  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6119                           
  6120                           ; BSR set to: 1
  6121                           ;app.c: 225: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
  6122  000C62  ECF7  F030         	call	_GetCallerNumber	;wreg free
  6123  000C66  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
  6124  000C6A  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
  6125  000C6E  0EE0               	movlw	low MyApp_Task@receivedNumber
  6126  000C70  0100               	movlb	0	; () banked
  6127  000C72  6F87               	movwf	StringCopy@DestStr& (0+255),b
  6128  000C74  0E04               	movlw	high MyApp_Task@receivedNumber
  6129  000C76  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
  6130  000C78  0E00               	movlw	0
  6131  000C7A  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
  6132  000C7C  0E0D               	movlw	13
  6133  000C7E  6F89               	movwf	StringCopy@Len& (0+255),b
  6134  000C80  EC03  F02B         	call	_StringCopy	;wreg free
  6135                           
  6136                           ;app.c: 226: }
  6137                           ;app.c: 227: break;
  6138  000C84  0012               	return	
  6139  000C86                     
  6140                           ;app.c: 230: numberInMemory = isNumberInMemory(receivedNumber);
  6141  000C86  0EE0               	movlw	low MyApp_Task@receivedNumber
  6142  000C88  0101               	movlb	1	; () banked
  6143  000C8A  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6144  000C8C  0E04               	movlw	high MyApp_Task@receivedNumber
  6145  000C8E  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6146  000C90  ECF5  F024         	call	_isNumberInMemory	;wreg free
  6147  000C94  0101               	movlb	1	; () banked
  6148  000C96  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6149                           
  6150                           ; BSR set to: 1
  6151                           ;app.c: 231: if (numberInMemory == 1)
  6152  000C98  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6153  000C9A  A4D8               	btfss	status,2,c
  6154  000C9C  D003               	goto	l2628
  6155                           
  6156                           ; BSR set to: 1
  6157                           ;app.c: 232: {
  6158                           ;app.c: 233: currentState = GATE_WAIT_EVENT;
  6159  000C9E  0E03               	movlw	3
  6160  000CA0  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6161                           
  6162                           ;app.c: 234: }
  6163  000CA2  0012               	return	
  6164  000CA4                     l2628:
  6165                           
  6166                           ; BSR set to: 1
  6167                           ;app.c: 235: else if (numberInMemory != 0 && numberInMemory != 1)
  6168                           
  6169                           ; BSR set to: 1
  6170  000CA4  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6171  000CA6  B4D8               	btfsc	status,2,c
  6172  000CA8  0012               	return	
  6173                           
  6174                           ; BSR set to: 1
  6175  000CAA  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6176  000CAC  B4D8               	btfsc	status,2,c
  6177  000CAE  0012               	return	
  6178                           
  6179                           ; BSR set to: 1
  6180                           ;app.c: 236: {
  6181                           ;app.c: 237: currentState = GATE_CHECK_DUPLICATED;
  6182  000CB0  0E05               	movlw	5
  6183  000CB2  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6184                           
  6185                           ; BSR set to: 1
  6186                           ;app.c: 238: }
  6187                           ;app.c: 239: break;
  6188                           
  6189                           ; BSR set to: 1
  6190  000CB4  0012               	return	
  6191  000CB6                     
  6192                           ; BSR set to: 1
  6193                           ;app.c: 242: numberInMemory = isNumberInMemory(smsText + 3);
  6194                           
  6195                           ; BSR set to: 1
  6196  000CB6  0EA0               	movlw	low (_smsText+3)
  6197  000CB8  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6198  000CBA  0E04               	movlw	high (_smsText+3)
  6199  000CBC  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6200  000CBE  ECF5  F024         	call	_isNumberInMemory	;wreg free
  6201  000CC2  0101               	movlb	1	; () banked
  6202  000CC4  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;app.c: 243: if (numberInMemory == 1)
  6206  000CC6  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6207  000CC8  A4D8               	btfss	status,2,c
  6208  000CCA  D003               	goto	l2632
  6209                           
  6210                           ; BSR set to: 1
  6211                           ;app.c: 244: {
  6212                           ;app.c: 245: currentState = GATE_SAVE_NEW;
  6213  000CCC  0E06               	movlw	6
  6214  000CCE  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6215                           
  6216                           ;app.c: 246: }
  6217  000CD0  0012               	return	
  6218  000CD2                     l2632:
  6219                           
  6220                           ; BSR set to: 1
  6221                           ;app.c: 247: else if (numberInMemory != 0 && numberInMemory != 1)
  6222                           
  6223                           ; BSR set to: 1
  6224  000CD2  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6225  000CD4  B4D8               	btfsc	status,2,c
  6226  000CD6  0012               	return	
  6227                           
  6228                           ; BSR set to: 1
  6229  000CD8  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6230  000CDA  B4D8               	btfsc	status,2,c
  6231  000CDC  0012               	return	
  6232                           
  6233                           ; BSR set to: 1
  6234                           ;app.c: 248: {
  6235                           ;app.c: 249: currentState = GATE_WAIT_EVENT;
  6236  000CDE  0E03               	movlw	3
  6237  000CE0  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6238                           
  6239                           ; BSR set to: 1
  6240                           ;app.c: 250: }
  6241                           ;app.c: 251: break;
  6242                           
  6243                           ; BSR set to: 1
  6244  000CE2  0012               	return	
  6245  000CE4                     
  6246                           ; BSR set to: 1
  6247                           ;app.c: 254: numberInMemory = findEmptySpot();
  6248                           
  6249                           ; BSR set to: 1
  6250  000CE4  ECE2  F028         	call	_findEmptySpot	;wreg free
  6251  000CE8  0101               	movlb	1	; () banked
  6252  000CEA  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6253                           
  6254                           ; BSR set to: 1
  6255                           ;app.c: 255: if (numberInMemory == 1)
  6256  000CEC  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6257  000CEE  A4D8               	btfss	status,2,c
  6258  000CF0  D003               	goto	l2636
  6259                           
  6260                           ; BSR set to: 1
  6261                           ;app.c: 256: {
  6262                           ;app.c: 257: currentState = GATE_WAIT_EVENT;
  6263  000CF2  0E03               	movlw	3
  6264  000CF4  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6265                           
  6266                           ;app.c: 258: }
  6267  000CF6  0012               	return	
  6268  000CF8                     l2636:
  6269                           
  6270                           ; BSR set to: 1
  6271                           ;app.c: 259: else if (numberInMemory != 0 && numberInMemory != 1)
  6272                           
  6273                           ; BSR set to: 1
  6274  000CF8  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6275  000CFA  B4D8               	btfsc	status,2,c
  6276  000CFC  0012               	return	
  6277                           
  6278                           ; BSR set to: 1
  6279  000CFE  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6280  000D00  B4D8               	btfsc	status,2,c
  6281  000D02  0012               	return	
  6282                           
  6283                           ; BSR set to: 1
  6284                           ;app.c: 260: {
  6285                           ;app.c: 261: saveNumberInMemory(numberInMemory, smsText + 3);
  6286  000D04  0EA0               	movlw	low (_smsText+3)
  6287  000D06  0100               	movlb	0	; () banked
  6288  000D08  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
  6289  000D0A  0E04               	movlw	high (_smsText+3)
  6290  000D0C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
  6291  000D0E  0101               	movlb	1	; () banked
  6292  000D10  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6293  000D12  ECB3  F033         	call	_saveNumberInMemory
  6294                           
  6295                           ;app.c: 262: currentState = GATE_WAIT_EVENT;
  6296  000D16  0E03               	movlw	3
  6297  000D18  0101               	movlb	1	; () banked
  6298  000D1A  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6299                           
  6300                           ; BSR set to: 1
  6301                           ;app.c: 263: }
  6302                           ;app.c: 264: break;
  6303                           
  6304                           ; BSR set to: 1
  6305  000D1C  0012               	return	
  6306  000D1E                     
  6307                           ; BSR set to: 1
  6308                           ;app.c: 267: numberInMemory = isNumberInMemory(receivedNumber);
  6309                           
  6310                           ; BSR set to: 1
  6311  000D1E  0EE0               	movlw	low MyApp_Task@receivedNumber
  6312  000D20  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6313  000D22  0E04               	movlw	high MyApp_Task@receivedNumber
  6314  000D24  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6315  000D26  ECF5  F024         	call	_isNumberInMemory	;wreg free
  6316  000D2A  0101               	movlb	1	; () banked
  6317  000D2C  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6318                           
  6319                           ; BSR set to: 1
  6320                           ;app.c: 268: if (numberInMemory == 1)
  6321  000D2E  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6322  000D30  A4D8               	btfss	status,2,c
  6323  000D32  D003               	goto	l2640
  6324                           
  6325                           ; BSR set to: 1
  6326                           ;app.c: 269: {
  6327                           ;app.c: 270: currentState = GATE_WAIT_EVENT;
  6328  000D34  0E03               	movlw	3
  6329  000D36  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6330                           
  6331                           ;app.c: 271: }
  6332  000D38  0012               	return	
  6333  000D3A                     l2640:
  6334                           
  6335                           ; BSR set to: 1
  6336                           ;app.c: 272: else if (numberInMemory != 0 && numberInMemory != 1)
  6337                           
  6338                           ; BSR set to: 1
  6339  000D3A  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6340  000D3C  B4D8               	btfsc	status,2,c
  6341  000D3E  0012               	return	
  6342                           
  6343                           ; BSR set to: 1
  6344  000D40  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6345  000D42  B4D8               	btfsc	status,2,c
  6346  000D44  0012               	return	
  6347                           
  6348                           ; BSR set to: 1
  6349                           ;app.c: 273: {
  6350                           ;app.c: 274: saveNumberInMemory(numberInMemory, emptyNumber);
  6351  000D46  0E13               	movlw	low MyApp_Task@emptyNumber
  6352  000D48  0100               	movlb	0	; () banked
  6353  000D4A  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
  6354  000D4C  0E01               	movlw	high MyApp_Task@emptyNumber
  6355  000D4E  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
  6356  000D50  0101               	movlb	1	; () banked
  6357  000D52  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6358  000D54  ECB3  F033         	call	_saveNumberInMemory
  6359                           
  6360                           ;app.c: 275: currentState = GATE_WAIT_EVENT;
  6361  000D58  0E03               	movlw	3
  6362  000D5A  0101               	movlb	1	; () banked
  6363  000D5C  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;app.c: 276: }
  6367                           ;app.c: 277: break;
  6368                           
  6369                           ; BSR set to: 1
  6370  000D5E  0012               	return	
  6371  000D60                     
  6372                           ; BSR set to: 1
  6373                           ;app.c: 280: numberInMemory = isNumberInMemory(smsText + 3);
  6374                           
  6375                           ; BSR set to: 1
  6376  000D60  0EA0               	movlw	low (_smsText+3)
  6377  000D62  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6378  000D64  0E04               	movlw	high (_smsText+3)
  6379  000D66  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6380  000D68  ECF5  F024         	call	_isNumberInMemory	;wreg free
  6381  000D6C  0101               	movlb	1	; () banked
  6382  000D6E  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6383                           
  6384                           ; BSR set to: 1
  6385                           ;app.c: 281: if (numberInMemory == 1)
  6386  000D70  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6387  000D72  A4D8               	btfss	status,2,c
  6388  000D74  D003               	goto	l2644
  6389                           
  6390                           ; BSR set to: 1
  6391                           ;app.c: 282: {
  6392                           ;app.c: 283: currentState = GATE_WAIT_EVENT;
  6393  000D76  0E03               	movlw	3
  6394  000D78  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6395                           
  6396                           ;app.c: 284: }
  6397  000D7A  0012               	return	
  6398  000D7C                     l2644:
  6399                           
  6400                           ; BSR set to: 1
  6401                           ;app.c: 285: else if (numberInMemory != 0 && numberInMemory != 1)
  6402                           
  6403                           ; BSR set to: 1
  6404  000D7C  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6405  000D7E  B4D8               	btfsc	status,2,c
  6406  000D80  0012               	return	
  6407                           
  6408                           ; BSR set to: 1
  6409  000D82  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6410  000D84  B4D8               	btfsc	status,2,c
  6411  000D86  0012               	return	
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;app.c: 286: {
  6415                           ;app.c: 287: saveNumberInMemory(numberInMemory, emptyNumber);
  6416  000D88  0E13               	movlw	low MyApp_Task@emptyNumber
  6417  000D8A  0100               	movlb	0	; () banked
  6418  000D8C  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
  6419  000D8E  0E01               	movlw	high MyApp_Task@emptyNumber
  6420  000D90  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
  6421  000D92  0101               	movlb	1	; () banked
  6422  000D94  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6423  000D96  ECB3  F033         	call	_saveNumberInMemory
  6424                           
  6425                           ;app.c: 288: currentState = GATE_WAIT_EVENT;
  6426  000D9A  0E03               	movlw	3
  6427  000D9C  0101               	movlb	1	; () banked
  6428  000D9E  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6429                           
  6430                           ; BSR set to: 1
  6431                           ;app.c: 289: }
  6432                           ;app.c: 290: break;
  6433                           
  6434                           ; BSR set to: 1
  6435  000DA0  0012               	return	
  6436  000DA2                     
  6437                           ; BSR set to: 1
  6438                           ;app.c: 293: numberInMemory = isNumberInMemory(receivedNumber);
  6439                           
  6440                           ; BSR set to: 1
  6441  000DA2  0EE0               	movlw	low MyApp_Task@receivedNumber
  6442  000DA4  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6443  000DA6  0E04               	movlw	high MyApp_Task@receivedNumber
  6444  000DA8  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6445  000DAA  ECF5  F024         	call	_isNumberInMemory	;wreg free
  6446  000DAE  0101               	movlb	1	; () banked
  6447  000DB0  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;app.c: 294: if (numberInMemory == 1)
  6451  000DB2  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6452  000DB4  A4D8               	btfss	status,2,c
  6453  000DB6  D003               	goto	l2648
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;app.c: 295: {
  6457                           ;app.c: 296: currentState = GATE_WAIT_EVENT;
  6458  000DB8  0E03               	movlw	3
  6459  000DBA  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6460                           
  6461                           ;app.c: 297: }
  6462  000DBC  0012               	return	
  6463  000DBE                     l2648:
  6464                           
  6465                           ; BSR set to: 1
  6466                           ;app.c: 298: else if (numberInMemory != 0 && numberInMemory != 1)
  6467                           
  6468                           ; BSR set to: 1
  6469  000DBE  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6470  000DC0  B4D8               	btfsc	status,2,c
  6471  000DC2  0012               	return	
  6472                           
  6473                           ; BSR set to: 1
  6474  000DC4  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6475  000DC6  B4D8               	btfsc	status,2,c
  6476  000DC8  0012               	return	
  6477                           
  6478                           ; BSR set to: 1
  6479                           ;app.c: 299: {
  6480                           ;app.c: 300: currentState = GATE_ACTIVATE_RELAY;
  6481  000DCA  0E0A               	movlw	10
  6482  000DCC  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;app.c: 308: }
  6486                           
  6487                           ; BSR set to: 1
  6488                           ;app.c: 307: break;
  6489                           
  6490                           ;app.c: 306: default:
  6491                           
  6492                           ; BSR set to: 1
  6493                           ;app.c: 304: break;
  6494                           
  6495                           ;app.c: 301: }
  6496                           ;app.c: 303: case GATE_ACTIVATE_RELAY:
  6497                           
  6498                           ; BSR set to: 1
  6499                           
  6500                           ; BSR set to: 1
  6501  000DCE  0012               	return	
  6502  000DD0                     
  6503                           ; BSR set to: 1
  6504  000DD0  0101               	movlb	1	; () banked
  6505  000DD2  51D6               	movf	MyApp_Task@currentState& (0+255),w,b
  6506                           
  6507                           ; Switch size 1, requested type "space"
  6508                           ; Number of cases is 11, Range of values is 0 to 10
  6509                           ; switch strategies available:
  6510                           ; Name         Instructions Cycles
  6511                           ; simple_byte           34    18 (average)
  6512                           ;	Chosen strategy is simple_byte
  6513  000DD4  0A00               	xorlw	0	; case 0
  6514  000DD6  B4D8               	btfsc	status,2,c
  6515  000DD8  D6A6               	goto	l2612
  6516  000DDA  0A01               	xorlw	1	; case 1
  6517  000DDC  B4D8               	btfsc	status,2,c
  6518  000DDE  D6EC               	goto	l2621
  6519  000DE0  0A03               	xorlw	3	; case 2
  6520  000DE2  B4D8               	btfsc	status,2,c
  6521  000DE4  D6F6               	goto	l2622
  6522  000DE6  0A01               	xorlw	1	; case 3
  6523  000DE8  B4D8               	btfsc	status,2,c
  6524  000DEA  D6FF               	goto	l2623
  6525  000DEC  0A07               	xorlw	7	; case 4
  6526  000DEE  B4D8               	btfsc	status,2,c
  6527  000DF0  D74A               	goto	l2627
  6528  000DF2  0A01               	xorlw	1	; case 5
  6529  000DF4  B4D8               	btfsc	status,2,c
  6530  000DF6  D75F               	goto	l2631
  6531  000DF8  0A03               	xorlw	3	; case 6
  6532  000DFA  B4D8               	btfsc	status,2,c
  6533  000DFC  D773               	goto	l2635
  6534  000DFE  0A01               	xorlw	1	; case 7
  6535  000E00  B4D8               	btfsc	status,2,c
  6536  000E02  D78D               	goto	l2639
  6537  000E04  0A0F               	xorlw	15	; case 8
  6538  000E06  B4D8               	btfsc	status,2,c
  6539  000E08  D7AB               	goto	l2643
  6540  000E0A  0A01               	xorlw	1	; case 9
  6541  000E0C  B4D8               	btfsc	status,2,c
  6542  000E0E  D7C9               	goto	l2647
  6543  000E10  0A03               	xorlw	3	; case 10
  6544                           
  6545                           ; BSR set to: 1
  6546                           ;app.c: 314: }
  6547                           
  6548                           ; BSR set to: 1
  6549                           ;app.c: 313: break;
  6550                           
  6551                           ;app.c: 312: default:
  6552                           
  6553                           ; BSR set to: 1
  6554                           ;app.c: 309: break;
  6555  000E12  0012               	return	
  6556  000E14                     l2607:
  6557                           
  6558                           ; BSR set to: 1
  6559                           
  6560                           ; BSR set to: 1
  6561  000E14  0100               	movlb	0	; () banked
  6562  000E16  51D3               	movf	_SystemState& (0+255),w,b
  6563                           
  6564                           ; Switch size 1, requested type "space"
  6565                           ; Number of cases is 2, Range of values is 0 to 1
  6566                           ; switch strategies available:
  6567                           ; Name         Instructions Cycles
  6568                           ; simple_byte            7     4 (average)
  6569                           ;	Chosen strategy is simple_byte
  6570  000E18  0A00               	xorlw	0	; case 0
  6571  000E1A  B4D8               	btfsc	status,2,c
  6572  000E1C  D677               	goto	l2608
  6573  000E1E  0A01               	xorlw	1	; case 1
  6574  000E20  A4D8               	btfss	status,2,c
  6575  000E22  0012               	return	
  6576  000E24  D7D5               	goto	l2611
  6577  000E26                     __end_of_MyApp_Task:
  6578                           	opt stack 0
  6579                           tosu	equ	0xFFF
  6580                           tosh	equ	0xFFE
  6581                           tosl	equ	0xFFD
  6582                           pclath	equ	0xFFA
  6583                           tblptru	equ	0xFF8
  6584                           tblptrh	equ	0xFF7
  6585                           tblptrl	equ	0xFF6
  6586                           tablat	equ	0xFF5
  6587                           prodh	equ	0xFF4
  6588                           prodl	equ	0xFF3
  6589                           intcon	equ	0xFF2
  6590                           intcon2	equ	0xFF1
  6591                           intcon3	equ	0xFF0
  6592                           postinc0	equ	0xFEE
  6593                           wreg	equ	0xFE8
  6594                           postinc1	equ	0xFE6
  6595                           postdec1	equ	0xFE5
  6596                           fsr1h	equ	0xFE2
  6597                           fsr1l	equ	0xFE1
  6598                           indf2	equ	0xFDF
  6599                           postinc2	equ	0xFDE
  6600                           postdec2	equ	0xFDD
  6601                           fsr2h	equ	0xFDA
  6602                           fsr2l	equ	0xFD9
  6603                           status	equ	0xFD8
  6604                           
  6605 ;; *************** function _Term_MainTask *****************
  6606 ;; Defined at:
  6607 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  Options         1    wreg     unsigned char 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  Options         1    0[COMRAM] unsigned char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6625 ;;Total ram usage:        0 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:   17
  6628 ;; This function calls:
  6629 ;;		_Term_MainSm
  6630 ;; This function is called by:
  6631 ;;		_InitializeTasks
  6632 ;;		_ScheduleTasks
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text17
  6637  00674C                     __ptext17:
  6638                           	opt stack 0
  6639  00674C                     _Term_MainTask:
  6640                           	opt stack 11
  6641                           
  6642                           ;term.c: 847: switch (SystemState)
  6643                           
  6644                           ;incstack = 0
  6645  00674C  D003               	goto	l2481
  6646  00674E                     
  6647                           ;term.c: 858: Term_MainSm();
  6648  00674E  EC10  F00A         	call	_Term_MainSm	;wreg free
  6649                           
  6650                           ;term.c: 865: }
  6651                           
  6652                           ;term.c: 864: break;
  6653                           
  6654                           ;term.c: 863: default:
  6655                           
  6656                           ;term.c: 860: break;
  6657  006752  0012               	return	
  6658  006754                     l2481:
  6659  006754  0100               	movlb	0	; () banked
  6660  006756  51D3               	movf	_SystemState& (0+255),w,b
  6661                           
  6662                           ; Switch size 1, requested type "space"
  6663                           ; Number of cases is 2, Range of values is 0 to 1
  6664                           ; switch strategies available:
  6665                           ; Name         Instructions Cycles
  6666                           ; simple_byte            7     4 (average)
  6667                           ;	Chosen strategy is simple_byte
  6668  006758  0A00               	xorlw	0	; case 0
  6669  00675A  B4D8               	btfsc	status,2,c
  6670  00675C  0012               	return	
  6671  00675E  0A01               	xorlw	1	; case 1
  6672  006760  A4D8               	btfss	status,2,c
  6673  006762  0012               	return	
  6674  006764  D7F4               	goto	l2484
  6675  006766                     __end_of_Term_MainTask:
  6676                           	opt stack 0
  6677                           tosu	equ	0xFFF
  6678                           tosh	equ	0xFFE
  6679                           tosl	equ	0xFFD
  6680                           pclath	equ	0xFFA
  6681                           tblptru	equ	0xFF8
  6682                           tblptrh	equ	0xFF7
  6683                           tblptrl	equ	0xFF6
  6684                           tablat	equ	0xFF5
  6685                           prodh	equ	0xFF4
  6686                           prodl	equ	0xFF3
  6687                           intcon	equ	0xFF2
  6688                           intcon2	equ	0xFF1
  6689                           intcon3	equ	0xFF0
  6690                           postinc0	equ	0xFEE
  6691                           wreg	equ	0xFE8
  6692                           postinc1	equ	0xFE6
  6693                           postdec1	equ	0xFE5
  6694                           fsr1h	equ	0xFE2
  6695                           fsr1l	equ	0xFE1
  6696                           indf2	equ	0xFDF
  6697                           postinc2	equ	0xFDE
  6698                           postdec2	equ	0xFDD
  6699                           fsr2h	equ	0xFDA
  6700                           fsr2l	equ	0xFD9
  6701                           status	equ	0xFD8
  6702                           
  6703 ;; *************** function _Rtcm_MainTask *****************
  6704 ;; Defined at:
  6705 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  Options         1    wreg     unsigned char 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  Options         1    0[COMRAM] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;Total ram usage:        0 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:   14
  6726 ;; This function calls:
  6727 ;;		_Rtcc_AlarmConfig
  6728 ;;		_Rtcc_LockRtc
  6729 ;;		_Rtcc_RtcConfig
  6730 ;;		_Rtcc_SetRtcStatus
  6731 ;;		_Rtcc_UnlockRtc
  6732 ;;		_Rtcm_GetRtccDate
  6733 ;;		_Rtcm_SetRtccDate
  6734 ;; This function is called by:
  6735 ;;		_InitializeTasks
  6736 ;;		_ScheduleTasks
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text18
  6741  004E94                     __ptext18:
  6742                           	opt stack 0
  6743  004E94                     _Rtcm_MainTask:
  6744                           	opt stack 14
  6745                           
  6746                           ;rtcm.c: 101: switch (SystemState)
  6747                           
  6748                           ;incstack = 0
  6749  004E94  D03D               	goto	l2211
  6750  004E96                     l2212:
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6754  004E96  86CD               	bsf	4045,3,c	;volatile
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6758  004E98  0E00               	movlw	0
  6759  004E9A  0103               	movlb	3	; () banked
  6760  004E9C  6FB4               	movwf	_RtcConfig& (0+255),b
  6761                           
  6762                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6763  004E9E  0E00               	movlw	0
  6764  004EA0  6FB5               	movwf	(_RtcConfig+1)& (0+255),b
  6765                           
  6766                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6767  004EA2  0E01               	movlw	1
  6768  004EA4  6FB6               	movwf	(_RtcConfig+2)& (0+255),b
  6769                           
  6770                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6771  004EA6  0E01               	movlw	1
  6772  004EA8  6FB7               	movwf	(_RtcConfig+3)& (0+255),b
  6773                           
  6774                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6775  004EAA  0E01               	movlw	1
  6776  004EAC  6FB0               	movwf	_AlCfg& (0+255),b
  6777                           
  6778                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6779  004EAE  0E01               	movlw	1
  6780  004EB0  6FB1               	movwf	(_AlCfg+1)& (0+255),b
  6781                           
  6782                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6783  004EB2  0E01               	movlw	1
  6784  004EB4  6FB2               	movwf	(_AlCfg+2)& (0+255),b
  6785                           
  6786                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6787  004EB6  0E00               	movlw	0
  6788  004EB8  6FB3               	movwf	(_AlCfg+3)& (0+255),b
  6789                           
  6790                           ; BSR set to: 3
  6791                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6792  004EBA  EC4E  F034         	call	_Rtcc_UnlockRtc	;wreg free
  6793                           
  6794                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6795  004EBE  0EB4               	movlw	low _RtcConfig
  6796  004EC0  0100               	movlb	0	; () banked
  6797  004EC2  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6798  004EC4  0E03               	movlw	high _RtcConfig
  6799  004EC6  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6800  004EC8  EC56  F024         	call	_Rtcc_RtcConfig	;wreg free
  6801                           
  6802                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6803  004ECC  0EB0               	movlw	low _AlCfg
  6804  004ECE  0100               	movlb	0	; () banked
  6805  004ED0  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6806  004ED2  0E03               	movlw	high _AlCfg
  6807  004ED4  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6808  004ED6  EC00  F02A         	call	_Rtcc_AlarmConfig	;wreg free
  6809                           
  6810                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6811  004EDA  0E01               	movlw	1
  6812  004EDC  ECFD  F033         	call	_Rtcc_SetRtcStatus
  6813                           
  6814                           ;rtcm.c: 127: Rtcc_LockRtc();
  6815  004EE0  EC56  F034         	call	_Rtcc_LockRtc	;wreg free
  6816                           
  6817                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6818  004EE4  EE24  F063         	lfsr	2,_Rtcm_SystemDate
  6819  004EE8  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6820  004EEC  0E07               	movlw	7
  6821  004EEE                     u15931:
  6822  004EEE  CFDB FFEB          	movff	plusw2,plusw0
  6823  004EF2  06E8               	decf	wreg,f,c
  6824  004EF4  E2FC               	bc	u15931
  6825  004EF6  EC9A  F02C         	call	_Rtcm_SetRtccDate	;wreg free
  6826                           
  6827                           ;rtcm.c: 154: break;
  6828  004EFA  0012               	return	
  6829  004EFC                     
  6830                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6831  004EFC  EC9D  F02A         	call	_Rtcm_GetRtccDate	;wreg free
  6832  004F00  EE24  F063         	lfsr	2,_Rtcm_SystemDate
  6833  004F04  0E07               	movlw	7
  6834  004F06                     u15941:
  6835  004F06  CFEB FFDB          	movff	plusw0,plusw2
  6836  004F0A  06E8               	decf	wreg,f,c
  6837  004F0C  E2FC               	bc	u15941
  6838                           
  6839                           ;rtcm.c: 165: }
  6840                           
  6841                           ;rtcm.c: 164: break;
  6842                           
  6843                           ;rtcm.c: 163: default:
  6844                           
  6845                           ;rtcm.c: 160: break;
  6846  004F0E  0012               	return	
  6847  004F10                     l2211:
  6848  004F10  0100               	movlb	0	; () banked
  6849  004F12  51D3               	movf	_SystemState& (0+255),w,b
  6850                           
  6851                           ; Switch size 1, requested type "space"
  6852                           ; Number of cases is 2, Range of values is 0 to 1
  6853                           ; switch strategies available:
  6854                           ; Name         Instructions Cycles
  6855                           ; simple_byte            7     4 (average)
  6856                           ;	Chosen strategy is simple_byte
  6857  004F14  0A00               	xorlw	0	; case 0
  6858  004F16  B4D8               	btfsc	status,2,c
  6859  004F18  D7BE               	goto	l2212
  6860  004F1A  0A01               	xorlw	1	; case 1
  6861  004F1C  A4D8               	btfss	status,2,c
  6862  004F1E  0012               	return	
  6863  004F20  D7ED               	goto	l2214
  6864  004F22                     __end_of_Rtcm_MainTask:
  6865                           	opt stack 0
  6866                           tosu	equ	0xFFF
  6867                           tosh	equ	0xFFE
  6868                           tosl	equ	0xFFD
  6869                           pclath	equ	0xFFA
  6870                           tblptru	equ	0xFF8
  6871                           tblptrh	equ	0xFF7
  6872                           tblptrl	equ	0xFF6
  6873                           tablat	equ	0xFF5
  6874                           prodh	equ	0xFF4
  6875                           prodl	equ	0xFF3
  6876                           intcon	equ	0xFF2
  6877                           intcon2	equ	0xFF1
  6878                           intcon3	equ	0xFF0
  6879                           postinc0	equ	0xFEE
  6880                           plusw0	equ	0xFEB
  6881                           wreg	equ	0xFE8
  6882                           postinc1	equ	0xFE6
  6883                           postdec1	equ	0xFE5
  6884                           fsr1h	equ	0xFE2
  6885                           fsr1l	equ	0xFE1
  6886                           indf2	equ	0xFDF
  6887                           postinc2	equ	0xFDE
  6888                           postdec2	equ	0xFDD
  6889                           plusw2	equ	0xFDB
  6890                           fsr2h	equ	0xFDA
  6891                           fsr2l	equ	0xFD9
  6892                           status	equ	0xFD8
  6893                           
  6894 ;; *************** function _Led_MainTask *****************
  6895 ;; Defined at:
  6896 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  Options         1    wreg     unsigned char 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  Options         1    0[COMRAM] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6913 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6914 ;;Total ram usage:        1 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:   14
  6917 ;; This function calls:
  6918 ;;		_LedStateMachine
  6919 ;; This function is called by:
  6920 ;;		_InitializeTasks
  6921 ;;		_ScheduleTasks
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text19
  6926  003C56                     __ptext19:
  6927                           	opt stack 0
  6928  003C56                     _Led_MainTask:
  6929                           	opt stack 14
  6930                           
  6931                           ;led.c: 300: switch (SystemState)
  6932                           
  6933                           ;incstack = 0
  6934  003C56  D05C               	goto	l2125
  6935  003C58                     l2126:
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6939  003C58  9895               	bcf	3989,4,c	;volatile
  6940                           
  6941                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6942  003C5A  9A95               	bcf	3989,5,c	;volatile
  6943                           
  6944                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6945  003C5C  9C95               	bcf	3989,6,c	;volatile
  6946                           
  6947                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6948  003C5E  9883               	bcf	3971,4,c	;volatile
  6949                           
  6950                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6951  003C60  9A83               	bcf	3971,5,c	;volatile
  6952                           
  6953                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6954  003C62  9C83               	bcf	3971,6,c	;volatile
  6955                           
  6956                           ;led.c: 311: break;
  6957  003C64  0012               	return	
  6958  003C66                     
  6959                           ; BSR set to: 0
  6960                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6961                           
  6962                           ; BSR set to: 0
  6963  003C66  0EFB               	movlw	low _Led1Sts
  6964  003C68  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6965  003C6A  0E01               	movlw	high _Led1Sts
  6966  003C6C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6967  003C6E  0EFA               	movlw	low _Led1OutSts
  6968  003C70  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6969  003C72  0E01               	movlw	high _Led1OutSts
  6970  003C74  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6971  003C76  0E69               	movlw	low _Led1Blink
  6972  003C78  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6973  003C7A  0E03               	movlw	high _Led1Blink
  6974  003C7C  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6975  003C7E  0E8D               	movlw	low _Led1Pulse
  6976  003C80  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6977  003C82  0E03               	movlw	high _Led1Pulse
  6978  003C84  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6979  003C86  0E01               	movlw	1
  6980  003C88  ECB1  F023         	call	_LedStateMachine
  6981  003C8C  0100               	movlb	0	; () banked
  6982  003C8E  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6983  003C90  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6984  003C92  5083               	movf	3971,w,c	;volatile
  6985  003C94  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6986  003C96  0BEF               	andlw	-17
  6987  003C98  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6988  003C9A  6E83               	movwf	3971,c	;volatile
  6989                           
  6990                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6991  003C9C  0EF9               	movlw	low _Led2Sts
  6992  003C9E  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6993  003CA0  0E01               	movlw	high _Led2Sts
  6994  003CA2  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6995  003CA4  0EF8               	movlw	low _Led2OutSts
  6996  003CA6  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6997  003CA8  0E01               	movlw	high _Led2OutSts
  6998  003CAA  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6999  003CAC  0E60               	movlw	low _Led2Blink
  7000  003CAE  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  7001  003CB0  0E03               	movlw	high _Led2Blink
  7002  003CB2  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  7003  003CB4  0E87               	movlw	low _Led2Pulse
  7004  003CB6  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  7005  003CB8  0E03               	movlw	high _Led2Pulse
  7006  003CBA  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  7007  003CBC  0E02               	movlw	2
  7008  003CBE  ECB1  F023         	call	_LedStateMachine
  7009  003CC2  0100               	movlb	0	; () banked
  7010  003CC4  6F9A               	movwf	??_Led_MainTask& (0+255),b
  7011  003CC6  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  7012  003CC8  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  7013  003CCA  5083               	movf	3971,w,c	;volatile
  7014  003CCC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  7015  003CCE  0BDF               	andlw	-33
  7016  003CD0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  7017  003CD2  6E83               	movwf	3971,c	;volatile
  7018                           
  7019                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  7020  003CD4  0EF7               	movlw	low _Led3Sts
  7021  003CD6  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  7022  003CD8  0E01               	movlw	high _Led3Sts
  7023  003CDA  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  7024  003CDC  0EF6               	movlw	low _Led3OutSts
  7025  003CDE  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  7026  003CE0  0E01               	movlw	high _Led3OutSts
  7027  003CE2  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  7028  003CE4  0E57               	movlw	low _Led3Blink
  7029  003CE6  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  7030  003CE8  0E03               	movlw	high _Led3Blink
  7031  003CEA  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  7032  003CEC  0E81               	movlw	low _Led3Pulse
  7033  003CEE  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  7034  003CF0  0E03               	movlw	high _Led3Pulse
  7035  003CF2  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  7036  003CF4  0E03               	movlw	3
  7037  003CF6  ECB1  F023         	call	_LedStateMachine
  7038  003CFA  0100               	movlb	0	; () banked
  7039  003CFC  6F9A               	movwf	??_Led_MainTask& (0+255),b
  7040  003CFE  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  7041  003D00  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  7042  003D02  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  7043  003D04  5083               	movf	3971,w,c	;volatile
  7044  003D06  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  7045  003D08  0BBF               	andlw	-65
  7046  003D0A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  7047  003D0C  6E83               	movwf	3971,c	;volatile
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;led.c: 326: }
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;led.c: 325: break;
  7054                           
  7055                           ;led.c: 324: default:
  7056                           
  7057                           ;led.c: 321: break;
  7058  003D0E  0012               	return	
  7059  003D10                     l2125:
  7060                           
  7061                           ; BSR set to: 0
  7062  003D10  0100               	movlb	0	; () banked
  7063  003D12  51D3               	movf	_SystemState& (0+255),w,b
  7064                           
  7065                           ; Switch size 1, requested type "space"
  7066                           ; Number of cases is 2, Range of values is 0 to 1
  7067                           ; switch strategies available:
  7068                           ; Name         Instructions Cycles
  7069                           ; simple_byte            7     4 (average)
  7070                           ;	Chosen strategy is simple_byte
  7071  003D14  0A00               	xorlw	0	; case 0
  7072  003D16  B4D8               	btfsc	status,2,c
  7073  003D18  D79F               	goto	l2126
  7074  003D1A  0A01               	xorlw	1	; case 1
  7075  003D1C  A4D8               	btfss	status,2,c
  7076  003D1E  0012               	return	
  7077  003D20  D7A2               	goto	l2128
  7078  003D22                     __end_of_Led_MainTask:
  7079                           	opt stack 0
  7080                           tosu	equ	0xFFF
  7081                           tosh	equ	0xFFE
  7082                           tosl	equ	0xFFD
  7083                           pclath	equ	0xFFA
  7084                           tblptru	equ	0xFF8
  7085                           tblptrh	equ	0xFF7
  7086                           tblptrl	equ	0xFF6
  7087                           tablat	equ	0xFF5
  7088                           prodh	equ	0xFF4
  7089                           prodl	equ	0xFF3
  7090                           intcon	equ	0xFF2
  7091                           intcon2	equ	0xFF1
  7092                           intcon3	equ	0xFF0
  7093                           postinc0	equ	0xFEE
  7094                           plusw0	equ	0xFEB
  7095                           wreg	equ	0xFE8
  7096                           postinc1	equ	0xFE6
  7097                           postdec1	equ	0xFE5
  7098                           fsr1h	equ	0xFE2
  7099                           fsr1l	equ	0xFE1
  7100                           indf2	equ	0xFDF
  7101                           postinc2	equ	0xFDE
  7102                           postdec2	equ	0xFDD
  7103                           plusw2	equ	0xFDB
  7104                           fsr2h	equ	0xFDA
  7105                           fsr2l	equ	0xFD9
  7106                           status	equ	0xFD8
  7107                           
  7108 ;; *************** function _UsbDevice_MainTask *****************
  7109 ;; Defined at:
  7110 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  Options         1    wreg     unsigned char 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  Options         1    0[COMRAM] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  1    wreg      void 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;Total ram usage:        0 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:   20
  7131 ;; This function calls:
  7132 ;;		_CDCTxService
  7133 ;;		_USBDeviceInit
  7134 ;;		_USBDeviceTasks
  7135 ;; This function is called by:
  7136 ;;		_InitializeTasks
  7137 ;;		_ScheduleTasks
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text20
  7142  006502                     __ptext20:
  7143                           	opt stack 0
  7144  006502                     _UsbDevice_MainTask:
  7145                           	opt stack 8
  7146                           
  7147                           ;usb_device_mgr.c: 74: switch (SystemState)
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;incstack = 0
  7151  006502  D008               	goto	l1992
  7152  006504                     
  7153                           ;usb_device_mgr.c: 79: USBDeviceInit();
  7154  006504  ECCB  F013         	call	_USBDeviceInit	;wreg free
  7155                           
  7156                           ;usb_device_mgr.c: 80: ;
  7157                           ;usb_device_mgr.c: 81: break;
  7158  006508  0012               	return	
  7159  00650A                     
  7160                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  7161  00650A  EC8A  F00F         	call	_USBDeviceTasks	;wreg free
  7162                           
  7163                           ;usb_device_mgr.c: 90: CDCTxService();
  7164  00650E  ECC1  F015         	call	_CDCTxService	;wreg free
  7165                           
  7166                           ;usb_device_mgr.c: 101: }
  7167                           
  7168                           ;usb_device_mgr.c: 100: break;
  7169                           
  7170                           ;usb_device_mgr.c: 99: default:
  7171                           
  7172                           ;usb_device_mgr.c: 96: break;
  7173  006512  0012               	return	
  7174  006514                     l1992:
  7175  006514  0100               	movlb	0	; () banked
  7176  006516  51D3               	movf	_SystemState& (0+255),w,b
  7177                           
  7178                           ; Switch size 1, requested type "space"
  7179                           ; Number of cases is 2, Range of values is 0 to 1
  7180                           ; switch strategies available:
  7181                           ; Name         Instructions Cycles
  7182                           ; simple_byte            7     4 (average)
  7183                           ;	Chosen strategy is simple_byte
  7184  006518  0A00               	xorlw	0	; case 0
  7185  00651A  B4D8               	btfsc	status,2,c
  7186  00651C  D7F3               	goto	l1993
  7187  00651E  0A01               	xorlw	1	; case 1
  7188  006520  A4D8               	btfss	status,2,c
  7189  006522  0012               	return	
  7190  006524  D7F2               	goto	l1995
  7191  006526                     __end_of_UsbDevice_MainTask:
  7192                           	opt stack 0
  7193                           tosu	equ	0xFFF
  7194                           tosh	equ	0xFFE
  7195                           tosl	equ	0xFFD
  7196                           pclath	equ	0xFFA
  7197                           tblptru	equ	0xFF8
  7198                           tblptrh	equ	0xFF7
  7199                           tblptrl	equ	0xFF6
  7200                           tablat	equ	0xFF5
  7201                           prodh	equ	0xFF4
  7202                           prodl	equ	0xFF3
  7203                           intcon	equ	0xFF2
  7204                           intcon2	equ	0xFF1
  7205                           intcon3	equ	0xFF0
  7206                           postinc0	equ	0xFEE
  7207                           plusw0	equ	0xFEB
  7208                           wreg	equ	0xFE8
  7209                           postinc1	equ	0xFE6
  7210                           postdec1	equ	0xFE5
  7211                           fsr1h	equ	0xFE2
  7212                           fsr1l	equ	0xFE1
  7213                           indf2	equ	0xFDF
  7214                           postinc2	equ	0xFDE
  7215                           postdec2	equ	0xFDD
  7216                           plusw2	equ	0xFDB
  7217                           fsr2h	equ	0xFDA
  7218                           fsr2l	equ	0xFD9
  7219                           status	equ	0xFD8
  7220                           
  7221 ;; *************** function _MdmHttp_MainTask *****************
  7222 ;; Defined at:
  7223 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  Options         1    wreg     unsigned char 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  Options         1    0[COMRAM] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7241 ;;Total ram usage:        0 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:   15
  7244 ;; This function calls:
  7245 ;;		_HttpGetMethod
  7246 ;;		_InitGprsNetwork
  7247 ;; This function is called by:
  7248 ;;		_InitializeTasks
  7249 ;;		_ScheduleTasks
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text21
  7254  005E2A                     __ptext21:
  7255                           	opt stack 0
  7256  005E2A                     _MdmHttp_MainTask:
  7257                           	opt stack 13
  7258                           
  7259                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  7260                           
  7261                           ;incstack = 0
  7262  005E2A  D019               	goto	l1291
  7263  005E2C                     
  7264                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  7265  005E2C  0E03               	movlw	3
  7266  005E2E  0100               	movlb	0	; () banked
  7267  005E30  19D0               	xorwf	_MdmStatus& (0+255),w,b
  7268  005E32  A4D8               	btfss	status,2,c
  7269  005E34  0012               	return	
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;mdm_gsm_gprs_http.c: 570: {
  7273                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  7274  005E36  C31C  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  7275  005E3A  C31D  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  7276  005E3E  C1EE  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  7277  005E42  EC99  F008         	call	_InitGprsNetwork	;wreg free
  7278  005E46  0101               	movlb	1	; () banked
  7279  005E48  6FED               	movwf	_GprsNetworkSts& (0+255),b
  7280                           
  7281                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  7282  005E4A  0EA3               	movlw	low _HttpGetDataLocal
  7283  005E4C  0100               	movlb	0	; () banked
  7284  005E4E  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  7285  005E50  0E03               	movlw	high _HttpGetDataLocal
  7286  005E52  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  7287  005E54  ECF6  F002         	call	_HttpGetMethod	;wreg free
  7288  005E58  0101               	movlb	1	; () banked
  7289  005E5A  6FEC               	movwf	_HttpGetMethodSts& (0+255),b
  7290                           
  7291                           ; BSR set to: 1
  7292                           ;mdm_gsm_gprs_http.c: 581: }
  7293                           
  7294                           ; BSR set to: 1
  7295                           ;mdm_gsm_gprs_http.c: 580: break;
  7296                           
  7297                           ;mdm_gsm_gprs_http.c: 579: default:
  7298                           
  7299                           ; BSR set to: 1
  7300                           ;mdm_gsm_gprs_http.c: 575: }
  7301                           ;mdm_gsm_gprs_http.c: 576: break;
  7302  005E5C  0012               	return	
  7303  005E5E                     l1291:
  7304                           
  7305                           ; BSR set to: 1
  7306  005E5E  0100               	movlb	0	; () banked
  7307  005E60  51D3               	movf	_SystemState& (0+255),w,b
  7308                           
  7309                           ; Switch size 1, requested type "space"
  7310                           ; Number of cases is 2, Range of values is 0 to 1
  7311                           ; switch strategies available:
  7312                           ; Name         Instructions Cycles
  7313                           ; simple_byte            7     4 (average)
  7314                           ;	Chosen strategy is simple_byte
  7315  005E62  0A00               	xorlw	0	; case 0
  7316  005E64  B4D8               	btfsc	status,2,c
  7317  005E66  0012               	return	
  7318  005E68  0A01               	xorlw	1	; case 1
  7319  005E6A  A4D8               	btfss	status,2,c
  7320  005E6C  0012               	return	
  7321  005E6E  D7DE               	goto	l1294
  7322  005E70                     __end_of_MdmHttp_MainTask:
  7323                           	opt stack 0
  7324                           tosu	equ	0xFFF
  7325                           tosh	equ	0xFFE
  7326                           tosl	equ	0xFFD
  7327                           pclath	equ	0xFFA
  7328                           tblptru	equ	0xFF8
  7329                           tblptrh	equ	0xFF7
  7330                           tblptrl	equ	0xFF6
  7331                           tablat	equ	0xFF5
  7332                           prodh	equ	0xFF4
  7333                           prodl	equ	0xFF3
  7334                           intcon	equ	0xFF2
  7335                           intcon2	equ	0xFF1
  7336                           intcon3	equ	0xFF0
  7337                           postinc0	equ	0xFEE
  7338                           plusw0	equ	0xFEB
  7339                           wreg	equ	0xFE8
  7340                           postinc1	equ	0xFE6
  7341                           postdec1	equ	0xFE5
  7342                           fsr1h	equ	0xFE2
  7343                           fsr1l	equ	0xFE1
  7344                           indf2	equ	0xFDF
  7345                           postinc2	equ	0xFDE
  7346                           postdec2	equ	0xFDD
  7347                           plusw2	equ	0xFDB
  7348                           fsr2h	equ	0xFDA
  7349                           fsr2l	equ	0xFD9
  7350                           status	equ	0xFD8
  7351                           
  7352 ;; *************** function _Mdm_MainTask *****************
  7353 ;; Defined at:
  7354 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  Options         1    wreg     unsigned char 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  Options         1    0[COMRAM] unsigned char 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7372 ;;Total ram usage:        0 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:   15
  7375 ;; This function calls:
  7376 ;;		_CheckModem
  7377 ;;		_ConfigureModem
  7378 ;;		_GetSmsSm
  7379 ;;		_ModemEvtParser
  7380 ;;		_SendSmsSm
  7381 ;;		_TurnOnModem
  7382 ;;		_UartSetConfig
  7383 ;;		_Uart_InitUartModule
  7384 ;; This function is called by:
  7385 ;;		_InitializeTasks
  7386 ;;		_ScheduleTasks
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text22
  7391  005B78                     __ptext22:
  7392                           	opt stack 0
  7393  005B78                     _Mdm_MainTask:
  7394                           	opt stack 13
  7395                           
  7396                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  7397                           
  7398                           ;incstack = 0
  7399  005B78  D01E               	goto	l1107
  7400  005B7A                     
  7401                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  7402  005B7A  ECC0  F02B         	call	_UartSetConfig	;wreg free
  7403                           
  7404                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  7405  005B7E  0E20               	movlw	low _UartConfig
  7406  005B80  0100               	movlb	0	; () banked
  7407  005B82  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  7408  005B84  0E03               	movlw	high _UartConfig
  7409  005B86  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  7410  005B88  0E01               	movlw	1
  7411  005B8A  EC13  F007         	call	_Uart_InitUartModule
  7412                           
  7413                           ;mdm_gsm_gprs.c: 764: break;
  7414  005B8E  0012               	return	
  7415  005B90                     
  7416                           ;mdm_gsm_gprs.c: 769: CheckModem();
  7417  005B90  EC74  F014         	call	_CheckModem	;wreg free
  7418                           
  7419                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  7420  005B94  042A               	decf	_ComChecCompleted,w,c
  7421  005B96  A4D8               	btfss	status,2,c
  7422  005B98  D005               	goto	l1111
  7423  005B9A  0100               	movlb	0	; () banked
  7424  005B9C  51D0               	movf	_MdmStatus& (0+255),w,b
  7425  005B9E  B4D8               	btfsc	status,2,c
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;mdm_gsm_gprs.c: 772: {
  7429                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  7430  005BA0  ECA7  F02E         	call	_TurnOnModem	;wreg free
  7431  005BA4                     l1111:
  7432                           
  7433                           ;mdm_gsm_gprs.c: 775: }
  7434                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  7435  005BA4  EC15  F01C         	call	_ConfigureModem	;wreg free
  7436                           
  7437                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  7438  005BA8  EC4E  F010         	call	_ModemEvtParser	;wreg free
  7439                           
  7440                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  7441  005BAC  EC00  F017         	call	_GetSmsSm	;wreg free
  7442                           
  7443                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  7444  005BB0  ECAE  F00E         	call	_SendSmsSm	;wreg free
  7445                           
  7446                           ;mdm_gsm_gprs.c: 789: }
  7447                           
  7448                           ;mdm_gsm_gprs.c: 788: break;
  7449                           
  7450                           ;mdm_gsm_gprs.c: 787: default:
  7451                           
  7452                           ;mdm_gsm_gprs.c: 784: break;
  7453  005BB4  0012               	return	
  7454  005BB6                     l1107:
  7455  005BB6  0100               	movlb	0	; () banked
  7456  005BB8  51D3               	movf	_SystemState& (0+255),w,b
  7457                           
  7458                           ; Switch size 1, requested type "space"
  7459                           ; Number of cases is 2, Range of values is 0 to 1
  7460                           ; switch strategies available:
  7461                           ; Name         Instructions Cycles
  7462                           ; simple_byte            7     4 (average)
  7463                           ;	Chosen strategy is simple_byte
  7464  005BBA  0A00               	xorlw	0	; case 0
  7465  005BBC  B4D8               	btfsc	status,2,c
  7466  005BBE  D7DD               	goto	l1108
  7467  005BC0  0A01               	xorlw	1	; case 1
  7468  005BC2  A4D8               	btfss	status,2,c
  7469  005BC4  0012               	return	
  7470  005BC6  D7E4               	goto	l1110
  7471  005BC8                     __end_of_Mdm_MainTask:
  7472                           	opt stack 0
  7473                           tosu	equ	0xFFF
  7474                           tosh	equ	0xFFE
  7475                           tosl	equ	0xFFD
  7476                           pclath	equ	0xFFA
  7477                           tblptru	equ	0xFF8
  7478                           tblptrh	equ	0xFF7
  7479                           tblptrl	equ	0xFF6
  7480                           tablat	equ	0xFF5
  7481                           prodh	equ	0xFF4
  7482                           prodl	equ	0xFF3
  7483                           intcon	equ	0xFF2
  7484                           intcon2	equ	0xFF1
  7485                           intcon3	equ	0xFF0
  7486                           postinc0	equ	0xFEE
  7487                           plusw0	equ	0xFEB
  7488                           wreg	equ	0xFE8
  7489                           postinc1	equ	0xFE6
  7490                           postdec1	equ	0xFE5
  7491                           fsr1h	equ	0xFE2
  7492                           fsr1l	equ	0xFE1
  7493                           indf2	equ	0xFDF
  7494                           postinc2	equ	0xFDE
  7495                           postdec2	equ	0xFDD
  7496                           plusw2	equ	0xFDB
  7497                           fsr2h	equ	0xFDA
  7498                           fsr2l	equ	0xFD9
  7499                           status	equ	0xFD8
  7500                           
  7501 ;; *************** function _I2cSlv_MainTask *****************
  7502 ;; Defined at:
  7503 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  Options         1    wreg     unsigned char 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  Options         1    0[COMRAM] unsigned char 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:   14
  7524 ;; This function calls:
  7525 ;;		_I2cSendMsgSm
  7526 ;;		_I2cSetConfig
  7527 ;;		_I2c_InitI2cModule
  7528 ;;		_OsAlrm_SetOsAlarm
  7529 ;; This function is called by:
  7530 ;;		_InitializeTasks
  7531 ;;		_ScheduleTasks
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text23
  7536  0058E0                     __ptext23:
  7537                           	opt stack 0
  7538  0058E0                     _I2cSlv_MainTask:
  7539                           	opt stack 14
  7540                           
  7541                           ;i2c_slv.c: 217: switch (SystemState)
  7542                           
  7543                           ;incstack = 0
  7544  0058E0  D020               	goto	l1404
  7545  0058E2                     
  7546                           ;i2c_slv.c: 222: I2cSetConfig();
  7547  0058E2  EC07  F032         	call	_I2cSetConfig	;wreg free
  7548                           
  7549                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7550  0058E6  0E4D               	movlw	low _I2cConfig
  7551  0058E8  0100               	movlb	0	; () banked
  7552  0058EA  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7553  0058EC  0E03               	movlw	high _I2cConfig
  7554  0058EE  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7555  0058F0  EC59  F029         	call	_I2c_InitI2cModule	;wreg free
  7556                           
  7557                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7558  0058F4  0E00               	movlw	0
  7559  0058F6  0100               	movlb	0	; () banked
  7560  0058F8  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7561  0058FA  0E00               	movlw	0
  7562  0058FC  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7563  0058FE  0E32               	movlw	50
  7564  005900  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7565  005902  0E00               	movlw	0
  7566  005904  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7567  005906  0E00               	movlw	0
  7568  005908  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7569  00590A  0E00               	movlw	0
  7570  00590C  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7571  00590E  0E16               	movlw	low _I2cDummyTx
  7572  005910  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7573  005912  0E67               	movlw	high _I2cDummyTx
  7574  005914  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7575  005916  EC24  F020         	call	_OsAlrm_SetOsAlarm	;wreg free
  7576                           
  7577                           ;i2c_slv.c: 227: break;
  7578  00591A  0012               	return	
  7579  00591C                     
  7580                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7581  00591C  EC88  F020         	call	_I2cSendMsgSm	;wreg free
  7582                           
  7583                           ;i2c_slv.c: 238: }
  7584                           
  7585                           ;i2c_slv.c: 237: break;
  7586                           
  7587                           ;i2c_slv.c: 236: default:
  7588                           
  7589                           ;i2c_slv.c: 233: break;
  7590  005920  0012               	return	
  7591  005922                     l1404:
  7592  005922  0100               	movlb	0	; () banked
  7593  005924  51D3               	movf	_SystemState& (0+255),w,b
  7594                           
  7595                           ; Switch size 1, requested type "space"
  7596                           ; Number of cases is 2, Range of values is 0 to 1
  7597                           ; switch strategies available:
  7598                           ; Name         Instructions Cycles
  7599                           ; simple_byte            7     4 (average)
  7600                           ;	Chosen strategy is simple_byte
  7601  005926  0A00               	xorlw	0	; case 0
  7602  005928  B4D8               	btfsc	status,2,c
  7603  00592A  D7DB               	goto	l1405
  7604  00592C  0A01               	xorlw	1	; case 1
  7605  00592E  A4D8               	btfss	status,2,c
  7606  005930  0012               	return	
  7607  005932  D7F4               	goto	l1407
  7608  005934                     __end_of_I2cSlv_MainTask:
  7609                           	opt stack 0
  7610                           tosu	equ	0xFFF
  7611                           tosh	equ	0xFFE
  7612                           tosl	equ	0xFFD
  7613                           pclath	equ	0xFFA
  7614                           tblptru	equ	0xFF8
  7615                           tblptrh	equ	0xFF7
  7616                           tblptrl	equ	0xFF6
  7617                           tablat	equ	0xFF5
  7618                           prodh	equ	0xFF4
  7619                           prodl	equ	0xFF3
  7620                           intcon	equ	0xFF2
  7621                           intcon2	equ	0xFF1
  7622                           intcon3	equ	0xFF0
  7623                           postinc0	equ	0xFEE
  7624                           plusw0	equ	0xFEB
  7625                           wreg	equ	0xFE8
  7626                           postinc1	equ	0xFE6
  7627                           postdec1	equ	0xFE5
  7628                           fsr1h	equ	0xFE2
  7629                           fsr1l	equ	0xFE1
  7630                           indf2	equ	0xFDF
  7631                           postinc2	equ	0xFDE
  7632                           postdec2	equ	0xFDD
  7633                           plusw2	equ	0xFDB
  7634                           fsr2h	equ	0xFDA
  7635                           fsr2l	equ	0xFD9
  7636                           status	equ	0xFD8
  7637                           
  7638 ;; *************** function _Mdm_DrvMainFn *****************
  7639 ;; Defined at:
  7640 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  Options         1    wreg     unsigned char 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  Options         1    0[COMRAM] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7658 ;;Total ram usage:        0 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:   13
  7661 ;; This function calls:
  7662 ;;		_MdmCntSm
  7663 ;; This function is called by:
  7664 ;;		_InitializeTasks
  7665 ;;		_ScheduleTasks
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text24
  7670  006960                     __ptext24:
  7671                           	opt stack 0
  7672  006960                     _Mdm_DrvMainFn:
  7673                           	opt stack 15
  7674                           
  7675                           ;mdm_drv.c: 307: MdmCntSm();
  7676                           
  7677                           ;incstack = 0
  7678  006960  EC5D  F023         	call	_MdmCntSm	;wreg free
  7679  006964  0012               	return		;funcret
  7680  006966                     __end_of_Mdm_DrvMainFn:
  7681                           	opt stack 0
  7682                           tosu	equ	0xFFF
  7683                           tosh	equ	0xFFE
  7684                           tosl	equ	0xFFD
  7685                           pclath	equ	0xFFA
  7686                           tblptru	equ	0xFF8
  7687                           tblptrh	equ	0xFF7
  7688                           tblptrl	equ	0xFF6
  7689                           tablat	equ	0xFF5
  7690                           prodh	equ	0xFF4
  7691                           prodl	equ	0xFF3
  7692                           intcon	equ	0xFF2
  7693                           intcon2	equ	0xFF1
  7694                           intcon3	equ	0xFF0
  7695                           postinc0	equ	0xFEE
  7696                           plusw0	equ	0xFEB
  7697                           wreg	equ	0xFE8
  7698                           postinc1	equ	0xFE6
  7699                           postdec1	equ	0xFE5
  7700                           fsr1h	equ	0xFE2
  7701                           fsr1l	equ	0xFE1
  7702                           indf2	equ	0xFDF
  7703                           postinc2	equ	0xFDE
  7704                           postdec2	equ	0xFDD
  7705                           plusw2	equ	0xFDB
  7706                           fsr2h	equ	0xFDA
  7707                           fsr2l	equ	0xFD9
  7708                           status	equ	0xFD8
  7709                           
  7710 ;; *************** function _Wdg_MainTask *****************
  7711 ;; Defined at:
  7712 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  Options         1    wreg     unsigned char 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  Options         1    0[COMRAM] unsigned char 
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1    wreg      void 
  7719 ;; Registers used:
  7720 ;;		wreg, status,2, status,0, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7730 ;;Total ram usage:        0 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:   12
  7733 ;; This function calls:
  7734 ;;		_Mcu_ClearWdg
  7735 ;;		_Mcu_SetWdgSts
  7736 ;; This function is called by:
  7737 ;;		_InitializeTasks
  7738 ;;		_ScheduleTasks
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           	psect	text25
  7743  006592                     __ptext25:
  7744                           	opt stack 0
  7745  006592                     _Wdg_MainTask:
  7746                           	opt stack 16
  7747                           
  7748                           ;wdg.c: 75: switch (SystemState)
  7749                           
  7750                           ;incstack = 0
  7751  006592  D007               	goto	l2501
  7752  006594                     
  7753                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7754  006594  0E01               	movlw	1
  7755  006596  EC33  F034         	call	_Mcu_SetWdgSts
  7756                           
  7757                           ;wdg.c: 81: break;
  7758  00659A  0012               	return	
  7759  00659C                     
  7760                           ;wdg.c: 86: Mcu_ClearWdg();
  7761  00659C  ECB3  F034         	call	_Mcu_ClearWdg	;wreg free
  7762                           
  7763                           ;wdg.c: 92: }
  7764                           
  7765                           ;wdg.c: 91: break;
  7766                           
  7767                           ;wdg.c: 90: default:
  7768                           
  7769                           ;wdg.c: 87: break;
  7770  0065A0  0012               	return	
  7771  0065A2                     l2501:
  7772  0065A2  0100               	movlb	0	; () banked
  7773  0065A4  51D3               	movf	_SystemState& (0+255),w,b
  7774                           
  7775                           ; Switch size 1, requested type "space"
  7776                           ; Number of cases is 2, Range of values is 0 to 1
  7777                           ; switch strategies available:
  7778                           ; Name         Instructions Cycles
  7779                           ; simple_byte            7     4 (average)
  7780                           ;	Chosen strategy is simple_byte
  7781  0065A6  0A00               	xorlw	0	; case 0
  7782  0065A8  B4D8               	btfsc	status,2,c
  7783  0065AA  D7F4               	goto	l2502
  7784  0065AC  0A01               	xorlw	1	; case 1
  7785  0065AE  A4D8               	btfss	status,2,c
  7786  0065B0  0012               	return	
  7787  0065B2  D7F4               	goto	l2504
  7788  0065B4                     __end_of_Wdg_MainTask:
  7789                           	opt stack 0
  7790                           tosu	equ	0xFFF
  7791                           tosh	equ	0xFFE
  7792                           tosl	equ	0xFFD
  7793                           pclath	equ	0xFFA
  7794                           tblptru	equ	0xFF8
  7795                           tblptrh	equ	0xFF7
  7796                           tblptrl	equ	0xFF6
  7797                           tablat	equ	0xFF5
  7798                           prodh	equ	0xFF4
  7799                           prodl	equ	0xFF3
  7800                           intcon	equ	0xFF2
  7801                           intcon2	equ	0xFF1
  7802                           intcon3	equ	0xFF0
  7803                           postinc0	equ	0xFEE
  7804                           plusw0	equ	0xFEB
  7805                           wreg	equ	0xFE8
  7806                           postinc1	equ	0xFE6
  7807                           postdec1	equ	0xFE5
  7808                           fsr1h	equ	0xFE2
  7809                           fsr1l	equ	0xFE1
  7810                           indf2	equ	0xFDF
  7811                           postinc2	equ	0xFDE
  7812                           postdec2	equ	0xFDD
  7813                           plusw2	equ	0xFDB
  7814                           fsr2h	equ	0xFDA
  7815                           fsr2l	equ	0xFD9
  7816                           status	equ	0xFD8
  7817                           
  7818 ;; *************** function _Mcu_SetWdgSts *****************
  7819 ;; Defined at:
  7820 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  WdgSts          1    wreg     unsigned char 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7838 ;;Total ram usage:        1 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:   11
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_Wdg_MainTask
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text26
  7849  006866                     __ptext26:
  7850                           	opt stack 0
  7851  006866                     _Mcu_SetWdgSts:
  7852                           	opt stack 16
  7853                           
  7854                           ;incstack = 0
  7855                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7856  006866  0100               	movlb	0	; () banked
  7857  006868  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7858                           
  7859                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7860  00686A  0100               	movlb	0	; () banked
  7861  00686C  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7862  00686E  D002               	bra	u14405
  7863  006870  90C0               	bcf	4032,0,c	;volatile
  7864  006872  D001               	bra	u14406
  7865  006874                     u14405:
  7866  006874  80C0               	bsf	4032,0,c	;volatile
  7867  006876                     u14406:
  7868  006876  0012               	return		;funcret
  7869  006878                     __end_of_Mcu_SetWdgSts:
  7870                           	opt stack 0
  7871                           tosu	equ	0xFFF
  7872                           tosh	equ	0xFFE
  7873                           tosl	equ	0xFFD
  7874                           pclath	equ	0xFFA
  7875                           tblptru	equ	0xFF8
  7876                           tblptrh	equ	0xFF7
  7877                           tblptrl	equ	0xFF6
  7878                           tablat	equ	0xFF5
  7879                           prodh	equ	0xFF4
  7880                           prodl	equ	0xFF3
  7881                           intcon	equ	0xFF2
  7882                           intcon2	equ	0xFF1
  7883                           intcon3	equ	0xFF0
  7884                           postinc0	equ	0xFEE
  7885                           plusw0	equ	0xFEB
  7886                           wreg	equ	0xFE8
  7887                           postinc1	equ	0xFE6
  7888                           postdec1	equ	0xFE5
  7889                           fsr1h	equ	0xFE2
  7890                           fsr1l	equ	0xFE1
  7891                           indf2	equ	0xFDF
  7892                           postinc2	equ	0xFDE
  7893                           postdec2	equ	0xFDD
  7894                           plusw2	equ	0xFDB
  7895                           fsr2h	equ	0xFDA
  7896                           fsr2l	equ	0xFD9
  7897                           status	equ	0xFD8
  7898                           
  7899 ;; *************** function _Mcu_ClearWdg *****************
  7900 ;; Defined at:
  7901 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;		None
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      void 
  7908 ;; Registers used:
  7909 ;;		None
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;Total ram usage:        0 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:   11
  7922 ;; This function calls:
  7923 ;;		Nothing
  7924 ;; This function is called by:
  7925 ;;		_Wdg_MainTask
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929                           	psect	text27
  7930  006966                     __ptext27:
  7931                           	opt stack 0
  7932  006966                     _Mcu_ClearWdg:
  7933                           	opt stack 16
  7934                           
  7935                           ;incstack = 0
  7936  006966  0004               	clrwdt		;# 
  7937  006968  0012               	return		;funcret
  7938  00696A                     __end_of_Mcu_ClearWdg:
  7939                           	opt stack 0
  7940                           tosu	equ	0xFFF
  7941                           tosh	equ	0xFFE
  7942                           tosl	equ	0xFFD
  7943                           pclath	equ	0xFFA
  7944                           tblptru	equ	0xFF8
  7945                           tblptrh	equ	0xFF7
  7946                           tblptrl	equ	0xFF6
  7947                           tablat	equ	0xFF5
  7948                           prodh	equ	0xFF4
  7949                           prodl	equ	0xFF3
  7950                           intcon	equ	0xFF2
  7951                           intcon2	equ	0xFF1
  7952                           intcon3	equ	0xFF0
  7953                           postinc0	equ	0xFEE
  7954                           plusw0	equ	0xFEB
  7955                           wreg	equ	0xFE8
  7956                           postinc1	equ	0xFE6
  7957                           postdec1	equ	0xFE5
  7958                           fsr1h	equ	0xFE2
  7959                           fsr1l	equ	0xFE1
  7960                           indf2	equ	0xFDF
  7961                           postinc2	equ	0xFDE
  7962                           postdec2	equ	0xFDD
  7963                           plusw2	equ	0xFDB
  7964                           fsr2h	equ	0xFDA
  7965                           fsr2l	equ	0xFD9
  7966                           status	equ	0xFD8
  7967                           
  7968 ;; *************** function _USBDeviceTasks *****************
  7969 ;; Defined at:
  7970 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;		None
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;  i               1   56[BANK0 ] unsigned char 
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  1    wreg      void 
  7977 ;; Registers used:
  7978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7988 ;;Total ram usage:        1 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:   19
  7991 ;; This function calls:
  7992 ;;		_USBCtrlEPAllowStatusStage
  7993 ;;		_USBCtrlEPService
  7994 ;;		_USBDeviceInit
  7995 ;;		_USBIncrement1msInternalTimers
  7996 ;;		_USBStallHandler
  7997 ;;		_USBSuspend
  7998 ;;		_USBWakeFromSuspend
  7999 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8000 ;; This function is called by:
  8001 ;;		_UsbDevice_MainTask
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text28
  8006  001F14                     __ptext28:
  8007                           	opt stack 0
  8008  001F14                     _USBDeviceTasks:
  8009                           	opt stack 8
  8010                           
  8011                           ;usb_device.c: 562: }
  8012                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  8013                           
  8014                           ; BSR set to: 0
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;usb_device.c: 561: return;
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  8021                           
  8022                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  8023                           
  8024                           ;usb_device.c: 529: UIE = 0;
  8025                           
  8026                           ;usb_device.c: 524: {
  8027                           ;usb_device.c: 526: UCON = 0;
  8028                           
  8029                           ;usb_device.c: 497: uint8_t i;
  8030                           ;usb_device.c: 523: if (1 != 1)
  8031                           
  8032                           ;incstack = 0
  8033  001F14  0100               	movlb	0	; () banked
  8034  001F16  51CC               	movf	_USBDeviceState& (0+255),w,b
  8035  001F18  A4D8               	btfss	status,2,c
  8036  001F1A  D012               	goto	l1615
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;usb_device.c: 585: {
  8040                           ;usb_device.c: 587: UCON = 0;
  8041  001F1C  0E00               	movlw	0
  8042  001F1E  6E65               	movwf	3941,c	;volatile
  8043                           
  8044                           ;usb_device.c: 590: UIE = 0;
  8045  001F20  0E00               	movlw	0
  8046  001F22  010F               	movlb	15	; () banked
  8047  001F24  6F36               	movwf	54,b	;volatile
  8048                           
  8049                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8050  001F26  0E16               	movlw	22
  8051  001F28  6F39               	movwf	57,b	;volatile
  8052  001F2A  0E9F               	movlw	159
  8053  001F2C  6F37               	movwf	55,b	;volatile
  8054  001F2E  0E7B               	movlw	123
  8055  001F30  6F36               	movwf	54,b	;volatile
  8056                           
  8057                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  8058  001F32  D001               	goto	l1616
  8059  001F34                     l1617:
  8060  001F34  8665               	bsf	3941,3,c	;volatile
  8061  001F36                     l1616:
  8062  001F36  A665               	btfss	3941,3,c	;volatile
  8063  001F38  D7FD               	goto	l1617
  8064                           
  8065                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  8066  001F3A  0E01               	movlw	1
  8067  001F3C  0100               	movlb	0	; () banked
  8068  001F3E  6FCC               	movwf	_USBDeviceState& (0+255),b
  8069  001F40                     l1615:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;usb_device.c: 605: }
  8073                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  8074                           
  8075                           ; BSR set to: 0
  8076  001F40  05CC               	decf	_USBDeviceState& (0+255),w,b
  8077  001F42  B4D8               	btfsc	status,2,c
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;usb_device.c: 609: {
  8081                           ;usb_device.c: 619: if(!UCONbits.SE0)
  8082  001F44  BA65               	btfsc	3941,5,c	;volatile
  8083  001F46  D00A               	goto	l1620
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;usb_device.c: 620: {
  8087                           ;usb_device.c: 626: {UIR = 0;};
  8088  001F48  0E00               	movlw	0
  8089  001F4A  6E62               	movwf	3938,c	;volatile
  8090                           
  8091                           ;usb_device.c: 630: UIE=0;
  8092  001F4C  0E00               	movlw	0
  8093  001F4E  010F               	movlb	15	; () banked
  8094  001F50  6F36               	movwf	54,b	;volatile
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  8098  001F52  8136               	bsf	54,0,b	;volatile
  8099                           
  8100                           ; BSR set to: 15
  8101                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  8102  001F54  8936               	bsf	54,4,b	;volatile
  8103                           
  8104                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  8105  001F56  0E02               	movlw	2
  8106  001F58  0100               	movlb	0	; () banked
  8107  001F5A  6FCC               	movwf	_USBDeviceState& (0+255),b
  8108  001F5C                     l1620:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;usb_device.c: 635: }
  8112                           ;usb_device.c: 636: }
  8113                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  8114                           
  8115                           ; BSR set to: 0
  8116                           
  8117                           ; BSR set to: 0
  8118  001F5C  A462               	btfss	3938,2,c	;volatile
  8119  001F5E  D006               	goto	l1621
  8120                           
  8121                           ; BSR set to: 0
  8122  001F60  010F               	movlb	15	; () banked
  8123  001F62  A536               	btfss	54,2,b	;volatile
  8124  001F64  D003               	goto	l1621
  8125                           
  8126                           ; BSR set to: 15
  8127                           ;usb_device.c: 653: {
  8128                           ;usb_device.c: 654: (UIR &= 0xFB);
  8129  001F66  9462               	bcf	3938,2,c	;volatile
  8130                           
  8131                           ; BSR set to: 15
  8132                           ;usb_device.c: 658: USBWakeFromSuspend();
  8133  001F68  ECBD  F030         	call	_USBWakeFromSuspend	;wreg free
  8134  001F6C                     l1621:
  8135                           
  8136                           ;usb_device.c: 660: }
  8137                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  8138  001F6C  A265               	btfss	3941,1,c	;volatile
  8139  001F6E  D002               	goto	l1622
  8140                           
  8141                           ;usb_device.c: 666: {
  8142                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  8143  001F70  98A1               	bcf	4001,4,c	;volatile
  8144                           
  8145                           ;usb_device.c: 668: return;
  8146  001F72  0012               	return	
  8147  001F74                     l1622:
  8148                           
  8149                           ;usb_device.c: 669: }
  8150                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8151  001F74  A062               	btfss	3938,0,c	;volatile
  8152  001F76  D009               	goto	l1623
  8153  001F78  010F               	movlb	15	; () banked
  8154  001F7A  A136               	btfss	54,0,b	;volatile
  8155  001F7C  D006               	goto	l1623
  8156                           
  8157                           ; BSR set to: 15
  8158                           ;usb_device.c: 682: {
  8159                           ;usb_device.c: 683: USBDeviceInit();
  8160  001F7E  ECCB  F013         	call	_USBDeviceInit	;wreg free
  8161                           
  8162                           ;usb_device.c: 687: ;
  8163                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  8164  001F82  0E04               	movlw	4
  8165  001F84  0100               	movlb	0	; () banked
  8166  001F86  6FCC               	movwf	_USBDeviceState& (0+255),b
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;usb_device.c: 699: (UIR &= 0xFE);
  8170  001F88  9062               	bcf	3938,0,c	;volatile
  8171  001F8A                     l1623:
  8172                           
  8173                           ;usb_device.c: 700: }
  8174                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8175                           
  8176                           ; BSR set to: 0
  8177  001F8A  A862               	btfss	3938,4,c	;volatile
  8178  001F8C  D004               	goto	l1624
  8179  001F8E  010F               	movlb	15	; () banked
  8180  001F90  B936               	btfsc	54,4,b	;volatile
  8181                           
  8182                           ; BSR set to: 15
  8183                           ;usb_device.c: 706: {
  8184                           ;usb_device.c: 712: USBSuspend();
  8185  001F92  EC47  F031         	call	_USBSuspend	;wreg free
  8186  001F96                     l1624:
  8187                           
  8188                           ;usb_device.c: 714: }
  8189                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  8190  001F96  AC62               	btfss	3938,6,c	;volatile
  8191  001F98  D01D               	goto	l1628
  8192                           
  8193                           ;usb_device.c: 727: {
  8194                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  8195  001F9A  010F               	movlb	15	; () banked
  8196  001F9C  AD36               	btfss	54,6,b	;volatile
  8197  001F9E  D00F               	goto	l1626
  8198                           
  8199                           ; BSR set to: 15
  8200                           ;usb_device.c: 730: {
  8201                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8202  001FA0  0E00               	movlw	0
  8203  001FA2  0100               	movlb	0	; () banked
  8204  001FA4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8205  001FA6  0E73               	movlw	115
  8206  001FA8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8207  001FAA  0E00               	movlw	0
  8208  001FAC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8209  001FAE  0E00               	movlw	0
  8210  001FB0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8211  001FB2  0E00               	movlw	0
  8212  001FB4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8213  001FB6  0E01               	movlw	1
  8214  001FB8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8215  001FBA  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8216  001FBE                     l1626:
  8217                           
  8218                           ;usb_device.c: 732: }
  8219                           ;usb_device.c: 733: (UIR &= 0xBF);
  8220  001FBE  9C62               	bcf	3938,6,c	;volatile
  8221                           
  8222                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  8223  001FC0  ECDA  F032         	call	_USBIncrement1msInternalTimers	;wreg free
  8224                           
  8225                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  8226  001FC4  0100               	movlb	0	; () banked
  8227  001FC6  51C8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  8228  001FC8  A4D8               	btfss	status,2,c
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;usb_device.c: 754: {
  8232                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  8233  001FCA  07C8               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;usb_device.c: 756: }
  8237                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  8238                           
  8239                           ; BSR set to: 0
  8240  001FCC  51C8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  8241  001FCE  B4D8               	btfsc	status,2,c
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;usb_device.c: 763: {
  8245                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  8246  001FD0  EC91  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8247  001FD4                     l1628:
  8248                           
  8249                           ;usb_device.c: 765: }
  8250                           ;usb_device.c: 767: }
  8251                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8252  001FD4  AA62               	btfss	3938,5,c	;volatile
  8253  001FD6  D004               	goto	l1629
  8254  001FD8  010F               	movlb	15	; () banked
  8255  001FDA  BB36               	btfsc	54,5,b	;volatile
  8256                           
  8257                           ; BSR set to: 15
  8258                           ;usb_device.c: 770: {
  8259                           ;usb_device.c: 771: USBStallHandler();
  8260  001FDC  EC38  F02F         	call	_USBStallHandler	;wreg free
  8261  001FE0                     l1629:
  8262                           
  8263                           ;usb_device.c: 772: }
  8264                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8265  001FE0  A262               	btfss	3938,1,c	;volatile
  8266  001FE2  D013               	goto	l1630
  8267  001FE4  010F               	movlb	15	; () banked
  8268  001FE6  A336               	btfss	54,1,b	;volatile
  8269  001FE8  D010               	goto	l1630
  8270                           
  8271                           ; BSR set to: 15
  8272                           ;usb_device.c: 775: {
  8273                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8274  001FEA  0E7F               	movlw	127
  8275  001FEC  0100               	movlb	0	; () banked
  8276  001FEE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8277  001FF0  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8278  001FF2  0E00               	movlw	0
  8279  001FF4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8280  001FF6  0E00               	movlw	0
  8281  001FF8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8282  001FFA  0E00               	movlw	0
  8283  001FFC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8284  001FFE  0E01               	movlw	1
  8285  002000  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8286  002002  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8287                           
  8288                           ;usb_device.c: 777: {UEIR = 0;};
  8289  002006  0E00               	movlw	0
  8290  002008  6E63               	movwf	3939,c	;volatile
  8291  00200A                     l1630:
  8292                           
  8293                           ;usb_device.c: 785: }
  8294                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  8295  00200A  0E04               	movlw	4
  8296  00200C  0100               	movlb	0	; () banked
  8297  00200E  61CC               	cpfslt	_USBDeviceState& (0+255),b
  8298  002010  D002               	goto	l1631
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;usb_device.c: 793: {
  8302                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  8303  002012  98A1               	bcf	4001,4,c	;volatile
  8304                           
  8305                           ;usb_device.c: 795: return;
  8306  002014  0012               	return	
  8307  002016                     l1631:
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;usb_device.c: 796: }
  8311                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  8312  002016  010F               	movlb	15	; () banked
  8313  002018  A736               	btfss	54,3,b	;volatile
  8314  00201A  D03E               	goto	u15390
  8315                           
  8316                           ; BSR set to: 15
  8317                           ;usb_device.c: 802: {
  8318                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  8319  00201C  0E00               	movlw	0
  8320  00201E  0100               	movlb	0	; () banked
  8321  002020  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  8322  002022                     l15601:
  8323                           
  8324                           ; BSR set to: 0
  8325  002022  0E03               	movlw	3
  8326  002024  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  8327  002026  D001               	goto	l1633
  8328  002028  D037               	goto	u15390
  8329  00202A                     l1633:
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;usb_device.c: 804: {
  8333                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  8334  00202A  A662               	btfss	3938,3,c	;volatile
  8335  00202C  D035               	goto	u15390
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;usb_device.c: 806: {
  8339                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  8340  00202E  CF64 F0D4          	movff	3940,_USTATcopy	;volatile
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  8344  002032  31D4               	rrcf	_USTATcopy& (0+255),w,b
  8345  002034  32E8               	rrcf	wreg,f,c
  8346  002036  32E8               	rrcf	wreg,f,c
  8347  002038  0B0F               	andlw	15
  8348  00203A  6FC9               	movwf	_endpoint_number& (0+255),b
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;usb_device.c: 811: (UIR &= 0xF7);
  8352  00203C  9662               	bcf	3938,3,c	;volatile
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  8356  00203E  B5D4               	btfsc	_USTATcopy& (0+255),2,b
  8357  002040  D007               	goto	l1636
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;usb_device.c: 817: {
  8361                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8362  002042  51C9               	movf	_endpoint_number& (0+255),w,b
  8363  002044  0D01               	mullw	1
  8364  002046  0ECE               	movlw	low _ep_data_out
  8365  002048  24F3               	addwf	prodl,w,c
  8366  00204A  6ED9               	movwf	fsr2l,c
  8367  00204C  0E02               	movlw	high _ep_data_out
  8368  00204E  D007               	goto	L3
  8369  002050                     l1636:
  8370                           
  8371                           ;usb_device.c: 820: else
  8372                           ;usb_device.c: 821: {
  8373                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8374                           
  8375                           ; BSR set to: 2
  8376  002050  0100               	movlb	0	; () banked
  8377  002052  51C9               	movf	_endpoint_number& (0+255),w,b
  8378  002054  0D01               	mullw	1
  8379  002056  0ED1               	movlw	low _ep_data_in
  8380  002058  24F3               	addwf	prodl,w,c
  8381  00205A  6ED9               	movwf	fsr2l,c
  8382  00205C  0E02               	movlw	high _ep_data_in
  8383  00205E                     L3:
  8384  00205E  20F4               	addwfc	prodh,w,c
  8385  002060  6EDA               	movwf	fsr2h,c
  8386  002062  0102               	movlb	2	; () banked
  8387  002064  70DF               	btg	indf2,0,c
  8388                           
  8389                           ; BSR set to: 2
  8390                           ;usb_device.c: 823: }
  8391                           ;usb_device.c: 828: if(endpoint_number == 0)
  8392                           
  8393                           ; BSR set to: 2
  8394  002066  0100               	movlb	0	; () banked
  8395  002068  51C9               	movf	_endpoint_number& (0+255),w,b
  8396  00206A  A4D8               	btfss	status,2,c
  8397  00206C  D003               	goto	l1638
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;usb_device.c: 829: {
  8401                           ;usb_device.c: 830: USBCtrlEPService();
  8402  00206E  EC26  F026         	call	_USBCtrlEPService	;wreg free
  8403                           
  8404                           ;usb_device.c: 831: }
  8405  002072  D00F               	goto	l1640
  8406  002074                     l1638:
  8407                           
  8408                           ;usb_device.c: 832: else
  8409                           ;usb_device.c: 833: {
  8410                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  8411  002074  0E00               	movlw	0
  8412  002076  0100               	movlb	0	; () banked
  8413  002078  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8414  00207A  0E72               	movlw	114
  8415  00207C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8416  00207E  0ED4               	movlw	low _USTATcopy
  8417  002080  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8418  002082  0E00               	movlw	high _USTATcopy
  8419  002084  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8420  002086  0E00               	movlw	0
  8421  002088  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8422  00208A  0E00               	movlw	0
  8423  00208C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8424  00208E  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8425  002092                     l1640:
  8426  002092  0100               	movlb	0	; () banked
  8427  002094  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  8428  002096  D7C5               	goto	l15601
  8429  002098                     u15390:
  8430                           
  8431                           ;usb_device.c: 840: }
  8432                           ;usb_device.c: 841: }
  8433                           ;usb_device.c: 842: }
  8434                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  8435                           
  8436                           ; BSR set to: 0
  8437  002098  98A1               	bcf	4001,4,c	;volatile
  8438  00209A  0012               	return		;funcret
  8439  00209C                     __end_of_USBDeviceTasks:
  8440                           	opt stack 0
  8441                           tosu	equ	0xFFF
  8442                           tosh	equ	0xFFE
  8443                           tosl	equ	0xFFD
  8444                           pclath	equ	0xFFA
  8445                           tblptru	equ	0xFF8
  8446                           tblptrh	equ	0xFF7
  8447                           tblptrl	equ	0xFF6
  8448                           tablat	equ	0xFF5
  8449                           prodh	equ	0xFF4
  8450                           prodl	equ	0xFF3
  8451                           intcon	equ	0xFF2
  8452                           intcon2	equ	0xFF1
  8453                           intcon3	equ	0xFF0
  8454                           postinc0	equ	0xFEE
  8455                           plusw0	equ	0xFEB
  8456                           wreg	equ	0xFE8
  8457                           postinc1	equ	0xFE6
  8458                           postdec1	equ	0xFE5
  8459                           fsr1h	equ	0xFE2
  8460                           fsr1l	equ	0xFE1
  8461                           indf2	equ	0xFDF
  8462                           postinc2	equ	0xFDE
  8463                           postdec2	equ	0xFDD
  8464                           plusw2	equ	0xFDB
  8465                           fsr2h	equ	0xFDA
  8466                           fsr2l	equ	0xFD9
  8467                           status	equ	0xFD8
  8468                           
  8469 ;; *************** function _USBWakeFromSuspend *****************
  8470 ;; Defined at:
  8471 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;		None
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      void 
  8478 ;; Registers used:
  8479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8489 ;;Total ram usage:        0 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:   15
  8492 ;; This function calls:
  8493 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8494 ;; This function is called by:
  8495 ;;		_USBDeviceTasks
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text29
  8500  00617A                     __ptext29:
  8501                           	opt stack 0
  8502  00617A                     _USBWakeFromSuspend:
  8503                           	opt stack 11
  8504                           
  8505                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8506                           
  8507                           ;incstack = 0
  8508  00617A  0E00               	movlw	0
  8509  00617C  0101               	movlb	1	; () banked
  8510  00617E  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8511                           
  8512                           ; BSR set to: 1
  8513                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8514  006180  0E00               	movlw	0
  8515  006182  0100               	movlb	0	; () banked
  8516  006184  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8517  006186  0E74               	movlw	116
  8518  006188  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8519  00618A  0E00               	movlw	0
  8520  00618C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8521  00618E  0E00               	movlw	0
  8522  006190  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8523  006192  0E00               	movlw	0
  8524  006194  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8525  006196  0E00               	movlw	0
  8526  006198  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8527  00619A  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8528                           
  8529                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8530  00619E  9265               	bcf	3941,1,c	;volatile
  8531                           
  8532                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8533  0061A0  010F               	movlb	15	; () banked
  8534  0061A2  9536               	bcf	54,2,b	;volatile
  8535                           
  8536                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8537  0061A4  D001               	goto	l1768
  8538  0061A6                     
  8539                           ;usb_device.c: 2361: {
  8540                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8541                           
  8542                           ; BSR set to: 15
  8543  0061A6  9462               	bcf	3938,2,c	;volatile
  8544  0061A8                     l1768:
  8545  0061A8  B462               	btfsc	3938,2,c	;volatile
  8546  0061AA  D7FD               	goto	l1769
  8547                           
  8548                           ;usb_device.c: 2363: }
  8549                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8550  0061AC  0E00               	movlw	0
  8551  0061AE  0101               	movlb	1	; () banked
  8552  0061B0  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8553                           
  8554                           ; BSR set to: 1
  8555  0061B2  0012               	return		;funcret
  8556  0061B4                     __end_of_USBWakeFromSuspend:
  8557                           	opt stack 0
  8558                           tosu	equ	0xFFF
  8559                           tosh	equ	0xFFE
  8560                           tosl	equ	0xFFD
  8561                           pclath	equ	0xFFA
  8562                           tblptru	equ	0xFF8
  8563                           tblptrh	equ	0xFF7
  8564                           tblptrl	equ	0xFF6
  8565                           tablat	equ	0xFF5
  8566                           prodh	equ	0xFF4
  8567                           prodl	equ	0xFF3
  8568                           intcon	equ	0xFF2
  8569                           intcon2	equ	0xFF1
  8570                           intcon3	equ	0xFF0
  8571                           postinc0	equ	0xFEE
  8572                           plusw0	equ	0xFEB
  8573                           wreg	equ	0xFE8
  8574                           postinc1	equ	0xFE6
  8575                           postdec1	equ	0xFE5
  8576                           fsr1h	equ	0xFE2
  8577                           fsr1l	equ	0xFE1
  8578                           indf2	equ	0xFDF
  8579                           postinc2	equ	0xFDE
  8580                           postdec2	equ	0xFDD
  8581                           plusw2	equ	0xFDB
  8582                           fsr2h	equ	0xFDA
  8583                           fsr2l	equ	0xFD9
  8584                           status	equ	0xFD8
  8585                           
  8586 ;; *************** function _USBSuspend *****************
  8587 ;; Defined at:
  8588 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8606 ;;Total ram usage:        0 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:   15
  8609 ;; This function calls:
  8610 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8611 ;; This function is called by:
  8612 ;;		_USBDeviceTasks
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text30
  8617  00628E                     __ptext30:
  8618                           	opt stack 0
  8619  00628E                     _USBSuspend:
  8620                           	opt stack 11
  8621                           
  8622                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8623                           
  8624                           ; BSR set to: 1
  8625                           ;incstack = 0
  8626  00628E  010F               	movlb	15	; () banked
  8627  006290  8536               	bsf	54,2,b	;volatile
  8628                           
  8629                           ; BSR set to: 15
  8630                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8631  006292  9862               	bcf	3938,4,c	;volatile
  8632                           
  8633                           ; BSR set to: 15
  8634                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8635  006294  8265               	bsf	3941,1,c	;volatile
  8636                           
  8637                           ; BSR set to: 15
  8638                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8639  006296  0E01               	movlw	1
  8640  006298  0101               	movlb	1	; () banked
  8641  00629A  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8642                           
  8643                           ; BSR set to: 1
  8644                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8645  00629C  0E00               	movlw	0
  8646  00629E  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8647                           
  8648                           ; BSR set to: 1
  8649                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8650  0062A0  0E00               	movlw	0
  8651  0062A2  0100               	movlb	0	; () banked
  8652  0062A4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8653  0062A6  0E75               	movlw	117
  8654  0062A8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8655  0062AA  0E00               	movlw	0
  8656  0062AC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8657  0062AE  0E00               	movlw	0
  8658  0062B0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8659  0062B2  0E00               	movlw	0
  8660  0062B4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8661  0062B6  0E00               	movlw	0
  8662  0062B8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8663  0062BA  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8664  0062BE  0012               	return		;funcret
  8665  0062C0                     __end_of_USBSuspend:
  8666                           	opt stack 0
  8667                           tosu	equ	0xFFF
  8668                           tosh	equ	0xFFE
  8669                           tosl	equ	0xFFD
  8670                           pclath	equ	0xFFA
  8671                           tblptru	equ	0xFF8
  8672                           tblptrh	equ	0xFF7
  8673                           tblptrl	equ	0xFF6
  8674                           tablat	equ	0xFF5
  8675                           prodh	equ	0xFF4
  8676                           prodl	equ	0xFF3
  8677                           intcon	equ	0xFF2
  8678                           intcon2	equ	0xFF1
  8679                           intcon3	equ	0xFF0
  8680                           postinc0	equ	0xFEE
  8681                           plusw0	equ	0xFEB
  8682                           wreg	equ	0xFE8
  8683                           postinc1	equ	0xFE6
  8684                           postdec1	equ	0xFE5
  8685                           fsr1h	equ	0xFE2
  8686                           fsr1l	equ	0xFE1
  8687                           indf2	equ	0xFDF
  8688                           postinc2	equ	0xFDE
  8689                           postdec2	equ	0xFDD
  8690                           plusw2	equ	0xFDB
  8691                           fsr2h	equ	0xFDA
  8692                           fsr2l	equ	0xFD9
  8693                           status	equ	0xFD8
  8694                           
  8695 ;; *************** function _USBStallHandler *****************
  8696 ;; Defined at:
  8697 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;		None
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;		None
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  1    wreg      void 
  8704 ;; Registers used:
  8705 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8713 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8714 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8715 ;;Total ram usage:        1 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; Hardware stack levels required when called:   11
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_USBDeviceTasks
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text31
  8726  005E70                     __ptext31:
  8727                           	opt stack 0
  8728  005E70                     _USBStallHandler:
  8729                           	opt stack 15
  8730                           
  8731                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8732                           
  8733                           ;incstack = 0
  8734  005E70  010F               	movlb	15	; () banked
  8735  005E72  A126               	btfss	38,0,b	;volatile
  8736  005E74  D01D               	goto	l1760
  8737                           
  8738                           ; BSR set to: 15
  8739                           ;usb_device.c: 2233: {
  8740                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8741  005E76  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8742  005E7A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8743  005E7E  0E80               	movlw	128
  8744  005E80  18DE               	xorwf	postinc2,w,c
  8745  005E82  A4D8               	btfss	status,2,c
  8746  005E84  D014               	goto	l1761
  8747                           
  8748                           ; BSR set to: 15
  8749  005E86  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8750  005E8A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8751  005E8E  0E84               	movlw	132
  8752  005E90  18DE               	xorwf	postinc2,w,c
  8753  005E92  A4D8               	btfss	status,2,c
  8754  005E94  D00C               	goto	l1761
  8755                           
  8756                           ; BSR set to: 15
  8757                           ;usb_device.c: 2236: {
  8758                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8759  005E96  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8760  005E9A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8761  005E9E  0E0C               	movlw	12
  8762  005EA0  6EDF               	movwf	indf2,c
  8763                           
  8764                           ; BSR set to: 15
  8765                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8766  005EA2  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8767  005EA6  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8768  005EAA  0E00               	movlw	0
  8769  005EAC  8EDB               	bsf	plusw2,7,c
  8770  005EAE                     l1761:
  8771                           
  8772                           ; BSR set to: 15
  8773                           ;usb_device.c: 2240: }
  8774                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8775                           
  8776                           ; BSR set to: 15
  8777  005EAE  9126               	bcf	38,0,b	;volatile
  8778  005EB0                     l1760:
  8779                           
  8780                           ; BSR set to: 15
  8781                           ;usb_device.c: 2242: }
  8782                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8783  005EB0  9A62               	bcf	3938,5,c	;volatile
  8784                           
  8785                           ; BSR set to: 15
  8786  005EB2  0012               	return		;funcret
  8787  005EB4                     __end_of_USBStallHandler:
  8788                           	opt stack 0
  8789                           tosu	equ	0xFFF
  8790                           tosh	equ	0xFFE
  8791                           tosl	equ	0xFFD
  8792                           pclath	equ	0xFFA
  8793                           tblptru	equ	0xFF8
  8794                           tblptrh	equ	0xFF7
  8795                           tblptrl	equ	0xFF6
  8796                           tablat	equ	0xFF5
  8797                           prodh	equ	0xFF4
  8798                           prodl	equ	0xFF3
  8799                           intcon	equ	0xFF2
  8800                           intcon2	equ	0xFF1
  8801                           intcon3	equ	0xFF0
  8802                           postinc0	equ	0xFEE
  8803                           plusw0	equ	0xFEB
  8804                           wreg	equ	0xFE8
  8805                           postinc1	equ	0xFE6
  8806                           postdec1	equ	0xFE5
  8807                           fsr1h	equ	0xFE2
  8808                           fsr1l	equ	0xFE1
  8809                           indf2	equ	0xFDF
  8810                           postinc2	equ	0xFDE
  8811                           postdec2	equ	0xFDD
  8812                           plusw2	equ	0xFDB
  8813                           fsr2h	equ	0xFDA
  8814                           fsr2l	equ	0xFD9
  8815                           status	equ	0xFD8
  8816                           
  8817 ;; *************** function _USBIncrement1msInternalTimers *****************
  8818 ;; Defined at:
  8819 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;Total ram usage:        0 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:   11
  8840 ;; This function calls:
  8841 ;;		Nothing
  8842 ;; This function is called by:
  8843 ;;		_USBDeviceTasks
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text32
  8848  0065B4                     __ptext32:
  8849                           	opt stack 0
  8850  0065B4                     _USBIncrement1msInternalTimers:
  8851                           	opt stack 15
  8852                           
  8853                           ;usb_device.c: 3050: USB1msTickCount++;
  8854                           
  8855                           ; BSR set to: 15
  8856                           ;incstack = 0
  8857  0065B4  0E01               	movlw	1
  8858  0065B6  0103               	movlb	3	; () banked
  8859  0065B8  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8860  0065BA  0E00               	movlw	0
  8861  0065BC  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8862  0065BE  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8863  0065C0  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8864                           
  8865                           ; BSR set to: 3
  8866                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8867  0065C2  0101               	movlb	1	; () banked
  8868  0065C4  51E2               	movf	_USBBusIsSuspended& (0+255),w,b
  8869  0065C6  A4D8               	btfss	status,2,c
  8870  0065C8  0012               	return	
  8871                           
  8872                           ; BSR set to: 1
  8873                           ;usb_device.c: 3052: {
  8874                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8875  0065CA  2BE0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8876                           
  8877                           ; BSR set to: 1
  8878                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8879  0065CC  51E0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8880  0065CE  A4D8               	btfss	status,2,c
  8881  0065D0  0012               	return	
  8882                           
  8883                           ; BSR set to: 1
  8884                           ;usb_device.c: 3056: {
  8885                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8886  0065D2  69E0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8887                           
  8888                           ; BSR set to: 1
  8889  0065D4  0012               	return	
  8890  0065D6                     __end_of_USBIncrement1msInternalTimers:
  8891                           	opt stack 0
  8892                           tosu	equ	0xFFF
  8893                           tosh	equ	0xFFE
  8894                           tosl	equ	0xFFD
  8895                           pclath	equ	0xFFA
  8896                           tblptru	equ	0xFF8
  8897                           tblptrh	equ	0xFF7
  8898                           tblptrl	equ	0xFF6
  8899                           tablat	equ	0xFF5
  8900                           prodh	equ	0xFF4
  8901                           prodl	equ	0xFF3
  8902                           intcon	equ	0xFF2
  8903                           intcon2	equ	0xFF1
  8904                           intcon3	equ	0xFF0
  8905                           postinc0	equ	0xFEE
  8906                           plusw0	equ	0xFEB
  8907                           wreg	equ	0xFE8
  8908                           postinc1	equ	0xFE6
  8909                           postdec1	equ	0xFE5
  8910                           fsr1h	equ	0xFE2
  8911                           fsr1l	equ	0xFE1
  8912                           indf2	equ	0xFDF
  8913                           postinc2	equ	0xFDE
  8914                           postdec2	equ	0xFDD
  8915                           plusw2	equ	0xFDB
  8916                           fsr2h	equ	0xFDA
  8917                           fsr2l	equ	0xFD9
  8918                           status	equ	0xFD8
  8919                           
  8920 ;; *************** function _USBDeviceInit *****************
  8921 ;; Defined at:
  8922 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;		None
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;  i               1   37[BANK0 ] unsigned char 
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  1    wreg      void 
  8929 ;; Registers used:
  8930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8939 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8940 ;;Total ram usage:        1 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:   12
  8943 ;; This function calls:
  8944 ;;		_memset
  8945 ;; This function is called by:
  8946 ;;		_USBDeviceTasks
  8947 ;;		_UsbDevice_MainTask
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text33
  8952  002796                     __ptext33:
  8953                           	opt stack 0
  8954  002796                     _USBDeviceInit:
  8955                           	opt stack 14
  8956                           
  8957                           ;usb_device.c: 297: uint8_t i;
  8958                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8959                           
  8960                           ; BSR set to: 1
  8961                           ;incstack = 0
  8962  002796  98A0               	bcf	4000,4,c	;volatile
  8963                           
  8964                           ;usb_device.c: 303: ;
  8965                           ;usb_device.c: 306: {UEIR = 0;};
  8966  002798  0E00               	movlw	0
  8967  00279A  6E63               	movwf	3939,c	;volatile
  8968                           
  8969                           ;usb_device.c: 309: {UIR = 0;};
  8970  00279C  0E00               	movlw	0
  8971  00279E  6E62               	movwf	3938,c	;volatile
  8972                           
  8973                           ;usb_device.c: 312: UEP0 = 0;
  8974  0027A0  0E00               	movlw	0
  8975  0027A2  010F               	movlb	15	; () banked
  8976  0027A4  6F26               	movwf	38,b	;volatile
  8977                           
  8978                           ; BSR set to: 15
  8979                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8980  0027A6  0E27               	movlw	39
  8981  0027A8  0100               	movlb	0	; () banked
  8982  0027AA  6F7D               	movwf	memset@p1& (0+255),b
  8983  0027AC  0E0F               	movlw	15
  8984  0027AE  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8985  0027B0  0E00               	movlw	0
  8986  0027B2  6F80               	movwf	(memset@c+1)& (0+255),b
  8987  0027B4  0E00               	movlw	0
  8988  0027B6  6F7F               	movwf	memset@c& (0+255),b
  8989  0027B8  0E00               	movlw	0
  8990  0027BA  6F82               	movwf	(memset@n+1)& (0+255),b
  8991  0027BC  0E02               	movlw	2
  8992  0027BE  6F81               	movwf	memset@n& (0+255),b
  8993  0027C0  EC91  F031         	call	_memset	;wreg free
  8994                           
  8995                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8996  0027C4  0E16               	movlw	22
  8997  0027C6  010F               	movlb	15	; () banked
  8998  0027C8  6F39               	movwf	57,b	;volatile
  8999                           
  9000                           ; BSR set to: 15
  9001  0027CA  0E9F               	movlw	159
  9002  0027CC  6F37               	movwf	55,b	;volatile
  9003                           
  9004                           ; BSR set to: 15
  9005  0027CE  0E7B               	movlw	123
  9006  0027D0  6F36               	movwf	54,b	;volatile
  9007                           
  9008                           ; BSR set to: 15
  9009                           ;usb_device.c: 319: ;
  9010                           ;usb_device.c: 322: ;
  9011                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  9012  0027D2  0E00               	movlw	0
  9013  0027D4  0100               	movlb	0	; () banked
  9014  0027D6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  9015  0027D8                     l14317:
  9016                           
  9017                           ; BSR set to: 0
  9018  0027D8  0E0B               	movlw	11
  9019  0027DA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  9020  0027DC  D001               	goto	l1604
  9021  0027DE  D00E               	goto	u13590
  9022  0027E0                     l1604:
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;usb_device.c: 326: {
  9026                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  9027                           
  9028                           ; BSR set to: 0
  9029  0027E0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9030  0027E2  0D04               	mullw	4
  9031  0027E4  0E00               	movlw	0
  9032  0027E6  24F3               	addwf	prodl,w,c
  9033  0027E8  6ED9               	movwf	fsr2l,c
  9034  0027EA  0E04               	movlw	4
  9035  0027EC  20F4               	addwfc	prodh,w,c
  9036  0027EE  6EDA               	movwf	fsr2h,c
  9037  0027F0  6ADE               	clrf	postinc2,c
  9038  0027F2  6ADE               	clrf	postinc2,c
  9039  0027F4  6ADE               	clrf	postinc2,c
  9040  0027F6  6ADD               	clrf	postdec2,c
  9041                           
  9042                           ; BSR set to: 0
  9043  0027F8  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  9044  0027FA  D7EE               	goto	l14317
  9045  0027FC                     u13590:
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;usb_device.c: 328: }
  9049                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  9050  0027FC  8C65               	bsf	3941,6,c	;volatile
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;usb_device.c: 334: UADDR = 0x00;
  9054  0027FE  0E00               	movlw	0
  9055  002800  010F               	movlb	15	; () banked
  9056  002802  6F38               	movwf	56,b	;volatile
  9057                           
  9058                           ; BSR set to: 15
  9059                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  9060  002804  9865               	bcf	3941,4,c	;volatile
  9061                           
  9062                           ; BSR set to: 15
  9063                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  9064  002806  9C65               	bcf	3941,6,c	;volatile
  9065  002808                     
  9066                           ;usb_device.c: 344: {
  9067                           ;usb_device.c: 345: (UIR &= 0xF7);
  9068                           
  9069                           ; BSR set to: 15
  9070  002808  9662               	bcf	3938,3,c	;volatile
  9071                           
  9072                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  9073  00280A  0E00               	movlw	0
  9074  00280C  0100               	movlb	0	; () banked
  9075  00280E  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  9079  002810  0E00               	movlw	0
  9080  002812  0101               	movlb	1	; () banked
  9081  002814  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9082                           
  9083                           ; BSR set to: 1
  9084                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  9085  002816  0E00               	movlw	0
  9086  002818  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9087  00281A  0E00               	movlw	0
  9088  00281C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9089                           
  9090                           ; BSR set to: 1
  9091                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  9092  00281E  B662               	btfsc	3938,3,c	;volatile
  9093  002820  D7F3               	goto	l1606
  9094                           
  9095                           ; BSR set to: 1
  9096                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  9097                           
  9098                           ; BSR set to: 1
  9099  002822  0E01               	movlw	1
  9100  002824  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9101                           
  9102                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  9103  002826  0E01               	movlw	1
  9104  002828  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9105                           
  9106                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  9107  00282A  0E00               	movlw	0
  9108  00282C  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9109                           
  9110                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  9111  00282E  0E00               	movlw	0
  9112  002830  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9113                           
  9114                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  9115  002832  0E00               	movlw	0
  9116  002834  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  9117                           
  9118                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  9119  002836  0E00               	movlw	0
  9120  002838  0100               	movlb	0	; () banked
  9121  00283A  6F85               	movwf	USBDeviceInit@i& (0+255),b
  9122  00283C                     l14345:
  9123                           
  9124                           ; BSR set to: 0
  9125  00283C  0E02               	movlw	2
  9126  00283E  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  9127  002840  D001               	goto	l1608
  9128  002842  D02E               	goto	u13620
  9129  002844                     l1608:
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;usb_device.c: 364: {
  9133                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  9134                           
  9135                           ; BSR set to: 0
  9136  002844  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9137  002846  0D02               	mullw	2
  9138  002848  0EB6               	movlw	low _pBDTEntryIn
  9139  00284A  24F3               	addwf	prodl,w,c
  9140  00284C  6ED9               	movwf	fsr2l,c
  9141  00284E  0E00               	movlw	high _pBDTEntryIn
  9142  002850  20F4               	addwfc	prodh,w,c
  9143  002852  6EDA               	movwf	fsr2h,c
  9144  002854  0E00               	movlw	0
  9145  002856  6EDE               	movwf	postinc2,c
  9146  002858  0E00               	movlw	0
  9147  00285A  6EDD               	movwf	postdec2,c
  9148                           
  9149                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  9150  00285C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9151  00285E  0D02               	mullw	2
  9152  002860  0E06               	movlw	low _pBDTEntryOut
  9153  002862  24F3               	addwf	prodl,w,c
  9154  002864  6ED9               	movwf	fsr2l,c
  9155  002866  0E03               	movlw	high _pBDTEntryOut
  9156  002868  20F4               	addwfc	prodh,w,c
  9157  00286A  6EDA               	movwf	fsr2h,c
  9158  00286C  0E00               	movlw	0
  9159  00286E  6EDE               	movwf	postinc2,c
  9160  002870  0E00               	movlw	0
  9161  002872  6EDD               	movwf	postdec2,c
  9162                           
  9163                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  9164  002874  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9165  002876  0D01               	mullw	1
  9166  002878  0ED1               	movlw	low _ep_data_in
  9167  00287A  24F3               	addwf	prodl,w,c
  9168  00287C  6ED9               	movwf	fsr2l,c
  9169  00287E  0E02               	movlw	high _ep_data_in
  9170  002880  20F4               	addwfc	prodh,w,c
  9171  002882  6EDA               	movwf	fsr2h,c
  9172  002884  0E00               	movlw	0
  9173  002886  6EDF               	movwf	indf2,c
  9174                           
  9175                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  9176  002888  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9177  00288A  0D01               	mullw	1
  9178  00288C  0ECE               	movlw	low _ep_data_out
  9179  00288E  24F3               	addwf	prodl,w,c
  9180  002890  6ED9               	movwf	fsr2l,c
  9181  002892  0E02               	movlw	high _ep_data_out
  9182  002894  20F4               	addwfc	prodh,w,c
  9183  002896  6EDA               	movwf	fsr2h,c
  9184  002898  0E00               	movlw	0
  9185  00289A  6EDF               	movwf	indf2,c
  9186                           
  9187                           ; BSR set to: 0
  9188  00289C  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  9189  00289E  D7CE               	goto	l14345
  9190  0028A0                     u13620:
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;usb_device.c: 369: }
  9194                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9195                           
  9196                           ; BSR set to: 0
  9197  0028A0  0E08               	movlw	8
  9198  0028A2  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9199  0028A4  0E04               	movlw	4
  9200  0028A6  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  9204  0028A8  0E16               	movlw	22
  9205  0028AA  010F               	movlb	15	; () banked
  9206  0028AC  6F26               	movwf	38,b	;volatile
  9207                           
  9208                           ; BSR set to: 15
  9209                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  9210  0028AE  0E04               	movlw	4
  9211  0028B0  0104               	movlb	4	; () banked
  9212  0028B2  6F03               	movwf	3,b	;volatile
  9213  0028B4  0E30               	movlw	48
  9214  0028B6  6F02               	movwf	2,b	;volatile
  9215                           
  9216                           ; BSR set to: 4
  9217                           ;usb_device.c: 377: BDT[0].CNT = 8;
  9218  0028B8  0E08               	movlw	8
  9219  0028BA  6F01               	movwf	1,b	;volatile
  9220                           
  9221                           ; BSR set to: 4
  9222                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  9223  0028BC  0E04               	movlw	4
  9224  0028BE  6F00               	movwf	0,b	;volatile
  9225                           
  9226                           ; BSR set to: 4
  9227                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  9228  0028C0  8F00               	bsf	0,7,b	;volatile
  9229                           
  9230                           ; BSR set to: 4
  9231                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  9232  0028C2  0E00               	movlw	0
  9233  0028C4  0100               	movlb	0	; () banked
  9234  0028C6  6FD5               	movwf	_USBActiveConfiguration& (0+255),b
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;usb_device.c: 384: USB1msTickCount = 0;
  9238  0028C8  0E00               	movlw	0
  9239  0028CA  0103               	movlb	3	; () banked
  9240  0028CC  6F10               	movwf	_USB1msTickCount& (0+255),b
  9241  0028CE  0E00               	movlw	0
  9242  0028D0  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  9243  0028D2  0E00               	movlw	0
  9244  0028D4  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  9245  0028D6  0E00               	movlw	0
  9246  0028D8  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  9247                           
  9248                           ; BSR set to: 3
  9249                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  9250  0028DA  0E00               	movlw	0
  9251  0028DC  0101               	movlb	1	; () banked
  9252  0028DE  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  9253                           
  9254                           ; BSR set to: 1
  9255                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  9256  0028E0  0E00               	movlw	0
  9257  0028E2  0100               	movlb	0	; () banked
  9258  0028E4  6FCC               	movwf	_USBDeviceState& (0+255),b
  9259                           
  9260                           ; BSR set to: 0
  9261  0028E6  0012               	return		;funcret
  9262  0028E8                     __end_of_USBDeviceInit:
  9263                           	opt stack 0
  9264                           tosu	equ	0xFFF
  9265                           tosh	equ	0xFFE
  9266                           tosl	equ	0xFFD
  9267                           pclath	equ	0xFFA
  9268                           tblptru	equ	0xFF8
  9269                           tblptrh	equ	0xFF7
  9270                           tblptrl	equ	0xFF6
  9271                           tablat	equ	0xFF5
  9272                           prodh	equ	0xFF4
  9273                           prodl	equ	0xFF3
  9274                           intcon	equ	0xFF2
  9275                           intcon2	equ	0xFF1
  9276                           intcon3	equ	0xFF0
  9277                           postinc0	equ	0xFEE
  9278                           plusw0	equ	0xFEB
  9279                           wreg	equ	0xFE8
  9280                           postinc1	equ	0xFE6
  9281                           postdec1	equ	0xFE5
  9282                           fsr1h	equ	0xFE2
  9283                           fsr1l	equ	0xFE1
  9284                           indf2	equ	0xFDF
  9285                           postinc2	equ	0xFDE
  9286                           postdec2	equ	0xFDD
  9287                           plusw2	equ	0xFDB
  9288                           fsr2h	equ	0xFDA
  9289                           fsr2l	equ	0xFD9
  9290                           status	equ	0xFD8
  9291                           
  9292 ;; *************** function _USBCtrlEPService *****************
  9293 ;; Defined at:
  9294 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;		None
  9297 ;; Auto vars:     Size  Location     Type
  9298 ;;		None
  9299 ;; Return value:  Size  Location     Type
  9300 ;;                  1    wreg      void 
  9301 ;; Registers used:
  9302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9310 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9311 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9312 ;;Total ram usage:        1 bytes
  9313 ;; Hardware stack levels used:    1
  9314 ;; Hardware stack levels required when called:   18
  9315 ;; This function calls:
  9316 ;;		_USBCtrlTrfInHandler
  9317 ;;		_USBCtrlTrfOutHandler
  9318 ;;		_USBCtrlTrfSetupHandler
  9319 ;;		_memcpy
  9320 ;; This function is called by:
  9321 ;;		_USBDeviceTasks
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text34
  9326  004C4C                     __ptext34:
  9327                           	opt stack 0
  9328  004C4C                     _USBCtrlEPService:
  9329                           	opt stack 8
  9330                           
  9331                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;incstack = 0
  9335  004C4C  0E2D               	movlw	45
  9336  004C4E  0100               	movlb	0	; () banked
  9337  004C50  6FC8               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  9341  004C52  C0D4  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9342  004C56  0EFD               	movlw	253
  9343  004C58  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9344  004C5A  A4D8               	btfss	status,2,c
  9345  004C5C  D038               	goto	l1774
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;usb_device.c: 2401: {
  9349                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9350  004C5E  C0D4  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9351  004C62  90D8               	bcf	status,0,c
  9352  004C64  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  9353  004C66  0E3F               	movlw	63
  9354  004C68  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9355  004C6A  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  9356  004C6C  0D04               	mullw	4
  9357  004C6E  0E00               	movlw	0
  9358  004C70  24F3               	addwf	prodl,w,c
  9359  004C72  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9360  004C74  0E04               	movlw	4
  9361  004C76  20F4               	addwfc	prodh,w,c
  9362  004C78  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9366  004C7A  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9367  004C7E  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9371  004C82  0E04               	movlw	4
  9372  004C84  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9376  004C86  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9377  004C8A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9378  004C8E  30DF               	rrcf	223,w,c
  9379  004C90  32E8               	rrcf	wreg,f,c
  9380  004C92  0B0F               	andlw	15
  9381  004C94  0A0D               	xorlw	13
  9382  004C96  A4D8               	btfss	status,2,c
  9383  004C98  D017               	goto	l1775
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;usb_device.c: 2418: {
  9387                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  9388  004C9A  0E30               	movlw	48
  9389  004C9C  6F7D               	movwf	memcpy@d1& (0+255),b
  9390  004C9E  0E04               	movlw	4
  9391  004CA0  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  9392  004CA2  EE20 F002          	lfsr	2,2
  9393  004CA6  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  9394  004CA8  26D9               	addwf	fsr2l,f,c
  9395  004CAA  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  9396  004CAC  22DA               	addwfc	fsr2h,f,c
  9397  004CAE  CFDE F07F          	movff	postinc2,memcpy@s1
  9398  004CB2  CFDD F080          	movff	postdec2,memcpy@s1+1
  9399  004CB6  0E00               	movlw	0
  9400  004CB8  6F82               	movwf	(memcpy@n+1)& (0+255),b
  9401  004CBA  0E08               	movlw	8
  9402  004CBC  6F81               	movwf	memcpy@n& (0+255),b
  9403  004CBE  ECCD  F02E         	call	_memcpy	;wreg free
  9404                           
  9405                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  9406  004CC2  EC91  F027         	call	_USBCtrlTrfSetupHandler	;wreg free
  9407                           
  9408                           ;usb_device.c: 2427: }
  9409  004CC6  0012               	return	
  9410  004CC8                     l1775:
  9411                           
  9412                           ;usb_device.c: 2428: else
  9413                           ;usb_device.c: 2429: {
  9414                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  9415  004CC8  EC6A  F02A         	call	_USBCtrlTrfOutHandler	;wreg free
  9416                           
  9417                           ;usb_device.c: 2432: }
  9418                           ;usb_device.c: 2433: }
  9419  004CCC  0012               	return	
  9420  004CCE                     l1774:
  9421                           
  9422                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  9423  004CCE  0100               	movlb	0	; () banked
  9424  004CD0  51D4               	movf	_USTATcopy& (0+255),w,b
  9425  004CD2  0BFD               	andlw	253
  9426  004CD4  0A04               	xorlw	4
  9427  004CD6  A4D8               	btfss	status,2,c
  9428  004CD8  0012               	return	
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;usb_device.c: 2435: {
  9432                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  9433  004CDA  ECEA  F020         	call	_USBCtrlTrfInHandler	;wreg free
  9434  004CDE  0012               	return	
  9435  004CE0                     __end_of_USBCtrlEPService:
  9436                           	opt stack 0
  9437                           tosu	equ	0xFFF
  9438                           tosh	equ	0xFFE
  9439                           tosl	equ	0xFFD
  9440                           pclath	equ	0xFFA
  9441                           tblptru	equ	0xFF8
  9442                           tblptrh	equ	0xFF7
  9443                           tblptrl	equ	0xFF6
  9444                           tablat	equ	0xFF5
  9445                           prodh	equ	0xFF4
  9446                           prodl	equ	0xFF3
  9447                           intcon	equ	0xFF2
  9448                           intcon2	equ	0xFF1
  9449                           intcon3	equ	0xFF0
  9450                           postinc0	equ	0xFEE
  9451                           plusw0	equ	0xFEB
  9452                           wreg	equ	0xFE8
  9453                           postinc1	equ	0xFE6
  9454                           postdec1	equ	0xFE5
  9455                           fsr1h	equ	0xFE2
  9456                           fsr1l	equ	0xFE1
  9457                           indf2	equ	0xFDF
  9458                           postinc2	equ	0xFDE
  9459                           postdec2	equ	0xFDD
  9460                           plusw2	equ	0xFDB
  9461                           fsr2h	equ	0xFDA
  9462                           fsr2l	equ	0xFD9
  9463                           status	equ	0xFD8
  9464                           
  9465 ;; *************** function _memcpy *****************
  9466 ;; Defined at:
  9467 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  d1              2   29[BANK0 ] PTR void 
  9470 ;;		 -> SetupPkt(8), 
  9471 ;;  s1              2   31[BANK0 ] PTR const void 
  9472 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9473 ;;  n               2   33[BANK0 ] unsigned int 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9476 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9477 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9478 ;;		 -> SetupPkt(8), 
  9479 ;;  tmp             1   35[BANK0 ] unsigned char 
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  2   29[BANK0 ] PTR void 
  9482 ;; Registers used:
  9483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9489 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9490 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9492 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9493 ;;Total ram usage:       11 bytes
  9494 ;; Hardware stack levels used:    1
  9495 ;; Hardware stack levels required when called:   11
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_USBCtrlEPService
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text35
  9504  005D9A                     __ptext35:
  9505                           	opt stack 0
  9506  005D9A                     _memcpy:
  9507                           	opt stack 14
  9508                           
  9509                           ;incstack = 0
  9510  005D9A  C07F  F086         	movff	memcpy@s1,memcpy@s
  9511  005D9E  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9512  005DA2  C07D  F084         	movff	memcpy@d1,memcpy@d
  9513  005DA6  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9514  005DAA  D011               	goto	l3308
  9515  005DAC                     l13589:
  9516  005DAC  C086  FFD9         	movff	memcpy@s,fsr2l
  9517  005DB0  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9518  005DB4  50DF               	movf	indf2,w,c
  9519  005DB6  0100               	movlb	0	; () banked
  9520  005DB8  6F83               	movwf	memcpy@tmp& (0+255),b
  9521                           
  9522                           ; BSR set to: 0
  9523  005DBA  4B86               	infsnz	memcpy@s& (0+255),f,b
  9524  005DBC  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9525                           
  9526                           ; BSR set to: 0
  9527  005DBE  C084  FFD9         	movff	memcpy@d,fsr2l
  9528  005DC2  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9529  005DC6  C083  FFDF         	movff	memcpy@tmp,indf2
  9530                           
  9531                           ; BSR set to: 0
  9532  005DCA  4B84               	infsnz	memcpy@d& (0+255),f,b
  9533  005DCC  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9534  005DCE                     l3308:
  9535                           
  9536                           ; BSR set to: 0
  9537  005DCE  0100               	movlb	0	; () banked
  9538  005DD0  0781               	decf	memcpy@n& (0+255),f,b
  9539  005DD2  A0D8               	btfss	status,0,c
  9540  005DD4  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9541  005DD6  2981               	incf	memcpy@n& (0+255),w,b
  9542  005DD8  E1E9               	bnz	l13589
  9543  005DDA  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9544  005DDC  B4D8               	btfsc	status,2,c
  9545  005DDE  0012               	return	
  9546  005DE0  D7E5               	goto	l3309
  9547  005DE2                     __end_of_memcpy:
  9548                           	opt stack 0
  9549                           tosu	equ	0xFFF
  9550                           tosh	equ	0xFFE
  9551                           tosl	equ	0xFFD
  9552                           pclath	equ	0xFFA
  9553                           tblptru	equ	0xFF8
  9554                           tblptrh	equ	0xFF7
  9555                           tblptrl	equ	0xFF6
  9556                           tablat	equ	0xFF5
  9557                           prodh	equ	0xFF4
  9558                           prodl	equ	0xFF3
  9559                           intcon	equ	0xFF2
  9560                           intcon2	equ	0xFF1
  9561                           intcon3	equ	0xFF0
  9562                           postinc0	equ	0xFEE
  9563                           plusw0	equ	0xFEB
  9564                           wreg	equ	0xFE8
  9565                           postinc1	equ	0xFE6
  9566                           postdec1	equ	0xFE5
  9567                           fsr1h	equ	0xFE2
  9568                           fsr1l	equ	0xFE1
  9569                           indf2	equ	0xFDF
  9570                           postinc2	equ	0xFDE
  9571                           postdec2	equ	0xFDD
  9572                           plusw2	equ	0xFDB
  9573                           fsr2h	equ	0xFDA
  9574                           fsr2l	equ	0xFD9
  9575                           status	equ	0xFD8
  9576                           
  9577 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9578 ;; Defined at:
  9579 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;		None
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9597 ;;Total ram usage:        0 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:   17
  9600 ;; This function calls:
  9601 ;;		_USBCheckStdRequest
  9602 ;;		_USBCtrlEPServiceComplete
  9603 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9604 ;; This function is called by:
  9605 ;;		_USBCtrlEPService
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text36
  9610  004F22                     __ptext36:
  9611                           	opt stack 0
  9612  004F22                     _USBCtrlTrfSetupHandler:
  9613                           	opt stack 8
  9614                           
  9615                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;incstack = 0
  9619  004F22  0E00               	movlw	0
  9620  004F24  0100               	movlb	0	; () banked
  9621  004F26  6FCB               	movwf	_shortPacketStatus& (0+255),b
  9622                           
  9623                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9624  004F28  0E00               	movlw	0
  9625  004F2A  6FC7               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9626                           
  9627                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9628  004F2C  0E00               	movlw	0
  9629  004F2E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9630                           
  9631                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9632  004F30  0E00               	movlw	0
  9633  004F32  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9634                           
  9635                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9636  004F34  0E00               	movlw	0
  9637  004F36  0101               	movlb	1	; () banked
  9638  004F38  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9639                           
  9640                           ;usb_device.c: 2493: controlTransferState = 0;
  9641  004F3A  0E00               	movlw	0
  9642  004F3C  0100               	movlb	0	; () banked
  9643  004F3E  6FCA               	movwf	_controlTransferState& (0+255),b
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9647  004F40  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9648  004F44  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9649  004F48  0E7F               	movlw	127
  9650  004F4A  16DF               	andwf	indf2,f,c
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9654  004F4C  0E04               	movlw	4
  9655  004F4E  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9659  004F50  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9660  004F54  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9661  004F58  0E7F               	movlw	127
  9662  004F5A  16DF               	andwf	indf2,f,c
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9666  004F5C  0E04               	movlw	4
  9667  004F5E  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9671  004F60  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9672  004F64  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9673  004F68  0E7F               	movlw	127
  9674  004F6A  16DF               	andwf	indf2,f,c
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9678  004F6C  0E00               	movlw	0
  9679  004F6E  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9683  004F70  0E00               	movlw	0
  9684  004F72  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9685  004F74  0E00               	movlw	0
  9686  004F76  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9690  004F78  0E00               	movlw	0
  9691  004F7A  0101               	movlb	1	; () banked
  9692  004F7C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9693                           
  9694                           ; BSR set to: 1
  9695                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9696  004F7E  0E00               	movlw	0
  9697  004F80  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9698  004F82  0E00               	movlw	0
  9699  004F84  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9700                           
  9701                           ; BSR set to: 1
  9702                           ;usb_device.c: 2517: USBCheckStdRequest();
  9703  004F86  ECA3  F01B         	call	_USBCheckStdRequest	;wreg free
  9704                           
  9705                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9706  004F8A  0E00               	movlw	0
  9707  004F8C  0100               	movlb	0	; () banked
  9708  004F8E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9709  004F90  0E03               	movlw	3
  9710  004F92  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9711  004F94  0E00               	movlw	0
  9712  004F96  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9713  004F98  0E00               	movlw	0
  9714  004F9A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9715  004F9C  0E00               	movlw	0
  9716  004F9E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9717  004FA0  0E00               	movlw	0
  9718  004FA2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9719  004FA4  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9720                           
  9721                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9722  004FA8  EC53  F019         	call	_USBCtrlEPServiceComplete	;wreg free
  9723  004FAC  0012               	return		;funcret
  9724  004FAE                     __end_of_USBCtrlTrfSetupHandler:
  9725                           	opt stack 0
  9726                           tosu	equ	0xFFF
  9727                           tosh	equ	0xFFE
  9728                           tosl	equ	0xFFD
  9729                           pclath	equ	0xFFA
  9730                           tblptru	equ	0xFF8
  9731                           tblptrh	equ	0xFF7
  9732                           tblptrl	equ	0xFF6
  9733                           tablat	equ	0xFF5
  9734                           prodh	equ	0xFF4
  9735                           prodl	equ	0xFF3
  9736                           intcon	equ	0xFF2
  9737                           intcon2	equ	0xFF1
  9738                           intcon3	equ	0xFF0
  9739                           postinc0	equ	0xFEE
  9740                           plusw0	equ	0xFEB
  9741                           wreg	equ	0xFE8
  9742                           postinc1	equ	0xFE6
  9743                           postdec1	equ	0xFE5
  9744                           fsr1h	equ	0xFE2
  9745                           fsr1l	equ	0xFE1
  9746                           indf2	equ	0xFDF
  9747                           postinc2	equ	0xFDE
  9748                           postdec2	equ	0xFDD
  9749                           plusw2	equ	0xFDB
  9750                           fsr2h	equ	0xFDA
  9751                           fsr2l	equ	0xFD9
  9752                           status	equ	0xFD8
  9753                           
  9754 ;; *************** function _USBCtrlEPServiceComplete *****************
  9755 ;; Defined at:
  9756 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;		None
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;		None
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  1    wreg      void 
  9763 ;; Registers used:
  9764 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9774 ;;Total ram usage:        0 bytes
  9775 ;; Hardware stack levels used:    1
  9776 ;; Hardware stack levels required when called:   13
  9777 ;; This function calls:
  9778 ;;		_USBCtrlEPAllowDataStage
  9779 ;;		_USBCtrlEPAllowStatusStage
  9780 ;; This function is called by:
  9781 ;;		_USBCtrlTrfSetupHandler
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text37
  9786  0032A6                     __ptext37:
  9787                           	opt stack 0
  9788  0032A6                     _USBCtrlEPServiceComplete:
  9789                           	opt stack 11
  9790                           
  9791                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9792                           
  9793                           ;incstack = 0
  9794  0032A6  9865               	bcf	3941,4,c	;volatile
  9795                           
  9796                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9797  0032A8  0100               	movlb	0	; () banked
  9798  0032AA  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9799  0032AC  D03B               	goto	l1684
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;usb_device.c: 1647: {
  9803                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9804  0032AE  0101               	movlb	1	; () banked
  9805  0032B0  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9806  0032B2  D00C               	goto	l1685
  9807                           
  9808                           ; BSR set to: 1
  9809                           ;usb_device.c: 1649: {
  9810                           ;usb_device.c: 1650: controlTransferState = 2;
  9811  0032B4  0E02               	movlw	2
  9812  0032B6  0100               	movlb	0	; () banked
  9813  0032B8  6FCA               	movwf	_controlTransferState& (0+255),b
  9814                           
  9815                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9816  0032BA  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9817  0032BC  B4D8               	btfsc	status,2,c
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;usb_device.c: 1662: {
  9821                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9822  0032BE  ECA6  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9823                           
  9824                           ;usb_device.c: 1664: }
  9825                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9826  0032C2  0E00               	movlw	0
  9827  0032C4  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9828                           
  9829                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9830  0032C6  0E00               	movlw	0
  9831  0032C8  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9832                           
  9833                           ;usb_device.c: 1670: }
  9834  0032CA  0012               	return	
  9835  0032CC                     l1685:
  9836                           
  9837                           ;usb_device.c: 1671: else
  9838                           ;usb_device.c: 1672: {
  9839                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9840  0032CC  0100               	movlb	0	; () banked
  9841  0032CE  EE20 F001          	lfsr	2,1
  9842  0032D2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9843  0032D4  26D9               	addwf	fsr2l,f,c
  9844  0032D6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9845  0032D8  22DA               	addwfc	fsr2h,f,c
  9846  0032DA  0E08               	movlw	8
  9847  0032DC  6EDF               	movwf	indf2,c
  9848                           
  9849                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9850  0032DE  EE20 F002          	lfsr	2,2
  9851  0032E2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9852  0032E4  26D9               	addwf	fsr2l,f,c
  9853  0032E6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9854  0032E8  22DA               	addwfc	fsr2h,f,c
  9855  0032EA  0E30               	movlw	48
  9856  0032EC  6EDE               	movwf	postinc2,c
  9857  0032EE  0E04               	movlw	4
  9858  0032F0  6EDD               	movwf	postdec2,c
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9862  0032F2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9863  0032F6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9864  0032FA  0E0C               	movlw	12
  9865  0032FC  6EDF               	movwf	indf2,c
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9869  0032FE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9870  003302  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9871  003306  0E00               	movlw	0
  9872  003308  8EDB               	bsf	plusw2,7,c
  9873                           
  9874                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9875  00330A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9876  00330E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9877  003312  0E04               	movlw	4
  9878  003314  6EDF               	movwf	indf2,c
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9882  003316  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9883  00331A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9884  00331E  0E00               	movlw	0
  9885  003320  8EDB               	bsf	plusw2,7,c
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;usb_device.c: 1683: }
  9889                           ;usb_device.c: 1684: }
  9890  003322  0012               	return	
  9891  003324                     l1684:
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;usb_device.c: 1685: else
  9895                           ;usb_device.c: 1686: {
  9896                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9897  003324  0104               	movlb	4	; () banked
  9898  003326  AF30               	btfss	48,7,b	;volatile
  9899  003328  D012               	goto	l1689
  9900                           
  9901                           ; BSR set to: 4
  9902                           ;usb_device.c: 1688: {
  9903                           ;usb_device.c: 1689: controlTransferState = 1;
  9904  00332A  0E01               	movlw	1
  9905  00332C  0100               	movlb	0	; () banked
  9906  00332E  6FCA               	movwf	_controlTransferState& (0+255),b
  9907                           
  9908                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9909  003330  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9910  003332  B4D8               	btfsc	status,2,c
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;usb_device.c: 1704: {
  9914                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9915  003334  ECA6  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9916                           
  9917                           ;usb_device.c: 1706: }
  9918                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9919  003338  0E00               	movlw	0
  9920  00333A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9921                           
  9922                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9923  00333C  0E00               	movlw	0
  9924  00333E  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9925                           
  9926                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9927  003340  0100               	movlb	0	; () banked
  9928  003342  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9929  003344  A4D8               	btfss	status,2,c
  9930  003346  0012               	return	
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;usb_device.c: 1731: {
  9934                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9935  003348  EC91  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9936                           
  9937                           ;usb_device.c: 1733: }
  9938                           ;usb_device.c: 1734: }
  9939  00334C  0012               	return	
  9940  00334E                     l1689:
  9941                           
  9942                           ;usb_device.c: 1735: else
  9943                           ;usb_device.c: 1736: {
  9944                           ;usb_device.c: 1747: controlTransferState = 2;
  9945  00334E  0E02               	movlw	2
  9946  003350  0100               	movlb	0	; () banked
  9947  003352  6FCA               	movwf	_controlTransferState& (0+255),b
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9951  003354  EE20 F001          	lfsr	2,1
  9952  003358  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9953  00335A  26D9               	addwf	fsr2l,f,c
  9954  00335C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9955  00335E  22DA               	addwfc	fsr2h,f,c
  9956  003360  0E08               	movlw	8
  9957  003362  6EDF               	movwf	indf2,c
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9961  003364  EE20 F002          	lfsr	2,2
  9962  003368  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9963  00336A  26D9               	addwf	fsr2l,f,c
  9964  00336C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9965  00336E  22DA               	addwfc	fsr2h,f,c
  9966  003370  0E30               	movlw	48
  9967  003372  6EDE               	movwf	postinc2,c
  9968  003374  0E04               	movlw	4
  9969  003376  6EDD               	movwf	postdec2,c
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9973  003378  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9974  00337C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9975  003380  0E04               	movlw	4
  9976  003382  6EDF               	movwf	indf2,c
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9980  003384  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9981  003388  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9982  00338C  0E00               	movlw	0
  9983  00338E  8EDB               	bsf	plusw2,7,c
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9987  003390  0E00               	movlw	0
  9988  003392  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9992  003394  0E00               	movlw	0
  9993  003396  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9997  003398  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9998  00339A  A4D8               	btfss	status,2,c
  9999  00339C  0012               	return	
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;usb_device.c: 1759: {
 10003                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
 10004  00339E  EC91  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10005  0033A2  0012               	return	
 10006  0033A4                     __end_of_USBCtrlEPServiceComplete:
 10007                           	opt stack 0
 10008                           tosu	equ	0xFFF
 10009                           tosh	equ	0xFFE
 10010                           tosl	equ	0xFFD
 10011                           pclath	equ	0xFFA
 10012                           tblptru	equ	0xFF8
 10013                           tblptrh	equ	0xFF7
 10014                           tblptrl	equ	0xFF6
 10015                           tablat	equ	0xFF5
 10016                           prodh	equ	0xFF4
 10017                           prodl	equ	0xFF3
 10018                           intcon	equ	0xFF2
 10019                           intcon2	equ	0xFF1
 10020                           intcon3	equ	0xFF0
 10021                           postinc0	equ	0xFEE
 10022                           plusw0	equ	0xFEB
 10023                           wreg	equ	0xFE8
 10024                           postinc1	equ	0xFE6
 10025                           postdec1	equ	0xFE5
 10026                           fsr1h	equ	0xFE2
 10027                           fsr1l	equ	0xFE1
 10028                           indf2	equ	0xFDF
 10029                           postinc2	equ	0xFDE
 10030                           postdec2	equ	0xFDD
 10031                           plusw2	equ	0xFDB
 10032                           fsr2h	equ	0xFDA
 10033                           fsr2l	equ	0xFD9
 10034                           status	equ	0xFD8
 10035                           
 10036 ;; *************** function _USBCtrlEPAllowDataStage *****************
 10037 ;; Defined at:
 10038 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;		None
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;		None
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      void 
 10045 ;; Registers used:
 10046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10056 ;;Total ram usage:        0 bytes
 10057 ;; Hardware stack levels used:    1
 10058 ;; Hardware stack levels required when called:   12
 10059 ;; This function calls:
 10060 ;;		_USBCtrlTrfTxService
 10061 ;; This function is called by:
 10062 ;;		_USBCtrlEPServiceComplete
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text38
 10067  00494C                     __ptext38:
 10068                           	opt stack 0
 10069  00494C                     _USBCtrlEPAllowDataStage:
 10070                           	opt stack 11
 10071                           
 10072                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
 10073                           
 10074                           ;incstack = 0
 10075  00494C  0E00               	movlw	0
 10076  00494E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
 10077                           
 10078                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
 10079  004950  0E00               	movlw	0
 10080  004952  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 10081                           
 10082                           ;usb_device.c: 1511: if(controlTransferState == 2)
 10083  004954  0E02               	movlw	2
 10084  004956  0100               	movlb	0	; () banked
 10085  004958  19CA               	xorwf	_controlTransferState& (0+255),w,b
 10086  00495A  A4D8               	btfss	status,2,c
 10087  00495C  D01F               	goto	l1673
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;usb_device.c: 1512: {
 10091                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
 10092  00495E  EE20 F001          	lfsr	2,1
 10093  004962  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10094  004964  26D9               	addwf	fsr2l,f,c
 10095  004966  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10096  004968  22DA               	addwfc	fsr2h,f,c
 10097  00496A  0E08               	movlw	8
 10098  00496C  6EDF               	movwf	indf2,c
 10099                           
 10100                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10101  00496E  EE20 F002          	lfsr	2,2
 10102  004972  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10103  004974  26D9               	addwf	fsr2l,f,c
 10104  004976  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10105  004978  22DA               	addwfc	fsr2h,f,c
 10106  00497A  0E38               	movlw	56
 10107  00497C  6EDE               	movwf	postinc2,c
 10108  00497E  0E04               	movlw	4
 10109  004980  6EDD               	movwf	postdec2,c
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10113  004982  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10114  004986  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10115  00498A  0E48               	movlw	72
 10116  00498C  6EDF               	movwf	indf2,c
 10117                           
 10118                           ; BSR set to: 0
 10119                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10120  00498E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10121  004992  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10122  004996  0E00               	movlw	0
 10123  004998  8EDB               	bsf	plusw2,7,c
 10124                           
 10125                           ;usb_device.c: 1518: }
 10126  00499A  0012               	return	
 10127  00499C                     l1673:
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;usb_device.c: 1519: else
 10131                           ;usb_device.c: 1520: {
 10132                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 10133                           
 10134                           ; BSR set to: 0
 10135  00499C  51B4               	movf	(_inPipes+4)& (0+255),w,b
 10136  00499E  0104               	movlb	4	; () banked
 10137  0049A0  5D36               	subwf	54,w,b	;volatile
 10138  0049A2  0100               	movlb	0	; () banked
 10139  0049A4  51B5               	movf	(_inPipes+5)& (0+255),w,b
 10140  0049A6  0104               	movlb	4	; () banked
 10141  0049A8  5937               	subwfb	55,w,b	;volatile
 10142  0049AA  B0D8               	btfsc	status,0,c
 10143  0049AC  D004               	goto	l1675
 10144                           
 10145                           ; BSR set to: 4
 10146                           ;usb_device.c: 1524: {
 10147                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
 10148  0049AE  C436 F0B4          	movff	1078,_inPipes+4	;volatile
 10149  0049B2  C437 F0B5          	movff	1079,_inPipes+5	;volatile
 10150  0049B6                     l1675:
 10151                           
 10152                           ; BSR set to: 4
 10153                           ;usb_device.c: 1526: }
 10154                           ;usb_device.c: 1527: USBCtrlTrfTxService();
 10155                           
 10156                           ; BSR set to: 4
 10157  0049B6  EC83  F01C         	call	_USBCtrlTrfTxService	;wreg free
 10158                           
 10159                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 10160  0049BA  0100               	movlb	0	; () banked
 10161  0049BC  EE20 F002          	lfsr	2,2
 10162  0049C0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 10163  0049C2  26D9               	addwf	fsr2l,f,c
 10164  0049C4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10165  0049C6  22DA               	addwfc	fsr2h,f,c
 10166  0049C8  0E38               	movlw	56
 10167  0049CA  6EDE               	movwf	postinc2,c
 10168  0049CC  0E04               	movlw	4
 10169  0049CE  6EDD               	movwf	postdec2,c
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10173  0049D0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 10174  0049D4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10175  0049D8  0E48               	movlw	72
 10176  0049DA  6EDF               	movwf	indf2,c
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10180  0049DC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 10181  0049E0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10182  0049E4  0E00               	movlw	0
 10183  0049E6  8EDB               	bsf	plusw2,7,c
 10184  0049E8  0012               	return	
 10185  0049EA                     __end_of_USBCtrlEPAllowDataStage:
 10186                           	opt stack 0
 10187                           tosu	equ	0xFFF
 10188                           tosh	equ	0xFFE
 10189                           tosl	equ	0xFFD
 10190                           pclath	equ	0xFFA
 10191                           tblptru	equ	0xFF8
 10192                           tblptrh	equ	0xFF7
 10193                           tblptrl	equ	0xFF6
 10194                           tablat	equ	0xFF5
 10195                           prodh	equ	0xFF4
 10196                           prodl	equ	0xFF3
 10197                           intcon	equ	0xFF2
 10198                           intcon2	equ	0xFF1
 10199                           intcon3	equ	0xFF0
 10200                           postinc0	equ	0xFEE
 10201                           plusw0	equ	0xFEB
 10202                           wreg	equ	0xFE8
 10203                           postinc1	equ	0xFE6
 10204                           postdec1	equ	0xFE5
 10205                           fsr1h	equ	0xFE2
 10206                           fsr1l	equ	0xFE1
 10207                           indf2	equ	0xFDF
 10208                           postinc2	equ	0xFDE
 10209                           postdec2	equ	0xFDD
 10210                           plusw2	equ	0xFDB
 10211                           fsr2h	equ	0xFDA
 10212                           fsr2l	equ	0xFD9
 10213                           status	equ	0xFD8
 10214                           
 10215 ;; *************** function _USBCheckStdRequest *****************
 10216 ;; Defined at:
 10217 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;		None
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;		None
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  1    wreg      void 
 10224 ;; Registers used:
 10225 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10235 ;;Total ram usage:        0 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; Hardware stack levels required when called:   16
 10238 ;; This function calls:
 10239 ;;		_USBStdFeatureReqHandler
 10240 ;;		_USBStdGetDscHandler
 10241 ;;		_USBStdGetStatusHandler
 10242 ;;		_USBStdSetCfgHandler
 10243 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10244 ;; This function is called by:
 10245 ;;		_USBCtrlTrfSetupHandler
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text39
 10250  003746                     __ptext39:
 10251                           	opt stack 0
 10252  003746                     _USBCheckStdRequest:
 10253                           	opt stack 8
 10254                           
 10255                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;incstack = 0
 10259  003746  0104               	movlb	4	; () banked
 10260  003748  3930               	swapf	48,w,b	;volatile
 10261  00374A  32E8               	rrcf	wreg,f,c
 10262  00374C  0B03               	andlw	3
 10263  00374E  0900               	iorlw	0
 10264  003750  A4D8               	btfss	status,2,c
 10265  003752  0012               	return	
 10266  003754  D048               	goto	l1808
 10267  003756                     l1809:
 10268                           
 10269                           ; BSR set to: 4
 10270                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 10271  003756  0100               	movlb	0	; () banked
 10272  003758  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
 10276  00375A  0E08               	movlw	8
 10277  00375C  6FCC               	movwf	_USBDeviceState& (0+255),b
 10278                           
 10279                           ;usb_device.c: 2713: break;
 10280  00375E  0012               	return	
 10281  003760                     
 10282                           ;usb_device.c: 2715: USBStdGetDscHandler();
 10283                           
 10284                           ; BSR set to: 0
 10285  003760  EC99  F017         	call	_USBStdGetDscHandler	;wreg free
 10286                           
 10287                           ;usb_device.c: 2716: break;
 10288  003764  0012               	return	
 10289  003766                     
 10290                           ;usb_device.c: 2718: USBStdSetCfgHandler();
 10291  003766  ECBD  F01A         	call	_USBStdSetCfgHandler	;wreg free
 10292                           
 10293                           ;usb_device.c: 2719: break;
 10294  00376A  0012               	return	
 10295  00376C                     
 10296                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10297  00376C  0ED5               	movlw	low _USBActiveConfiguration
 10298  00376E  0100               	movlb	0	; () banked
 10299  003770  6FB0               	movwf	_inPipes& (0+255),b
 10300  003772  0E00               	movlw	high _USBActiveConfiguration
 10301  003774  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10305  003776  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 10309  003778  0E01               	movlw	1
 10310  00377A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 10314  00377C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10315                           
 10316                           ;usb_device.c: 2725: break;
 10317  00377E  0012               	return	
 10318  003780                     
 10319                           ;usb_device.c: 2727: USBStdGetStatusHandler();
 10320                           
 10321                           ; BSR set to: 0
 10322  003780  ECAA  F021         	call	_USBStdGetStatusHandler	;wreg free
 10323                           
 10324                           ;usb_device.c: 2728: break;
 10325  003784  0012               	return	
 10326  003786                     
 10327                           ;usb_device.c: 2730: case 3:
 10328                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
 10329  003786  EC62  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 10330                           
 10331                           ;usb_device.c: 2732: break;
 10332  00378A  0012               	return	
 10333  00378C                     
 10334                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10335  00378C  0104               	movlb	4	; () banked
 10336  00378E  5134               	movf	52,w,b	;volatile
 10337  003790  0D01               	mullw	1
 10338  003792  0EF1               	movlw	low _USBAlternateInterface
 10339  003794  24F3               	addwf	prodl,w,c
 10340  003796  0100               	movlb	0	; () banked
 10341  003798  6FB0               	movwf	_inPipes& (0+255),b
 10342  00379A  0E02               	movlw	high _USBAlternateInterface
 10343  00379C  20F4               	addwfc	prodh,w,c
 10344  00379E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10348  0037A0  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
 10352  0037A2  0E01               	movlw	1
 10353  0037A4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
 10357  0037A6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10358                           
 10359                           ;usb_device.c: 2738: break;
 10360  0037A8  0012               	return	
 10361  0037AA                     l1818:
 10362                           
 10363                           ; BSR set to: 4
 10364                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
 10365  0037AA  0100               	movlb	0	; () banked
 10366  0037AC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10370  0037AE  0104               	movlb	4	; () banked
 10371  0037B0  5134               	movf	52,w,b	;volatile
 10372  0037B2  0D01               	mullw	1
 10373  0037B4  0EF1               	movlw	low _USBAlternateInterface
 10374  0037B6  24F3               	addwf	prodl,w,c
 10375  0037B8  6ED9               	movwf	fsr2l,c
 10376  0037BA  0E02               	movlw	high _USBAlternateInterface
 10377  0037BC  20F4               	addwfc	prodh,w,c
 10378  0037BE  6EDA               	movwf	fsr2h,c
 10379  0037C0  C432 FFDF          	movff	1074,indf2	;volatile
 10380                           
 10381                           ;usb_device.c: 2742: break;
 10382  0037C4  0012               	return	
 10383  0037C6                     
 10384                           ; BSR set to: 4
 10385                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10386                           
 10387                           ; BSR set to: 4
 10388  0037C6  0E00               	movlw	0
 10389  0037C8  0100               	movlb	0	; () banked
 10390  0037CA  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10391  0037CC  0E02               	movlw	2
 10392  0037CE  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10393  0037D0  0E00               	movlw	0
 10394  0037D2  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10395  0037D4  0E00               	movlw	0
 10396  0037D6  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10397  0037D8  0E00               	movlw	0
 10398  0037DA  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10399  0037DC  0E00               	movlw	0
 10400  0037DE  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10401  0037E0  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10402                           
 10403                           ;usb_device.c: 2749: }
 10404                           
 10405                           ;usb_device.c: 2748: break;
 10406                           
 10407                           ;usb_device.c: 2747: default:
 10408                           
 10409                           ;usb_device.c: 2746: case 12:
 10410                           
 10411                           ;usb_device.c: 2745: break;
 10412  0037E4  0012               	return	
 10413  0037E6                     l1808:
 10414  0037E6  0104               	movlb	4	; () banked
 10415  0037E8  5131               	movf	49,w,b	;volatile
 10416                           
 10417                           ; Switch size 1, requested type "space"
 10418                           ; Number of cases is 11, Range of values is 0 to 12
 10419                           ; switch strategies available:
 10420                           ; Name         Instructions Cycles
 10421                           ; simple_byte           34    18 (average)
 10422                           ;	Chosen strategy is simple_byte
 10423  0037EA  0A00               	xorlw	0	; case 0
 10424  0037EC  B4D8               	btfsc	status,2,c
 10425  0037EE  D7C8               	goto	l1814
 10426  0037F0  0A01               	xorlw	1	; case 1
 10427  0037F2  B4D8               	btfsc	status,2,c
 10428  0037F4  D7C8               	goto	l1815
 10429  0037F6  0A02               	xorlw	2	; case 3
 10430  0037F8  B4D8               	btfsc	status,2,c
 10431  0037FA  D7C5               	goto	l1815
 10432  0037FC  0A06               	xorlw	6	; case 5
 10433  0037FE  B4D8               	btfsc	status,2,c
 10434  003800  D7AA               	goto	l1809
 10435  003802  0A03               	xorlw	3	; case 6
 10436  003804  B4D8               	btfsc	status,2,c
 10437  003806  D7AC               	goto	l1811
 10438  003808  0A01               	xorlw	1	; case 7
 10439  00380A  B4D8               	btfsc	status,2,c
 10440  00380C  D7DC               	goto	l1819
 10441  00380E  0A0F               	xorlw	15	; case 8
 10442  003810  B4D8               	btfsc	status,2,c
 10443  003812  D7AC               	goto	l1813
 10444  003814  0A01               	xorlw	1	; case 9
 10445  003816  B4D8               	btfsc	status,2,c
 10446  003818  D7A6               	goto	l1812
 10447  00381A  0A03               	xorlw	3	; case 10
 10448  00381C  B4D8               	btfsc	status,2,c
 10449  00381E  D7B6               	goto	l1817
 10450  003820  0A01               	xorlw	1	; case 11
 10451  003822  B4D8               	btfsc	status,2,c
 10452  003824  D7C2               	goto	l1818
 10453  003826  0A07               	xorlw	7	; case 12
 10454  003828  0012               	return	
 10455  00382A                     __end_of_USBCheckStdRequest:
 10456                           	opt stack 0
 10457                           tosu	equ	0xFFF
 10458                           tosh	equ	0xFFE
 10459                           tosl	equ	0xFFD
 10460                           pclath	equ	0xFFA
 10461                           tblptru	equ	0xFF8
 10462                           tblptrh	equ	0xFF7
 10463                           tblptrl	equ	0xFF6
 10464                           tablat	equ	0xFF5
 10465                           prodh	equ	0xFF4
 10466                           prodl	equ	0xFF3
 10467                           intcon	equ	0xFF2
 10468                           intcon2	equ	0xFF1
 10469                           intcon3	equ	0xFF0
 10470                           postinc0	equ	0xFEE
 10471                           plusw0	equ	0xFEB
 10472                           wreg	equ	0xFE8
 10473                           postinc1	equ	0xFE6
 10474                           postdec1	equ	0xFE5
 10475                           fsr1h	equ	0xFE2
 10476                           fsr1l	equ	0xFE1
 10477                           indf2	equ	0xFDF
 10478                           postinc2	equ	0xFDE
 10479                           postdec2	equ	0xFDD
 10480                           plusw2	equ	0xFDB
 10481                           fsr2h	equ	0xFDA
 10482                           fsr2l	equ	0xFD9
 10483                           status	equ	0xFD8
 10484                           
 10485 ;; *************** function _USBStdSetCfgHandler *****************
 10486 ;; Defined at:
 10487 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;		None
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;  i               1   49[BANK0 ] unsigned char 
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  1    wreg      void 
 10494 ;; Registers used:
 10495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10504 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10505 ;;Total ram usage:        1 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:   15
 10508 ;; This function calls:
 10509 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10510 ;;		_memset
 10511 ;; This function is called by:
 10512 ;;		_USBCheckStdRequest
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text40
 10517  00357A                     __ptext40:
 10518                           	opt stack 0
 10519  00357A                     _USBStdSetCfgHandler:
 10520                           	opt stack 8
 10521                           
 10522                           ;usb_device.c: 1988: uint8_t i;
 10523                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10524                           
 10525                           ;incstack = 0
 10526  00357A  0100               	movlb	0	; () banked
 10527  00357C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10531  00357E  0E27               	movlw	39
 10532  003580  6F7D               	movwf	memset@p1& (0+255),b
 10533  003582  0E0F               	movlw	15
 10534  003584  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10535  003586  0E00               	movlw	0
 10536  003588  6F80               	movwf	(memset@c+1)& (0+255),b
 10537  00358A  0E00               	movlw	0
 10538  00358C  6F7F               	movwf	memset@c& (0+255),b
 10539  00358E  0E00               	movlw	0
 10540  003590  6F82               	movwf	(memset@n+1)& (0+255),b
 10541  003592  0E02               	movlw	2
 10542  003594  6F81               	movwf	memset@n& (0+255),b
 10543  003596  EC91  F031         	call	_memset	;wreg free
 10544                           
 10545                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10546  00359A  0E00               	movlw	0
 10547  00359C  0100               	movlb	0	; () banked
 10548  00359E  6F7D               	movwf	memset@p1& (0+255),b
 10549  0035A0  0E04               	movlw	4
 10550  0035A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10551  0035A4  0E00               	movlw	0
 10552  0035A6  6F80               	movwf	(memset@c+1)& (0+255),b
 10553  0035A8  0E00               	movlw	0
 10554  0035AA  6F7F               	movwf	memset@c& (0+255),b
 10555  0035AC  0E00               	movlw	0
 10556  0035AE  6F82               	movwf	(memset@n+1)& (0+255),b
 10557  0035B0  0E30               	movlw	48
 10558  0035B2  6F81               	movwf	memset@n& (0+255),b
 10559  0035B4  EC91  F031         	call	_memset	;wreg free
 10560                           
 10561                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10562  0035B8  8C65               	bsf	3941,6,c	;volatile
 10563                           
 10564                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10565  0035BA  0E00               	movlw	0
 10566  0035BC  0100               	movlb	0	; () banked
 10567  0035BE  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10568  0035C0                     l12937:
 10569                           
 10570                           ; BSR set to: 0
 10571  0035C0  0E02               	movlw	2
 10572  0035C2  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10573  0035C4  D001               	goto	l1725
 10574  0035C6  D016               	goto	u11700
 10575  0035C8                     l1725:
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;usb_device.c: 2006: {
 10579                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10580                           
 10581                           ; BSR set to: 0
 10582  0035C8  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10583  0035CA  0D01               	mullw	1
 10584  0035CC  0ED1               	movlw	low _ep_data_in
 10585  0035CE  24F3               	addwf	prodl,w,c
 10586  0035D0  6ED9               	movwf	fsr2l,c
 10587  0035D2  0E02               	movlw	high _ep_data_in
 10588  0035D4  20F4               	addwfc	prodh,w,c
 10589  0035D6  6EDA               	movwf	fsr2h,c
 10590  0035D8  0E00               	movlw	0
 10591  0035DA  6EDF               	movwf	indf2,c
 10592                           
 10593                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10594  0035DC  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10595  0035DE  0D01               	mullw	1
 10596  0035E0  0ECE               	movlw	low _ep_data_out
 10597  0035E2  24F3               	addwf	prodl,w,c
 10598  0035E4  6ED9               	movwf	fsr2l,c
 10599  0035E6  0E02               	movlw	high _ep_data_out
 10600  0035E8  20F4               	addwfc	prodh,w,c
 10601  0035EA  6EDA               	movwf	fsr2h,c
 10602  0035EC  0E00               	movlw	0
 10603  0035EE  6EDF               	movwf	indf2,c
 10604                           
 10605                           ; BSR set to: 0
 10606  0035F0  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10607  0035F2  D7E6               	goto	l12937
 10608  0035F4                     u11700:
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;usb_device.c: 2009: }
 10612                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10613                           
 10614                           ; BSR set to: 0
 10615  0035F4  0EF1               	movlw	low _USBAlternateInterface
 10616  0035F6  6F7D               	movwf	memset@p1& (0+255),b
 10617  0035F8  0E02               	movlw	high _USBAlternateInterface
 10618  0035FA  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10619  0035FC  0E00               	movlw	0
 10620  0035FE  6F80               	movwf	(memset@c+1)& (0+255),b
 10621  003600  0E00               	movlw	0
 10622  003602  6F7F               	movwf	memset@c& (0+255),b
 10623  003604  0E00               	movlw	0
 10624  003606  6F82               	movwf	(memset@n+1)& (0+255),b
 10625  003608  0E02               	movlw	2
 10626  00360A  6F81               	movwf	memset@n& (0+255),b
 10627  00360C  EC91  F031         	call	_memset	;wreg free
 10628                           
 10629                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10630  003610  9C65               	bcf	3941,6,c	;volatile
 10631                           
 10632                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10633  003612  0E08               	movlw	8
 10634  003614  0100               	movlb	0	; () banked
 10635  003616  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10636  003618  0E04               	movlw	4
 10637  00361A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10641  00361C  0E00               	movlw	0
 10642  00361E  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10643  003620  0E04               	movlw	4
 10644  003622  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10648  003624  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10649  003628  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10650                           
 10651                           ; BSR set to: 0
 10652                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10653  00362C  C432 F0D5          	movff	1074,_USBActiveConfiguration	;volatile
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10657  003630  51D5               	movf	_USBActiveConfiguration& (0+255),w,b
 10658  003632  A4D8               	btfss	status,2,c
 10659  003634  D003               	goto	l1727
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;usb_device.c: 2028: {
 10663                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10664  003636  0E10               	movlw	16
 10665  003638  6FCC               	movwf	_USBDeviceState& (0+255),b
 10666                           
 10667                           ;usb_device.c: 2031: }
 10668  00363A  0012               	return	
 10669  00363C                     l1727:
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;usb_device.c: 2032: else
 10673                           ;usb_device.c: 2033: {
 10674                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10675                           
 10676                           ; BSR set to: 0
 10677  00363C  0E00               	movlw	0
 10678  00363E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10679  003640  0E01               	movlw	1
 10680  003642  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10681  003644  0ED5               	movlw	low _USBActiveConfiguration
 10682  003646  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10683  003648  0E00               	movlw	high _USBActiveConfiguration
 10684  00364A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10685  00364C  0E00               	movlw	0
 10686  00364E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10687  003650  0E01               	movlw	1
 10688  003652  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10689  003654  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10690                           
 10691                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10692  003658  0E20               	movlw	32
 10693  00365A  0100               	movlb	0	; () banked
 10694  00365C  6FCC               	movwf	_USBDeviceState& (0+255),b
 10695  00365E  0012               	return	
 10696  003660                     __end_of_USBStdSetCfgHandler:
 10697                           	opt stack 0
 10698                           tosu	equ	0xFFF
 10699                           tosh	equ	0xFFE
 10700                           tosl	equ	0xFFD
 10701                           pclath	equ	0xFFA
 10702                           tblptru	equ	0xFF8
 10703                           tblptrh	equ	0xFF7
 10704                           tblptrl	equ	0xFF6
 10705                           tablat	equ	0xFF5
 10706                           prodh	equ	0xFF4
 10707                           prodl	equ	0xFF3
 10708                           intcon	equ	0xFF2
 10709                           intcon2	equ	0xFF1
 10710                           intcon3	equ	0xFF0
 10711                           postinc0	equ	0xFEE
 10712                           plusw0	equ	0xFEB
 10713                           wreg	equ	0xFE8
 10714                           postinc1	equ	0xFE6
 10715                           postdec1	equ	0xFE5
 10716                           fsr1h	equ	0xFE2
 10717                           fsr1l	equ	0xFE1
 10718                           indf2	equ	0xFDF
 10719                           postinc2	equ	0xFDE
 10720                           postdec2	equ	0xFDD
 10721                           plusw2	equ	0xFDB
 10722                           fsr2h	equ	0xFDA
 10723                           fsr2l	equ	0xFD9
 10724                           status	equ	0xFD8
 10725                           
 10726 ;; *************** function _USBStdGetStatusHandler *****************
 10727 ;; Defined at:
 10728 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;		None
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10733 ;;		 -> NULL(0), BDT(48), 
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  1    wreg      void 
 10736 ;; Registers used:
 10737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10747 ;;Total ram usage:        3 bytes
 10748 ;; Hardware stack levels used:    1
 10749 ;; Hardware stack levels required when called:   11
 10750 ;; This function calls:
 10751 ;;		Nothing
 10752 ;; This function is called by:
 10753 ;;		_USBCheckStdRequest
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text41
 10758  004354                     __ptext41:
 10759                           	opt stack 0
 10760  004354                     _USBStdGetStatusHandler:
 10761                           	opt stack 12
 10762                           
 10763                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;incstack = 0
 10767  004354  0E00               	movlw	0
 10768  004356  0104               	movlb	4	; () banked
 10769  004358  6F38               	movwf	56,b	;volatile
 10770                           
 10771                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10772  00435A  0E00               	movlw	0
 10773  00435C  6F39               	movwf	57,b	;volatile
 10774                           
 10775                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10776  00435E  D03D               	goto	l1746
 10777  004360                     l1747:
 10778                           
 10779                           ; BSR set to: 4
 10780                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10781  004360  0100               	movlb	0	; () banked
 10782  004362  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10783                           
 10784                           ;usb_device.c: 2163: }
 10785                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10786                           
 10787                           ; BSR set to: 4
 10788                           
 10789                           ; BSR set to: 0
 10790                           ;usb_device.c: 2161: {
 10791                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10792                           
 10793                           ;usb_device.c: 2160: if(0 == 1)
 10794  004364  0101               	movlb	1	; () banked
 10795  004366  05E3               	decf	_RemoteWakeup& (0+255),w,b
 10796  004368  A4D8               	btfss	status,2,c
 10797  00436A  D042               	goto	l1750
 10798                           
 10799                           ; BSR set to: 1
 10800                           ;usb_device.c: 2166: {
 10801                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10802  00436C  0104               	movlb	4	; () banked
 10803  00436E  8338               	bsf	56,1,b	;volatile
 10804                           
 10805                           ; BSR set to: 4
 10806                           ;usb_device.c: 2168: }
 10807                           ;usb_device.c: 2169: break;
 10808  004370  D03F               	goto	l1750
 10809  004372                     l1751:
 10810                           
 10811                           ; BSR set to: 4
 10812                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10813  004372  0100               	movlb	0	; () banked
 10814  004374  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10815                           
 10816                           ;usb_device.c: 2172: break;
 10817  004376  D03C               	goto	l1750
 10818  004378                     l1752:
 10819                           
 10820                           ; BSR set to: 4
 10821                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10822  004378  0100               	movlb	0	; () banked
 10823  00437A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10824                           
 10825                           ;usb_device.c: 2178: {
 10826                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10827                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10828  00437C  0104               	movlb	4	; () banked
 10829  00437E  BF34               	btfsc	52,7,b	;volatile
 10830  004380  D00B               	goto	l1753
 10831                           
 10832                           ; BSR set to: 4
 10833                           ;usb_device.c: 2182: {
 10834                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10835  004382  5134               	movf	52,w,b	;volatile
 10836  004384  0B0F               	andlw	15
 10837  004386  0100               	movlb	0	; () banked
 10838  004388  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10839  00438A  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10840  00438C  0D02               	mullw	2
 10841  00438E  0E06               	movlw	low _pBDTEntryOut
 10842  004390  24F3               	addwf	prodl,w,c
 10843  004392  6ED9               	movwf	fsr2l,c
 10844  004394  0E03               	movlw	high _pBDTEntryOut
 10845  004396  D00B               	goto	L4
 10846  004398                     l1753:
 10847                           
 10848                           ;usb_device.c: 2185: else
 10849                           ;usb_device.c: 2186: {
 10850                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10851                           
 10852                           ; BSR set to: 0
 10853  004398  0104               	movlb	4	; () banked
 10854  00439A  5134               	movf	52,w,b	;volatile
 10855  00439C  0B0F               	andlw	15
 10856  00439E  0100               	movlb	0	; () banked
 10857  0043A0  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10858  0043A2  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10859  0043A4  0D02               	mullw	2
 10860  0043A6  0EB6               	movlw	low _pBDTEntryIn
 10861  0043A8  24F3               	addwf	prodl,w,c
 10862  0043AA  6ED9               	movwf	fsr2l,c
 10863  0043AC  0E00               	movlw	high _pBDTEntryIn
 10864  0043AE                     L4:
 10865  0043AE  20F4               	addwfc	prodh,w,c
 10866  0043B0  6EDA               	movwf	fsr2h,c
 10867  0043B2  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10868  0043B6  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;usb_device.c: 2188: }
 10872                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10873                           
 10874                           ; BSR set to: 0
 10875  0043BA  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10876  0043BE  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10877  0043C2  AEDF               	btfss	indf2,7,c
 10878  0043C4  D015               	goto	l1750
 10879                           
 10880                           ; BSR set to: 0
 10881  0043C6  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10882  0043CA  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10883  0043CE  A4DF               	btfss	indf2,2,c
 10884  0043D0  D00F               	goto	l1750
 10885                           
 10886                           ; BSR set to: 0
 10887                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10888  0043D2  0E01               	movlw	1
 10889  0043D4  0104               	movlb	4	; () banked
 10890  0043D6  6F38               	movwf	56,b	;volatile
 10891                           
 10892                           ; BSR set to: 4
 10893                           ;usb_device.c: 2193: }
 10894                           ;usb_device.c: 2194: }
 10895                           
 10896                           ; BSR set to: 4
 10897                           ;usb_device.c: 2192: break;
 10898  0043D8  D00B               	goto	l1750
 10899  0043DA                     l1746:
 10900                           
 10901                           ; BSR set to: 4
 10902                           
 10903                           ; BSR set to: 4
 10904  0043DA  5130               	movf	48,w,b	;volatile
 10905  0043DC  0B1F               	andlw	31
 10906                           
 10907                           ; Switch size 1, requested type "space"
 10908                           ; Number of cases is 3, Range of values is 0 to 2
 10909                           ; switch strategies available:
 10910                           ; Name         Instructions Cycles
 10911                           ; simple_byte           10     6 (average)
 10912                           ;	Chosen strategy is simple_byte
 10913  0043DE  0A00               	xorlw	0	; case 0
 10914  0043E0  B4D8               	btfsc	status,2,c
 10915  0043E2  D7BE               	goto	l1747
 10916  0043E4  0A01               	xorlw	1	; case 1
 10917  0043E6  B4D8               	btfsc	status,2,c
 10918  0043E8  D7C4               	goto	l1751
 10919  0043EA  0A03               	xorlw	3	; case 2
 10920  0043EC  B4D8               	btfsc	status,2,c
 10921  0043EE  D7C4               	goto	l1752
 10922  0043F0                     l1750:
 10923                           
 10924                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10925  0043F0  0100               	movlb	0	; () banked
 10926  0043F2  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10927  0043F4  0012               	return	
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;usb_device.c: 2197: {
 10931                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10932  0043F6  0E38               	movlw	56
 10933  0043F8  6FB0               	movwf	_inPipes& (0+255),b
 10934  0043FA  0E04               	movlw	4
 10935  0043FC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10939  0043FE  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10943  004400  0E02               	movlw	2
 10944  004402  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10945  004404  0012               	return	
 10946  004406                     __end_of_USBStdGetStatusHandler:
 10947                           	opt stack 0
 10948                           tosu	equ	0xFFF
 10949                           tosh	equ	0xFFE
 10950                           tosl	equ	0xFFD
 10951                           pclath	equ	0xFFA
 10952                           tblptru	equ	0xFF8
 10953                           tblptrh	equ	0xFF7
 10954                           tblptrl	equ	0xFF6
 10955                           tablat	equ	0xFF5
 10956                           prodh	equ	0xFF4
 10957                           prodl	equ	0xFF3
 10958                           intcon	equ	0xFF2
 10959                           intcon2	equ	0xFF1
 10960                           intcon3	equ	0xFF0
 10961                           postinc0	equ	0xFEE
 10962                           plusw0	equ	0xFEB
 10963                           wreg	equ	0xFE8
 10964                           postinc1	equ	0xFE6
 10965                           postdec1	equ	0xFE5
 10966                           fsr1h	equ	0xFE2
 10967                           fsr1l	equ	0xFE1
 10968                           indf2	equ	0xFDF
 10969                           postinc2	equ	0xFDE
 10970                           postdec2	equ	0xFDD
 10971                           plusw2	equ	0xFDB
 10972                           fsr2h	equ	0xFDA
 10973                           fsr2l	equ	0xFD9
 10974                           status	equ	0xFD8
 10975                           
 10976 ;; *************** function _USBStdGetDscHandler *****************
 10977 ;; Defined at:
 10978 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;		None
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;		None
 10983 ;; Return value:  Size  Location     Type
 10984 ;;                  1    wreg      void 
 10985 ;; Registers used:
 10986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10987 ;; Tracked objects:
 10988 ;;		On entry : 0/0
 10989 ;;		On exit  : 0/0
 10990 ;;		Unchanged: 0/0
 10991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10995 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10996 ;;Total ram usage:        2 bytes
 10997 ;; Hardware stack levels used:    1
 10998 ;; Hardware stack levels required when called:   11
 10999 ;; This function calls:
 11000 ;;		Nothing
 11001 ;; This function is called by:
 11002 ;;		_USBCheckStdRequest
 11003 ;; This function uses a non-reentrant model
 11004 ;;
 11005                           
 11006                           	psect	text42
 11007  002F32                     __ptext42:
 11008                           	opt stack 0
 11009  002F32                     _USBStdGetDscHandler:
 11010                           	opt stack 12
 11011                           
 11012                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;incstack = 0
 11016  002F32  0E80               	movlw	128
 11017  002F34  0104               	movlb	4	; () banked
 11018  002F36  1930               	xorwf	48,w,b	;volatile
 11019  002F38  A4D8               	btfss	status,2,c
 11020  002F3A  0012               	return	
 11021                           
 11022                           ; BSR set to: 4
 11023                           ;usb_device.c: 2064: {
 11024                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11025  002F3C  0EC0               	movlw	192
 11026  002F3E  0100               	movlb	0	; () banked
 11027  002F40  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11028                           
 11029                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 11030  002F42  D082               	goto	l1733
 11031  002F44                     
 11032                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 11033                           
 11034                           ; BSR set to: 0
 11035  002F44  0E49               	movlw	low _device_dsc
 11036  002F46  0100               	movlb	0	; () banked
 11037  002F48  6FB0               	movwf	_inPipes& (0+255),b
 11038  002F4A  0EFE               	movlw	high _device_dsc
 11039  002F4C  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 11043  002F4E  0E00               	movlw	0
 11044  002F50  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11045  002F52  0E12               	movlw	18
 11046  002F54  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11047                           
 11048                           ;usb_device.c: 2076: break;
 11049  002F56  0012               	return	
 11050  002F58                     
 11051                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 11052                           
 11053                           ; BSR set to: 0
 11054  002F58  0104               	movlb	4	; () banked
 11055  002F5A  5132               	movf	50,w,b	;volatile
 11056  002F5C  A4D8               	btfss	status,2,c
 11057  002F5E  D040               	goto	l1737
 11058                           
 11059                           ; BSR set to: 4
 11060                           ;usb_device.c: 2082: {
 11061                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11062  002F60  5132               	movf	50,w,b	;volatile
 11063  002F62  0D02               	mullw	2
 11064  002F64  0E2E               	movlw	low _USB_CD_Ptr
 11065  002F66  24F3               	addwf	prodl,w,c
 11066  002F68  6EF6               	movwf	tblptrl,c
 11067  002F6A  0EFC               	movlw	high _USB_CD_Ptr
 11068  002F6C  20F4               	addwfc	prodh,w,c
 11069  002F6E  6EF7               	movwf	tblptrh,c
 11070  002F70                     	if	0	;There are less than 3 active tblptr bytes
 11071  002F70                     	endif
 11072  002F70  0009               	tblrd		*+
 11073  002F72  CFF5 F0B0          	movff	tablat,_inPipes
 11074  002F76  000A               	tblrd		*-
 11075  002F78  CFF5 F0B1          	movff	tablat,_inPipes+1
 11076                           
 11077                           ; BSR set to: 4
 11078                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11079  002F7C  0E02               	movlw	2
 11080  002F7E  0100               	movlb	0	; () banked
 11081  002F80  25B0               	addwf	_inPipes& (0+255),w,b
 11082  002F82  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 11083  002F84  0E00               	movlw	0
 11084  002F86  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 11085  002F88  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 11086  002F8A  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 11087  002F8E  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 11088  002F92  6AF8               	clrf	tblptru,c
 11089  002F94  0E0E               	movlw	(high __ramtop+-1)
 11090  002F96  64F7               	cpfsgt	tblptrh,c
 11091  002F98  D003               	bra	u11747
 11092  002F9A  0008               	tblrd		*
 11093  002F9C  50F5               	movf	tablat,w,c
 11094  002F9E  D005               	bra	u11740
 11095  002FA0                     u11747:
 11096  002FA0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11097  002FA4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11098  002FA8  50EF               	movf	indf0,w,c
 11099  002FAA                     u11740:
 11100  002FAA  0100               	movlb	0	; () banked
 11101  002FAC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11105  002FAE  0E03               	movlw	3
 11106  002FB0  25B0               	addwf	_inPipes& (0+255),w,b
 11107  002FB2  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 11108  002FB4  0E00               	movlw	0
 11109  002FB6  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 11110  002FB8  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 11111  002FBA  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 11112  002FBE  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 11113  002FC2  6AF8               	clrf	tblptru,c
 11114  002FC4  0E0E               	movlw	(high __ramtop+-1)
 11115  002FC6  64F7               	cpfsgt	tblptrh,c
 11116  002FC8  D003               	bra	u11757
 11117  002FCA  0008               	tblrd		*
 11118  002FCC  50F5               	movf	tablat,w,c
 11119  002FCE  D005               	bra	u11750
 11120  002FD0                     u11757:
 11121  002FD0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11122  002FD4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11123  002FD8  50EF               	movf	indf0,w,c
 11124  002FDA                     u11750:
 11125  002FDA  0100               	movlb	0	; () banked
 11126  002FDC  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11127                           
 11128                           ;usb_device.c: 2094: }
 11129  002FDE  0012               	return	
 11130  002FE0                     l1737:
 11131                           
 11132                           ;usb_device.c: 2095: else
 11133                           ;usb_device.c: 2096: {
 11134                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 11135                           
 11136                           ; BSR set to: 0
 11137  002FE0  0E00               	movlw	0
 11138  002FE2  0100               	movlb	0	; () banked
 11139  002FE4  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;usb_device.c: 2098: }
 11143                           ;usb_device.c: 2099: break;
 11144  002FE6  0012               	return	
 11145  002FE8                     
 11146                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 11147                           
 11148                           ; BSR set to: 0
 11149  002FE8  0E03               	movlw	3
 11150  002FEA  0104               	movlb	4	; () banked
 11151  002FEC  6132               	cpfslt	50,b	;volatile
 11152  002FEE  D024               	goto	l1740
 11153                           
 11154                           ; BSR set to: 4
 11155                           ;usb_device.c: 2105: {
 11156                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11157  002FF0  5132               	movf	50,w,b	;volatile
 11158  002FF2  0D02               	mullw	2
 11159  002FF4  0E1E               	movlw	low _USB_SD_Ptr
 11160  002FF6  24F3               	addwf	prodl,w,c
 11161  002FF8  6EF6               	movwf	tblptrl,c
 11162  002FFA  0EFC               	movlw	high _USB_SD_Ptr
 11163  002FFC  20F4               	addwfc	prodh,w,c
 11164  002FFE  6EF7               	movwf	tblptrh,c
 11165  003000                     	if	0	;There are less than 3 active tblptr bytes
 11166  003000                     	endif
 11167  003000  0009               	tblrd		*+
 11168  003002  CFF5 F0B0          	movff	tablat,_inPipes
 11169  003006  000A               	tblrd		*-
 11170  003008  CFF5 F0B1          	movff	tablat,_inPipes+1
 11171                           
 11172                           ; BSR set to: 4
 11173                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11174  00300C  C0B0  FFF6         	movff	_inPipes,tblptrl
 11175  003010  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 11176  003014  6AF8               	clrf	tblptru,c
 11177  003016  0E0E               	movlw	(high __ramtop+-1)
 11178  003018  64F7               	cpfsgt	tblptrh,c
 11179  00301A  D003               	bra	u11777
 11180  00301C  0008               	tblrd		*
 11181  00301E  50F5               	movf	tablat,w,c
 11182  003020  D005               	bra	u11770
 11183  003022                     u11777:
 11184  003022  CFF6 FFE9          	movff	tblptrl,fsr0l
 11185  003026  CFF7 FFEA          	movff	tblptrh,fsr0h
 11186  00302A  50EF               	movf	indf0,w,c
 11187  00302C                     u11770:
 11188  00302C  0100               	movlb	0	; () banked
 11189  00302E  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 11190  003030  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 11191  003032  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11192  003034  6BB5               	clrf	(_inPipes+5)& (0+255),b
 11193                           
 11194                           ;usb_device.c: 2110: }
 11195  003036  0012               	return	
 11196  003038                     l1740:
 11197                           
 11198                           ;usb_device.c: 2120: else
 11199                           ;usb_device.c: 2121: {
 11200                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 11201                           
 11202                           ; BSR set to: 0
 11203  003038  0E00               	movlw	0
 11204  00303A  0100               	movlb	0	; () banked
 11205  00303C  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;usb_device.c: 2123: }
 11209                           ;usb_device.c: 2124: break;
 11210  00303E  0012               	return	
 11211  003040                     
 11212                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 11213                           
 11214                           ; BSR set to: 0
 11215  003040  0E00               	movlw	0
 11216  003042  0100               	movlb	0	; () banked
 11217  003044  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;usb_device.c: 2128: }
 11221                           
 11222                           ;usb_device.c: 2127: break;
 11223  003046  0012               	return	
 11224  003048                     l1733:
 11225                           
 11226                           ; BSR set to: 0
 11227                           
 11228                           ; BSR set to: 0
 11229  003048  0104               	movlb	4	; () banked
 11230  00304A  5133               	movf	51,w,b	;volatile
 11231                           
 11232                           ; Switch size 1, requested type "space"
 11233                           ; Number of cases is 3, Range of values is 1 to 3
 11234                           ; switch strategies available:
 11235                           ; Name         Instructions Cycles
 11236                           ; simple_byte           10     6 (average)
 11237                           ;	Chosen strategy is simple_byte
 11238  00304C  0A01               	xorlw	1	; case 1
 11239  00304E  B4D8               	btfsc	status,2,c
 11240  003050  D779               	goto	l1734
 11241  003052  0A03               	xorlw	3	; case 2
 11242  003054  B4D8               	btfsc	status,2,c
 11243  003056  D780               	goto	l1736
 11244  003058  0A01               	xorlw	1	; case 3
 11245  00305A  B4D8               	btfsc	status,2,c
 11246  00305C  D7C5               	goto	l1739
 11247  00305E  D7F0               	goto	l1742
 11248  003060                     __end_of_USBStdGetDscHandler:
 11249                           	opt stack 0
 11250                           tosu	equ	0xFFF
 11251                           tosh	equ	0xFFE
 11252                           tosl	equ	0xFFD
 11253                           pclath	equ	0xFFA
 11254                           tblptru	equ	0xFF8
 11255                           tblptrh	equ	0xFF7
 11256                           tblptrl	equ	0xFF6
 11257                           tablat	equ	0xFF5
 11258                           prodh	equ	0xFF4
 11259                           prodl	equ	0xFF3
 11260                           intcon	equ	0xFF2
 11261                           intcon2	equ	0xFF1
 11262                           intcon3	equ	0xFF0
 11263                           indf0	equ	0xFEF
 11264                           postinc0	equ	0xFEE
 11265                           plusw0	equ	0xFEB
 11266                           fsr0h	equ	0xFEA
 11267                           fsr0l	equ	0xFE9
 11268                           wreg	equ	0xFE8
 11269                           postinc1	equ	0xFE6
 11270                           postdec1	equ	0xFE5
 11271                           fsr1h	equ	0xFE2
 11272                           fsr1l	equ	0xFE1
 11273                           indf2	equ	0xFDF
 11274                           postinc2	equ	0xFDE
 11275                           postdec2	equ	0xFDD
 11276                           plusw2	equ	0xFDB
 11277                           fsr2h	equ	0xFDA
 11278                           fsr2l	equ	0xFD9
 11279                           status	equ	0xFD8
 11280                           
 11281 ;; *************** function _USBStdFeatureReqHandler *****************
 11282 ;; Defined at:
 11283 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;		None
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;  p               2   53[BANK0 ] PTR struct __BDT
 11288 ;;		 -> NULL(0), BDT(48), 
 11289 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 11290 ;;		 -> UEP0(1), 
 11291 ;;  current_ep_d    1   52[BANK0 ] struct .
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11302 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11304 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11305 ;;Total ram usage:        6 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; Hardware stack levels required when called:   15
 11308 ;; This function calls:
 11309 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11310 ;; This function is called by:
 11311 ;;		_USBCheckStdRequest
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text43
 11316  0016C4                     __ptext43:
 11317                           	opt stack 0
 11318  0016C4                     _USBStdFeatureReqHandler:
 11319                           	opt stack 8
 11320                           
 11321                           ;usb_device.c: 2773: BDT_ENTRY *p;
 11322                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 11323                           ;usb_device.c: 2778: unsigned char* pUEP;
 11324                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 11325                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 11326                           
 11327                           ;incstack = 0
 11328  0016C4  0104               	movlb	4	; () banked
 11329  0016C6  0532               	decf	50,w,b	;volatile
 11330  0016C8  A4D8               	btfss	status,2,c
 11331  0016CA  D011               	goto	l1826
 11332                           
 11333                           ; BSR set to: 4
 11334  0016CC  5130               	movf	48,w,b	;volatile
 11335  0016CE  0B1F               	andlw	31
 11336  0016D0  0900               	iorlw	0
 11337  0016D2  A4D8               	btfss	status,2,c
 11338  0016D4  D00C               	goto	l1826
 11339                           
 11340                           ; BSR set to: 4
 11341                           ;usb_device.c: 2818: {
 11342                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 11343  0016D6  0100               	movlb	0	; () banked
 11344  0016D8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 11348  0016DA  0E03               	movlw	3
 11349  0016DC  0104               	movlb	4	; () banked
 11350  0016DE  1931               	xorwf	49,w,b	;volatile
 11351  0016E0  A4D8               	btfss	status,2,c
 11352  0016E2  D002               	goto	l1825
 11353                           
 11354                           ; BSR set to: 4
 11355                           ;usb_device.c: 2821: RemoteWakeup = 1;
 11356  0016E4  0E01               	movlw	1
 11357  0016E6  D001               	goto	L5
 11358  0016E8                     l1825:
 11359                           
 11360                           ;usb_device.c: 2822: else
 11361                           ;usb_device.c: 2823: RemoteWakeup = 0;
 11362                           
 11363                           ; BSR set to: 1
 11364  0016E8  0E00               	movlw	0
 11365  0016EA                     L5:
 11366  0016EA  0101               	movlb	1	; () banked
 11367  0016EC  6FE3               	movwf	_RemoteWakeup& (0+255),b
 11368  0016EE                     l1826:
 11369                           
 11370                           ;usb_device.c: 2824: }
 11371                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 11372                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 11373                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11374                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 11375                           
 11376                           ; BSR set to: 1
 11377  0016EE  0104               	movlb	4	; () banked
 11378  0016F0  5132               	movf	50,w,b	;volatile
 11379  0016F2  A4D8               	btfss	status,2,c
 11380  0016F4  0012               	return	
 11381                           
 11382                           ; BSR set to: 4
 11383  0016F6  5130               	movf	48,w,b	;volatile
 11384  0016F8  0B1F               	andlw	31
 11385  0016FA  0A02               	xorlw	2
 11386  0016FC  A4D8               	btfss	status,2,c
 11387  0016FE  0012               	return	
 11388                           
 11389                           ; BSR set to: 4
 11390  001700  5134               	movf	52,w,b	;volatile
 11391  001702  0B0F               	andlw	15
 11392  001704  0900               	iorlw	0
 11393  001706  B4D8               	btfsc	status,2,c
 11394  001708  0012               	return	
 11395                           
 11396                           ; BSR set to: 4
 11397  00170A  5134               	movf	52,w,b	;volatile
 11398  00170C  0B0F               	andlw	15
 11399  00170E  0100               	movlb	0	; () banked
 11400  001710  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11401  001712  0E03               	movlw	3
 11402  001714  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 11403  001716  0012               	return	
 11404                           
 11405                           ; BSR set to: 0
 11406  001718  0E20               	movlw	32
 11407  00171A  19CC               	xorwf	_USBDeviceState& (0+255),w,b
 11408  00171C  A4D8               	btfss	status,2,c
 11409  00171E  0012               	return	
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;usb_device.c: 2831: {
 11413                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 11414  001720  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11415                           
 11416                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 11417  001722  0104               	movlb	4	; () banked
 11418  001724  BF34               	btfsc	52,7,b	;volatile
 11419  001726  D01C               	goto	l1828
 11420                           
 11421                           ; BSR set to: 4
 11422                           ;usb_device.c: 2838: {
 11423                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11424  001728  5134               	movf	52,w,b	;volatile
 11425  00172A  0B0F               	andlw	15
 11426  00172C  0100               	movlb	0	; () banked
 11427  00172E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11428  001730  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11429  001732  0D02               	mullw	2
 11430  001734  0E06               	movlw	low _pBDTEntryOut
 11431  001736  24F3               	addwf	prodl,w,c
 11432  001738  6ED9               	movwf	fsr2l,c
 11433  00173A  0E03               	movlw	high _pBDTEntryOut
 11434  00173C  20F4               	addwfc	prodh,w,c
 11435  00173E  6EDA               	movwf	fsr2h,c
 11436  001740  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11437  001744  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11438                           
 11439                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11440  001748  0104               	movlb	4	; () banked
 11441  00174A  5134               	movf	52,w,b	;volatile
 11442  00174C  0B0F               	andlw	15
 11443  00174E  0100               	movlb	0	; () banked
 11444  001750  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11445  001752  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11446  001754  0D01               	mullw	1
 11447  001756  0ECE               	movlw	low _ep_data_out
 11448  001758  24F3               	addwf	prodl,w,c
 11449  00175A  6ED9               	movwf	fsr2l,c
 11450  00175C  0E02               	movlw	high _ep_data_out
 11451  00175E  D01C               	goto	L6
 11452  001760                     l1828:
 11453                           
 11454                           ;usb_device.c: 2842: else
 11455                           ;usb_device.c: 2843: {
 11456                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11457                           
 11458                           ; BSR set to: 0
 11459  001760  0104               	movlb	4	; () banked
 11460  001762  5134               	movf	52,w,b	;volatile
 11461  001764  0B0F               	andlw	15
 11462  001766  0100               	movlb	0	; () banked
 11463  001768  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11464  00176A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11465  00176C  0D02               	mullw	2
 11466  00176E  0EB6               	movlw	low _pBDTEntryIn
 11467  001770  24F3               	addwf	prodl,w,c
 11468  001772  6ED9               	movwf	fsr2l,c
 11469  001774  0E00               	movlw	high _pBDTEntryIn
 11470  001776  20F4               	addwfc	prodh,w,c
 11471  001778  6EDA               	movwf	fsr2h,c
 11472  00177A  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11473  00177E  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11474                           
 11475                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11476  001782  0104               	movlb	4	; () banked
 11477  001784  5134               	movf	52,w,b	;volatile
 11478  001786  0B0F               	andlw	15
 11479  001788  0100               	movlb	0	; () banked
 11480  00178A  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11481  00178C  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11482  00178E  0D01               	mullw	1
 11483  001790  0ED1               	movlw	low _ep_data_in
 11484  001792  24F3               	addwf	prodl,w,c
 11485  001794  6ED9               	movwf	fsr2l,c
 11486  001796  0E02               	movlw	high _ep_data_in
 11487  001798                     L6:
 11488  001798  20F4               	addwfc	prodh,w,c
 11489  00179A  6EDA               	movwf	fsr2h,c
 11490  00179C  50DF               	movf	indf2,w,c
 11491  00179E  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11492                           
 11493                           ; BSR set to: 0
 11494                           ;usb_device.c: 2846: }
 11495                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11496                           
 11497                           ; BSR set to: 0
 11498  0017A0  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11499  0017A2  D002               	goto	l1830
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;usb_device.c: 2853: {
 11503                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11504  0017A4  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11505                           
 11506                           ;usb_device.c: 2855: }
 11507  0017A6  D001               	goto	l1831
 11508  0017A8                     l1830:
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;usb_device.c: 2856: else
 11512                           ;usb_device.c: 2857: {
 11513                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11514                           
 11515                           ; BSR set to: 0
 11516  0017A8  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11517  0017AA                     l1831:
 11518                           
 11519                           ; BSR set to: 0
 11520                           ;usb_device.c: 2859: }
 11521                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11522                           
 11523                           ; BSR set to: 0
 11524  0017AA  0104               	movlb	4	; () banked
 11525  0017AC  BF34               	btfsc	52,7,b	;volatile
 11526  0017AE  D00B               	goto	l1832
 11527                           
 11528                           ; BSR set to: 4
 11529                           ;usb_device.c: 2865: {
 11530                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11531  0017B0  5134               	movf	52,w,b	;volatile
 11532  0017B2  0B0F               	andlw	15
 11533  0017B4  0100               	movlb	0	; () banked
 11534  0017B6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11535  0017B8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11536  0017BA  0D02               	mullw	2
 11537  0017BC  0E06               	movlw	low _pBDTEntryOut
 11538  0017BE  24F3               	addwf	prodl,w,c
 11539  0017C0  6ED9               	movwf	fsr2l,c
 11540  0017C2  0E03               	movlw	high _pBDTEntryOut
 11541  0017C4  D00B               	goto	L7
 11542  0017C6                     l1832:
 11543                           
 11544                           ;usb_device.c: 2868: else
 11545                           ;usb_device.c: 2869: {
 11546                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11547                           
 11548                           ; BSR set to: 0
 11549  0017C6  0104               	movlb	4	; () banked
 11550  0017C8  5134               	movf	52,w,b	;volatile
 11551  0017CA  0B0F               	andlw	15
 11552  0017CC  0100               	movlb	0	; () banked
 11553  0017CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11554  0017D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11555  0017D2  0D02               	mullw	2
 11556  0017D4  0EB6               	movlw	low _pBDTEntryIn
 11557  0017D6  24F3               	addwf	prodl,w,c
 11558  0017D8  6ED9               	movwf	fsr2l,c
 11559  0017DA  0E00               	movlw	high _pBDTEntryIn
 11560  0017DC                     L7:
 11561  0017DC  20F4               	addwfc	prodh,w,c
 11562  0017DE  6EDA               	movwf	fsr2h,c
 11563  0017E0  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11564  0017E4  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11565                           
 11566                           ; BSR set to: 0
 11567                           ;usb_device.c: 2871: }
 11568                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11569                           
 11570                           ; BSR set to: 0
 11571  0017E8  0E03               	movlw	3
 11572  0017EA  0104               	movlb	4	; () banked
 11573  0017EC  1931               	xorwf	49,w,b	;volatile
 11574  0017EE  A4D8               	btfss	status,2,c
 11575  0017F0  D031               	goto	l1834
 11576                           
 11577                           ; BSR set to: 4
 11578                           ;usb_device.c: 2875: {
 11579                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11580  0017F2  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11581  0017F6  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11582  0017FA  0100               	movlb	0	; () banked
 11583  0017FC  AEDF               	btfss	indf2,7,c
 11584  0017FE  D01D               	goto	l1837
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;usb_device.c: 2877: {
 11588                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11589  001800  0104               	movlb	4	; () banked
 11590  001802  BF34               	btfsc	52,7,b	;volatile
 11591  001804  D00B               	goto	l1836
 11592                           
 11593                           ; BSR set to: 4
 11594                           ;usb_device.c: 2881: {
 11595                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11596  001806  5134               	movf	52,w,b	;volatile
 11597  001808  0B0F               	andlw	15
 11598  00180A  0100               	movlb	0	; () banked
 11599  00180C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11600  00180E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11601  001810  0D01               	mullw	1
 11602  001812  0ECE               	movlw	low _ep_data_out
 11603  001814  24F3               	addwf	prodl,w,c
 11604  001816  6ED9               	movwf	fsr2l,c
 11605  001818  0E02               	movlw	high _ep_data_out
 11606  00181A  D00B               	goto	L8
 11607  00181C                     l1836:
 11608                           
 11609                           ;usb_device.c: 2884: else
 11610                           ;usb_device.c: 2885: {
 11611                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11612                           
 11613                           ; BSR set to: 2
 11614  00181C  0104               	movlb	4	; () banked
 11615  00181E  5134               	movf	52,w,b	;volatile
 11616  001820  0B0F               	andlw	15
 11617  001822  0100               	movlb	0	; () banked
 11618  001824  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11619  001826  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11620  001828  0D01               	mullw	1
 11621  00182A  0ED1               	movlw	low _ep_data_in
 11622  00182C  24F3               	addwf	prodl,w,c
 11623  00182E  6ED9               	movwf	fsr2l,c
 11624  001830  0E02               	movlw	high _ep_data_in
 11625  001832                     L8:
 11626  001832  20F4               	addwfc	prodh,w,c
 11627  001834  6EDA               	movwf	fsr2h,c
 11628  001836  0102               	movlb	2	; () banked
 11629  001838  82DF               	bsf	indf2,1,c
 11630  00183A                     l1837:
 11631                           
 11632                           ;usb_device.c: 2887: }
 11633                           ;usb_device.c: 2888: }
 11634                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11635                           
 11636                           ; BSR set to: 2
 11637                           
 11638                           ; BSR set to: 2
 11639  00183A  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11640  00183E  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11641  001842  0E00               	movlw	0
 11642  001844  84DB               	bsf	plusw2,2,c
 11643                           
 11644                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11645  001846  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11646  00184A  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11647  00184E  0E00               	movlw	0
 11648  001850  8EDB               	bsf	plusw2,7,c
 11649                           
 11650                           ;usb_device.c: 2893: }
 11651  001852  0012               	return	
 11652  001854                     l1834:
 11653                           
 11654                           ;usb_device.c: 2894: else
 11655                           ;usb_device.c: 2895: {
 11656                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11657  001854  0E04               	movlw	4
 11658  001856  0100               	movlb	0	; () banked
 11659  001858  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11663  00185A  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11664  00185E  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11665  001862  AEDF               	btfss	indf2,7,c
 11666  001864  D01B               	goto	l1839
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;usb_device.c: 2902: {
 11670                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11671  001866  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11672  00186A  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11673  00186E  0E7F               	movlw	127
 11674  001870  16DF               	andwf	indf2,f,c
 11675                           
 11676                           ; BSR set to: 0
 11677                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11678  001872  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11679  001876  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11680  00187A  0E00               	movlw	0
 11681  00187C  8CDB               	bsf	plusw2,6,c
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11685  00187E  0E00               	movlw	0
 11686  001880  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11687  001882  0E05               	movlw	5
 11688  001884  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11689  001886  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11690  00188A  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11691  00188E  0E00               	movlw	0
 11692  001890  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11693  001892  0E02               	movlw	2
 11694  001894  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11695  001896  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11696                           
 11697                           ;usb_device.c: 2908: }
 11698  00189A  D006               	goto	l1840
 11699  00189C                     l1839:
 11700                           
 11701                           ;usb_device.c: 2909: else
 11702                           ;usb_device.c: 2910: {
 11703                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11704  00189C  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11705  0018A0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11706  0018A4  0E00               	movlw	0
 11707  0018A6  8CDB               	bsf	plusw2,6,c
 11708  0018A8                     l1840:
 11709                           
 11710                           ;usb_device.c: 2913: }
 11711                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11712  0018A8  0E04               	movlw	4
 11713  0018AA  0100               	movlb	0	; () banked
 11714  0018AC  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11718  0018AE  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11719  0018B0  D006               	goto	u11990
 11720                           
 11721                           ; BSR set to: 0
 11722  0018B2  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11723  0018B6  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11724  0018BA  AEDF               	btfss	indf2,7,c
 11725  0018BC  D033               	goto	l1841
 11726  0018BE                     u11990:
 11727                           
 11728                           ; BSR set to: 0
 11729                           ;usb_device.c: 2924: {
 11730                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11731  0018BE  0104               	movlb	4	; () banked
 11732  0018C0  BF34               	btfsc	52,7,b	;volatile
 11733  0018C2  D00B               	goto	l1844
 11734                           
 11735                           ; BSR set to: 4
 11736                           ;usb_device.c: 2926: {
 11737                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11738  0018C4  5134               	movf	52,w,b	;volatile
 11739  0018C6  0B0F               	andlw	15
 11740  0018C8  0100               	movlb	0	; () banked
 11741  0018CA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11742  0018CC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11743  0018CE  0D01               	mullw	1
 11744  0018D0  0ECE               	movlw	low _ep_data_out
 11745  0018D2  24F3               	addwf	prodl,w,c
 11746  0018D4  6ED9               	movwf	fsr2l,c
 11747  0018D6  0E02               	movlw	high _ep_data_out
 11748  0018D8  D00B               	goto	L9
 11749  0018DA                     l1844:
 11750                           
 11751                           ;usb_device.c: 2929: else
 11752                           ;usb_device.c: 2930: {
 11753                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11754                           
 11755                           ; BSR set to: 2
 11756  0018DA  0104               	movlb	4	; () banked
 11757  0018DC  5134               	movf	52,w,b	;volatile
 11758  0018DE  0B0F               	andlw	15
 11759  0018E0  0100               	movlb	0	; () banked
 11760  0018E2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11761  0018E4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11762  0018E6  0D01               	mullw	1
 11763  0018E8  0ED1               	movlw	low _ep_data_in
 11764  0018EA  24F3               	addwf	prodl,w,c
 11765  0018EC  6ED9               	movwf	fsr2l,c
 11766  0018EE  0E02               	movlw	high _ep_data_in
 11767  0018F0                     L9:
 11768  0018F0  20F4               	addwfc	prodh,w,c
 11769  0018F2  6EDA               	movwf	fsr2h,c
 11770  0018F4  0102               	movlb	2	; () banked
 11771  0018F6  92DF               	bcf	indf2,1,c
 11772                           
 11773                           ; BSR set to: 2
 11774                           ;usb_device.c: 2932: }
 11775                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11776                           
 11777                           ; BSR set to: 2
 11778  0018F8  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11779  0018FC  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11780  001900  0E3B               	movlw	59
 11781  001902  16DF               	andwf	indf2,f,c
 11782                           
 11783                           ; BSR set to: 2
 11784                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11785  001904  0E00               	movlw	0
 11786  001906  0100               	movlb	0	; () banked
 11787  001908  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11788  00190A  0E05               	movlw	5
 11789  00190C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11790  00190E  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11791  001912  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11792  001916  0E00               	movlw	0
 11793  001918  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11794  00191A  0E02               	movlw	2
 11795  00191C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11796  00191E  EC34  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11797                           
 11798                           ;usb_device.c: 2938: }
 11799  001922  D006               	goto	l1846
 11800  001924                     l1841:
 11801                           
 11802                           ;usb_device.c: 2939: else
 11803                           ;usb_device.c: 2940: {
 11804                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11805  001924  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11806  001928  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11807  00192C  0E3B               	movlw	59
 11808  00192E  16DF               	andwf	indf2,f,c
 11809  001930                     l1846:
 11810                           
 11811                           ;usb_device.c: 2943: }
 11812                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11813  001930  0104               	movlb	4	; () banked
 11814  001932  5134               	movf	52,w,b	;volatile
 11815  001934  0B0F               	andlw	15
 11816  001936  0100               	movlb	0	; () banked
 11817  001938  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11818  00193A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11819  00193C  0D01               	mullw	1
 11820  00193E  0E26               	movlw	38
 11821  001940  24F3               	addwf	prodl,w,c
 11822  001942  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11823  001944  0E0F               	movlw	15
 11824  001946  20F4               	addwfc	prodh,w,c
 11825  001948  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11829  00194A  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11830  00194E  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11831  001952  0EFE               	movlw	254
 11832  001954  16DF               	andwf	indf2,f,c
 11833                           
 11834                           ; BSR set to: 0
 11835  001956  0012               	return	
 11836  001958                     __end_of_USBStdFeatureReqHandler:
 11837                           	opt stack 0
 11838                           tosu	equ	0xFFF
 11839                           tosh	equ	0xFFE
 11840                           tosl	equ	0xFFD
 11841                           pclath	equ	0xFFA
 11842                           tblptru	equ	0xFF8
 11843                           tblptrh	equ	0xFF7
 11844                           tblptrl	equ	0xFF6
 11845                           tablat	equ	0xFF5
 11846                           prodh	equ	0xFF4
 11847                           prodl	equ	0xFF3
 11848                           intcon	equ	0xFF2
 11849                           intcon2	equ	0xFF1
 11850                           intcon3	equ	0xFF0
 11851                           indf0	equ	0xFEF
 11852                           postinc0	equ	0xFEE
 11853                           plusw0	equ	0xFEB
 11854                           fsr0h	equ	0xFEA
 11855                           fsr0l	equ	0xFE9
 11856                           wreg	equ	0xFE8
 11857                           postinc1	equ	0xFE6
 11858                           postdec1	equ	0xFE5
 11859                           fsr1h	equ	0xFE2
 11860                           fsr1l	equ	0xFE1
 11861                           indf2	equ	0xFDF
 11862                           postinc2	equ	0xFDE
 11863                           postdec2	equ	0xFDD
 11864                           plusw2	equ	0xFDB
 11865                           fsr2h	equ	0xFDA
 11866                           fsr2l	equ	0xFD9
 11867                           status	equ	0xFD8
 11868                           
 11869 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11870 ;; Defined at:
 11871 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;  event           2   41[BANK0 ] enum E8364
 11874 ;;  pdata           2   43[BANK0 ] PTR void 
 11875 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11876 ;;  size            2   45[BANK0 ] unsigned int 
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      unsigned char 
 11881 ;; Registers used:
 11882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11888 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11890 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11891 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11892 ;;Total ram usage:        8 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:   14
 11895 ;; This function calls:
 11896 ;;		_CDCInitEP
 11897 ;;		_USBCheckCDCRequest
 11898 ;; This function is called by:
 11899 ;;		_USBDeviceTasks
 11900 ;;		_USBStdSetCfgHandler
 11901 ;;		_USBSuspend
 11902 ;;		_USBWakeFromSuspend
 11903 ;;		_USBCtrlTrfSetupHandler
 11904 ;;		_USBCheckStdRequest
 11905 ;;		_USBStdFeatureReqHandler
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text44
 11910  005668                     __ptext44:
 11911                           	opt stack 0
 11912  005668                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11913                           	opt stack 12
 11914                           
 11915                           ;usb_device_mgr.c: 106: switch( (int) event )
 11916                           
 11917                           ;incstack = 0
 11918  005668  D006               	goto	l2000
 11919  00566A                     
 11920                           ;usb_device_mgr.c: 134: CDCInitEP();
 11921  00566A  ECCA  F029         	call	_CDCInitEP	;wreg free
 11922                           
 11923                           ;usb_device_mgr.c: 142: break;
 11924                           
 11925                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11926                           
 11927                           ;usb_device_mgr.c: 139: break;
 11928  00566E  0012               	return	
 11929  005670                     
 11930                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11931  005670  EC03  F022         	call	_USBCheckCDCRequest	;wreg free
 11932                           
 11933                           ;usb_device_mgr.c: 163: }
 11934                           
 11935                           ;usb_device_mgr.c: 162: break;
 11936                           
 11937                           ;usb_device_mgr.c: 161: default:
 11938                           
 11939                           ;usb_device_mgr.c: 159: break;
 11940                           
 11941                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11942                           
 11943                           ;usb_device_mgr.c: 156: break;
 11944                           
 11945                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11946                           
 11947                           ;usb_device_mgr.c: 153: break;
 11948  005674  0012               	return	
 11949  005676                     l2000:
 11950  005676  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11951  00567A  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11952                           
 11953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11954                           ; Switch size 1, requested type "space"
 11955                           ; Number of cases is 2, Range of values is 0 to 127
 11956                           ; switch strategies available:
 11957                           ; Name         Instructions Cycles
 11958                           ; simple_byte            7     4 (average)
 11959                           ;	Chosen strategy is simple_byte
 11960  00567E  0100               	movlb	0	; () banked
 11961  005680  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11962  005682  0A00               	xorlw	0	; case 0
 11963  005684  B4D8               	btfsc	status,2,c
 11964  005686  D004               	goto	l16605
 11965  005688  0A7F               	xorlw	127	; case 127
 11966  00568A  A4D8               	btfss	status,2,c
 11967  00568C  0012               	return	
 11968  00568E  D018               	goto	l16607
 11969  005690                     l16605:
 11970                           
 11971                           ; BSR set to: 0
 11972                           ; Switch size 1, requested type "space"
 11973                           ; Number of cases is 8, Range of values is 1 to 117
 11974                           ; switch strategies available:
 11975                           ; Name         Instructions Cycles
 11976                           ; simple_byte           25    13 (average)
 11977                           ;	Chosen strategy is simple_byte
 11978  005690  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11979  005692  0A01               	xorlw	1	; case 1
 11980  005694  B4D8               	btfsc	status,2,c
 11981  005696  D7E9               	goto	l2006
 11982  005698  0A03               	xorlw	3	; case 2
 11983  00569A  B4D8               	btfsc	status,2,c
 11984  00569C  0012               	return	
 11985  00569E  0A01               	xorlw	1	; case 3
 11986  0056A0  B4D8               	btfsc	status,2,c
 11987  0056A2  D7E6               	goto	l2008
 11988  0056A4  0A06               	xorlw	6	; case 5
 11989  0056A6  B4D8               	btfsc	status,2,c
 11990  0056A8  0012               	return	
 11991  0056AA  0A77               	xorlw	119	; case 114
 11992  0056AC  B4D8               	btfsc	status,2,c
 11993  0056AE  0012               	return	
 11994  0056B0  0A01               	xorlw	1	; case 115
 11995  0056B2  B4D8               	btfsc	status,2,c
 11996  0056B4  0012               	return	
 11997  0056B6  0A07               	xorlw	7	; case 116
 11998  0056B8  B4D8               	btfsc	status,2,c
 11999  0056BA  0012               	return	
 12000  0056BC  0A01               	xorlw	1	; case 117
 12001  0056BE  0012               	return	
 12002  0056C0                     l16607:
 12003                           
 12004                           ; BSR set to: 0
 12005                           ; Switch size 1, requested type "space"
 12006                           ; Number of cases is 1, Range of values is 255 to 255
 12007                           ; switch strategies available:
 12008                           ; Name         Instructions Cycles
 12009                           ; simple_byte            4     3 (average)
 12010                           ;	Chosen strategy is simple_byte
 12011  0056C0  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 12012  0056C2  0AFF               	xorlw	255	; case 255
 12013  0056C4  0012               	return	
 12014  0056C6                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 12015                           	opt stack 0
 12016                           tosu	equ	0xFFF
 12017                           tosh	equ	0xFFE
 12018                           tosl	equ	0xFFD
 12019                           pclath	equ	0xFFA
 12020                           tblptru	equ	0xFF8
 12021                           tblptrh	equ	0xFF7
 12022                           tblptrl	equ	0xFF6
 12023                           tablat	equ	0xFF5
 12024                           prodh	equ	0xFF4
 12025                           prodl	equ	0xFF3
 12026                           intcon	equ	0xFF2
 12027                           intcon2	equ	0xFF1
 12028                           intcon3	equ	0xFF0
 12029                           indf0	equ	0xFEF
 12030                           postinc0	equ	0xFEE
 12031                           plusw0	equ	0xFEB
 12032                           fsr0h	equ	0xFEA
 12033                           fsr0l	equ	0xFE9
 12034                           wreg	equ	0xFE8
 12035                           postinc1	equ	0xFE6
 12036                           postdec1	equ	0xFE5
 12037                           fsr1h	equ	0xFE2
 12038                           fsr1l	equ	0xFE1
 12039                           indf2	equ	0xFDF
 12040                           postinc2	equ	0xFDE
 12041                           postdec2	equ	0xFDD
 12042                           plusw2	equ	0xFDB
 12043                           fsr2h	equ	0xFDA
 12044                           fsr2l	equ	0xFD9
 12045                           status	equ	0xFD8
 12046                           
 12047 ;; *************** function _USBCheckCDCRequest *****************
 12048 ;; Defined at:
 12049 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12050 ;; Parameters:    Size  Location     Type
 12051 ;;		None
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;		None
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  1    wreg      void 
 12056 ;; Registers used:
 12057 ;;		wreg, status,2, status,0
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12067 ;;Total ram usage:        0 bytes
 12068 ;; Hardware stack levels used:    1
 12069 ;; Hardware stack levels required when called:   11
 12070 ;; This function calls:
 12071 ;;		Nothing
 12072 ;; This function is called by:
 12073 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text45
 12078  004406                     __ptext45:
 12079                           	opt stack 0
 12080  004406                     _USBCheckCDCRequest:
 12081                           	opt stack 14
 12082                           
 12083                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 12084                           
 12085                           ;incstack = 0
 12086  004406  0104               	movlb	4	; () banked
 12087  004408  5130               	movf	48,w,b	;volatile
 12088  00440A  0B1F               	andlw	31
 12089  00440C  06E8               	decf	wreg,f,c
 12090  00440E  A4D8               	btfss	status,2,c
 12091  004410  0012               	return	
 12092                           
 12093                           ; BSR set to: 4
 12094                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 12095                           
 12096                           ; BSR set to: 4
 12097                           
 12098                           ; BSR set to: 4
 12099  004412  3930               	swapf	48,w,b	;volatile
 12100  004414  32E8               	rrcf	wreg,f,c
 12101  004416  0B03               	andlw	3
 12102  004418  06E8               	decf	wreg,f,c
 12103  00441A  A4D8               	btfss	status,2,c
 12104  00441C  0012               	return	
 12105                           
 12106                           ; BSR set to: 4
 12107                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 12108                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 12109                           
 12110                           ; BSR set to: 4
 12111                           
 12112                           ; BSR set to: 4
 12113  00441E  5134               	movf	52,w,b	;volatile
 12114  004420  B4D8               	btfsc	status,2,c
 12115  004422  D037               	goto	l1902
 12116                           
 12117                           ; BSR set to: 4
 12118  004424  0534               	decf	52,w,b	;volatile
 12119  004426  A4D8               	btfss	status,2,c
 12120  004428  0012               	return	
 12121  00442A  D033               	goto	l1902
 12122  00442C                     
 12123                           ; BSR set to: 4
 12124                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12125                           
 12126                           ; BSR set to: 4
 12127  00442C  0E72               	movlw	low _dummy_encapsulated_cmd_response
 12128  00442E  0100               	movlb	0	; () banked
 12129  004430  6FB0               	movwf	_inPipes& (0+255),b
 12130  004432  0E03               	movlw	high _dummy_encapsulated_cmd_response
 12131  004434  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 12135  004436  0E00               	movlw	0
 12136  004438  6FB5               	movwf	(_inPipes+5)& (0+255),b
 12137  00443A  0E08               	movlw	8
 12138  00443C  6FB4               	movwf	(_inPipes+4)& (0+255),b
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12142  00443E  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 12146  004440  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12147                           
 12148                           ;usb_device_cdc.c: 178: break;
 12149  004442  0012               	return	
 12150  004444                     
 12151                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12152                           
 12153                           ; BSR set to: 0
 12154  004444  0E72               	movlw	low _dummy_encapsulated_cmd_response
 12155  004446  0100               	movlb	0	; () banked
 12156  004448  6FB0               	movwf	_inPipes& (0+255),b
 12157  00444A  0E03               	movlw	high _dummy_encapsulated_cmd_response
 12158  00444C  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 12162  00444E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12163                           
 12164                           ;usb_device_cdc.c: 183: break;
 12165  004450  0012               	return	
 12166  004452                     l1906:
 12167                           
 12168                           ; BSR set to: 4
 12169                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 12170  004452  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 12171  004456  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 12172                           
 12173                           ; BSR set to: 4
 12174                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 12175  00445A  0E7A               	movlw	low _line_coding
 12176  00445C  0101               	movlb	1	; () banked
 12177  00445E  6FC9               	movwf	_outPipes& (0+255),b
 12178  004460  0E03               	movlw	high _line_coding
 12179  004462  6FCA               	movwf	(_outPipes+1)& (0+255),b
 12180                           
 12181                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 12182  004464  0E00               	movlw	0
 12183  004466  6FCF               	movwf	(_outPipes+6)& (0+255),b
 12184  004468  0E00               	movlw	0
 12185  00446A  6FD0               	movwf	(_outPipes+7)& (0+255),b
 12186                           
 12187                           ; BSR set to: 1
 12188                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 12189  00446C  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 12190                           
 12191                           ;usb_device_cdc.c: 192: break;
 12192  00446E  0012               	return	
 12193  004470                     
 12194                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12195                           
 12196                           ; BSR set to: 1
 12197  004470  0E7A               	movlw	low _line_coding
 12198  004472  0100               	movlb	0	; () banked
 12199  004474  6FB0               	movwf	_inPipes& (0+255),b
 12200  004476  0E03               	movlw	high _line_coding
 12201  004478  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12202                           
 12203                           ; BSR set to: 0
 12204  00447A  0E00               	movlw	0
 12205  00447C  6FB5               	movwf	(_inPipes+5)& (0+255),b
 12206  00447E  0E07               	movlw	7
 12207  004480  6FB4               	movwf	(_inPipes+4)& (0+255),b
 12208                           
 12209                           ; BSR set to: 0
 12210  004482  0EC1               	movlw	193
 12211  004484  6FB3               	movwf	(_inPipes+3)& (0+255),b
 12212                           
 12213                           ;usb_device_cdc.c: 199: break;
 12214  004486  0012               	return	
 12215  004488                     l1908:
 12216                           
 12217                           ; BSR set to: 4
 12218                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 12219  004488  C432 F1DE          	movff	1074,_control_signal_bitmap	;volatile
 12220                           
 12221                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 12222  00448C  0100               	movlb	0	; () banked
 12223  00448E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12224                           
 12225                           ; BSR set to: 0
 12226                           ;usb_device_cdc.c: 261: }
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;usb_device_cdc.c: 260: break;
 12230                           
 12231                           ;usb_device_cdc.c: 259: default:
 12232                           
 12233                           ;usb_device_cdc.c: 235: break;
 12234  004490  0012               	return	
 12235  004492                     l1902:
 12236                           
 12237                           ; BSR set to: 0
 12238  004492  0104               	movlb	4	; () banked
 12239  004494  5131               	movf	49,w,b	;volatile
 12240                           
 12241                           ; Switch size 1, requested type "space"
 12242                           ; Number of cases is 5, Range of values is 0 to 34
 12243                           ; switch strategies available:
 12244                           ; Name         Instructions Cycles
 12245                           ; simple_byte           16     9 (average)
 12246                           ;	Chosen strategy is simple_byte
 12247  004496  0A00               	xorlw	0	; case 0
 12248  004498  B4D8               	btfsc	status,2,c
 12249  00449A  D7C8               	goto	l1903
 12250  00449C  0A01               	xorlw	1	; case 1
 12251  00449E  B4D8               	btfsc	status,2,c
 12252  0044A0  D7D1               	goto	l1905
 12253  0044A2  0A21               	xorlw	33	; case 32
 12254  0044A4  B4D8               	btfsc	status,2,c
 12255  0044A6  D7D5               	goto	l1906
 12256  0044A8  0A01               	xorlw	1	; case 33
 12257  0044AA  B4D8               	btfsc	status,2,c
 12258  0044AC  D7E1               	goto	l1907
 12259  0044AE  0A03               	xorlw	3	; case 34
 12260  0044B0  A4D8               	btfss	status,2,c
 12261  0044B2  0012               	return	
 12262  0044B4  D7E9               	goto	l1908
 12263  0044B6                     __end_of_USBCheckCDCRequest:
 12264                           	opt stack 0
 12265                           tosu	equ	0xFFF
 12266                           tosh	equ	0xFFE
 12267                           tosl	equ	0xFFD
 12268                           pclath	equ	0xFFA
 12269                           tblptru	equ	0xFF8
 12270                           tblptrh	equ	0xFF7
 12271                           tblptrl	equ	0xFF6
 12272                           tablat	equ	0xFF5
 12273                           prodh	equ	0xFF4
 12274                           prodl	equ	0xFF3
 12275                           intcon	equ	0xFF2
 12276                           intcon2	equ	0xFF1
 12277                           intcon3	equ	0xFF0
 12278                           indf0	equ	0xFEF
 12279                           postinc0	equ	0xFEE
 12280                           plusw0	equ	0xFEB
 12281                           fsr0h	equ	0xFEA
 12282                           fsr0l	equ	0xFE9
 12283                           wreg	equ	0xFE8
 12284                           postinc1	equ	0xFE6
 12285                           postdec1	equ	0xFE5
 12286                           fsr1h	equ	0xFE2
 12287                           fsr1l	equ	0xFE1
 12288                           indf2	equ	0xFDF
 12289                           postinc2	equ	0xFDE
 12290                           postdec2	equ	0xFDD
 12291                           plusw2	equ	0xFDB
 12292                           fsr2h	equ	0xFDA
 12293                           fsr2l	equ	0xFD9
 12294                           status	equ	0xFD8
 12295                           
 12296 ;; *************** function _CDCInitEP *****************
 12297 ;; Defined at:
 12298 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12299 ;; Parameters:    Size  Location     Type
 12300 ;;		None
 12301 ;; Auto vars:     Size  Location     Type
 12302 ;;		None
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  1    wreg      void 
 12305 ;; Registers used:
 12306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12316 ;;Total ram usage:        0 bytes
 12317 ;; Hardware stack levels used:    1
 12318 ;; Hardware stack levels required when called:   13
 12319 ;; This function calls:
 12320 ;;		_USBEnableEndpoint
 12321 ;;		_USBTransferOnePacket
 12322 ;; This function is called by:
 12323 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text46
 12328  005394                     __ptext46:
 12329                           	opt stack 0
 12330  005394                     _CDCInitEP:
 12331                           	opt stack 12
 12332                           
 12333                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 12334                           
 12335                           ;incstack = 0
 12336  005394  0E80               	movlw	128
 12337  005396  0103               	movlb	3	; () banked
 12338  005398  6F7A               	movwf	_line_coding& (0+255),b
 12339  00539A  0E25               	movlw	37
 12340  00539C  6F7B               	movwf	(_line_coding+1)& (0+255),b
 12341  00539E  0E00               	movlw	0
 12342  0053A0  6F7C               	movwf	(_line_coding+2)& (0+255),b
 12343  0053A2  0E00               	movlw	0
 12344  0053A4  6F7D               	movwf	(_line_coding+3)& (0+255),b
 12345                           
 12346                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 12347  0053A6  0E00               	movlw	0
 12348  0053A8  6F7E               	movwf	(_line_coding+4)& (0+255),b
 12349                           
 12350                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 12351  0053AA  0E00               	movlw	0
 12352  0053AC  6F7F               	movwf	(_line_coding+5)& (0+255),b
 12353                           
 12354                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 12355  0053AE  0E08               	movlw	8
 12356  0053B0  6F80               	movwf	(_line_coding+6)& (0+255),b
 12357                           
 12358                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 12359  0053B2  0E00               	movlw	0
 12360  0053B4  0100               	movlb	0	; () banked
 12361  0053B6  6FC6               	movwf	_cdc_rx_len& (0+255),b
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 12365  0053B8  0E1A               	movlw	26
 12366  0053BA  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12367  0053BC  0E01               	movlw	1
 12368  0053BE  EC5A  F02F         	call	_USBEnableEndpoint
 12369                           
 12370                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 12371  0053C2  0E1E               	movlw	30
 12372  0053C4  0100               	movlb	0	; () banked
 12373  0053C6  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12374  0053C8  0E02               	movlw	2
 12375  0053CA  EC5A  F02F         	call	_USBEnableEndpoint
 12376                           
 12377                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12378  0053CE  0E00               	movlw	0
 12379  0053D0  0100               	movlb	0	; () banked
 12380  0053D2  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 12381  0053D4  0E00               	movlw	low _cdc_data_rx
 12382  0053D6  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 12383  0053D8  0E05               	movlw	high _cdc_data_rx
 12384  0053DA  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12385  0053DC  0E40               	movlw	64
 12386  0053DE  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 12387  0053E0  0E02               	movlw	2
 12388  0053E2  EC4B  F021         	call	_USBTransferOnePacket
 12389  0053E6  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12390  0053EA  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12391                           
 12392                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 12393  0053EE  0E00               	movlw	0
 12394  0053F0  0101               	movlb	1	; () banked
 12395  0053F2  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 12396  0053F4  0E00               	movlw	0
 12397  0053F6  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 12398                           
 12399                           ; BSR set to: 1
 12400                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 12401  0053F8  0E00               	movlw	0
 12402  0053FA  0100               	movlb	0	; () banked
 12403  0053FC  6FC5               	movwf	_cdc_trf_state& (0+255),b
 12404                           
 12405                           ; BSR set to: 0
 12406  0053FE  0012               	return		;funcret
 12407  005400                     __end_of_CDCInitEP:
 12408                           	opt stack 0
 12409                           tosu	equ	0xFFF
 12410                           tosh	equ	0xFFE
 12411                           tosl	equ	0xFFD
 12412                           pclath	equ	0xFFA
 12413                           tblptru	equ	0xFF8
 12414                           tblptrh	equ	0xFF7
 12415                           tblptrl	equ	0xFF6
 12416                           tablat	equ	0xFF5
 12417                           prodh	equ	0xFF4
 12418                           prodl	equ	0xFF3
 12419                           intcon	equ	0xFF2
 12420                           intcon2	equ	0xFF1
 12421                           intcon3	equ	0xFF0
 12422                           indf0	equ	0xFEF
 12423                           postinc0	equ	0xFEE
 12424                           plusw0	equ	0xFEB
 12425                           fsr0h	equ	0xFEA
 12426                           fsr0l	equ	0xFE9
 12427                           wreg	equ	0xFE8
 12428                           postinc1	equ	0xFE6
 12429                           postdec1	equ	0xFE5
 12430                           fsr1h	equ	0xFE2
 12431                           fsr1l	equ	0xFE1
 12432                           indf2	equ	0xFDF
 12433                           postinc2	equ	0xFDE
 12434                           postdec2	equ	0xFDD
 12435                           plusw2	equ	0xFDB
 12436                           fsr2h	equ	0xFDA
 12437                           fsr2l	equ	0xFD9
 12438                           status	equ	0xFD8
 12439                           
 12440 ;; *************** function _USBEnableEndpoint *****************
 12441 ;; Defined at:
 12442 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;  ep              1    wreg     unsigned char 
 12445 ;;  options         1   37[BANK0 ] unsigned char 
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;  ep              1   40[BANK0 ] unsigned char 
 12448 ;;  p               2   38[BANK0 ] PTR unsigned char 
 12449 ;;		 -> UEP0(1), 
 12450 ;; Return value:  Size  Location     Type
 12451 ;;                  1    wreg      void 
 12452 ;; Registers used:
 12453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12454 ;; Tracked objects:
 12455 ;;		On entry : 0/0
 12456 ;;		On exit  : 0/0
 12457 ;;		Unchanged: 0/0
 12458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12459 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12460 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12462 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12463 ;;Total ram usage:        4 bytes
 12464 ;; Hardware stack levels used:    1
 12465 ;; Hardware stack levels required when called:   12
 12466 ;; This function calls:
 12467 ;;		_USBConfigureEndpoint
 12468 ;; This function is called by:
 12469 ;;		_CDCInitEP
 12470 ;; This function uses a non-reentrant model
 12471 ;;
 12472                           
 12473                           	psect	text47
 12474  005EB4                     __ptext47:
 12475                           	opt stack 0
 12476  005EB4                     _USBEnableEndpoint:
 12477                           	opt stack 12
 12478                           
 12479                           ; BSR set to: 0
 12480                           ;incstack = 0
 12481                           ;USBEnableEndpoint@ep stored from wreg
 12482  005EB4  0100               	movlb	0	; () banked
 12483  005EB6  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12484                           
 12485                           ;usb_device.c: 898: unsigned char* p;
 12486                           ;usb_device.c: 902: if(options & 0x04)
 12487  005EB8  0100               	movlb	0	; () banked
 12488  005EBA  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12489  005EBC  D005               	goto	l1643
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;usb_device.c: 903: {
 12493                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12494  005EBE  0E00               	movlw	0
 12495  005EC0  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12496  005EC2  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12497  005EC4  EC44  F025         	call	_USBConfigureEndpoint
 12498  005EC8                     l1643:
 12499                           
 12500                           ;usb_device.c: 905: }
 12501                           ;usb_device.c: 906: if(options & 0x02)
 12502  005EC8  0100               	movlb	0	; () banked
 12503  005ECA  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12504  005ECC  D005               	goto	l1644
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;usb_device.c: 907: {
 12508                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12509  005ECE  0E01               	movlw	1
 12510  005ED0  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12511  005ED2  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12512  005ED4  EC44  F025         	call	_USBConfigureEndpoint
 12513  005ED8                     l1644:
 12514                           
 12515                           ;usb_device.c: 909: }
 12516                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12517  005ED8  0100               	movlb	0	; () banked
 12518  005EDA  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12519  005EDC  0D01               	mullw	1
 12520  005EDE  0E26               	movlw	38
 12521  005EE0  24F3               	addwf	prodl,w,c
 12522  005EE2  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12523  005EE4  0E0F               	movlw	15
 12524  005EE6  20F4               	addwfc	prodh,w,c
 12525  005EE8  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;usb_device.c: 919: *p = options;
 12529  005EEA  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12530  005EEE  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12531  005EF2  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12532                           
 12533                           ; BSR set to: 0
 12534  005EF6  0012               	return		;funcret
 12535  005EF8                     __end_of_USBEnableEndpoint:
 12536                           	opt stack 0
 12537                           tosu	equ	0xFFF
 12538                           tosh	equ	0xFFE
 12539                           tosl	equ	0xFFD
 12540                           pclath	equ	0xFFA
 12541                           tblptru	equ	0xFF8
 12542                           tblptrh	equ	0xFF7
 12543                           tblptrl	equ	0xFF6
 12544                           tablat	equ	0xFF5
 12545                           prodh	equ	0xFF4
 12546                           prodl	equ	0xFF3
 12547                           intcon	equ	0xFF2
 12548                           intcon2	equ	0xFF1
 12549                           intcon3	equ	0xFF0
 12550                           indf0	equ	0xFEF
 12551                           postinc0	equ	0xFEE
 12552                           plusw0	equ	0xFEB
 12553                           fsr0h	equ	0xFEA
 12554                           fsr0l	equ	0xFE9
 12555                           wreg	equ	0xFE8
 12556                           postinc1	equ	0xFE6
 12557                           postdec1	equ	0xFE5
 12558                           fsr1h	equ	0xFE2
 12559                           fsr1l	equ	0xFE1
 12560                           indf2	equ	0xFDF
 12561                           postinc2	equ	0xFDE
 12562                           postdec2	equ	0xFDD
 12563                           plusw2	equ	0xFDB
 12564                           fsr2h	equ	0xFDA
 12565                           fsr2l	equ	0xFD9
 12566                           status	equ	0xFD8
 12567                           
 12568 ;; *************** function _USBConfigureEndpoint *****************
 12569 ;; Defined at:
 12570 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;  EPNum           1    wreg     unsigned char 
 12573 ;;  direction       1   29[BANK0 ] unsigned char 
 12574 ;; Auto vars:     Size  Location     Type
 12575 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12576 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12577 ;;		 -> BDT(48), 
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  1    wreg      void 
 12580 ;; Registers used:
 12581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12587 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12588 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12590 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12591 ;;Total ram usage:        8 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; Hardware stack levels required when called:   11
 12594 ;; This function calls:
 12595 ;;		Nothing
 12596 ;; This function is called by:
 12597 ;;		_USBEnableEndpoint
 12598 ;; This function uses a non-reentrant model
 12599 ;;
 12600                           
 12601                           	psect	text48
 12602  004A88                     __ptext48:
 12603                           	opt stack 0
 12604  004A88                     _USBConfigureEndpoint:
 12605                           	opt stack 12
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;incstack = 0
 12609                           ;USBConfigureEndpoint@EPNum stored from wreg
 12610  004A88  0100               	movlb	0	; () banked
 12611  004A8A  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12612                           
 12613                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12614                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12615  004A8C  0E00               	movlw	0
 12616  004A8E  0100               	movlb	0	; () banked
 12617  004A90  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12618  004A92  0E04               	movlw	4
 12619  004A94  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12623  004A96  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12624  004A98  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12625  004A9A  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12626  004A9C  90D8               	bcf	status,0,c
 12627  004A9E  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12628  004AA0  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12629  004AA2  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12630  004AA4  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12631  004AA6  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12632  004AA8  90D8               	bcf	status,0,c
 12633  004AAA  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12634  004AAC  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12635  004AAE  90D8               	bcf	status,0,c
 12636  004AB0  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12637  004AB2  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12638  004AB4  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12639  004AB6  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12640  004AB8  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12641  004ABA  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12642  004ABC  90D8               	bcf	status,0,c
 12643  004ABE  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12644  004AC0  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12645  004AC2  90D8               	bcf	status,0,c
 12646  004AC4  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12647  004AC6  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12648  004AC8  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12649  004ACA  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12650  004ACC  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12651  004ACE  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12655  004AD0  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12656  004AD4  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12657  004AD8  9EDF               	bcf	indf2,7,c
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;usb_device.c: 1575: if(direction == 0)
 12661  004ADA  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12662  004ADC  A4D8               	btfss	status,2,c
 12663  004ADE  D007               	goto	l1679
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;usb_device.c: 1576: {
 12667                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12668  004AE0  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12669  004AE2  0D02               	mullw	2
 12670  004AE4  0E06               	movlw	low _pBDTEntryOut
 12671  004AE6  24F3               	addwf	prodl,w,c
 12672  004AE8  6ED9               	movwf	fsr2l,c
 12673  004AEA  0E03               	movlw	high _pBDTEntryOut
 12674  004AEC  D006               	goto	L10
 12675  004AEE                     l1679:
 12676                           
 12677                           ; BSR set to: 0
 12678                           ;usb_device.c: 1579: else
 12679                           ;usb_device.c: 1580: {
 12680                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12681                           
 12682                           ; BSR set to: 0
 12683  004AEE  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12684  004AF0  0D02               	mullw	2
 12685  004AF2  0EB6               	movlw	low _pBDTEntryIn
 12686  004AF4  24F3               	addwf	prodl,w,c
 12687  004AF6  6ED9               	movwf	fsr2l,c
 12688  004AF8  0E00               	movlw	high _pBDTEntryIn
 12689  004AFA                     L10:
 12690  004AFA  20F4               	addwfc	prodh,w,c
 12691  004AFC  6EDA               	movwf	fsr2h,c
 12692  004AFE  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12693  004B02  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;usb_device.c: 1582: }
 12697                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12698                           
 12699                           ; BSR set to: 0
 12700  004B06  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12701  004B0A  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12702  004B0E  9CDF               	bcf	indf2,6,c
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12706  004B10  EE20 F004          	lfsr	2,4
 12707  004B14  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12708  004B16  26D9               	addwf	fsr2l,f,c
 12709  004B18  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12710  004B1A  22DA               	addwfc	fsr2h,f,c
 12711  004B1C  8CDF               	bsf	indf2,6,c
 12712                           
 12713                           ; BSR set to: 0
 12714  004B1E  0012               	return		;funcret
 12715  004B20                     __end_of_USBConfigureEndpoint:
 12716                           	opt stack 0
 12717                           tosu	equ	0xFFF
 12718                           tosh	equ	0xFFE
 12719                           tosl	equ	0xFFD
 12720                           pclath	equ	0xFFA
 12721                           tblptru	equ	0xFF8
 12722                           tblptrh	equ	0xFF7
 12723                           tblptrl	equ	0xFF6
 12724                           tablat	equ	0xFF5
 12725                           prodh	equ	0xFF4
 12726                           prodl	equ	0xFF3
 12727                           intcon	equ	0xFF2
 12728                           intcon2	equ	0xFF1
 12729                           intcon3	equ	0xFF0
 12730                           indf0	equ	0xFEF
 12731                           postinc0	equ	0xFEE
 12732                           plusw0	equ	0xFEB
 12733                           fsr0h	equ	0xFEA
 12734                           fsr0l	equ	0xFE9
 12735                           wreg	equ	0xFE8
 12736                           postinc1	equ	0xFE6
 12737                           postdec1	equ	0xFE5
 12738                           fsr1h	equ	0xFE2
 12739                           fsr1l	equ	0xFE1
 12740                           indf2	equ	0xFDF
 12741                           postinc2	equ	0xFDE
 12742                           postdec2	equ	0xFDD
 12743                           plusw2	equ	0xFDB
 12744                           fsr2h	equ	0xFDA
 12745                           fsr2l	equ	0xFD9
 12746                           status	equ	0xFD8
 12747                           
 12748 ;; *************** function _USBCtrlTrfOutHandler *****************
 12749 ;; Defined at:
 12750 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;		None
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;		None
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  1    wreg      void 
 12757 ;; Registers used:
 12758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/0
 12761 ;;		On exit  : 0/0
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12768 ;;Total ram usage:        0 bytes
 12769 ;; Hardware stack levels used:    1
 12770 ;; Hardware stack levels required when called:   13
 12771 ;; This function calls:
 12772 ;;		_USBCtrlTrfRxService
 12773 ;; This function is called by:
 12774 ;;		_USBCtrlEPService
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778                           	psect	text49
 12779  0054D4                     __ptext49:
 12780                           	opt stack 0
 12781  0054D4                     _USBCtrlTrfOutHandler:
 12782                           	opt stack 12
 12783                           
 12784                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;incstack = 0
 12788  0054D4  0E02               	movlw	2
 12789  0054D6  0100               	movlb	0	; () banked
 12790  0054D8  19CA               	xorwf	_controlTransferState& (0+255),w,b
 12791  0054DA  A4D8               	btfss	status,2,c
 12792  0054DC  D003               	goto	l1785
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;usb_device.c: 2558: {
 12796                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12797  0054DE  EC30  F018         	call	_USBCtrlTrfRxService	;wreg free
 12798                           
 12799                           ;usb_device.c: 2560: }
 12800  0054E2  0012               	return	
 12801  0054E4                     l1785:
 12802                           
 12803                           ;usb_device.c: 2561: else
 12804                           ;usb_device.c: 2562: {
 12805                           ;usb_device.c: 2565: controlTransferState = 0;
 12806  0054E4  0E00               	movlw	0
 12807  0054E6  0100               	movlb	0	; () banked
 12808  0054E8  6FCA               	movwf	_controlTransferState& (0+255),b
 12809                           
 12810                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12811  0054EA  0101               	movlb	1	; () banked
 12812  0054EC  51E1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12813  0054EE  A4D8               	btfss	status,2,c
 12814  0054F0  D020               	goto	l1787
 12815                           
 12816                           ; BSR set to: 1
 12817                           ;usb_device.c: 2573: {
 12818                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12819  0054F2  0100               	movlb	0	; () banked
 12820  0054F4  EE20 F001          	lfsr	2,1
 12821  0054F8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12822  0054FA  26D9               	addwf	fsr2l,f,c
 12823  0054FC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12824  0054FE  22DA               	addwfc	fsr2h,f,c
 12825  005500  0E08               	movlw	8
 12826  005502  6EDF               	movwf	indf2,c
 12827                           
 12828                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12829  005504  EE20 F002          	lfsr	2,2
 12830  005508  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12831  00550A  26D9               	addwf	fsr2l,f,c
 12832  00550C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12833  00550E  22DA               	addwfc	fsr2h,f,c
 12834  005510  0E30               	movlw	48
 12835  005512  6EDE               	movwf	postinc2,c
 12836  005514  0E04               	movlw	4
 12837  005516  6EDD               	movwf	postdec2,c
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12841  005518  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12842  00551C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12843  005520  0E0C               	movlw	12
 12844  005522  6EDF               	movwf	indf2,c
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12848  005524  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12849  005528  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12850  00552C  0E00               	movlw	0
 12851  00552E  8EDB               	bsf	plusw2,7,c
 12852                           
 12853                           ;usb_device.c: 2578: }
 12854  005530  0012               	return	
 12855  005532                     l1787:
 12856                           
 12857                           ;usb_device.c: 2579: else
 12858                           ;usb_device.c: 2580: {
 12859                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12860                           
 12861                           ; BSR set to: 0
 12862  005532  0E00               	movlw	0
 12863  005534  0101               	movlb	1	; () banked
 12864  005536  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12865                           
 12866                           ; BSR set to: 1
 12867  005538  0012               	return	
 12868  00553A                     __end_of_USBCtrlTrfOutHandler:
 12869                           	opt stack 0
 12870                           tosu	equ	0xFFF
 12871                           tosh	equ	0xFFE
 12872                           tosl	equ	0xFFD
 12873                           pclath	equ	0xFFA
 12874                           tblptru	equ	0xFF8
 12875                           tblptrh	equ	0xFF7
 12876                           tblptrl	equ	0xFF6
 12877                           tablat	equ	0xFF5
 12878                           prodh	equ	0xFF4
 12879                           prodl	equ	0xFF3
 12880                           intcon	equ	0xFF2
 12881                           intcon2	equ	0xFF1
 12882                           intcon3	equ	0xFF0
 12883                           indf0	equ	0xFEF
 12884                           postinc0	equ	0xFEE
 12885                           plusw0	equ	0xFEB
 12886                           fsr0h	equ	0xFEA
 12887                           fsr0l	equ	0xFE9
 12888                           wreg	equ	0xFE8
 12889                           postinc1	equ	0xFE6
 12890                           postdec1	equ	0xFE5
 12891                           fsr1h	equ	0xFE2
 12892                           fsr1l	equ	0xFE1
 12893                           indf2	equ	0xFDF
 12894                           postinc2	equ	0xFDE
 12895                           postdec2	equ	0xFDD
 12896                           plusw2	equ	0xFDB
 12897                           fsr2h	equ	0xFDA
 12898                           fsr2l	equ	0xFD9
 12899                           status	equ	0xFD8
 12900                           
 12901 ;; *************** function _USBCtrlTrfRxService *****************
 12902 ;; Defined at:
 12903 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12904 ;; Parameters:    Size  Location     Type
 12905 ;;		None
 12906 ;; Auto vars:     Size  Location     Type
 12907 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12908 ;;  i               1   29[BANK0 ] unsigned char 
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      void 
 12911 ;; Registers used:
 12912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12921 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12922 ;;Total ram usage:        2 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:   12
 12925 ;; This function calls:
 12926 ;;		_USBCtrlEPAllowStatusStage
 12927 ;; This function is called by:
 12928 ;;		_USBCtrlTrfOutHandler
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           	psect	text50
 12933  003060                     __ptext50:
 12934                           	opt stack 0
 12935  003060                     _USBCtrlTrfRxService:
 12936                           	opt stack 12
 12937                           
 12938                           ;usb_device.c: 1872: uint8_t byteToRead;
 12939                           ;usb_device.c: 1873: uint8_t i;
 12940                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12941                           
 12942                           ;incstack = 0
 12943  003060  0100               	movlb	0	; () banked
 12944  003062  EE20 F001          	lfsr	2,1
 12945  003066  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12946  003068  26D9               	addwf	fsr2l,f,c
 12947  00306A  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12948  00306C  22DA               	addwfc	fsr2h,f,c
 12949  00306E  50DF               	movf	indf2,w,c
 12950  003070  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12954  003072  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12955  003074  0101               	movlb	1	; () banked
 12956  003076  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12957  003078  0E00               	movlw	0
 12958  00307A  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12959  00307C  A0D8               	btfss	status,0,c
 12960                           
 12961                           ; BSR set to: 1
 12962                           ;usb_device.c: 1884: {
 12963                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12964  00307E  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12965                           
 12966                           ; BSR set to: 1
 12967                           ;usb_device.c: 1886: }
 12968                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12969                           
 12970                           ; BSR set to: 1
 12971  003082  0100               	movlb	0	; () banked
 12972  003084  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12973  003086  0101               	movlb	1	; () banked
 12974  003088  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12975  00308A  0E00               	movlw	0
 12976  00308C  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12977                           
 12978                           ; BSR set to: 1
 12979                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12980  00308E  0E00               	movlw	0
 12981  003090  0100               	movlb	0	; () banked
 12982  003092  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12983  003094  D013               	goto	l1713
 12984  003096                     
 12985                           ; BSR set to: 0
 12986                           ;usb_device.c: 1893: {
 12987                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12988                           
 12989                           ; BSR set to: 0
 12990  003096  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12991  003098  0D01               	mullw	1
 12992  00309A  0E38               	movlw	56
 12993  00309C  24F3               	addwf	prodl,w,c
 12994  00309E  6ED9               	movwf	fsr2l,c
 12995  0030A0  0E04               	movlw	4
 12996  0030A2  20F4               	addwfc	prodh,w,c
 12997  0030A4  6EDA               	movwf	fsr2h,c
 12998  0030A6  C1C9  FFE1         	movff	_outPipes,fsr1l
 12999  0030AA  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 13000  0030AE  CFDF FFE7          	movff	indf2,indf1
 13001                           
 13002                           ; BSR set to: 0
 13003  0030B2  0101               	movlb	1	; () banked
 13004  0030B4  4BC9               	infsnz	_outPipes& (0+255),f,b
 13005  0030B6  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 13006                           
 13007                           ; BSR set to: 1
 13008  0030B8  0100               	movlb	0	; () banked
 13009  0030BA  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 13010  0030BC                     l1713:
 13011                           
 13012                           ; BSR set to: 0
 13013                           
 13014                           ; BSR set to: 0
 13015  0030BC  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 13016  0030BE  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 13017  0030C0  A0D8               	btfss	status,0,c
 13018  0030C2  D7E9               	goto	l1714
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;usb_device.c: 1895: }
 13022                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 13023                           
 13024                           ; BSR set to: 0
 13025  0030C4  0101               	movlb	1	; () banked
 13026  0030C6  51CD               	movf	(_outPipes+4)& (0+255),w,b
 13027  0030C8  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 13028  0030CA  B4D8               	btfsc	status,2,c
 13029  0030CC  D033               	goto	l1716
 13030                           
 13031                           ; BSR set to: 1
 13032                           ;usb_device.c: 1900: {
 13033                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 13034  0030CE  0100               	movlb	0	; () banked
 13035  0030D0  EE20 F001          	lfsr	2,1
 13036  0030D4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13037  0030D6  26D9               	addwf	fsr2l,f,c
 13038  0030D8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13039  0030DA  22DA               	addwfc	fsr2h,f,c
 13040  0030DC  0E08               	movlw	8
 13041  0030DE  6EDF               	movwf	indf2,c
 13042                           
 13043                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13044  0030E0  EE20 F002          	lfsr	2,2
 13045  0030E4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13046  0030E6  26D9               	addwf	fsr2l,f,c
 13047  0030E8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13048  0030EA  22DA               	addwfc	fsr2h,f,c
 13049  0030EC  0E38               	movlw	56
 13050  0030EE  6EDE               	movwf	postinc2,c
 13051  0030F0  0E04               	movlw	4
 13052  0030F2  6EDD               	movwf	postdec2,c
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 13056  0030F4  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13057  0030F8  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13058  0030FC  BCDF               	btfsc	indf2,6,c
 13059  0030FE  D00D               	goto	l1717
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;usb_device.c: 1904: {
 13063                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13064  003100  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13065  003104  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13066  003108  0E48               	movlw	72
 13067  00310A  6EDF               	movwf	indf2,c
 13068                           
 13069                           ; BSR set to: 0
 13070                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13071  00310C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13072  003110  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13073  003114  0E00               	movlw	0
 13074  003116  8EDB               	bsf	plusw2,7,c
 13075                           
 13076                           ;usb_device.c: 1907: }
 13077  003118  0012               	return	
 13078  00311A                     l1717:
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;usb_device.c: 1908: else
 13082                           ;usb_device.c: 1909: {
 13083                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 13084                           
 13085                           ; BSR set to: 0
 13086  00311A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13087  00311E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13088  003122  0E08               	movlw	8
 13089  003124  6EDF               	movwf	indf2,c
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13093  003126  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13094  00312A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13095  00312E  0E00               	movlw	0
 13096  003130  8EDB               	bsf	plusw2,7,c
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;usb_device.c: 1912: }
 13100                           ;usb_device.c: 1913: }
 13101  003132  0012               	return	
 13102  003134                     l1716:
 13103                           
 13104                           ;usb_device.c: 1914: else
 13105                           ;usb_device.c: 1915: {
 13106                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 13107                           
 13108                           ; BSR set to: 0
 13109  003134  0100               	movlb	0	; () banked
 13110  003136  EE20 F001          	lfsr	2,1
 13111  00313A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13112  00313C  26D9               	addwf	fsr2l,f,c
 13113  00313E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13114  003140  22DA               	addwfc	fsr2h,f,c
 13115  003142  0E08               	movlw	8
 13116  003144  6EDF               	movwf	indf2,c
 13117                           
 13118                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13119  003146  EE20 F002          	lfsr	2,2
 13120  00314A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13121  00314C  26D9               	addwf	fsr2l,f,c
 13122  00314E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13123  003150  22DA               	addwfc	fsr2h,f,c
 13124  003152  0E30               	movlw	48
 13125  003154  6EDE               	movwf	postinc2,c
 13126  003156  0E04               	movlw	4
 13127  003158  6EDD               	movwf	postdec2,c
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13131  00315A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13132  00315E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13133  003162  0E04               	movlw	4
 13134  003164  6EDF               	movwf	indf2,c
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13138  003166  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13139  00316A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13140  00316E  0E00               	movlw	0
 13141  003170  8EDB               	bsf	plusw2,7,c
 13142                           
 13143                           ; BSR set to: 0
 13144                           ;usb_device.c: 1944: }
 13145                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 13146                           
 13147                           ; BSR set to: 0
 13148  003172  0101               	movlb	1	; () banked
 13149  003174  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13150                           
 13151                           ; BSR set to: 1
 13152                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 13153  003176  0100               	movlb	0	; () banked
 13154  003178  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13155  00317A  A4D8               	btfss	status,2,c
 13156  00317C  0012               	return	
 13157                           
 13158                           ; BSR set to: 0
 13159                           ;usb_device.c: 1960: {
 13160                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 13161  00317E  EC91  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13162  003182  0012               	return	
 13163  003184                     __end_of_USBCtrlTrfRxService:
 13164                           	opt stack 0
 13165                           tosu	equ	0xFFF
 13166                           tosh	equ	0xFFE
 13167                           tosl	equ	0xFFD
 13168                           pclath	equ	0xFFA
 13169                           tblptru	equ	0xFF8
 13170                           tblptrh	equ	0xFF7
 13171                           tblptrl	equ	0xFF6
 13172                           tablat	equ	0xFF5
 13173                           prodh	equ	0xFF4
 13174                           prodl	equ	0xFF3
 13175                           intcon	equ	0xFF2
 13176                           intcon2	equ	0xFF1
 13177                           intcon3	equ	0xFF0
 13178                           indf0	equ	0xFEF
 13179                           postinc0	equ	0xFEE
 13180                           plusw0	equ	0xFEB
 13181                           fsr0h	equ	0xFEA
 13182                           fsr0l	equ	0xFE9
 13183                           wreg	equ	0xFE8
 13184                           indf1	equ	0xFE7
 13185                           postinc1	equ	0xFE6
 13186                           postdec1	equ	0xFE5
 13187                           fsr1h	equ	0xFE2
 13188                           fsr1l	equ	0xFE1
 13189                           indf2	equ	0xFDF
 13190                           postinc2	equ	0xFDE
 13191                           postdec2	equ	0xFDD
 13192                           plusw2	equ	0xFDB
 13193                           fsr2h	equ	0xFDA
 13194                           fsr2l	equ	0xFD9
 13195                           status	equ	0xFD8
 13196                           
 13197 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 13198 ;; Defined at:
 13199 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13200 ;; Parameters:    Size  Location     Type
 13201 ;;		None
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;		None
 13204 ;; Return value:  Size  Location     Type
 13205 ;;                  1    wreg      void 
 13206 ;; Registers used:
 13207 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13208 ;; Tracked objects:
 13209 ;;		On entry : 0/0
 13210 ;;		On exit  : 0/0
 13211 ;;		Unchanged: 0/0
 13212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13217 ;;Total ram usage:        0 bytes
 13218 ;; Hardware stack levels used:    1
 13219 ;; Hardware stack levels required when called:   11
 13220 ;; This function calls:
 13221 ;;		Nothing
 13222 ;; This function is called by:
 13223 ;;		_USBDeviceTasks
 13224 ;;		_USBCtrlEPServiceComplete
 13225 ;;		_USBCtrlTrfRxService
 13226 ;; This function uses a non-reentrant model
 13227 ;;
 13228                           
 13229                           	psect	text51
 13230  003D22                     __ptext51:
 13231                           	opt stack 0
 13232  003D22                     _USBCtrlEPAllowStatusStage:
 13233                           	opt stack 12
 13234                           
 13235                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 13236                           
 13237                           ;incstack = 0
 13238  003D22  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 13239  003D24  A4D8               	btfss	status,2,c
 13240  003D26  0012               	return	
 13241                           
 13242                           ;usb_device.c: 1442: {
 13243                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 13244  003D28  0E01               	movlw	1
 13245  003D2A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13246                           
 13247                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 13248  003D2C  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 13249  003D2E  A4D8               	btfss	status,2,c
 13250  003D30  0012               	return	
 13251                           
 13252                           ;usb_device.c: 1445: {
 13253                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 13254  003D32  0E01               	movlw	1
 13255  003D34  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13256                           
 13257                           ;usb_device.c: 1450: if(controlTransferState == 2)
 13258  003D36  0E02               	movlw	2
 13259  003D38  0100               	movlb	0	; () banked
 13260  003D3A  19CA               	xorwf	_controlTransferState& (0+255),w,b
 13261  003D3C  A4D8               	btfss	status,2,c
 13262  003D3E  D015               	goto	l1667
 13263                           
 13264                           ; BSR set to: 0
 13265                           ;usb_device.c: 1451: {
 13266                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 13267  003D40  EE20 F001          	lfsr	2,1
 13268  003D44  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13269  003D46  26D9               	addwf	fsr2l,f,c
 13270  003D48  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13271  003D4A  22DA               	addwfc	fsr2h,f,c
 13272  003D4C  0E00               	movlw	0
 13273  003D4E  6EDF               	movwf	indf2,c
 13274                           
 13275                           ; BSR set to: 0
 13276                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13277  003D50  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13278  003D54  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13279  003D58  0E48               	movlw	72
 13280  003D5A  6EDF               	movwf	indf2,c
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13284  003D5C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13285  003D60  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13286  003D64  0E00               	movlw	0
 13287  003D66  8EDB               	bsf	plusw2,7,c
 13288                           
 13289                           ;usb_device.c: 1455: }
 13290  003D68  0012               	return	
 13291  003D6A                     l1667:
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 13295                           
 13296                           ; BSR set to: 0
 13297  003D6A  05CA               	decf	_controlTransferState& (0+255),w,b
 13298  003D6C  A4D8               	btfss	status,2,c
 13299  003D6E  0012               	return	
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;usb_device.c: 1457: {
 13303                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 13304  003D70  0E00               	movlw	0
 13305  003D72  0101               	movlb	1	; () banked
 13306  003D74  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13307                           
 13308                           ; BSR set to: 1
 13309                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 13310  003D76  0100               	movlb	0	; () banked
 13311  003D78  EE20 F001          	lfsr	2,1
 13312  003D7C  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13313  003D7E  26D9               	addwf	fsr2l,f,c
 13314  003D80  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13315  003D82  22DA               	addwfc	fsr2h,f,c
 13316  003D84  0E08               	movlw	8
 13317  003D86  6EDF               	movwf	indf2,c
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 13321  003D88  EE20 F002          	lfsr	2,2
 13322  003D8C  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13323  003D8E  26D9               	addwf	fsr2l,f,c
 13324  003D90  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13325  003D92  22DA               	addwfc	fsr2h,f,c
 13326  003D94  0E30               	movlw	48
 13327  003D96  6EDE               	movwf	postinc2,c
 13328  003D98  0E04               	movlw	4
 13329  003D9A  6EDD               	movwf	postdec2,c
 13330                           
 13331                           ; BSR set to: 0
 13332                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 13333  003D9C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13334  003DA0  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13335  003DA4  0E04               	movlw	4
 13336  003DA6  6EDF               	movwf	indf2,c
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13340  003DA8  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13341  003DAC  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13342  003DB0  0E00               	movlw	0
 13343  003DB2  8EDB               	bsf	plusw2,7,c
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 13347  003DB4  0E01               	movlw	1
 13348  003DB6  0101               	movlb	1	; () banked
 13349  003DB8  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13350                           
 13351                           ; BSR set to: 1
 13352                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 13353  003DBA  0100               	movlb	0	; () banked
 13354  003DBC  EE20 F001          	lfsr	2,1
 13355  003DC0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13356  003DC2  26D9               	addwf	fsr2l,f,c
 13357  003DC4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13358  003DC6  22DA               	addwfc	fsr2h,f,c
 13359  003DC8  0E08               	movlw	8
 13360  003DCA  6EDF               	movwf	indf2,c
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13364  003DCC  EE20 F002          	lfsr	2,2
 13365  003DD0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13366  003DD2  26D9               	addwf	fsr2l,f,c
 13367  003DD4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13368  003DD6  22DA               	addwfc	fsr2h,f,c
 13369  003DD8  0E30               	movlw	48
 13370  003DDA  6EDE               	movwf	postinc2,c
 13371  003DDC  0E04               	movlw	4
 13372  003DDE  6EDD               	movwf	postdec2,c
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 13376  003DE0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13377  003DE4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13378  003DE8  0E80               	movlw	128
 13379  003DEA  6EDF               	movwf	indf2,c
 13380                           
 13381                           ; BSR set to: 0
 13382                           
 13383                           ; BSR set to: 0
 13384                           
 13385                           ; BSR set to: 0
 13386  003DEC  0012               	return	
 13387  003DEE                     __end_of_USBCtrlEPAllowStatusStage:
 13388                           	opt stack 0
 13389                           tosu	equ	0xFFF
 13390                           tosh	equ	0xFFE
 13391                           tosl	equ	0xFFD
 13392                           pclath	equ	0xFFA
 13393                           tblptru	equ	0xFF8
 13394                           tblptrh	equ	0xFF7
 13395                           tblptrl	equ	0xFF6
 13396                           tablat	equ	0xFF5
 13397                           prodh	equ	0xFF4
 13398                           prodl	equ	0xFF3
 13399                           intcon	equ	0xFF2
 13400                           intcon2	equ	0xFF1
 13401                           intcon3	equ	0xFF0
 13402                           indf0	equ	0xFEF
 13403                           postinc0	equ	0xFEE
 13404                           plusw0	equ	0xFEB
 13405                           fsr0h	equ	0xFEA
 13406                           fsr0l	equ	0xFE9
 13407                           wreg	equ	0xFE8
 13408                           indf1	equ	0xFE7
 13409                           postinc1	equ	0xFE6
 13410                           postdec1	equ	0xFE5
 13411                           fsr1h	equ	0xFE2
 13412                           fsr1l	equ	0xFE1
 13413                           indf2	equ	0xFDF
 13414                           postinc2	equ	0xFDE
 13415                           postdec2	equ	0xFDD
 13416                           plusw2	equ	0xFDB
 13417                           fsr2h	equ	0xFDA
 13418                           fsr2l	equ	0xFD9
 13419                           status	equ	0xFD8
 13420                           
 13421 ;; *************** function _USBCtrlTrfInHandler *****************
 13422 ;; Defined at:
 13423 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13424 ;; Parameters:    Size  Location     Type
 13425 ;;		None
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 13428 ;; Return value:  Size  Location     Type
 13429 ;;                  1    wreg      void 
 13430 ;; Registers used:
 13431 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13440 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13441 ;;Total ram usage:        1 bytes
 13442 ;; Hardware stack levels used:    1
 13443 ;; Hardware stack levels required when called:   12
 13444 ;; This function calls:
 13445 ;;		_USBCtrlTrfTxService
 13446 ;; This function is called by:
 13447 ;;		_USBCtrlEPService
 13448 ;; This function uses a non-reentrant model
 13449 ;;
 13450                           
 13451                           	psect	text52
 13452  0041D4                     __ptext52:
 13453                           	opt stack 0
 13454  0041D4                     _USBCtrlTrfInHandler:
 13455                           	opt stack 13
 13456                           
 13457                           ;usb_device.c: 2611: uint8_t lastDTS;
 13458                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13459                           
 13460                           ;incstack = 0
 13461  0041D4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13462  0041D8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13463  0041DC  0100               	movlb	0	; () banked
 13464  0041DE  0E00               	movlw	0
 13465  0041E0  BCDF               	btfsc	indf2,6,c
 13466  0041E2  0E01               	movlw	1
 13467  0041E4  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13471  0041E6  0E04               	movlw	4
 13472  0041E8  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13476  0041EA  0E08               	movlw	8
 13477  0041EC  19CC               	xorwf	_USBDeviceState& (0+255),w,b
 13478  0041EE  A4D8               	btfss	status,2,c
 13479  0041F0  D00D               	goto	l1794
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;usb_device.c: 2622: {
 13483                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13484  0041F2  0104               	movlb	4	; () banked
 13485  0041F4  5132               	movf	50,w,b	;volatile
 13486  0041F6  0B7F               	andlw	127
 13487  0041F8  010F               	movlb	15	; () banked
 13488  0041FA  6F38               	movwf	56,b	;volatile
 13489                           
 13490                           ; BSR set to: 15
 13491                           ;usb_device.c: 2624: if(UADDR != 0u)
 13492  0041FC  5138               	movf	56,w,b	;volatile
 13493  0041FE  B4D8               	btfsc	status,2,c
 13494  004200  D002               	goto	l1793
 13495                           
 13496                           ; BSR set to: 15
 13497                           ;usb_device.c: 2625: {
 13498                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13499  004202  0E10               	movlw	16
 13500  004204  D001               	goto	L11
 13501  004206                     l1793:
 13502                           
 13503                           ;usb_device.c: 2628: else
 13504                           ;usb_device.c: 2629: {
 13505                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13506                           
 13507                           ; BSR set to: 0
 13508  004206  0E04               	movlw	4
 13509  004208                     L11:
 13510  004208  0100               	movlb	0	; () banked
 13511  00420A  6FCC               	movwf	_USBDeviceState& (0+255),b
 13512  00420C                     l1794:
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;usb_device.c: 2631: }
 13516                           ;usb_device.c: 2632: }
 13517                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13518                           
 13519                           ; BSR set to: 0
 13520                           
 13521                           ; BSR set to: 0
 13522  00420C  05CA               	decf	_controlTransferState& (0+255),w,b
 13523  00420E  A4D8               	btfss	status,2,c
 13524  004210  D03B               	goto	l1795
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;usb_device.c: 2636: {
 13528                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13529  004212  EE20 F002          	lfsr	2,2
 13530  004216  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13531  004218  26D9               	addwf	fsr2l,f,c
 13532  00421A  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13533  00421C  22DA               	addwfc	fsr2h,f,c
 13534  00421E  0E38               	movlw	56
 13535  004220  6EDE               	movwf	postinc2,c
 13536  004222  0E04               	movlw	4
 13537  004224  6EDD               	movwf	postdec2,c
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13541  004226  EC83  F01C         	call	_USBCtrlTrfTxService	;wreg free
 13542                           
 13543                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13544  00422A  0E02               	movlw	2
 13545  00422C  0100               	movlb	0	; () banked
 13546  00422E  19CB               	xorwf	_shortPacketStatus& (0+255),w,b
 13547  004230  A4D8               	btfss	status,2,c
 13548  004232  D00D               	goto	l1796
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;usb_device.c: 2645: {
 13552                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13553  004234  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13554  004238  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13555  00423C  0E04               	movlw	4
 13556  00423E  6EDF               	movwf	indf2,c
 13557                           
 13558                           ; BSR set to: 0
 13559                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13560  004240  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13561  004244  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13562  004248  0E00               	movlw	0
 13563  00424A  8EDB               	bsf	plusw2,7,c
 13564                           
 13565                           ;usb_device.c: 2650: }
 13566  00424C  0012               	return	
 13567  00424E                     l1796:
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;usb_device.c: 2651: else
 13571                           ;usb_device.c: 2652: {
 13572                           ;usb_device.c: 2653: if(lastDTS == 0)
 13573                           
 13574                           ; BSR set to: 0
 13575  00424E  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13576  004250  A4D8               	btfss	status,2,c
 13577  004252  D00D               	goto	l1798
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;usb_device.c: 2654: {
 13581                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13582  004254  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13583  004258  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13584  00425C  0E48               	movlw	72
 13585  00425E  6EDF               	movwf	indf2,c
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13589  004260  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13590  004264  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13591  004268  0E00               	movlw	0
 13592  00426A  8EDB               	bsf	plusw2,7,c
 13593                           
 13594                           ;usb_device.c: 2657: }
 13595  00426C  0012               	return	
 13596  00426E                     l1798:
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;usb_device.c: 2658: else
 13600                           ;usb_device.c: 2659: {
 13601                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13602                           
 13603                           ; BSR set to: 0
 13604  00426E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13605  004272  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13606  004276  0E08               	movlw	8
 13607  004278  6EDF               	movwf	indf2,c
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13611  00427A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13612  00427E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13613  004282  0E00               	movlw	0
 13614  004284  8EDB               	bsf	plusw2,7,c
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;usb_device.c: 2662: }
 13618                           ;usb_device.c: 2663: }
 13619                           ;usb_device.c: 2664: }
 13620                           
 13621                           ; BSR set to: 0
 13622  004286  0012               	return	
 13623  004288                     l1795:
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;usb_device.c: 2665: else
 13627                           ;usb_device.c: 2666: {
 13628                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13629  004288  0101               	movlb	1	; () banked
 13630  00428A  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13631                           
 13632                           ; BSR set to: 1
 13633                           ;usb_device.c: 2675: }
 13634                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13635                           
 13636                           ; BSR set to: 1
 13637  00428C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13638                           
 13639                           ; BSR set to: 1
 13640                           ;usb_device.c: 2677: }
 13641                           ;usb_device.c: 2679: controlTransferState = 0;
 13642                           
 13643                           ; BSR set to: 1
 13644  00428E  0E00               	movlw	0
 13645  004290  0100               	movlb	0	; () banked
 13646  004292  6FCA               	movwf	_controlTransferState& (0+255),b
 13647  004294  0012               	return	
 13648  004296                     __end_of_USBCtrlTrfInHandler:
 13649                           	opt stack 0
 13650                           tosu	equ	0xFFF
 13651                           tosh	equ	0xFFE
 13652                           tosl	equ	0xFFD
 13653                           pclath	equ	0xFFA
 13654                           tblptru	equ	0xFF8
 13655                           tblptrh	equ	0xFF7
 13656                           tblptrl	equ	0xFF6
 13657                           tablat	equ	0xFF5
 13658                           prodh	equ	0xFF4
 13659                           prodl	equ	0xFF3
 13660                           intcon	equ	0xFF2
 13661                           intcon2	equ	0xFF1
 13662                           intcon3	equ	0xFF0
 13663                           indf0	equ	0xFEF
 13664                           postinc0	equ	0xFEE
 13665                           plusw0	equ	0xFEB
 13666                           fsr0h	equ	0xFEA
 13667                           fsr0l	equ	0xFE9
 13668                           wreg	equ	0xFE8
 13669                           indf1	equ	0xFE7
 13670                           postinc1	equ	0xFE6
 13671                           postdec1	equ	0xFE5
 13672                           fsr1h	equ	0xFE2
 13673                           fsr1l	equ	0xFE1
 13674                           indf2	equ	0xFDF
 13675                           postinc2	equ	0xFDE
 13676                           postdec2	equ	0xFDD
 13677                           plusw2	equ	0xFDB
 13678                           fsr2h	equ	0xFDA
 13679                           fsr2l	equ	0xFD9
 13680                           status	equ	0xFD8
 13681                           
 13682 ;; *************** function _USBCtrlTrfTxService *****************
 13683 ;; Defined at:
 13684 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13685 ;; Parameters:    Size  Location     Type
 13686 ;;		None
 13687 ;; Auto vars:     Size  Location     Type
 13688 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13689 ;; Return value:  Size  Location     Type
 13690 ;;                  1    wreg      void 
 13691 ;; Registers used:
 13692 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13693 ;; Tracked objects:
 13694 ;;		On entry : 0/0
 13695 ;;		On exit  : 0/0
 13696 ;;		Unchanged: 0/0
 13697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13701 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13702 ;;Total ram usage:        1 bytes
 13703 ;; Hardware stack levels used:    1
 13704 ;; Hardware stack levels required when called:   11
 13705 ;; This function calls:
 13706 ;;		Nothing
 13707 ;; This function is called by:
 13708 ;;		_USBCtrlEPAllowDataStage
 13709 ;;		_USBCtrlTrfInHandler
 13710 ;; This function uses a non-reentrant model
 13711 ;;
 13712                           
 13713                           	psect	text53
 13714  003906                     __ptext53:
 13715                           	opt stack 0
 13716  003906                     _USBCtrlTrfTxService:
 13717                           	opt stack 11
 13718                           
 13719                           ;usb_device.c: 1791: uint8_t byteToSend;
 13720                           ;usb_device.c: 1795: byteToSend = 8;
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;incstack = 0
 13724  003906  0E08               	movlw	8
 13725  003908  0100               	movlb	0	; () banked
 13726  00390A  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13730  00390C  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13731  00390E  E110               	bnz	l12741
 13732  003910  0E08               	movlw	8
 13733  003912  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13734  003914  B0D8               	btfsc	status,0,c
 13735  003916  D00C               	goto	l1700
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;usb_device.c: 1797: {
 13739                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13740  003918  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13744  00391C  51CB               	movf	_shortPacketStatus& (0+255),w,b
 13745  00391E  A4D8               	btfss	status,2,c
 13746  003920  D002               	goto	l1698
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;usb_device.c: 1806: {
 13750                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13751  003922  0E01               	movlw	1
 13752  003924  D004               	goto	L12
 13753  003926                     l1698:
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13757                           
 13758                           ; BSR set to: 0
 13759  003926  05CB               	decf	_shortPacketStatus& (0+255),w,b
 13760  003928  A4D8               	btfss	status,2,c
 13761  00392A  D002               	goto	l1700
 13762                           
 13763                           ; BSR set to: 0
 13764                           ;usb_device.c: 1810: {
 13765                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13766  00392C  0E02               	movlw	2
 13767  00392E                     L12:
 13768  00392E  6FCB               	movwf	_shortPacketStatus& (0+255),b
 13769  003930                     l1700:
 13770  003930                     l12741:
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;usb_device.c: 1812: }
 13774                           ;usb_device.c: 1813: }
 13775                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13776  003930  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13777  003932  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13778  003934  0E00               	movlw	0
 13779  003936  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13780                           
 13781                           ; BSR set to: 0
 13782                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13783  003938  EE20 F001          	lfsr	2,1
 13784  00393C  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13785  00393E  26D9               	addwf	fsr2l,f,c
 13786  003940  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13787  003942  22DA               	addwfc	fsr2h,f,c
 13788  003944  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13792  003948  0E38               	movlw	56
 13793  00394A  0102               	movlb	2	; () banked
 13794  00394C  6FD4               	movwf	_pDst& (0+255),b
 13795  00394E  0E04               	movlw	4
 13796  003950  6FD5               	movwf	(_pDst+1)& (0+255),b
 13797                           
 13798                           ; BSR set to: 2
 13799                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13800  003952  0100               	movlb	0	; () banked
 13801  003954  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13802  003956  D01E               	goto	l1702
 13803  003958  D03E               	goto	l1706
 13804  00395A                     
 13805                           ; BSR set to: 0
 13806                           ;usb_device.c: 1830: {
 13807                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13808                           
 13809                           ; BSR set to: 0
 13810  00395A  C0B0  FFF6         	movff	_inPipes,tblptrl
 13811  00395E  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13812  003962  6AF8               	clrf	tblptru,c
 13813  003964  C2D4  FFD9         	movff	_pDst,fsr2l
 13814  003968  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13815  00396C  0E0E               	movlw	(high __ramtop+-1)
 13816  00396E  64F7               	cpfsgt	tblptrh,c
 13817  003970  D003               	bra	u11477
 13818  003972  0008               	tblrd		*
 13819  003974  50F5               	movf	tablat,w,c
 13820  003976  D005               	bra	u11470
 13821  003978                     u11477:
 13822  003978  CFF6 FFE9          	movff	tblptrl,fsr0l
 13823  00397C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13824  003980  50EF               	movf	indf0,w,c
 13825  003982                     u11470:
 13826  003982  6EDF               	movwf	indf2,c
 13827  003984  0100               	movlb	0	; () banked
 13828  003986  4BB0               	infsnz	_inPipes& (0+255),f,b
 13829  003988  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13830                           
 13831                           ; BSR set to: 0
 13832  00398A  0102               	movlb	2	; () banked
 13833  00398C  4BD4               	infsnz	_pDst& (0+255),f,b
 13834  00398E  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13835                           
 13836                           ; BSR set to: 2
 13837                           ;usb_device.c: 1832: byteToSend--;
 13838  003990  0100               	movlb	0	; () banked
 13839  003992  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13840  003994                     l1702:
 13841                           
 13842                           ; BSR set to: 0
 13843                           
 13844                           ; BSR set to: 0
 13845  003994  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13846  003996  B4D8               	btfsc	status,2,c
 13847  003998  0012               	return	
 13848  00399A  D7DF               	goto	l1703
 13849  00399C                     
 13850                           ; BSR set to: 0
 13851                           ;usb_device.c: 1838: {
 13852                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13853                           
 13854                           ; BSR set to: 0
 13855  00399C  C0B0  FFF6         	movff	_inPipes,tblptrl
 13856  0039A0  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13857  0039A4  6AF8               	clrf	tblptru,c
 13858  0039A6  C2D4  FFD9         	movff	_pDst,fsr2l
 13859  0039AA  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13860  0039AE  0E0E               	movlw	(high __ramtop+-1)
 13861  0039B0  64F7               	cpfsgt	tblptrh,c
 13862  0039B2  D003               	bra	u11497
 13863  0039B4  0008               	tblrd		*
 13864  0039B6  50F5               	movf	tablat,w,c
 13865  0039B8  D005               	bra	u11490
 13866  0039BA                     u11497:
 13867  0039BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13868  0039BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13869  0039C2  50EF               	movf	indf0,w,c
 13870  0039C4                     u11490:
 13871  0039C4  6EDF               	movwf	indf2,c
 13872  0039C6  0100               	movlb	0	; () banked
 13873  0039C8  4BB0               	infsnz	_inPipes& (0+255),f,b
 13874  0039CA  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13875                           
 13876                           ; BSR set to: 0
 13877  0039CC  0102               	movlb	2	; () banked
 13878  0039CE  4BD4               	infsnz	_pDst& (0+255),f,b
 13879  0039D0  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13880                           
 13881                           ; BSR set to: 2
 13882                           ;usb_device.c: 1840: byteToSend--;
 13883  0039D2  0100               	movlb	0	; () banked
 13884  0039D4  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13885  0039D6                     l1706:
 13886                           
 13887                           ; BSR set to: 0
 13888                           
 13889                           ; BSR set to: 0
 13890  0039D6  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13891  0039D8  B4D8               	btfsc	status,2,c
 13892  0039DA  0012               	return	
 13893  0039DC  D7DF               	goto	l1707
 13894  0039DE                     __end_of_USBCtrlTrfTxService:
 13895                           	opt stack 0
 13896                           tosu	equ	0xFFF
 13897                           tosh	equ	0xFFE
 13898                           tosl	equ	0xFFD
 13899                           pclath	equ	0xFFA
 13900                           tblptru	equ	0xFF8
 13901                           tblptrh	equ	0xFF7
 13902                           tblptrl	equ	0xFF6
 13903                           tablat	equ	0xFF5
 13904                           prodh	equ	0xFF4
 13905                           prodl	equ	0xFF3
 13906                           intcon	equ	0xFF2
 13907                           intcon2	equ	0xFF1
 13908                           intcon3	equ	0xFF0
 13909                           indf0	equ	0xFEF
 13910                           postinc0	equ	0xFEE
 13911                           plusw0	equ	0xFEB
 13912                           fsr0h	equ	0xFEA
 13913                           fsr0l	equ	0xFE9
 13914                           wreg	equ	0xFE8
 13915                           indf1	equ	0xFE7
 13916                           postinc1	equ	0xFE6
 13917                           postdec1	equ	0xFE5
 13918                           fsr1h	equ	0xFE2
 13919                           fsr1l	equ	0xFE1
 13920                           indf2	equ	0xFDF
 13921                           postinc2	equ	0xFDE
 13922                           postdec2	equ	0xFDD
 13923                           plusw2	equ	0xFDB
 13924                           fsr2h	equ	0xFDA
 13925                           fsr2l	equ	0xFD9
 13926                           status	equ	0xFD8
 13927                           
 13928 ;; *************** function _CDCTxService *****************
 13929 ;; Defined at:
 13930 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;		None
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13935 ;;  i               1   36[BANK0 ] unsigned char 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1    wreg      void 
 13938 ;; Registers used:
 13939 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13946 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13949 ;;Total ram usage:        2 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:   12
 13952 ;; This function calls:
 13953 ;;		_USBTransferOnePacket
 13954 ;; This function is called by:
 13955 ;;		_UsbDevice_MainTask
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           	psect	text54
 13960  002B82                     __ptext54:
 13961                           	opt stack 0
 13962  002B82                     _CDCTxService:
 13963                           	opt stack 15
 13964                           
 13965                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13966                           ;usb_device_cdc.c: 842: uint8_t i;
 13967                           ;usb_device_cdc.c: 844: ;
 13968                           ;usb_device_cdc.c: 846: {};
 13969                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;incstack = 0
 13973  002B82  0101               	movlb	1	; () banked
 13974  002B84  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13975  002B86  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13976  002B88  B4D8               	btfsc	status,2,c
 13977  002B8A  D006               	goto	l1952
 13978                           
 13979                           ; BSR set to: 1
 13980  002B8C  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13981  002B90  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13982  002B94  BEDF               	btfsc	indf2,7,c
 13983  002B96  0012               	return	
 13984  002B98                     l1952:
 13985                           
 13986                           ; BSR set to: 1
 13987                           ;usb_device_cdc.c: 852: }
 13988                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13989                           
 13990                           ; BSR set to: 1
 13991  002B98  0E03               	movlw	3
 13992  002B9A  0100               	movlb	0	; () banked
 13993  002B9C  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13994  002B9E  A4D8               	btfss	status,2,c
 13995  002BA0  D002               	goto	l1954
 13996                           
 13997                           ; BSR set to: 0
 13998                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13999  002BA2  0E00               	movlw	0
 14000  002BA4  6FC5               	movwf	_cdc_trf_state& (0+255),b
 14001  002BA6                     l1954:
 14002                           
 14003                           ; BSR set to: 0
 14004                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 14005  002BA6  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14006  002BA8  B4D8               	btfsc	status,2,c
 14007  002BAA  0012               	return	
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;usb_device_cdc.c: 869: }
 14011                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 14012                           
 14013                           ; BSR set to: 0
 14014                           
 14015                           ; BSR set to: 0
 14016                           ;usb_device_cdc.c: 866: {
 14017                           ;usb_device_cdc.c: 867: ;
 14018                           ;usb_device_cdc.c: 868: return;
 14019  002BAC  0E02               	movlw	2
 14020  002BAE  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 14021  002BB0  A4D8               	btfss	status,2,c
 14022  002BB2  D013               	goto	l1956
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;usb_device_cdc.c: 875: {
 14026                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 14027  002BB4  0E01               	movlw	1
 14028  002BB6  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 14029  002BB8  0E00               	movlw	0
 14030  002BBA  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 14031  002BBC  0E00               	movlw	0
 14032  002BBE  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14033  002BC0  0E00               	movlw	0
 14034  002BC2  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 14035  002BC4  0E02               	movlw	2
 14036  002BC6  EC4B  F021         	call	_USBTransferOnePacket
 14037  002BCA  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14038  002BCE  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14039                           
 14040                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 14041  002BD2  0E03               	movlw	3
 14042  002BD4  0100               	movlb	0	; () banked
 14043  002BD6  6FC5               	movwf	_cdc_trf_state& (0+255),b
 14044                           
 14045                           ;usb_device_cdc.c: 879: }
 14046  002BD8  0012               	return	
 14047  002BDA                     l1956:
 14048                           
 14049                           ; BSR set to: 0
 14050                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 14051                           
 14052                           ; BSR set to: 0
 14053  002BDA  05C5               	decf	_cdc_trf_state& (0+255),w,b
 14054  002BDC  A4D8               	btfss	status,2,c
 14055  002BDE  0012               	return	
 14056                           
 14057                           ; BSR set to: 0
 14058                           ;usb_device_cdc.c: 881: {
 14059                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 14060  002BE0  0E40               	movlw	64
 14061  002BE2  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 14062  002BE4  D003               	goto	l1959
 14063                           
 14064                           ; BSR set to: 0
 14065                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 14066  002BE6  0E40               	movlw	64
 14067  002BE8  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 14068  002BEA  D002               	goto	l1960
 14069  002BEC                     l1959:
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;usb_device_cdc.c: 887: else
 14073                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 14074  002BEC  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 14075  002BF0                     l1960:
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 14079                           
 14080                           ; BSR set to: 0
 14081  002BF0  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 14082  002BF2  0800               	sublw	0
 14083  002BF4  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 14084  002BF6  6FC4               	movwf	_cdc_tx_len& (0+255),b
 14085                           
 14086                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 14087  002BF8  0EB6               	movlw	low _cdc_data_tx
 14088  002BFA  0102               	movlb	2	; () banked
 14089  002BFC  6FC8               	movwf	_pCDCDst& (0+255),b
 14090  002BFE  0E07               	movlw	high _cdc_data_tx
 14091  002C00  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 14092                           
 14093                           ; BSR set to: 2
 14094                           ;usb_device_cdc.c: 897: i = byte_to_send;
 14095  002C02  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 14096                           
 14097                           ; BSR set to: 2
 14098                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 14099  002C06  0101               	movlb	1	; () banked
 14100  002C08  51DF               	movf	_cdc_mem_type& (0+255),w,b
 14101  002C0A  B4D8               	btfsc	status,2,c
 14102  002C0C  D01D               	goto	l1962
 14103  002C0E  D03D               	goto	l1966
 14104  002C10                     
 14105                           ;usb_device_cdc.c: 901: {
 14106                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 14107                           
 14108                           ; BSR set to: 1
 14109  002C10  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 14110  002C14  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 14111  002C18  6AF8               	clrf	tblptru,c
 14112  002C1A  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 14113  002C1E  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 14114  002C22  0E0E               	movlw	(high __ramtop+-1)
 14115  002C24  64F7               	cpfsgt	tblptrh,c
 14116  002C26  D003               	bra	u15487
 14117  002C28  0008               	tblrd		*
 14118  002C2A  50F5               	movf	tablat,w,c
 14119  002C2C  D005               	bra	u15480
 14120  002C2E                     u15487:
 14121  002C2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14122  002C32  CFF7 FFEA          	movff	tblptrh,fsr0h
 14123  002C36  50EF               	movf	indf0,w,c
 14124  002C38                     u15480:
 14125  002C38  6EDF               	movwf	indf2,c
 14126                           
 14127                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 14128  002C3A  0102               	movlb	2	; () banked
 14129  002C3C  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 14130  002C3E  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 14131                           
 14132                           ; BSR set to: 2
 14133                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 14134  002C40  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 14135  002C42  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 14136                           
 14137                           ; BSR set to: 2
 14138                           ;usb_device_cdc.c: 905: i--;
 14139  002C44  0100               	movlb	0	; () banked
 14140  002C46  0784               	decf	CDCTxService@i& (0+255),f,b
 14141  002C48                     l1962:
 14142                           
 14143                           ; BSR set to: 0
 14144  002C48  0100               	movlb	0	; () banked
 14145  002C4A  5184               	movf	CDCTxService@i& (0+255),w,b
 14146  002C4C  B4D8               	btfsc	status,2,c
 14147  002C4E  D021               	goto	u15510
 14148  002C50  D7DF               	goto	l1963
 14149  002C52                     
 14150                           ; BSR set to: 0
 14151                           ;usb_device_cdc.c: 911: {
 14152                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 14153                           
 14154                           ; BSR set to: 0
 14155  002C52  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 14156  002C56  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 14157  002C5A  6AF8               	clrf	tblptru,c
 14158  002C5C  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 14159  002C60  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 14160  002C64  0E0E               	movlw	(high __ramtop+-1)
 14161  002C66  64F7               	cpfsgt	tblptrh,c
 14162  002C68  D003               	bra	u15507
 14163  002C6A  0008               	tblrd		*
 14164  002C6C  50F5               	movf	tablat,w,c
 14165  002C6E  D005               	bra	u15500
 14166  002C70                     u15507:
 14167  002C70  CFF6 FFE9          	movff	tblptrl,fsr0l
 14168  002C74  CFF7 FFEA          	movff	tblptrh,fsr0h
 14169  002C78  50EF               	movf	indf0,w,c
 14170  002C7A                     u15500:
 14171  002C7A  6EDF               	movwf	indf2,c
 14172                           
 14173                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 14174  002C7C  0102               	movlb	2	; () banked
 14175  002C7E  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 14176  002C80  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 14177                           
 14178                           ; BSR set to: 2
 14179                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 14180  002C82  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 14181  002C84  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 14182                           
 14183                           ; BSR set to: 2
 14184                           ;usb_device_cdc.c: 915: i--;
 14185  002C86  0100               	movlb	0	; () banked
 14186  002C88  0784               	decf	CDCTxService@i& (0+255),f,b
 14187  002C8A                     l1966:
 14188                           
 14189                           ; BSR set to: 0
 14190  002C8A  0100               	movlb	0	; () banked
 14191  002C8C  5184               	movf	CDCTxService@i& (0+255),w,b
 14192  002C8E  A4D8               	btfss	status,2,c
 14193  002C90  D7E0               	goto	l1967
 14194  002C92                     u15510:
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;usb_device_cdc.c: 916: }
 14198                           ;usb_device_cdc.c: 917: }
 14199                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 14200                           
 14201                           ; BSR set to: 0
 14202                           
 14203                           ; BSR set to: 0
 14204  002C92  51C4               	movf	_cdc_tx_len& (0+255),w,b
 14205  002C94  A4D8               	btfss	status,2,c
 14206  002C96  D008               	goto	l1971
 14207                           
 14208                           ; BSR set to: 0
 14209                           ;usb_device_cdc.c: 924: {
 14210                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 14211  002C98  0E40               	movlw	64
 14212  002C9A  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 14213  002C9C  A4D8               	btfss	status,2,c
 14214  002C9E  D002               	goto	l1970
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 14218  002CA0  0E02               	movlw	2
 14219  002CA2  D001               	goto	L13
 14220  002CA4                     l1970:
 14221                           
 14222                           ; BSR set to: 0
 14223                           ;usb_device_cdc.c: 927: else
 14224                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 14225                           
 14226                           ; BSR set to: 0
 14227  002CA4  0E03               	movlw	3
 14228  002CA6                     L13:
 14229  002CA6  6FC5               	movwf	_cdc_trf_state& (0+255),b
 14230  002CA8                     l1971:
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;usb_device_cdc.c: 929: }
 14234                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 14235                           
 14236                           ; BSR set to: 0
 14237                           
 14238                           ; BSR set to: 0
 14239  002CA8  0E01               	movlw	1
 14240  002CAA  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 14241  002CAC  0EB6               	movlw	low _cdc_data_tx
 14242  002CAE  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 14243  002CB0  0E07               	movlw	high _cdc_data_tx
 14244  002CB2  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14245  002CB4  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 14246  002CB8  0E02               	movlw	2
 14247  002CBA  EC4B  F021         	call	_USBTransferOnePacket
 14248  002CBE  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14249  002CC2  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14250  002CC6  0012               	return	
 14251  002CC8                     __end_of_CDCTxService:
 14252                           	opt stack 0
 14253                           tosu	equ	0xFFF
 14254                           tosh	equ	0xFFE
 14255                           tosl	equ	0xFFD
 14256                           pclath	equ	0xFFA
 14257                           tblptru	equ	0xFF8
 14258                           tblptrh	equ	0xFF7
 14259                           tblptrl	equ	0xFF6
 14260                           tablat	equ	0xFF5
 14261                           prodh	equ	0xFF4
 14262                           prodl	equ	0xFF3
 14263                           intcon	equ	0xFF2
 14264                           intcon2	equ	0xFF1
 14265                           intcon3	equ	0xFF0
 14266                           indf0	equ	0xFEF
 14267                           postinc0	equ	0xFEE
 14268                           plusw0	equ	0xFEB
 14269                           fsr0h	equ	0xFEA
 14270                           fsr0l	equ	0xFE9
 14271                           wreg	equ	0xFE8
 14272                           indf1	equ	0xFE7
 14273                           postinc1	equ	0xFE6
 14274                           postdec1	equ	0xFE5
 14275                           fsr1h	equ	0xFE2
 14276                           fsr1l	equ	0xFE1
 14277                           indf2	equ	0xFDF
 14278                           postinc2	equ	0xFDE
 14279                           postdec2	equ	0xFDD
 14280                           plusw2	equ	0xFDB
 14281                           fsr2h	equ	0xFDA
 14282                           fsr2l	equ	0xFD9
 14283                           status	equ	0xFD8
 14284                           
 14285 ;; *************** function _Term_MainSm *****************
 14286 ;; Defined at:
 14287 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;		None
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 14292 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 14293 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 14294 ;;  FwkBuildYear    4    0        unsigned char [4]
 14295 ;;  FwkBuildMont    4    0        unsigned char [4]
 14296 ;;  FwkBuildDayS    4    0        unsigned char [4]
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  1    wreg      void 
 14299 ;; Registers used:
 14300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/0
 14303 ;;		On exit  : 0/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14307 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14309 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14310 ;;Total ram usage:       12 bytes
 14311 ;; Hardware stack levels used:    1
 14312 ;; Hardware stack levels required when called:   16
 14313 ;; This function calls:
 14314 ;;		_OsTmr_GetTimerStatus
 14315 ;;		_OsTmr_StartTimer
 14316 ;;		_Terminal
 14317 ;;		_memset
 14318 ;;		_putUSBUSART
 14319 ;;		_sprintf
 14320 ;;		_strcat
 14321 ;;		_strcpy
 14322 ;;		_strlen
 14323 ;;		_utoa
 14324 ;; This function is called by:
 14325 ;;		_Term_MainTask
 14326 ;; This function uses a non-reentrant model
 14327 ;;
 14328                           
 14329                           	psect	text55
 14330  001420                     __ptext55:
 14331                           	opt stack 0
 14332  001420                     _Term_MainSm:
 14333                           	opt stack 11
 14334                           
 14335                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 14336                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 14337                           ;term.c: 711: static UINT8 Data[50];
 14338                           ;term.c: 712: UINT8 FwkMajorStr[4];
 14339                           ;term.c: 713: UINT8 FwkMinorStr[4];
 14340                           ;term.c: 714: UINT8 FwkBuildStr[4];
 14341                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 14342                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 14343                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 14344                           ;term.c: 719: switch (TermMainSmState)
 14345                           
 14346                           ;incstack = 0
 14347  001420  D133               	goto	l2456
 14348  001422                     
 14349                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 14350  001422  0ECF               	movlw	low Term_MainSm@TermDelay
 14351  001424  0100               	movlb	0	; () banked
 14352  001426  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 14353  001428  0E03               	movlw	high Term_MainSm@TermDelay
 14354  00142A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 14355  00142C  0ED0               	movlw	208
 14356  00142E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 14357  001430  0E07               	movlw	7
 14358  001432  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 14359  001434  0E00               	movlw	0
 14360  001436  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 14361  001438  0E00               	movlw	0
 14362  00143A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 14363  00143C  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 14364                           
 14365                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 14366  001440  0E01               	movlw	1
 14367  001442  0102               	movlb	2	; () banked
 14368  001444  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14369                           
 14370                           ;term.c: 726: break;
 14371  001446  0012               	return	
 14372  001448                     
 14373                           ; BSR set to: 2
 14374                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 14375                           
 14376                           ; BSR set to: 2
 14377  001448  0ECF               	movlw	low Term_MainSm@TermDelay
 14378  00144A  0100               	movlb	0	; () banked
 14379  00144C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 14380  00144E  0E03               	movlw	high Term_MainSm@TermDelay
 14381  001450  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 14382  001452  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 14383  001456  06E8               	decf	wreg,f,c
 14384  001458  A4D8               	btfss	status,2,c
 14385  00145A  0012               	return	
 14386                           
 14387                           ;term.c: 731: {
 14388                           ;term.c: 733: TermMainSmState = Term_InitState;
 14389  00145C  0E02               	movlw	2
 14390  00145E  0102               	movlb	2	; () banked
 14391  001460  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14392                           
 14393                           ; BSR set to: 2
 14394                           ;term.c: 734: }
 14395                           ;term.c: 735: break;
 14396  001462  0012               	return	
 14397  001464                     
 14398                           ; BSR set to: 2
 14399                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 14400                           
 14401                           ; BSR set to: 2
 14402  001464  0E1F               	movlw	31
 14403  001466  0100               	movlb	0	; () banked
 14404  001468  65CC               	cpfsgt	_USBDeviceState& (0+255),b
 14405  00146A  0012               	return	
 14406                           
 14407                           ; BSR set to: 0
 14408  00146C  B265               	btfsc	3941,1,c	;volatile
 14409  00146E  0012               	return	
 14410                           
 14411                           ; BSR set to: 0
 14412                           ;term.c: 743: else
 14413                           ;term.c: 744: {
 14414                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 14415                           
 14416                           ; BSR set to: 0
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;term.c: 740: {
 14420                           ;term.c: 742: }
 14421  001470  0E03               	movlw	3
 14422  001472  0102               	movlb	2	; () banked
 14423  001474  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14424                           
 14425                           ; BSR set to: 2
 14426                           ;term.c: 747: }
 14427                           ;term.c: 748: break;
 14428  001476  0012               	return	
 14429  001478                     
 14430                           ; BSR set to: 2
 14431                           ;term.c: 752: if((cdc_trf_state == 0))
 14432                           
 14433                           ; BSR set to: 2
 14434  001478  0100               	movlb	0	; () banked
 14435  00147A  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14436  00147C  A4D8               	btfss	status,2,c
 14437  00147E  0012               	return	
 14438                           
 14439                           ; BSR set to: 0
 14440                           ;term.c: 753: {
 14441                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 14442  001480  0E22               	movlw	low _Welcome
 14443  001482  6F83               	movwf	putUSBUSART@data& (0+255),b
 14444  001484  0EFD               	movlw	high _Welcome
 14445  001486  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14446  001488  0E88               	movlw	136
 14447  00148A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14448  00148C  ECFC  F032         	call	_putUSBUSART	;wreg free
 14449                           
 14450                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 14451  001490  0E04               	movlw	4
 14452  001492  0102               	movlb	2	; () banked
 14453  001494  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14454                           
 14455                           ; BSR set to: 2
 14456                           ;term.c: 758: }
 14457                           ;term.c: 759: break;
 14458  001496  0012               	return	
 14459  001498                     
 14460                           ; BSR set to: 2
 14461                           ;term.c: 763: if((cdc_trf_state == 0))
 14462                           
 14463                           ; BSR set to: 2
 14464  001498  0100               	movlb	0	; () banked
 14465  00149A  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14466  00149C  A4D8               	btfss	status,2,c
 14467  00149E  0012               	return	
 14468                           
 14469                           ; BSR set to: 0
 14470                           ;term.c: 764: {
 14471                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14472  0014A0  0E32               	movlw	low _MsgFormat
 14473  0014A2  6F83               	movwf	putUSBUSART@data& (0+255),b
 14474  0014A4  0EFC               	movlw	high _MsgFormat
 14475  0014A6  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14476  0014A8  0EEF               	movlw	239
 14477  0014AA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14478  0014AC  ECFC  F032         	call	_putUSBUSART	;wreg free
 14479                           
 14480                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 14481  0014B0  0E05               	movlw	5
 14482  0014B2  0102               	movlb	2	; () banked
 14483  0014B4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14484                           
 14485                           ; BSR set to: 2
 14486                           ;term.c: 769: }
 14487                           ;term.c: 770: break;
 14488  0014B6  0012               	return	
 14489  0014B8                     
 14490                           ; BSR set to: 2
 14491                           ;term.c: 774: if((cdc_trf_state == 0))
 14492                           
 14493                           ; BSR set to: 2
 14494  0014B8  0100               	movlb	0	; () banked
 14495  0014BA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14496  0014BC  A4D8               	btfss	status,2,c
 14497  0014BE  0012               	return	
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;term.c: 775: {
 14501                           ;term.c: 777: memset(Data,0,50);
 14502  0014C0  0E6B               	movlw	low Term_MainSm@Data
 14503  0014C2  6F7D               	movwf	memset@p1& (0+255),b
 14504  0014C4  0E04               	movlw	high Term_MainSm@Data
 14505  0014C6  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14506  0014C8  0E00               	movlw	0
 14507  0014CA  6F80               	movwf	(memset@c+1)& (0+255),b
 14508  0014CC  0E00               	movlw	0
 14509  0014CE  6F7F               	movwf	memset@c& (0+255),b
 14510  0014D0  0E00               	movlw	0
 14511  0014D2  6F82               	movwf	(memset@n+1)& (0+255),b
 14512  0014D4  0E32               	movlw	50
 14513  0014D6  6F81               	movwf	memset@n& (0+255),b
 14514  0014D8  EC91  F031         	call	_memset	;wreg free
 14515                           
 14516                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 14517  0014DC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14518  0014DE  0100               	movlb	0	; () banked
 14519  0014E0  6F8A               	movwf	utoa@buf& (0+255),b
 14520  0014E2  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14521  0014E4  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14522  0014E6  0E00               	movlw	0
 14523  0014E8  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14524  0014EA  0E01               	movlw	1
 14525  0014EC  6F8C               	movwf	utoa@val& (0+255),b
 14526  0014EE  0E00               	movlw	0
 14527  0014F0  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14528  0014F2  0E0A               	movlw	10
 14529  0014F4  6F8E               	movwf	utoa@base& (0+255),b
 14530  0014F6  EC08  F023         	call	_utoa	;wreg free
 14531                           
 14532                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14533  0014FA  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14534  0014FC  0100               	movlb	0	; () banked
 14535  0014FE  6F8A               	movwf	utoa@buf& (0+255),b
 14536  001500  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14537  001502  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14538  001504  0E00               	movlw	0
 14539  001506  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14540  001508  0E02               	movlw	2
 14541  00150A  6F8C               	movwf	utoa@val& (0+255),b
 14542  00150C  0E00               	movlw	0
 14543  00150E  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14544  001510  0E0A               	movlw	10
 14545  001512  6F8E               	movwf	utoa@base& (0+255),b
 14546  001514  EC08  F023         	call	_utoa	;wreg free
 14547                           
 14548                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14549  001518  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14550  00151A  0100               	movlb	0	; () banked
 14551  00151C  6F8A               	movwf	utoa@buf& (0+255),b
 14552  00151E  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14553  001520  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14554  001522  0E00               	movlw	0
 14555  001524  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14556  001526  0E00               	movlw	0
 14557  001528  6F8C               	movwf	utoa@val& (0+255),b
 14558  00152A  0E00               	movlw	0
 14559  00152C  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14560  00152E  0E0A               	movlw	10
 14561  001530  6F8E               	movwf	utoa@base& (0+255),b
 14562  001532  EC08  F023         	call	_utoa	;wreg free
 14563                           
 14564                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14565  001536  0E6B               	movlw	low Term_MainSm@Data
 14566  001538  0100               	movlb	0	; () banked
 14567  00153A  6F7D               	movwf	strcpy@to& (0+255),b
 14568  00153C  0E04               	movlw	high Term_MainSm@Data
 14569  00153E  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14570  001540  0ED2               	movlw	low STR_23
 14571  001542  6F7F               	movwf	strcpy@from& (0+255),b
 14572  001544  0EFE               	movlw	high STR_23
 14573  001546  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14574  001548  EC60  F031         	call	_strcpy	;wreg free
 14575                           
 14576                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14577  00154C  0E6B               	movlw	low Term_MainSm@Data
 14578  00154E  0100               	movlb	0	; () banked
 14579  001550  6F7D               	movwf	strcat@to& (0+255),b
 14580  001552  0E04               	movlw	high Term_MainSm@Data
 14581  001554  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14582  001556  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14583  001558  6F7F               	movwf	strcat@from& (0+255),b
 14584  00155A  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14585  00155C  6F80               	movwf	(strcat@from+1)& (0+255),b
 14586  00155E  EC92  F02B         	call	_strcat	;wreg free
 14587                           
 14588                           ;term.c: 784: strcat(Data,".");
 14589  001562  0E6B               	movlw	low Term_MainSm@Data
 14590  001564  0100               	movlb	0	; () banked
 14591  001566  6F7D               	movwf	strcat@to& (0+255),b
 14592  001568  0E04               	movlw	high Term_MainSm@Data
 14593  00156A  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14594  00156C  0EF5               	movlw	low STR_24
 14595  00156E  6F7F               	movwf	strcat@from& (0+255),b
 14596  001570  0EFF               	movlw	high STR_24
 14597  001572  6F80               	movwf	(strcat@from+1)& (0+255),b
 14598  001574  EC92  F02B         	call	_strcat	;wreg free
 14599                           
 14600                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14601  001578  0E6B               	movlw	low Term_MainSm@Data
 14602  00157A  0100               	movlb	0	; () banked
 14603  00157C  6F7D               	movwf	strcat@to& (0+255),b
 14604  00157E  0E04               	movlw	high Term_MainSm@Data
 14605  001580  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14606  001582  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14607  001584  6F7F               	movwf	strcat@from& (0+255),b
 14608  001586  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14609  001588  6F80               	movwf	(strcat@from+1)& (0+255),b
 14610  00158A  EC92  F02B         	call	_strcat	;wreg free
 14611                           
 14612                           ;term.c: 786: strcat(Data,".");
 14613  00158E  0E6B               	movlw	low Term_MainSm@Data
 14614  001590  0100               	movlb	0	; () banked
 14615  001592  6F7D               	movwf	strcat@to& (0+255),b
 14616  001594  0E04               	movlw	high Term_MainSm@Data
 14617  001596  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14618  001598  0EF5               	movlw	low STR_24
 14619  00159A  6F7F               	movwf	strcat@from& (0+255),b
 14620  00159C  0EFF               	movlw	high STR_24
 14621  00159E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14622  0015A0  EC92  F02B         	call	_strcat	;wreg free
 14623                           
 14624                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14625  0015A4  0E6B               	movlw	low Term_MainSm@Data
 14626  0015A6  0100               	movlb	0	; () banked
 14627  0015A8  6F7D               	movwf	strcat@to& (0+255),b
 14628  0015AA  0E04               	movlw	high Term_MainSm@Data
 14629  0015AC  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14630  0015AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14631  0015B0  6F7F               	movwf	strcat@from& (0+255),b
 14632  0015B2  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14633  0015B4  6F80               	movwf	(strcat@from+1)& (0+255),b
 14634  0015B6  EC92  F02B         	call	_strcat	;wreg free
 14635                           
 14636                           ;term.c: 788: strcat(Data,"\r\n");
 14637  0015BA  0E6B               	movlw	low Term_MainSm@Data
 14638  0015BC  0100               	movlb	0	; () banked
 14639  0015BE  6F7D               	movwf	strcat@to& (0+255),b
 14640  0015C0  0E04               	movlw	high Term_MainSm@Data
 14641  0015C2  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14642  0015C4  0E86               	movlw	low (STR_21+39)
 14643  0015C6  6F7F               	movwf	strcat@from& (0+255),b
 14644  0015C8  0EFE               	movlw	high (STR_21+39)
 14645  0015CA  6F80               	movwf	(strcat@from+1)& (0+255),b
 14646  0015CC  EC92  F02B         	call	_strcat	;wreg free
 14647                           
 14648                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14649  0015D0  0E6B               	movlw	low Term_MainSm@Data
 14650  0015D2  0100               	movlb	0	; () banked
 14651  0015D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14652  0015D6  0E04               	movlw	high Term_MainSm@Data
 14653  0015D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14654  0015DA  0E6B               	movlw	low Term_MainSm@Data
 14655  0015DC  6F7D               	movwf	strlen@s& (0+255),b
 14656  0015DE  0E04               	movlw	high Term_MainSm@Data
 14657  0015E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14658  0015E2  EC42  F030         	call	_strlen	;wreg free
 14659  0015E6  0100               	movlb	0	; () banked
 14660  0015E8  517D               	movf	?_strlen& (0+255),w,b
 14661  0015EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14662  0015EC  ECFC  F032         	call	_putUSBUSART	;wreg free
 14663                           
 14664                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14665  0015F0  0E06               	movlw	6
 14666  0015F2  0102               	movlb	2	; () banked
 14667  0015F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14668                           
 14669                           ; BSR set to: 2
 14670                           ;term.c: 793: }
 14671                           ;term.c: 794: break;
 14672  0015F6  0012               	return	
 14673  0015F8                     
 14674                           ; BSR set to: 2
 14675                           ;term.c: 798: if((cdc_trf_state == 0))
 14676                           
 14677                           ; BSR set to: 2
 14678  0015F8  0100               	movlb	0	; () banked
 14679  0015FA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14680  0015FC  A4D8               	btfss	status,2,c
 14681  0015FE  0012               	return	
 14682                           
 14683                           ; BSR set to: 0
 14684                           ;term.c: 799: {
 14685                           ;term.c: 801: memset(Data,0,50);
 14686  001600  0E6B               	movlw	low Term_MainSm@Data
 14687  001602  6F7D               	movwf	memset@p1& (0+255),b
 14688  001604  0E04               	movlw	high Term_MainSm@Data
 14689  001606  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14690  001608  0E00               	movlw	0
 14691  00160A  6F80               	movwf	(memset@c+1)& (0+255),b
 14692  00160C  0E00               	movlw	0
 14693  00160E  6F7F               	movwf	memset@c& (0+255),b
 14694  001610  0E00               	movlw	0
 14695  001612  6F82               	movwf	(memset@n+1)& (0+255),b
 14696  001614  0E32               	movlw	50
 14697  001616  6F81               	movwf	memset@n& (0+255),b
 14698  001618  EC91  F031         	call	_memset	;wreg free
 14699                           
 14700                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14701  00161C  0E6B               	movlw	low Term_MainSm@Data
 14702  00161E  0100               	movlb	0	; () banked
 14703  001620  6F7D               	movwf	sprintf@sp& (0+255),b
 14704  001622  0E04               	movlw	high Term_MainSm@Data
 14705  001624  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14706  001626  0E0D               	movlw	low STR_27
 14707  001628  6F7F               	movwf	sprintf@f& (0+255),b
 14708  00162A  0EFF               	movlw	high STR_27
 14709  00162C  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14710  00162E  0EB6               	movlw	low STR_28
 14711  001630  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14712  001632  0EFF               	movlw	high STR_28
 14713  001634  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14714  001636  ECC4  F01D         	call	_sprintf	;wreg free
 14715                           
 14716                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14717  00163A  0E6B               	movlw	low Term_MainSm@Data
 14718  00163C  0100               	movlb	0	; () banked
 14719  00163E  6F83               	movwf	putUSBUSART@data& (0+255),b
 14720  001640  0E04               	movlw	high Term_MainSm@Data
 14721  001642  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14722  001644  0E6B               	movlw	low Term_MainSm@Data
 14723  001646  6F7D               	movwf	strlen@s& (0+255),b
 14724  001648  0E04               	movlw	high Term_MainSm@Data
 14725  00164A  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14726  00164C  EC42  F030         	call	_strlen	;wreg free
 14727  001650  0100               	movlb	0	; () banked
 14728  001652  517D               	movf	?_strlen& (0+255),w,b
 14729  001654  6F85               	movwf	putUSBUSART@length& (0+255),b
 14730  001656  ECFC  F032         	call	_putUSBUSART	;wreg free
 14731                           
 14732                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14733  00165A  0E07               	movlw	7
 14734  00165C  0102               	movlb	2	; () banked
 14735  00165E  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14736                           
 14737                           ; BSR set to: 2
 14738                           ;term.c: 808: }
 14739                           ;term.c: 809: break;
 14740  001660  0012               	return	
 14741  001662                     
 14742                           ; BSR set to: 2
 14743                           ;term.c: 813: if((cdc_trf_state == 0))
 14744                           
 14745                           ; BSR set to: 2
 14746  001662  0100               	movlb	0	; () banked
 14747  001664  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14748  001666  A4D8               	btfss	status,2,c
 14749  001668  0012               	return	
 14750                           
 14751                           ; BSR set to: 0
 14752                           ;term.c: 814: {
 14753                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14754  00166A  0E32               	movlw	low _MsgReady
 14755  00166C  6F83               	movwf	putUSBUSART@data& (0+255),b
 14756  00166E  0EFE               	movlw	high _MsgReady
 14757  001670  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14758  001672  0E16               	movlw	22
 14759  001674  6F85               	movwf	putUSBUSART@length& (0+255),b
 14760  001676  ECFC  F032         	call	_putUSBUSART	;wreg free
 14761                           
 14762                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14763  00167A  0E08               	movlw	8
 14764  00167C  0102               	movlb	2	; () banked
 14765  00167E  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14766                           
 14767                           ; BSR set to: 2
 14768                           ;term.c: 819: }
 14769                           ;term.c: 820: break;
 14770  001680  0012               	return	
 14771  001682                     
 14772                           ; BSR set to: 2
 14773                           ;term.c: 824: Terminal();
 14774                           
 14775                           ; BSR set to: 2
 14776  001682  EC68  F000         	call	_Terminal	;wreg free
 14777                           
 14778                           ;term.c: 829: }
 14779                           
 14780                           ;term.c: 828: break;
 14781                           
 14782                           ;term.c: 827: default:
 14783                           
 14784                           ;term.c: 825: break;
 14785  001686  0012               	return	
 14786  001688                     l2456:
 14787  001688  0102               	movlb	2	; () banked
 14788  00168A  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14789                           
 14790                           ; Switch size 1, requested type "space"
 14791                           ; Number of cases is 9, Range of values is 0 to 8
 14792                           ; switch strategies available:
 14793                           ; Name         Instructions Cycles
 14794                           ; simple_byte           28    15 (average)
 14795                           ;	Chosen strategy is simple_byte
 14796  00168C  0A00               	xorlw	0	; case 0
 14797  00168E  B4D8               	btfsc	status,2,c
 14798  001690  D6C8               	goto	l2457
 14799  001692  0A01               	xorlw	1	; case 1
 14800  001694  B4D8               	btfsc	status,2,c
 14801  001696  D6D8               	goto	l2459
 14802  001698  0A03               	xorlw	3	; case 2
 14803  00169A  B4D8               	btfsc	status,2,c
 14804  00169C  D6E3               	goto	l2461
 14805  00169E  0A01               	xorlw	1	; case 3
 14806  0016A0  B4D8               	btfsc	status,2,c
 14807  0016A2  D6EA               	goto	l2466
 14808  0016A4  0A07               	xorlw	7	; case 4
 14809  0016A6  B4D8               	btfsc	status,2,c
 14810  0016A8  D6F7               	goto	l2468
 14811  0016AA  0A01               	xorlw	1	; case 5
 14812  0016AC  B4D8               	btfsc	status,2,c
 14813  0016AE  D704               	goto	l2470
 14814  0016B0  0A03               	xorlw	3	; case 6
 14815  0016B2  B4D8               	btfsc	status,2,c
 14816  0016B4  D7A1               	goto	l2472
 14817  0016B6  0A01               	xorlw	1	; case 7
 14818  0016B8  B4D8               	btfsc	status,2,c
 14819  0016BA  D7D3               	goto	l2474
 14820  0016BC  0A0F               	xorlw	15	; case 8
 14821  0016BE  A4D8               	btfss	status,2,c
 14822  0016C0  0012               	return	
 14823  0016C2  D7DF               	goto	l2476
 14824  0016C4                     __end_of_Term_MainSm:
 14825                           	opt stack 0
 14826                           tosu	equ	0xFFF
 14827                           tosh	equ	0xFFE
 14828                           tosl	equ	0xFFD
 14829                           pclath	equ	0xFFA
 14830                           tblptru	equ	0xFF8
 14831                           tblptrh	equ	0xFF7
 14832                           tblptrl	equ	0xFF6
 14833                           tablat	equ	0xFF5
 14834                           prodh	equ	0xFF4
 14835                           prodl	equ	0xFF3
 14836                           intcon	equ	0xFF2
 14837                           intcon2	equ	0xFF1
 14838                           intcon3	equ	0xFF0
 14839                           indf0	equ	0xFEF
 14840                           postinc0	equ	0xFEE
 14841                           plusw0	equ	0xFEB
 14842                           fsr0h	equ	0xFEA
 14843                           fsr0l	equ	0xFE9
 14844                           wreg	equ	0xFE8
 14845                           indf1	equ	0xFE7
 14846                           postinc1	equ	0xFE6
 14847                           postdec1	equ	0xFE5
 14848                           fsr1h	equ	0xFE2
 14849                           fsr1l	equ	0xFE1
 14850                           indf2	equ	0xFDF
 14851                           postinc2	equ	0xFDE
 14852                           postdec2	equ	0xFDD
 14853                           plusw2	equ	0xFDB
 14854                           fsr2h	equ	0xFDA
 14855                           fsr2l	equ	0xFD9
 14856                           status	equ	0xFD8
 14857                           
 14858 ;; *************** function _strlen *****************
 14859 ;; Defined at:
 14860 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14863 ;;		 -> Term_MainSm@Data(50), 
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14866 ;;		 -> Term_MainSm@Data(50), 
 14867 ;; Return value:  Size  Location     Type
 14868 ;;                  2   29[BANK0 ] unsigned int 
 14869 ;; Registers used:
 14870 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14871 ;; Tracked objects:
 14872 ;;		On entry : 0/0
 14873 ;;		On exit  : 0/0
 14874 ;;		Unchanged: 0/0
 14875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14879 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14880 ;;Total ram usage:        6 bytes
 14881 ;; Hardware stack levels used:    1
 14882 ;; Hardware stack levels required when called:   11
 14883 ;; This function calls:
 14884 ;;		Nothing
 14885 ;; This function is called by:
 14886 ;;		_Term_MainSm
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           	psect	text56
 14891  006084                     __ptext56:
 14892                           	opt stack 0
 14893  006084                     _strlen:
 14894                           	opt stack 15
 14895                           
 14896                           ;incstack = 0
 14897  006084  C07D  F081         	movff	strlen@s,strlen@cp
 14898  006088  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14899  00608C  D003               	goto	l3455
 14900  00608E  0100               	movlb	0	; () banked
 14901  006090  4B81               	infsnz	strlen@cp& (0+255),f,b
 14902  006092  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14903  006094                     l3455:
 14904                           
 14905                           ; BSR set to: 0
 14906  006094  C081  FFD9         	movff	strlen@cp,fsr2l
 14907  006098  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14908  00609C  50DF               	movf	indf2,w,c
 14909  00609E  A4D8               	btfss	status,2,c
 14910  0060A0  D7F6               	goto	l3456
 14911  0060A2  C07D  F07F         	movff	strlen@s,??_strlen
 14912  0060A6  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14913  0060AA  0100               	movlb	0	; () banked
 14914  0060AC  1F7F               	comf	??_strlen& (0+255),f,b
 14915  0060AE  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14916  0060B0  4B7F               	infsnz	??_strlen& (0+255),f,b
 14917  0060B2  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14918  0060B4  5181               	movf	strlen@cp& (0+255),w,b
 14919  0060B6  257F               	addwf	??_strlen& (0+255),w,b
 14920  0060B8  6F7D               	movwf	?_strlen& (0+255),b
 14921  0060BA  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14922  0060BC  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14923  0060BE  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14924  0060C0  0012               	return	
 14925  0060C2                     __end_of_strlen:
 14926                           	opt stack 0
 14927                           tosu	equ	0xFFF
 14928                           tosh	equ	0xFFE
 14929                           tosl	equ	0xFFD
 14930                           pclath	equ	0xFFA
 14931                           tblptru	equ	0xFF8
 14932                           tblptrh	equ	0xFF7
 14933                           tblptrl	equ	0xFF6
 14934                           tablat	equ	0xFF5
 14935                           prodh	equ	0xFF4
 14936                           prodl	equ	0xFF3
 14937                           intcon	equ	0xFF2
 14938                           intcon2	equ	0xFF1
 14939                           intcon3	equ	0xFF0
 14940                           indf0	equ	0xFEF
 14941                           postinc0	equ	0xFEE
 14942                           plusw0	equ	0xFEB
 14943                           fsr0h	equ	0xFEA
 14944                           fsr0l	equ	0xFE9
 14945                           wreg	equ	0xFE8
 14946                           indf1	equ	0xFE7
 14947                           postinc1	equ	0xFE6
 14948                           postdec1	equ	0xFE5
 14949                           fsr1h	equ	0xFE2
 14950                           fsr1l	equ	0xFE1
 14951                           indf2	equ	0xFDF
 14952                           postinc2	equ	0xFDE
 14953                           postdec2	equ	0xFDD
 14954                           plusw2	equ	0xFDB
 14955                           fsr2h	equ	0xFDA
 14956                           fsr2l	equ	0xFD9
 14957                           status	equ	0xFD8
 14958                           
 14959 ;; *************** function _strcat *****************
 14960 ;; Defined at:
 14961 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14964 ;;		 -> Term_MainSm@Data(50), 
 14965 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14966 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14967 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14968 ;; Auto vars:     Size  Location     Type
 14969 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14970 ;;		 -> Term_MainSm@Data(50), 
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  2   29[BANK0 ] PTR unsigned char 
 14973 ;; Registers used:
 14974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14975 ;; Tracked objects:
 14976 ;;		On entry : 0/0
 14977 ;;		On exit  : 0/0
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14980 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14981 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14983 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14984 ;;Total ram usage:        6 bytes
 14985 ;; Hardware stack levels used:    1
 14986 ;; Hardware stack levels required when called:   11
 14987 ;; This function calls:
 14988 ;;		Nothing
 14989 ;; This function is called by:
 14990 ;;		_Term_MainSm
 14991 ;; This function uses a non-reentrant model
 14992 ;;
 14993                           
 14994                           	psect	text57
 14995  005724                     __ptext57:
 14996                           	opt stack 0
 14997  005724                     _strcat:
 14998                           	opt stack 15
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;incstack = 0
 15002  005724  C07D  F081         	movff	strcat@to,strcat@cp
 15003  005728  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 15004  00572C  D003               	goto	l3440
 15005  00572E  0100               	movlb	0	; () banked
 15006  005730  4B81               	infsnz	strcat@cp& (0+255),f,b
 15007  005732  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 15008  005734                     l3440:
 15009                           
 15010                           ; BSR set to: 0
 15011  005734  C081  FFD9         	movff	strcat@cp,fsr2l
 15012  005738  C082  FFDA         	movff	strcat@cp+1,fsr2h
 15013  00573C  50DF               	movf	indf2,w,c
 15014  00573E  B4D8               	btfsc	status,2,c
 15015  005740  D006               	goto	l3443
 15016  005742  D7F5               	goto	l3441
 15017  005744  0100               	movlb	0	; () banked
 15018  005746  4B81               	infsnz	strcat@cp& (0+255),f,b
 15019  005748  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 15020  00574A  4B7F               	infsnz	strcat@from& (0+255),f,b
 15021  00574C  2B80               	incf	(strcat@from+1)& (0+255),f,b
 15022  00574E                     l3443:
 15023                           
 15024                           ; BSR set to: 0
 15025  00574E  C07F  FFF6         	movff	strcat@from,tblptrl
 15026  005752  C080  FFF7         	movff	strcat@from+1,tblptrh
 15027  005756  6AF8               	clrf	tblptru,c
 15028  005758  C081  FFD9         	movff	strcat@cp,fsr2l
 15029  00575C  C082  FFDA         	movff	strcat@cp+1,fsr2h
 15030  005760  0E0E               	movlw	(high __ramtop+-1)
 15031  005762  64F7               	cpfsgt	tblptrh,c
 15032  005764  D003               	bra	u14187
 15033  005766  0008               	tblrd		*
 15034  005768  50F5               	movf	tablat,w,c
 15035  00576A  D005               	bra	u14180
 15036  00576C                     u14187:
 15037  00576C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15038  005770  CFF7 FFEA          	movff	tblptrh,fsr0h
 15039  005774  50EF               	movf	indf0,w,c
 15040  005776                     u14180:
 15041  005776  6EDF               	movwf	indf2,c
 15042  005778  50DF               	movf	indf2,w,c
 15043  00577A  B4D8               	btfsc	status,2,c
 15044  00577C  0012               	return	
 15045  00577E  D7E2               	goto	l3444
 15046  005780                     __end_of_strcat:
 15047                           	opt stack 0
 15048                           tosu	equ	0xFFF
 15049                           tosh	equ	0xFFE
 15050                           tosl	equ	0xFFD
 15051                           pclath	equ	0xFFA
 15052                           tblptru	equ	0xFF8
 15053                           tblptrh	equ	0xFF7
 15054                           tblptrl	equ	0xFF6
 15055                           tablat	equ	0xFF5
 15056                           prodh	equ	0xFF4
 15057                           prodl	equ	0xFF3
 15058                           intcon	equ	0xFF2
 15059                           intcon2	equ	0xFF1
 15060                           intcon3	equ	0xFF0
 15061                           indf0	equ	0xFEF
 15062                           postinc0	equ	0xFEE
 15063                           plusw0	equ	0xFEB
 15064                           fsr0h	equ	0xFEA
 15065                           fsr0l	equ	0xFE9
 15066                           wreg	equ	0xFE8
 15067                           indf1	equ	0xFE7
 15068                           postinc1	equ	0xFE6
 15069                           postdec1	equ	0xFE5
 15070                           fsr1h	equ	0xFE2
 15071                           fsr1l	equ	0xFE1
 15072                           indf2	equ	0xFDF
 15073                           postinc2	equ	0xFDE
 15074                           postdec2	equ	0xFDD
 15075                           plusw2	equ	0xFDB
 15076                           fsr2h	equ	0xFDA
 15077                           fsr2l	equ	0xFD9
 15078                           status	equ	0xFD8
 15079                           
 15080 ;; *************** function _sprintf *****************
 15081 ;; Defined at:
 15082 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 15083 ;; Parameters:    Size  Location     Type
 15084 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 15085 ;;		 -> Term_MainSm@Data(50), 
 15086 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 15087 ;;		 -> STR_27(17), 
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;  tmpval          4    0        struct .
 15090 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 15091 ;;		 -> STR_33(7), STR_28(12), 
 15092 ;;  ap              2   36[BANK0 ] PTR void [1]
 15093 ;;		 -> ?_sprintf(2), 
 15094 ;;  len             2    0        unsigned int 
 15095 ;;  val             2    0        unsigned int 
 15096 ;;  c               1   38[BANK0 ] char 
 15097 ;;  flag            1   35[BANK0 ] unsigned char 
 15098 ;;  prec            1    0        char 
 15099 ;; Return value:  Size  Location     Type
 15100 ;;                  2   29[BANK0 ] int 
 15101 ;; Registers used:
 15102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15103 ;; Tracked objects:
 15104 ;;		On entry : 0/0
 15105 ;;		On exit  : 0/0
 15106 ;;		Unchanged: 0/0
 15107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15108 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15109 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15111 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15112 ;;Total ram usage:       12 bytes
 15113 ;; Hardware stack levels used:    1
 15114 ;; Hardware stack levels required when called:   11
 15115 ;; This function calls:
 15116 ;;		Nothing
 15117 ;; This function is called by:
 15118 ;;		_Term_MainSm
 15119 ;; This function uses a non-reentrant model
 15120 ;;
 15121                           
 15122                           	psect	text58
 15123  003B88                     __ptext58:
 15124                           	opt stack 0
 15125  003B88                     _sprintf:
 15126                           	opt stack 15
 15127                           
 15128                           ;doprnt.c: 494: va_list ap;
 15129                           ;doprnt.c: 499: signed char c;
 15130                           ;doprnt.c: 506: signed char prec;
 15131                           ;doprnt.c: 508: unsigned char flag;
 15132                           ;doprnt.c: 523: union {
 15133                           ;doprnt.c: 524: unsigned long vd;
 15134                           ;doprnt.c: 525: double integ;
 15135                           ;doprnt.c: 526: } tmpval;
 15136                           ;doprnt.c: 528: unsigned int val;
 15137                           ;doprnt.c: 529: unsigned len;
 15138                           ;doprnt.c: 530: const char * cp;
 15139                           ;doprnt.c: 533: *ap = __va_start();
 15140                           
 15141                           ;incstack = 0
 15142  003B88  0E81               	movlw	low (?_sprintf+4)
 15143  003B8A  0100               	movlb	0	; () banked
 15144  003B8C  6F84               	movwf	sprintf@ap& (0+255),b
 15145  003B8E  0E00               	movlw	high (?_sprintf+4)
 15146  003B90  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 15147                           
 15148                           ;doprnt.c: 536: while(c = *f++) {
 15149  003B92  D04E               	goto	l2844
 15150  003B94                     
 15151                           ; BSR set to: 0
 15152                           ;doprnt.c: 538: if(c != '%')
 15153                           
 15154                           ; BSR set to: 0
 15155  003B94  0E25               	movlw	37
 15156  003B96  1986               	xorwf	sprintf@c& (0+255),w,b
 15157  003B98  B4D8               	btfsc	status,2,c
 15158  003B9A  D009               	goto	l2834
 15159                           
 15160                           ; BSR set to: 0
 15161                           ;doprnt.c: 540: {
 15162                           ;doprnt.c: 541: ((*sp++ = (c)));
 15163  003B9C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15164  003BA0  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15165  003BA4  C086  FFDF         	movff	sprintf@c,indf2
 15166                           
 15167                           ; BSR set to: 0
 15168  003BA8  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15169  003BAA  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15170                           
 15171                           ;doprnt.c: 542: continue;
 15172  003BAC  D041               	goto	l2844
 15173  003BAE                     l2834:
 15174                           
 15175                           ; BSR set to: 0
 15176                           ;doprnt.c: 543: }
 15177                           ;doprnt.c: 548: flag = 0;
 15178                           
 15179                           ; BSR set to: 0
 15180  003BAE  0E00               	movlw	0
 15181  003BB0  6F83               	movwf	sprintf@flag& (0+255),b
 15182                           
 15183                           ;doprnt.c: 635: switch(c = *f++) {
 15184  003BB2  D02E               	goto	l2835
 15185  003BB4                     
 15186                           ; BSR set to: 0
 15187                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15188                           
 15189                           ; BSR set to: 0
 15190  003BB4  C084  FFD9         	movff	sprintf@ap,fsr2l
 15191  003BB8  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 15192  003BBC  CFDE F087          	movff	postinc2,sprintf@cp
 15193  003BC0  CFDD F088          	movff	postdec2,sprintf@cp+1
 15194                           
 15195                           ; BSR set to: 0
 15196  003BC4  0E02               	movlw	2
 15197  003BC6  2784               	addwf	sprintf@ap& (0+255),f,b
 15198  003BC8  0E00               	movlw	0
 15199  003BCA  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 15200                           
 15201                           ; BSR set to: 0
 15202                           ;doprnt.c: 740: if(!cp)
 15203  003BCC  5187               	movf	sprintf@cp& (0+255),w,b
 15204  003BCE  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 15205  003BD0  A4D8               	btfss	status,2,c
 15206  003BD2  D014               	goto	l2840
 15207                           
 15208                           ; BSR set to: 0
 15209                           ;doprnt.c: 741: cp = "(null)";
 15210  003BD4  0ED8               	movlw	low STR_33
 15211  003BD6  6F87               	movwf	sprintf@cp& (0+255),b
 15212  003BD8  0EFF               	movlw	high STR_33
 15213  003BDA  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 15214                           
 15215                           ; BSR set to: 0
 15216                           ;doprnt.c: 777: while(*cp)
 15217  003BDC  D00F               	goto	l2840
 15218  003BDE                     
 15219                           ; BSR set to: 0
 15220                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 15221                           
 15222                           ; BSR set to: 0
 15223  003BDE  C087  FFF6         	movff	sprintf@cp,tblptrl
 15224  003BE2  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15225  003BE6                     	if	0	;tblptru may be non-zero
 15226  003BE6                     	endif
 15227  003BE6                     	if	0	;tblptru may be non-zero
 15228  003BE6                     	endif
 15229  003BE6  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15230  003BEA  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15231  003BEE  0008               	tblrd		*
 15232  003BF0  CFF5 FFDF          	movff	tablat,indf2
 15233                           
 15234                           ; BSR set to: 0
 15235  003BF4  4B87               	infsnz	sprintf@cp& (0+255),f,b
 15236  003BF6  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 15237                           
 15238                           ; BSR set to: 0
 15239  003BF8  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15240  003BFA  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15241  003BFC                     l2840:
 15242                           
 15243                           ; BSR set to: 0
 15244                           
 15245                           ; BSR set to: 0
 15246  003BFC  C087  FFF6         	movff	sprintf@cp,tblptrl
 15247  003C00  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15248  003C04                     	if	0	;tblptru may be non-zero
 15249  003C04                     	endif
 15250  003C04                     	if	0	;tblptru may be non-zero
 15251  003C04                     	endif
 15252  003C04  0008               	tblrd		*
 15253  003C06  50F5               	movf	tablat,w,c
 15254  003C08  0900               	iorlw	0
 15255  003C0A  B4D8               	btfsc	status,2,c
 15256  003C0C  D011               	goto	l2844
 15257  003C0E  D7E7               	goto	l2841
 15258  003C10                     l2835:
 15259                           
 15260                           ; BSR set to: 0
 15261                           
 15262                           ; BSR set to: 0
 15263  003C10  C07F  FFF6         	movff	sprintf@f,tblptrl
 15264  003C14  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15265  003C18  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15266  003C1A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15267  003C1C                     	if	0	;tblptru may be non-zero
 15268  003C1C                     	endif
 15269  003C1C                     	if	0	;tblptru may be non-zero
 15270  003C1C                     	endif
 15271  003C1C  0008               	tblrd		*
 15272  003C1E  CFF5 F086          	movff	tablat,sprintf@c
 15273  003C22  5186               	movf	sprintf@c& (0+255),w,b
 15274                           
 15275                           ; Switch size 1, requested type "space"
 15276                           ; Number of cases is 2, Range of values is 0 to 115
 15277                           ; switch strategies available:
 15278                           ; Name         Instructions Cycles
 15279                           ; simple_byte            7     4 (average)
 15280                           ;	Chosen strategy is simple_byte
 15281  003C24  0A00               	xorlw	0	; case 0
 15282  003C26  B4D8               	btfsc	status,2,c
 15283  003C28  D00F               	goto	u14240
 15284  003C2A  0A73               	xorlw	115	; case 115
 15285  003C2C  B4D8               	btfsc	status,2,c
 15286  003C2E  D7C2               	goto	l2838
 15287  003C30                     l2844:
 15288                           
 15289                           ; BSR set to: 0
 15290                           
 15291                           ; BSR set to: 0
 15292                           
 15293                           ;doprnt.c: 1422: {
 15294                           
 15295                           ; BSR set to: 0
 15296  003C30  C07F  FFF6         	movff	sprintf@f,tblptrl
 15297  003C34  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15298  003C38  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15299  003C3A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15300  003C3C                     	if	0	;tblptru may be non-zero
 15301  003C3C                     	endif
 15302  003C3C                     	if	0	;tblptru may be non-zero
 15303  003C3C                     	endif
 15304  003C3C  0008               	tblrd		*
 15305  003C3E  CFF5 F086          	movff	tablat,sprintf@c
 15306  003C42  5186               	movf	sprintf@c& (0+255),w,b
 15307  003C44  A4D8               	btfss	status,2,c
 15308  003C46  D7A6               	goto	l2833
 15309  003C48                     u14240:
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;doprnt.c: 1538: *sp = 0;
 15313                           
 15314                           ; BSR set to: 0
 15315                           
 15316                           ;doprnt.c: 1469: }
 15317                           ;doprnt.c: 1533: }
 15318                           ;doprnt.c: 1535: alldone:
 15319                           
 15320                           ; BSR set to: 0
 15321  003C48  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15322  003C4C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15323  003C50  0E00               	movlw	0
 15324  003C52  6EDF               	movwf	indf2,c
 15325  003C54  0012               	return	
 15326  003C56                     __end_of_sprintf:
 15327                           	opt stack 0
 15328                           tosu	equ	0xFFF
 15329                           tosh	equ	0xFFE
 15330                           tosl	equ	0xFFD
 15331                           pclath	equ	0xFFA
 15332                           tblptru	equ	0xFF8
 15333                           tblptrh	equ	0xFF7
 15334                           tblptrl	equ	0xFF6
 15335                           tablat	equ	0xFF5
 15336                           prodh	equ	0xFF4
 15337                           prodl	equ	0xFF3
 15338                           intcon	equ	0xFF2
 15339                           intcon2	equ	0xFF1
 15340                           intcon3	equ	0xFF0
 15341                           indf0	equ	0xFEF
 15342                           postinc0	equ	0xFEE
 15343                           plusw0	equ	0xFEB
 15344                           fsr0h	equ	0xFEA
 15345                           fsr0l	equ	0xFE9
 15346                           wreg	equ	0xFE8
 15347                           indf1	equ	0xFE7
 15348                           postinc1	equ	0xFE6
 15349                           postdec1	equ	0xFE5
 15350                           fsr1h	equ	0xFE2
 15351                           fsr1l	equ	0xFE1
 15352                           indf2	equ	0xFDF
 15353                           postinc2	equ	0xFDE
 15354                           postdec2	equ	0xFDD
 15355                           plusw2	equ	0xFDB
 15356                           fsr2h	equ	0xFDA
 15357                           fsr2l	equ	0xFD9
 15358                           status	equ	0xFD8
 15359                           
 15360 ;; *************** function _memset *****************
 15361 ;; Defined at:
 15362 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;  p1              2   29[BANK0 ] PTR void 
 15365 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15366 ;;  c               2   31[BANK0 ] int 
 15367 ;;  n               2   33[BANK0 ] unsigned int 
 15368 ;; Auto vars:     Size  Location     Type
 15369 ;;  p               2   35[BANK0 ] PTR unsigned char 
 15370 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15371 ;; Return value:  Size  Location     Type
 15372 ;;                  2   29[BANK0 ] PTR void 
 15373 ;; Registers used:
 15374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15375 ;; Tracked objects:
 15376 ;;		On entry : 0/0
 15377 ;;		On exit  : 0/0
 15378 ;;		Unchanged: 0/0
 15379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15380 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15381 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15383 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15384 ;;Total ram usage:        8 bytes
 15385 ;; Hardware stack levels used:    1
 15386 ;; Hardware stack levels required when called:   11
 15387 ;; This function calls:
 15388 ;;		Nothing
 15389 ;; This function is called by:
 15390 ;;		_USBDeviceInit
 15391 ;;		_USBStdSetCfgHandler
 15392 ;;		_Term_MainSm
 15393 ;; This function uses a non-reentrant model
 15394 ;;
 15395                           
 15396                           	psect	text59
 15397  006322                     __ptext59:
 15398                           	opt stack 0
 15399  006322                     _memset:
 15400                           	opt stack 14
 15401                           
 15402                           ; BSR set to: 0
 15403                           ;incstack = 0
 15404  006322  C07D  F083         	movff	memset@p1,memset@p
 15405  006326  C07E  F084         	movff	memset@p1+1,memset@p+1
 15406  00632A  D009               	goto	l3314
 15407  00632C                     l12703:
 15408  00632C  C083  FFD9         	movff	memset@p,fsr2l
 15409  006330  C084  FFDA         	movff	memset@p+1,fsr2h
 15410  006334  C07F  FFDF         	movff	memset@c,indf2
 15411  006338  0100               	movlb	0	; () banked
 15412  00633A  4B83               	infsnz	memset@p& (0+255),f,b
 15413  00633C  2B84               	incf	(memset@p+1)& (0+255),f,b
 15414  00633E                     l3314:
 15415                           
 15416                           ; BSR set to: 0
 15417  00633E  0100               	movlb	0	; () banked
 15418  006340  0781               	decf	memset@n& (0+255),f,b
 15419  006342  A0D8               	btfss	status,0,c
 15420  006344  0782               	decf	(memset@n+1)& (0+255),f,b
 15421  006346  2981               	incf	memset@n& (0+255),w,b
 15422  006348  E1F1               	bnz	l12703
 15423  00634A  2982               	incf	(memset@n+1)& (0+255),w,b
 15424  00634C  B4D8               	btfsc	status,2,c
 15425  00634E  0012               	return	
 15426  006350  D7ED               	goto	l3315
 15427  006352                     __end_of_memset:
 15428                           	opt stack 0
 15429                           tosu	equ	0xFFF
 15430                           tosh	equ	0xFFE
 15431                           tosl	equ	0xFFD
 15432                           pclath	equ	0xFFA
 15433                           tblptru	equ	0xFF8
 15434                           tblptrh	equ	0xFF7
 15435                           tblptrl	equ	0xFF6
 15436                           tablat	equ	0xFF5
 15437                           prodh	equ	0xFF4
 15438                           prodl	equ	0xFF3
 15439                           intcon	equ	0xFF2
 15440                           intcon2	equ	0xFF1
 15441                           intcon3	equ	0xFF0
 15442                           indf0	equ	0xFEF
 15443                           postinc0	equ	0xFEE
 15444                           plusw0	equ	0xFEB
 15445                           fsr0h	equ	0xFEA
 15446                           fsr0l	equ	0xFE9
 15447                           wreg	equ	0xFE8
 15448                           indf1	equ	0xFE7
 15449                           postinc1	equ	0xFE6
 15450                           postdec1	equ	0xFE5
 15451                           fsr1h	equ	0xFE2
 15452                           fsr1l	equ	0xFE1
 15453                           indf2	equ	0xFDF
 15454                           postinc2	equ	0xFDE
 15455                           postdec2	equ	0xFDD
 15456                           plusw2	equ	0xFDB
 15457                           fsr2h	equ	0xFDA
 15458                           fsr2l	equ	0xFD9
 15459                           status	equ	0xFD8
 15460                           
 15461 ;; *************** function _Terminal *****************
 15462 ;; Defined at:
 15463 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15464 ;; Parameters:    Size  Location     Type
 15465 ;;		None
 15466 ;; Auto vars:     Size  Location     Type
 15467 ;;  i               1   68[BANK0 ] unsigned char 
 15468 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15469 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15470 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15471 ;;  Index           1   70[BANK0 ] unsigned char 
 15472 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15473 ;; Return value:  Size  Location     Type
 15474 ;;                  1    wreg      void 
 15475 ;; Registers used:
 15476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15486 ;;Total ram usage:      455 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; Hardware stack levels required when called:   15
 15489 ;; This function calls:
 15490 ;;		_I2cSlv_I2cReadMsgSts
 15491 ;;		_I2cSlv_ReceiveI2cMsg
 15492 ;;		_I2cSlv_SendI2cMsg
 15493 ;;		_OsTmr_Wait
 15494 ;;		_atoi
 15495 ;;		_getsUSBUSART
 15496 ;;		_itoa
 15497 ;;		_putUSBUSART
 15498 ;;		_strcpy
 15499 ;;		_strtol
 15500 ;;		_xtoi
 15501 ;; This function is called by:
 15502 ;;		_Term_MainSm
 15503 ;; This function uses a non-reentrant model
 15504 ;;
 15505                           
 15506                           	psect	text60
 15507  0000D0                     __ptext60:
 15508                           	opt stack 0
 15509  0000D0                     _Terminal:
 15510                           	opt stack 11
 15511                           
 15512                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 15513                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 15514                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 15515                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 15516                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 15517                           ;term.c: 435: UINT8 Index;
 15518                           ;term.c: 436: static UINT8 Len[4];
 15519                           ;term.c: 437: static UINT8 PackageLen;
 15520                           ;term.c: 438: static UINT8 Addr[4];
 15521                           ;term.c: 439: static UINT8 SlaveAddr;
 15522                           ;term.c: 440: static PayloadType Payload[20u];
 15523                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 15524                           
 15525                           ; BSR set to: 0
 15526                           ;incstack = 0
 15527  0000D0  0E00               	movlw	0
 15528  0000D2  0100               	movlb	0	; () banked
 15529  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15530                           
 15531                           ; BSR set to: 0
 15532                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15533                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15534                           ;term.c: 445: static SwTimerType SwTimer;
 15535                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15536  0000D6  0E1F               	movlw	31
 15537  0000D8  65CC               	cpfsgt	_USBDeviceState& (0+255),b
 15538  0000DA  0012               	return	
 15539                           
 15540                           ; BSR set to: 0
 15541  0000DC  B265               	btfsc	3941,1,c	;volatile
 15542  0000DE  0012               	return	
 15543  0000E0  D278               	goto	l2396
 15544  0000E2                     
 15545                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15546                           
 15547                           ; BSR set to: 0
 15548  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15549  0000E4  0100               	movlb	0	; () banked
 15550  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15551  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15552  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15553  0000EC  0EC8               	movlw	200
 15554  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15555  0000F0  ECDB  F025         	call	_getsUSBUSART	;wreg free
 15556  0000F4  0100               	movlb	0	; () banked
 15557  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15558                           
 15559                           ; BSR set to: 0
 15560                           ;term.c: 458: if (ReceivedBytes > 0)
 15561  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15562  0000FA  B4D8               	btfsc	status,2,c
 15563  0000FC  0012               	return	
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;term.c: 459: {
 15567                           ;term.c: 461: if (EchoOption == 1u)
 15568  0000FE  0102               	movlb	2	; () banked
 15569  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15570  000102  A4D8               	btfss	status,2,c
 15571  000104  D026               	goto	l2400
 15572                           
 15573                           ; BSR set to: 2
 15574                           ;term.c: 462: {
 15575                           ;term.c: 464: if((cdc_trf_state == 0))
 15576  000106  0100               	movlb	0	; () banked
 15577  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15578  00010A  A4D8               	btfss	status,2,c
 15579  00010C  D022               	goto	l2400
 15580                           
 15581                           ; BSR set to: 0
 15582                           ;term.c: 465: {
 15583                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15584  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15585  000110  0D01               	mullw	1
 15586  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15587  000114  24F3               	addwf	prodl,w,c
 15588  000116  6ED9               	movwf	fsr2l,c
 15589  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15590  00011A  20F4               	addwfc	prodh,w,c
 15591  00011C  6EDA               	movwf	fsr2h,c
 15592  00011E  0E0D               	movlw	13
 15593  000120  6EDF               	movwf	indf2,c
 15594                           
 15595                           ; BSR set to: 0
 15596                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15597  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15598  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15599  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15600  000128  0E01               	movlw	1
 15601  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15602  00012C  0E00               	movlw	0
 15603  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15604  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15605  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15606  000134  6ED9               	movwf	fsr2l,c
 15607  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15608  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15609  00013A  6EDA               	movwf	fsr2h,c
 15610  00013C  0E0A               	movlw	10
 15611  00013E  6EDF               	movwf	indf2,c
 15612                           
 15613                           ; BSR set to: 0
 15614                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15615  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15616  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15617  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15618  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15619  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15620  00014A  0F02               	addlw	2
 15621  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15622  00014E  ECFC  F032         	call	_putUSBUSART	;wreg free
 15623  000152                     l2400:
 15624                           
 15625                           ;term.c: 469: }
 15626                           ;term.c: 470: }
 15627                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15628                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15629                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15630  000152  0E53               	movlw	83
 15631  000154  010A               	movlb	10	; () banked
 15632  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15633  000158  A4D8               	btfss	status,2,c
 15634  00015A  D043               	goto	l2401
 15635                           
 15636                           ; BSR set to: 10
 15637  00015C  0E4F               	movlw	79
 15638  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15639  000160  A4D8               	btfss	status,2,c
 15640  000162  D03F               	goto	l2401
 15641                           
 15642                           ; BSR set to: 10
 15643  000164  0E3A               	movlw	58
 15644  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15645  000168  A4D8               	btfss	status,2,c
 15646  00016A  D03B               	goto	l2401
 15647                           
 15648                           ; BSR set to: 10
 15649                           ;term.c: 476: {
 15650                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15651  00016C  0E47               	movlw	71
 15652  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15653  000170  A4D8               	btfss	status,2,c
 15654  000172  0012               	return	
 15655                           
 15656                           ; BSR set to: 10
 15657  000174  0E3A               	movlw	58
 15658  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15659  000178  A4D8               	btfss	status,2,c
 15660  00017A  0012               	return	
 15661                           
 15662                           ; BSR set to: 10
 15663                           ;term.c: 479: {
 15664                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15665  00017C  0E44               	movlw	68
 15666  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15667  000180  A4D8               	btfss	status,2,c
 15668  000182  D015               	goto	l2403
 15669                           
 15670                           ; BSR set to: 10
 15671  000184  0E46               	movlw	70
 15672  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15673  000188  A4D8               	btfss	status,2,c
 15674  00018A  D011               	goto	l2403
 15675                           
 15676                           ; BSR set to: 10
 15677                           ;term.c: 482: {
 15678                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15679  00018C  0E41               	movlw	65
 15680  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15681  000190  A4D8               	btfss	status,2,c
 15682  000192  D004               	goto	l2404
 15683                           
 15684                           ; BSR set to: 10
 15685                           ;term.c: 484: {
 15686                           ;term.c: 485: FormatOption = 1u;
 15687  000194  0E01               	movlw	1
 15688  000196  0102               	movlb	2	; () banked
 15689  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15690                           
 15691                           ;term.c: 486: }
 15692  00019A  0012               	return	
 15693  00019C                     l2404:
 15694                           
 15695                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15696                           
 15697                           ; BSR set to: 2
 15698  00019C  0E42               	movlw	66
 15699  00019E  010A               	movlb	10	; () banked
 15700  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15701  0001A2  A4D8               	btfss	status,2,c
 15702  0001A4  0012               	return	
 15703                           
 15704                           ; BSR set to: 10
 15705                           ;term.c: 488: {
 15706                           ;term.c: 489: FormatOption = 0u;
 15707  0001A6  0E00               	movlw	0
 15708  0001A8  0102               	movlb	2	; () banked
 15709  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15710                           
 15711                           ; BSR set to: 2
 15712                           ;term.c: 490: }
 15713                           ;term.c: 491: }
 15714                           
 15715                           ; BSR set to: 2
 15716  0001AC  0012               	return	
 15717  0001AE                     l2403:
 15718                           
 15719                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15720                           
 15721                           ; BSR set to: 2
 15722  0001AE  0E45               	movlw	69
 15723  0001B0  010A               	movlb	10	; () banked
 15724  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15725  0001B4  A4D8               	btfss	status,2,c
 15726  0001B6  0012               	return	
 15727                           
 15728                           ; BSR set to: 10
 15729  0001B8  0E4D               	movlw	77
 15730  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15731  0001BC  A4D8               	btfss	status,2,c
 15732  0001BE  0012               	return	
 15733                           
 15734                           ; BSR set to: 10
 15735                           ;term.c: 494: {
 15736                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15737  0001C0  0E31               	movlw	49
 15738  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15739  0001C4  A4D8               	btfss	status,2,c
 15740  0001C6  D004               	goto	l2409
 15741                           
 15742                           ; BSR set to: 10
 15743                           ;term.c: 496: {
 15744                           ;term.c: 497: EchoOption = 1u;
 15745  0001C8  0E01               	movlw	1
 15746  0001CA  0102               	movlb	2	; () banked
 15747  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15748                           
 15749                           ;term.c: 498: }
 15750  0001CE  0012               	return	
 15751  0001D0                     l2409:
 15752                           
 15753                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15754                           
 15755                           ; BSR set to: 2
 15756  0001D0  0E30               	movlw	48
 15757  0001D2  010A               	movlb	10	; () banked
 15758  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15759  0001D6  A4D8               	btfss	status,2,c
 15760  0001D8  0012               	return	
 15761                           
 15762                           ; BSR set to: 10
 15763                           ;term.c: 500: {
 15764                           ;term.c: 501: EchoOption = 0u;
 15765  0001DA  0E00               	movlw	0
 15766  0001DC  0102               	movlb	2	; () banked
 15767  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15768                           
 15769                           ; BSR set to: 2
 15770                           ;term.c: 507: }
 15771                           ;term.c: 508: }
 15772                           ;term.c: 509: }
 15773                           
 15774                           ; BSR set to: 2
 15775                           
 15776                           ; BSR set to: 2
 15777                           
 15778                           ;term.c: 504: else
 15779                           ;term.c: 505: {
 15780                           
 15781                           ; BSR set to: 2
 15782                           
 15783                           ; BSR set to: 2
 15784                           ;term.c: 502: }
 15785                           ;term.c: 503: }
 15786                           
 15787                           ; BSR set to: 2
 15788  0001E0  0012               	return	
 15789  0001E2                     l2401:
 15790                           
 15791                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15792                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15793                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15794                           
 15795                           ; BSR set to: 2
 15796  0001E2  0E53               	movlw	83
 15797  0001E4  010A               	movlb	10	; () banked
 15798  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15799  0001E8  A4D8               	btfss	status,2,c
 15800  0001EA  D0D3               	goto	l2414
 15801                           
 15802                           ; BSR set to: 10
 15803  0001EC  0E42               	movlw	66
 15804  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15805  0001F0  A4D8               	btfss	status,2,c
 15806  0001F2  D0CF               	goto	l2414
 15807                           
 15808                           ; BSR set to: 10
 15809  0001F4  0E3A               	movlw	58
 15810  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15811  0001F8  A4D8               	btfss	status,2,c
 15812  0001FA  D0CB               	goto	l2414
 15813                           
 15814                           ; BSR set to: 10
 15815                           ;term.c: 513: {
 15816                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15817  0001FC  0E57               	movlw	87
 15818  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15819  000200  A4D8               	btfss	status,2,c
 15820  000202  D091               	goto	l2415
 15821                           
 15822                           ; BSR set to: 10
 15823  000204  0E3A               	movlw	58
 15824  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15825  000208  A4D8               	btfss	status,2,c
 15826  00020A  D08D               	goto	l2415
 15827                           
 15828                           ; BSR set to: 10
 15829                           ;term.c: 515: {
 15830                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15831  00020C  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15832                           
 15833                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15834  000210  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15835                           
 15836                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15837  000214  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15838                           
 15839                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15840  000218  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15841                           
 15842                           ; BSR set to: 10
 15843                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15844  00021C  0EAC               	movlw	low Terminal@Len
 15845  00021E  0100               	movlb	0	; () banked
 15846  000220  6F83               	movwf	atoi@s& (0+255),b
 15847  000222  0E03               	movlw	high Terminal@Len
 15848  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15849  000226  ECEF  F01C         	call	_atoi	;wreg free
 15850  00022A  0100               	movlb	0	; () banked
 15851  00022C  5183               	movf	?_atoi& (0+255),w,b
 15852  00022E  0102               	movlb	2	; () banked
 15853  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15854                           
 15855                           ; BSR set to: 2
 15856                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15857  000232  0EA8               	movlw	low Terminal@Addr
 15858  000234  0100               	movlb	0	; () banked
 15859  000236  6F83               	movwf	xtoi@s& (0+255),b
 15860  000238  0E03               	movlw	high Terminal@Addr
 15861  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15862  00023C  EC30  F01B         	call	_xtoi	;wreg free
 15863  000240  0100               	movlb	0	; () banked
 15864  000242  5183               	movf	?_xtoi& (0+255),w,b
 15865  000244  0102               	movlb	2	; () banked
 15866  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15867                           
 15868                           ; BSR set to: 2
 15869                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15870  000248  0E00               	movlw	0
 15871  00024A  0100               	movlb	0	; () banked
 15872  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15873  00024E  D032               	goto	l2416
 15874  000250                     
 15875                           ;term.c: 527: {
 15876                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15877                           
 15878                           ; BSR set to: 0
 15879  000250  0100               	movlb	0	; () banked
 15880  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15881  000254  0D02               	mullw	2
 15882  000256  0E0B               	movlw	11
 15883  000258  26F3               	addwf	prodl,f,c
 15884  00025A  0E00               	movlw	0
 15885  00025C  22F4               	addwfc	prodh,f,c
 15886  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15887  000260  24F3               	addwf	prodl,w,c
 15888  000262  6ED9               	movwf	fsr2l,c
 15889  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15890  000266  20F4               	addwfc	prodh,w,c
 15891  000268  6EDA               	movwf	fsr2h,c
 15892  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15893  00026C  0D04               	mullw	4
 15894  00026E  0E66               	movlw	low Terminal@Payload
 15895  000270  24F3               	addwf	prodl,w,c
 15896  000272  6EE1               	movwf	fsr1l,c
 15897  000274  0E07               	movlw	high Terminal@Payload
 15898  000276  20F4               	addwfc	prodh,w,c
 15899  000278  6EE2               	movwf	fsr1h,c
 15900  00027A  CFDF FFE7          	movff	indf2,indf1
 15901                           
 15902                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15903  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15904  000280  0D02               	mullw	2
 15905  000282  0E0C               	movlw	12
 15906  000284  26F3               	addwf	prodl,f,c
 15907  000286  0E00               	movlw	0
 15908  000288  22F4               	addwfc	prodh,f,c
 15909  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15910  00028C  24F3               	addwf	prodl,w,c
 15911  00028E  6ED9               	movwf	fsr2l,c
 15912  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15913  000292  20F4               	addwfc	prodh,w,c
 15914  000294  6EDA               	movwf	fsr2h,c
 15915  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15916  000298  0D04               	mullw	4
 15917  00029A  0E01               	movlw	1
 15918  00029C  26F3               	addwf	prodl,f,c
 15919  00029E  0E00               	movlw	0
 15920  0002A0  22F4               	addwfc	prodh,f,c
 15921  0002A2  0E66               	movlw	low Terminal@Payload
 15922  0002A4  24F3               	addwf	prodl,w,c
 15923  0002A6  6EE1               	movwf	fsr1l,c
 15924  0002A8  0E07               	movlw	high Terminal@Payload
 15925  0002AA  20F4               	addwfc	prodh,w,c
 15926  0002AC  6EE2               	movwf	fsr1h,c
 15927  0002AE  CFDF FFE7          	movff	indf2,indf1
 15928                           
 15929                           ; BSR set to: 0
 15930  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15931  0002B4                     l2416:
 15932                           
 15933                           ; BSR set to: 0
 15934                           
 15935                           ; BSR set to: 0
 15936  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15937  0002B6  0102               	movlb	2	; () banked
 15938  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15939  0002BA  B0D8               	btfsc	status,0,c
 15940  0002BC  D7C9               	goto	l2417
 15941                           
 15942                           ; BSR set to: 2
 15943                           ;term.c: 530: }
 15944                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15945                           
 15946                           ; BSR set to: 2
 15947  0002BE  0E00               	movlw	0
 15948  0002C0  0100               	movlb	0	; () banked
 15949  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15950  0002C4  D01F               	goto	l2419
 15951  0002C6                     
 15952                           ;term.c: 533: {
 15953                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15954                           
 15955                           ; BSR set to: 0
 15956  0002C6  0100               	movlb	0	; () banked
 15957  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15958  0002CA  0D04               	mullw	4
 15959  0002CC  0E66               	movlw	low Terminal@Payload
 15960  0002CE  24F3               	addwf	prodl,w,c
 15961  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15962  0002D2  0E07               	movlw	high Terminal@Payload
 15963  0002D4  20F4               	addwfc	prodh,w,c
 15964  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15965  0002D8  0E00               	movlw	0
 15966  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15967  0002DC  0E00               	movlw	0
 15968  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15969  0002E0  0E00               	movlw	0
 15970  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15971  0002E4  0E10               	movlw	16
 15972  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15973  0002E8  ECC3  F00D         	call	_strtol	;wreg free
 15974  0002EC  0100               	movlb	0	; () banked
 15975  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15976  0002F0  0D01               	mullw	1
 15977  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15978  0002F4  24F3               	addwf	prodl,w,c
 15979  0002F6  6ED9               	movwf	fsr2l,c
 15980  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15981  0002FA  20F4               	addwfc	prodh,w,c
 15982  0002FC  6EDA               	movwf	fsr2h,c
 15983  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15984                           
 15985                           ; BSR set to: 0
 15986  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15987  000304                     l2419:
 15988                           
 15989                           ; BSR set to: 0
 15990                           
 15991                           ; BSR set to: 0
 15992  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15993  000306  0102               	movlb	2	; () banked
 15994  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15995  00030A  B0D8               	btfsc	status,0,c
 15996  00030C  D7DC               	goto	l2420
 15997                           
 15998                           ; BSR set to: 2
 15999                           ;term.c: 539: }
 16000                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 16001                           
 16002                           ; BSR set to: 2
 16003  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 16004  000310  0100               	movlb	0	; () banked
 16005  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 16006  000314  0E01               	movlw	high Terminal@TermTxBuffer
 16007  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 16008  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 16009  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 16010  000320  EC61  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 16011                           
 16012                           ;term.c: 543: }
 16013  000324  0012               	return	
 16014  000326                     l2415:
 16015                           
 16016                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 16017  000326  0E52               	movlw	82
 16018  000328  010A               	movlb	10	; () banked
 16019  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 16020  00032C  A4D8               	btfss	status,2,c
 16021  00032E  0012               	return	
 16022                           
 16023                           ; BSR set to: 10
 16024  000330  0E3A               	movlw	58
 16025  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 16026  000334  A4D8               	btfss	status,2,c
 16027  000336  0012               	return	
 16028                           
 16029                           ; BSR set to: 10
 16030                           ;term.c: 545: {
 16031                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 16032  000338  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 16033                           
 16034                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 16035  00033C  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 16036                           
 16037                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 16038  000340  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 16039                           
 16040                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 16041  000344  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 16042                           
 16043                           ; BSR set to: 10
 16044                           ;term.c: 553: PackageLen = atoi((void*)Len);
 16045  000348  0EAC               	movlw	low Terminal@Len
 16046  00034A  0100               	movlb	0	; () banked
 16047  00034C  6F83               	movwf	atoi@s& (0+255),b
 16048  00034E  0E03               	movlw	high Terminal@Len
 16049  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 16050  000352  ECEF  F01C         	call	_atoi	;wreg free
 16051  000356  0100               	movlb	0	; () banked
 16052  000358  5183               	movf	?_atoi& (0+255),w,b
 16053  00035A  0102               	movlb	2	; () banked
 16054  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 16055                           
 16056                           ; BSR set to: 2
 16057                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 16058  00035E  0EA8               	movlw	low Terminal@Addr
 16059  000360  0100               	movlb	0	; () banked
 16060  000362  6F83               	movwf	xtoi@s& (0+255),b
 16061  000364  0E03               	movlw	high Terminal@Addr
 16062  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 16063  000368  EC30  F01B         	call	_xtoi	;wreg free
 16064  00036C  0100               	movlb	0	; () banked
 16065  00036E  5183               	movf	?_xtoi& (0+255),w,b
 16066  000370  0102               	movlb	2	; () banked
 16067  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 16068                           
 16069                           ; BSR set to: 2
 16070                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 16071  000374  0E40               	movlw	low Terminal@TermRxBuffer
 16072  000376  0100               	movlb	0	; () banked
 16073  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 16074  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 16075  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 16076  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 16077  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 16078  000386  ECE2  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 16079                           
 16080                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 16081  00038A  0E01               	movlw	1
 16082  00038C  0102               	movlb	2	; () banked
 16083  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 16084                           
 16085                           ; BSR set to: 2
 16086                           ;term.c: 561: }
 16087                           ;term.c: 562: }
 16088                           
 16089                           ; BSR set to: 2
 16090  000390  0012               	return	
 16091  000392                     l2414:
 16092                           
 16093                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 16094                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 16095                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 16096                           
 16097                           ; BSR set to: 2
 16098  000392  0E54               	movlw	84
 16099  000394  010A               	movlb	10	; () banked
 16100  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 16101  000398  A4D8               	btfss	status,2,c
 16102  00039A  0012               	return	
 16103                           
 16104                           ; BSR set to: 10
 16105  00039C  0E45               	movlw	69
 16106  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 16107  0003A0  A4D8               	btfss	status,2,c
 16108  0003A2  0012               	return	
 16109                           
 16110                           ; BSR set to: 10
 16111  0003A4  0E4C               	movlw	76
 16112  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 16113  0003A8  A4D8               	btfss	status,2,c
 16114  0003AA  0012               	return	
 16115                           
 16116                           ; BSR set to: 10
 16117                           ;term.c: 566: {
 16118                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 16119  0003AC  CA03  F3AC         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 16120                           
 16121                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 16122  0003B0  CA04  F3AD         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 16123                           
 16124                           ; BSR set to: 10
 16125                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 16126  0003B4  0EAC               	movlw	low Terminal@Len
 16127  0003B6  0100               	movlb	0	; () banked
 16128  0003B8  6F83               	movwf	atoi@s& (0+255),b
 16129  0003BA  0E03               	movlw	high Terminal@Len
 16130  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 16131  0003BE  ECEF  F01C         	call	_atoi	;wreg free
 16132  0003C2  C083  F31A         	movff	?_atoi,_UsbMasterPhoneNumberLen
 16133  0003C6  C084  F31B         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 16134                           
 16135                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 16136  0003CA  0E00               	movlw	0
 16137  0003CC  0100               	movlb	0	; () banked
 16138  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 16139  0003D0  D018               	goto	l2426
 16140  0003D2                     
 16141                           ; BSR set to: 0
 16142                           ;term.c: 573: {
 16143                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 16144                           
 16145                           ; BSR set to: 0
 16146  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 16147  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 16148  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16149  0003D8  0E05               	movlw	5
 16150  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 16151  0003DC  0E00               	movlw	0
 16152  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16153  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 16154  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 16155  0003E4  6ED9               	movwf	fsr2l,c
 16156  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 16157  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16158  0003EA  6EDA               	movwf	fsr2h,c
 16159  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 16160  0003EE  0D01               	mullw	1
 16161  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 16162  0003F2  24F3               	addwf	prodl,w,c
 16163  0003F4  6EE1               	movwf	fsr1l,c
 16164  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 16165  0003F8  20F4               	addwfc	prodh,w,c
 16166  0003FA  6EE2               	movwf	fsr1h,c
 16167  0003FC  CFDF FFE7          	movff	indf2,indf1
 16168                           
 16169                           ; BSR set to: 0
 16170  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 16171  000402                     l2426:
 16172                           
 16173                           ; BSR set to: 0
 16174                           
 16175                           ; BSR set to: 0
 16176  000402  51A4               	movf	Terminal@i& (0+255),w,b
 16177  000404  6FA2               	movwf	??_Terminal& (0+255),b
 16178  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16179  000408  0103               	movlb	3	; () banked
 16180  00040A  511A               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 16181  00040C  0100               	movlb	0	; () banked
 16182  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 16183  000410  0103               	movlb	3	; () banked
 16184  000412  511B               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 16185  000414  0100               	movlb	0	; () banked
 16186  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 16187  000418  B0D8               	btfsc	status,0,c
 16188  00041A  0012               	return	
 16189  00041C  D7DA               	goto	l2427
 16190  00041E                     
 16191                           ;term.c: 619: if((cdc_trf_state == 0))
 16192                           
 16193                           ; BSR set to: 0
 16194  00041E  0100               	movlb	0	; () banked
 16195  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16196  000422  A4D8               	btfss	status,2,c
 16197  000424  0012               	return	
 16198                           
 16199                           ; BSR set to: 0
 16200                           ;term.c: 620: {
 16201                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 16202  000426  0E53               	movlw	83
 16203  000428  0102               	movlb	2	; () banked
 16204  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 16205                           
 16206                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 16207  00042C  0E42               	movlw	66
 16208  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 16209                           
 16210                           ;term.c: 623: UsbTxBuffer[2] = '[';
 16211  000430  0E5B               	movlw	91
 16212  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 16213                           
 16214                           ; BSR set to: 2
 16215                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 16216  000434  C3A8  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 16217                           
 16218                           ; BSR set to: 2
 16219                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 16220  000438  C3A9  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 16221                           
 16222                           ;term.c: 626: UsbTxBuffer[5] = ']';
 16223  00043C  0E5D               	movlw	93
 16224  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 16225                           
 16226                           ;term.c: 627: UsbTxBuffer[6] = ':';
 16227  000440  0E3A               	movlw	58
 16228  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 16229                           
 16230                           ; BSR set to: 2
 16231                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 16232  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 16233  000446  0100               	movlb	0	; () banked
 16234  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 16235  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 16236  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16237  00044E  0E07               	movlw	7
 16238  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 16239  000452  ECFC  F032         	call	_putUSBUSART	;wreg free
 16240                           
 16241                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 16242  000456  0E02               	movlw	2
 16243  000458  0102               	movlb	2	; () banked
 16244  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 16245                           
 16246                           ; BSR set to: 2
 16247                           ;term.c: 632: }
 16248                           ;term.c: 633: break;
 16249  00045C  0012               	return	
 16250  00045E                     
 16251                           ; BSR set to: 2
 16252                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 16253                           
 16254                           ; BSR set to: 2
 16255  00045E  EC1E  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 16256  000462  06E8               	decf	wreg,f,c
 16257  000464  A4D8               	btfss	status,2,c
 16258  000466  D088               	goto	l2435
 16259                           
 16260                           ;term.c: 638: {
 16261                           ;term.c: 640: if (FormatOption == 1u)
 16262  000468  0102               	movlb	2	; () banked
 16263  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16264  00046C  A4D8               	btfss	status,2,c
 16265  00046E  D027               	goto	u14120
 16266                           
 16267                           ; BSR set to: 2
 16268                           ;term.c: 641: {
 16269                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 16270  000470  0E00               	movlw	0
 16271  000472  0100               	movlb	0	; () banked
 16272  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 16273  000476  D01E               	goto	l2437
 16274  000478                     
 16275                           ;term.c: 644: {
 16276                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 16277                           
 16278                           ; BSR set to: 0
 16279  000478  0100               	movlb	0	; () banked
 16280  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 16281  00047C  0D04               	mullw	4
 16282  00047E  0E66               	movlw	low Terminal@Payload
 16283  000480  24F3               	addwf	prodl,w,c
 16284  000482  6F93               	movwf	itoa@buf& (0+255),b
 16285  000484  0E07               	movlw	high Terminal@Payload
 16286  000486  20F4               	addwfc	prodh,w,c
 16287  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 16288  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 16289  00048C  0D01               	mullw	1
 16290  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 16291  000490  24F3               	addwf	prodl,w,c
 16292  000492  6ED9               	movwf	fsr2l,c
 16293  000494  0E05               	movlw	high Terminal@TermRxBuffer
 16294  000496  20F4               	addwfc	prodh,w,c
 16295  000498  6EDA               	movwf	fsr2h,c
 16296  00049A  50DF               	movf	indf2,w,c
 16297  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 16298  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 16299  0004A0  6F95               	movwf	itoa@val& (0+255),b
 16300  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 16301  0004A4  0E00               	movlw	0
 16302  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 16303  0004A8  0E0A               	movlw	10
 16304  0004AA  6F97               	movwf	itoa@base& (0+255),b
 16305  0004AC  EC7C  F02F         	call	_itoa	;wreg free
 16306  0004B0  0100               	movlb	0	; () banked
 16307  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 16308  0004B4                     l2437:
 16309                           
 16310                           ; BSR set to: 0
 16311                           
 16312                           ; BSR set to: 0
 16313  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 16314  0004B6  0102               	movlb	2	; () banked
 16315  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 16316  0004BA  B0D8               	btfsc	status,0,c
 16317  0004BC  D7DD               	goto	l2438
 16318  0004BE                     u14120:
 16319                           
 16320                           ; BSR set to: 2
 16321                           ;term.c: 646: }
 16322                           ;term.c: 647: }
 16323                           ;term.c: 650: if((cdc_trf_state == 0))
 16324                           
 16325                           ; BSR set to: 2
 16326                           
 16327                           ; BSR set to: 2
 16328  0004BE  0100               	movlb	0	; () banked
 16329  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16330  0004C2  A4D8               	btfss	status,2,c
 16331  0004C4  0012               	return	
 16332                           
 16333                           ; BSR set to: 0
 16334                           ;term.c: 651: {
 16335                           ;term.c: 653: if (FormatOption == 1u)
 16336  0004C6  0102               	movlb	2	; () banked
 16337  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16338  0004CA  A4D8               	btfss	status,2,c
 16339  0004CC  D02B               	goto	l2441
 16340                           
 16341                           ; BSR set to: 2
 16342                           ;term.c: 654: {
 16343                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 16344  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16345  0004D0  0D08               	mullw	8
 16346  0004D2  0E03               	movlw	3
 16347  0004D4  26F3               	addwf	prodl,f,c
 16348  0004D6  0E00               	movlw	0
 16349  0004D8  22F4               	addwfc	prodh,f,c
 16350  0004DA  0E66               	movlw	low Terminal@Payload
 16351  0004DC  24F3               	addwf	prodl,w,c
 16352  0004DE  6ED9               	movwf	fsr2l,c
 16353  0004E0  0E07               	movlw	high Terminal@Payload
 16354  0004E2  20F4               	addwfc	prodh,w,c
 16355  0004E4  6EDA               	movwf	fsr2h,c
 16356  0004E6  0E0D               	movlw	13
 16357  0004E8  6EDF               	movwf	indf2,c
 16358                           
 16359                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 16360  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16361  0004EC  0D08               	mullw	8
 16362  0004EE  0E02               	movlw	2
 16363  0004F0  26F3               	addwf	prodl,f,c
 16364  0004F2  0E00               	movlw	0
 16365  0004F4  22F4               	addwfc	prodh,f,c
 16366  0004F6  0E66               	movlw	low Terminal@Payload
 16367  0004F8  24F3               	addwf	prodl,w,c
 16368  0004FA  6ED9               	movwf	fsr2l,c
 16369  0004FC  0E07               	movlw	high Terminal@Payload
 16370  0004FE  20F4               	addwfc	prodh,w,c
 16371  000500  6EDA               	movwf	fsr2h,c
 16372  000502  0E0A               	movlw	10
 16373  000504  6EDF               	movwf	indf2,c
 16374                           
 16375                           ; BSR set to: 2
 16376                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 16377  000506  0E66               	movlw	low Terminal@Payload
 16378  000508  0100               	movlb	0	; () banked
 16379  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 16380  00050C  0E07               	movlw	high Terminal@Payload
 16381  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16382  000510  0102               	movlb	2	; () banked
 16383  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16384  000514  0D02               	mullw	2
 16385  000516  50F3               	movf	prodl,w,c
 16386  000518  0F04               	addlw	4
 16387  00051A  0100               	movlb	0	; () banked
 16388  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 16389  00051E  ECFC  F032         	call	_putUSBUSART	;wreg free
 16390                           
 16391                           ;term.c: 659: }
 16392  000522  D026               	goto	l2442
 16393  000524                     l2441:
 16394                           
 16395                           ;term.c: 660: else
 16396                           ;term.c: 661: {
 16397                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 16398  000524  0102               	movlb	2	; () banked
 16399  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16400  000528  0D01               	mullw	1
 16401  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 16402  00052C  24F3               	addwf	prodl,w,c
 16403  00052E  6ED9               	movwf	fsr2l,c
 16404  000530  0E05               	movlw	high Terminal@TermRxBuffer
 16405  000532  20F4               	addwfc	prodh,w,c
 16406  000534  6EDA               	movwf	fsr2h,c
 16407  000536  0E0D               	movlw	13
 16408  000538  6EDF               	movwf	indf2,c
 16409                           
 16410                           ; BSR set to: 2
 16411                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 16412  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16413  00053C  0100               	movlb	0	; () banked
 16414  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 16415  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16416  000542  0E01               	movlw	1
 16417  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 16418  000546  0E00               	movlw	0
 16419  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16420  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 16421  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 16422  00054E  6ED9               	movwf	fsr2l,c
 16423  000550  0E05               	movlw	high Terminal@TermRxBuffer
 16424  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16425  000554  6EDA               	movwf	fsr2h,c
 16426  000556  0E0A               	movlw	10
 16427  000558  6EDF               	movwf	indf2,c
 16428                           
 16429                           ; BSR set to: 0
 16430                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16431  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 16432  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 16433  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 16434  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16435  000562  0102               	movlb	2	; () banked
 16436  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16437  000566  0F02               	addlw	2
 16438  000568  0100               	movlb	0	; () banked
 16439  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 16440  00056C  ECFC  F032         	call	_putUSBUSART	;wreg free
 16441  000570                     l2442:
 16442                           
 16443                           ;term.c: 666: }
 16444                           ;term.c: 668: TermState = Term_GetData;
 16445  000570  0E00               	movlw	0
 16446  000572  0102               	movlb	2	; () banked
 16447  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 16448                           
 16449                           ; BSR set to: 2
 16450                           ;term.c: 669: }
 16451                           ;term.c: 670: }
 16452  000576  0012               	return	
 16453  000578                     l2435:
 16454                           
 16455                           ;term.c: 671: else
 16456                           ;term.c: 672: {
 16457                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16458                           
 16459                           ; BSR set to: 2
 16460  000578  0EC0               	movlw	low Terminal@SwTimer
 16461  00057A  0100               	movlb	0	; () banked
 16462  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16463  00057E  0E04               	movlw	high Terminal@SwTimer
 16464  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16465  000582  0EB8               	movlw	184
 16466  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16467  000586  0E0B               	movlw	11
 16468  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16469  00058A  0E00               	movlw	0
 16470  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16471  00058E  0E00               	movlw	0
 16472  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16473  000592  ECA1  F028         	call	_OsTmr_Wait	;wreg free
 16474  000596  06E8               	decf	wreg,f,c
 16475  000598  A4D8               	btfss	status,2,c
 16476  00059A  0012               	return	
 16477                           
 16478                           ;term.c: 675: {
 16479                           ;term.c: 677: if((cdc_trf_state == 0))
 16480  00059C  0100               	movlb	0	; () banked
 16481  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16482  0005A0  A4D8               	btfss	status,2,c
 16483  0005A2  0012               	return	
 16484                           
 16485                           ; BSR set to: 0
 16486                           ;term.c: 678: {
 16487                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16488  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 16489  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 16490  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 16491  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16492  0005AC  0E5F               	movlw	low STR_21
 16493  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 16494  0005B0  0EFE               	movlw	high STR_21
 16495  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16496  0005B4  EC60  F031         	call	_strcpy	;wreg free
 16497                           
 16498                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16499  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 16500  0005BA  0100               	movlb	0	; () banked
 16501  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 16502  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 16503  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16504  0005C2  0E29               	movlw	41
 16505  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 16506  0005C6  ECFC  F032         	call	_putUSBUSART	;wreg free
 16507                           
 16508                           ;term.c: 682: TermState = Term_GetData;
 16509  0005CA  0E00               	movlw	0
 16510  0005CC  0102               	movlb	2	; () banked
 16511  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 16512                           
 16513                           ; BSR set to: 2
 16514                           ;term.c: 693: }
 16515                           
 16516                           ; BSR set to: 2
 16517                           ;term.c: 692: break;
 16518                           
 16519                           ;term.c: 691: default:
 16520                           
 16521                           ; BSR set to: 2
 16522                           ;term.c: 689: break;
 16523                           
 16524                           ;term.c: 688: case Term_ReadSlvUartData:
 16525                           
 16526                           ; BSR set to: 2
 16527                           ;term.c: 683: }
 16528                           ;term.c: 684: }
 16529                           ;term.c: 685: }
 16530                           ;term.c: 686: break;
 16531                           
 16532                           ; BSR set to: 2
 16533                           
 16534                           ; BSR set to: 2
 16535  0005D0  0012               	return	
 16536  0005D2                     l2396:
 16537                           
 16538                           ; BSR set to: 2
 16539  0005D2  0102               	movlb	2	; () banked
 16540  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 16541                           
 16542                           ; Switch size 1, requested type "space"
 16543                           ; Number of cases is 4, Range of values is 0 to 3
 16544                           ; switch strategies available:
 16545                           ; Name         Instructions Cycles
 16546                           ; simple_byte           13     7 (average)
 16547                           ;	Chosen strategy is simple_byte
 16548  0005D6  0A00               	xorlw	0	; case 0
 16549  0005D8  B4D8               	btfsc	status,2,c
 16550  0005DA  D583               	goto	l2397
 16551  0005DC  0A01               	xorlw	1	; case 1
 16552  0005DE  B4D8               	btfsc	status,2,c
 16553  0005E0  D71E               	goto	l2432
 16554  0005E2  0A03               	xorlw	3	; case 2
 16555  0005E4  B4D8               	btfsc	status,2,c
 16556  0005E6  D73B               	goto	l2434
 16557  0005E8  0A01               	xorlw	1	; case 3
 16558  0005EA  0012               	return	
 16559  0005EC                     __end_of_Terminal:
 16560                           	opt stack 0
 16561                           tosu	equ	0xFFF
 16562                           tosh	equ	0xFFE
 16563                           tosl	equ	0xFFD
 16564                           pclath	equ	0xFFA
 16565                           tblptru	equ	0xFF8
 16566                           tblptrh	equ	0xFF7
 16567                           tblptrl	equ	0xFF6
 16568                           tablat	equ	0xFF5
 16569                           prodh	equ	0xFF4
 16570                           prodl	equ	0xFF3
 16571                           intcon	equ	0xFF2
 16572                           intcon2	equ	0xFF1
 16573                           intcon3	equ	0xFF0
 16574                           indf0	equ	0xFEF
 16575                           postinc0	equ	0xFEE
 16576                           plusw0	equ	0xFEB
 16577                           fsr0h	equ	0xFEA
 16578                           fsr0l	equ	0xFE9
 16579                           wreg	equ	0xFE8
 16580                           indf1	equ	0xFE7
 16581                           postinc1	equ	0xFE6
 16582                           postdec1	equ	0xFE5
 16583                           fsr1h	equ	0xFE2
 16584                           fsr1l	equ	0xFE1
 16585                           indf2	equ	0xFDF
 16586                           postinc2	equ	0xFDE
 16587                           postdec2	equ	0xFDD
 16588                           plusw2	equ	0xFDB
 16589                           fsr2h	equ	0xFDA
 16590                           fsr2l	equ	0xFD9
 16591                           status	equ	0xFD8
 16592                           
 16593 ;; *************** function _xtoi *****************
 16594 ;; Defined at:
 16595 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16596 ;; Parameters:    Size  Location     Type
 16597 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16598 ;;		 -> Terminal@Addr(4), 
 16599 ;; Auto vars:     Size  Location     Type
 16600 ;;  val             2   40[BANK0 ] unsigned int 
 16601 ;;  c               1   42[BANK0 ] unsigned char 
 16602 ;;  sign            1   39[BANK0 ] unsigned char 
 16603 ;; Return value:  Size  Location     Type
 16604 ;;                  2   35[BANK0 ] unsigned int 
 16605 ;; Registers used:
 16606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16607 ;; Tracked objects:
 16608 ;;		On entry : 0/0
 16609 ;;		On exit  : 0/0
 16610 ;;		Unchanged: 0/0
 16611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16612 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16613 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16614 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16615 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16616 ;;Total ram usage:        8 bytes
 16617 ;; Hardware stack levels used:    1
 16618 ;; Hardware stack levels required when called:   13
 16619 ;; This function calls:
 16620 ;;		_isdigit
 16621 ;;		_isspace
 16622 ;;		_isupper
 16623 ;;		_isxdigit
 16624 ;;		_tolower
 16625 ;; This function is called by:
 16626 ;;		_Terminal
 16627 ;; This function uses a non-reentrant model
 16628 ;;
 16629                           
 16630                           	psect	text61
 16631  003660                     __ptext61:
 16632                           	opt stack 0
 16633  003660                     _xtoi:
 16634                           	opt stack 12
 16635                           
 16636                           ;incstack = 0
 16637  003660  0E00               	movlw	0
 16638  003662  0100               	movlb	0	; () banked
 16639  003664  6F87               	movwf	xtoi@sign& (0+255),b
 16640  003666  0E00               	movlw	0
 16641  003668  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16642  00366A  0E00               	movlw	0
 16643  00366C  6F88               	movwf	xtoi@val& (0+255),b
 16644  00366E  D003               	goto	l3509
 16645  003670                     
 16646                           ; BSR set to: 0
 16647  003670  0100               	movlb	0	; () banked
 16648  003672  4B83               	infsnz	xtoi@s& (0+255),f,b
 16649  003674  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16650  003676                     l3509:
 16651                           
 16652                           ; BSR set to: 0
 16653                           
 16654                           ; BSR set to: 0
 16655  003676  C083  FFD9         	movff	xtoi@s,fsr2l
 16656  00367A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16657  00367E  50DF               	movf	indf2,w,c
 16658  003680  EC32  F032         	call	_isspace
 16659  003684  B0D8               	btfsc	status,0,c
 16660  003686  D7F4               	goto	l3510
 16661  003688  C083  FFD9         	movff	xtoi@s,fsr2l
 16662  00368C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16663  003690  0E2D               	movlw	45
 16664  003692  18DE               	xorwf	postinc2,w,c
 16665  003694  A4D8               	btfss	status,2,c
 16666  003696  D003               	goto	l3512
 16667  003698  0100               	movlb	0	; () banked
 16668  00369A  2B87               	incf	xtoi@sign& (0+255),f,b
 16669  00369C  D009               	goto	L15
 16670  00369E                     l3512:
 16671                           
 16672                           ; BSR set to: 0
 16673  00369E  C083  FFD9         	movff	xtoi@s,fsr2l
 16674  0036A2  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16675  0036A6  0E2B               	movlw	43
 16676  0036A8  18DE               	xorwf	postinc2,w,c
 16677  0036AA  A4D8               	btfss	status,2,c
 16678  0036AC  D028               	goto	l3515
 16679  0036AE  0100               	movlb	0	; () banked
 16680  0036B0                     L15:
 16681  0036B0  4B83               	infsnz	xtoi@s& (0+255),f,b
 16682  0036B2  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16683                           
 16684                           ; BSR set to: 0
 16685                           
 16686                           ; BSR set to: 0
 16687  0036B4  D024               	goto	l3515
 16688  0036B6                     
 16689                           ; BSR set to: 0
 16690  0036B6  0100               	movlb	0	; () banked
 16691  0036B8  518A               	movf	xtoi@c& (0+255),w,b
 16692  0036BA  ECEB  F032         	call	_isupper
 16693  0036BE  A0D8               	btfss	status,0,c
 16694  0036C0  D006               	goto	l3517
 16695  0036C2  0100               	movlb	0	; () banked
 16696  0036C4  518A               	movf	xtoi@c& (0+255),w,b
 16697  0036C6  ECCD  F033         	call	_tolower
 16698  0036CA  0100               	movlb	0	; () banked
 16699  0036CC  6F8A               	movwf	xtoi@c& (0+255),b
 16700  0036CE                     l3517:
 16701  0036CE  0100               	movlb	0	; () banked
 16702  0036D0  518A               	movf	xtoi@c& (0+255),w,b
 16703  0036D2  EC0D  F033         	call	_isdigit
 16704  0036D6  A0D8               	btfss	status,0,c
 16705  0036D8  D002               	goto	l3518
 16706  0036DA  0E30               	movlw	48
 16707  0036DC  D001               	goto	L14
 16708  0036DE                     l3518:
 16709                           
 16710                           ; BSR set to: 0
 16711  0036DE  0E57               	movlw	87
 16712  0036E0                     L14:
 16713  0036E0  0100               	movlb	0	; () banked
 16714  0036E2  5F8A               	subwf	xtoi@c& (0+255),f,b
 16715                           
 16716                           ; BSR set to: 0
 16717  0036E4  3B88               	swapf	xtoi@val& (0+255),f,b
 16718  0036E6  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16719  0036E8  0EF0               	movlw	240
 16720  0036EA  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16721  0036EC  5188               	movf	xtoi@val& (0+255),w,b
 16722  0036EE  0B0F               	andlw	15
 16723  0036F0  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16724  0036F2  0EF0               	movlw	240
 16725  0036F4  1788               	andwf	xtoi@val& (0+255),f,b
 16726  0036F6  518A               	movf	xtoi@c& (0+255),w,b
 16727  0036F8  2788               	addwf	xtoi@val& (0+255),f,b
 16728  0036FA  0E00               	movlw	0
 16729  0036FC  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16730  0036FE                     l3515:
 16731                           
 16732                           ; BSR set to: 0
 16733  0036FE  C083  FFD9         	movff	xtoi@s,fsr2l
 16734  003702  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16735  003706  0100               	movlb	0	; () banked
 16736  003708  4B83               	infsnz	xtoi@s& (0+255),f,b
 16737  00370A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16738  00370C  50DF               	movf	indf2,w,c
 16739  00370E  6F8A               	movwf	xtoi@c& (0+255),b
 16740  003710  518A               	movf	xtoi@c& (0+255),w,b
 16741  003712  EC9F  F030         	call	_isxdigit
 16742  003716  B0D8               	btfsc	status,0,c
 16743  003718  D7CE               	goto	l3516
 16744  00371A  0100               	movlb	0	; () banked
 16745  00371C  5187               	movf	xtoi@sign& (0+255),w,b
 16746  00371E  B4D8               	btfsc	status,2,c
 16747  003720  D00D               	goto	l3521
 16748                           
 16749                           ; BSR set to: 0
 16750  003722  C088  F085         	movff	xtoi@val,??_xtoi
 16751  003726  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16752  00372A  1F85               	comf	??_xtoi& (0+255),f,b
 16753  00372C  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16754  00372E  4B85               	infsnz	??_xtoi& (0+255),f,b
 16755  003730  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16756  003732  C085  F083         	movff	??_xtoi,?_xtoi
 16757  003736  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16758  00373A  0012               	return	
 16759  00373C                     l3521:
 16760                           
 16761                           ; BSR set to: 0
 16762  00373C  C088  F083         	movff	xtoi@val,?_xtoi
 16763  003740  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16764                           
 16765                           ; BSR set to: 0
 16766  003744  0012               	return		;funcret
 16767  003746                     __end_of_xtoi:
 16768                           	opt stack 0
 16769                           tosu	equ	0xFFF
 16770                           tosh	equ	0xFFE
 16771                           tosl	equ	0xFFD
 16772                           pclath	equ	0xFFA
 16773                           tblptru	equ	0xFF8
 16774                           tblptrh	equ	0xFF7
 16775                           tblptrl	equ	0xFF6
 16776                           tablat	equ	0xFF5
 16777                           prodh	equ	0xFF4
 16778                           prodl	equ	0xFF3
 16779                           intcon	equ	0xFF2
 16780                           intcon2	equ	0xFF1
 16781                           intcon3	equ	0xFF0
 16782                           indf0	equ	0xFEF
 16783                           postinc0	equ	0xFEE
 16784                           plusw0	equ	0xFEB
 16785                           fsr0h	equ	0xFEA
 16786                           fsr0l	equ	0xFE9
 16787                           wreg	equ	0xFE8
 16788                           indf1	equ	0xFE7
 16789                           postinc1	equ	0xFE6
 16790                           postdec1	equ	0xFE5
 16791                           fsr1h	equ	0xFE2
 16792                           fsr1l	equ	0xFE1
 16793                           indf2	equ	0xFDF
 16794                           postinc2	equ	0xFDE
 16795                           postdec2	equ	0xFDD
 16796                           plusw2	equ	0xFDB
 16797                           fsr2h	equ	0xFDA
 16798                           fsr2l	equ	0xFD9
 16799                           status	equ	0xFD8
 16800                           
 16801 ;; *************** function _tolower *****************
 16802 ;; Defined at:
 16803 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16804 ;; Parameters:    Size  Location     Type
 16805 ;;  c               1    wreg     unsigned char 
 16806 ;; Auto vars:     Size  Location     Type
 16807 ;;  c               1   29[BANK0 ] unsigned char 
 16808 ;; Return value:  Size  Location     Type
 16809 ;;                  1    wreg      unsigned char 
 16810 ;; Registers used:
 16811 ;;		wreg, status,2, status,0
 16812 ;; Tracked objects:
 16813 ;;		On entry : 0/0
 16814 ;;		On exit  : 0/0
 16815 ;;		Unchanged: 0/0
 16816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16820 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16821 ;;Total ram usage:        1 bytes
 16822 ;; Hardware stack levels used:    1
 16823 ;; Hardware stack levels required when called:   11
 16824 ;; This function calls:
 16825 ;;		Nothing
 16826 ;; This function is called by:
 16827 ;;		_xtoi
 16828 ;; This function uses a non-reentrant model
 16829 ;;
 16830                           
 16831                           	psect	text62
 16832  00679A                     __ptext62:
 16833                           	opt stack 0
 16834  00679A                     _tolower:
 16835                           	opt stack 13
 16836                           
 16837                           ; BSR set to: 0
 16838                           ;incstack = 0
 16839                           ;tolower@c stored from wreg
 16840  00679A  0100               	movlb	0	; () banked
 16841  00679C  6F7D               	movwf	tolower@c& (0+255),b
 16842  00679E  0E5B               	movlw	91
 16843  0067A0  0100               	movlb	0	; () banked
 16844  0067A2  617D               	cpfslt	tolower@c& (0+255),b
 16845  0067A4  D004               	goto	l3568
 16846                           
 16847                           ; BSR set to: 0
 16848  0067A6  0E40               	movlw	64
 16849  0067A8  657D               	cpfsgt	tolower@c& (0+255),b
 16850  0067AA  D001               	goto	l3568
 16851                           
 16852                           ; BSR set to: 0
 16853  0067AC  8B7D               	bsf	tolower@c& (0+255),5,b
 16854  0067AE                     l3568:
 16855                           
 16856                           ; BSR set to: 0
 16857                           
 16858                           ; BSR set to: 0
 16859  0067AE  517D               	movf	tolower@c& (0+255),w,b
 16860  0067B0  0012               	return	
 16861  0067B2                     __end_of_tolower:
 16862                           	opt stack 0
 16863                           tosu	equ	0xFFF
 16864                           tosh	equ	0xFFE
 16865                           tosl	equ	0xFFD
 16866                           pclath	equ	0xFFA
 16867                           tblptru	equ	0xFF8
 16868                           tblptrh	equ	0xFF7
 16869                           tblptrl	equ	0xFF6
 16870                           tablat	equ	0xFF5
 16871                           prodh	equ	0xFF4
 16872                           prodl	equ	0xFF3
 16873                           intcon	equ	0xFF2
 16874                           intcon2	equ	0xFF1
 16875                           intcon3	equ	0xFF0
 16876                           indf0	equ	0xFEF
 16877                           postinc0	equ	0xFEE
 16878                           plusw0	equ	0xFEB
 16879                           fsr0h	equ	0xFEA
 16880                           fsr0l	equ	0xFE9
 16881                           wreg	equ	0xFE8
 16882                           indf1	equ	0xFE7
 16883                           postinc1	equ	0xFE6
 16884                           postdec1	equ	0xFE5
 16885                           fsr1h	equ	0xFE2
 16886                           fsr1l	equ	0xFE1
 16887                           indf2	equ	0xFDF
 16888                           postinc2	equ	0xFDE
 16889                           postdec2	equ	0xFDD
 16890                           plusw2	equ	0xFDB
 16891                           fsr2h	equ	0xFDA
 16892                           fsr2l	equ	0xFD9
 16893                           status	equ	0xFD8
 16894                           
 16895 ;; *************** function _isxdigit *****************
 16896 ;; Defined at:
 16897 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16898 ;; Parameters:    Size  Location     Type
 16899 ;;  c               1    wreg     unsigned char 
 16900 ;; Auto vars:     Size  Location     Type
 16901 ;;  c               1   34[BANK0 ] unsigned char 
 16902 ;; Return value:  Size  Location     Type
 16903 ;;		None               void
 16904 ;; Registers used:
 16905 ;;		wreg, status,2, status,0, cstack
 16906 ;; Tracked objects:
 16907 ;;		On entry : 0/0
 16908 ;;		On exit  : 0/0
 16909 ;;		Unchanged: 0/0
 16910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16912 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16913 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16914 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16915 ;;Total ram usage:        3 bytes
 16916 ;; Hardware stack levels used:    1
 16917 ;; Hardware stack levels required when called:   12
 16918 ;; This function calls:
 16919 ;;		_isdigit
 16920 ;; This function is called by:
 16921 ;;		_xtoi
 16922 ;; This function uses a non-reentrant model
 16923 ;;
 16924                           
 16925                           	psect	text63
 16926  00613E                     __ptext63:
 16927                           	opt stack 0
 16928  00613E                     _isxdigit:
 16929                           	opt stack 12
 16930                           
 16931                           ; BSR set to: 0
 16932                           ;incstack = 0
 16933                           ;isxdigit@c stored from wreg
 16934  00613E  0100               	movlb	0	; () banked
 16935  006140  6F82               	movwf	isxdigit@c& (0+255),b
 16936  006142  0E01               	movlw	1
 16937  006144  0100               	movlb	0	; () banked
 16938  006146  6F81               	movwf	_isxdigit$6644& (0+255),b
 16939                           
 16940                           ; BSR set to: 0
 16941  006148  0E67               	movlw	103
 16942  00614A  6182               	cpfslt	isxdigit@c& (0+255),b
 16943  00614C  D003               	goto	u12500
 16944                           
 16945                           ; BSR set to: 0
 16946  00614E  0E61               	movlw	97
 16947  006150  6182               	cpfslt	isxdigit@c& (0+255),b
 16948  006152  D00E               	goto	l3564
 16949  006154                     u12500:
 16950                           
 16951                           ; BSR set to: 0
 16952                           
 16953                           ; BSR set to: 0
 16954  006154  0E47               	movlw	71
 16955  006156  6182               	cpfslt	isxdigit@c& (0+255),b
 16956  006158  D003               	goto	u12520
 16957                           
 16958                           ; BSR set to: 0
 16959  00615A  0E41               	movlw	65
 16960  00615C  6182               	cpfslt	isxdigit@c& (0+255),b
 16961  00615E  D008               	goto	l3564
 16962  006160                     u12520:
 16963                           
 16964                           ; BSR set to: 0
 16965                           
 16966                           ; BSR set to: 0
 16967  006160  5182               	movf	isxdigit@c& (0+255),w,b
 16968  006162  EC0D  F033         	call	_isdigit
 16969  006166  B0D8               	btfsc	status,0,c
 16970  006168  D003               	goto	l3564
 16971  00616A  0E00               	movlw	0
 16972  00616C  0100               	movlb	0	; () banked
 16973  00616E  6F81               	movwf	_isxdigit$6644& (0+255),b
 16974  006170                     l3564:
 16975                           
 16976                           ; BSR set to: 0
 16977  006170  C081  F080         	movff	_isxdigit$6644,??_isxdigit
 16978  006174  0100               	movlb	0	; () banked
 16979  006176  3180               	rrcf	??_isxdigit& (0+255),w,b
 16980  006178  0012               	return	
 16981  00617A                     __end_of_isxdigit:
 16982                           	opt stack 0
 16983                           tosu	equ	0xFFF
 16984                           tosh	equ	0xFFE
 16985                           tosl	equ	0xFFD
 16986                           pclath	equ	0xFFA
 16987                           tblptru	equ	0xFF8
 16988                           tblptrh	equ	0xFF7
 16989                           tblptrl	equ	0xFF6
 16990                           tablat	equ	0xFF5
 16991                           prodh	equ	0xFF4
 16992                           prodl	equ	0xFF3
 16993                           intcon	equ	0xFF2
 16994                           intcon2	equ	0xFF1
 16995                           intcon3	equ	0xFF0
 16996                           indf0	equ	0xFEF
 16997                           postinc0	equ	0xFEE
 16998                           plusw0	equ	0xFEB
 16999                           fsr0h	equ	0xFEA
 17000                           fsr0l	equ	0xFE9
 17001                           wreg	equ	0xFE8
 17002                           indf1	equ	0xFE7
 17003                           postinc1	equ	0xFE6
 17004                           postdec1	equ	0xFE5
 17005                           fsr1h	equ	0xFE2
 17006                           fsr1l	equ	0xFE1
 17007                           indf2	equ	0xFDF
 17008                           postinc2	equ	0xFDE
 17009                           postdec2	equ	0xFDD
 17010                           plusw2	equ	0xFDB
 17011                           fsr2h	equ	0xFDA
 17012                           fsr2l	equ	0xFD9
 17013                           status	equ	0xFD8
 17014                           
 17015 ;; *************** function _strtol *****************
 17016 ;; Defined at:
 17017 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 17020 ;;		 -> Terminal@Payload(80), 
 17021 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 17022 ;;		 -> NULL(0), 
 17023 ;;  base            2   45[BANK0 ] int 
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;  a               4   52[BANK0 ] long 
 17026 ;;  c               1   56[BANK0 ] unsigned char 
 17027 ;;  sign            1   51[BANK0 ] unsigned char 
 17028 ;; Return value:  Size  Location     Type
 17029 ;;                  4   41[BANK0 ] long 
 17030 ;; Registers used:
 17031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17032 ;; Tracked objects:
 17033 ;;		On entry : 0/0
 17034 ;;		On exit  : 0/0
 17035 ;;		Unchanged: 0/0
 17036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17037 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17038 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17039 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17040 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17041 ;;Total ram usage:       16 bytes
 17042 ;; Hardware stack levels used:    1
 17043 ;; Hardware stack levels required when called:   13
 17044 ;; This function calls:
 17045 ;;		___lmul
 17046 ;;		_isalpha
 17047 ;;		_isdigit
 17048 ;;		_isspace
 17049 ;;		_toupper
 17050 ;; This function is called by:
 17051 ;;		_Terminal
 17052 ;; This function uses a non-reentrant model
 17053 ;;
 17054                           
 17055                           	psect	text64
 17056  001B86                     __ptext64:
 17057                           	opt stack 0
 17058  001B86                     _strtol:
 17059                           	opt stack 12
 17060                           
 17061                           ; BSR set to: 0
 17062                           ;incstack = 0
 17063  001B86  C089  FFD9         	movff	strtol@s,fsr2l
 17064  001B8A  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17065  001B8E  50DF               	movf	indf2,w,c
 17066  001B90  0100               	movlb	0	; () banked
 17067  001B92  6F98               	movwf	strtol@c& (0+255),b
 17068                           
 17069                           ; BSR set to: 0
 17070  001B94  4B89               	infsnz	strtol@s& (0+255),f,b
 17071  001B96  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17072                           
 17073                           ; BSR set to: 0
 17074  001B98  5198               	movf	strtol@c& (0+255),w,b
 17075  001B9A  EC32  F032         	call	_isspace
 17076  001B9E  B0D8               	btfsc	status,0,c
 17077  001BA0  D7F2               	goto	_strtol
 17078  001BA2  0E00               	movlw	0
 17079  001BA4  0100               	movlb	0	; () banked
 17080  001BA6  6F94               	movwf	strtol@a& (0+255),b
 17081  001BA8  0E00               	movlw	0
 17082  001BAA  6F95               	movwf	(strtol@a+1)& (0+255),b
 17083  001BAC  0E00               	movlw	0
 17084  001BAE  6F96               	movwf	(strtol@a+2)& (0+255),b
 17085  001BB0  0E00               	movlw	0
 17086  001BB2  6F97               	movwf	(strtol@a+3)& (0+255),b
 17087  001BB4  0E00               	movlw	0
 17088  001BB6  6F93               	movwf	strtol@sign& (0+255),b
 17089                           
 17090                           ; BSR set to: 0
 17091  001BB8  0E2D               	movlw	45
 17092  001BBA  1998               	xorwf	strtol@c& (0+255),w,b
 17093  001BBC  A4D8               	btfss	status,2,c
 17094  001BBE  D003               	goto	l3471
 17095                           
 17096                           ; BSR set to: 0
 17097  001BC0  0E01               	movlw	1
 17098  001BC2  6F93               	movwf	strtol@sign& (0+255),b
 17099  001BC4  D004               	goto	u13000
 17100  001BC6                     l3471:
 17101                           
 17102                           ; BSR set to: 0
 17103                           
 17104                           ; BSR set to: 0
 17105  001BC6  0E2B               	movlw	43
 17106  001BC8  1998               	xorwf	strtol@c& (0+255),w,b
 17107  001BCA  A4D8               	btfss	status,2,c
 17108  001BCC  D008               	goto	l3473
 17109  001BCE                     u13000:
 17110                           
 17111                           ; BSR set to: 0
 17112  001BCE  C089  FFD9         	movff	strtol@s,fsr2l
 17113  001BD2  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17114  001BD6  50DF               	movf	indf2,w,c
 17115  001BD8  6F98               	movwf	strtol@c& (0+255),b
 17116                           
 17117                           ; BSR set to: 0
 17118  001BDA  4B89               	infsnz	strtol@s& (0+255),f,b
 17119  001BDC  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17120  001BDE                     l3473:
 17121                           
 17122                           ; BSR set to: 0
 17123                           
 17124                           ; BSR set to: 0
 17125                           
 17126                           ; BSR set to: 0
 17127  001BDE  0E30               	movlw	48
 17128  001BE0  1998               	xorwf	strtol@c& (0+255),w,b
 17129  001BE2  A4D8               	btfss	status,2,c
 17130  001BE4  D02E               	goto	l3481
 17131                           
 17132                           ; BSR set to: 0
 17133  001BE6  C089  FFD9         	movff	strtol@s,fsr2l
 17134  001BEA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17135  001BEE  50DF               	movf	indf2,w,c
 17136  001BF0  6F98               	movwf	strtol@c& (0+255),b
 17137                           
 17138                           ; BSR set to: 0
 17139  001BF2  4B89               	infsnz	strtol@s& (0+255),f,b
 17140  001BF4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17141                           
 17142                           ; BSR set to: 0
 17143  001BF6  518D               	movf	strtol@base& (0+255),w,b
 17144  001BF8  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17145  001BFA  B4D8               	btfsc	status,2,c
 17146  001BFC  D005               	goto	u13030
 17147                           
 17148                           ; BSR set to: 0
 17149  001BFE  0E10               	movlw	16
 17150  001C00  198D               	xorwf	strtol@base& (0+255),w,b
 17151  001C02  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17152  001C04  A4D8               	btfss	status,2,c
 17153  001C06  D015               	goto	l3475
 17154  001C08                     u13030:
 17155                           
 17156                           ; BSR set to: 0
 17157                           
 17158                           ; BSR set to: 0
 17159  001C08  0E78               	movlw	120
 17160  001C0A  1998               	xorwf	strtol@c& (0+255),w,b
 17161  001C0C  B4D8               	btfsc	status,2,c
 17162  001C0E  D004               	goto	u13050
 17163                           
 17164                           ; BSR set to: 0
 17165  001C10  0E58               	movlw	88
 17166  001C12  1998               	xorwf	strtol@c& (0+255),w,b
 17167  001C14  A4D8               	btfss	status,2,c
 17168  001C16  D00D               	goto	l3475
 17169  001C18                     u13050:
 17170                           
 17171                           ; BSR set to: 0
 17172                           
 17173                           ; BSR set to: 0
 17174  001C18  0E00               	movlw	0
 17175  001C1A  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17176  001C1C  0E10               	movlw	16
 17177  001C1E  6F8D               	movwf	strtol@base& (0+255),b
 17178                           
 17179                           ; BSR set to: 0
 17180  001C20  C089  FFD9         	movff	strtol@s,fsr2l
 17181  001C24  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17182  001C28  50DF               	movf	indf2,w,c
 17183  001C2A  6F98               	movwf	strtol@c& (0+255),b
 17184                           
 17185                           ; BSR set to: 0
 17186  001C2C  4B89               	infsnz	strtol@s& (0+255),f,b
 17187  001C2E  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17188  001C30  D008               	goto	l3481
 17189  001C32                     l3475:
 17190                           
 17191                           ; BSR set to: 0
 17192                           
 17193                           ; BSR set to: 0
 17194  001C32  518D               	movf	strtol@base& (0+255),w,b
 17195  001C34  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17196  001C36  A4D8               	btfss	status,2,c
 17197  001C38  D004               	goto	l3481
 17198                           
 17199                           ; BSR set to: 0
 17200  001C3A  0E00               	movlw	0
 17201  001C3C  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17202  001C3E  0E08               	movlw	8
 17203  001C40  6F8D               	movwf	strtol@base& (0+255),b
 17204  001C42                     l3481:
 17205                           
 17206                           ; BSR set to: 0
 17207                           
 17208                           ; BSR set to: 0
 17209                           
 17210                           ; BSR set to: 0
 17211                           
 17212                           ; BSR set to: 0
 17213  001C42  518D               	movf	strtol@base& (0+255),w,b
 17214  001C44  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17215  001C46  A4D8               	btfss	status,2,c
 17216  001C48  D004               	goto	l3482
 17217                           
 17218                           ; BSR set to: 0
 17219  001C4A  0E00               	movlw	0
 17220  001C4C  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17221  001C4E  0E0A               	movlw	10
 17222  001C50  6F8D               	movwf	strtol@base& (0+255),b
 17223  001C52                     l3482:
 17224                           
 17225                           ; BSR set to: 0
 17226                           
 17227                           ; BSR set to: 0
 17228                           
 17229                           ; BSR set to: 0
 17230  001C52  5198               	movf	strtol@c& (0+255),w,b
 17231  001C54  ECA9  F031         	call	_isalpha
 17232  001C58  A0D8               	btfss	status,0,c
 17233  001C5A  D008               	goto	l3484
 17234  001C5C  0100               	movlb	0	; () banked
 17235  001C5E  5198               	movf	strtol@c& (0+255),w,b
 17236  001C60  ECD9  F033         	call	_toupper
 17237  001C64  0FC9               	addlw	201
 17238  001C66  0100               	movlb	0	; () banked
 17239  001C68  6F98               	movwf	strtol@c& (0+255),b
 17240  001C6A  D009               	goto	l3487
 17241  001C6C                     l3484:
 17242                           
 17243                           ; BSR set to: 0
 17244  001C6C  0100               	movlb	0	; () banked
 17245  001C6E  5198               	movf	strtol@c& (0+255),w,b
 17246  001C70  EC0D  F033         	call	_isdigit
 17247  001C74  A0D8               	btfss	status,0,c
 17248  001C76  D039               	goto	l3488
 17249  001C78  0E30               	movlw	48
 17250  001C7A  0100               	movlb	0	; () banked
 17251  001C7C  5F98               	subwf	strtol@c& (0+255),f,b
 17252  001C7E                     l3487:
 17253                           
 17254                           ; BSR set to: 0
 17255                           
 17256                           ; BSR set to: 0
 17257                           
 17258                           ; BSR set to: 0
 17259  001C7E  5198               	movf	strtol@c& (0+255),w,b
 17260  001C80  6F8F               	movwf	??_strtol& (0+255),b
 17261  001C82  6B90               	clrf	(??_strtol+1)& (0+255),b
 17262  001C84  518D               	movf	strtol@base& (0+255),w,b
 17263  001C86  5D8F               	subwf	??_strtol& (0+255),w,b
 17264  001C88  5190               	movf	(??_strtol+1)& (0+255),w,b
 17265  001C8A  0A80               	xorlw	128
 17266  001C8C  6F91               	movwf	(??_strtol+2)& (0+255),b
 17267  001C8E  518E               	movf	(strtol@base+1)& (0+255),w,b
 17268  001C90  0A80               	xorlw	128
 17269  001C92  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 17270  001C94  B0D8               	btfsc	status,0,c
 17271  001C96  D029               	goto	l3488
 17272                           
 17273                           ; BSR set to: 0
 17274                           
 17275                           ; BSR set to: 0
 17276                           
 17277                           ; BSR set to: 0
 17278  001C98  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 17279  001C9C  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 17280  001CA0  0E00               	movlw	0
 17281  001CA2  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17282  001CA4  0EFF               	movlw	-1
 17283  001CA6  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 17284  001CA8  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 17285  001CAA  C094  F081         	movff	strtol@a,___lmul@multiplicand
 17286  001CAE  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 17287  001CB2  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 17288  001CB6  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 17289  001CBA  ECEC  F02B         	call	___lmul	;wreg free
 17290  001CBE  0100               	movlb	0	; () banked
 17291  001CC0  5198               	movf	strtol@c& (0+255),w,b
 17292  001CC2  257D               	addwf	?___lmul& (0+255),w,b
 17293  001CC4  6F94               	movwf	strtol@a& (0+255),b
 17294  001CC6  0E00               	movlw	0
 17295  001CC8  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 17296  001CCA  6F95               	movwf	(strtol@a+1)& (0+255),b
 17297  001CCC  0E00               	movlw	0
 17298  001CCE  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 17299  001CD0  6F96               	movwf	(strtol@a+2)& (0+255),b
 17300  001CD2  0E00               	movlw	0
 17301  001CD4  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 17302  001CD6  6F97               	movwf	(strtol@a+3)& (0+255),b
 17303                           
 17304                           ; BSR set to: 0
 17305  001CD8  C089  FFD9         	movff	strtol@s,fsr2l
 17306  001CDC  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17307  001CE0  50DF               	movf	indf2,w,c
 17308  001CE2  6F98               	movwf	strtol@c& (0+255),b
 17309                           
 17310                           ; BSR set to: 0
 17311  001CE4  4B89               	infsnz	strtol@s& (0+255),f,b
 17312  001CE6  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17313  001CE8  D7B4               	goto	l3482
 17314  001CEA                     l3488:
 17315                           
 17316                           ; BSR set to: 0
 17317  001CEA  0100               	movlb	0	; () banked
 17318  001CEC  518B               	movf	strtol@endptr& (0+255),w,b
 17319  001CEE  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 17320  001CF0  B4D8               	btfsc	status,2,c
 17321  001CF2  D00E               	goto	l3490
 17322                           
 17323                           ; BSR set to: 0
 17324  001CF4  0EFF               	movlw	255
 17325  001CF6  2589               	addwf	strtol@s& (0+255),w,b
 17326  001CF8  6F8F               	movwf	??_strtol& (0+255),b
 17327  001CFA  0EFF               	movlw	255
 17328  001CFC  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 17329  001CFE  6F90               	movwf	(??_strtol+1)& (0+255),b
 17330  001D00  C08B  FFD9         	movff	strtol@endptr,fsr2l
 17331  001D04  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 17332  001D08  C08F  FFDE         	movff	??_strtol,postinc2
 17333  001D0C  C090  FFDD         	movff	??_strtol+1,postdec2
 17334  001D10                     l3490:
 17335                           
 17336                           ; BSR set to: 0
 17337                           
 17338                           ; BSR set to: 0
 17339  001D10  5193               	movf	strtol@sign& (0+255),w,b
 17340  001D12  B4D8               	btfsc	status,2,c
 17341  001D14  D01A               	goto	l3491
 17342                           
 17343                           ; BSR set to: 0
 17344  001D16  C094  F08F         	movff	strtol@a,??_strtol
 17345  001D1A  C095  F090         	movff	strtol@a+1,??_strtol+1
 17346  001D1E  C096  F091         	movff	strtol@a+2,??_strtol+2
 17347  001D22  C097  F092         	movff	strtol@a+3,??_strtol+3
 17348  001D26  1F8F               	comf	??_strtol& (0+255),f,b
 17349  001D28  1F90               	comf	(??_strtol+1)& (0+255),f,b
 17350  001D2A  1F91               	comf	(??_strtol+2)& (0+255),f,b
 17351  001D2C  1F92               	comf	(??_strtol+3)& (0+255),f,b
 17352  001D2E  2B8F               	incf	??_strtol& (0+255),f,b
 17353  001D30  0E00               	movlw	0
 17354  001D32  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 17355  001D34  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 17356  001D36  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 17357  001D38  C08F  F089         	movff	??_strtol,?_strtol
 17358  001D3C  C090  F08A         	movff	??_strtol+1,?_strtol+1
 17359  001D40  C091  F08B         	movff	??_strtol+2,?_strtol+2
 17360  001D44  C092  F08C         	movff	??_strtol+3,?_strtol+3
 17361                           
 17362                           ; BSR set to: 0
 17363  001D48  0012               	return	
 17364  001D4A                     l3491:
 17365                           
 17366                           ; BSR set to: 0
 17367  001D4A  C094  F089         	movff	strtol@a,?_strtol
 17368  001D4E  C095  F08A         	movff	strtol@a+1,?_strtol+1
 17369  001D52  C096  F08B         	movff	strtol@a+2,?_strtol+2
 17370  001D56  C097  F08C         	movff	strtol@a+3,?_strtol+3
 17371                           
 17372                           ; BSR set to: 0
 17373  001D5A  0012               	return		;funcret
 17374  001D5C                     __end_of_strtol:
 17375                           	opt stack 0
 17376                           tosu	equ	0xFFF
 17377                           tosh	equ	0xFFE
 17378                           tosl	equ	0xFFD
 17379                           pclath	equ	0xFFA
 17380                           tblptru	equ	0xFF8
 17381                           tblptrh	equ	0xFF7
 17382                           tblptrl	equ	0xFF6
 17383                           tablat	equ	0xFF5
 17384                           prodh	equ	0xFF4
 17385                           prodl	equ	0xFF3
 17386                           intcon	equ	0xFF2
 17387                           intcon2	equ	0xFF1
 17388                           intcon3	equ	0xFF0
 17389                           indf0	equ	0xFEF
 17390                           postinc0	equ	0xFEE
 17391                           plusw0	equ	0xFEB
 17392                           fsr0h	equ	0xFEA
 17393                           fsr0l	equ	0xFE9
 17394                           wreg	equ	0xFE8
 17395                           indf1	equ	0xFE7
 17396                           postinc1	equ	0xFE6
 17397                           postdec1	equ	0xFE5
 17398                           fsr1h	equ	0xFE2
 17399                           fsr1l	equ	0xFE1
 17400                           indf2	equ	0xFDF
 17401                           postinc2	equ	0xFDE
 17402                           postdec2	equ	0xFDD
 17403                           plusw2	equ	0xFDB
 17404                           fsr2h	equ	0xFDA
 17405                           fsr2l	equ	0xFD9
 17406                           status	equ	0xFD8
 17407                           
 17408 ;; *************** function _toupper *****************
 17409 ;; Defined at:
 17410 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 17411 ;; Parameters:    Size  Location     Type
 17412 ;;  c               1    wreg     unsigned char 
 17413 ;; Auto vars:     Size  Location     Type
 17414 ;;  c               1   29[BANK0 ] unsigned char 
 17415 ;; Return value:  Size  Location     Type
 17416 ;;                  1    wreg      unsigned char 
 17417 ;; Registers used:
 17418 ;;		wreg, status,2, status,0
 17419 ;; Tracked objects:
 17420 ;;		On entry : 0/0
 17421 ;;		On exit  : 0/0
 17422 ;;		Unchanged: 0/0
 17423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17427 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17428 ;;Total ram usage:        1 bytes
 17429 ;; Hardware stack levels used:    1
 17430 ;; Hardware stack levels required when called:   11
 17431 ;; This function calls:
 17432 ;;		Nothing
 17433 ;; This function is called by:
 17434 ;;		_strtol
 17435 ;; This function uses a non-reentrant model
 17436 ;;
 17437                           
 17438                           	psect	text65
 17439  0067B2                     __ptext65:
 17440                           	opt stack 0
 17441  0067B2                     _toupper:
 17442                           	opt stack 13
 17443                           
 17444                           ; BSR set to: 0
 17445                           ;incstack = 0
 17446                           ;toupper@c stored from wreg
 17447  0067B2  0100               	movlb	0	; () banked
 17448  0067B4  6F7D               	movwf	toupper@c& (0+255),b
 17449  0067B6  0E7B               	movlw	123
 17450  0067B8  0100               	movlb	0	; () banked
 17451  0067BA  617D               	cpfslt	toupper@c& (0+255),b
 17452  0067BC  D004               	goto	l3495
 17453                           
 17454                           ; BSR set to: 0
 17455  0067BE  0E60               	movlw	96
 17456  0067C0  657D               	cpfsgt	toupper@c& (0+255),b
 17457  0067C2  D001               	goto	l3495
 17458                           
 17459                           ; BSR set to: 0
 17460  0067C4  9B7D               	bcf	toupper@c& (0+255),5,b
 17461  0067C6                     l3495:
 17462                           
 17463                           ; BSR set to: 0
 17464                           
 17465                           ; BSR set to: 0
 17466  0067C6  517D               	movf	toupper@c& (0+255),w,b
 17467  0067C8  0012               	return	
 17468  0067CA                     __end_of_toupper:
 17469                           	opt stack 0
 17470                           tosu	equ	0xFFF
 17471                           tosh	equ	0xFFE
 17472                           tosl	equ	0xFFD
 17473                           pclath	equ	0xFFA
 17474                           tblptru	equ	0xFF8
 17475                           tblptrh	equ	0xFF7
 17476                           tblptrl	equ	0xFF6
 17477                           tablat	equ	0xFF5
 17478                           prodh	equ	0xFF4
 17479                           prodl	equ	0xFF3
 17480                           intcon	equ	0xFF2
 17481                           intcon2	equ	0xFF1
 17482                           intcon3	equ	0xFF0
 17483                           indf0	equ	0xFEF
 17484                           postinc0	equ	0xFEE
 17485                           plusw0	equ	0xFEB
 17486                           fsr0h	equ	0xFEA
 17487                           fsr0l	equ	0xFE9
 17488                           wreg	equ	0xFE8
 17489                           indf1	equ	0xFE7
 17490                           postinc1	equ	0xFE6
 17491                           postdec1	equ	0xFE5
 17492                           fsr1h	equ	0xFE2
 17493                           fsr1l	equ	0xFE1
 17494                           indf2	equ	0xFDF
 17495                           postinc2	equ	0xFDE
 17496                           postdec2	equ	0xFDD
 17497                           plusw2	equ	0xFDB
 17498                           fsr2h	equ	0xFDA
 17499                           fsr2l	equ	0xFD9
 17500                           status	equ	0xFD8
 17501                           
 17502 ;; *************** function _isspace *****************
 17503 ;; Defined at:
 17504 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17505 ;; Parameters:    Size  Location     Type
 17506 ;;  c               1    wreg     unsigned char 
 17507 ;; Auto vars:     Size  Location     Type
 17508 ;;  c               1   31[BANK0 ] unsigned char 
 17509 ;; Return value:  Size  Location     Type
 17510 ;;		None               void
 17511 ;; Registers used:
 17512 ;;		wreg, status,2, status,0
 17513 ;; Tracked objects:
 17514 ;;		On entry : 0/0
 17515 ;;		On exit  : 0/0
 17516 ;;		Unchanged: 0/0
 17517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17522 ;;Total ram usage:        3 bytes
 17523 ;; Hardware stack levels used:    1
 17524 ;; Hardware stack levels required when called:   11
 17525 ;; This function calls:
 17526 ;;		Nothing
 17527 ;; This function is called by:
 17528 ;;		_strtol
 17529 ;;		_xtoi
 17530 ;; This function uses a non-reentrant model
 17531 ;;
 17532                           
 17533                           	psect	text66
 17534  006464                     __ptext66:
 17535                           	opt stack 0
 17536  006464                     _isspace:
 17537                           	opt stack 13
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;incstack = 0
 17541                           ;isspace@c stored from wreg
 17542  006464  0100               	movlb	0	; () banked
 17543  006466  6F7F               	movwf	isspace@c& (0+255),b
 17544  006468  0E01               	movlw	1
 17545  00646A  0100               	movlb	0	; () banked
 17546  00646C  6F7E               	movwf	_isspace$6637& (0+255),b
 17547                           
 17548                           ; BSR set to: 0
 17549  00646E  0E20               	movlw	32
 17550  006470  197F               	xorwf	isspace@c& (0+255),w,b
 17551  006472  B4D8               	btfsc	status,2,c
 17552  006474  D008               	goto	l3552
 17553                           
 17554                           ; BSR set to: 0
 17555  006476  0E0E               	movlw	14
 17556  006478  617F               	cpfslt	isspace@c& (0+255),b
 17557  00647A  D003               	goto	u12410
 17558                           
 17559                           ; BSR set to: 0
 17560  00647C  0E09               	movlw	9
 17561  00647E  617F               	cpfslt	isspace@c& (0+255),b
 17562  006480  D002               	goto	l3552
 17563  006482                     u12410:
 17564                           
 17565                           ; BSR set to: 0
 17566                           
 17567                           ; BSR set to: 0
 17568  006482  0E00               	movlw	0
 17569  006484  6F7E               	movwf	_isspace$6637& (0+255),b
 17570  006486                     l3552:
 17571                           
 17572                           ; BSR set to: 0
 17573                           
 17574                           ; BSR set to: 0
 17575  006486  C07E  F07D         	movff	_isspace$6637,??_isspace
 17576  00648A  317D               	rrcf	??_isspace& (0+255),w,b
 17577  00648C  0012               	return	
 17578  00648E                     __end_of_isspace:
 17579                           	opt stack 0
 17580                           tosu	equ	0xFFF
 17581                           tosh	equ	0xFFE
 17582                           tosl	equ	0xFFD
 17583                           pclath	equ	0xFFA
 17584                           tblptru	equ	0xFF8
 17585                           tblptrh	equ	0xFF7
 17586                           tblptrl	equ	0xFF6
 17587                           tablat	equ	0xFF5
 17588                           prodh	equ	0xFF4
 17589                           prodl	equ	0xFF3
 17590                           intcon	equ	0xFF2
 17591                           intcon2	equ	0xFF1
 17592                           intcon3	equ	0xFF0
 17593                           indf0	equ	0xFEF
 17594                           postinc0	equ	0xFEE
 17595                           plusw0	equ	0xFEB
 17596                           fsr0h	equ	0xFEA
 17597                           fsr0l	equ	0xFE9
 17598                           wreg	equ	0xFE8
 17599                           indf1	equ	0xFE7
 17600                           postinc1	equ	0xFE6
 17601                           postdec1	equ	0xFE5
 17602                           fsr1h	equ	0xFE2
 17603                           fsr1l	equ	0xFE1
 17604                           indf2	equ	0xFDF
 17605                           postinc2	equ	0xFDE
 17606                           postdec2	equ	0xFDD
 17607                           plusw2	equ	0xFDB
 17608                           fsr2h	equ	0xFDA
 17609                           fsr2l	equ	0xFD9
 17610                           status	equ	0xFD8
 17611                           
 17612 ;; *************** function _isalpha *****************
 17613 ;; Defined at:
 17614 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17615 ;; Parameters:    Size  Location     Type
 17616 ;;  c               1    wreg     unsigned char 
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;  c               1   34[BANK0 ] unsigned char 
 17619 ;; Return value:  Size  Location     Type
 17620 ;;		None               void
 17621 ;; Registers used:
 17622 ;;		wreg, status,2, status,0, cstack
 17623 ;; Tracked objects:
 17624 ;;		On entry : 0/0
 17625 ;;		On exit  : 0/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17630 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17631 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17632 ;;Total ram usage:        3 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:   12
 17635 ;; This function calls:
 17636 ;;		_isupper
 17637 ;; This function is called by:
 17638 ;;		_strtol
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           	psect	text67
 17643  006352                     __ptext67:
 17644                           	opt stack 0
 17645  006352                     _isalpha:
 17646                           	opt stack 12
 17647                           
 17648                           ; BSR set to: 0
 17649                           ;incstack = 0
 17650                           ;isalpha@c stored from wreg
 17651  006352  0100               	movlb	0	; () banked
 17652  006354  6F82               	movwf	isalpha@c& (0+255),b
 17653  006356  0E01               	movlw	1
 17654  006358  0100               	movlb	0	; () banked
 17655  00635A  6F81               	movwf	_isalpha$6634& (0+255),b
 17656                           
 17657                           ; BSR set to: 0
 17658  00635C  0E7B               	movlw	123
 17659  00635E  6182               	cpfslt	isalpha@c& (0+255),b
 17660  006360  D003               	goto	u12430
 17661                           
 17662                           ; BSR set to: 0
 17663  006362  0E61               	movlw	97
 17664  006364  6182               	cpfslt	isalpha@c& (0+255),b
 17665  006366  D008               	goto	l3547
 17666  006368                     u12430:
 17667                           
 17668                           ; BSR set to: 0
 17669                           
 17670                           ; BSR set to: 0
 17671  006368  5182               	movf	isalpha@c& (0+255),w,b
 17672  00636A  ECEB  F032         	call	_isupper
 17673  00636E  B0D8               	btfsc	status,0,c
 17674  006370  D003               	goto	l3547
 17675  006372  0E00               	movlw	0
 17676  006374  0100               	movlb	0	; () banked
 17677  006376  6F81               	movwf	_isalpha$6634& (0+255),b
 17678  006378                     l3547:
 17679                           
 17680                           ; BSR set to: 0
 17681  006378  C081  F080         	movff	_isalpha$6634,??_isalpha
 17682  00637C  0100               	movlb	0	; () banked
 17683  00637E  3180               	rrcf	??_isalpha& (0+255),w,b
 17684  006380  0012               	return	
 17685  006382                     __end_of_isalpha:
 17686                           	opt stack 0
 17687                           tosu	equ	0xFFF
 17688                           tosh	equ	0xFFE
 17689                           tosl	equ	0xFFD
 17690                           pclath	equ	0xFFA
 17691                           tblptru	equ	0xFF8
 17692                           tblptrh	equ	0xFF7
 17693                           tblptrl	equ	0xFF6
 17694                           tablat	equ	0xFF5
 17695                           prodh	equ	0xFF4
 17696                           prodl	equ	0xFF3
 17697                           intcon	equ	0xFF2
 17698                           intcon2	equ	0xFF1
 17699                           intcon3	equ	0xFF0
 17700                           indf0	equ	0xFEF
 17701                           postinc0	equ	0xFEE
 17702                           plusw0	equ	0xFEB
 17703                           fsr0h	equ	0xFEA
 17704                           fsr0l	equ	0xFE9
 17705                           wreg	equ	0xFE8
 17706                           indf1	equ	0xFE7
 17707                           postinc1	equ	0xFE6
 17708                           postdec1	equ	0xFE5
 17709                           fsr1h	equ	0xFE2
 17710                           fsr1l	equ	0xFE1
 17711                           indf2	equ	0xFDF
 17712                           postinc2	equ	0xFDE
 17713                           postdec2	equ	0xFDD
 17714                           plusw2	equ	0xFDB
 17715                           fsr2h	equ	0xFDA
 17716                           fsr2l	equ	0xFD9
 17717                           status	equ	0xFD8
 17718                           
 17719 ;; *************** function _isupper *****************
 17720 ;; Defined at:
 17721 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17722 ;; Parameters:    Size  Location     Type
 17723 ;;  c               1    wreg     unsigned char 
 17724 ;; Auto vars:     Size  Location     Type
 17725 ;;  c               1   31[BANK0 ] unsigned char 
 17726 ;; Return value:  Size  Location     Type
 17727 ;;		None               void
 17728 ;; Registers used:
 17729 ;;		wreg, status,2, status,0
 17730 ;; Tracked objects:
 17731 ;;		On entry : 0/0
 17732 ;;		On exit  : 0/0
 17733 ;;		Unchanged: 0/0
 17734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17738 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17739 ;;Total ram usage:        3 bytes
 17740 ;; Hardware stack levels used:    1
 17741 ;; Hardware stack levels required when called:   11
 17742 ;; This function calls:
 17743 ;;		Nothing
 17744 ;; This function is called by:
 17745 ;;		_xtoi
 17746 ;;		_isalpha
 17747 ;; This function uses a non-reentrant model
 17748 ;;
 17749                           
 17750                           	psect	text68
 17751  0065D6                     __ptext68:
 17752                           	opt stack 0
 17753  0065D6                     _isupper:
 17754                           	opt stack 13
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;incstack = 0
 17758                           ;isupper@c stored from wreg
 17759  0065D6  0100               	movlb	0	; () banked
 17760  0065D8  6F7F               	movwf	isupper@c& (0+255),b
 17761  0065DA  0E00               	movlw	0
 17762  0065DC  0100               	movlb	0	; () banked
 17763  0065DE  6F7E               	movwf	_isupper$6640& (0+255),b
 17764                           
 17765                           ; BSR set to: 0
 17766  0065E0  0E5B               	movlw	91
 17767  0065E2  617F               	cpfslt	isupper@c& (0+255),b
 17768  0065E4  D005               	goto	l3557
 17769                           
 17770                           ; BSR set to: 0
 17771  0065E6  0E40               	movlw	64
 17772  0065E8  657F               	cpfsgt	isupper@c& (0+255),b
 17773  0065EA  D002               	goto	l3557
 17774                           
 17775                           ; BSR set to: 0
 17776  0065EC  0E01               	movlw	1
 17777  0065EE  6F7E               	movwf	_isupper$6640& (0+255),b
 17778  0065F0                     l3557:
 17779                           
 17780                           ; BSR set to: 0
 17781                           
 17782                           ; BSR set to: 0
 17783  0065F0  C07E  F07D         	movff	_isupper$6640,??_isupper
 17784  0065F4  317D               	rrcf	??_isupper& (0+255),w,b
 17785  0065F6  0012               	return	
 17786  0065F8                     __end_of_isupper:
 17787                           	opt stack 0
 17788                           tosu	equ	0xFFF
 17789                           tosh	equ	0xFFE
 17790                           tosl	equ	0xFFD
 17791                           pclath	equ	0xFFA
 17792                           tblptru	equ	0xFF8
 17793                           tblptrh	equ	0xFF7
 17794                           tblptrl	equ	0xFF6
 17795                           tablat	equ	0xFF5
 17796                           prodh	equ	0xFF4
 17797                           prodl	equ	0xFF3
 17798                           intcon	equ	0xFF2
 17799                           intcon2	equ	0xFF1
 17800                           intcon3	equ	0xFF0
 17801                           indf0	equ	0xFEF
 17802                           postinc0	equ	0xFEE
 17803                           plusw0	equ	0xFEB
 17804                           fsr0h	equ	0xFEA
 17805                           fsr0l	equ	0xFE9
 17806                           wreg	equ	0xFE8
 17807                           indf1	equ	0xFE7
 17808                           postinc1	equ	0xFE6
 17809                           postdec1	equ	0xFE5
 17810                           fsr1h	equ	0xFE2
 17811                           fsr1l	equ	0xFE1
 17812                           indf2	equ	0xFDF
 17813                           postinc2	equ	0xFDE
 17814                           postdec2	equ	0xFDD
 17815                           plusw2	equ	0xFDB
 17816                           fsr2h	equ	0xFDA
 17817                           fsr2l	equ	0xFD9
 17818                           status	equ	0xFD8
 17819                           
 17820 ;; *************** function _strcpy *****************
 17821 ;; Defined at:
 17822 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17823 ;; Parameters:    Size  Location     Type
 17824 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17825 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17826 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17827 ;;		 -> STR_23(20), STR_21(42), 
 17828 ;; Auto vars:     Size  Location     Type
 17829 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17830 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17831 ;; Return value:  Size  Location     Type
 17832 ;;                  2   29[BANK0 ] PTR unsigned char 
 17833 ;; Registers used:
 17834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17835 ;; Tracked objects:
 17836 ;;		On entry : 0/0
 17837 ;;		On exit  : 0/0
 17838 ;;		Unchanged: 0/0
 17839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17843 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17844 ;;Total ram usage:        6 bytes
 17845 ;; Hardware stack levels used:    1
 17846 ;; Hardware stack levels required when called:   11
 17847 ;; This function calls:
 17848 ;;		Nothing
 17849 ;; This function is called by:
 17850 ;;		_Terminal
 17851 ;;		_Term_MainSm
 17852 ;; This function uses a non-reentrant model
 17853 ;;
 17854                           
 17855                           	psect	text69
 17856  0062C0                     __ptext69:
 17857                           	opt stack 0
 17858  0062C0                     _strcpy:
 17859                           	opt stack 15
 17860                           
 17861                           ; BSR set to: 0
 17862                           ;incstack = 0
 17863  0062C0  C07D  F081         	movff	strcpy@to,strcpy@cp
 17864  0062C4  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17865  0062C8  D005               	goto	l3449
 17866  0062CA  0100               	movlb	0	; () banked
 17867  0062CC  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17868  0062CE  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17869  0062D0  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17870  0062D2  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17871  0062D4                     l3449:
 17872                           
 17873                           ; BSR set to: 0
 17874  0062D4  C07F  FFF6         	movff	strcpy@from,tblptrl
 17875  0062D8  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17876  0062DC                     	if	0	;tblptru may be non-zero
 17877  0062DC                     	endif
 17878  0062DC                     	if	0	;tblptru may be non-zero
 17879  0062DC                     	endif
 17880  0062DC  C081  FFD9         	movff	strcpy@cp,fsr2l
 17881  0062E0  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17882  0062E4  0008               	tblrd		*
 17883  0062E6  CFF5 FFDF          	movff	tablat,indf2
 17884  0062EA  50DF               	movf	indf2,w,c
 17885  0062EC  B4D8               	btfsc	status,2,c
 17886  0062EE  0012               	return	
 17887  0062F0  D7EC               	goto	l3450
 17888  0062F2                     __end_of_strcpy:
 17889                           	opt stack 0
 17890                           tosu	equ	0xFFF
 17891                           tosh	equ	0xFFE
 17892                           tosl	equ	0xFFD
 17893                           pclath	equ	0xFFA
 17894                           tblptru	equ	0xFF8
 17895                           tblptrh	equ	0xFF7
 17896                           tblptrl	equ	0xFF6
 17897                           tablat	equ	0xFF5
 17898                           prodh	equ	0xFF4
 17899                           prodl	equ	0xFF3
 17900                           intcon	equ	0xFF2
 17901                           intcon2	equ	0xFF1
 17902                           intcon3	equ	0xFF0
 17903                           indf0	equ	0xFEF
 17904                           postinc0	equ	0xFEE
 17905                           plusw0	equ	0xFEB
 17906                           fsr0h	equ	0xFEA
 17907                           fsr0l	equ	0xFE9
 17908                           wreg	equ	0xFE8
 17909                           indf1	equ	0xFE7
 17910                           postinc1	equ	0xFE6
 17911                           postdec1	equ	0xFE5
 17912                           fsr1h	equ	0xFE2
 17913                           fsr1l	equ	0xFE1
 17914                           indf2	equ	0xFDF
 17915                           postinc2	equ	0xFDE
 17916                           postdec2	equ	0xFDD
 17917                           plusw2	equ	0xFDB
 17918                           fsr2h	equ	0xFDA
 17919                           fsr2l	equ	0xFD9
 17920                           status	equ	0xFD8
 17921                           
 17922 ;; *************** function _putUSBUSART *****************
 17923 ;; Defined at:
 17924 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17925 ;; Parameters:    Size  Location     Type
 17926 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17927 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17928 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17929 ;;		 -> RxBuffer(400), 
 17930 ;;  length          1   37[BANK0 ] unsigned char 
 17931 ;; Auto vars:     Size  Location     Type
 17932 ;;		None
 17933 ;; Return value:  Size  Location     Type
 17934 ;;                  1    wreg      void 
 17935 ;; Registers used:
 17936 ;;		wreg, status,2, status,0
 17937 ;; Tracked objects:
 17938 ;;		On entry : 0/0
 17939 ;;		On exit  : 0/0
 17940 ;;		Unchanged: 0/0
 17941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17942 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17945 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17946 ;;Total ram usage:        3 bytes
 17947 ;; Hardware stack levels used:    1
 17948 ;; Hardware stack levels required when called:   11
 17949 ;; This function calls:
 17950 ;;		Nothing
 17951 ;; This function is called by:
 17952 ;;		_Terminal
 17953 ;;		_Term_MainSm
 17954 ;;		_GsmGprsTerminal
 17955 ;; This function uses a non-reentrant model
 17956 ;;
 17957                           
 17958                           	psect	text70
 17959  0065F8                     __ptext70:
 17960                           	opt stack 0
 17961  0065F8                     _putUSBUSART:
 17962                           	opt stack 15
 17963                           
 17964                           ;usb_device_cdc.c: 584: ;
 17965                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17966                           
 17967                           ;incstack = 0
 17968  0065F8  0100               	movlb	0	; () banked
 17969  0065FA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17970  0065FC  A4D8               	btfss	status,2,c
 17971  0065FE  0012               	return	
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;usb_device_cdc.c: 586: {
 17975                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17976  006600  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17977  006604  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17978                           
 17979                           ; BSR set to: 0
 17980  006608  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17981                           
 17982                           ; BSR set to: 0
 17983  00660C  0E01               	movlw	1
 17984  00660E  0101               	movlb	1	; () banked
 17985  006610  6FDF               	movwf	_cdc_mem_type& (0+255),b
 17986                           
 17987                           ; BSR set to: 1
 17988  006612  0E01               	movlw	1
 17989  006614  0100               	movlb	0	; () banked
 17990  006616  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17991  006618  0012               	return	
 17992  00661A                     __end_of_putUSBUSART:
 17993                           	opt stack 0
 17994                           tosu	equ	0xFFF
 17995                           tosh	equ	0xFFE
 17996                           tosl	equ	0xFFD
 17997                           pclath	equ	0xFFA
 17998                           tblptru	equ	0xFF8
 17999                           tblptrh	equ	0xFF7
 18000                           tblptrl	equ	0xFF6
 18001                           tablat	equ	0xFF5
 18002                           prodh	equ	0xFF4
 18003                           prodl	equ	0xFF3
 18004                           intcon	equ	0xFF2
 18005                           intcon2	equ	0xFF1
 18006                           intcon3	equ	0xFF0
 18007                           indf0	equ	0xFEF
 18008                           postinc0	equ	0xFEE
 18009                           plusw0	equ	0xFEB
 18010                           fsr0h	equ	0xFEA
 18011                           fsr0l	equ	0xFE9
 18012                           wreg	equ	0xFE8
 18013                           indf1	equ	0xFE7
 18014                           postinc1	equ	0xFE6
 18015                           postdec1	equ	0xFE5
 18016                           fsr1h	equ	0xFE2
 18017                           fsr1l	equ	0xFE1
 18018                           indf2	equ	0xFDF
 18019                           postinc2	equ	0xFDE
 18020                           postdec2	equ	0xFDD
 18021                           plusw2	equ	0xFDB
 18022                           fsr2h	equ	0xFDA
 18023                           fsr2l	equ	0xFD9
 18024                           status	equ	0xFD8
 18025                           
 18026 ;; *************** function _itoa *****************
 18027 ;; Defined at:
 18028 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 18029 ;; Parameters:    Size  Location     Type
 18030 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 18031 ;;		 -> Terminal@Payload(80), 
 18032 ;;  val             2   53[BANK0 ] int 
 18033 ;;  base            2   55[BANK0 ] int 
 18034 ;; Auto vars:     Size  Location     Type
 18035 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 18036 ;;		 -> Terminal@Payload(80), 
 18037 ;; Return value:  Size  Location     Type
 18038 ;;                  2   51[BANK0 ] PTR unsigned char 
 18039 ;; Registers used:
 18040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18041 ;; Tracked objects:
 18042 ;;		On entry : 0/0
 18043 ;;		On exit  : 0/0
 18044 ;;		Unchanged: 0/0
 18045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18046 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18047 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18049 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18050 ;;Total ram usage:        8 bytes
 18051 ;; Hardware stack levels used:    1
 18052 ;; Hardware stack levels required when called:   13
 18053 ;; This function calls:
 18054 ;;		_utoa
 18055 ;; This function is called by:
 18056 ;;		_Terminal
 18057 ;; This function uses a non-reentrant model
 18058 ;;
 18059                           
 18060                           	psect	text71
 18061  005EF8                     __ptext71:
 18062                           	opt stack 0
 18063  005EF8                     _itoa:
 18064                           	opt stack 12
 18065                           
 18066                           ; BSR set to: 0
 18067                           ;incstack = 0
 18068  005EF8  C093  F099         	movff	itoa@buf,itoa@cp
 18069  005EFC  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 18070  005F00  0100               	movlb	0	; () banked
 18071  005F02  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 18072  005F04  D00C               	goto	l3197
 18073                           
 18074                           ; BSR set to: 0
 18075  005F06  C093  FFD9         	movff	itoa@buf,fsr2l
 18076  005F0A  C094  FFDA         	movff	itoa@buf+1,fsr2h
 18077  005F0E  0E2D               	movlw	45
 18078  005F10  6EDF               	movwf	indf2,c
 18079                           
 18080                           ; BSR set to: 0
 18081  005F12  4B93               	infsnz	itoa@buf& (0+255),f,b
 18082  005F14  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 18083                           
 18084                           ; BSR set to: 0
 18085  005F16  6D95               	negf	itoa@val& (0+255),b
 18086  005F18  1F96               	comf	(itoa@val+1)& (0+255),f,b
 18087  005F1A  B0D8               	btfsc	status,0,c
 18088  005F1C  2B96               	incf	(itoa@val+1)& (0+255),f,b
 18089  005F1E                     l3197:
 18090                           
 18091                           ; BSR set to: 0
 18092                           
 18093                           ; BSR set to: 0
 18094  005F1E  C093  F08A         	movff	itoa@buf,utoa@buf
 18095  005F22  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 18096  005F26  C095  F08C         	movff	itoa@val,utoa@val
 18097  005F2A  C096  F08D         	movff	itoa@val+1,utoa@val+1
 18098  005F2E  C097  F08E         	movff	itoa@base,utoa@base
 18099  005F32  C098  F08F         	movff	itoa@base+1,utoa@base+1
 18100  005F36  EC08  F023         	call	_utoa	;wreg free
 18101  005F3A  0012               	return	
 18102  005F3C                     __end_of_itoa:
 18103                           	opt stack 0
 18104                           tosu	equ	0xFFF
 18105                           tosh	equ	0xFFE
 18106                           tosl	equ	0xFFD
 18107                           pclath	equ	0xFFA
 18108                           tblptru	equ	0xFF8
 18109                           tblptrh	equ	0xFF7
 18110                           tblptrl	equ	0xFF6
 18111                           tablat	equ	0xFF5
 18112                           prodh	equ	0xFF4
 18113                           prodl	equ	0xFF3
 18114                           intcon	equ	0xFF2
 18115                           intcon2	equ	0xFF1
 18116                           intcon3	equ	0xFF0
 18117                           indf0	equ	0xFEF
 18118                           postinc0	equ	0xFEE
 18119                           plusw0	equ	0xFEB
 18120                           fsr0h	equ	0xFEA
 18121                           fsr0l	equ	0xFE9
 18122                           wreg	equ	0xFE8
 18123                           indf1	equ	0xFE7
 18124                           postinc1	equ	0xFE6
 18125                           postdec1	equ	0xFE5
 18126                           fsr1h	equ	0xFE2
 18127                           fsr1l	equ	0xFE1
 18128                           indf2	equ	0xFDF
 18129                           postinc2	equ	0xFDE
 18130                           postdec2	equ	0xFDD
 18131                           plusw2	equ	0xFDB
 18132                           fsr2h	equ	0xFDA
 18133                           fsr2l	equ	0xFD9
 18134                           status	equ	0xFD8
 18135                           
 18136 ;; *************** function _utoa *****************
 18137 ;; Defined at:
 18138 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 18139 ;; Parameters:    Size  Location     Type
 18140 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 18141 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 18142 ;;  val             2   44[BANK0 ] unsigned int 
 18143 ;;  base            2   46[BANK0 ] int 
 18144 ;; Auto vars:     Size  Location     Type
 18145 ;;  v               2   48[BANK0 ] unsigned int 
 18146 ;;  c               1   50[BANK0 ] unsigned char 
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  2   42[BANK0 ] PTR unsigned char 
 18149 ;; Registers used:
 18150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18156 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18157 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18159 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18160 ;;Total ram usage:        9 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; Hardware stack levels required when called:   12
 18163 ;; This function calls:
 18164 ;;		___lwdiv
 18165 ;;		___lwmod
 18166 ;; This function is called by:
 18167 ;;		_Term_MainSm
 18168 ;;		_itoa
 18169 ;; This function uses a non-reentrant model
 18170 ;;
 18171                           
 18172                           	psect	text72
 18173  004610                     __ptext72:
 18174                           	opt stack 0
 18175  004610                     _utoa:
 18176                           	opt stack 14
 18177                           
 18178                           ;incstack = 0
 18179  004610  C08C  F090         	movff	utoa@val,utoa@v
 18180  004614  C08D  F091         	movff	utoa@val+1,utoa@v+1
 18181  004618  C090  F083         	movff	utoa@v,___lwdiv@dividend
 18182  00461C  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 18183  004620  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 18184  004624  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 18185  004628  EC18  F02D         	call	___lwdiv	;wreg free
 18186  00462C  C083  F090         	movff	?___lwdiv,utoa@v
 18187  004630  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 18188  004634  0100               	movlb	0	; () banked
 18189  004636  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18190  004638  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18191                           
 18192                           ; BSR set to: 0
 18193  00463A  5190               	movf	utoa@v& (0+255),w,b
 18194  00463C  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 18195  00463E  A4D8               	btfss	status,2,c
 18196  004640  D7EB               	goto	l3201
 18197                           
 18198                           ; BSR set to: 0
 18199                           
 18200                           ; BSR set to: 0
 18201  004642  C08A  FFD9         	movff	utoa@buf,fsr2l
 18202  004646  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18203  00464A  0E00               	movlw	0
 18204  00464C  6EDF               	movwf	indf2,c
 18205                           
 18206                           ; BSR set to: 0
 18207  00464E  078A               	decf	utoa@buf& (0+255),f,b
 18208  004650  A0D8               	btfss	status,0,c
 18209  004652  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18210  004654                     
 18211                           ; BSR set to: 0
 18212                           
 18213                           ; BSR set to: 0
 18214  004654  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 18215  004658  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 18216  00465C  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 18217  004660  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 18218  004664  EC9E  F02F         	call	___lwmod	;wreg free
 18219  004668  0100               	movlb	0	; () banked
 18220  00466A  517D               	movf	?___lwmod& (0+255),w,b
 18221  00466C  6F92               	movwf	utoa@c& (0+255),b
 18222                           
 18223                           ; BSR set to: 0
 18224  00466E  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 18225  004672  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 18226  004676  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 18227  00467A  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 18228  00467E  EC18  F02D         	call	___lwdiv	;wreg free
 18229  004682  C083  F08C         	movff	?___lwdiv,utoa@val
 18230  004686  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 18231  00468A  0E09               	movlw	9
 18232  00468C  0100               	movlb	0	; () banked
 18233  00468E  6592               	cpfsgt	utoa@c& (0+255),b
 18234  004690  D002               	goto	l3204
 18235                           
 18236                           ; BSR set to: 0
 18237  004692  0E07               	movlw	7
 18238  004694  2792               	addwf	utoa@c& (0+255),f,b
 18239  004696                     l3204:
 18240                           
 18241                           ; BSR set to: 0
 18242  004696  0E30               	movlw	48
 18243  004698  2792               	addwf	utoa@c& (0+255),f,b
 18244                           
 18245                           ; BSR set to: 0
 18246  00469A  C08A  FFD9         	movff	utoa@buf,fsr2l
 18247  00469E  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18248  0046A2  C092  FFDF         	movff	utoa@c,indf2
 18249                           
 18250                           ; BSR set to: 0
 18251  0046A6  078A               	decf	utoa@buf& (0+255),f,b
 18252  0046A8  A0D8               	btfss	status,0,c
 18253  0046AA  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18254                           
 18255                           ; BSR set to: 0
 18256  0046AC  518C               	movf	utoa@val& (0+255),w,b
 18257  0046AE  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 18258  0046B0  A4D8               	btfss	status,2,c
 18259  0046B2  D7D0               	goto	l3203
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;	Return value of _utoa is never used
 18263                           
 18264                           ; BSR set to: 0
 18265  0046B4  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18266  0046B6  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18267  0046B8  0012               	return	
 18268  0046BA                     __end_of_utoa:
 18269                           	opt stack 0
 18270                           tosu	equ	0xFFF
 18271                           tosh	equ	0xFFE
 18272                           tosl	equ	0xFFD
 18273                           pclath	equ	0xFFA
 18274                           tblptru	equ	0xFF8
 18275                           tblptrh	equ	0xFF7
 18276                           tblptrl	equ	0xFF6
 18277                           tablat	equ	0xFF5
 18278                           prodh	equ	0xFF4
 18279                           prodl	equ	0xFF3
 18280                           intcon	equ	0xFF2
 18281                           intcon2	equ	0xFF1
 18282                           intcon3	equ	0xFF0
 18283                           indf0	equ	0xFEF
 18284                           postinc0	equ	0xFEE
 18285                           plusw0	equ	0xFEB
 18286                           fsr0h	equ	0xFEA
 18287                           fsr0l	equ	0xFE9
 18288                           wreg	equ	0xFE8
 18289                           indf1	equ	0xFE7
 18290                           postinc1	equ	0xFE6
 18291                           postdec1	equ	0xFE5
 18292                           fsr1h	equ	0xFE2
 18293                           fsr1l	equ	0xFE1
 18294                           indf2	equ	0xFDF
 18295                           postinc2	equ	0xFDE
 18296                           postdec2	equ	0xFDD
 18297                           plusw2	equ	0xFDB
 18298                           fsr2h	equ	0xFDA
 18299                           fsr2l	equ	0xFD9
 18300                           status	equ	0xFD8
 18301                           
 18302 ;; *************** function ___lwmod *****************
 18303 ;; Defined at:
 18304 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 18305 ;; Parameters:    Size  Location     Type
 18306 ;;  dividend        2   29[BANK0 ] unsigned int 
 18307 ;;  divisor         2   31[BANK0 ] unsigned int 
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;  counter         1   33[BANK0 ] unsigned char 
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  2   29[BANK0 ] unsigned int 
 18312 ;; Registers used:
 18313 ;;		wreg, status,2, status,0
 18314 ;; Tracked objects:
 18315 ;;		On entry : 0/0
 18316 ;;		On exit  : 0/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;Total ram usage:        5 bytes
 18324 ;; Hardware stack levels used:    1
 18325 ;; Hardware stack levels required when called:   11
 18326 ;; This function calls:
 18327 ;;		Nothing
 18328 ;; This function is called by:
 18329 ;;		_utoa
 18330 ;; This function uses a non-reentrant model
 18331 ;;
 18332                           
 18333                           	psect	text73
 18334  005F3C                     __ptext73:
 18335                           	opt stack 0
 18336  005F3C                     ___lwmod:
 18337                           	opt stack 14
 18338                           
 18339                           ; BSR set to: 0
 18340                           ;incstack = 0
 18341  005F3C  0100               	movlb	0	; () banked
 18342  005F3E  517F               	movf	___lwmod@divisor& (0+255),w,b
 18343  005F40  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18344  005F42  B4D8               	btfsc	status,2,c
 18345  005F44  D018               	goto	l3299
 18346                           
 18347                           ; BSR set to: 0
 18348  005F46  0E01               	movlw	1
 18349  005F48  6F81               	movwf	___lwmod@counter& (0+255),b
 18350  005F4A  D004               	goto	l3294
 18351  005F4C                     
 18352                           ; BSR set to: 0
 18353                           
 18354                           ; BSR set to: 0
 18355  005F4C  90D8               	bcf	status,0,c
 18356  005F4E  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 18357  005F50  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18358  005F52  2B81               	incf	___lwmod@counter& (0+255),f,b
 18359  005F54                     l3294:
 18360                           
 18361                           ; BSR set to: 0
 18362                           
 18363                           ; BSR set to: 0
 18364  005F54  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18365  005F56  D7FA               	goto	l3295
 18366  005F58                     u12070:
 18367                           
 18368                           ; BSR set to: 0
 18369                           
 18370                           ; BSR set to: 0
 18371                           
 18372                           ; BSR set to: 0
 18373  005F58  517F               	movf	___lwmod@divisor& (0+255),w,b
 18374  005F5A  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 18375  005F5C  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18376  005F5E  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18377  005F60  A0D8               	btfss	status,0,c
 18378  005F62  D004               	goto	l3298
 18379                           
 18380                           ; BSR set to: 0
 18381  005F64  517F               	movf	___lwmod@divisor& (0+255),w,b
 18382  005F66  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 18383  005F68  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18384  005F6A  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18385  005F6C                     l3298:
 18386                           
 18387                           ; BSR set to: 0
 18388                           
 18389                           ; BSR set to: 0
 18390  005F6C  90D8               	bcf	status,0,c
 18391  005F6E  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18392  005F70  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 18393                           
 18394                           ; BSR set to: 0
 18395  005F72  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 18396  005F74  D7F1               	goto	u12070
 18397  005F76                     l3299:
 18398                           
 18399                           ; BSR set to: 0
 18400                           
 18401                           ; BSR set to: 0
 18402  005F76  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 18403  005F7A  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 18404                           
 18405                           ; BSR set to: 0
 18406  005F7E  0012               	return		;funcret
 18407  005F80                     __end_of___lwmod:
 18408                           	opt stack 0
 18409                           tosu	equ	0xFFF
 18410                           tosh	equ	0xFFE
 18411                           tosl	equ	0xFFD
 18412                           pclath	equ	0xFFA
 18413                           tblptru	equ	0xFF8
 18414                           tblptrh	equ	0xFF7
 18415                           tblptrl	equ	0xFF6
 18416                           tablat	equ	0xFF5
 18417                           prodh	equ	0xFF4
 18418                           prodl	equ	0xFF3
 18419                           intcon	equ	0xFF2
 18420                           intcon2	equ	0xFF1
 18421                           intcon3	equ	0xFF0
 18422                           indf0	equ	0xFEF
 18423                           postinc0	equ	0xFEE
 18424                           plusw0	equ	0xFEB
 18425                           fsr0h	equ	0xFEA
 18426                           fsr0l	equ	0xFE9
 18427                           wreg	equ	0xFE8
 18428                           indf1	equ	0xFE7
 18429                           postinc1	equ	0xFE6
 18430                           postdec1	equ	0xFE5
 18431                           fsr1h	equ	0xFE2
 18432                           fsr1l	equ	0xFE1
 18433                           indf2	equ	0xFDF
 18434                           postinc2	equ	0xFDE
 18435                           postdec2	equ	0xFDD
 18436                           plusw2	equ	0xFDB
 18437                           fsr2h	equ	0xFDA
 18438                           fsr2l	equ	0xFD9
 18439                           status	equ	0xFD8
 18440                           
 18441 ;; *************** function _getsUSBUSART *****************
 18442 ;; Defined at:
 18443 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18444 ;; Parameters:    Size  Location     Type
 18445 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18446 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18447 ;;  len             1   38[BANK0 ] unsigned char 
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;		None
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1    wreg      unsigned char 
 18452 ;; Registers used:
 18453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18459 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18462 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18463 ;;Total ram usage:        4 bytes
 18464 ;; Hardware stack levels used:    1
 18465 ;; Hardware stack levels required when called:   12
 18466 ;; This function calls:
 18467 ;;		_USBTransferOnePacket
 18468 ;; This function is called by:
 18469 ;;		_Terminal
 18470 ;;		_GsmGprsTerminal
 18471 ;; This function uses a non-reentrant model
 18472 ;;
 18473                           
 18474                           	psect	text74
 18475  004BB6                     __ptext74:
 18476                           	opt stack 0
 18477  004BB6                     _getsUSBUSART:
 18478                           	opt stack 13
 18479                           
 18480                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;incstack = 0
 18484  004BB6  0E00               	movlw	0
 18485  004BB8  0100               	movlb	0	; () banked
 18486  004BBA  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18490  004BBC  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18491  004BBE  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18492  004BC0  B4D8               	btfsc	status,2,c
 18493  004BC2  D006               	goto	u12790
 18494                           
 18495                           ; BSR set to: 0
 18496  004BC4  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18497  004BC8  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18498  004BCC  BEDF               	btfsc	indf2,7,c
 18499  004BCE  D03B               	goto	l1924
 18500  004BD0                     u12790:
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;usb_device_cdc.c: 493: {
 18504                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18505                           
 18506                           ; BSR set to: 0
 18507  004BD0  EE20 F001          	lfsr	2,1
 18508  004BD4  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18509  004BD6  26D9               	addwf	fsr2l,f,c
 18510  004BD8  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18511  004BDA  22DA               	addwfc	fsr2h,f,c
 18512  004BDC  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18513  004BDE  5CDE               	subwf	postinc2,w,c
 18514  004BE0  B0D8               	btfsc	status,0,c
 18515  004BE2  D008               	goto	l1927
 18516                           
 18517                           ; BSR set to: 0
 18518                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18519  004BE4  EE20 F001          	lfsr	2,1
 18520  004BE8  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18521  004BEA  26D9               	addwf	fsr2l,f,c
 18522  004BEC  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18523  004BEE  22DA               	addwfc	fsr2h,f,c
 18524  004BF0  50DF               	movf	indf2,w,c
 18525  004BF2  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18526  004BF4                     l1927:
 18527                           
 18528                           ; BSR set to: 0
 18529                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18530                           
 18531                           ; BSR set to: 0
 18532  004BF4  0E00               	movlw	0
 18533  004BF6  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18534  004BF8  D013               	goto	l1928
 18535  004BFA                     
 18536                           ; BSR set to: 0
 18537                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18538                           
 18539                           ; BSR set to: 0
 18540  004BFA  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18541  004BFC  0D01               	mullw	1
 18542  004BFE  0E00               	movlw	low _cdc_data_rx
 18543  004C00  24F3               	addwf	prodl,w,c
 18544  004C02  6ED9               	movwf	fsr2l,c
 18545  004C04  0E05               	movlw	high _cdc_data_rx
 18546  004C06  20F4               	addwfc	prodh,w,c
 18547  004C08  6EDA               	movwf	fsr2h,c
 18548  004C0A  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18549  004C0C  0D01               	mullw	1
 18550  004C0E  50F3               	movf	prodl,w,c
 18551  004C10  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18552  004C12  6EE1               	movwf	fsr1l,c
 18553  004C14  50F4               	movf	prodh,w,c
 18554  004C16  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18555  004C18  6EE2               	movwf	fsr1h,c
 18556  004C1A  CFDF FFE7          	movff	indf2,indf1
 18557                           
 18558                           ; BSR set to: 0
 18559  004C1E  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 18560  004C20                     l1928:
 18561                           
 18562                           ; BSR set to: 0
 18563                           
 18564                           ; BSR set to: 0
 18565  004C20  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18566  004C22  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 18567  004C24  A0D8               	btfss	status,0,c
 18568  004C26  D7E9               	goto	l1929
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18572                           
 18573                           ; BSR set to: 0
 18574  004C28  0E00               	movlw	0
 18575  004C2A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18576  004C2C  0E00               	movlw	low _cdc_data_rx
 18577  004C2E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18578  004C30  0E05               	movlw	high _cdc_data_rx
 18579  004C32  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18580  004C34  0E40               	movlw	64
 18581  004C36  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18582  004C38  0E02               	movlw	2
 18583  004C3A  EC4B  F021         	call	_USBTransferOnePacket
 18584  004C3E  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18585  004C42  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18586  004C46                     l1924:
 18587                           
 18588                           ;usb_device_cdc.c: 513: }
 18589                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18590  004C46  0100               	movlb	0	; () banked
 18591  004C48  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18592  004C4A  0012               	return	
 18593  004C4C                     __end_of_getsUSBUSART:
 18594                           	opt stack 0
 18595                           tosu	equ	0xFFF
 18596                           tosh	equ	0xFFE
 18597                           tosl	equ	0xFFD
 18598                           pclath	equ	0xFFA
 18599                           tblptru	equ	0xFF8
 18600                           tblptrh	equ	0xFF7
 18601                           tblptrl	equ	0xFF6
 18602                           tablat	equ	0xFF5
 18603                           prodh	equ	0xFF4
 18604                           prodl	equ	0xFF3
 18605                           intcon	equ	0xFF2
 18606                           intcon2	equ	0xFF1
 18607                           intcon3	equ	0xFF0
 18608                           indf0	equ	0xFEF
 18609                           postinc0	equ	0xFEE
 18610                           plusw0	equ	0xFEB
 18611                           fsr0h	equ	0xFEA
 18612                           fsr0l	equ	0xFE9
 18613                           wreg	equ	0xFE8
 18614                           indf1	equ	0xFE7
 18615                           postinc1	equ	0xFE6
 18616                           postdec1	equ	0xFE5
 18617                           fsr1h	equ	0xFE2
 18618                           fsr1l	equ	0xFE1
 18619                           indf2	equ	0xFDF
 18620                           postinc2	equ	0xFDE
 18621                           postdec2	equ	0xFDD
 18622                           plusw2	equ	0xFDB
 18623                           fsr2h	equ	0xFDA
 18624                           fsr2l	equ	0xFD9
 18625                           status	equ	0xFD8
 18626                           
 18627 ;; *************** function _USBTransferOnePacket *****************
 18628 ;; Defined at:
 18629 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18630 ;; Parameters:    Size  Location     Type
 18631 ;;  ep              1    wreg     unsigned char 
 18632 ;;  dir             1   29[BANK0 ] unsigned char 
 18633 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18634 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18635 ;;  len             1   32[BANK0 ] unsigned char 
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;  ep              1   33[BANK0 ] unsigned char 
 18638 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18639 ;;		 -> NULL(0), BDT(48), 
 18640 ;; Return value:  Size  Location     Type
 18641 ;;                  2   29[BANK0 ] PTR void 
 18642 ;; Registers used:
 18643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18644 ;; Tracked objects:
 18645 ;;		On entry : 0/0
 18646 ;;		On exit  : 0/0
 18647 ;;		Unchanged: 0/0
 18648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18649 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18650 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18652 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18653 ;;Total ram usage:        7 bytes
 18654 ;; Hardware stack levels used:    1
 18655 ;; Hardware stack levels required when called:   11
 18656 ;; This function calls:
 18657 ;;		Nothing
 18658 ;; This function is called by:
 18659 ;;		_CDCInitEP
 18660 ;;		_getsUSBUSART
 18661 ;;		_CDCTxService
 18662 ;;		_USBCDCEventHandler
 18663 ;; This function uses a non-reentrant model
 18664 ;;
 18665                           
 18666                           	psect	text75
 18667  004296                     __ptext75:
 18668                           	opt stack 0
 18669  004296                     _USBTransferOnePacket:
 18670                           	opt stack 13
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;incstack = 0
 18674                           ;USBTransferOnePacket@ep stored from wreg
 18675  004296  0100               	movlb	0	; () banked
 18676  004298  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18677                           
 18678                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18679                           ;usb_device.c: 1018: if(dir != 0)
 18680  00429A  0100               	movlb	0	; () banked
 18681  00429C  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18682  00429E  B4D8               	btfsc	status,2,c
 18683  0042A0  D007               	goto	l1648
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;usb_device.c: 1019: {
 18687                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18688  0042A2  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18689  0042A4  0D02               	mullw	2
 18690  0042A6  0EB6               	movlw	low _pBDTEntryIn
 18691  0042A8  24F3               	addwf	prodl,w,c
 18692  0042AA  6ED9               	movwf	fsr2l,c
 18693  0042AC  0E00               	movlw	high _pBDTEntryIn
 18694  0042AE  D006               	goto	L16
 18695  0042B0                     l1648:
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;usb_device.c: 1023: else
 18699                           ;usb_device.c: 1024: {
 18700                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18701                           
 18702                           ; BSR set to: 0
 18703  0042B0  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18704  0042B2  0D02               	mullw	2
 18705  0042B4  0E06               	movlw	low _pBDTEntryOut
 18706  0042B6  24F3               	addwf	prodl,w,c
 18707  0042B8  6ED9               	movwf	fsr2l,c
 18708  0042BA  0E03               	movlw	high _pBDTEntryOut
 18709  0042BC                     L16:
 18710  0042BC  20F4               	addwfc	prodh,w,c
 18711  0042BE  6EDA               	movwf	fsr2h,c
 18712  0042C0  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18713  0042C4  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;usb_device.c: 1027: }
 18717                           ;usb_device.c: 1031: if(handle == 0)
 18718                           
 18719                           ; BSR set to: 0
 18720  0042C8  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18721  0042CA  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18722  0042CC  A4D8               	btfss	status,2,c
 18723  0042CE  D005               	goto	l1650
 18724                           
 18725                           ; BSR set to: 0
 18726                           ;usb_device.c: 1032: {
 18727                           ;usb_device.c: 1033: return 0;
 18728  0042D0  0E00               	movlw	0
 18729  0042D2  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18730  0042D4  0E00               	movlw	0
 18731  0042D6  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18732                           
 18733                           ; BSR set to: 0
 18734  0042D8  0012               	return	
 18735  0042DA                     l1650:
 18736                           
 18737                           ; BSR set to: 0
 18738                           ;usb_device.c: 1034: }
 18739                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18740                           
 18741                           ; BSR set to: 0
 18742  0042DA  EE20 F002          	lfsr	2,2
 18743  0042DE  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18744  0042E0  26D9               	addwf	fsr2l,f,c
 18745  0042E2  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18746  0042E4  22DA               	addwfc	fsr2h,f,c
 18747  0042E6  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18748  0042EA  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18749                           
 18750                           ;usb_device.c: 1048: handle->CNT = len;
 18751  0042EE  EE20 F001          	lfsr	2,1
 18752  0042F2  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18753  0042F4  26D9               	addwf	fsr2l,f,c
 18754  0042F6  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18755  0042F8  22DA               	addwfc	fsr2h,f,c
 18756  0042FA  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18757                           
 18758                           ; BSR set to: 0
 18759                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18760  0042FE  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18761  004302  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18762  004306  0E40               	movlw	64
 18763  004308  16DF               	andwf	indf2,f,c
 18764                           
 18765                           ; BSR set to: 0
 18766                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18767  00430A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18768  00430E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18769  004312  0E00               	movlw	0
 18770  004314  86DB               	bsf	plusw2,3,c
 18771                           
 18772                           ; BSR set to: 0
 18773                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18774  004316  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18775  00431A  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18776  00431E  0E00               	movlw	0
 18777  004320  8EDB               	bsf	plusw2,7,c
 18778                           
 18779                           ; BSR set to: 0
 18780                           ;usb_device.c: 1054: if(dir != 0)
 18781  004322  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18782  004324  B4D8               	btfsc	status,2,c
 18783  004326  D007               	goto	l1652
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;usb_device.c: 1055: {
 18787                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18788  004328  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18789  00432A  0D02               	mullw	2
 18790  00432C  0EB6               	movlw	low _pBDTEntryIn
 18791  00432E  24F3               	addwf	prodl,w,c
 18792  004330  6ED9               	movwf	fsr2l,c
 18793  004332  0E00               	movlw	high _pBDTEntryIn
 18794  004334  D006               	goto	L17
 18795  004336                     l1652:
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;usb_device.c: 1059: else
 18799                           ;usb_device.c: 1060: {
 18800                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18801                           
 18802                           ; BSR set to: 0
 18803  004336  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18804  004338  0D02               	mullw	2
 18805  00433A  0E06               	movlw	low _pBDTEntryOut
 18806  00433C  24F3               	addwf	prodl,w,c
 18807  00433E  6ED9               	movwf	fsr2l,c
 18808  004340  0E03               	movlw	high _pBDTEntryOut
 18809  004342                     L17:
 18810  004342  20F4               	addwfc	prodh,w,c
 18811  004344  6EDA               	movwf	fsr2h,c
 18812  004346  0E04               	movlw	4
 18813  004348  1ADF               	xorwf	indf2,f,c
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;usb_device.c: 1063: }
 18817                           ;usb_device.c: 1064: return (void*)handle;
 18818                           
 18819                           ; BSR set to: 0
 18820  00434A  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18821  00434E  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18822  004352  0012               	return	
 18823  004354                     __end_of_USBTransferOnePacket:
 18824                           	opt stack 0
 18825                           tosu	equ	0xFFF
 18826                           tosh	equ	0xFFE
 18827                           tosl	equ	0xFFD
 18828                           pclath	equ	0xFFA
 18829                           tblptru	equ	0xFF8
 18830                           tblptrh	equ	0xFF7
 18831                           tblptrl	equ	0xFF6
 18832                           tablat	equ	0xFF5
 18833                           prodh	equ	0xFF4
 18834                           prodl	equ	0xFF3
 18835                           intcon	equ	0xFF2
 18836                           intcon2	equ	0xFF1
 18837                           intcon3	equ	0xFF0
 18838                           indf0	equ	0xFEF
 18839                           postinc0	equ	0xFEE
 18840                           plusw0	equ	0xFEB
 18841                           fsr0h	equ	0xFEA
 18842                           fsr0l	equ	0xFE9
 18843                           wreg	equ	0xFE8
 18844                           indf1	equ	0xFE7
 18845                           postinc1	equ	0xFE6
 18846                           postdec1	equ	0xFE5
 18847                           fsr1h	equ	0xFE2
 18848                           fsr1l	equ	0xFE1
 18849                           indf2	equ	0xFDF
 18850                           postinc2	equ	0xFDE
 18851                           postdec2	equ	0xFDD
 18852                           plusw2	equ	0xFDB
 18853                           fsr2h	equ	0xFDA
 18854                           fsr2l	equ	0xFD9
 18855                           status	equ	0xFD8
 18856                           
 18857 ;; *************** function _atoi *****************
 18858 ;; Defined at:
 18859 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18860 ;; Parameters:    Size  Location     Type
 18861 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18862 ;;		 -> Terminal@Len(4), 
 18863 ;; Auto vars:     Size  Location     Type
 18864 ;;  a               2   40[BANK0 ] int 
 18865 ;;  sign            1   39[BANK0 ] unsigned char 
 18866 ;; Return value:  Size  Location     Type
 18867 ;;                  2   35[BANK0 ] int 
 18868 ;; Registers used:
 18869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18870 ;; Tracked objects:
 18871 ;;		On entry : 0/0
 18872 ;;		On exit  : 0/0
 18873 ;;		Unchanged: 0/0
 18874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18876 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18878 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18879 ;;Total ram usage:        7 bytes
 18880 ;; Hardware stack levels used:    1
 18881 ;; Hardware stack levels required when called:   12
 18882 ;; This function calls:
 18883 ;;		___wmul
 18884 ;;		_isdigit
 18885 ;; This function is called by:
 18886 ;;		_Terminal
 18887 ;; This function uses a non-reentrant model
 18888 ;;
 18889                           
 18890                           	psect	text76
 18891  0039DE                     __ptext76:
 18892                           	opt stack 0
 18893  0039DE                     _atoi:
 18894                           	opt stack 13
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;incstack = 0
 18898  0039DE  D003               	goto	l3010
 18899  0039E0  0100               	movlb	0	; () banked
 18900  0039E2  4B83               	infsnz	atoi@s& (0+255),f,b
 18901  0039E4  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18902  0039E6                     l3010:
 18903                           
 18904                           ; BSR set to: 0
 18905  0039E6  C083  FFD9         	movff	atoi@s,fsr2l
 18906  0039EA  C084  FFDA         	movff	atoi@s+1,fsr2h
 18907  0039EE  0E20               	movlw	32
 18908  0039F0  18DE               	xorwf	postinc2,w,c
 18909  0039F2  B4D8               	btfsc	status,2,c
 18910  0039F4  D7F5               	goto	l3011
 18911  0039F6  C083  FFD9         	movff	atoi@s,fsr2l
 18912  0039FA  C084  FFDA         	movff	atoi@s+1,fsr2h
 18913  0039FE  0E09               	movlw	9
 18914  003A00  18DE               	xorwf	postinc2,w,c
 18915  003A02  B4D8               	btfsc	status,2,c
 18916  003A04  D7ED               	goto	l3011
 18917  003A06  0E00               	movlw	0
 18918  003A08  0100               	movlb	0	; () banked
 18919  003A0A  6F89               	movwf	(atoi@a+1)& (0+255),b
 18920  003A0C  0E00               	movlw	0
 18921  003A0E  6F88               	movwf	atoi@a& (0+255),b
 18922  003A10  0E00               	movlw	0
 18923  003A12  6F87               	movwf	atoi@sign& (0+255),b
 18924                           
 18925                           ; BSR set to: 0
 18926  003A14  C083  FFD9         	movff	atoi@s,fsr2l
 18927  003A18  C084  FFDA         	movff	atoi@s+1,fsr2h
 18928  003A1C  0E2D               	movlw	45
 18929  003A1E  18DE               	xorwf	postinc2,w,c
 18930  003A20  A4D8               	btfss	status,2,c
 18931  003A22  D002               	goto	l3013
 18932                           
 18933                           ; BSR set to: 0
 18934  003A24  2B87               	incf	atoi@sign& (0+255),f,b
 18935  003A26  D026               	goto	l13755
 18936  003A28                     l3013:
 18937                           
 18938                           ; BSR set to: 0
 18939                           
 18940                           ; BSR set to: 0
 18941  003A28  C083  FFD9         	movff	atoi@s,fsr2l
 18942  003A2C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18943  003A30  0E2B               	movlw	43
 18944  003A32  18DE               	xorwf	postinc2,w,c
 18945  003A34  A4D8               	btfss	status,2,c
 18946  003A36  D020               	goto	l3016
 18947  003A38  D01D               	goto	l13755
 18948  003A3A                     
 18949                           ; BSR set to: 0
 18950  003A3A  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18951  003A3E  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18952  003A42  0E00               	movlw	0
 18953  003A44  0100               	movlb	0	; () banked
 18954  003A46  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18955  003A48  0E0A               	movlw	10
 18956  003A4A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18957  003A4C  EC47  F032         	call	___wmul	;wreg free
 18958  003A50  C083  FFD9         	movff	atoi@s,fsr2l
 18959  003A54  C084  FFDA         	movff	atoi@s+1,fsr2h
 18960  003A58  50DF               	movf	indf2,w,c
 18961  003A5A  0100               	movlb	0	; () banked
 18962  003A5C  6F85               	movwf	??_atoi& (0+255),b
 18963  003A5E  6B86               	clrf	(??_atoi+1)& (0+255),b
 18964  003A60  517D               	movf	?___wmul& (0+255),w,b
 18965  003A62  2785               	addwf	??_atoi& (0+255),f,b
 18966  003A64  517E               	movf	(?___wmul+1)& (0+255),w,b
 18967  003A66  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18968  003A68  0ED0               	movlw	208
 18969  003A6A  2585               	addwf	??_atoi& (0+255),w,b
 18970  003A6C  6F88               	movwf	atoi@a& (0+255),b
 18971  003A6E  0EFF               	movlw	255
 18972  003A70  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18973  003A72  6F89               	movwf	(atoi@a+1)& (0+255),b
 18974  003A74                     l13755:
 18975                           
 18976                           ; BSR set to: 0
 18977  003A74  4B83               	infsnz	atoi@s& (0+255),f,b
 18978  003A76  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18979  003A78                     l3016:
 18980                           
 18981                           ; BSR set to: 0
 18982                           
 18983                           ; BSR set to: 0
 18984  003A78  C083  FFD9         	movff	atoi@s,fsr2l
 18985  003A7C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18986  003A80  50DF               	movf	indf2,w,c
 18987  003A82  EC0D  F033         	call	_isdigit
 18988  003A86  B0D8               	btfsc	status,0,c
 18989  003A88  D7D8               	goto	l3017
 18990  003A8A  0100               	movlb	0	; () banked
 18991  003A8C  5187               	movf	atoi@sign& (0+255),w,b
 18992  003A8E  B4D8               	btfsc	status,2,c
 18993  003A90  D00D               	goto	l3019
 18994                           
 18995                           ; BSR set to: 0
 18996  003A92  C088  F085         	movff	atoi@a,??_atoi
 18997  003A96  C089  F086         	movff	atoi@a+1,??_atoi+1
 18998  003A9A  1F85               	comf	??_atoi& (0+255),f,b
 18999  003A9C  1F86               	comf	(??_atoi+1)& (0+255),f,b
 19000  003A9E  4B85               	infsnz	??_atoi& (0+255),f,b
 19001  003AA0  2B86               	incf	(??_atoi+1)& (0+255),f,b
 19002  003AA2  C085  F083         	movff	??_atoi,?_atoi
 19003  003AA6  C086  F084         	movff	??_atoi+1,?_atoi+1
 19004  003AAA  0012               	return	
 19005  003AAC                     l3019:
 19006                           
 19007                           ; BSR set to: 0
 19008  003AAC  C088  F083         	movff	atoi@a,?_atoi
 19009  003AB0  C089  F084         	movff	atoi@a+1,?_atoi+1
 19010                           
 19011                           ; BSR set to: 0
 19012  003AB4  0012               	return		;funcret
 19013  003AB6                     __end_of_atoi:
 19014                           	opt stack 0
 19015                           tosu	equ	0xFFF
 19016                           tosh	equ	0xFFE
 19017                           tosl	equ	0xFFD
 19018                           pclath	equ	0xFFA
 19019                           tblptru	equ	0xFF8
 19020                           tblptrh	equ	0xFF7
 19021                           tblptrl	equ	0xFF6
 19022                           tablat	equ	0xFF5
 19023                           prodh	equ	0xFF4
 19024                           prodl	equ	0xFF3
 19025                           intcon	equ	0xFF2
 19026                           intcon2	equ	0xFF1
 19027                           intcon3	equ	0xFF0
 19028                           indf0	equ	0xFEF
 19029                           postinc0	equ	0xFEE
 19030                           plusw0	equ	0xFEB
 19031                           fsr0h	equ	0xFEA
 19032                           fsr0l	equ	0xFE9
 19033                           wreg	equ	0xFE8
 19034                           indf1	equ	0xFE7
 19035                           postinc1	equ	0xFE6
 19036                           postdec1	equ	0xFE5
 19037                           fsr1h	equ	0xFE2
 19038                           fsr1l	equ	0xFE1
 19039                           indf2	equ	0xFDF
 19040                           postinc2	equ	0xFDE
 19041                           postdec2	equ	0xFDD
 19042                           plusw2	equ	0xFDB
 19043                           fsr2h	equ	0xFDA
 19044                           fsr2l	equ	0xFD9
 19045                           status	equ	0xFD8
 19046                           
 19047 ;; *************** function _isdigit *****************
 19048 ;; Defined at:
 19049 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 19050 ;; Parameters:    Size  Location     Type
 19051 ;;  c               1    wreg     unsigned char 
 19052 ;; Auto vars:     Size  Location     Type
 19053 ;;  c               1   31[BANK0 ] unsigned char 
 19054 ;; Return value:  Size  Location     Type
 19055 ;;		None               void
 19056 ;; Registers used:
 19057 ;;		wreg, status,2, status,0
 19058 ;; Tracked objects:
 19059 ;;		On entry : 0/0
 19060 ;;		On exit  : 0/0
 19061 ;;		Unchanged: 0/0
 19062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19064 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19066 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19067 ;;Total ram usage:        3 bytes
 19068 ;; Hardware stack levels used:    1
 19069 ;; Hardware stack levels required when called:   11
 19070 ;; This function calls:
 19071 ;;		Nothing
 19072 ;; This function is called by:
 19073 ;;		_atoi
 19074 ;;		_strtol
 19075 ;;		_xtoi
 19076 ;;		_isxdigit
 19077 ;; This function uses a non-reentrant model
 19078 ;;
 19079                           
 19080                           	psect	text77
 19081  00661A                     __ptext77:
 19082                           	opt stack 0
 19083  00661A                     _isdigit:
 19084                           	opt stack 12
 19085                           
 19086                           ; BSR set to: 0
 19087                           ;incstack = 0
 19088                           ;isdigit@c stored from wreg
 19089  00661A  0100               	movlb	0	; () banked
 19090  00661C  6F7F               	movwf	isdigit@c& (0+255),b
 19091  00661E  0E00               	movlw	0
 19092  006620  0100               	movlb	0	; () banked
 19093  006622  6F7E               	movwf	_isdigit$6368& (0+255),b
 19094                           
 19095                           ; BSR set to: 0
 19096  006624  0E3A               	movlw	58
 19097  006626  617F               	cpfslt	isdigit@c& (0+255),b
 19098  006628  D005               	goto	l3191
 19099                           
 19100                           ; BSR set to: 0
 19101  00662A  0E2F               	movlw	47
 19102  00662C  657F               	cpfsgt	isdigit@c& (0+255),b
 19103  00662E  D002               	goto	l3191
 19104                           
 19105                           ; BSR set to: 0
 19106  006630  0E01               	movlw	1
 19107  006632  6F7E               	movwf	_isdigit$6368& (0+255),b
 19108  006634                     l3191:
 19109                           
 19110                           ; BSR set to: 0
 19111                           
 19112                           ; BSR set to: 0
 19113  006634  C07E  F07D         	movff	_isdigit$6368,??_isdigit
 19114  006638  317D               	rrcf	??_isdigit& (0+255),w,b
 19115  00663A  0012               	return	
 19116  00663C                     __end_of_isdigit:
 19117                           	opt stack 0
 19118                           tosu	equ	0xFFF
 19119                           tosh	equ	0xFFE
 19120                           tosl	equ	0xFFD
 19121                           pclath	equ	0xFFA
 19122                           tblptru	equ	0xFF8
 19123                           tblptrh	equ	0xFF7
 19124                           tblptrl	equ	0xFF6
 19125                           tablat	equ	0xFF5
 19126                           prodh	equ	0xFF4
 19127                           prodl	equ	0xFF3
 19128                           intcon	equ	0xFF2
 19129                           intcon2	equ	0xFF1
 19130                           intcon3	equ	0xFF0
 19131                           indf0	equ	0xFEF
 19132                           postinc0	equ	0xFEE
 19133                           plusw0	equ	0xFEB
 19134                           fsr0h	equ	0xFEA
 19135                           fsr0l	equ	0xFE9
 19136                           wreg	equ	0xFE8
 19137                           indf1	equ	0xFE7
 19138                           postinc1	equ	0xFE6
 19139                           postdec1	equ	0xFE5
 19140                           fsr1h	equ	0xFE2
 19141                           fsr1l	equ	0xFE1
 19142                           indf2	equ	0xFDF
 19143                           postinc2	equ	0xFDE
 19144                           postdec2	equ	0xFDD
 19145                           plusw2	equ	0xFDB
 19146                           fsr2h	equ	0xFDA
 19147                           fsr2l	equ	0xFD9
 19148                           status	equ	0xFD8
 19149                           
 19150 ;; *************** function _Rtcm_SetRtccDate *****************
 19151 ;; Defined at:
 19152 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19153 ;; Parameters:    Size  Location     Type
 19154 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 19155 ;; Auto vars:     Size  Location     Type
 19156 ;;		None
 19157 ;; Return value:  Size  Location     Type
 19158 ;;                  1    wreg      void 
 19159 ;; Registers used:
 19160 ;;		wreg, status,2, status,0, cstack
 19161 ;; Tracked objects:
 19162 ;;		On entry : 0/0
 19163 ;;		On exit  : 0/0
 19164 ;;		Unchanged: 0/0
 19165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19166 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19169 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19170 ;;Total ram usage:        8 bytes
 19171 ;; Hardware stack levels used:    1
 19172 ;; Hardware stack levels required when called:   13
 19173 ;; This function calls:
 19174 ;;		_Rtcc_LockRtc
 19175 ;;		_Rtcc_SetRtccValue
 19176 ;;		_Rtcc_UnlockRtc
 19177 ;; This function is called by:
 19178 ;;		_Rtcm_MainTask
 19179 ;; This function uses a non-reentrant model
 19180 ;;
 19181                           
 19182                           	psect	text78
 19183  005934                     __ptext78:
 19184                           	opt stack 0
 19185  005934                     _Rtcm_SetRtccDate:
 19186                           	opt stack 14
 19187                           
 19188                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 19189                           
 19190                           ; BSR set to: 0
 19191                           ;incstack = 0
 19192  005934  EC4E  F034         	call	_Rtcc_UnlockRtc	;wreg free
 19193                           
 19194                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 19195  005938  0100               	movlb	0	; () banked
 19196  00593A  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 19197  00593C  0F30               	addlw	48
 19198  00593E  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 19199  005940  0E00               	movlw	0
 19200  005942  ECAC  F00C         	call	_Rtcc_SetRtccValue
 19201                           
 19202                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 19203  005946  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 19204  00594A  0E01               	movlw	1
 19205  00594C  ECAC  F00C         	call	_Rtcc_SetRtccValue
 19206                           
 19207                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 19208  005950  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 19209  005954  0E02               	movlw	2
 19210  005956  ECAC  F00C         	call	_Rtcc_SetRtccValue
 19211                           
 19212                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 19213  00595A  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 19214  00595E  0E03               	movlw	3
 19215  005960  ECAC  F00C         	call	_Rtcc_SetRtccValue
 19216                           
 19217                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 19218  005964  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 19219  005968  0E04               	movlw	4
 19220  00596A  ECAC  F00C         	call	_Rtcc_SetRtccValue
 19221                           
 19222                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 19223  00596E  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 19224  005972  0E05               	movlw	5
 19225  005974  ECAC  F00C         	call	_Rtcc_SetRtccValue
 19226                           
 19227                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 19228  005978  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 19229  00597C  0E06               	movlw	6
 19230  00597E  ECAC  F00C         	call	_Rtcc_SetRtccValue
 19231                           
 19232                           ;rtcm.c: 191: Rtcc_LockRtc();
 19233  005982  EC56  F034         	call	_Rtcc_LockRtc	;wreg free
 19234  005986  0012               	return		;funcret
 19235  005988                     __end_of_Rtcm_SetRtccDate:
 19236                           	opt stack 0
 19237                           tosu	equ	0xFFF
 19238                           tosh	equ	0xFFE
 19239                           tosl	equ	0xFFD
 19240                           pclath	equ	0xFFA
 19241                           tblptru	equ	0xFF8
 19242                           tblptrh	equ	0xFF7
 19243                           tblptrl	equ	0xFF6
 19244                           tablat	equ	0xFF5
 19245                           prodh	equ	0xFF4
 19246                           prodl	equ	0xFF3
 19247                           intcon	equ	0xFF2
 19248                           intcon2	equ	0xFF1
 19249                           intcon3	equ	0xFF0
 19250                           indf0	equ	0xFEF
 19251                           postinc0	equ	0xFEE
 19252                           plusw0	equ	0xFEB
 19253                           fsr0h	equ	0xFEA
 19254                           fsr0l	equ	0xFE9
 19255                           wreg	equ	0xFE8
 19256                           indf1	equ	0xFE7
 19257                           postinc1	equ	0xFE6
 19258                           postdec1	equ	0xFE5
 19259                           fsr1h	equ	0xFE2
 19260                           fsr1l	equ	0xFE1
 19261                           indf2	equ	0xFDF
 19262                           postinc2	equ	0xFDE
 19263                           postdec2	equ	0xFDD
 19264                           plusw2	equ	0xFDB
 19265                           fsr2h	equ	0xFDA
 19266                           fsr2l	equ	0xFD9
 19267                           status	equ	0xFD8
 19268                           
 19269 ;; *************** function _Rtcc_UnlockRtc *****************
 19270 ;; Defined at:
 19271 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19272 ;; Parameters:    Size  Location     Type
 19273 ;;		None
 19274 ;; Auto vars:     Size  Location     Type
 19275 ;;		None
 19276 ;; Return value:  Size  Location     Type
 19277 ;;                  1    wreg      void 
 19278 ;; Registers used:
 19279 ;;		None
 19280 ;; Tracked objects:
 19281 ;;		On entry : 0/0
 19282 ;;		On exit  : 0/0
 19283 ;;		Unchanged: 0/0
 19284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19289 ;;Total ram usage:        0 bytes
 19290 ;; Hardware stack levels used:    1
 19291 ;; Hardware stack levels required when called:   11
 19292 ;; This function calls:
 19293 ;;		Nothing
 19294 ;; This function is called by:
 19295 ;;		_Rtcm_MainTask
 19296 ;;		_Rtcm_SetRtccDate
 19297 ;;		_Rtcm_SetRtccAlarm
 19298 ;; This function uses a non-reentrant model
 19299 ;;
 19300                           
 19301                           	psect	text79
 19302  00689C                     __ptext79:
 19303                           	opt stack 0
 19304  00689C                     _Rtcc_UnlockRtc:
 19305                           	opt stack 15
 19306                           
 19307                           ;incstack = 0
 19308  00689C  010F               	movlb	15	;# 
 19309  00689E  0E55               	movlw	85	;# 
 19310  0068A0  6EA7               	movwf	4007,c	;# 
 19311  0068A2  0EAA               	movlw	170	;# 
 19312  0068A4  6EA7               	movwf	4007,c	;# 
 19313                           
 19314                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19315  0068A6  010F               	movlb	15	; () banked
 19316  0068A8  8B3F               	bsf	63,5,b	;volatile
 19317                           
 19318                           ; BSR set to: 15
 19319  0068AA  0012               	return		;funcret
 19320  0068AC                     __end_of_Rtcc_UnlockRtc:
 19321                           	opt stack 0
 19322                           tosu	equ	0xFFF
 19323                           tosh	equ	0xFFE
 19324                           tosl	equ	0xFFD
 19325                           pclath	equ	0xFFA
 19326                           tblptru	equ	0xFF8
 19327                           tblptrh	equ	0xFF7
 19328                           tblptrl	equ	0xFF6
 19329                           tablat	equ	0xFF5
 19330                           prodh	equ	0xFF4
 19331                           prodl	equ	0xFF3
 19332                           intcon	equ	0xFF2
 19333                           intcon2	equ	0xFF1
 19334                           intcon3	equ	0xFF0
 19335                           indf0	equ	0xFEF
 19336                           postinc0	equ	0xFEE
 19337                           plusw0	equ	0xFEB
 19338                           fsr0h	equ	0xFEA
 19339                           fsr0l	equ	0xFE9
 19340                           wreg	equ	0xFE8
 19341                           indf1	equ	0xFE7
 19342                           postinc1	equ	0xFE6
 19343                           postdec1	equ	0xFE5
 19344                           fsr1h	equ	0xFE2
 19345                           fsr1l	equ	0xFE1
 19346                           indf2	equ	0xFDF
 19347                           postinc2	equ	0xFDE
 19348                           postdec2	equ	0xFDD
 19349                           plusw2	equ	0xFDB
 19350                           fsr2h	equ	0xFDA
 19351                           fsr2l	equ	0xFD9
 19352                           status	equ	0xFD8
 19353                           
 19354 ;; *************** function _Rtcc_SetRtccValue *****************
 19355 ;; Defined at:
 19356 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19357 ;; Parameters:    Size  Location     Type
 19358 ;;  RtccPtrVal      1    wreg     enum E7757
 19359 ;;  Value           1   37[BANK0 ] unsigned char 
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      void 
 19364 ;; Registers used:
 19365 ;;		wreg, status,2, status,0, cstack
 19366 ;; Tracked objects:
 19367 ;;		On entry : 0/0
 19368 ;;		On exit  : 0/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19371 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19374 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19375 ;;Total ram usage:        4 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; Hardware stack levels required when called:   12
 19378 ;; This function calls:
 19379 ;;		___awdiv
 19380 ;;		___awmod
 19381 ;; This function is called by:
 19382 ;;		_Rtcm_SetRtccDate
 19383 ;; This function uses a non-reentrant model
 19384 ;;
 19385                           
 19386                           	psect	text80
 19387  001958                     __ptext80:
 19388                           	opt stack 0
 19389  001958                     _Rtcc_SetRtccValue:
 19390                           	opt stack 14
 19391                           
 19392                           ; BSR set to: 15
 19393                           ;incstack = 0
 19394                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19395  001958  0100               	movlb	0	; () banked
 19396  00195A  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19397                           
 19398                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19399  00195C  D0FC               	goto	l441
 19400  00195E                     l442:
 19401                           
 19402                           ; BSR set to: 0
 19403                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19404  00195E  010F               	movlb	15	; () banked
 19405  001960  833F               	bsf	63,1,b	;volatile
 19406                           
 19407                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19408  001962  813F               	bsf	63,0,b	;volatile
 19409                           
 19410                           ; BSR set to: 15
 19411                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19412  001964  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19413  001968  0100               	movlb	0	; () banked
 19414  00196A  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19415  00196C  0E00               	movlw	0
 19416  00196E  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19417  001970  0E0A               	movlw	10
 19418  001972  6F7F               	movwf	___awmod@divisor& (0+255),b
 19419  001974  EC20  F029         	call	___awmod	;wreg free
 19420  001978  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19421  00197C  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19422  001980  0E0F               	movlw	15
 19423  001982  0100               	movlb	0	; () banked
 19424  001984  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19425  001986  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19426  00198A  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19427  00198C  0E00               	movlw	0
 19428  00198E  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19429  001990  0E0A               	movlw	10
 19430  001992  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19431  001994  EC1C  F028         	call	___awdiv	;wreg free
 19432  001998  0100               	movlb	0	; () banked
 19433  00199A  397D               	swapf	?___awdiv& (0+255),w,b
 19434  00199C  0BF0               	andlw	240
 19435  00199E  0BF0               	andlw	240
 19436  0019A0  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19437  0019A2  6E98               	movwf	3992,c	;volatile
 19438                           
 19439                           ;rtcc_drv.c: 393: break;
 19440  0019A4  0012               	return	
 19441  0019A6                     l444:
 19442                           
 19443                           ; BSR set to: 0
 19444                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19445  0019A6  010F               	movlb	15	; () banked
 19446  0019A8  833F               	bsf	63,1,b	;volatile
 19447                           
 19448                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19449  0019AA  913F               	bcf	63,0,b	;volatile
 19450                           
 19451                           ; BSR set to: 15
 19452                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19453  0019AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19454  0019B0  0100               	movlb	0	; () banked
 19455  0019B2  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19456  0019B4  0E00               	movlw	0
 19457  0019B6  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19458  0019B8  0E0A               	movlw	10
 19459  0019BA  6F7F               	movwf	___awmod@divisor& (0+255),b
 19460  0019BC  EC20  F029         	call	___awmod	;wreg free
 19461  0019C0  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19462  0019C4  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19463  0019C8  0E0F               	movlw	15
 19464  0019CA  0100               	movlb	0	; () banked
 19465  0019CC  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19466  0019CE  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19467  0019D2  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19468  0019D4  0E00               	movlw	0
 19469  0019D6  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19470  0019D8  0E0A               	movlw	10
 19471  0019DA  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19472  0019DC  EC1C  F028         	call	___awdiv	;wreg free
 19473  0019E0  0100               	movlb	0	; () banked
 19474  0019E2  397D               	swapf	?___awdiv& (0+255),w,b
 19475  0019E4  0BF0               	andlw	240
 19476  0019E6  0BF0               	andlw	240
 19477  0019E8  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19478  0019EA  6E99               	movwf	3993,c	;volatile
 19479                           
 19480                           ;rtcc_drv.c: 401: break;
 19481  0019EC  0012               	return	
 19482  0019EE                     l445:
 19483                           
 19484                           ; BSR set to: 0
 19485                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19486  0019EE  010F               	movlb	15	; () banked
 19487  0019F0  833F               	bsf	63,1,b	;volatile
 19488                           
 19489                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19490  0019F2  913F               	bcf	63,0,b	;volatile
 19491                           
 19492                           ; BSR set to: 15
 19493                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19494  0019F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19495  0019F8  0100               	movlb	0	; () banked
 19496  0019FA  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19497  0019FC  0E00               	movlw	0
 19498  0019FE  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19499  001A00  0E0A               	movlw	10
 19500  001A02  6F7F               	movwf	___awmod@divisor& (0+255),b
 19501  001A04  EC20  F029         	call	___awmod	;wreg free
 19502  001A08  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19503  001A0C  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19504  001A10  0E0F               	movlw	15
 19505  001A12  0100               	movlb	0	; () banked
 19506  001A14  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19507  001A16  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19508  001A1A  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19509  001A1C  0E00               	movlw	0
 19510  001A1E  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19511  001A20  0E0A               	movlw	10
 19512  001A22  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19513  001A24  EC1C  F028         	call	___awdiv	;wreg free
 19514  001A28  0100               	movlb	0	; () banked
 19515  001A2A  397D               	swapf	?___awdiv& (0+255),w,b
 19516  001A2C  0BF0               	andlw	240
 19517  001A2E  0BF0               	andlw	240
 19518  001A30  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19519  001A32  6E98               	movwf	3992,c	;volatile
 19520                           
 19521                           ;rtcc_drv.c: 409: break;
 19522  001A34  0012               	return	
 19523  001A36                     l446:
 19524                           
 19525                           ; BSR set to: 0
 19526                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19527  001A36  010F               	movlb	15	; () banked
 19528  001A38  933F               	bcf	63,1,b	;volatile
 19529                           
 19530                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19531  001A3A  813F               	bsf	63,0,b	;volatile
 19532                           
 19533                           ; BSR set to: 15
 19534                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19535  001A3C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19536  001A40  0100               	movlb	0	; () banked
 19537  001A42  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19538  001A44  0E00               	movlw	0
 19539  001A46  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19540  001A48  0E0A               	movlw	10
 19541  001A4A  6F7F               	movwf	___awmod@divisor& (0+255),b
 19542  001A4C  EC20  F029         	call	___awmod	;wreg free
 19543  001A50  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19544  001A54  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19545  001A58  0E0F               	movlw	15
 19546  001A5A  0100               	movlb	0	; () banked
 19547  001A5C  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19548  001A5E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19549  001A62  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19550  001A64  0E00               	movlw	0
 19551  001A66  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19552  001A68  0E0A               	movlw	10
 19553  001A6A  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19554  001A6C  EC1C  F028         	call	___awdiv	;wreg free
 19555  001A70  0100               	movlb	0	; () banked
 19556  001A72  397D               	swapf	?___awdiv& (0+255),w,b
 19557  001A74  0BF0               	andlw	240
 19558  001A76  0BF0               	andlw	240
 19559  001A78  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19560  001A7A  6E99               	movwf	3993,c	;volatile
 19561                           
 19562                           ;rtcc_drv.c: 417: break;
 19563  001A7C  0012               	return	
 19564  001A7E                     l447:
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19568  001A7E  010F               	movlb	15	; () banked
 19569  001A80  933F               	bcf	63,1,b	;volatile
 19570                           
 19571                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19572  001A82  813F               	bsf	63,0,b	;volatile
 19573                           
 19574                           ; BSR set to: 15
 19575                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19576  001A84  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19577  001A88  0100               	movlb	0	; () banked
 19578  001A8A  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19579  001A8C  0E00               	movlw	0
 19580  001A8E  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19581  001A90  0E0A               	movlw	10
 19582  001A92  6F7F               	movwf	___awmod@divisor& (0+255),b
 19583  001A94  EC20  F029         	call	___awmod	;wreg free
 19584  001A98  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19585  001A9C  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19586  001AA0  0E0F               	movlw	15
 19587  001AA2  0100               	movlb	0	; () banked
 19588  001AA4  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19589  001AA6  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19590  001AAA  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19591  001AAC  0E00               	movlw	0
 19592  001AAE  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19593  001AB0  0E0A               	movlw	10
 19594  001AB2  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19595  001AB4  EC1C  F028         	call	___awdiv	;wreg free
 19596  001AB8  0100               	movlb	0	; () banked
 19597  001ABA  397D               	swapf	?___awdiv& (0+255),w,b
 19598  001ABC  0BF0               	andlw	240
 19599  001ABE  0BF0               	andlw	240
 19600  001AC0  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19601  001AC2  6E98               	movwf	3992,c	;volatile
 19602                           
 19603                           ;rtcc_drv.c: 425: break;
 19604  001AC4  0012               	return	
 19605  001AC6                     l448:
 19606                           
 19607                           ; BSR set to: 0
 19608                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19609  001AC6  010F               	movlb	15	; () banked
 19610  001AC8  933F               	bcf	63,1,b	;volatile
 19611                           
 19612                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19613  001ACA  913F               	bcf	63,0,b	;volatile
 19614                           
 19615                           ; BSR set to: 15
 19616                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19617  001ACC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19618  001AD0  0100               	movlb	0	; () banked
 19619  001AD2  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19620  001AD4  0E00               	movlw	0
 19621  001AD6  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19622  001AD8  0E0A               	movlw	10
 19623  001ADA  6F7F               	movwf	___awmod@divisor& (0+255),b
 19624  001ADC  EC20  F029         	call	___awmod	;wreg free
 19625  001AE0  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19626  001AE4  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19627  001AE8  0E0F               	movlw	15
 19628  001AEA  0100               	movlb	0	; () banked
 19629  001AEC  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19630  001AEE  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19631  001AF2  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19632  001AF4  0E00               	movlw	0
 19633  001AF6  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19634  001AF8  0E0A               	movlw	10
 19635  001AFA  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19636  001AFC  EC1C  F028         	call	___awdiv	;wreg free
 19637  001B00  0100               	movlb	0	; () banked
 19638  001B02  397D               	swapf	?___awdiv& (0+255),w,b
 19639  001B04  0BF0               	andlw	240
 19640  001B06  0BF0               	andlw	240
 19641  001B08  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19642  001B0A  6E99               	movwf	3993,c	;volatile
 19643                           
 19644                           ;rtcc_drv.c: 433: break;
 19645  001B0C  0012               	return	
 19646  001B0E                     l449:
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19650  001B0E  010F               	movlb	15	; () banked
 19651  001B10  933F               	bcf	63,1,b	;volatile
 19652                           
 19653                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19654  001B12  913F               	bcf	63,0,b	;volatile
 19655                           
 19656                           ; BSR set to: 15
 19657                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19658  001B14  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19659  001B18  0100               	movlb	0	; () banked
 19660  001B1A  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19661  001B1C  0E00               	movlw	0
 19662  001B1E  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19663  001B20  0E0A               	movlw	10
 19664  001B22  6F7F               	movwf	___awmod@divisor& (0+255),b
 19665  001B24  EC20  F029         	call	___awmod	;wreg free
 19666  001B28  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19667  001B2C  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19668  001B30  0E0F               	movlw	15
 19669  001B32  0100               	movlb	0	; () banked
 19670  001B34  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19671  001B36  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19672  001B3A  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19673  001B3C  0E00               	movlw	0
 19674  001B3E  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19675  001B40  0E0A               	movlw	10
 19676  001B42  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19677  001B44  EC1C  F028         	call	___awdiv	;wreg free
 19678  001B48  0100               	movlb	0	; () banked
 19679  001B4A  397D               	swapf	?___awdiv& (0+255),w,b
 19680  001B4C  0BF0               	andlw	240
 19681  001B4E  0BF0               	andlw	240
 19682  001B50  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19683  001B52  6E98               	movwf	3992,c	;volatile
 19684                           
 19685                           ; BSR set to: 0
 19686                           ;rtcc_drv.c: 445: }
 19687                           
 19688                           ; BSR set to: 0
 19689                           ;rtcc_drv.c: 444: break;
 19690                           
 19691                           ;rtcc_drv.c: 443: default:
 19692                           
 19693                           ;rtcc_drv.c: 441: break;
 19694  001B54  0012               	return	
 19695  001B56                     l441:
 19696                           
 19697                           ; BSR set to: 0
 19698  001B56  0100               	movlb	0	; () banked
 19699  001B58  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19700                           
 19701                           ; Switch size 1, requested type "space"
 19702                           ; Number of cases is 7, Range of values is 0 to 6
 19703                           ; switch strategies available:
 19704                           ; Name         Instructions Cycles
 19705                           ; simple_byte           22    12 (average)
 19706                           ;	Chosen strategy is simple_byte
 19707  001B5A  0A00               	xorlw	0	; case 0
 19708  001B5C  B4D8               	btfsc	status,2,c
 19709  001B5E  D6FF               	goto	l442
 19710  001B60  0A01               	xorlw	1	; case 1
 19711  001B62  B4D8               	btfsc	status,2,c
 19712  001B64  D720               	goto	l444
 19713  001B66  0A03               	xorlw	3	; case 2
 19714  001B68  B4D8               	btfsc	status,2,c
 19715  001B6A  D741               	goto	l445
 19716  001B6C  0A01               	xorlw	1	; case 3
 19717  001B6E  B4D8               	btfsc	status,2,c
 19718  001B70  D762               	goto	l446
 19719  001B72  0A07               	xorlw	7	; case 4
 19720  001B74  B4D8               	btfsc	status,2,c
 19721  001B76  D783               	goto	l447
 19722  001B78  0A01               	xorlw	1	; case 5
 19723  001B7A  B4D8               	btfsc	status,2,c
 19724  001B7C  D7A4               	goto	l448
 19725  001B7E  0A03               	xorlw	3	; case 6
 19726  001B80  A4D8               	btfss	status,2,c
 19727  001B82  0012               	return	
 19728  001B84  D7C4               	goto	l449
 19729  001B86                     __end_of_Rtcc_SetRtccValue:
 19730                           	opt stack 0
 19731                           tosu	equ	0xFFF
 19732                           tosh	equ	0xFFE
 19733                           tosl	equ	0xFFD
 19734                           pclath	equ	0xFFA
 19735                           tblptru	equ	0xFF8
 19736                           tblptrh	equ	0xFF7
 19737                           tblptrl	equ	0xFF6
 19738                           tablat	equ	0xFF5
 19739                           prodh	equ	0xFF4
 19740                           prodl	equ	0xFF3
 19741                           intcon	equ	0xFF2
 19742                           intcon2	equ	0xFF1
 19743                           intcon3	equ	0xFF0
 19744                           indf0	equ	0xFEF
 19745                           postinc0	equ	0xFEE
 19746                           plusw0	equ	0xFEB
 19747                           fsr0h	equ	0xFEA
 19748                           fsr0l	equ	0xFE9
 19749                           wreg	equ	0xFE8
 19750                           indf1	equ	0xFE7
 19751                           postinc1	equ	0xFE6
 19752                           postdec1	equ	0xFE5
 19753                           fsr1h	equ	0xFE2
 19754                           fsr1l	equ	0xFE1
 19755                           indf2	equ	0xFDF
 19756                           postinc2	equ	0xFDE
 19757                           postdec2	equ	0xFDD
 19758                           plusw2	equ	0xFDB
 19759                           fsr2h	equ	0xFDA
 19760                           fsr2l	equ	0xFD9
 19761                           status	equ	0xFD8
 19762                           
 19763 ;; *************** function ___awmod *****************
 19764 ;; Defined at:
 19765 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19766 ;; Parameters:    Size  Location     Type
 19767 ;;  dividend        2   29[BANK0 ] int 
 19768 ;;  divisor         2   31[BANK0 ] int 
 19769 ;; Auto vars:     Size  Location     Type
 19770 ;;  sign            1   34[BANK0 ] unsigned char 
 19771 ;;  counter         1   33[BANK0 ] unsigned char 
 19772 ;; Return value:  Size  Location     Type
 19773 ;;                  2   29[BANK0 ] int 
 19774 ;; Registers used:
 19775 ;;		wreg, status,2, status,0
 19776 ;; Tracked objects:
 19777 ;;		On entry : 0/0
 19778 ;;		On exit  : 0/0
 19779 ;;		Unchanged: 0/0
 19780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19782 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19784 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19785 ;;Total ram usage:        6 bytes
 19786 ;; Hardware stack levels used:    1
 19787 ;; Hardware stack levels required when called:   11
 19788 ;; This function calls:
 19789 ;;		Nothing
 19790 ;; This function is called by:
 19791 ;;		_Rtcc_SetRtccValue
 19792 ;;		_Rtcc_SetRtccAlarm
 19793 ;; This function uses a non-reentrant model
 19794 ;;
 19795                           
 19796                           	psect	text81
 19797  005240                     __ptext81:
 19798                           	opt stack 0
 19799  005240                     ___awmod:
 19800                           	opt stack 14
 19801                           
 19802                           ; BSR set to: 0
 19803                           ;incstack = 0
 19804  005240  0E00               	movlw	0
 19805  005242  0100               	movlb	0	; () banked
 19806  005244  6F82               	movwf	___awmod@sign& (0+255),b
 19807                           
 19808                           ; BSR set to: 0
 19809  005246  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19810  005248  D006               	goto	l3042
 19811                           
 19812                           ; BSR set to: 0
 19813  00524A  6D7D               	negf	___awmod@dividend& (0+255),b
 19814  00524C  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19815  00524E  B0D8               	btfsc	status,0,c
 19816  005250  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19817                           
 19818                           ; BSR set to: 0
 19819  005252  0E01               	movlw	1
 19820  005254  6F82               	movwf	___awmod@sign& (0+255),b
 19821  005256                     l3042:
 19822                           
 19823                           ; BSR set to: 0
 19824                           
 19825                           ; BSR set to: 0
 19826  005256  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19827  005258  D004               	goto	l3043
 19828                           
 19829                           ; BSR set to: 0
 19830  00525A  6D7F               	negf	___awmod@divisor& (0+255),b
 19831  00525C  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19832  00525E  B0D8               	btfsc	status,0,c
 19833  005260  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19834  005262                     l3043:
 19835                           
 19836                           ; BSR set to: 0
 19837                           
 19838                           ; BSR set to: 0
 19839  005262  517F               	movf	___awmod@divisor& (0+255),w,b
 19840  005264  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19841  005266  B4D8               	btfsc	status,2,c
 19842  005268  D018               	goto	l3050
 19843                           
 19844                           ; BSR set to: 0
 19845  00526A  0E01               	movlw	1
 19846  00526C  6F81               	movwf	___awmod@counter& (0+255),b
 19847  00526E  D004               	goto	l3045
 19848  005270                     
 19849                           ; BSR set to: 0
 19850                           
 19851                           ; BSR set to: 0
 19852  005270  90D8               	bcf	status,0,c
 19853  005272  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19854  005274  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19855  005276  2B81               	incf	___awmod@counter& (0+255),f,b
 19856  005278                     l3045:
 19857                           
 19858                           ; BSR set to: 0
 19859                           
 19860                           ; BSR set to: 0
 19861  005278  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19862  00527A  D7FA               	goto	l3046
 19863  00527C                     u13270:
 19864                           
 19865                           ; BSR set to: 0
 19866                           
 19867                           ; BSR set to: 0
 19868                           
 19869                           ; BSR set to: 0
 19870  00527C  517F               	movf	___awmod@divisor& (0+255),w,b
 19871  00527E  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19872  005280  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19873  005282  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19874  005284  A0D8               	btfss	status,0,c
 19875  005286  D004               	goto	l3049
 19876                           
 19877                           ; BSR set to: 0
 19878  005288  517F               	movf	___awmod@divisor& (0+255),w,b
 19879  00528A  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19880  00528C  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19881  00528E  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19882  005290                     l3049:
 19883                           
 19884                           ; BSR set to: 0
 19885                           
 19886                           ; BSR set to: 0
 19887  005290  90D8               	bcf	status,0,c
 19888  005292  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19889  005294  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19890                           
 19891                           ; BSR set to: 0
 19892  005296  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19893  005298  D7F1               	goto	u13270
 19894  00529A                     l3050:
 19895                           
 19896                           ; BSR set to: 0
 19897                           
 19898                           ; BSR set to: 0
 19899                           
 19900                           ; BSR set to: 0
 19901  00529A  5182               	movf	___awmod@sign& (0+255),w,b
 19902  00529C  B4D8               	btfsc	status,2,c
 19903  00529E  D004               	goto	l3051
 19904                           
 19905                           ; BSR set to: 0
 19906  0052A0  6D7D               	negf	___awmod@dividend& (0+255),b
 19907  0052A2  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19908  0052A4  B0D8               	btfsc	status,0,c
 19909  0052A6  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19910  0052A8                     l3051:
 19911                           
 19912                           ; BSR set to: 0
 19913                           
 19914                           ; BSR set to: 0
 19915  0052A8  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19916  0052AC  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19917  0052B0  0012               	return	
 19918  0052B2                     __end_of___awmod:
 19919                           	opt stack 0
 19920                           tosu	equ	0xFFF
 19921                           tosh	equ	0xFFE
 19922                           tosl	equ	0xFFD
 19923                           pclath	equ	0xFFA
 19924                           tblptru	equ	0xFF8
 19925                           tblptrh	equ	0xFF7
 19926                           tblptrl	equ	0xFF6
 19927                           tablat	equ	0xFF5
 19928                           prodh	equ	0xFF4
 19929                           prodl	equ	0xFF3
 19930                           intcon	equ	0xFF2
 19931                           intcon2	equ	0xFF1
 19932                           intcon3	equ	0xFF0
 19933                           indf0	equ	0xFEF
 19934                           postinc0	equ	0xFEE
 19935                           plusw0	equ	0xFEB
 19936                           fsr0h	equ	0xFEA
 19937                           fsr0l	equ	0xFE9
 19938                           wreg	equ	0xFE8
 19939                           indf1	equ	0xFE7
 19940                           postinc1	equ	0xFE6
 19941                           postdec1	equ	0xFE5
 19942                           fsr1h	equ	0xFE2
 19943                           fsr1l	equ	0xFE1
 19944                           indf2	equ	0xFDF
 19945                           postinc2	equ	0xFDE
 19946                           postdec2	equ	0xFDD
 19947                           plusw2	equ	0xFDB
 19948                           fsr2h	equ	0xFDA
 19949                           fsr2l	equ	0xFD9
 19950                           status	equ	0xFD8
 19951                           
 19952 ;; *************** function ___awdiv *****************
 19953 ;; Defined at:
 19954 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19955 ;; Parameters:    Size  Location     Type
 19956 ;;  dividend        2   29[BANK0 ] int 
 19957 ;;  divisor         2   31[BANK0 ] int 
 19958 ;; Auto vars:     Size  Location     Type
 19959 ;;  quotient        2   35[BANK0 ] int 
 19960 ;;  sign            1   34[BANK0 ] unsigned char 
 19961 ;;  counter         1   33[BANK0 ] unsigned char 
 19962 ;; Return value:  Size  Location     Type
 19963 ;;                  2   29[BANK0 ] int 
 19964 ;; Registers used:
 19965 ;;		wreg, status,2, status,0
 19966 ;; Tracked objects:
 19967 ;;		On entry : 0/0
 19968 ;;		On exit  : 0/0
 19969 ;;		Unchanged: 0/0
 19970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19972 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19974 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19975 ;;Total ram usage:        8 bytes
 19976 ;; Hardware stack levels used:    1
 19977 ;; Hardware stack levels required when called:   11
 19978 ;; This function calls:
 19979 ;;		Nothing
 19980 ;; This function is called by:
 19981 ;;		_Rtcc_SetRtccValue
 19982 ;;		_Rtcc_SetRtccAlarm
 19983 ;; This function uses a non-reentrant model
 19984 ;;
 19985                           
 19986                           	psect	text82
 19987  005038                     __ptext82:
 19988                           	opt stack 0
 19989  005038                     ___awdiv:
 19990                           	opt stack 14
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;incstack = 0
 19994  005038  0E00               	movlw	0
 19995  00503A  0100               	movlb	0	; () banked
 19996  00503C  6F82               	movwf	___awdiv@sign& (0+255),b
 19997                           
 19998                           ; BSR set to: 0
 19999  00503E  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20000  005040  D006               	goto	l3029
 20001                           
 20002                           ; BSR set to: 0
 20003  005042  6D7F               	negf	___awdiv@divisor& (0+255),b
 20004  005044  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 20005  005046  B0D8               	btfsc	status,0,c
 20006  005048  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 20007                           
 20008                           ; BSR set to: 0
 20009  00504A  0E01               	movlw	1
 20010  00504C  6F82               	movwf	___awdiv@sign& (0+255),b
 20011  00504E                     l3029:
 20012                           
 20013                           ; BSR set to: 0
 20014                           
 20015                           ; BSR set to: 0
 20016  00504E  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 20017  005050  D006               	goto	l3030
 20018                           
 20019                           ; BSR set to: 0
 20020  005052  6D7D               	negf	___awdiv@dividend& (0+255),b
 20021  005054  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 20022  005056  B0D8               	btfsc	status,0,c
 20023  005058  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 20024                           
 20025                           ; BSR set to: 0
 20026  00505A  0E01               	movlw	1
 20027  00505C  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 20028  00505E                     l3030:
 20029                           
 20030                           ; BSR set to: 0
 20031                           
 20032                           ; BSR set to: 0
 20033  00505E  0E00               	movlw	0
 20034  005060  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 20035  005062  0E00               	movlw	0
 20036  005064  6F83               	movwf	___awdiv@quotient& (0+255),b
 20037                           
 20038                           ; BSR set to: 0
 20039  005066  517F               	movf	___awdiv@divisor& (0+255),w,b
 20040  005068  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 20041  00506A  B4D8               	btfsc	status,2,c
 20042  00506C  D01C               	goto	l3037
 20043                           
 20044                           ; BSR set to: 0
 20045  00506E  0E01               	movlw	1
 20046  005070  6F81               	movwf	___awdiv@counter& (0+255),b
 20047  005072  D004               	goto	l3032
 20048  005074                     
 20049                           ; BSR set to: 0
 20050                           
 20051                           ; BSR set to: 0
 20052  005074  90D8               	bcf	status,0,c
 20053  005076  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 20054  005078  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 20055  00507A  2B81               	incf	___awdiv@counter& (0+255),f,b
 20056  00507C                     l3032:
 20057                           
 20058                           ; BSR set to: 0
 20059                           
 20060                           ; BSR set to: 0
 20061  00507C  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20062  00507E  D7FA               	goto	l3033
 20063  005080                     u13210:
 20064                           
 20065                           ; BSR set to: 0
 20066                           
 20067                           ; BSR set to: 0
 20068                           
 20069                           ; BSR set to: 0
 20070  005080  90D8               	bcf	status,0,c
 20071  005082  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 20072  005084  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 20073                           
 20074                           ; BSR set to: 0
 20075  005086  517F               	movf	___awdiv@divisor& (0+255),w,b
 20076  005088  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 20077  00508A  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20078  00508C  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 20079  00508E  A0D8               	btfss	status,0,c
 20080  005090  D005               	goto	l3036
 20081                           
 20082                           ; BSR set to: 0
 20083  005092  517F               	movf	___awdiv@divisor& (0+255),w,b
 20084  005094  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 20085  005096  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20086  005098  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 20087                           
 20088                           ; BSR set to: 0
 20089  00509A  8183               	bsf	___awdiv@quotient& (0+255),0,b
 20090  00509C                     l3036:
 20091                           
 20092                           ; BSR set to: 0
 20093                           
 20094                           ; BSR set to: 0
 20095  00509C  90D8               	bcf	status,0,c
 20096  00509E  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 20097  0050A0  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 20098                           
 20099                           ; BSR set to: 0
 20100  0050A2  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 20101  0050A4  D7ED               	goto	u13210
 20102  0050A6                     l3037:
 20103                           
 20104                           ; BSR set to: 0
 20105                           
 20106                           ; BSR set to: 0
 20107                           
 20108                           ; BSR set to: 0
 20109  0050A6  5182               	movf	___awdiv@sign& (0+255),w,b
 20110  0050A8  B4D8               	btfsc	status,2,c
 20111  0050AA  D004               	goto	l3038
 20112                           
 20113                           ; BSR set to: 0
 20114  0050AC  6D83               	negf	___awdiv@quotient& (0+255),b
 20115  0050AE  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 20116  0050B0  B0D8               	btfsc	status,0,c
 20117  0050B2  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 20118  0050B4                     l3038:
 20119                           
 20120                           ; BSR set to: 0
 20121                           
 20122                           ; BSR set to: 0
 20123  0050B4  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 20124  0050B8  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 20125  0050BC  0012               	return	
 20126  0050BE                     __end_of___awdiv:
 20127                           	opt stack 0
 20128                           tosu	equ	0xFFF
 20129                           tosh	equ	0xFFE
 20130                           tosl	equ	0xFFD
 20131                           pclath	equ	0xFFA
 20132                           tblptru	equ	0xFF8
 20133                           tblptrh	equ	0xFF7
 20134                           tblptrl	equ	0xFF6
 20135                           tablat	equ	0xFF5
 20136                           prodh	equ	0xFF4
 20137                           prodl	equ	0xFF3
 20138                           intcon	equ	0xFF2
 20139                           intcon2	equ	0xFF1
 20140                           intcon3	equ	0xFF0
 20141                           indf0	equ	0xFEF
 20142                           postinc0	equ	0xFEE
 20143                           plusw0	equ	0xFEB
 20144                           fsr0h	equ	0xFEA
 20145                           fsr0l	equ	0xFE9
 20146                           wreg	equ	0xFE8
 20147                           indf1	equ	0xFE7
 20148                           postinc1	equ	0xFE6
 20149                           postdec1	equ	0xFE5
 20150                           fsr1h	equ	0xFE2
 20151                           fsr1l	equ	0xFE1
 20152                           indf2	equ	0xFDF
 20153                           postinc2	equ	0xFDE
 20154                           postdec2	equ	0xFDD
 20155                           plusw2	equ	0xFDB
 20156                           fsr2h	equ	0xFDA
 20157                           fsr2l	equ	0xFD9
 20158                           status	equ	0xFD8
 20159                           
 20160 ;; *************** function _Rtcc_LockRtc *****************
 20161 ;; Defined at:
 20162 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20163 ;; Parameters:    Size  Location     Type
 20164 ;;		None
 20165 ;; Auto vars:     Size  Location     Type
 20166 ;;		None
 20167 ;; Return value:  Size  Location     Type
 20168 ;;                  1    wreg      void 
 20169 ;; Registers used:
 20170 ;;		None
 20171 ;; Tracked objects:
 20172 ;;		On entry : 0/0
 20173 ;;		On exit  : 0/0
 20174 ;;		Unchanged: 0/0
 20175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20180 ;;Total ram usage:        0 bytes
 20181 ;; Hardware stack levels used:    1
 20182 ;; Hardware stack levels required when called:   11
 20183 ;; This function calls:
 20184 ;;		Nothing
 20185 ;; This function is called by:
 20186 ;;		_Rtcm_MainTask
 20187 ;;		_Rtcm_SetRtccDate
 20188 ;;		_Rtcm_SetRtccAlarm
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           	psect	text83
 20193  0068AC                     __ptext83:
 20194                           	opt stack 0
 20195  0068AC                     _Rtcc_LockRtc:
 20196                           	opt stack 15
 20197                           
 20198                           ; BSR set to: 0
 20199                           ;incstack = 0
 20200  0068AC  010F               	movlb	15	;# 
 20201  0068AE  0E55               	movlw	85	;# 
 20202  0068B0  6EA7               	movwf	4007,c	;# 
 20203  0068B2  0EAA               	movlw	170	;# 
 20204  0068B4  6EA7               	movwf	4007,c	;# 
 20205                           
 20206                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 20207  0068B6  010F               	movlb	15	; () banked
 20208  0068B8  9B3F               	bcf	63,5,b	;volatile
 20209                           
 20210                           ; BSR set to: 15
 20211  0068BA  0012               	return		;funcret
 20212  0068BC                     __end_of_Rtcc_LockRtc:
 20213                           	opt stack 0
 20214                           tosu	equ	0xFFF
 20215                           tosh	equ	0xFFE
 20216                           tosl	equ	0xFFD
 20217                           pclath	equ	0xFFA
 20218                           tblptru	equ	0xFF8
 20219                           tblptrh	equ	0xFF7
 20220                           tblptrl	equ	0xFF6
 20221                           tablat	equ	0xFF5
 20222                           prodh	equ	0xFF4
 20223                           prodl	equ	0xFF3
 20224                           intcon	equ	0xFF2
 20225                           intcon2	equ	0xFF1
 20226                           intcon3	equ	0xFF0
 20227                           indf0	equ	0xFEF
 20228                           postinc0	equ	0xFEE
 20229                           plusw0	equ	0xFEB
 20230                           fsr0h	equ	0xFEA
 20231                           fsr0l	equ	0xFE9
 20232                           wreg	equ	0xFE8
 20233                           indf1	equ	0xFE7
 20234                           postinc1	equ	0xFE6
 20235                           postdec1	equ	0xFE5
 20236                           fsr1h	equ	0xFE2
 20237                           fsr1l	equ	0xFE1
 20238                           indf2	equ	0xFDF
 20239                           postinc2	equ	0xFDE
 20240                           postdec2	equ	0xFDD
 20241                           plusw2	equ	0xFDB
 20242                           fsr2h	equ	0xFDA
 20243                           fsr2l	equ	0xFD9
 20244                           status	equ	0xFD8
 20245                           
 20246 ;; *************** function _Rtcm_GetRtccDate *****************
 20247 ;; Defined at:
 20248 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20249 ;; Parameters:    Size  Location     Type
 20250 ;;		None
 20251 ;; Auto vars:     Size  Location     Type
 20252 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20253 ;; Return value:  Size  Location     Type
 20254 ;;                  8   33[BANK0 ] struct _RtccDateType
 20255 ;; Registers used:
 20256 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20257 ;; Tracked objects:
 20258 ;;		On entry : 0/0
 20259 ;;		On exit  : 0/0
 20260 ;;		Unchanged: 0/0
 20261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20262 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20263 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20264 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20265 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20266 ;;Total ram usage:       17 bytes
 20267 ;; Hardware stack levels used:    1
 20268 ;; Hardware stack levels required when called:   12
 20269 ;; This function calls:
 20270 ;;		_Rtcc_GetRtccValue
 20271 ;; This function is called by:
 20272 ;;		_Rtcm_MainTask
 20273 ;; This function uses a non-reentrant model
 20274 ;;
 20275                           
 20276                           	psect	text84
 20277  00553A                     __ptext84:
 20278                           	opt stack 0
 20279  00553A                     _Rtcm_GetRtccDate:
 20280                           	opt stack 15
 20281                           
 20282                           ;rtcm.c: 204: RtccDateType LocalDate;
 20283                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20284                           
 20285                           ; BSR set to: 15
 20286                           ;incstack = 0
 20287  00553A  0E00               	movlw	0
 20288  00553C  EC70  F026         	call	_Rtcc_GetRtccValue
 20289  005540  0100               	movlb	0	; () banked
 20290  005542  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20291  005544  0ED0               	movlw	208
 20292  005546  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20293  005548  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20294  00554A  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20295  00554C  0E07               	movlw	7
 20296  00554E  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20297                           
 20298                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20299  005550  0E01               	movlw	1
 20300  005552  EC70  F026         	call	_Rtcc_GetRtccValue
 20301  005556  0100               	movlb	0	; () banked
 20302  005558  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20303                           
 20304                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20305  00555A  0E02               	movlw	2
 20306  00555C  EC70  F026         	call	_Rtcc_GetRtccValue
 20307  005560  0100               	movlb	0	; () banked
 20308  005562  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20309                           
 20310                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20311  005564  0E03               	movlw	3
 20312  005566  EC70  F026         	call	_Rtcc_GetRtccValue
 20313  00556A  0100               	movlb	0	; () banked
 20314  00556C  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20315                           
 20316                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20317  00556E  0E04               	movlw	4
 20318  005570  EC70  F026         	call	_Rtcc_GetRtccValue
 20319  005574  0100               	movlb	0	; () banked
 20320  005576  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20321                           
 20322                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20323  005578  0E05               	movlw	5
 20324  00557A  EC70  F026         	call	_Rtcc_GetRtccValue
 20325  00557E  0100               	movlb	0	; () banked
 20326  005580  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20327                           
 20328                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20329  005582  0E06               	movlw	6
 20330  005584  EC70  F026         	call	_Rtcc_GetRtccValue
 20331  005588  0100               	movlb	0	; () banked
 20332  00558A  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;rtcm.c: 216: return LocalDate;
 20336  00558C  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20337  005590  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20338  005594  0E07               	movlw	7
 20339  005596                     u15551:
 20340  005596  CFDB FFEB          	movff	plusw2,plusw0
 20341  00559A  06E8               	decf	wreg,f,c
 20342  00559C  E2FC               	bc	u15551
 20343  00559E  0012               	return	
 20344  0055A0                     __end_of_Rtcm_GetRtccDate:
 20345                           	opt stack 0
 20346                           tosu	equ	0xFFF
 20347                           tosh	equ	0xFFE
 20348                           tosl	equ	0xFFD
 20349                           pclath	equ	0xFFA
 20350                           tblptru	equ	0xFF8
 20351                           tblptrh	equ	0xFF7
 20352                           tblptrl	equ	0xFF6
 20353                           tablat	equ	0xFF5
 20354                           prodh	equ	0xFF4
 20355                           prodl	equ	0xFF3
 20356                           intcon	equ	0xFF2
 20357                           intcon2	equ	0xFF1
 20358                           intcon3	equ	0xFF0
 20359                           indf0	equ	0xFEF
 20360                           postinc0	equ	0xFEE
 20361                           plusw0	equ	0xFEB
 20362                           fsr0h	equ	0xFEA
 20363                           fsr0l	equ	0xFE9
 20364                           wreg	equ	0xFE8
 20365                           indf1	equ	0xFE7
 20366                           postinc1	equ	0xFE6
 20367                           postdec1	equ	0xFE5
 20368                           fsr1h	equ	0xFE2
 20369                           fsr1l	equ	0xFE1
 20370                           indf2	equ	0xFDF
 20371                           postinc2	equ	0xFDE
 20372                           postdec2	equ	0xFDD
 20373                           plusw2	equ	0xFDB
 20374                           fsr2h	equ	0xFDA
 20375                           fsr2l	equ	0xFD9
 20376                           status	equ	0xFD8
 20377                           
 20378 ;; *************** function _Rtcc_GetRtccValue *****************
 20379 ;; Defined at:
 20380 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;  RtccPtrVal      1    wreg     enum E7757
 20383 ;; Auto vars:     Size  Location     Type
 20384 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20385 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20386 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20387 ;; Return value:  Size  Location     Type
 20388 ;;                  1    wreg      unsigned char 
 20389 ;; Registers used:
 20390 ;;		wreg, status,2, status,0, prodl, prodh
 20391 ;; Tracked objects:
 20392 ;;		On entry : 0/0
 20393 ;;		On exit  : 0/0
 20394 ;;		Unchanged: 0/0
 20395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20397 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20399 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20400 ;;Total ram usage:        4 bytes
 20401 ;; Hardware stack levels used:    1
 20402 ;; Hardware stack levels required when called:   11
 20403 ;; This function calls:
 20404 ;;		Nothing
 20405 ;; This function is called by:
 20406 ;;		_Rtcm_GetRtccDate
 20407 ;; This function uses a non-reentrant model
 20408 ;;
 20409                           
 20410                           	psect	text85
 20411  004CE0                     __ptext85:
 20412                           	opt stack 0
 20413  004CE0                     _Rtcc_GetRtccValue:
 20414                           	opt stack 15
 20415                           
 20416                           ; BSR set to: 0
 20417                           ;incstack = 0
 20418                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20419  004CE0  0100               	movlb	0	; () banked
 20420  004CE2  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20421                           
 20422                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20423                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20424                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20425  004CE4  D02D               	goto	l416
 20426  004CE6                     l417:
 20427                           
 20428                           ; BSR set to: 0
 20429                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20430  004CE6  010F               	movlb	15	; () banked
 20431  004CE8  833F               	bsf	63,1,b	;volatile
 20432  004CEA                     
 20433                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20434  004CEA  813F               	bsf	63,0,b	;volatile
 20435  004CEC  D01C               	goto	L18
 20436  004CEE                     l419:
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20440  004CEE  010F               	movlb	15	; () banked
 20441  004CF0  833F               	bsf	63,1,b	;volatile
 20442  004CF2  D01E               	goto	L19
 20443  004CF4                     l420:
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20447  004CF4  010F               	movlb	15	; () banked
 20448  004CF6  833F               	bsf	63,1,b	;volatile
 20449  004CF8  D021               	goto	L22
 20450  004CFA                     l14143:
 20451                           
 20452                           ; BSR set to: 15
 20453                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20454  004CFA  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20455  004CFE  0E0F               	movlw	15
 20456  004D00  0100               	movlb	0	; () banked
 20457  004D02  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20458  004D04  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20459  004D06  0B0F               	andlw	15
 20460  004D08  0B0F               	andlw	15
 20461  004D0A  0D0A               	mullw	10
 20462  004D0C  50F3               	movf	prodl,w,c
 20463  004D0E  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20464  004D10  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20465                           
 20466                           ;rtcc_drv.c: 241: break;
 20467  004D12  D02D               	goto	l418
 20468  004D14                     l421:
 20469                           
 20470                           ; BSR set to: 0
 20471                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20472  004D14  010F               	movlb	15	; () banked
 20473  004D16  933F               	bcf	63,1,b	;volatile
 20474                           
 20475                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20476  004D18  813F               	bsf	63,0,b	;volatile
 20477                           
 20478                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20479  004D1A  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20480                           
 20481                           ;rtcc_drv.c: 249: break;
 20482  004D1E  D027               	goto	l418
 20483  004D20                     l422:
 20484                           
 20485                           ; BSR set to: 0
 20486                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20487  004D20  010F               	movlb	15	; () banked
 20488  004D22  933F               	bcf	63,1,b	;volatile
 20489  004D24  D7E2               	goto	L20
 20490  004D26                     L18:
 20491                           
 20492                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20493  004D26  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20494  004D2A  D7E7               	goto	l14143
 20495  004D2C                     l423:
 20496                           
 20497                           ; BSR set to: 0
 20498                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20499  004D2C  010F               	movlb	15	; () banked
 20500  004D2E  933F               	bcf	63,1,b	;volatile
 20501  004D30                     L19:
 20502                           
 20503                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20504  004D30  913F               	bcf	63,0,b	;volatile
 20505                           
 20506                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20507  004D32  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20508  004D36  D7E1               	goto	l14143
 20509  004D38                     l424:
 20510                           
 20511                           ; BSR set to: 0
 20512                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20513  004D38  010F               	movlb	15	; () banked
 20514  004D3A  933F               	bcf	63,1,b	;volatile
 20515  004D3C                     L22:
 20516                           
 20517                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20518  004D3C  913F               	bcf	63,0,b	;volatile
 20519  004D3E  D7F3               	goto	L18
 20520  004D40                     l416:
 20521                           
 20522                           ; BSR set to: 0
 20523  004D40  0100               	movlb	0	; () banked
 20524  004D42  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20525                           
 20526                           ; Switch size 1, requested type "space"
 20527                           ; Number of cases is 7, Range of values is 0 to 6
 20528                           ; switch strategies available:
 20529                           ; Name         Instructions Cycles
 20530                           ; simple_byte           22    12 (average)
 20531                           ;	Chosen strategy is simple_byte
 20532  004D44  0A00               	xorlw	0	; case 0
 20533  004D46  B4D8               	btfsc	status,2,c
 20534  004D48  D7CE               	goto	l417
 20535  004D4A  0A01               	xorlw	1	; case 1
 20536  004D4C  B4D8               	btfsc	status,2,c
 20537  004D4E  D7CF               	goto	l419
 20538  004D50  0A03               	xorlw	3	; case 2
 20539  004D52  B4D8               	btfsc	status,2,c
 20540  004D54  D7CF               	goto	l420
 20541  004D56  0A01               	xorlw	1	; case 3
 20542  004D58  B4D8               	btfsc	status,2,c
 20543  004D5A  D7DC               	goto	l421
 20544  004D5C  0A07               	xorlw	7	; case 4
 20545  004D5E  B4D8               	btfsc	status,2,c
 20546  004D60  D7DF               	goto	l422
 20547  004D62  0A01               	xorlw	1	; case 5
 20548  004D64  B4D8               	btfsc	status,2,c
 20549  004D66  D7E2               	goto	l423
 20550  004D68  0A03               	xorlw	3	; case 6
 20551  004D6A  B4D8               	btfsc	status,2,c
 20552  004D6C  D7E5               	goto	l424
 20553  004D6E                     l418:
 20554                           
 20555                           ;rtcc_drv.c: 286: return RetValue;
 20556                           
 20557                           ; BSR set to: 0
 20558  004D6E  0100               	movlb	0	; () banked
 20559  004D70  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20560  004D72  0012               	return	
 20561  004D74                     __end_of_Rtcc_GetRtccValue:
 20562                           	opt stack 0
 20563                           tosu	equ	0xFFF
 20564                           tosh	equ	0xFFE
 20565                           tosl	equ	0xFFD
 20566                           pclath	equ	0xFFA
 20567                           tblptru	equ	0xFF8
 20568                           tblptrh	equ	0xFF7
 20569                           tblptrl	equ	0xFF6
 20570                           tablat	equ	0xFF5
 20571                           prodh	equ	0xFF4
 20572                           prodl	equ	0xFF3
 20573                           intcon	equ	0xFF2
 20574                           intcon2	equ	0xFF1
 20575                           intcon3	equ	0xFF0
 20576                           indf0	equ	0xFEF
 20577                           postinc0	equ	0xFEE
 20578                           plusw0	equ	0xFEB
 20579                           fsr0h	equ	0xFEA
 20580                           fsr0l	equ	0xFE9
 20581                           wreg	equ	0xFE8
 20582                           indf1	equ	0xFE7
 20583                           postinc1	equ	0xFE6
 20584                           postdec1	equ	0xFE5
 20585                           fsr1h	equ	0xFE2
 20586                           fsr1l	equ	0xFE1
 20587                           indf2	equ	0xFDF
 20588                           postinc2	equ	0xFDE
 20589                           postdec2	equ	0xFDD
 20590                           plusw2	equ	0xFDB
 20591                           fsr2h	equ	0xFDA
 20592                           fsr2l	equ	0xFD9
 20593                           status	equ	0xFD8
 20594                           
 20595 ;; *************** function _Rtcc_SetRtcStatus *****************
 20596 ;; Defined at:
 20597 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20598 ;; Parameters:    Size  Location     Type
 20599 ;;  Status          1    wreg     unsigned char 
 20600 ;; Auto vars:     Size  Location     Type
 20601 ;;  Status          1   29[BANK0 ] unsigned char 
 20602 ;; Return value:  Size  Location     Type
 20603 ;;                  1    wreg      void 
 20604 ;; Registers used:
 20605 ;;		wreg
 20606 ;; Tracked objects:
 20607 ;;		On entry : 0/0
 20608 ;;		On exit  : 0/0
 20609 ;;		Unchanged: 0/0
 20610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20615 ;;Total ram usage:        1 bytes
 20616 ;; Hardware stack levels used:    1
 20617 ;; Hardware stack levels required when called:   11
 20618 ;; This function calls:
 20619 ;;		Nothing
 20620 ;; This function is called by:
 20621 ;;		_Rtcm_MainTask
 20622 ;; This function uses a non-reentrant model
 20623 ;;
 20624                           
 20625                           	psect	text86
 20626  0067FA                     __ptext86:
 20627                           	opt stack 0
 20628  0067FA                     _Rtcc_SetRtcStatus:
 20629                           	opt stack 16
 20630                           
 20631                           ; BSR set to: 0
 20632                           ;incstack = 0
 20633                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20634  0067FA  0100               	movlb	0	; () banked
 20635  0067FC  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20636                           
 20637                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20638  0067FE  0100               	movlb	0	; () banked
 20639  006800  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20640  006802  D003               	bra	u14465
 20641  006804  010F               	movlb	15	; () banked
 20642  006806  9F3F               	bcf	63,7,b	;volatile
 20643  006808  D002               	bra	u14466
 20644  00680A                     u14465:
 20645  00680A  010F               	movlb	15	; () banked
 20646  00680C  8F3F               	bsf	63,7,b	;volatile
 20647  00680E                     u14466:
 20648                           
 20649                           ; BSR set to: 15
 20650  00680E  0012               	return		;funcret
 20651  006810                     __end_of_Rtcc_SetRtcStatus:
 20652                           	opt stack 0
 20653                           tosu	equ	0xFFF
 20654                           tosh	equ	0xFFE
 20655                           tosl	equ	0xFFD
 20656                           pclath	equ	0xFFA
 20657                           tblptru	equ	0xFF8
 20658                           tblptrh	equ	0xFF7
 20659                           tblptrl	equ	0xFF6
 20660                           tablat	equ	0xFF5
 20661                           prodh	equ	0xFF4
 20662                           prodl	equ	0xFF3
 20663                           intcon	equ	0xFF2
 20664                           intcon2	equ	0xFF1
 20665                           intcon3	equ	0xFF0
 20666                           indf0	equ	0xFEF
 20667                           postinc0	equ	0xFEE
 20668                           plusw0	equ	0xFEB
 20669                           fsr0h	equ	0xFEA
 20670                           fsr0l	equ	0xFE9
 20671                           wreg	equ	0xFE8
 20672                           indf1	equ	0xFE7
 20673                           postinc1	equ	0xFE6
 20674                           postdec1	equ	0xFE5
 20675                           fsr1h	equ	0xFE2
 20676                           fsr1l	equ	0xFE1
 20677                           indf2	equ	0xFDF
 20678                           postinc2	equ	0xFDE
 20679                           postdec2	equ	0xFDD
 20680                           plusw2	equ	0xFDB
 20681                           fsr2h	equ	0xFDA
 20682                           fsr2l	equ	0xFD9
 20683                           status	equ	0xFD8
 20684                           
 20685 ;; *************** function _Rtcc_RtcConfig *****************
 20686 ;; Defined at:
 20687 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20688 ;; Parameters:    Size  Location     Type
 20689 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20690 ;;		 -> RtcConfig(4), 
 20691 ;; Auto vars:     Size  Location     Type
 20692 ;;		None
 20693 ;; Return value:  Size  Location     Type
 20694 ;;                  1    wreg      void 
 20695 ;; Registers used:
 20696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20697 ;; Tracked objects:
 20698 ;;		On entry : 0/0
 20699 ;;		On exit  : 0/0
 20700 ;;		Unchanged: 0/0
 20701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20702 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20704 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20705 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20706 ;;Total ram usage:        3 bytes
 20707 ;; Hardware stack levels used:    1
 20708 ;; Hardware stack levels required when called:   12
 20709 ;; This function calls:
 20710 ;;		_RtccIrqInit
 20711 ;; This function is called by:
 20712 ;;		_Rtcm_MainTask
 20713 ;; This function uses a non-reentrant model
 20714 ;;
 20715                           
 20716                           	psect	text87
 20717  0048AC                     __ptext87:
 20718                           	opt stack 0
 20719  0048AC                     _Rtcc_RtcConfig:
 20720                           	opt stack 15
 20721                           
 20722                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20723                           
 20724                           ; BSR set to: 15
 20725                           ;incstack = 0
 20726  0048AC  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20727  0048B0  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20728  0048B4  50DF               	movf	indf2,w,c
 20729  0048B6  0100               	movlb	0	; () banked
 20730  0048B8  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20731  0048BA  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20732  0048BC  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20733  0048BE  010F               	movlb	15	; () banked
 20734  0048C0  513F               	movf	63,w,b	;volatile
 20735  0048C2  0100               	movlb	0	; () banked
 20736  0048C4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20737  0048C6  0BFB               	andlw	-5
 20738  0048C8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20739  0048CA  010F               	movlb	15	; () banked
 20740  0048CC  6F3F               	movwf	63,b	;volatile
 20741                           
 20742                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20743  0048CE  0100               	movlb	0	; () banked
 20744  0048D0  EE20 F001          	lfsr	2,1
 20745  0048D4  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20746  0048D6  26D9               	addwf	fsr2l,f,c
 20747  0048D8  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20748  0048DA  22DA               	addwfc	fsr2h,f,c
 20749  0048DC  50DF               	movf	indf2,w,c
 20750  0048DE  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20751  0048E0  0E01               	movlw	1
 20752  0048E2  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20753  0048E4  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20754  0048E6  010F               	movlb	15	; () banked
 20755  0048E8  513C               	movf	60,w,b	;volatile
 20756  0048EA  0100               	movlb	0	; () banked
 20757  0048EC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20758  0048EE  0BFD               	andlw	-3
 20759  0048F0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20760  0048F2  010F               	movlb	15	; () banked
 20761  0048F4  6F3C               	movwf	60,b	;volatile
 20762                           
 20763                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20764  0048F6  0100               	movlb	0	; () banked
 20765  0048F8  EE20 F001          	lfsr	2,1
 20766  0048FC  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20767  0048FE  26D9               	addwf	fsr2l,f,c
 20768  004900  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20769  004902  22DA               	addwfc	fsr2h,f,c
 20770  004904  50DF               	movf	indf2,w,c
 20771  004906  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20772  004908  90D8               	bcf	status,0,c
 20773  00490A  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20774  00490C  0E01               	movlw	1
 20775  00490E  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20776  004910  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20777  004912  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20778  004914  010F               	movlb	15	; () banked
 20779  004916  513C               	movf	60,w,b	;volatile
 20780  004918  0100               	movlb	0	; () banked
 20781  00491A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20782  00491C  0BFB               	andlw	-5
 20783  00491E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20784  004920  010F               	movlb	15	; () banked
 20785  004922  6F3C               	movwf	60,b	;volatile
 20786                           
 20787                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20788  004924  0100               	movlb	0	; () banked
 20789  004926  EE20 F002          	lfsr	2,2
 20790  00492A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20791  00492C  26D9               	addwf	fsr2l,f,c
 20792  00492E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20793  004930  22DA               	addwfc	fsr2h,f,c
 20794  004932  04DE               	decf	postinc2,w,c
 20795  004934  A4D8               	btfss	status,2,c
 20796  004936  0012               	return	
 20797                           
 20798                           ; BSR set to: 0
 20799                           ;rtcc_drv.c: 115: {
 20800                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20801  004938  EE20 F003          	lfsr	2,3
 20802  00493C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20803  00493E  26D9               	addwf	fsr2l,f,c
 20804  004940  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20805  004942  22DA               	addwfc	fsr2h,f,c
 20806  004944  50DF               	movf	indf2,w,c
 20807  004946  EC08  F034         	call	_RtccIrqInit
 20808  00494A  0012               	return	
 20809  00494C                     __end_of_Rtcc_RtcConfig:
 20810                           	opt stack 0
 20811                           tosu	equ	0xFFF
 20812                           tosh	equ	0xFFE
 20813                           tosl	equ	0xFFD
 20814                           pclath	equ	0xFFA
 20815                           tblptru	equ	0xFF8
 20816                           tblptrh	equ	0xFF7
 20817                           tblptrl	equ	0xFF6
 20818                           tablat	equ	0xFF5
 20819                           prodh	equ	0xFF4
 20820                           prodl	equ	0xFF3
 20821                           intcon	equ	0xFF2
 20822                           intcon2	equ	0xFF1
 20823                           intcon3	equ	0xFF0
 20824                           indf0	equ	0xFEF
 20825                           postinc0	equ	0xFEE
 20826                           plusw0	equ	0xFEB
 20827                           fsr0h	equ	0xFEA
 20828                           fsr0l	equ	0xFE9
 20829                           wreg	equ	0xFE8
 20830                           indf1	equ	0xFE7
 20831                           postinc1	equ	0xFE6
 20832                           postdec1	equ	0xFE5
 20833                           fsr1h	equ	0xFE2
 20834                           fsr1l	equ	0xFE1
 20835                           indf2	equ	0xFDF
 20836                           postinc2	equ	0xFDE
 20837                           postdec2	equ	0xFDD
 20838                           plusw2	equ	0xFDB
 20839                           fsr2h	equ	0xFDA
 20840                           fsr2l	equ	0xFD9
 20841                           status	equ	0xFD8
 20842                           
 20843 ;; *************** function _RtccIrqInit *****************
 20844 ;; Defined at:
 20845 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20846 ;; Parameters:    Size  Location     Type
 20847 ;;  Priority        1    wreg     enum E7716
 20848 ;; Auto vars:     Size  Location     Type
 20849 ;;  Priority        1   29[BANK0 ] enum E7716
 20850 ;; Return value:  Size  Location     Type
 20851 ;;                  1    wreg      void 
 20852 ;; Registers used:
 20853 ;;		wreg
 20854 ;; Tracked objects:
 20855 ;;		On entry : 0/0
 20856 ;;		On exit  : 0/0
 20857 ;;		Unchanged: 0/0
 20858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20862 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20863 ;;Total ram usage:        1 bytes
 20864 ;; Hardware stack levels used:    1
 20865 ;; Hardware stack levels required when called:   11
 20866 ;; This function calls:
 20867 ;;		Nothing
 20868 ;; This function is called by:
 20869 ;;		_Rtcc_RtcConfig
 20870 ;; This function uses a non-reentrant model
 20871 ;;
 20872                           
 20873                           	psect	text88
 20874  006810                     __ptext88:
 20875                           	opt stack 0
 20876  006810                     _RtccIrqInit:
 20877                           	opt stack 15
 20878                           
 20879                           ;incstack = 0
 20880                           ;RtccIrqInit@Priority stored from wreg
 20881  006810  0100               	movlb	0	; () banked
 20882  006812  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20883                           
 20884                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20885  006814  90A4               	bcf	4004,0,c	;volatile
 20886                           
 20887                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20888  006816  0100               	movlb	0	; () banked
 20889  006818  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20890  00681A  D002               	bra	u13425
 20891  00681C  90A5               	bcf	4005,0,c	;volatile
 20892  00681E  D001               	bra	u13426
 20893  006820                     u13425:
 20894  006820  80A5               	bsf	4005,0,c	;volatile
 20895  006822                     u13426:
 20896                           
 20897                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20898  006822  80A3               	bsf	4003,0,c	;volatile
 20899  006824  0012               	return		;funcret
 20900  006826                     __end_of_RtccIrqInit:
 20901                           	opt stack 0
 20902                           tosu	equ	0xFFF
 20903                           tosh	equ	0xFFE
 20904                           tosl	equ	0xFFD
 20905                           pclath	equ	0xFFA
 20906                           tblptru	equ	0xFF8
 20907                           tblptrh	equ	0xFF7
 20908                           tblptrl	equ	0xFF6
 20909                           tablat	equ	0xFF5
 20910                           prodh	equ	0xFF4
 20911                           prodl	equ	0xFF3
 20912                           intcon	equ	0xFF2
 20913                           intcon2	equ	0xFF1
 20914                           intcon3	equ	0xFF0
 20915                           indf0	equ	0xFEF
 20916                           postinc0	equ	0xFEE
 20917                           plusw0	equ	0xFEB
 20918                           fsr0h	equ	0xFEA
 20919                           fsr0l	equ	0xFE9
 20920                           wreg	equ	0xFE8
 20921                           indf1	equ	0xFE7
 20922                           postinc1	equ	0xFE6
 20923                           postdec1	equ	0xFE5
 20924                           fsr1h	equ	0xFE2
 20925                           fsr1l	equ	0xFE1
 20926                           indf2	equ	0xFDF
 20927                           postinc2	equ	0xFDE
 20928                           postdec2	equ	0xFDD
 20929                           plusw2	equ	0xFDB
 20930                           fsr2h	equ	0xFDA
 20931                           fsr2l	equ	0xFD9
 20932                           status	equ	0xFD8
 20933                           
 20934 ;; *************** function _Rtcc_AlarmConfig *****************
 20935 ;; Defined at:
 20936 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20937 ;; Parameters:    Size  Location     Type
 20938 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20939 ;;		 -> AlCfg(4), 
 20940 ;; Auto vars:     Size  Location     Type
 20941 ;;		None
 20942 ;; Return value:  Size  Location     Type
 20943 ;;                  1    wreg      void 
 20944 ;; Registers used:
 20945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20946 ;; Tracked objects:
 20947 ;;		On entry : 0/0
 20948 ;;		On exit  : 0/0
 20949 ;;		Unchanged: 0/0
 20950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20953 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20954 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20955 ;;Total ram usage:        3 bytes
 20956 ;; Hardware stack levels used:    1
 20957 ;; Hardware stack levels required when called:   11
 20958 ;; This function calls:
 20959 ;;		Nothing
 20960 ;; This function is called by:
 20961 ;;		_Rtcm_MainTask
 20962 ;; This function uses a non-reentrant model
 20963 ;;
 20964                           
 20965                           	psect	text89
 20966  005400                     __ptext89:
 20967                           	opt stack 0
 20968  005400                     _Rtcc_AlarmConfig:
 20969                           	opt stack 16
 20970                           
 20971                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20972                           
 20973                           ;incstack = 0
 20974  005400  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20975  005404  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20976  005408  50DF               	movf	indf2,w,c
 20977  00540A  0100               	movlb	0	; () banked
 20978  00540C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20979  00540E  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20980  005410  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20981  005412  5091               	movf	3985,w,c	;volatile
 20982  005414  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20983  005416  0B7F               	andlw	-129
 20984  005418  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20985  00541A  6E91               	movwf	3985,c	;volatile
 20986                           
 20987                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20988  00541C  EE20 F001          	lfsr	2,1
 20989  005420  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20990  005422  26D9               	addwf	fsr2l,f,c
 20991  005424  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20992  005426  22DA               	addwfc	fsr2h,f,c
 20993  005428  50DF               	movf	indf2,w,c
 20994  00542A  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20995  00542C  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20996  00542E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20997  005430  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20998  005432  5091               	movf	3985,w,c	;volatile
 20999  005434  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 21000  005436  0BBF               	andlw	-65
 21001  005438  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 21002  00543A  6E91               	movwf	3985,c	;volatile
 21003                           
 21004                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 21005  00543C  EE20 F002          	lfsr	2,2
 21006  005440  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 21007  005442  26D9               	addwf	fsr2l,f,c
 21008  005444  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 21009  005446  22DA               	addwfc	fsr2h,f,c
 21010  005448  50DF               	movf	indf2,w,c
 21011  00544A  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 21012  00544C  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 21013  00544E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 21014  005450  5091               	movf	3985,w,c	;volatile
 21015  005452  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 21016  005454  0BC3               	andlw	-61
 21017  005456  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 21018  005458  6E91               	movwf	3985,c	;volatile
 21019                           
 21020                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 21021  00545A  EE20 F003          	lfsr	2,3
 21022  00545E  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 21023  005460  26D9               	addwf	fsr2l,f,c
 21024  005462  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 21025  005464  22DA               	addwfc	fsr2h,f,c
 21026  005466  50DF               	movf	indf2,w,c
 21027  005468  6E90               	movwf	3984,c	;volatile
 21028                           
 21029                           ; BSR set to: 0
 21030  00546A  0012               	return		;funcret
 21031  00546C                     __end_of_Rtcc_AlarmConfig:
 21032                           	opt stack 0
 21033                           tosu	equ	0xFFF
 21034                           tosh	equ	0xFFE
 21035                           tosl	equ	0xFFD
 21036                           pclath	equ	0xFFA
 21037                           tblptru	equ	0xFF8
 21038                           tblptrh	equ	0xFF7
 21039                           tblptrl	equ	0xFF6
 21040                           tablat	equ	0xFF5
 21041                           prodh	equ	0xFF4
 21042                           prodl	equ	0xFF3
 21043                           intcon	equ	0xFF2
 21044                           intcon2	equ	0xFF1
 21045                           intcon3	equ	0xFF0
 21046                           indf0	equ	0xFEF
 21047                           postinc0	equ	0xFEE
 21048                           plusw0	equ	0xFEB
 21049                           fsr0h	equ	0xFEA
 21050                           fsr0l	equ	0xFE9
 21051                           wreg	equ	0xFE8
 21052                           indf1	equ	0xFE7
 21053                           postinc1	equ	0xFE6
 21054                           postdec1	equ	0xFE5
 21055                           fsr1h	equ	0xFE2
 21056                           fsr1l	equ	0xFE1
 21057                           indf2	equ	0xFDF
 21058                           postinc2	equ	0xFDE
 21059                           postdec2	equ	0xFDD
 21060                           plusw2	equ	0xFDB
 21061                           fsr2h	equ	0xFDA
 21062                           fsr2l	equ	0xFD9
 21063                           status	equ	0xFD8
 21064                           
 21065 ;; *************** function _waitSetupCall *****************
 21066 ;; Defined at:
 21067 ;;		line 84 in file "../Source/c/04_App/app_gate.c"
 21068 ;; Parameters:    Size  Location     Type
 21069 ;;		None
 21070 ;; Auto vars:     Size  Location     Type
 21071 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21072 ;; Return value:  Size  Location     Type
 21073 ;;                  1    wreg      unsigned char 
 21074 ;; Registers used:
 21075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21076 ;; Tracked objects:
 21077 ;;		On entry : 0/0
 21078 ;;		On exit  : 0/0
 21079 ;;		Unchanged: 0/0
 21080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21085 ;;Total ram usage:        1 bytes
 21086 ;; Hardware stack levels used:    1
 21087 ;; Hardware stack levels required when called:   15
 21088 ;; This function calls:
 21089 ;;		_Led_SetLedStatus
 21090 ;;		_getSetupCall
 21091 ;;		_secondsAppTimer
 21092 ;; This function is called by:
 21093 ;;		_MyApp_Task
 21094 ;; This function uses a non-reentrant model
 21095 ;;
 21096                           
 21097                           	psect	text90
 21098  005C18                     __ptext90:
 21099                           	opt stack 0
 21100  005C18                     _waitSetupCall:
 21101                           	opt stack 12
 21102                           
 21103                           ;app_gate.c: 86: bool isCallArrived = 0;
 21104                           
 21105                           ; BSR set to: 0
 21106                           ;incstack = 0
 21107  005C18  0E00               	movlw	0
 21108  005C1A  0100               	movlb	0	; () banked
 21109  005C1C  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;app_gate.c: 87: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21113  005C1E  0EB8               	movlw	low _setupCallTicks
 21114  005C20  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21115  005C22  0E03               	movlw	high _setupCallTicks
 21116  005C24  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21117  005C26  0E00               	movlw	0
 21118  005C28  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21119  005C2A  0E1E               	movlw	30
 21120  005C2C  EC05  F024         	call	_secondsAppTimer
 21121  005C30  0900               	iorlw	0
 21122  005C32  A4D8               	btfss	status,2,c
 21123  005C34  D00F               	goto	l2777
 21124                           
 21125                           ;app_gate.c: 88: {
 21126                           ;app_gate.c: 89: Led_SetLedStatus(1u, LED_STS_BLINK);
 21127  005C36  0E03               	movlw	3
 21128  005C38  0100               	movlb	0	; () banked
 21129  005C3A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21130  005C3C  0E01               	movlw	1
 21131  005C3E  ECC1  F031         	call	_Led_SetLedStatus
 21132                           
 21133                           ;app_gate.c: 90: if (getSetupCall())
 21134  005C42  EC3F  F033         	call	_getSetupCall	;wreg free
 21135  005C46  0900               	iorlw	0
 21136  005C48  B4D8               	btfsc	status,2,c
 21137  005C4A  D00A               	goto	l2779
 21138                           
 21139                           ;app_gate.c: 91: {
 21140                           ;app_gate.c: 92: isCallArrived = 1;
 21141  005C4C  0E01               	movlw	1
 21142  005C4E  0100               	movlb	0	; () banked
 21143  005C50  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21144                           
 21145                           ; BSR set to: 0
 21146                           ;app_gate.c: 93: }
 21147                           ;app_gate.c: 94: }
 21148  005C52  D006               	goto	l2779
 21149  005C54                     l2777:
 21150                           
 21151                           ;app_gate.c: 95: else
 21152                           ;app_gate.c: 96: {
 21153                           ;app_gate.c: 97: Led_SetLedStatus(1u, LED_STS_ON);
 21154                           
 21155                           ; BSR set to: 0
 21156  005C54  0E01               	movlw	1
 21157  005C56  0100               	movlb	0	; () banked
 21158  005C58  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21159  005C5A  0E01               	movlw	1
 21160  005C5C  ECC1  F031         	call	_Led_SetLedStatus
 21161  005C60                     l2779:
 21162                           
 21163                           ;app_gate.c: 98: }
 21164                           ;app_gate.c: 99: return isCallArrived;
 21165  005C60  0100               	movlb	0	; () banked
 21166  005C62  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21167  005C64  0012               	return	
 21168  005C66                     __end_of_waitSetupCall:
 21169                           	opt stack 0
 21170                           tosu	equ	0xFFF
 21171                           tosh	equ	0xFFE
 21172                           tosl	equ	0xFFD
 21173                           pclath	equ	0xFFA
 21174                           tblptru	equ	0xFF8
 21175                           tblptrh	equ	0xFF7
 21176                           tblptrl	equ	0xFF6
 21177                           tablat	equ	0xFF5
 21178                           prodh	equ	0xFF4
 21179                           prodl	equ	0xFF3
 21180                           intcon	equ	0xFF2
 21181                           intcon2	equ	0xFF1
 21182                           intcon3	equ	0xFF0
 21183                           indf0	equ	0xFEF
 21184                           postinc0	equ	0xFEE
 21185                           plusw0	equ	0xFEB
 21186                           fsr0h	equ	0xFEA
 21187                           fsr0l	equ	0xFE9
 21188                           wreg	equ	0xFE8
 21189                           indf1	equ	0xFE7
 21190                           postinc1	equ	0xFE6
 21191                           postdec1	equ	0xFE5
 21192                           fsr1h	equ	0xFE2
 21193                           fsr1l	equ	0xFE1
 21194                           indf2	equ	0xFDF
 21195                           postinc2	equ	0xFDE
 21196                           postdec2	equ	0xFDD
 21197                           plusw2	equ	0xFDB
 21198                           fsr2h	equ	0xFDA
 21199                           fsr2l	equ	0xFD9
 21200                           status	equ	0xFD8
 21201                           
 21202 ;; *************** function _getSetupCall *****************
 21203 ;; Defined at:
 21204 ;;		line 65 in file "../Source/c/04_App/app_gate.c"
 21205 ;; Parameters:    Size  Location     Type
 21206 ;;		None
 21207 ;; Auto vars:     Size  Location     Type
 21208 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21209 ;; Return value:  Size  Location     Type
 21210 ;;                  1    wreg      unsigned char 
 21211 ;; Registers used:
 21212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21213 ;; Tracked objects:
 21214 ;;		On entry : 0/0
 21215 ;;		On exit  : 0/0
 21216 ;;		Unchanged: 0/0
 21217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21221 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21222 ;;Total ram usage:        1 bytes
 21223 ;; Hardware stack levels used:    1
 21224 ;; Hardware stack levels required when called:   14
 21225 ;; This function calls:
 21226 ;;		_Mdm_HangPhoneCall
 21227 ;;		_Mdm_IsRinging
 21228 ;; This function is called by:
 21229 ;;		_waitSetupCall
 21230 ;; This function uses a non-reentrant model
 21231 ;;
 21232                           
 21233                           	psect	text91
 21234  00667E                     __ptext91:
 21235                           	opt stack 0
 21236  00667E                     _getSetupCall:
 21237                           	opt stack 12
 21238                           
 21239                           ;app_gate.c: 67: bool isCalledReceived = 0;
 21240                           
 21241                           ; BSR set to: 0
 21242                           ;incstack = 0
 21243  00667E  0E00               	movlw	0
 21244  006680  0100               	movlb	0	; () banked
 21245  006682  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21246                           
 21247                           ; BSR set to: 0
 21248                           ;app_gate.c: 69: if (Mdm_IsRinging())
 21249  006684  EC93  F032         	call	_Mdm_IsRinging	;wreg free
 21250  006688  0900               	iorlw	0
 21251  00668A  B4D8               	btfsc	status,2,c
 21252  00668C  D005               	goto	l2773
 21253                           
 21254                           ;app_gate.c: 70: {
 21255                           ;app_gate.c: 71: Mdm_HangPhoneCall();
 21256  00668E  EC3C  F034         	call	_Mdm_HangPhoneCall	;wreg free
 21257                           
 21258                           ;app_gate.c: 72: isCalledReceived = 1;
 21259  006692  0E01               	movlw	1
 21260  006694  0100               	movlb	0	; () banked
 21261  006696  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21262  006698                     l2773:
 21263                           
 21264                           ;app_gate.c: 73: }
 21265                           ;app_gate.c: 74: return isCalledReceived;
 21266                           
 21267                           ; BSR set to: 0
 21268  006698  0100               	movlb	0	; () banked
 21269  00669A  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21270  00669C  0012               	return	
 21271  00669E                     __end_of_getSetupCall:
 21272                           	opt stack 0
 21273                           tosu	equ	0xFFF
 21274                           tosh	equ	0xFFE
 21275                           tosl	equ	0xFFD
 21276                           pclath	equ	0xFFA
 21277                           tblptru	equ	0xFF8
 21278                           tblptrh	equ	0xFF7
 21279                           tblptrl	equ	0xFF6
 21280                           tablat	equ	0xFF5
 21281                           prodh	equ	0xFF4
 21282                           prodl	equ	0xFF3
 21283                           intcon	equ	0xFF2
 21284                           intcon2	equ	0xFF1
 21285                           intcon3	equ	0xFF0
 21286                           indf0	equ	0xFEF
 21287                           postinc0	equ	0xFEE
 21288                           plusw0	equ	0xFEB
 21289                           fsr0h	equ	0xFEA
 21290                           fsr0l	equ	0xFE9
 21291                           wreg	equ	0xFE8
 21292                           indf1	equ	0xFE7
 21293                           postinc1	equ	0xFE6
 21294                           postdec1	equ	0xFE5
 21295                           fsr1h	equ	0xFE2
 21296                           fsr1l	equ	0xFE1
 21297                           indf2	equ	0xFDF
 21298                           postinc2	equ	0xFDE
 21299                           postdec2	equ	0xFDD
 21300                           plusw2	equ	0xFDB
 21301                           fsr2h	equ	0xFDA
 21302                           fsr2l	equ	0xFD9
 21303                           status	equ	0xFD8
 21304                           
 21305 ;; *************** function _Mdm_IsRinging *****************
 21306 ;; Defined at:
 21307 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21308 ;; Parameters:    Size  Location     Type
 21309 ;;		None
 21310 ;; Auto vars:     Size  Location     Type
 21311 ;;  Ret             1   33[BANK0 ] enum E8924
 21312 ;; Return value:  Size  Location     Type
 21313 ;;                  1    wreg      enum E8924
 21314 ;; Registers used:
 21315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21316 ;; Tracked objects:
 21317 ;;		On entry : 0/0
 21318 ;;		On exit  : 0/0
 21319 ;;		Unchanged: 0/0
 21320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21325 ;;Total ram usage:        1 bytes
 21326 ;; Hardware stack levels used:    1
 21327 ;; Hardware stack levels required when called:   12
 21328 ;; This function calls:
 21329 ;;		_ReceiveEvt
 21330 ;; This function is called by:
 21331 ;;		_MyApp_Task
 21332 ;;		_getSetupCall
 21333 ;; This function uses a non-reentrant model
 21334 ;;
 21335                           
 21336                           	psect	text92
 21337  006526                     __ptext92:
 21338                           	opt stack 0
 21339  006526                     _Mdm_IsRinging:
 21340                           	opt stack 13
 21341                           
 21342                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 21343                           
 21344                           ; BSR set to: 0
 21345                           ;incstack = 0
 21346  006526  0E00               	movlw	0
 21347  006528  0100               	movlb	0	; () banked
 21348  00652A  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21349                           
 21350                           ; BSR set to: 0
 21351                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 21352  00652C  0EDE               	movlw	low _RingEvent
 21353  00652E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21354  006530  0E00               	movlw	high _RingEvent
 21355  006532  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21356  006534  ECF0  F031         	call	_ReceiveEvt	;wreg free
 21357  006538  0900               	iorlw	0
 21358  00653A  B4D8               	btfsc	status,2,c
 21359  00653C  D003               	goto	l1152
 21360                           
 21361                           ;mdm_gsm_gprs.c: 1030: {
 21362                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 21363  00653E  0E01               	movlw	1
 21364  006540  0100               	movlb	0	; () banked
 21365  006542  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21366  006544                     l1152:
 21367                           
 21368                           ;mdm_gsm_gprs.c: 1032: }
 21369                           ;mdm_gsm_gprs.c: 1034: return Ret;
 21370  006544  0100               	movlb	0	; () banked
 21371  006546  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21372  006548  0012               	return	
 21373  00654A                     __end_of_Mdm_IsRinging:
 21374                           	opt stack 0
 21375                           tosu	equ	0xFFF
 21376                           tosh	equ	0xFFE
 21377                           tosl	equ	0xFFD
 21378                           pclath	equ	0xFFA
 21379                           tblptru	equ	0xFF8
 21380                           tblptrh	equ	0xFF7
 21381                           tblptrl	equ	0xFF6
 21382                           tablat	equ	0xFF5
 21383                           prodh	equ	0xFF4
 21384                           prodl	equ	0xFF3
 21385                           intcon	equ	0xFF2
 21386                           intcon2	equ	0xFF1
 21387                           intcon3	equ	0xFF0
 21388                           indf0	equ	0xFEF
 21389                           postinc0	equ	0xFEE
 21390                           plusw0	equ	0xFEB
 21391                           fsr0h	equ	0xFEA
 21392                           fsr0l	equ	0xFE9
 21393                           wreg	equ	0xFE8
 21394                           indf1	equ	0xFE7
 21395                           postinc1	equ	0xFE6
 21396                           postdec1	equ	0xFE5
 21397                           fsr1h	equ	0xFE2
 21398                           fsr1l	equ	0xFE1
 21399                           indf2	equ	0xFDF
 21400                           postinc2	equ	0xFDE
 21401                           postdec2	equ	0xFDD
 21402                           plusw2	equ	0xFDB
 21403                           fsr2h	equ	0xFDA
 21404                           fsr2l	equ	0xFD9
 21405                           status	equ	0xFD8
 21406                           
 21407 ;; *************** function _Mdm_HangPhoneCall *****************
 21408 ;; Defined at:
 21409 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21410 ;; Parameters:    Size  Location     Type
 21411 ;;		None
 21412 ;; Auto vars:     Size  Location     Type
 21413 ;;		None
 21414 ;; Return value:  Size  Location     Type
 21415 ;;                  1    wreg      void 
 21416 ;; Registers used:
 21417 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21418 ;; Tracked objects:
 21419 ;;		On entry : 0/0
 21420 ;;		On exit  : 0/0
 21421 ;;		Unchanged: 0/0
 21422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21427 ;;Total ram usage:        0 bytes
 21428 ;; Hardware stack levels used:    1
 21429 ;; Hardware stack levels required when called:   13
 21430 ;; This function calls:
 21431 ;;		_Uart_WriteConstString
 21432 ;; This function is called by:
 21433 ;;		_MyApp_Task
 21434 ;;		_getSetupCall
 21435 ;; This function uses a non-reentrant model
 21436 ;;
 21437                           
 21438                           	psect	text93
 21439  006878                     __ptext93:
 21440                           	opt stack 0
 21441  006878                     _Mdm_HangPhoneCall:
 21442                           	opt stack 12
 21443                           
 21444                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 21445                           
 21446                           ; BSR set to: 0
 21447                           ;incstack = 0
 21448  006878  0EF0               	movlw	low STR_6
 21449  00687A  0100               	movlb	0	; () banked
 21450  00687C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21451  00687E  0EFF               	movlw	high STR_6
 21452  006880  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21453  006882  0E01               	movlw	1
 21454  006884  ECC0  F02F         	call	_Uart_WriteConstString
 21455  006888  0012               	return		;funcret
 21456  00688A                     __end_of_Mdm_HangPhoneCall:
 21457                           	opt stack 0
 21458                           tosu	equ	0xFFF
 21459                           tosh	equ	0xFFE
 21460                           tosl	equ	0xFFD
 21461                           pclath	equ	0xFFA
 21462                           tblptru	equ	0xFF8
 21463                           tblptrh	equ	0xFF7
 21464                           tblptrl	equ	0xFF6
 21465                           tablat	equ	0xFF5
 21466                           prodh	equ	0xFF4
 21467                           prodl	equ	0xFF3
 21468                           intcon	equ	0xFF2
 21469                           intcon2	equ	0xFF1
 21470                           intcon3	equ	0xFF0
 21471                           indf0	equ	0xFEF
 21472                           postinc0	equ	0xFEE
 21473                           plusw0	equ	0xFEB
 21474                           fsr0h	equ	0xFEA
 21475                           fsr0l	equ	0xFE9
 21476                           wreg	equ	0xFE8
 21477                           indf1	equ	0xFE7
 21478                           postinc1	equ	0xFE6
 21479                           postdec1	equ	0xFE5
 21480                           fsr1h	equ	0xFE2
 21481                           fsr1l	equ	0xFE1
 21482                           indf2	equ	0xFDF
 21483                           postinc2	equ	0xFDE
 21484                           postdec2	equ	0xFDD
 21485                           plusw2	equ	0xFDB
 21486                           fsr2h	equ	0xFDA
 21487                           fsr2l	equ	0xFD9
 21488                           status	equ	0xFD8
 21489                           
 21490 ;; *************** function _saveNumberInMemory *****************
 21491 ;; Defined at:
 21492 ;;		line 108 in file "../Source/c/04_App/app_gate.c"
 21493 ;; Parameters:    Size  Location     Type
 21494 ;;  address         1    wreg     unsigned char 
 21495 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 21496 ;;		 -> smsText(20), MyApp_Task@emptyNumber(13), callerNumber(13), 
 21497 ;; Auto vars:     Size  Location     Type
 21498 ;;  address         1   56[BANK0 ] unsigned char 
 21499 ;; Return value:  Size  Location     Type
 21500 ;;                  1    wreg      void 
 21501 ;; Registers used:
 21502 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21503 ;; Tracked objects:
 21504 ;;		On entry : 0/0
 21505 ;;		On exit  : 0/0
 21506 ;;		Unchanged: 0/0
 21507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21508 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21511 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21512 ;;Total ram usage:        3 bytes
 21513 ;; Hardware stack levels used:    1
 21514 ;; Hardware stack levels required when called:   14
 21515 ;; This function calls:
 21516 ;;		_Eeprom_Write
 21517 ;; This function is called by:
 21518 ;;		_MyApp_Task
 21519 ;; This function uses a non-reentrant model
 21520 ;;
 21521                           
 21522                           	psect	text94
 21523  006766                     __ptext94:
 21524                           	opt stack 0
 21525  006766                     _saveNumberInMemory:
 21526                           	opt stack 13
 21527                           
 21528                           ;incstack = 0
 21529                           ;saveNumberInMemory@address stored from wreg
 21530  006766  0100               	movlb	0	; () banked
 21531  006768  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 21532                           
 21533                           ;app_gate.c: 110: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 21534  00676A  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 21535  00676E  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 21536  006772  0E0D               	movlw	13
 21537  006774  0100               	movlb	0	; () banked
 21538  006776  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21539  006778  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 21540  00677A  EC42  F02D         	call	_Eeprom_Write
 21541  00677E  0012               	return		;funcret
 21542  006780                     __end_of_saveNumberInMemory:
 21543                           	opt stack 0
 21544                           tosu	equ	0xFFF
 21545                           tosh	equ	0xFFE
 21546                           tosl	equ	0xFFD
 21547                           pclath	equ	0xFFA
 21548                           tblptru	equ	0xFF8
 21549                           tblptrh	equ	0xFF7
 21550                           tblptrl	equ	0xFF6
 21551                           tablat	equ	0xFF5
 21552                           prodh	equ	0xFF4
 21553                           prodl	equ	0xFF3
 21554                           intcon	equ	0xFF2
 21555                           intcon2	equ	0xFF1
 21556                           intcon3	equ	0xFF0
 21557                           indf0	equ	0xFEF
 21558                           postinc0	equ	0xFEE
 21559                           plusw0	equ	0xFEB
 21560                           fsr0h	equ	0xFEA
 21561                           fsr0l	equ	0xFE9
 21562                           wreg	equ	0xFE8
 21563                           indf1	equ	0xFE7
 21564                           postinc1	equ	0xFE6
 21565                           postdec1	equ	0xFE5
 21566                           fsr1h	equ	0xFE2
 21567                           fsr1l	equ	0xFE1
 21568                           indf2	equ	0xFDF
 21569                           postinc2	equ	0xFDE
 21570                           postdec2	equ	0xFDD
 21571                           plusw2	equ	0xFDB
 21572                           fsr2h	equ	0xFDA
 21573                           fsr2l	equ	0xFD9
 21574                           status	equ	0xFD8
 21575                           
 21576 ;; *************** function _parseCommand *****************
 21577 ;; Defined at:
 21578 ;;		line 92 in file "../Source/c/04_App/app.c"
 21579 ;; Parameters:    Size  Location     Type
 21580 ;;  text            2   40[BANK0 ] PTR unsigned char 
 21581 ;;		 -> smsText(20), 
 21582 ;; Auto vars:     Size  Location     Type
 21583 ;;  deleteNumber    3   45[BANK0 ] const unsigned char [3]
 21584 ;;  addNumberCmd    3   42[BANK0 ] const unsigned char [3]
 21585 ;;  state           1   48[BANK0 ] enum E8994
 21586 ;; Return value:  Size  Location     Type
 21587 ;;                  1    wreg      enum E8994
 21588 ;; Registers used:
 21589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21590 ;; Tracked objects:
 21591 ;;		On entry : 0/0
 21592 ;;		On exit  : 0/0
 21593 ;;		Unchanged: 0/0
 21594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21596 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21598 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21599 ;;Total ram usage:        9 bytes
 21600 ;; Hardware stack levels used:    1
 21601 ;; Hardware stack levels required when called:   12
 21602 ;; This function calls:
 21603 ;;		_StringCompare
 21604 ;;		_isNumberValid
 21605 ;; This function is called by:
 21606 ;;		_MyApp_Task
 21607 ;; This function uses a non-reentrant model
 21608 ;;
 21609                           
 21610                           	psect	text95
 21611  0044B6                     __ptext95:
 21612                           	opt stack 0
 21613  0044B6                     _parseCommand:
 21614                           	opt stack 15
 21615                           
 21616                           ;app.c: 94: const uint8_t addNumberCmd[] = {'A', 'D', 'D'};
 21617                           
 21618                           ;incstack = 0
 21619  0044B6  0E2B               	movlw	low parseCommand@F9021
 21620  0044B8  6EF6               	movwf	tblptrl,c
 21621  0044BA                     	if	1	;There is more than 1 active tblptr byte
 21622  0044BA  0EFC               	movlw	high parseCommand@F9021
 21623  0044BC  6EF7               	movwf	tblptrh,c
 21624  0044BE                     	endif
 21625  0044BE                     	if	0	;There are less than 3 active tblptr bytes
 21626  0044BE                     	endif
 21627  0044BE  0009               	tblrd		*+
 21628  0044C0  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd
 21629  0044C4  0009               	tblrd		*+
 21630  0044C6  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+1
 21631  0044CA  000A               	tblrd		*-
 21632  0044CC  CFF5 F08C          	movff	tablat,parseCommand@addNumberCmd+2
 21633                           
 21634                           ;app.c: 95: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L'};
 21635  0044D0  0E28               	movlw	low parseCommand@F9023
 21636  0044D2  6EF6               	movwf	tblptrl,c
 21637  0044D4                     	if	1	;There is more than 1 active tblptr byte
 21638  0044D4  0EFC               	movlw	high parseCommand@F9023
 21639  0044D6  6EF7               	movwf	tblptrh,c
 21640  0044D8                     	endif
 21641  0044D8                     	if	0	;There are less than 3 active tblptr bytes
 21642  0044D8                     	endif
 21643  0044D8  0009               	tblrd		*+
 21644  0044DA  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd
 21645  0044DE  0009               	tblrd		*+
 21646  0044E0  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+1
 21647  0044E4  000A               	tblrd		*-
 21648  0044E6  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+2
 21649                           
 21650                           ;app.c: 96: gateFsmStates state = GATE_WAIT_EVENT;
 21651  0044EA  0E03               	movlw	3
 21652  0044EC  0100               	movlb	0	; () banked
 21653  0044EE  6F90               	movwf	parseCommand@state& (0+255),b
 21654                           
 21655                           ; BSR set to: 0
 21656                           ;app.c: 98: if (StringCompare(text, addNumberCmd, sizeof(addNumberCmd)))
 21657  0044F0  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21658  0044F4  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21659  0044F8  0E8A               	movlw	low parseCommand@addNumberCmd
 21660  0044FA  6F7F               	movwf	StringCompare@String2& (0+255),b
 21661  0044FC  0E00               	movlw	high parseCommand@addNumberCmd
 21662  0044FE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21663  004500  0E00               	movlw	0
 21664  004502  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21665  004504  0E03               	movlw	3
 21666  004506  6F81               	movwf	StringCompare@Len& (0+255),b
 21667  004508  EC6B  F02D         	call	_StringCompare	;wreg free
 21668  00450C  0900               	iorlw	0
 21669  00450E  B4D8               	btfsc	status,2,c
 21670  004510  D002               	goto	l2583
 21671                           
 21672                           ;app.c: 99: {
 21673                           ;app.c: 100: state = GATE_ADD_CMD;
 21674  004512  0E04               	movlw	4
 21675  004514  D013               	goto	L23
 21676  004516                     l2583:
 21677                           
 21678                           ;app.c: 102: else if (StringCompare(text, deleteNumberCmd, sizeof(deleteNumberCmd)))
 21679                           
 21680                           ; BSR set to: 0
 21681  004516  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21682  00451A  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21683  00451E  0E8D               	movlw	low parseCommand@deleteNumberCmd
 21684  004520  0100               	movlb	0	; () banked
 21685  004522  6F7F               	movwf	StringCompare@String2& (0+255),b
 21686  004524  0E00               	movlw	high parseCommand@deleteNumberCmd
 21687  004526  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21688  004528  0E00               	movlw	0
 21689  00452A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21690  00452C  0E03               	movlw	3
 21691  00452E  6F81               	movwf	StringCompare@Len& (0+255),b
 21692  004530  EC6B  F02D         	call	_StringCompare	;wreg free
 21693  004534  0900               	iorlw	0
 21694  004536  B4D8               	btfsc	status,2,c
 21695  004538  D003               	goto	l2585
 21696                           
 21697                           ;app.c: 103: {
 21698                           ;app.c: 104: state = GATE_DEL_CMD;
 21699  00453A  0E07               	movlw	7
 21700  00453C                     L23:
 21701  00453C  0100               	movlb	0	; () banked
 21702  00453E  6F90               	movwf	parseCommand@state& (0+255),b
 21703  004540                     l2585:
 21704                           
 21705                           ;app.c: 109: }
 21706                           ;app.c: 111: if (!isNumberValid(text + 3))
 21707                           
 21708                           ; BSR set to: 0
 21709                           
 21710                           ; BSR set to: 0
 21711                           
 21712                           ;app.c: 106: else
 21713                           ;app.c: 107: {
 21714                           
 21715                           ; BSR set to: 0
 21716  004540  0E03               	movlw	3
 21717  004542  0100               	movlb	0	; () banked
 21718  004544  2588               	addwf	parseCommand@text& (0+255),w,b
 21719  004546  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21720  004548  0E00               	movlw	0
 21721  00454A  2189               	addwfc	(parseCommand@text+1)& (0+255),w,b
 21722  00454C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21723  00454E  ECD0  F02A         	call	_isNumberValid	;wreg free
 21724  004552  0900               	iorlw	0
 21725  004554  A4D8               	btfss	status,2,c
 21726  004556  D003               	goto	l2587
 21727                           
 21728                           ;app.c: 112: {
 21729                           ;app.c: 113: state = GATE_WAIT_EVENT;
 21730  004558  0E03               	movlw	3
 21731  00455A  0100               	movlb	0	; () banked
 21732  00455C  6F90               	movwf	parseCommand@state& (0+255),b
 21733  00455E                     l2587:
 21734                           
 21735                           ;app.c: 114: }
 21736                           ;app.c: 115: return state;
 21737  00455E  0100               	movlb	0	; () banked
 21738  004560  5190               	movf	parseCommand@state& (0+255),w,b
 21739  004562  0012               	return	
 21740  004564                     __end_of_parseCommand:
 21741                           	opt stack 0
 21742                           tosu	equ	0xFFF
 21743                           tosh	equ	0xFFE
 21744                           tosl	equ	0xFFD
 21745                           pclath	equ	0xFFA
 21746                           tblptru	equ	0xFF8
 21747                           tblptrh	equ	0xFF7
 21748                           tblptrl	equ	0xFF6
 21749                           tablat	equ	0xFF5
 21750                           prodh	equ	0xFF4
 21751                           prodl	equ	0xFF3
 21752                           intcon	equ	0xFF2
 21753                           intcon2	equ	0xFF1
 21754                           intcon3	equ	0xFF0
 21755                           indf0	equ	0xFEF
 21756                           postinc0	equ	0xFEE
 21757                           plusw0	equ	0xFEB
 21758                           fsr0h	equ	0xFEA
 21759                           fsr0l	equ	0xFE9
 21760                           wreg	equ	0xFE8
 21761                           indf1	equ	0xFE7
 21762                           postinc1	equ	0xFE6
 21763                           postdec1	equ	0xFE5
 21764                           fsr1h	equ	0xFE2
 21765                           fsr1l	equ	0xFE1
 21766                           indf2	equ	0xFDF
 21767                           postinc2	equ	0xFDE
 21768                           postdec2	equ	0xFDD
 21769                           plusw2	equ	0xFDB
 21770                           fsr2h	equ	0xFDA
 21771                           fsr2l	equ	0xFD9
 21772                           status	equ	0xFD8
 21773                           
 21774 ;; *************** function _isNumberInMemory *****************
 21775 ;; Defined at:
 21776 ;;		line 174 in file "../Source/c/04_App/app_gate.c"
 21777 ;; Parameters:    Size  Location     Type
 21778 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 21779 ;;		 -> MyApp_Task@receivedNumber(13), smsText(20), 
 21780 ;; Auto vars:     Size  Location     Type
 21781 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 21782 ;;  positionInMe    1   18[BANK1 ] unsigned char 
 21783 ;;  memoryOpResu    1   17[BANK1 ] enum E8246
 21784 ;;  searchFailed    1   16[BANK1 ] const unsigned char 
 21785 ;;  searchInProg    1   15[BANK1 ] const unsigned char 
 21786 ;; Return value:  Size  Location     Type
 21787 ;;                  1    wreg      unsigned char 
 21788 ;; Registers used:
 21789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21790 ;; Tracked objects:
 21791 ;;		On entry : 0/0
 21792 ;;		On exit  : 0/0
 21793 ;;		Unchanged: 0/0
 21794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21795 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21796 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21798 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21799 ;;Total ram usage:       19 bytes
 21800 ;; Hardware stack levels used:    1
 21801 ;; Hardware stack levels required when called:   17
 21802 ;; This function calls:
 21803 ;;		_Eeprom_Read
 21804 ;;		_StringCompare
 21805 ;;		_isNumberValid
 21806 ;; This function is called by:
 21807 ;;		_MyApp_Task
 21808 ;; This function uses a non-reentrant model
 21809 ;;
 21810                           
 21811                           	psect	text96
 21812  0049EA                     __ptext96:
 21813                           	opt stack 0
 21814  0049EA                     _isNumberInMemory:
 21815                           	opt stack 10
 21816                           
 21817                           ;app_gate.c: 176: const uint8_t searchInProgress = 0;
 21818                           
 21819                           ; BSR set to: 0
 21820                           ;incstack = 0
 21821  0049EA  0E00               	movlw	0
 21822  0049EC  0101               	movlb	1	; () banked
 21823  0049EE  6F0F               	movwf	isNumberInMemory@searchInProgress& (0+255),b
 21824                           
 21825                           ;app_gate.c: 177: const uint8_t searchFailed = 1;
 21826  0049F0  0E01               	movlw	1
 21827  0049F2  6F10               	movwf	isNumberInMemory@searchFailed& (0+255),b
 21828                           
 21829                           ; BSR set to: 1
 21830                           ;app_gate.c: 178: static uint8_t currentPosition = 16;
 21831                           ;app_gate.c: 179: uint8_t positionInMemory = searchInProgress;
 21832  0049F4  C10F  F112         	movff	isNumberInMemory@searchInProgress,isNumberInMemory@positionInMemory
 21833                           
 21834                           ;app_gate.c: 180: uint8_t readBuffer[((UINT8)(13))];
 21835                           ;app_gate.c: 181: EepromStsType memoryOpResult = OP_PENDING;
 21836  0049F8  0E02               	movlw	2
 21837  0049FA  6F11               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21838                           
 21839                           ; BSR set to: 1
 21840                           ;app_gate.c: 183: if (currentPosition >= 16 * 10)
 21841  0049FC  0E9F               	movlw	159
 21842  0049FE  0100               	movlb	0	; () banked
 21843  004A00  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21844  004A02  D002               	goto	l2809
 21845                           
 21846                           ; BSR set to: 0
 21847                           ;app_gate.c: 184: {
 21848                           ;app_gate.c: 185: currentPosition = 16;
 21849  004A04  0E10               	movlw	16
 21850  004A06  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21851  004A08                     l2809:
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;app_gate.c: 186: }
 21855                           ;app_gate.c: 187: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 21856                           
 21857                           ; BSR set to: 0
 21858  004A08  0E02               	movlw	low isNumberInMemory@readBuffer
 21859  004A0A  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 21860  004A0C  0E01               	movlw	high isNumberInMemory@readBuffer
 21861  004A0E  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 21862  004A10  0E0D               	movlw	13
 21863  004A12  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 21864  004A14  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 21865  004A16  ECC4  F02C         	call	_Eeprom_Read
 21866  004A1A  0101               	movlb	1	; () banked
 21867  004A1C  6F11               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21868                           
 21869                           ; BSR set to: 1
 21870                           ;app_gate.c: 188: if (memoryOpResult != OP_PENDING)
 21871  004A1E  0E02               	movlw	2
 21872  004A20  1911               	xorwf	isNumberInMemory@memoryOpResult& (0+255),w,b
 21873  004A22  B4D8               	btfsc	status,2,c
 21874  004A24  D024               	goto	l2810
 21875                           
 21876                           ; BSR set to: 1
 21877                           ;app_gate.c: 189: {
 21878                           ;app_gate.c: 190: if (isNumberValid(readBuffer))
 21879  004A26  0E02               	movlw	low isNumberInMemory@readBuffer
 21880  004A28  0100               	movlb	0	; () banked
 21881  004A2A  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21882  004A2C  0E01               	movlw	high isNumberInMemory@readBuffer
 21883  004A2E  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21884  004A30  ECD0  F02A         	call	_isNumberValid	;wreg free
 21885  004A34  0900               	iorlw	0
 21886  004A36  B4D8               	btfsc	status,2,c
 21887  004A38  D017               	goto	l2812
 21888                           
 21889                           ;app_gate.c: 191: {
 21890                           ;app_gate.c: 192: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 21891  004A3A  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 21892  004A3E  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 21893  004A42  0E02               	movlw	low isNumberInMemory@readBuffer
 21894  004A44  0100               	movlb	0	; () banked
 21895  004A46  6F7F               	movwf	StringCompare@String2& (0+255),b
 21896  004A48  0E01               	movlw	high isNumberInMemory@readBuffer
 21897  004A4A  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21898  004A4C  0E00               	movlw	0
 21899  004A4E  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21900  004A50  0E0D               	movlw	13
 21901  004A52  6F81               	movwf	StringCompare@Len& (0+255),b
 21902  004A54  EC6B  F02D         	call	_StringCompare	;wreg free
 21903  004A58  0900               	iorlw	0
 21904  004A5A  B4D8               	btfsc	status,2,c
 21905  004A5C  D005               	goto	l2812
 21906                           
 21907                           ;app_gate.c: 193: {
 21908                           ;app_gate.c: 194: positionInMemory = currentPosition;
 21909  004A5E  C0E2  F112         	movff	isNumberInMemory@currentPosition,isNumberInMemory@positionInMemory
 21910                           
 21911                           ;app_gate.c: 195: currentPosition = 16 * 10;
 21912  004A62  0EA0               	movlw	160
 21913  004A64  0100               	movlb	0	; () banked
 21914  004A66  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21915  004A68                     l2812:
 21916                           
 21917                           ;app_gate.c: 200: }
 21918                           ;app_gate.c: 201: }
 21919                           ;app_gate.c: 202: currentPosition += 16;
 21920                           
 21921                           ; BSR set to: 0
 21922                           
 21923                           ; BSR set to: 0
 21924                           
 21925                           ;app_gate.c: 197: else
 21926                           ;app_gate.c: 198: {
 21927                           
 21928                           ; BSR set to: 0
 21929  004A68  0E10               	movlw	16
 21930  004A6A  0100               	movlb	0	; () banked
 21931  004A6C  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 21932  004A6E                     l2810:
 21933                           
 21934                           ;app_gate.c: 203: }
 21935                           ;app_gate.c: 204: if (positionInMemory == 0 && currentPosition >= 16 * 10)
 21936                           
 21937                           ; BSR set to: 0
 21938  004A6E  0101               	movlb	1	; () banked
 21939  004A70  5112               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21940  004A72  A4D8               	btfss	status,2,c
 21941  004A74  D006               	goto	l2814
 21942                           
 21943                           ; BSR set to: 1
 21944  004A76  0E9F               	movlw	159
 21945  004A78  0100               	movlb	0	; () banked
 21946  004A7A  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21947  004A7C  D002               	goto	l2814
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;app_gate.c: 205: {
 21951                           ;app_gate.c: 206: positionInMemory = searchFailed;
 21952  004A7E  C110  F112         	movff	isNumberInMemory@searchFailed,isNumberInMemory@positionInMemory
 21953  004A82                     l2814:
 21954                           
 21955                           ;app_gate.c: 207: }
 21956                           ;app_gate.c: 208: return positionInMemory;
 21957                           
 21958                           ; BSR set to: 0
 21959  004A82  0101               	movlb	1	; () banked
 21960  004A84  5112               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21961  004A86  0012               	return	
 21962  004A88                     __end_of_isNumberInMemory:
 21963                           	opt stack 0
 21964                           tosu	equ	0xFFF
 21965                           tosh	equ	0xFFE
 21966                           tosl	equ	0xFFD
 21967                           pclath	equ	0xFFA
 21968                           tblptru	equ	0xFF8
 21969                           tblptrh	equ	0xFF7
 21970                           tblptrl	equ	0xFF6
 21971                           tablat	equ	0xFF5
 21972                           prodh	equ	0xFF4
 21973                           prodl	equ	0xFF3
 21974                           intcon	equ	0xFF2
 21975                           intcon2	equ	0xFF1
 21976                           intcon3	equ	0xFF0
 21977                           indf0	equ	0xFEF
 21978                           postinc0	equ	0xFEE
 21979                           plusw0	equ	0xFEB
 21980                           fsr0h	equ	0xFEA
 21981                           fsr0l	equ	0xFE9
 21982                           wreg	equ	0xFE8
 21983                           indf1	equ	0xFE7
 21984                           postinc1	equ	0xFE6
 21985                           postdec1	equ	0xFE5
 21986                           fsr1h	equ	0xFE2
 21987                           fsr1l	equ	0xFE1
 21988                           indf2	equ	0xFDF
 21989                           postinc2	equ	0xFDE
 21990                           postdec2	equ	0xFDD
 21991                           plusw2	equ	0xFDB
 21992                           fsr2h	equ	0xFDA
 21993                           fsr2l	equ	0xFD9
 21994                           status	equ	0xFD8
 21995                           
 21996 ;; *************** function _initMemorizedNumbersCount *****************
 21997 ;; Defined at:
 21998 ;;		line 117 in file "../Source/c/04_App/app_gate.c"
 21999 ;; Parameters:    Size  Location     Type
 22000 ;;		None
 22001 ;; Auto vars:     Size  Location     Type
 22002 ;;		None
 22003 ;; Return value:  Size  Location     Type
 22004 ;;                  1    wreg      void 
 22005 ;; Registers used:
 22006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22007 ;; Tracked objects:
 22008 ;;		On entry : 0/0
 22009 ;;		On exit  : 0/0
 22010 ;;		Unchanged: 0/0
 22011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22016 ;;Total ram usage:        0 bytes
 22017 ;; Hardware stack levels used:    1
 22018 ;; Hardware stack levels required when called:   14
 22019 ;; This function calls:
 22020 ;;		_Eeprom_Write
 22021 ;;		_initPreamble
 22022 ;; This function is called by:
 22023 ;;		_MyApp_Task
 22024 ;; This function uses a non-reentrant model
 22025 ;;
 22026                           
 22027                           	psect	text97
 22028  006780                     __ptext97:
 22029                           	opt stack 0
 22030  006780                     _initMemorizedNumbersCount:
 22031                           	opt stack 13
 22032                           
 22033                           ;app_gate.c: 119: Eeprom_Write(0, initPreamble(), 5);
 22034                           
 22035                           ; BSR set to: 1
 22036                           ;incstack = 0
 22037  006780  EC5B  F032         	call	_initPreamble	;wreg free
 22038  006784  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 22039  006788  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 22040  00678C  0E05               	movlw	5
 22041  00678E  0100               	movlb	0	; () banked
 22042  006790  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 22043  006792  0E00               	movlw	0
 22044  006794  EC42  F02D         	call	_Eeprom_Write
 22045  006798  0012               	return		;funcret
 22046  00679A                     __end_of_initMemorizedNumbersCount:
 22047                           	opt stack 0
 22048                           tosu	equ	0xFFF
 22049                           tosh	equ	0xFFE
 22050                           tosl	equ	0xFFD
 22051                           pclath	equ	0xFFA
 22052                           tblptru	equ	0xFF8
 22053                           tblptrh	equ	0xFF7
 22054                           tblptrl	equ	0xFF6
 22055                           tablat	equ	0xFF5
 22056                           prodh	equ	0xFF4
 22057                           prodl	equ	0xFF3
 22058                           intcon	equ	0xFF2
 22059                           intcon2	equ	0xFF1
 22060                           intcon3	equ	0xFF0
 22061                           indf0	equ	0xFEF
 22062                           postinc0	equ	0xFEE
 22063                           plusw0	equ	0xFEB
 22064                           fsr0h	equ	0xFEA
 22065                           fsr0l	equ	0xFE9
 22066                           wreg	equ	0xFE8
 22067                           indf1	equ	0xFE7
 22068                           postinc1	equ	0xFE6
 22069                           postdec1	equ	0xFE5
 22070                           fsr1h	equ	0xFE2
 22071                           fsr1l	equ	0xFE1
 22072                           indf2	equ	0xFDF
 22073                           postinc2	equ	0xFDE
 22074                           postdec2	equ	0xFDD
 22075                           plusw2	equ	0xFDB
 22076                           fsr2h	equ	0xFDA
 22077                           fsr2l	equ	0xFD9
 22078                           status	equ	0xFD8
 22079                           
 22080 ;; *************** function _initPreamble *****************
 22081 ;; Defined at:
 22082 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 22083 ;; Parameters:    Size  Location     Type
 22084 ;;		None
 22085 ;; Auto vars:     Size  Location     Type
 22086 ;;		None
 22087 ;; Return value:  Size  Location     Type
 22088 ;;                  2   29[BANK0 ] PTR unsigned char 
 22089 ;; Registers used:
 22090 ;;		wreg, status,2, status,0
 22091 ;; Tracked objects:
 22092 ;;		On entry : 0/0
 22093 ;;		On exit  : 0/0
 22094 ;;		Unchanged: 0/0
 22095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22100 ;;Total ram usage:        2 bytes
 22101 ;; Hardware stack levels used:    1
 22102 ;; Hardware stack levels required when called:   11
 22103 ;; This function calls:
 22104 ;;		Nothing
 22105 ;; This function is called by:
 22106 ;;		_initMemorizedNumbersCount
 22107 ;; This function uses a non-reentrant model
 22108 ;;
 22109                           
 22110                           	psect	text98
 22111  0064B6                     __ptext98:
 22112                           	opt stack 0
 22113  0064B6                     _initPreamble:
 22114                           	opt stack 15
 22115                           
 22116                           ;app_init.c: 215: memoryPreamble[0] = 'U';
 22117                           
 22118                           ;incstack = 0
 22119  0064B6  0E55               	movlw	85
 22120  0064B8  0103               	movlb	3	; () banked
 22121  0064BA  6F99               	movwf	_memoryPreamble& (0+255),b
 22122                           
 22123                           ;app_init.c: 216: memoryPreamble[1] = 'S';
 22124  0064BC  0E53               	movlw	83
 22125  0064BE  6F9A               	movwf	(_memoryPreamble+1)& (0+255),b
 22126                           
 22127                           ;app_init.c: 217: memoryPreamble[2] = 'I';
 22128  0064C0  0E49               	movlw	73
 22129  0064C2  6F9B               	movwf	(_memoryPreamble+2)& (0+255),b
 22130                           
 22131                           ;app_init.c: 218: memoryPreamble[3] = 'M';
 22132  0064C4  0E4D               	movlw	77
 22133  0064C6  6F9C               	movwf	(_memoryPreamble+3)& (0+255),b
 22134                           
 22135                           ;app_init.c: 219: memoryPreamble[4] = 1;
 22136  0064C8  0E01               	movlw	1
 22137  0064CA  6F9D               	movwf	(_memoryPreamble+4)& (0+255),b
 22138                           
 22139                           ;app_init.c: 220: memorizedNumbersCount[0] = 1;
 22140  0064CC  0E01               	movlw	1
 22141  0064CE  6E38               	movwf	_memorizedNumbersCount,c
 22142                           
 22143                           ; BSR set to: 3
 22144                           ;app_init.c: 221: return memoryPreamble;
 22145  0064D0  0E99               	movlw	low _memoryPreamble
 22146  0064D2  0100               	movlb	0	; () banked
 22147  0064D4  6F7D               	movwf	?_initPreamble& (0+255),b
 22148  0064D6  0E03               	movlw	high _memoryPreamble
 22149  0064D8  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 22150  0064DA  0012               	return	
 22151  0064DC                     __end_of_initPreamble:
 22152                           	opt stack 0
 22153                           tosu	equ	0xFFF
 22154                           tosh	equ	0xFFE
 22155                           tosl	equ	0xFFD
 22156                           pclath	equ	0xFFA
 22157                           tblptru	equ	0xFF8
 22158                           tblptrh	equ	0xFF7
 22159                           tblptrl	equ	0xFF6
 22160                           tablat	equ	0xFF5
 22161                           prodh	equ	0xFF4
 22162                           prodl	equ	0xFF3
 22163                           intcon	equ	0xFF2
 22164                           intcon2	equ	0xFF1
 22165                           intcon3	equ	0xFF0
 22166                           indf0	equ	0xFEF
 22167                           postinc0	equ	0xFEE
 22168                           plusw0	equ	0xFEB
 22169                           fsr0h	equ	0xFEA
 22170                           fsr0l	equ	0xFE9
 22171                           wreg	equ	0xFE8
 22172                           indf1	equ	0xFE7
 22173                           postinc1	equ	0xFE6
 22174                           postdec1	equ	0xFE5
 22175                           fsr1h	equ	0xFE2
 22176                           fsr1l	equ	0xFE1
 22177                           indf2	equ	0xFDF
 22178                           postinc2	equ	0xFDE
 22179                           postdec2	equ	0xFDD
 22180                           plusw2	equ	0xFDB
 22181                           fsr2h	equ	0xFDA
 22182                           fsr2l	equ	0xFD9
 22183                           status	equ	0xFD8
 22184                           
 22185 ;; *************** function _Eeprom_Write *****************
 22186 ;; Defined at:
 22187 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 22188 ;; Parameters:    Size  Location     Type
 22189 ;;  MemoryAddres    1    wreg     unsigned char 
 22190 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 22191 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), smsText(20), MyApp_Task@emptyNumber(13), 
 22192 ;;		 -> callerNumber(13), 
 22193 ;;  DataLength      1   49[BANK0 ] unsigned char 
 22194 ;; Auto vars:     Size  Location     Type
 22195 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 22196 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 22197 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 22198 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 22199 ;; Return value:  Size  Location     Type
 22200 ;;                  1    wreg      unsigned char 
 22201 ;; Registers used:
 22202 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22203 ;; Tracked objects:
 22204 ;;		On entry : 0/0
 22205 ;;		On exit  : 0/0
 22206 ;;		Unchanged: 0/0
 22207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22208 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22209 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22211 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22212 ;;Total ram usage:        7 bytes
 22213 ;; Hardware stack levels used:    1
 22214 ;; Hardware stack levels required when called:   13
 22215 ;; This function calls:
 22216 ;;		_I2cSlv_SendI2cMsg
 22217 ;;		_StringCopy
 22218 ;; This function is called by:
 22219 ;;		_saveNumberInMemory
 22220 ;;		_initMemorizedNumbersCount
 22221 ;;		_incrementMemorizedNumbersCount
 22222 ;;		_decrementMemorizedNumbersCount
 22223 ;; This function uses a non-reentrant model
 22224 ;;
 22225                           
 22226                           	psect	text99
 22227  005A84                     __ptext99:
 22228                           	opt stack 0
 22229  005A84                     _Eeprom_Write:
 22230                           	opt stack 13
 22231                           
 22232                           ; BSR set to: 0
 22233                           ;incstack = 0
 22234                           ;Eeprom_Write@MemoryAddress stored from wreg
 22235  005A84  0100               	movlb	0	; () banked
 22236  005A86  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 22237                           
 22238                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 22239  005A88  0E50               	movlw	80
 22240  005A8A  0100               	movlb	0	; () banked
 22241  005A8C  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 22242                           
 22243                           ; BSR set to: 0
 22244                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 22245  005A8E  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 22246  005A90  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 22247                           
 22248                           ; BSR set to: 0
 22249                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 22250  005A92  0E00               	movlw	0
 22251  005A94  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 22255  005A96  0E10               	movlw	16
 22256  005A98  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 22257  005A9A  0012               	return	
 22258                           
 22259                           ; BSR set to: 0
 22260                           ;eeprom_if.c: 85: {
 22261                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 22262  005A9C  C093  F4B1         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 22266  005AA0  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 22267  005AA4  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 22268  005AA8  0EB2               	movlw	low (_EepromBuffer+1)
 22269  005AAA  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22270  005AAC  0E04               	movlw	high (_EepromBuffer+1)
 22271  005AAE  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22272  005AB0  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 22273  005AB4  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 22274  005AB6  EC03  F02B         	call	_StringCopy	;wreg free
 22275                           
 22276                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 22277  005ABA  0EB1               	movlw	low _EepromBuffer
 22278  005ABC  0100               	movlb	0	; () banked
 22279  005ABE  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 22280  005AC0  0E04               	movlw	high _EepromBuffer
 22281  005AC2  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 22282  005AC4  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 22283  005AC8  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 22284  005ACC  EC61  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 22285  005AD0  0100               	movlb	0	; () banked
 22286  005AD2  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22287                           
 22288                           ; BSR set to: 0
 22289  005AD4  0012               	return	
 22290  005AD6                     __end_of_Eeprom_Write:
 22291                           	opt stack 0
 22292                           tosu	equ	0xFFF
 22293                           tosh	equ	0xFFE
 22294                           tosl	equ	0xFFD
 22295                           pclath	equ	0xFFA
 22296                           tblptru	equ	0xFF8
 22297                           tblptrh	equ	0xFF7
 22298                           tblptrl	equ	0xFF6
 22299                           tablat	equ	0xFF5
 22300                           prodh	equ	0xFF4
 22301                           prodl	equ	0xFF3
 22302                           intcon	equ	0xFF2
 22303                           intcon2	equ	0xFF1
 22304                           intcon3	equ	0xFF0
 22305                           indf0	equ	0xFEF
 22306                           postinc0	equ	0xFEE
 22307                           plusw0	equ	0xFEB
 22308                           fsr0h	equ	0xFEA
 22309                           fsr0l	equ	0xFE9
 22310                           wreg	equ	0xFE8
 22311                           indf1	equ	0xFE7
 22312                           postinc1	equ	0xFE6
 22313                           postdec1	equ	0xFE5
 22314                           fsr1h	equ	0xFE2
 22315                           fsr1l	equ	0xFE1
 22316                           indf2	equ	0xFDF
 22317                           postinc2	equ	0xFDE
 22318                           postdec2	equ	0xFDD
 22319                           plusw2	equ	0xFDB
 22320                           fsr2h	equ	0xFDA
 22321                           fsr2l	equ	0xFD9
 22322                           status	equ	0xFD8
 22323                           
 22324 ;; *************** function _initFsm *****************
 22325 ;; Defined at:
 22326 ;;		line 177 in file "../Source/c/04_App/app_init.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;		None
 22329 ;; Auto vars:     Size  Location     Type
 22330 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 22331 ;; Return value:  Size  Location     Type
 22332 ;;                  1    wreg      unsigned char 
 22333 ;; Registers used:
 22334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22335 ;; Tracked objects:
 22336 ;;		On entry : 0/0
 22337 ;;		On exit  : 0/0
 22338 ;;		Unchanged: 0/0
 22339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22341 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22343 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22344 ;;Total ram usage:        1 bytes
 22345 ;; Hardware stack levels used:    1
 22346 ;; Hardware stack levels required when called:   18
 22347 ;; This function calls:
 22348 ;;		_initEeprom
 22349 ;;		_initGprsModem
 22350 ;; This function is called by:
 22351 ;;		_MyApp_Task
 22352 ;; This function uses a non-reentrant model
 22353 ;;
 22354                           
 22355                           	psect	text100
 22356  005DE2                     __ptext100:
 22357                           	opt stack 0
 22358  005DE2                     _initFsm:
 22359                           	opt stack 9
 22360                           
 22361                           ;app_init.c: 179: static initFsmStates currentState = INIT_FSM_MODEM;
 22362                           ;app_init.c: 180: bool isInitialized = 0;
 22363                           
 22364                           ; BSR set to: 0
 22365                           ;incstack = 0
 22366  005DE2  0E00               	movlw	0
 22367  005DE4  0101               	movlb	1	; () banked
 22368  005DE6  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22369                           
 22370                           ;app_init.c: 182: switch (currentState)
 22371  005DE8  D013               	goto	l2713
 22372  005DEA                     
 22373                           ; BSR set to: 1
 22374                           ;app_init.c: 185: if (initGprsModem())
 22375                           
 22376                           ; BSR set to: 1
 22377  005DEA  ECBA  F026         	call	_initGprsModem	;wreg free
 22378  005DEE  0900               	iorlw	0
 22379  005DF0  B4D8               	btfsc	status,2,c
 22380  005DF2  D018               	goto	l2716
 22381                           
 22382                           ;app_init.c: 186: {
 22383                           ;app_init.c: 187: currentState = INIT_FSM_EEPROM;
 22384  005DF4  0E01               	movlw	1
 22385  005DF6  D006               	goto	L24
 22386  005DF8                     
 22387                           ; BSR set to: 1
 22388                           ;app_init.c: 192: if (initEeprom())
 22389                           
 22390                           ; BSR set to: 1
 22391  005DF8  ECD7  F027         	call	_initEeprom	;wreg free
 22392  005DFC  0900               	iorlw	0
 22393  005DFE  B4D8               	btfsc	status,2,c
 22394  005E00  D011               	goto	l2716
 22395                           
 22396                           ;app_init.c: 193: {
 22397                           ;app_init.c: 194: currentState = INIT_FSM_COMPLETE;
 22398  005E02  0E02               	movlw	2
 22399  005E04                     L24:
 22400  005E04  0101               	movlb	1	; () banked
 22401  005E06  6FD3               	movwf	initFsm@currentState& (0+255),b
 22402                           
 22403                           ; BSR set to: 1
 22404                           ;app_init.c: 195: }
 22405                           ;app_init.c: 196: break;
 22406  005E08  D00D               	goto	l2716
 22407  005E0A                     
 22408                           ; BSR set to: 1
 22409                           ;app_init.c: 199: isInitialized = 1;
 22410                           
 22411                           ; BSR set to: 1
 22412  005E0A  0E01               	movlw	1
 22413  005E0C  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22414                           
 22415                           ; BSR set to: 1
 22416                           ;app_init.c: 204: }
 22417                           
 22418                           ; BSR set to: 1
 22419                           ;app_init.c: 203: break;
 22420                           
 22421                           ;app_init.c: 202: default:
 22422                           
 22423                           ;app_init.c: 200: break;
 22424  005E0E  D00A               	goto	l2716
 22425  005E10                     l2713:
 22426                           
 22427                           ; BSR set to: 1
 22428                           
 22429                           ; BSR set to: 1
 22430  005E10  51D3               	movf	initFsm@currentState& (0+255),w,b
 22431                           
 22432                           ; Switch size 1, requested type "space"
 22433                           ; Number of cases is 3, Range of values is 0 to 2
 22434                           ; switch strategies available:
 22435                           ; Name         Instructions Cycles
 22436                           ; simple_byte           10     6 (average)
 22437                           ;	Chosen strategy is simple_byte
 22438  005E12  0A00               	xorlw	0	; case 0
 22439  005E14  B4D8               	btfsc	status,2,c
 22440  005E16  D7E9               	goto	l2714
 22441  005E18  0A01               	xorlw	1	; case 1
 22442  005E1A  B4D8               	btfsc	status,2,c
 22443  005E1C  D7ED               	goto	l2717
 22444  005E1E  0A03               	xorlw	3	; case 2
 22445  005E20  B4D8               	btfsc	status,2,c
 22446  005E22  D7F3               	goto	l2719
 22447  005E24                     l2716:
 22448                           
 22449                           ;app_init.c: 205: return isInitialized;
 22450                           
 22451                           ; BSR set to: 1
 22452  005E24  0101               	movlb	1	; () banked
 22453  005E26  5103               	movf	initFsm@isInitialized& (0+255),w,b
 22454  005E28  0012               	return	
 22455  005E2A                     __end_of_initFsm:
 22456                           	opt stack 0
 22457                           tosu	equ	0xFFF
 22458                           tosh	equ	0xFFE
 22459                           tosl	equ	0xFFD
 22460                           pclath	equ	0xFFA
 22461                           tblptru	equ	0xFF8
 22462                           tblptrh	equ	0xFF7
 22463                           tblptrl	equ	0xFF6
 22464                           tablat	equ	0xFF5
 22465                           prodh	equ	0xFF4
 22466                           prodl	equ	0xFF3
 22467                           intcon	equ	0xFF2
 22468                           intcon2	equ	0xFF1
 22469                           intcon3	equ	0xFF0
 22470                           indf0	equ	0xFEF
 22471                           postinc0	equ	0xFEE
 22472                           plusw0	equ	0xFEB
 22473                           fsr0h	equ	0xFEA
 22474                           fsr0l	equ	0xFE9
 22475                           wreg	equ	0xFE8
 22476                           indf1	equ	0xFE7
 22477                           postinc1	equ	0xFE6
 22478                           postdec1	equ	0xFE5
 22479                           fsr1h	equ	0xFE2
 22480                           fsr1l	equ	0xFE1
 22481                           indf2	equ	0xFDF
 22482                           postinc2	equ	0xFDE
 22483                           postdec2	equ	0xFDD
 22484                           plusw2	equ	0xFDB
 22485                           fsr2h	equ	0xFDA
 22486                           fsr2l	equ	0xFD9
 22487                           status	equ	0xFD8
 22488                           
 22489 ;; *************** function _initGprsModem *****************
 22490 ;; Defined at:
 22491 ;;		line 84 in file "../Source/c/04_App/app_init.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;		None
 22494 ;; Auto vars:     Size  Location     Type
 22495 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22496 ;; Return value:  Size  Location     Type
 22497 ;;                  1    wreg      unsigned char 
 22498 ;; Registers used:
 22499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22500 ;; Tracked objects:
 22501 ;;		On entry : 0/0
 22502 ;;		On exit  : 0/0
 22503 ;;		Unchanged: 0/0
 22504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22508 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22509 ;;Total ram usage:        1 bytes
 22510 ;; Hardware stack levels used:    1
 22511 ;; Hardware stack levels required when called:   14
 22512 ;; This function calls:
 22513 ;;		_Mdm_SetSmsFormat
 22514 ;;		_Uart_WriteConstString
 22515 ;;		_secondsAppTimer
 22516 ;; This function is called by:
 22517 ;;		_initFsm
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521                           	psect	text101
 22522  004D74                     __ptext101:
 22523                           	opt stack 0
 22524  004D74                     _initGprsModem:
 22525                           	opt stack 12
 22526                           
 22527                           ;app_init.c: 86: static uint16_t modemCounter = 0;
 22528                           ;app_init.c: 87: static modemStates currentState = MODEM_INIT;
 22529                           ;app_init.c: 88: bool isInitialized = 0;
 22530                           
 22531                           ; BSR set to: 1
 22532                           ;incstack = 0
 22533  004D74  0E00               	movlw	0
 22534  004D76  0100               	movlb	0	; () banked
 22535  004D78  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22536                           
 22537                           ;app_init.c: 90: switch(currentState)
 22538  004D7A  D033               	goto	l2683
 22539  004D7C                     
 22540                           ;app_init.c: 93: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22541                           
 22542                           ; BSR set to: 0
 22543  004D7C  0E03               	movlw	3
 22544  004D7E  0100               	movlb	0	; () banked
 22545  004D80  19D0               	xorwf	_MdmStatus& (0+255),w,b
 22546  004D82  B4D8               	btfsc	status,2,c
 22547  004D84  D003               	goto	u14310
 22548                           
 22549                           ; BSR set to: 0
 22550  004D86  05D0               	decf	_MdmStatus& (0+255),w,b
 22551  004D88  A4D8               	btfss	status,2,c
 22552  004D8A  D039               	goto	l2689
 22553  004D8C                     u14310:
 22554                           
 22555                           ; BSR set to: 0
 22556                           ;app_init.c: 94: {
 22557                           ;app_init.c: 95: if (secondsAppTimer(5, &modemCounter, 0))
 22558                           
 22559                           ; BSR set to: 0
 22560  004D8C  0EBA               	movlw	low initGprsModem@modemCounter
 22561  004D8E  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22562  004D90  0E03               	movlw	high initGprsModem@modemCounter
 22563  004D92  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22564  004D94  0E00               	movlw	0
 22565  004D96  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22566  004D98  0E05               	movlw	5
 22567  004D9A  EC05  F024         	call	_secondsAppTimer
 22568  004D9E  0900               	iorlw	0
 22569  004DA0  B4D8               	btfsc	status,2,c
 22570  004DA2  D02D               	goto	l2689
 22571                           
 22572                           ;app_init.c: 96: {
 22573                           ;app_init.c: 97: Mdm_SetSmsFormat(1);
 22574  004DA4  0E01               	movlw	1
 22575  004DA6  ECE4  F02D         	call	_Mdm_SetSmsFormat
 22576                           
 22577                           ;app_init.c: 98: currentState = MODEM_DELETE_SMS;
 22578  004DAA  0E01               	movlw	1
 22579  004DAC  D013               	goto	L26
 22580  004DAE                     
 22581                           ; BSR set to: 1
 22582                           ;app_init.c: 104: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22583                           
 22584                           ; BSR set to: 1
 22585  004DAE  0EFA               	movlw	low STR_31
 22586  004DB0  0100               	movlb	0	; () banked
 22587  004DB2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22588  004DB4  0EFE               	movlw	high STR_31
 22589  004DB6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22590  004DB8  0E01               	movlw	1
 22591  004DBA  ECC0  F02F         	call	_Uart_WriteConstString
 22592                           
 22593                           ;app_init.c: 105: currentState = MODEM_SET_CALLER_ID;
 22594  004DBE  0E02               	movlw	2
 22595  004DC0  D009               	goto	L26
 22596  004DC2                     
 22597                           ; BSR set to: 1
 22598                           ;app_init.c: 109: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22599                           
 22600                           ; BSR set to: 1
 22601  004DC2  0EAA               	movlw	low STR_32
 22602  004DC4  0100               	movlb	0	; () banked
 22603  004DC6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22604  004DC8  0EFF               	movlw	high STR_32
 22605  004DCA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22606  004DCC  0E01               	movlw	1
 22607  004DCE  ECC0  F02F         	call	_Uart_WriteConstString
 22608                           
 22609                           ;app_init.c: 110: currentState = MODEM_INIT_COMPLETE;
 22610  004DD2  0E03               	movlw	3
 22611  004DD4                     L26:
 22612  004DD4  0101               	movlb	1	; () banked
 22613  004DD6  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 22614                           
 22615                           ;app_init.c: 111: break;
 22616  004DD8  D012               	goto	l2689
 22617  004DDA                     
 22618                           ; BSR set to: 1
 22619                           ;app_init.c: 114: isInitialized = 1;
 22620                           
 22621                           ; BSR set to: 1
 22622  004DDA  0E01               	movlw	1
 22623  004DDC  0100               	movlb	0	; () banked
 22624  004DDE  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22625                           
 22626                           ; BSR set to: 0
 22627                           ;app_init.c: 119: }
 22628                           
 22629                           ; BSR set to: 0
 22630                           ;app_init.c: 118: break;
 22631                           
 22632                           ;app_init.c: 117: default:
 22633                           
 22634                           ;app_init.c: 115: break;
 22635  004DE0  D00E               	goto	l2689
 22636  004DE2                     l2683:
 22637                           
 22638                           ; BSR set to: 0
 22639                           
 22640                           ; BSR set to: 0
 22641  004DE2  0101               	movlb	1	; () banked
 22642  004DE4  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 22643                           
 22644                           ; Switch size 1, requested type "space"
 22645                           ; Number of cases is 4, Range of values is 0 to 3
 22646                           ; switch strategies available:
 22647                           ; Name         Instructions Cycles
 22648                           ; simple_byte           13     7 (average)
 22649                           ;	Chosen strategy is simple_byte
 22650  004DE6  0A00               	xorlw	0	; case 0
 22651  004DE8  B4D8               	btfsc	status,2,c
 22652  004DEA  D7C8               	goto	l2684
 22653  004DEC  0A01               	xorlw	1	; case 1
 22654  004DEE  B4D8               	btfsc	status,2,c
 22655  004DF0  D7DE               	goto	l2690
 22656  004DF2  0A03               	xorlw	3	; case 2
 22657  004DF4  B4D8               	btfsc	status,2,c
 22658  004DF6  D7E5               	goto	l2691
 22659  004DF8  0A01               	xorlw	1	; case 3
 22660  004DFA  B4D8               	btfsc	status,2,c
 22661  004DFC  D7EE               	goto	l2692
 22662  004DFE                     l2689:
 22663                           
 22664                           ;app_init.c: 120: return isInitialized;
 22665                           
 22666                           ; BSR set to: 1
 22667  004DFE  0100               	movlb	0	; () banked
 22668  004E00  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22669  004E02  0012               	return	
 22670  004E04                     __end_of_initGprsModem:
 22671                           	opt stack 0
 22672                           tosu	equ	0xFFF
 22673                           tosh	equ	0xFFE
 22674                           tosl	equ	0xFFD
 22675                           pclath	equ	0xFFA
 22676                           tblptru	equ	0xFF8
 22677                           tblptrh	equ	0xFF7
 22678                           tblptrl	equ	0xFF6
 22679                           tablat	equ	0xFF5
 22680                           prodh	equ	0xFF4
 22681                           prodl	equ	0xFF3
 22682                           intcon	equ	0xFF2
 22683                           intcon2	equ	0xFF1
 22684                           intcon3	equ	0xFF0
 22685                           indf0	equ	0xFEF
 22686                           postinc0	equ	0xFEE
 22687                           plusw0	equ	0xFEB
 22688                           fsr0h	equ	0xFEA
 22689                           fsr0l	equ	0xFE9
 22690                           wreg	equ	0xFE8
 22691                           indf1	equ	0xFE7
 22692                           postinc1	equ	0xFE6
 22693                           postdec1	equ	0xFE5
 22694                           fsr1h	equ	0xFE2
 22695                           fsr1l	equ	0xFE1
 22696                           indf2	equ	0xFDF
 22697                           postinc2	equ	0xFDE
 22698                           postdec2	equ	0xFDD
 22699                           plusw2	equ	0xFDB
 22700                           fsr2h	equ	0xFDA
 22701                           fsr2l	equ	0xFD9
 22702                           status	equ	0xFD8
 22703                           
 22704 ;; *************** function _secondsAppTimer *****************
 22705 ;; Defined at:
 22706 ;;		line 66 in file "../Source/c/04_App/app_utils.c"
 22707 ;; Parameters:    Size  Location     Type
 22708 ;;  seconds         1    wreg     unsigned char 
 22709 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 22710 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 22711 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 22712 ;; Auto vars:     Size  Location     Type
 22713 ;;  seconds         1   47[BANK0 ] unsigned char 
 22714 ;;  destinationT    2   49[BANK0 ] unsigned int 
 22715 ;;  isExpired       1   48[BANK0 ] unsigned char 
 22716 ;; Return value:  Size  Location     Type
 22717 ;;                  1    wreg      unsigned char 
 22718 ;; Registers used:
 22719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22720 ;; Tracked objects:
 22721 ;;		On entry : 0/0
 22722 ;;		On exit  : 0/0
 22723 ;;		Unchanged: 0/0
 22724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22725 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22726 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22727 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22728 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22729 ;;Total ram usage:        9 bytes
 22730 ;; Hardware stack levels used:    1
 22731 ;; Hardware stack levels required when called:   12
 22732 ;; This function calls:
 22733 ;;		___lwdiv
 22734 ;;		___wmul
 22735 ;; This function is called by:
 22736 ;;		_initGprsModem
 22737 ;;		_waitSetupCall
 22738 ;;		_blinkForSeconds
 22739 ;; This function uses a non-reentrant model
 22740 ;;
 22741                           
 22742                           	psect	text102
 22743  00480A                     __ptext102:
 22744                           	opt stack 0
 22745  00480A                     _secondsAppTimer:
 22746                           	opt stack 14
 22747                           
 22748                           ; BSR set to: 0
 22749                           ;incstack = 0
 22750                           ;secondsAppTimer@seconds stored from wreg
 22751  00480A  0100               	movlb	0	; () banked
 22752  00480C  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 22753                           
 22754                           ;app_utils.c: 68: bool isExpired = 1;
 22755  00480E  0E01               	movlw	1
 22756  004810  0100               	movlb	0	; () banked
 22757  004812  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22758                           
 22759                           ; BSR set to: 0
 22760                           ;app_utils.c: 69: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 22761  004814  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 22762  004818  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 22763  00481A  0E03               	movlw	3
 22764  00481C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22765  00481E  0EE8               	movlw	232
 22766  004820  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 22767  004822  EC47  F032         	call	___wmul	;wreg free
 22768  004826  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 22769  00482A  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 22770  00482E  0E00               	movlw	0
 22771  004830  0100               	movlb	0	; () banked
 22772  004832  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22773  004834  0E64               	movlw	100
 22774  004836  6F85               	movwf	___lwdiv@divisor& (0+255),b
 22775  004838  EC18  F02D         	call	___lwdiv	;wreg free
 22776  00483C  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 22777  004840  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 22778                           
 22779                           ;app_utils.c: 71: if (*counter < destinationTicks)
 22780  004844  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22781  004848  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22782  00484C  0100               	movlb	0	; () banked
 22783  00484E  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22784  004850  5CDE               	subwf	postinc2,w,c
 22785  004852  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22786  004854  58DE               	subwfb	postinc2,w,c
 22787  004856  B0D8               	btfsc	status,0,c
 22788  004858  D009               	goto	l2735
 22789                           
 22790                           ; BSR set to: 0
 22791                           ;app_utils.c: 72: {
 22792                           ;app_utils.c: 73: *counter += 1;
 22793  00485A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22794  00485E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22795  004862  2ADE               	incf	postinc2,f,c
 22796  004864  0E00               	movlw	0
 22797  004866  22DD               	addwfc	postdec2,f,c
 22798                           
 22799                           ; BSR set to: 0
 22800                           ;app_utils.c: 74: isExpired = 0;
 22801  004868  0E00               	movlw	0
 22802  00486A  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22803  00486C                     l2735:
 22804                           
 22805                           ; BSR set to: 0
 22806                           ;app_utils.c: 75: }
 22807                           ;app_utils.c: 76: if (*counter == destinationTicks)
 22808                           
 22809                           ; BSR set to: 0
 22810  00486C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22811  004870  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22812  004874  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22813  004876  18DE               	xorwf	postinc2,w,c
 22814  004878  E117               	bnz	l13905
 22815  00487A  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22816  00487C  18DE               	xorwf	postinc2,w,c
 22817  00487E  A4D8               	btfss	status,2,c
 22818  004880  D013               	goto	l2738
 22819                           
 22820                           ; BSR set to: 0
 22821                           ;app_utils.c: 77: {
 22822                           ;app_utils.c: 78: if (isCyclic)
 22823  004882  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 22824  004884  B4D8               	btfsc	status,2,c
 22825  004886  D008               	goto	l2737
 22826                           
 22827                           ; BSR set to: 0
 22828                           ;app_utils.c: 79: {
 22829                           ;app_utils.c: 80: *counter = 0;
 22830  004888  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22831  00488C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22832  004890  0E00               	movlw	0
 22833  004892  6EDE               	movwf	postinc2,c
 22834  004894  0E00               	movlw	0
 22835  004896  D007               	goto	L27
 22836  004898                     l2737:
 22837                           
 22838                           ; BSR set to: 0
 22839                           ;app_utils.c: 82: else
 22840                           ;app_utils.c: 83: {
 22841                           ;app_utils.c: 84: *counter = 0xFFFF;
 22842                           
 22843                           ; BSR set to: 0
 22844  004898  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22845  00489C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22846  0048A0  0EFF               	movlw	255
 22847  0048A2  6EDE               	movwf	postinc2,c
 22848  0048A4  0EFF               	movlw	255
 22849  0048A6                     L27:
 22850  0048A6  6EDD               	movwf	postdec2,c
 22851  0048A8                     l2738:
 22852  0048A8                     l13905:
 22853                           
 22854                           ; BSR set to: 0
 22855                           ;app_utils.c: 85: }
 22856                           ;app_utils.c: 86: }
 22857                           ;app_utils.c: 87: return isExpired;
 22858  0048A8  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 22859  0048AA  0012               	return	
 22860  0048AC                     __end_of_secondsAppTimer:
 22861                           	opt stack 0
 22862                           tosu	equ	0xFFF
 22863                           tosh	equ	0xFFE
 22864                           tosl	equ	0xFFD
 22865                           pclath	equ	0xFFA
 22866                           tblptru	equ	0xFF8
 22867                           tblptrh	equ	0xFF7
 22868                           tblptrl	equ	0xFF6
 22869                           tablat	equ	0xFF5
 22870                           prodh	equ	0xFF4
 22871                           prodl	equ	0xFF3
 22872                           intcon	equ	0xFF2
 22873                           intcon2	equ	0xFF1
 22874                           intcon3	equ	0xFF0
 22875                           indf0	equ	0xFEF
 22876                           postinc0	equ	0xFEE
 22877                           plusw0	equ	0xFEB
 22878                           fsr0h	equ	0xFEA
 22879                           fsr0l	equ	0xFE9
 22880                           wreg	equ	0xFE8
 22881                           indf1	equ	0xFE7
 22882                           postinc1	equ	0xFE6
 22883                           postdec1	equ	0xFE5
 22884                           fsr1h	equ	0xFE2
 22885                           fsr1l	equ	0xFE1
 22886                           indf2	equ	0xFDF
 22887                           postinc2	equ	0xFDE
 22888                           postdec2	equ	0xFDD
 22889                           plusw2	equ	0xFDB
 22890                           fsr2h	equ	0xFDA
 22891                           fsr2l	equ	0xFD9
 22892                           status	equ	0xFD8
 22893                           
 22894 ;; *************** function _Mdm_SetSmsFormat *****************
 22895 ;; Defined at:
 22896 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22897 ;; Parameters:    Size  Location     Type
 22898 ;;  TextFormat      1    wreg     unsigned char 
 22899 ;; Auto vars:     Size  Location     Type
 22900 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22901 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22902 ;;  Index           1   35[BANK0 ] unsigned char 
 22903 ;; Return value:  Size  Location     Type
 22904 ;;                  1    wreg      void 
 22905 ;; Registers used:
 22906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22907 ;; Tracked objects:
 22908 ;;		On entry : 0/0
 22909 ;;		On exit  : 0/0
 22910 ;;		Unchanged: 0/0
 22911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22913 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22915 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22916 ;;Total ram usage:       22 bytes
 22917 ;; Hardware stack levels used:    1
 22918 ;; Hardware stack levels required when called:   13
 22919 ;; This function calls:
 22920 ;;		_Uart_WriteString
 22921 ;; This function is called by:
 22922 ;;		_initGprsModem
 22923 ;; This function uses a non-reentrant model
 22924 ;;
 22925                           
 22926                           	psect	text103
 22927  005BC8                     __ptext103:
 22928                           	opt stack 0
 22929  005BC8                     _Mdm_SetSmsFormat:
 22930                           	opt stack 12
 22931                           
 22932                           ; BSR set to: 0
 22933                           ;incstack = 0
 22934                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22935  005BC8  0100               	movlb	0	; () banked
 22936  005BCA  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22937                           
 22938                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22939                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22940  005BCC  0E00               	movlw	0
 22941  005BCE  0100               	movlb	0	; () banked
 22942  005BD0  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22943                           
 22944                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22945  005BD2  0E41               	movlw	65
 22946  005BD4  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22947                           
 22948                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22949  005BD6  0E54               	movlw	84
 22950  005BD8  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22951                           
 22952                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22953  005BDA  0E2B               	movlw	43
 22954  005BDC  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22955                           
 22956                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22957  005BDE  0E43               	movlw	67
 22958  005BE0  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22959                           
 22960                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22961  005BE2  0E4D               	movlw	77
 22962  005BE4  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22963                           
 22964                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22965  005BE6  0E47               	movlw	71
 22966  005BE8  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22967                           
 22968                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22969  005BEA  0E46               	movlw	70
 22970  005BEC  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22971                           
 22972                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22973  005BEE  0E3D               	movlw	61
 22974  005BF0  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22975                           
 22976                           ; BSR set to: 0
 22977                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22978  005BF2  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22979  005BF4  A4D8               	btfss	status,2,c
 22980  005BF6  D002               	goto	l1121
 22981                           
 22982                           ; BSR set to: 0
 22983                           ;mdm_gsm_gprs.c: 854: {
 22984                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22985  005BF8  0E31               	movlw	49
 22986  005BFA  D001               	goto	L28
 22987  005BFC                     l1121:
 22988                           
 22989                           ; BSR set to: 0
 22990                           ;mdm_gsm_gprs.c: 857: else
 22991                           ;mdm_gsm_gprs.c: 858: {
 22992                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22993                           
 22994                           ; BSR set to: 0
 22995  005BFC  0E30               	movlw	48
 22996  005BFE                     L28:
 22997  005BFE  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22998                           
 22999                           ; BSR set to: 0
 23000                           ;mdm_gsm_gprs.c: 860: }
 23001                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 23002  005C00  0E0D               	movlw	13
 23003  005C02  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 23004                           
 23005                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 23006  005C04  0E00               	movlw	0
 23007  005C06  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 23008                           
 23009                           ; BSR set to: 0
 23010                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 23011  005C08  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 23012  005C0A  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 23013  005C0C  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 23014  005C0E  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 23015  005C10  0E01               	movlw	1
 23016  005C12  EC80  F030         	call	_Uart_WriteString
 23017  005C16  0012               	return		;funcret
 23018  005C18                     __end_of_Mdm_SetSmsFormat:
 23019                           	opt stack 0
 23020                           tosu	equ	0xFFF
 23021                           tosh	equ	0xFFE
 23022                           tosl	equ	0xFFD
 23023                           pclath	equ	0xFFA
 23024                           tblptru	equ	0xFF8
 23025                           tblptrh	equ	0xFF7
 23026                           tblptrl	equ	0xFF6
 23027                           tablat	equ	0xFF5
 23028                           prodh	equ	0xFF4
 23029                           prodl	equ	0xFF3
 23030                           intcon	equ	0xFF2
 23031                           intcon2	equ	0xFF1
 23032                           intcon3	equ	0xFF0
 23033                           indf0	equ	0xFEF
 23034                           postinc0	equ	0xFEE
 23035                           plusw0	equ	0xFEB
 23036                           fsr0h	equ	0xFEA
 23037                           fsr0l	equ	0xFE9
 23038                           wreg	equ	0xFE8
 23039                           indf1	equ	0xFE7
 23040                           postinc1	equ	0xFE6
 23041                           postdec1	equ	0xFE5
 23042                           fsr1h	equ	0xFE2
 23043                           fsr1l	equ	0xFE1
 23044                           indf2	equ	0xFDF
 23045                           postinc2	equ	0xFDE
 23046                           postdec2	equ	0xFDD
 23047                           plusw2	equ	0xFDB
 23048                           fsr2h	equ	0xFDA
 23049                           fsr2l	equ	0xFD9
 23050                           status	equ	0xFD8
 23051                           
 23052 ;; *************** function _initEeprom *****************
 23053 ;; Defined at:
 23054 ;;		line 127 in file "../Source/c/04_App/app_init.c"
 23055 ;; Parameters:    Size  Location     Type
 23056 ;;		None
 23057 ;; Auto vars:     Size  Location     Type
 23058 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 23059 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 23060 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 23061 ;; Return value:  Size  Location     Type
 23062 ;;                  1    wreg      unsigned char 
 23063 ;; Registers used:
 23064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23065 ;; Tracked objects:
 23066 ;;		On entry : 0/0
 23067 ;;		On exit  : 0/0
 23068 ;;		Unchanged: 0/0
 23069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23071 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23073 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23074 ;;Total ram usage:        3 bytes
 23075 ;; Hardware stack levels used:    1
 23076 ;; Hardware stack levels required when called:   17
 23077 ;; This function calls:
 23078 ;;		_Eeprom_Read
 23079 ;; This function is called by:
 23080 ;;		_initFsm
 23081 ;; This function uses a non-reentrant model
 23082 ;;
 23083                           
 23084                           	psect	text104
 23085  004FAE                     __ptext104:
 23086                           	opt stack 0
 23087  004FAE                     _initEeprom:
 23088                           	opt stack 9
 23089                           
 23090                           ;app_init.c: 129: const uint8_t addressToRead = 0;
 23091                           
 23092                           ;incstack = 0
 23093  004FAE  0E00               	movlw	0
 23094  004FB0  0101               	movlb	1	; () banked
 23095  004FB2  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 23096                           
 23097                           ;app_init.c: 130: static eepromStates currentState = EEPROM_INIT;
 23098                           ;app_init.c: 131: EepromStsType memoryOpResult = OP_PENDING;
 23099  004FB4  0E02               	movlw	2
 23100  004FB6  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 23101                           
 23102                           ;app_init.c: 132: bool isInitialized = 0;
 23103  004FB8  0E00               	movlw	0
 23104  004FBA  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23105                           
 23106                           ;app_init.c: 134: switch (currentState)
 23107  004FBC  D031               	goto	l2699
 23108  004FBE                     
 23109                           ; BSR set to: 1
 23110                           ;app_init.c: 137: memoryOpResult = Eeprom_Read(0, memoryPreamble, 5);
 23111                           
 23112                           ; BSR set to: 1
 23113  004FBE  0E99               	movlw	low _memoryPreamble
 23114  004FC0  0100               	movlb	0	; () banked
 23115  004FC2  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 23116  004FC4  0E03               	movlw	high _memoryPreamble
 23117  004FC6  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 23118  004FC8  0E05               	movlw	5
 23119  004FCA  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 23120  004FCC  0E00               	movlw	0
 23121  004FCE  ECC4  F02C         	call	_Eeprom_Read
 23122  004FD2  0101               	movlb	1	; () banked
 23123  004FD4  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 23124                           
 23125                           ; BSR set to: 1
 23126                           ;app_init.c: 138: if (memoryOpResult != OP_PENDING)
 23127  004FD6  0E02               	movlw	2
 23128  004FD8  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 23129  004FDA  B4D8               	btfsc	status,2,c
 23130  004FDC  D02B               	goto	l2704
 23131                           
 23132                           ; BSR set to: 1
 23133                           ;app_init.c: 139: {
 23134                           ;app_init.c: 140: if (memoryPreamble[0] == 'U' &&
 23135                           ;app_init.c: 141: memoryPreamble[1] == 'S' &&
 23136                           ;app_init.c: 142: memoryPreamble[2] == 'I' &&
 23137                           ;app_init.c: 143: memoryPreamble[3] == 'M')
 23138  004FDE  0E55               	movlw	85
 23139  004FE0  0103               	movlb	3	; () banked
 23140  004FE2  1999               	xorwf	_memoryPreamble& (0+255),w,b
 23141  004FE4  A4D8               	btfss	status,2,c
 23142  004FE6  D00E               	goto	l2702
 23143                           
 23144                           ; BSR set to: 3
 23145  004FE8  0E53               	movlw	83
 23146  004FEA  199A               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 23147  004FEC  A4D8               	btfss	status,2,c
 23148  004FEE  D00A               	goto	l2702
 23149                           
 23150                           ; BSR set to: 3
 23151  004FF0  0E49               	movlw	73
 23152  004FF2  199B               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 23153  004FF4  A4D8               	btfss	status,2,c
 23154  004FF6  D006               	goto	l2702
 23155                           
 23156                           ; BSR set to: 3
 23157  004FF8  0E4D               	movlw	77
 23158  004FFA  199C               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 23159  004FFC  A4D8               	btfss	status,2,c
 23160  004FFE  D002               	goto	l2702
 23161                           
 23162                           ; BSR set to: 3
 23163                           ;app_init.c: 144: {
 23164                           ;app_init.c: 145: currentState = EEPROM_NOT_EMPTY;
 23165  005000  0E02               	movlw	2
 23166  005002  D003               	goto	L29
 23167  005004                     l2702:
 23168                           
 23169                           ; BSR set to: 3
 23170                           ;app_init.c: 147: else
 23171                           ;app_init.c: 148: {
 23172                           ;app_init.c: 149: memorizedNumbersCount[0] = memoryPreamble[4];
 23173  005004  C39D  F038         	movff	_memoryPreamble+4,_memorizedNumbersCount
 23174                           
 23175                           ; BSR set to: 3
 23176                           ;app_init.c: 150: currentState = EEPROM_EMPTY;
 23177  005008  0E01               	movlw	1
 23178  00500A                     L29:
 23179  00500A  0101               	movlb	1	; () banked
 23180  00500C  6FD4               	movwf	initEeprom@currentState& (0+255),b
 23181                           
 23182                           ; BSR set to: 1
 23183                           ;app_init.c: 151: }
 23184                           ;app_init.c: 152: }
 23185                           ;app_init.c: 153: break;
 23186                           
 23187                           ; BSR set to: 1
 23188  00500E  D012               	goto	l2704
 23189  005010                     
 23190                           ; BSR set to: 1
 23191                           ;app_init.c: 156: isInitialized = 1;
 23192                           
 23193                           ; BSR set to: 1
 23194  005010  0E01               	movlw	1
 23195  005012  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23196                           
 23197                           ;app_init.c: 157: break;
 23198  005014  D00F               	goto	l2704
 23199  005016                     
 23200                           ; BSR set to: 1
 23201                           ;app_init.c: 160: isInitialized = 1;
 23202                           
 23203                           ; BSR set to: 1
 23204  005016  0E01               	movlw	1
 23205  005018  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23206                           
 23207                           ;app_init.c: 161: isMemoryEmpty = 0;
 23208  00501A  0E00               	movlw	0
 23209  00501C  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 23210                           
 23211                           ; BSR set to: 1
 23212                           ;app_init.c: 166: }
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;app_init.c: 165: break;
 23216                           
 23217                           ;app_init.c: 164: default:
 23218                           
 23219                           ;app_init.c: 162: break;
 23220  00501E  D00A               	goto	l2704
 23221  005020                     l2699:
 23222                           
 23223                           ; BSR set to: 1
 23224                           
 23225                           ; BSR set to: 1
 23226  005020  51D4               	movf	initEeprom@currentState& (0+255),w,b
 23227                           
 23228                           ; Switch size 1, requested type "space"
 23229                           ; Number of cases is 3, Range of values is 0 to 2
 23230                           ; switch strategies available:
 23231                           ; Name         Instructions Cycles
 23232                           ; simple_byte           10     6 (average)
 23233                           ;	Chosen strategy is simple_byte
 23234  005022  0A00               	xorlw	0	; case 0
 23235  005024  B4D8               	btfsc	status,2,c
 23236  005026  D7CB               	goto	l2700
 23237  005028  0A01               	xorlw	1	; case 1
 23238  00502A  B4D8               	btfsc	status,2,c
 23239  00502C  D7F1               	goto	l2705
 23240  00502E  0A03               	xorlw	3	; case 2
 23241  005030  B4D8               	btfsc	status,2,c
 23242  005032  D7F1               	goto	l2706
 23243  005034                     l2704:
 23244                           
 23245                           ; BSR set to: 1
 23246                           ;app_init.c: 167: return isInitialized;
 23247                           
 23248                           ; BSR set to: 1
 23249  005034  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 23250  005036  0012               	return	
 23251  005038                     __end_of_initEeprom:
 23252                           	opt stack 0
 23253                           tosu	equ	0xFFF
 23254                           tosh	equ	0xFFE
 23255                           tosl	equ	0xFFD
 23256                           pclath	equ	0xFFA
 23257                           tblptru	equ	0xFF8
 23258                           tblptrh	equ	0xFF7
 23259                           tblptrl	equ	0xFF6
 23260                           tablat	equ	0xFF5
 23261                           prodh	equ	0xFF4
 23262                           prodl	equ	0xFF3
 23263                           intcon	equ	0xFF2
 23264                           intcon2	equ	0xFF1
 23265                           intcon3	equ	0xFF0
 23266                           indf0	equ	0xFEF
 23267                           postinc0	equ	0xFEE
 23268                           plusw0	equ	0xFEB
 23269                           fsr0h	equ	0xFEA
 23270                           fsr0l	equ	0xFE9
 23271                           wreg	equ	0xFE8
 23272                           indf1	equ	0xFE7
 23273                           postinc1	equ	0xFE6
 23274                           postdec1	equ	0xFE5
 23275                           fsr1h	equ	0xFE2
 23276                           fsr1l	equ	0xFE1
 23277                           indf2	equ	0xFDF
 23278                           postinc2	equ	0xFDE
 23279                           postdec2	equ	0xFDD
 23280                           plusw2	equ	0xFDB
 23281                           fsr2h	equ	0xFDA
 23282                           fsr2l	equ	0xFD9
 23283                           status	equ	0xFD8
 23284                           
 23285 ;; *************** function _findEmptySpot *****************
 23286 ;; Defined at:
 23287 ;;		line 211 in file "../Source/c/04_App/app_gate.c"
 23288 ;; Parameters:    Size  Location     Type
 23289 ;;		None
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;  readBuffer     13    0[BANK1 ] unsigned char [13]
 23292 ;;  positionInMe    1   16[BANK1 ] unsigned char 
 23293 ;;  memoryOpResu    1   15[BANK1 ] enum E8246
 23294 ;;  searchFailed    1   14[BANK1 ] const unsigned char 
 23295 ;;  searchInProg    1   13[BANK1 ] const unsigned char 
 23296 ;; Return value:  Size  Location     Type
 23297 ;;                  1    wreg      unsigned char 
 23298 ;; Registers used:
 23299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23300 ;; Tracked objects:
 23301 ;;		On entry : 0/0
 23302 ;;		On exit  : 0/0
 23303 ;;		Unchanged: 0/0
 23304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23306 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23308 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23309 ;;Total ram usage:       17 bytes
 23310 ;; Hardware stack levels used:    1
 23311 ;; Hardware stack levels required when called:   17
 23312 ;; This function calls:
 23313 ;;		_Eeprom_Read
 23314 ;;		_isNumberValid
 23315 ;; This function is called by:
 23316 ;;		_MyApp_Task
 23317 ;; This function uses a non-reentrant model
 23318 ;;
 23319                           
 23320                           	psect	text105
 23321  0051C4                     __ptext105:
 23322                           	opt stack 0
 23323  0051C4                     _findEmptySpot:
 23324                           	opt stack 10
 23325                           
 23326                           ;app_gate.c: 213: const uint8_t searchInProgress = 0;
 23327                           
 23328                           ; BSR set to: 1
 23329                           ;incstack = 0
 23330  0051C4  0E00               	movlw	0
 23331  0051C6  0101               	movlb	1	; () banked
 23332  0051C8  6F0D               	movwf	findEmptySpot@searchInProgress& (0+255),b
 23333                           
 23334                           ;app_gate.c: 214: const uint8_t searchFailed = 1;
 23335  0051CA  0E01               	movlw	1
 23336  0051CC  6F0E               	movwf	findEmptySpot@searchFailed& (0+255),b
 23337                           
 23338                           ; BSR set to: 1
 23339                           ;app_gate.c: 215: static uint8_t currentPosition = 16;
 23340                           ;app_gate.c: 216: uint8_t positionInMemory = searchInProgress;
 23341  0051CE  C10D  F110         	movff	findEmptySpot@searchInProgress,findEmptySpot@positionInMemory
 23342                           
 23343                           ;app_gate.c: 217: uint8_t readBuffer[((UINT8)(13))];
 23344                           ;app_gate.c: 218: EepromStsType memoryOpResult = OP_PENDING;
 23345  0051D2  0E02               	movlw	2
 23346  0051D4  6F0F               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 23347                           
 23348                           ; BSR set to: 1
 23349                           ;app_gate.c: 220: if (currentPosition >= 16 * 10)
 23350  0051D6  0E9F               	movlw	159
 23351  0051D8  0100               	movlb	0	; () banked
 23352  0051DA  65E1               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 23353  0051DC  D002               	goto	l2820
 23354                           
 23355                           ; BSR set to: 0
 23356                           ;app_gate.c: 221: {
 23357                           ;app_gate.c: 222: currentPosition = 16;
 23358  0051DE  0E10               	movlw	16
 23359  0051E0  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 23360  0051E2                     l2820:
 23361                           
 23362                           ; BSR set to: 0
 23363                           ;app_gate.c: 223: }
 23364                           ;app_gate.c: 224: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 23365                           
 23366                           ; BSR set to: 0
 23367  0051E2  0E00               	movlw	low findEmptySpot@readBuffer
 23368  0051E4  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 23369  0051E6  0E01               	movlw	high findEmptySpot@readBuffer
 23370  0051E8  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 23371  0051EA  0E0D               	movlw	13
 23372  0051EC  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 23373  0051EE  51E1               	movf	findEmptySpot@currentPosition& (0+255),w,b
 23374  0051F0  ECC4  F02C         	call	_Eeprom_Read
 23375  0051F4  0101               	movlb	1	; () banked
 23376  0051F6  6F0F               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 23377                           
 23378                           ; BSR set to: 1
 23379                           ;app_gate.c: 225: if (memoryOpResult != OP_PENDING)
 23380  0051F8  0E02               	movlw	2
 23381  0051FA  190F               	xorwf	findEmptySpot@memoryOpResult& (0+255),w,b
 23382  0051FC  B4D8               	btfsc	status,2,c
 23383  0051FE  D013               	goto	l2823
 23384                           
 23385                           ; BSR set to: 1
 23386                           ;app_gate.c: 226: {
 23387                           ;app_gate.c: 227: if (isNumberValid(readBuffer))
 23388  005200  0E00               	movlw	low findEmptySpot@readBuffer
 23389  005202  0100               	movlb	0	; () banked
 23390  005204  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23391  005206  0E01               	movlw	high findEmptySpot@readBuffer
 23392  005208  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23393  00520A  ECD0  F02A         	call	_isNumberValid	;wreg free
 23394  00520E  0900               	iorlw	0
 23395  005210  B4D8               	btfsc	status,2,c
 23396  005212  D004               	goto	l2822
 23397                           
 23398                           ;app_gate.c: 228: {
 23399                           ;app_gate.c: 229: currentPosition += 16;
 23400  005214  0E10               	movlw	16
 23401  005216  0100               	movlb	0	; () banked
 23402  005218  27E1               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 23403                           
 23404                           ;app_gate.c: 230: }
 23405  00521A  D005               	goto	l2823
 23406  00521C                     l2822:
 23407                           
 23408                           ;app_gate.c: 231: else
 23409                           ;app_gate.c: 232: {
 23410                           ;app_gate.c: 233: positionInMemory = currentPosition;
 23411  00521C  C0E1  F110         	movff	findEmptySpot@currentPosition,findEmptySpot@positionInMemory
 23412                           
 23413                           ;app_gate.c: 234: currentPosition = 16 * 10;
 23414  005220  0EA0               	movlw	160
 23415  005222  0100               	movlb	0	; () banked
 23416  005224  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 23417  005226                     l2823:
 23418                           
 23419                           ;app_gate.c: 235: }
 23420                           ;app_gate.c: 236: }
 23421                           ;app_gate.c: 237: if (positionInMemory == 0 && currentPosition >= 16 * 10)
 23422                           
 23423                           ; BSR set to: 0
 23424  005226  0101               	movlb	1	; () banked
 23425  005228  5110               	movf	findEmptySpot@positionInMemory& (0+255),w,b
 23426  00522A  A4D8               	btfss	status,2,c
 23427  00522C  D006               	goto	l2824
 23428                           
 23429                           ; BSR set to: 1
 23430  00522E  0E9F               	movlw	159
 23431  005230  0100               	movlb	0	; () banked
 23432  005232  65E1               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 23433  005234  D002               	goto	l2824
 23434                           
 23435                           ; BSR set to: 0
 23436                           ;app_gate.c: 238: {
 23437                           ;app_gate.c: 239: positionInMemory = searchFailed;
 23438  005236  C10E  F110         	movff	findEmptySpot@searchFailed,findEmptySpot@positionInMemory
 23439  00523A                     l2824:
 23440                           
 23441                           ;app_gate.c: 240: }
 23442                           ;app_gate.c: 241: return positionInMemory;
 23443                           
 23444                           ; BSR set to: 0
 23445  00523A  0101               	movlb	1	; () banked
 23446  00523C  5110               	movf	findEmptySpot@positionInMemory& (0+255),w,b
 23447  00523E  0012               	return	
 23448  005240                     __end_of_findEmptySpot:
 23449                           	opt stack 0
 23450                           tosu	equ	0xFFF
 23451                           tosh	equ	0xFFE
 23452                           tosl	equ	0xFFD
 23453                           pclath	equ	0xFFA
 23454                           tblptru	equ	0xFF8
 23455                           tblptrh	equ	0xFF7
 23456                           tblptrl	equ	0xFF6
 23457                           tablat	equ	0xFF5
 23458                           prodh	equ	0xFF4
 23459                           prodl	equ	0xFF3
 23460                           intcon	equ	0xFF2
 23461                           intcon2	equ	0xFF1
 23462                           intcon3	equ	0xFF0
 23463                           indf0	equ	0xFEF
 23464                           postinc0	equ	0xFEE
 23465                           plusw0	equ	0xFEB
 23466                           fsr0h	equ	0xFEA
 23467                           fsr0l	equ	0xFE9
 23468                           wreg	equ	0xFE8
 23469                           indf1	equ	0xFE7
 23470                           postinc1	equ	0xFE6
 23471                           postdec1	equ	0xFE5
 23472                           fsr1h	equ	0xFE2
 23473                           fsr1l	equ	0xFE1
 23474                           indf2	equ	0xFDF
 23475                           postinc2	equ	0xFDE
 23476                           postdec2	equ	0xFDD
 23477                           plusw2	equ	0xFDB
 23478                           fsr2h	equ	0xFDA
 23479                           fsr2l	equ	0xFD9
 23480                           status	equ	0xFD8
 23481                           
 23482 ;; *************** function _isNumberValid *****************
 23483 ;; Defined at:
 23484 ;;		line 152 in file "../Source/c/04_App/app_gate.c"
 23485 ;; Parameters:    Size  Location     Type
 23486 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 23487 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), smsText(20), 
 23488 ;; Auto vars:     Size  Location     Type
 23489 ;;  i               1   33[BANK0 ] unsigned char 
 23490 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 23491 ;; Return value:  Size  Location     Type
 23492 ;;                  1    wreg      unsigned char 
 23493 ;; Registers used:
 23494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23495 ;; Tracked objects:
 23496 ;;		On entry : 0/0
 23497 ;;		On exit  : 0/0
 23498 ;;		Unchanged: 0/0
 23499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23502 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23503 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23504 ;;Total ram usage:        5 bytes
 23505 ;; Hardware stack levels used:    1
 23506 ;; Hardware stack levels required when called:   11
 23507 ;; This function calls:
 23508 ;;		Nothing
 23509 ;; This function is called by:
 23510 ;;		_parseCommand
 23511 ;;		_isNumberInMemory
 23512 ;;		_findEmptySpot
 23513 ;; This function uses a non-reentrant model
 23514 ;;
 23515                           
 23516                           	psect	text106
 23517  0055A0                     __ptext106:
 23518                           	opt stack 0
 23519  0055A0                     _isNumberValid:
 23520                           	opt stack 15
 23521                           
 23522                           ;app_gate.c: 154: bool isNumberOk = 0;
 23523                           
 23524                           ; BSR set to: 1
 23525                           ;incstack = 0
 23526  0055A0  0E00               	movlw	0
 23527  0055A2  0100               	movlb	0	; () banked
 23528  0055A4  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23529                           
 23530                           ;app_gate.c: 155: uint8_t i = 0;
 23531  0055A6  0E00               	movlw	0
 23532  0055A8  6F81               	movwf	isNumberValid@i& (0+255),b
 23533                           
 23534                           ; BSR set to: 0
 23535                           ;app_gate.c: 156: if (phoneNumber[0] == '+')
 23536  0055AA  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 23537  0055AE  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 23538  0055B2  0E2B               	movlw	43
 23539  0055B4  18DE               	xorwf	postinc2,w,c
 23540  0055B6  A4D8               	btfss	status,2,c
 23541  0055B8  D024               	goto	u14290
 23542                           
 23543                           ; BSR set to: 0
 23544                           ;app_gate.c: 157: {
 23545                           ;app_gate.c: 158: for (i = 1; i < ((UINT8)(13)); i++)
 23546  0055BA  0E01               	movlw	1
 23547  0055BC  6F81               	movwf	isNumberValid@i& (0+255),b
 23548  0055BE                     l14757:
 23549                           
 23550                           ; BSR set to: 0
 23551  0055BE  0E0C               	movlw	12
 23552  0055C0  6581               	cpfsgt	isNumberValid@i& (0+255),b
 23553  0055C2  D001               	goto	l2800
 23554  0055C4  D01E               	goto	u14290
 23555  0055C6                     l2800:
 23556                           
 23557                           ; BSR set to: 0
 23558                           ;app_gate.c: 159: {
 23559                           ;app_gate.c: 160: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 23560                           
 23561                           ; BSR set to: 0
 23562  0055C6  5181               	movf	isNumberValid@i& (0+255),w,b
 23563  0055C8  0D01               	mullw	1
 23564  0055CA  50F3               	movf	prodl,w,c
 23565  0055CC  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 23566  0055CE  6ED9               	movwf	fsr2l,c
 23567  0055D0  50F4               	movf	prodh,w,c
 23568  0055D2  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 23569  0055D4  6EDA               	movwf	fsr2h,c
 23570  0055D6  0E2F               	movlw	47
 23571  0055D8  64DF               	cpfsgt	indf2,c
 23572  0055DA  D00E               	goto	l2802
 23573                           
 23574                           ; BSR set to: 0
 23575  0055DC  5181               	movf	isNumberValid@i& (0+255),w,b
 23576  0055DE  0D01               	mullw	1
 23577  0055E0  50F3               	movf	prodl,w,c
 23578  0055E2  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 23579  0055E4  6ED9               	movwf	fsr2l,c
 23580  0055E6  50F4               	movf	prodh,w,c
 23581  0055E8  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 23582  0055EA  6EDA               	movwf	fsr2h,c
 23583  0055EC  0E3A               	movlw	58
 23584  0055EE  60DF               	cpfslt	indf2,c
 23585  0055F0  D003               	goto	l2802
 23586                           
 23587                           ; BSR set to: 0
 23588                           ;app_gate.c: 161: {
 23589                           ;app_gate.c: 162: isNumberOk = 1;
 23590  0055F2  0E01               	movlw	1
 23591  0055F4  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23592                           
 23593                           ;app_gate.c: 163: }
 23594  0055F6  D003               	goto	l2803
 23595  0055F8                     l2802:
 23596                           
 23597                           ; BSR set to: 0
 23598                           ;app_gate.c: 164: else
 23599                           ;app_gate.c: 165: {
 23600                           ;app_gate.c: 166: isNumberOk = 0;
 23601                           
 23602                           ; BSR set to: 0
 23603  0055F8  0E00               	movlw	0
 23604  0055FA  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23605                           
 23606                           ;app_gate.c: 167: break;
 23607  0055FC  D002               	goto	u14290
 23608  0055FE                     l2803:
 23609                           
 23610                           ; BSR set to: 0
 23611                           
 23612                           ; BSR set to: 0
 23613  0055FE  2B81               	incf	isNumberValid@i& (0+255),f,b
 23614  005600  D7DE               	goto	l14757
 23615  005602                     u14290:
 23616                           
 23617                           ; BSR set to: 0
 23618                           ;app_gate.c: 168: }
 23619                           ;app_gate.c: 169: }
 23620                           ;app_gate.c: 170: }
 23621                           ;app_gate.c: 171: return isNumberOk;
 23622                           
 23623                           ; BSR set to: 0
 23624                           
 23625                           ; BSR set to: 0
 23626  005602  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 23627  005604  0012               	return	
 23628  005606                     __end_of_isNumberValid:
 23629                           	opt stack 0
 23630                           tosu	equ	0xFFF
 23631                           tosh	equ	0xFFE
 23632                           tosl	equ	0xFFD
 23633                           pclath	equ	0xFFA
 23634                           tblptru	equ	0xFF8
 23635                           tblptrh	equ	0xFF7
 23636                           tblptrl	equ	0xFF6
 23637                           tablat	equ	0xFF5
 23638                           prodh	equ	0xFF4
 23639                           prodl	equ	0xFF3
 23640                           intcon	equ	0xFF2
 23641                           intcon2	equ	0xFF1
 23642                           intcon3	equ	0xFF0
 23643                           indf0	equ	0xFEF
 23644                           postinc0	equ	0xFEE
 23645                           plusw0	equ	0xFEB
 23646                           fsr0h	equ	0xFEA
 23647                           fsr0l	equ	0xFE9
 23648                           wreg	equ	0xFE8
 23649                           indf1	equ	0xFE7
 23650                           postinc1	equ	0xFE6
 23651                           postdec1	equ	0xFE5
 23652                           fsr1h	equ	0xFE2
 23653                           fsr1l	equ	0xFE1
 23654                           indf2	equ	0xFDF
 23655                           postinc2	equ	0xFDE
 23656                           postdec2	equ	0xFDD
 23657                           plusw2	equ	0xFDB
 23658                           fsr2h	equ	0xFDA
 23659                           fsr2l	equ	0xFD9
 23660                           status	equ	0xFD8
 23661                           
 23662 ;; *************** function _Eeprom_Read *****************
 23663 ;; Defined at:
 23664 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 23665 ;; Parameters:    Size  Location     Type
 23666 ;;  MemoryAddres    1    wreg     unsigned char 
 23667 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 23668 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23669 ;;  DataLength      1   75[BANK0 ] unsigned char 
 23670 ;; Auto vars:     Size  Location     Type
 23671 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 23672 ;;  QuerySts        1   79[BANK0 ] enum E8932
 23673 ;;  ReadSts         1   78[BANK0 ] enum E8958
 23674 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 23675 ;; Return value:  Size  Location     Type
 23676 ;;                  1    wreg      enum E8958
 23677 ;; Registers used:
 23678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23679 ;; Tracked objects:
 23680 ;;		On entry : 0/0
 23681 ;;		On exit  : 0/0
 23682 ;;		Unchanged: 0/0
 23683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23684 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23685 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23687 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23688 ;;Total ram usage:        7 bytes
 23689 ;; Hardware stack levels used:    1
 23690 ;; Hardware stack levels required when called:   16
 23691 ;; This function calls:
 23692 ;;		_I2cSlv_QueryI2cData
 23693 ;; This function is called by:
 23694 ;;		_initEeprom
 23695 ;;		_isNumberInMemory
 23696 ;;		_findEmptySpot
 23697 ;; This function uses a non-reentrant model
 23698 ;;
 23699                           
 23700                           	psect	text107
 23701  005988                     __ptext107:
 23702                           	opt stack 0
 23703  005988                     _Eeprom_Read:
 23704                           	opt stack 10
 23705                           
 23706                           ; BSR set to: 0
 23707                           ;incstack = 0
 23708                           ;Eeprom_Read@MemoryAddress stored from wreg
 23709  005988  0100               	movlb	0	; () banked
 23710  00598A  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 23711                           
 23712                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 23713  00598C  0E50               	movlw	80
 23714  00598E  0100               	movlb	0	; () banked
 23715  005990  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 23716                           
 23717                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 23718  005992  0E00               	movlw	0
 23719  005994  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23720                           
 23721                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 23722  005996  0E02               	movlw	2
 23723  005998  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 23727  00599A  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 23728                           
 23729                           ; BSR set to: 0
 23730                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 23731  00599E  0EFC               	movlw	low _ReadAddress
 23732  0059A0  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 23733  0059A2  0E01               	movlw	high _ReadAddress
 23734  0059A4  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 23735  0059A6  0E01               	movlw	1
 23736  0059A8  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 23737  0059AA  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 23738  0059AE  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 23739  0059B2  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 23740  0059B6  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 23741  0059BA  EC5B  F01D         	call	_I2cSlv_QueryI2cData	;wreg free
 23742  0059BE  0100               	movlb	0	; () banked
 23743  0059C0  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23744                           
 23745                           ; BSR set to: 0
 23746                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 23747  0059C2  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 23748  0059C4  A4D8               	btfss	status,2,c
 23749  0059C6  D002               	goto	l2035
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;eeprom_if.c: 114: {
 23753                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 23754  0059C8  0E00               	movlw	0
 23755  0059CA  D005               	goto	L30
 23756  0059CC                     l2035:
 23757                           
 23758                           ; BSR set to: 0
 23759                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 23760                           
 23761                           ; BSR set to: 0
 23762  0059CC  0E02               	movlw	2
 23763  0059CE  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 23764  0059D0  A4D8               	btfss	status,2,c
 23765  0059D2  D002               	goto	l2037
 23766                           
 23767                           ; BSR set to: 0
 23768                           ;eeprom_if.c: 118: {
 23769                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 23770  0059D4  0E01               	movlw	1
 23771  0059D6                     L30:
 23772  0059D6  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23773  0059D8                     l2037:
 23774                           
 23775                           ; BSR set to: 0
 23776                           ;eeprom_if.c: 120: }
 23777                           ;eeprom_if.c: 121: return ReadSts;
 23778                           
 23779                           ; BSR set to: 0
 23780  0059D8  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 23781  0059DA  0012               	return	
 23782  0059DC                     __end_of_Eeprom_Read:
 23783                           	opt stack 0
 23784                           tosu	equ	0xFFF
 23785                           tosh	equ	0xFFE
 23786                           tosl	equ	0xFFD
 23787                           pclath	equ	0xFFA
 23788                           tblptru	equ	0xFF8
 23789                           tblptrh	equ	0xFF7
 23790                           tblptrl	equ	0xFF6
 23791                           tablat	equ	0xFF5
 23792                           prodh	equ	0xFF4
 23793                           prodl	equ	0xFF3
 23794                           intcon	equ	0xFF2
 23795                           intcon2	equ	0xFF1
 23796                           intcon3	equ	0xFF0
 23797                           indf0	equ	0xFEF
 23798                           postinc0	equ	0xFEE
 23799                           plusw0	equ	0xFEB
 23800                           fsr0h	equ	0xFEA
 23801                           fsr0l	equ	0xFE9
 23802                           wreg	equ	0xFE8
 23803                           indf1	equ	0xFE7
 23804                           postinc1	equ	0xFE6
 23805                           postdec1	equ	0xFE5
 23806                           fsr1h	equ	0xFE2
 23807                           fsr1l	equ	0xFE1
 23808                           indf2	equ	0xFDF
 23809                           postinc2	equ	0xFDE
 23810                           postdec2	equ	0xFDD
 23811                           plusw2	equ	0xFDB
 23812                           fsr2h	equ	0xFDA
 23813                           fsr2l	equ	0xFD9
 23814                           status	equ	0xFD8
 23815                           
 23816 ;; *************** function _I2cSlv_QueryI2cData *****************
 23817 ;; Defined at:
 23818 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23819 ;; Parameters:    Size  Location     Type
 23820 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 23821 ;;		 -> ReadAddress(1), 
 23822 ;;  TxLen           1   68[BANK0 ] unsigned char 
 23823 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 23824 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23825 ;;  RxLen           1   71[BANK0 ] unsigned char 
 23826 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 23827 ;; Auto vars:     Size  Location     Type
 23828 ;;		None
 23829 ;; Return value:  Size  Location     Type
 23830 ;;                  1    wreg      enum E8945
 23831 ;; Registers used:
 23832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23833 ;; Tracked objects:
 23834 ;;		On entry : 0/0
 23835 ;;		On exit  : 0/0
 23836 ;;		Unchanged: 0/0
 23837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23838 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23841 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23842 ;;Total ram usage:        7 bytes
 23843 ;; Hardware stack levels used:    1
 23844 ;; Hardware stack levels required when called:   15
 23845 ;; This function calls:
 23846 ;;		_I2cSlv_I2cReadMsgSts
 23847 ;;		_I2cSlv_ReceiveI2cMsg
 23848 ;;		_I2cSlv_SendI2cMsg
 23849 ;;		_OsTmr_GetTimerStatus
 23850 ;;		_OsTmr_StartTimer
 23851 ;;		_OsTmr_Wait
 23852 ;; This function is called by:
 23853 ;;		_Eeprom_Read
 23854 ;; This function uses a non-reentrant model
 23855 ;;
 23856                           
 23857                           	psect	text108
 23858  003AB6                     __ptext108:
 23859                           	opt stack 0
 23860  003AB6                     _I2cSlv_QueryI2cData:
 23861                           	opt stack 10
 23862                           
 23863                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 23864                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 23865                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 23866                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 23867                           ;i2c_slv.c: 388: switch(I2cOpState)
 23868                           
 23869                           ; BSR set to: 0
 23870                           ;incstack = 0
 23871  003AB6  D05B               	goto	l1440
 23872  003AB8                     
 23873                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 23874  003AB8  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 23875  003ABC  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 23876  003AC0  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 23877  003AC4  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 23878  003AC8  EC61  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 23879                           
 23880                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 23881  003ACC  0E01               	movlw	1
 23882  003ACE  0101               	movlb	1	; () banked
 23883  003AD0  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23884                           
 23885                           ; BSR set to: 1
 23886                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 23887  003AD2  0E00               	movlw	0
 23888  003AD4  D04A               	goto	L34
 23889  003AD6                     
 23890                           ; BSR set to: 1
 23891                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 23892                           
 23893                           ; BSR set to: 1
 23894  003AD6  0ECB               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 23895  003AD8  0100               	movlb	0	; () banked
 23896  003ADA  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 23897  003ADC  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 23898  003ADE  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 23899  003AE0  0EF4               	movlw	244
 23900  003AE2  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 23901  003AE4  0E01               	movlw	1
 23902  003AE6  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 23903  003AE8  0E00               	movlw	0
 23904  003AEA  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 23905  003AEC  0E00               	movlw	0
 23906  003AEE  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 23907  003AF0  ECA1  F028         	call	_OsTmr_Wait	;wreg free
 23908  003AF4  06E8               	decf	wreg,f,c
 23909  003AF6  A4D8               	btfss	status,2,c
 23910  003AF8  D036               	goto	l1448
 23911                           
 23912                           ;i2c_slv.c: 402: {
 23913                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 23914  003AFA  0E42               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23915  003AFC  0100               	movlb	0	; () banked
 23916  003AFE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23917  003B00  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23918  003B02  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23919  003B04  0EC4               	movlw	196
 23920  003B06  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23921  003B08  0E09               	movlw	9
 23922  003B0A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23923  003B0C  0E00               	movlw	0
 23924  003B0E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23925  003B10  0E00               	movlw	0
 23926  003B12  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23927  003B14  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 23928                           
 23929                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 23930  003B18  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 23931  003B1C  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 23932  003B20  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 23933  003B24  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 23934  003B28  ECE2  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 23935                           
 23936                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 23937  003B2C  0E02               	movlw	2
 23938  003B2E  0101               	movlb	1	; () banked
 23939  003B30  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23940  003B32  D019               	goto	l1448
 23941  003B34                     
 23942                           ; BSR set to: 1
 23943                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 23944                           
 23945                           ; BSR set to: 1
 23946  003B34  EC1E  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 23947  003B38  06E8               	decf	wreg,f,c
 23948  003B3A  A4D8               	btfss	status,2,c
 23949  003B3C  D005               	goto	l1446
 23950                           
 23951                           ;i2c_slv.c: 414: {
 23952                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 23953  003B3E  0E00               	movlw	0
 23954  003B40  0101               	movlb	1	; () banked
 23955  003B42  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23956                           
 23957                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 23958  003B44  0E01               	movlw	1
 23959  003B46  D011               	goto	L34
 23960  003B48                     l1446:
 23961                           
 23962                           ;i2c_slv.c: 420: else
 23963                           ;i2c_slv.c: 421: {
 23964                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 23965                           
 23966                           ; BSR set to: 1
 23967  003B48  0E42               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23968  003B4A  0100               	movlb	0	; () banked
 23969  003B4C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23970  003B4E  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23971  003B50  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23972  003B52  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 23973  003B56  06E8               	decf	wreg,f,c
 23974  003B58  A4D8               	btfss	status,2,c
 23975  003B5A  D005               	goto	l1448
 23976                           
 23977                           ;i2c_slv.c: 423: {
 23978                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 23979  003B5C  0E00               	movlw	0
 23980  003B5E  0101               	movlb	1	; () banked
 23981  003B60  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23982                           
 23983                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 23984  003B62  0E02               	movlw	2
 23985  003B64  D002               	goto	L34
 23986  003B66                     l1448:
 23987                           
 23988                           ;i2c_slv.c: 429: else
 23989                           ;i2c_slv.c: 430: {
 23990                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 23991                           
 23992                           ; BSR set to: 1
 23993  003B66  0E00               	movlw	0
 23994  003B68  0101               	movlb	1	; () banked
 23995  003B6A                     L34:
 23996  003B6A  6FE4               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 23997                           
 23998                           ; BSR set to: 1
 23999                           ;i2c_slv.c: 439: }
 24000                           
 24001                           ; BSR set to: 1
 24002                           ;i2c_slv.c: 438: break;
 24003                           
 24004                           ;i2c_slv.c: 437: default:
 24005                           
 24006                           ; BSR set to: 1
 24007                           ;i2c_slv.c: 433: }
 24008                           ;i2c_slv.c: 434: }
 24009                           ;i2c_slv.c: 435: break;
 24010                           
 24011                           ; BSR set to: 1
 24012  003B6C  D00B               	goto	l1442
 24013  003B6E                     l1440:
 24014                           
 24015                           ; BSR set to: 1
 24016  003B6E  0101               	movlb	1	; () banked
 24017  003B70  51E5               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 24018                           
 24019                           ; Switch size 1, requested type "space"
 24020                           ; Number of cases is 3, Range of values is 0 to 2
 24021                           ; switch strategies available:
 24022                           ; Name         Instructions Cycles
 24023                           ; simple_byte           10     6 (average)
 24024                           ;	Chosen strategy is simple_byte
 24025  003B72  0A00               	xorlw	0	; case 0
 24026  003B74  B4D8               	btfsc	status,2,c
 24027  003B76  D7A0               	goto	l1441
 24028  003B78  0A01               	xorlw	1	; case 1
 24029  003B7A  B4D8               	btfsc	status,2,c
 24030  003B7C  D7AC               	goto	l1443
 24031  003B7E  0A03               	xorlw	3	; case 2
 24032  003B80  B4D8               	btfsc	status,2,c
 24033  003B82  D7D8               	goto	l1445
 24034  003B84                     l1442:
 24035                           
 24036                           ; BSR set to: 1
 24037                           ;i2c_slv.c: 441: return Ret;
 24038                           
 24039                           ; BSR set to: 1
 24040  003B84  51E4               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 24041  003B86  0012               	return	
 24042  003B88                     __end_of_I2cSlv_QueryI2cData:
 24043                           	opt stack 0
 24044                           tosu	equ	0xFFF
 24045                           tosh	equ	0xFFE
 24046                           tosl	equ	0xFFD
 24047                           pclath	equ	0xFFA
 24048                           tblptru	equ	0xFF8
 24049                           tblptrh	equ	0xFF7
 24050                           tblptrl	equ	0xFF6
 24051                           tablat	equ	0xFF5
 24052                           prodh	equ	0xFF4
 24053                           prodl	equ	0xFF3
 24054                           intcon	equ	0xFF2
 24055                           intcon2	equ	0xFF1
 24056                           intcon3	equ	0xFF0
 24057                           indf0	equ	0xFEF
 24058                           postinc0	equ	0xFEE
 24059                           plusw0	equ	0xFEB
 24060                           fsr0h	equ	0xFEA
 24061                           fsr0l	equ	0xFE9
 24062                           wreg	equ	0xFE8
 24063                           indf1	equ	0xFE7
 24064                           postinc1	equ	0xFE6
 24065                           postdec1	equ	0xFE5
 24066                           fsr1h	equ	0xFE2
 24067                           fsr1l	equ	0xFE1
 24068                           indf2	equ	0xFDF
 24069                           postinc2	equ	0xFDE
 24070                           postdec2	equ	0xFDD
 24071                           plusw2	equ	0xFDB
 24072                           fsr2h	equ	0xFDA
 24073                           fsr2l	equ	0xFD9
 24074                           status	equ	0xFD8
 24075                           
 24076 ;; *************** function _OsTmr_Wait *****************
 24077 ;; Defined at:
 24078 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 24079 ;; Parameters:    Size  Location     Type
 24080 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 24081 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 24082 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 24083 ;; Auto vars:     Size  Location     Type
 24084 ;;  Ret             1   65[BANK0 ] enum E7749
 24085 ;; Return value:  Size  Location     Type
 24086 ;;                  1    wreg      enum E7749
 24087 ;; Registers used:
 24088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24089 ;; Tracked objects:
 24090 ;;		On entry : 0/0
 24091 ;;		On exit  : 0/0
 24092 ;;		Unchanged: 0/0
 24093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24094 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24097 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24098 ;;Total ram usage:        7 bytes
 24099 ;; Hardware stack levels used:    1
 24100 ;; Hardware stack levels required when called:   14
 24101 ;; This function calls:
 24102 ;;		_OsTmr_GetTimerStatus
 24103 ;;		_OsTmr_StartTimer
 24104 ;; This function is called by:
 24105 ;;		_I2cSlv_QueryI2cData
 24106 ;;		_Terminal
 24107 ;; This function uses a non-reentrant model
 24108 ;;
 24109                           
 24110                           	psect	text109
 24111  005142                     __ptext109:
 24112                           	opt stack 0
 24113  005142                     _OsTmr_Wait:
 24114                           	opt stack 11
 24115                           
 24116                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 24117                           
 24118                           ; BSR set to: 1
 24119                           ;incstack = 0
 24120  005142  0E00               	movlw	0
 24121  005144  0100               	movlb	0	; () banked
 24122  005146  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 24123                           
 24124                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 24125  005148  D02D               	goto	l855
 24126  00514A                     
 24127                           ; BSR set to: 0
 24128                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 24129                           
 24130                           ; BSR set to: 0
 24131  00514A  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 24132  00514E  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 24133  005152  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 24134  005156  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 24135  00515A  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 24136  00515E  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 24137  005162  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 24138                           
 24139                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 24140  005166  0100               	movlb	0	; () banked
 24141  005168  EE20 F00A          	lfsr	2,10
 24142  00516C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24143  00516E  26D9               	addwf	fsr2l,f,c
 24144  005170  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24145  005172  22DA               	addwfc	fsr2h,f,c
 24146  005174  0E01               	movlw	1
 24147  005176  6EDF               	movwf	indf2,c
 24148                           
 24149                           ;os_timers.c: 165: break;
 24150  005178  D022               	goto	l857
 24151  00517A                     
 24152                           ; BSR set to: 0
 24153                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 24154                           
 24155                           ; BSR set to: 0
 24156  00517A  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 24157  00517E  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 24158  005182  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 24159  005186  06E8               	decf	wreg,f,c
 24160  005188  A4D8               	btfss	status,2,c
 24161  00518A  D019               	goto	l857
 24162                           
 24163                           ;os_timers.c: 170: {
 24164                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 24165  00518C  0100               	movlb	0	; () banked
 24166  00518E  EE20 F00A          	lfsr	2,10
 24167  005192  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24168  005194  26D9               	addwf	fsr2l,f,c
 24169  005196  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24170  005198  22DA               	addwfc	fsr2h,f,c
 24171  00519A  0E00               	movlw	0
 24172  00519C  6EDF               	movwf	indf2,c
 24173                           
 24174                           ; BSR set to: 0
 24175                           ;os_timers.c: 174: Ret = DelayExpired;
 24176  00519E  0E01               	movlw	1
 24177  0051A0  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 24178                           
 24179                           ; BSR set to: 0
 24180                           ;os_timers.c: 180: }
 24181                           
 24182                           ; BSR set to: 0
 24183                           ;os_timers.c: 179: break;
 24184                           
 24185                           ;os_timers.c: 178: default:
 24186                           
 24187                           ; BSR set to: 0
 24188                           ;os_timers.c: 175: }
 24189                           ;os_timers.c: 176: break;
 24190  0051A2  D00D               	goto	l857
 24191  0051A4                     l855:
 24192                           
 24193                           ; BSR set to: 0
 24194                           
 24195                           ; BSR set to: 0
 24196  0051A4  EE20 F00A          	lfsr	2,10
 24197  0051A8  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24198  0051AA  26D9               	addwf	fsr2l,f,c
 24199  0051AC  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24200  0051AE  22DA               	addwfc	fsr2h,f,c
 24201  0051B0  50DF               	movf	indf2,w,c
 24202                           
 24203                           ; Switch size 1, requested type "space"
 24204                           ; Number of cases is 2, Range of values is 0 to 1
 24205                           ; switch strategies available:
 24206                           ; Name         Instructions Cycles
 24207                           ; simple_byte            7     4 (average)
 24208                           ;	Chosen strategy is simple_byte
 24209  0051B2  0A00               	xorlw	0	; case 0
 24210  0051B4  B4D8               	btfsc	status,2,c
 24211  0051B6  D7C9               	goto	l856
 24212  0051B8  0A01               	xorlw	1	; case 1
 24213  0051BA  B4D8               	btfsc	status,2,c
 24214  0051BC  D7DE               	goto	l858
 24215  0051BE                     l857:
 24216                           
 24217                           ;os_timers.c: 182: return Ret;
 24218                           
 24219                           ; BSR set to: 0
 24220  0051BE  0100               	movlb	0	; () banked
 24221  0051C0  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 24222  0051C2  0012               	return	
 24223  0051C4                     __end_of_OsTmr_Wait:
 24224                           	opt stack 0
 24225                           tosu	equ	0xFFF
 24226                           tosh	equ	0xFFE
 24227                           tosl	equ	0xFFD
 24228                           pclath	equ	0xFFA
 24229                           tblptru	equ	0xFF8
 24230                           tblptrh	equ	0xFF7
 24231                           tblptrl	equ	0xFF6
 24232                           tablat	equ	0xFF5
 24233                           prodh	equ	0xFF4
 24234                           prodl	equ	0xFF3
 24235                           intcon	equ	0xFF2
 24236                           intcon2	equ	0xFF1
 24237                           intcon3	equ	0xFF0
 24238                           indf0	equ	0xFEF
 24239                           postinc0	equ	0xFEE
 24240                           plusw0	equ	0xFEB
 24241                           fsr0h	equ	0xFEA
 24242                           fsr0l	equ	0xFE9
 24243                           wreg	equ	0xFE8
 24244                           indf1	equ	0xFE7
 24245                           postinc1	equ	0xFE6
 24246                           postdec1	equ	0xFE5
 24247                           fsr1h	equ	0xFE2
 24248                           fsr1l	equ	0xFE1
 24249                           indf2	equ	0xFDF
 24250                           postinc2	equ	0xFDE
 24251                           postdec2	equ	0xFDD
 24252                           plusw2	equ	0xFDB
 24253                           fsr2h	equ	0xFDA
 24254                           fsr2l	equ	0xFD9
 24255                           status	equ	0xFD8
 24256                           
 24257 ;; *************** function _I2cSlv_SendI2cMsg *****************
 24258 ;; Defined at:
 24259 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24260 ;; Parameters:    Size  Location     Type
 24261 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 24262 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 24263 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 24264 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 24265 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 24266 ;; Auto vars:     Size  Location     Type
 24267 ;;  TxSts           1   36[BANK0 ] unsigned char 
 24268 ;; Return value:  Size  Location     Type
 24269 ;;                  1    wreg      unsigned char 
 24270 ;; Registers used:
 24271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24272 ;; Tracked objects:
 24273 ;;		On entry : 0/0
 24274 ;;		On exit  : 0/0
 24275 ;;		Unchanged: 0/0
 24276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24280 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24281 ;;Total ram usage:        5 bytes
 24282 ;; Hardware stack levels used:    1
 24283 ;; Hardware stack levels required when called:   12
 24284 ;; This function calls:
 24285 ;;		_GenerateEvt
 24286 ;; This function is called by:
 24287 ;;		_I2cSlv_QueryI2cData
 24288 ;;		_Eeprom_Write
 24289 ;;		_Terminal
 24290 ;;		_triggerRelay
 24291 ;; This function uses a non-reentrant model
 24292 ;;
 24293                           
 24294                           	psect	text110
 24295  0060C2                     __ptext110:
 24296                           	opt stack 0
 24297  0060C2                     _I2cSlv_SendI2cMsg:
 24298                           	opt stack 13
 24299                           
 24300                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 24301                           
 24302                           ; BSR set to: 0
 24303                           ;incstack = 0
 24304  0060C2  0E00               	movlw	0
 24305  0060C4  0100               	movlb	0	; () banked
 24306  0060C6  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 24307                           
 24308                           ; BSR set to: 0
 24309                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 24310  0060C8  05CD               	decf	_I2cComSts& (0+255),w,b
 24311  0060CA  B4D8               	btfsc	status,2,c
 24312  0060CC  D015               	goto	l1412
 24313                           
 24314                           ; BSR set to: 0
 24315                           ;i2c_slv.c: 257: {
 24316                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 24317  0060CE  C082  F39E         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 24318                           
 24319                           ; BSR set to: 0
 24320                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 24321  0060D2  0E00               	movlw	0
 24322  0060D4  0103               	movlb	3	; () banked
 24323  0060D6  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 24324                           
 24325                           ; BSR set to: 3
 24326                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 24327  0060D8  C083  F3A2         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 24328                           
 24329                           ; BSR set to: 3
 24330                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 24331  0060DC  C080  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 24332  0060E0  C081  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 24333                           
 24334                           ; BSR set to: 3
 24335                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 24336  0060E4  0ED7               	movlw	low _I2cWriteDataEvt
 24337  0060E6  0100               	movlb	0	; () banked
 24338  0060E8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24339  0060EA  0E00               	movlw	high _I2cWriteDataEvt
 24340  0060EC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24341  0060EE  ECE5  F033         	call	_GenerateEvt	;wreg free
 24342                           
 24343                           ;i2c_slv.c: 267: TxSts = 1u;
 24344  0060F2  0E01               	movlw	1
 24345  0060F4  0100               	movlb	0	; () banked
 24346  0060F6  D001               	goto	L35
 24347  0060F8                     l1412:
 24348                           
 24349                           ; BSR set to: 0
 24350                           ;i2c_slv.c: 269: else
 24351                           ;i2c_slv.c: 270: {
 24352                           ;i2c_slv.c: 272: TxSts = 0u;
 24353                           
 24354                           ; BSR set to: 0
 24355  0060F8  0E00               	movlw	0
 24356  0060FA                     L35:
 24357  0060FA  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 24358                           
 24359                           ; BSR set to: 0
 24360                           ;i2c_slv.c: 273: }
 24361                           ;i2c_slv.c: 275: return TxSts;
 24362  0060FC  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 24363  0060FE  0012               	return	
 24364  006100                     __end_of_I2cSlv_SendI2cMsg:
 24365                           	opt stack 0
 24366                           tosu	equ	0xFFF
 24367                           tosh	equ	0xFFE
 24368                           tosl	equ	0xFFD
 24369                           pclath	equ	0xFFA
 24370                           tblptru	equ	0xFF8
 24371                           tblptrh	equ	0xFF7
 24372                           tblptrl	equ	0xFF6
 24373                           tablat	equ	0xFF5
 24374                           prodh	equ	0xFF4
 24375                           prodl	equ	0xFF3
 24376                           intcon	equ	0xFF2
 24377                           intcon2	equ	0xFF1
 24378                           intcon3	equ	0xFF0
 24379                           indf0	equ	0xFEF
 24380                           postinc0	equ	0xFEE
 24381                           plusw0	equ	0xFEB
 24382                           fsr0h	equ	0xFEA
 24383                           fsr0l	equ	0xFE9
 24384                           wreg	equ	0xFE8
 24385                           indf1	equ	0xFE7
 24386                           postinc1	equ	0xFE6
 24387                           postdec1	equ	0xFE5
 24388                           fsr1h	equ	0xFE2
 24389                           fsr1l	equ	0xFE1
 24390                           indf2	equ	0xFDF
 24391                           postinc2	equ	0xFDE
 24392                           postdec2	equ	0xFDD
 24393                           plusw2	equ	0xFDB
 24394                           fsr2h	equ	0xFDA
 24395                           fsr2l	equ	0xFD9
 24396                           status	equ	0xFD8
 24397                           
 24398 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 24399 ;; Defined at:
 24400 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24401 ;; Parameters:    Size  Location     Type
 24402 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 24403 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), Terminal@TermRxBuffer(50), 
 24404 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 24405 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 24406 ;; Auto vars:     Size  Location     Type
 24407 ;;  RxSts           1   36[BANK0 ] unsigned char 
 24408 ;; Return value:  Size  Location     Type
 24409 ;;                  1    wreg      unsigned char 
 24410 ;; Registers used:
 24411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24412 ;; Tracked objects:
 24413 ;;		On entry : 0/0
 24414 ;;		On exit  : 0/0
 24415 ;;		Unchanged: 0/0
 24416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24417 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24420 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24421 ;;Total ram usage:        5 bytes
 24422 ;; Hardware stack levels used:    1
 24423 ;; Hardware stack levels required when called:   12
 24424 ;; This function calls:
 24425 ;;		_GenerateEvt
 24426 ;; This function is called by:
 24427 ;;		_I2cSlv_QueryI2cData
 24428 ;;		_Terminal
 24429 ;; This function uses a non-reentrant model
 24430 ;;
 24431                           
 24432                           	psect	text111
 24433  005FC4                     __ptext111:
 24434                           	opt stack 0
 24435  005FC4                     _I2cSlv_ReceiveI2cMsg:
 24436                           	opt stack 13
 24437                           
 24438                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 24439                           
 24440                           ; BSR set to: 0
 24441                           ;incstack = 0
 24442  005FC4  0E00               	movlw	0
 24443  005FC6  0100               	movlb	0	; () banked
 24444  005FC8  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24445                           
 24446                           ; BSR set to: 0
 24447                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 24448  005FCA  0E02               	movlw	2
 24449  005FCC  19CD               	xorwf	_I2cComSts& (0+255),w,b
 24450  005FCE  B4D8               	btfsc	status,2,c
 24451  005FD0  D016               	goto	l1417
 24452                           
 24453                           ; BSR set to: 0
 24454                           ;i2c_slv.c: 294: {
 24455                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 24456  005FD2  C082  F393         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 24457                           
 24458                           ; BSR set to: 0
 24459                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 24460  005FD6  0E01               	movlw	1
 24461  005FD8  0103               	movlb	3	; () banked
 24462  005FDA  6F94               	movwf	(_I2cRxPacket+1)& (0+255),b
 24463                           
 24464                           ; BSR set to: 3
 24465                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 24466  005FDC  C083  F397         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 24467                           
 24468                           ; BSR set to: 3
 24469                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 24470  005FE0  C080  F395         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 24471  005FE4  C081  F396         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 24472                           
 24473                           ; BSR set to: 3
 24474                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 24475  005FE8  0ED6               	movlw	low _I2cReadDataEvt
 24476  005FEA  0100               	movlb	0	; () banked
 24477  005FEC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24478  005FEE  0E00               	movlw	high _I2cReadDataEvt
 24479  005FF0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24480  005FF2  ECE5  F033         	call	_GenerateEvt	;wreg free
 24481                           
 24482                           ;i2c_slv.c: 304: RxSts = 1u;
 24483  005FF6  0E01               	movlw	1
 24484  005FF8  0100               	movlb	0	; () banked
 24485  005FFA  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24486                           
 24487                           ;i2c_slv.c: 305: }
 24488  005FFC  0012               	return	
 24489  005FFE                     l1417:
 24490                           
 24491                           ; BSR set to: 0
 24492                           ;i2c_slv.c: 306: else
 24493                           ;i2c_slv.c: 307: {
 24494                           ;i2c_slv.c: 309: RxSts = 0u;
 24495                           
 24496                           ; BSR set to: 0
 24497  005FFE  0E00               	movlw	0
 24498  006000  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24499                           
 24500                           ; BSR set to: 0
 24501  006002  0012               	return	
 24502  006004                     __end_of_I2cSlv_ReceiveI2cMsg:
 24503                           	opt stack 0
 24504                           tosu	equ	0xFFF
 24505                           tosh	equ	0xFFE
 24506                           tosl	equ	0xFFD
 24507                           pclath	equ	0xFFA
 24508                           tblptru	equ	0xFF8
 24509                           tblptrh	equ	0xFF7
 24510                           tblptrl	equ	0xFF6
 24511                           tablat	equ	0xFF5
 24512                           prodh	equ	0xFF4
 24513                           prodl	equ	0xFF3
 24514                           intcon	equ	0xFF2
 24515                           intcon2	equ	0xFF1
 24516                           intcon3	equ	0xFF0
 24517                           indf0	equ	0xFEF
 24518                           postinc0	equ	0xFEE
 24519                           plusw0	equ	0xFEB
 24520                           fsr0h	equ	0xFEA
 24521                           fsr0l	equ	0xFE9
 24522                           wreg	equ	0xFE8
 24523                           indf1	equ	0xFE7
 24524                           postinc1	equ	0xFE6
 24525                           postdec1	equ	0xFE5
 24526                           fsr1h	equ	0xFE2
 24527                           fsr1l	equ	0xFE1
 24528                           indf2	equ	0xFDF
 24529                           postinc2	equ	0xFDE
 24530                           postdec2	equ	0xFDD
 24531                           plusw2	equ	0xFDB
 24532                           fsr2h	equ	0xFDA
 24533                           fsr2l	equ	0xFD9
 24534                           status	equ	0xFD8
 24535                           
 24536 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 24537 ;; Defined at:
 24538 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24539 ;; Parameters:    Size  Location     Type
 24540 ;;		None
 24541 ;; Auto vars:     Size  Location     Type
 24542 ;;  Result          1   33[BANK0 ] enum E8933
 24543 ;; Return value:  Size  Location     Type
 24544 ;;                  1    wreg      enum E8933
 24545 ;; Registers used:
 24546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24547 ;; Tracked objects:
 24548 ;;		On entry : 0/0
 24549 ;;		On exit  : 0/0
 24550 ;;		Unchanged: 0/0
 24551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24556 ;;Total ram usage:        1 bytes
 24557 ;; Hardware stack levels used:    1
 24558 ;; Hardware stack levels required when called:   12
 24559 ;; This function calls:
 24560 ;;		_ReceiveEvt
 24561 ;; This function is called by:
 24562 ;;		_I2cSlv_QueryI2cData
 24563 ;;		_Terminal
 24564 ;; This function uses a non-reentrant model
 24565 ;;
 24566                           
 24567                           	psect	text112
 24568  00663C                     __ptext112:
 24569                           	opt stack 0
 24570  00663C                     _I2cSlv_I2cReadMsgSts:
 24571                           	opt stack 13
 24572                           
 24573                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 24574                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;incstack = 0
 24578  00663C  0E98               	movlw	low (_I2cRxPacket+5)
 24579  00663E  0100               	movlb	0	; () banked
 24580  006640  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24581  006642  0E03               	movlw	high (_I2cRxPacket+5)
 24582  006644  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24583  006646  ECF0  F031         	call	_ReceiveEvt	;wreg free
 24584  00664A  0900               	iorlw	0
 24585  00664C  B4D8               	btfsc	status,2,c
 24586  00664E  D002               	goto	l1422
 24587                           
 24588                           ;i2c_slv.c: 331: {
 24589                           ;i2c_slv.c: 332: Result = MessageReceived;
 24590  006650  0E01               	movlw	1
 24591  006652  D001               	goto	L36
 24592  006654                     l1422:
 24593                           
 24594                           ;i2c_slv.c: 334: else
 24595                           ;i2c_slv.c: 335: {
 24596                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 24597                           
 24598                           ; BSR set to: 0
 24599  006654  0E00               	movlw	0
 24600  006656                     L36:
 24601  006656  0100               	movlb	0	; () banked
 24602  006658  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 24603                           
 24604                           ; BSR set to: 0
 24605                           ;i2c_slv.c: 337: }
 24606                           ;i2c_slv.c: 339: return Result;
 24607  00665A  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 24608  00665C  0012               	return	
 24609  00665E                     __end_of_I2cSlv_I2cReadMsgSts:
 24610                           	opt stack 0
 24611                           tosu	equ	0xFFF
 24612                           tosh	equ	0xFFE
 24613                           tosl	equ	0xFFD
 24614                           pclath	equ	0xFFA
 24615                           tblptru	equ	0xFF8
 24616                           tblptrh	equ	0xFF7
 24617                           tblptrl	equ	0xFF6
 24618                           tablat	equ	0xFF5
 24619                           prodh	equ	0xFF4
 24620                           prodl	equ	0xFF3
 24621                           intcon	equ	0xFF2
 24622                           intcon2	equ	0xFF1
 24623                           intcon3	equ	0xFF0
 24624                           indf0	equ	0xFEF
 24625                           postinc0	equ	0xFEE
 24626                           plusw0	equ	0xFEB
 24627                           fsr0h	equ	0xFEA
 24628                           fsr0l	equ	0xFE9
 24629                           wreg	equ	0xFE8
 24630                           indf1	equ	0xFE7
 24631                           postinc1	equ	0xFE6
 24632                           postdec1	equ	0xFE5
 24633                           fsr1h	equ	0xFE2
 24634                           fsr1l	equ	0xFE1
 24635                           indf2	equ	0xFDF
 24636                           postinc2	equ	0xFDE
 24637                           postdec2	equ	0xFDD
 24638                           plusw2	equ	0xFDB
 24639                           fsr2h	equ	0xFDA
 24640                           fsr2l	equ	0xFD9
 24641                           status	equ	0xFD8
 24642                           
 24643 ;; *************** function _Mdm_RequestSmsData *****************
 24644 ;; Defined at:
 24645 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24646 ;; Parameters:    Size  Location     Type
 24647 ;;		None
 24648 ;; Auto vars:     Size  Location     Type
 24649 ;;		None
 24650 ;; Return value:  Size  Location     Type
 24651 ;;                  1    wreg      void 
 24652 ;; Registers used:
 24653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24654 ;; Tracked objects:
 24655 ;;		On entry : 0/0
 24656 ;;		On exit  : 0/0
 24657 ;;		Unchanged: 0/0
 24658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24663 ;;Total ram usage:        0 bytes
 24664 ;; Hardware stack levels used:    1
 24665 ;; Hardware stack levels required when called:   12
 24666 ;; This function calls:
 24667 ;;		_GenerateEvt
 24668 ;; This function is called by:
 24669 ;;		_MyApp_Task
 24670 ;; This function uses a non-reentrant model
 24671 ;;
 24672                           
 24673                           	psect	text113
 24674  0068BC                     __ptext113:
 24675                           	opt stack 0
 24676  0068BC                     _Mdm_RequestSmsData:
 24677                           	opt stack 15
 24678                           
 24679                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 24680                           
 24681                           ; BSR set to: 0
 24682                           ;incstack = 0
 24683  0068BC  0EDB               	movlw	low _GetSmsText
 24684  0068BE  0100               	movlb	0	; () banked
 24685  0068C0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24686  0068C2  0E00               	movlw	high _GetSmsText
 24687  0068C4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24688  0068C6  ECE5  F033         	call	_GenerateEvt	;wreg free
 24689  0068CA  0012               	return		;funcret
 24690  0068CC                     __end_of_Mdm_RequestSmsData:
 24691                           	opt stack 0
 24692                           tosu	equ	0xFFF
 24693                           tosh	equ	0xFFE
 24694                           tosl	equ	0xFFD
 24695                           pclath	equ	0xFFA
 24696                           tblptru	equ	0xFF8
 24697                           tblptrh	equ	0xFF7
 24698                           tblptrl	equ	0xFF6
 24699                           tablat	equ	0xFF5
 24700                           prodh	equ	0xFF4
 24701                           prodl	equ	0xFF3
 24702                           intcon	equ	0xFF2
 24703                           intcon2	equ	0xFF1
 24704                           intcon3	equ	0xFF0
 24705                           indf0	equ	0xFEF
 24706                           postinc0	equ	0xFEE
 24707                           plusw0	equ	0xFEB
 24708                           fsr0h	equ	0xFEA
 24709                           fsr0l	equ	0xFE9
 24710                           wreg	equ	0xFE8
 24711                           indf1	equ	0xFE7
 24712                           postinc1	equ	0xFE6
 24713                           postdec1	equ	0xFE5
 24714                           fsr1h	equ	0xFE2
 24715                           fsr1l	equ	0xFE1
 24716                           indf2	equ	0xFDF
 24717                           postinc2	equ	0xFDE
 24718                           postdec2	equ	0xFDD
 24719                           plusw2	equ	0xFDB
 24720                           fsr2h	equ	0xFDA
 24721                           fsr2l	equ	0xFD9
 24722                           status	equ	0xFD8
 24723                           
 24724 ;; *************** function _Mdm_IsSmsReceived *****************
 24725 ;; Defined at:
 24726 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24727 ;; Parameters:    Size  Location     Type
 24728 ;;		None
 24729 ;; Auto vars:     Size  Location     Type
 24730 ;;  Ret             1   33[BANK0 ] enum E8928
 24731 ;; Return value:  Size  Location     Type
 24732 ;;                  1    wreg      enum E8928
 24733 ;; Registers used:
 24734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24735 ;; Tracked objects:
 24736 ;;		On entry : 0/0
 24737 ;;		On exit  : 0/0
 24738 ;;		Unchanged: 0/0
 24739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24743 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24744 ;;Total ram usage:        1 bytes
 24745 ;; Hardware stack levels used:    1
 24746 ;; Hardware stack levels required when called:   12
 24747 ;; This function calls:
 24748 ;;		_ReceiveEvt
 24749 ;; This function is called by:
 24750 ;;		_MyApp_Task
 24751 ;; This function uses a non-reentrant model
 24752 ;;
 24753                           
 24754                           	psect	text114
 24755  00654A                     __ptext114:
 24756                           	opt stack 0
 24757  00654A                     _Mdm_IsSmsReceived:
 24758                           	opt stack 15
 24759                           
 24760                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 24761                           
 24762                           ;incstack = 0
 24763  00654A  0E00               	movlw	0
 24764  00654C  0100               	movlb	0	; () banked
 24765  00654E  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24766                           
 24767                           ; BSR set to: 0
 24768                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 24769  006550  0EDC               	movlw	low _SmsEvent
 24770  006552  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24771  006554  0E00               	movlw	high _SmsEvent
 24772  006556  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24773  006558  ECF0  F031         	call	_ReceiveEvt	;wreg free
 24774  00655C  0900               	iorlw	0
 24775  00655E  B4D8               	btfsc	status,2,c
 24776  006560  D003               	goto	l1136
 24777                           
 24778                           ;mdm_gsm_gprs.c: 947: {
 24779                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 24780  006562  0E01               	movlw	1
 24781  006564  0100               	movlb	0	; () banked
 24782  006566  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24783  006568                     l1136:
 24784                           
 24785                           ;mdm_gsm_gprs.c: 949: }
 24786                           ;mdm_gsm_gprs.c: 951: return Ret;
 24787  006568  0100               	movlb	0	; () banked
 24788  00656A  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 24789  00656C  0012               	return	
 24790  00656E                     __end_of_Mdm_IsSmsReceived:
 24791                           	opt stack 0
 24792                           tosu	equ	0xFFF
 24793                           tosh	equ	0xFFE
 24794                           tosl	equ	0xFFD
 24795                           pclath	equ	0xFFA
 24796                           tblptru	equ	0xFF8
 24797                           tblptrh	equ	0xFF7
 24798                           tblptrl	equ	0xFF6
 24799                           tablat	equ	0xFF5
 24800                           prodh	equ	0xFF4
 24801                           prodl	equ	0xFF3
 24802                           intcon	equ	0xFF2
 24803                           intcon2	equ	0xFF1
 24804                           intcon3	equ	0xFF0
 24805                           indf0	equ	0xFEF
 24806                           postinc0	equ	0xFEE
 24807                           plusw0	equ	0xFEB
 24808                           fsr0h	equ	0xFEA
 24809                           fsr0l	equ	0xFE9
 24810                           wreg	equ	0xFE8
 24811                           indf1	equ	0xFE7
 24812                           postinc1	equ	0xFE6
 24813                           postdec1	equ	0xFE5
 24814                           fsr1h	equ	0xFE2
 24815                           fsr1l	equ	0xFE1
 24816                           indf2	equ	0xFDF
 24817                           postinc2	equ	0xFDE
 24818                           postdec2	equ	0xFDD
 24819                           plusw2	equ	0xFDB
 24820                           fsr2h	equ	0xFDA
 24821                           fsr2l	equ	0xFD9
 24822                           status	equ	0xFD8
 24823                           
 24824 ;; *************** function _Mdm_GetSmsData *****************
 24825 ;; Defined at:
 24826 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24827 ;; Parameters:    Size  Location     Type
 24828 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 24829 ;;		 -> smsText(20), 
 24830 ;; Auto vars:     Size  Location     Type
 24831 ;;  GetSmsStatus    1   49[BANK0 ] enum E8920
 24832 ;; Return value:  Size  Location     Type
 24833 ;;                  1    wreg      enum E8920
 24834 ;; Registers used:
 24835 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24836 ;; Tracked objects:
 24837 ;;		On entry : 0/0
 24838 ;;		On exit  : 0/0
 24839 ;;		Unchanged: 0/0
 24840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;Total ram usage:        3 bytes
 24846 ;; Hardware stack levels used:    1
 24847 ;; Hardware stack levels required when called:   12
 24848 ;; This function calls:
 24849 ;;		_ReceiveEvt
 24850 ;;		_StringCopy
 24851 ;; This function is called by:
 24852 ;;		_MyApp_Task
 24853 ;; This function uses a non-reentrant model
 24854 ;;
 24855                           
 24856                           	psect	text115
 24857  00546C                     __ptext115:
 24858                           	opt stack 0
 24859  00546C                     _Mdm_GetSmsData:
 24860                           	opt stack 15
 24861                           
 24862                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 24863                           
 24864                           ; BSR set to: 0
 24865                           ;incstack = 0
 24866  00546C  0E00               	movlw	0
 24867  00546E  0100               	movlb	0	; () banked
 24868  005470  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24869                           
 24870                           ; BSR set to: 0
 24871                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 24872  005472  0EDA               	movlw	low _SmsTxtReady
 24873  005474  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24874  005476  0E00               	movlw	high _SmsTxtReady
 24875  005478  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24876  00547A  ECF0  F031         	call	_ReceiveEvt	;wreg free
 24877  00547E  0900               	iorlw	0
 24878  005480  B4D8               	btfsc	status,2,c
 24879  005482  D025               	goto	l1129
 24880                           
 24881                           ;mdm_gsm_gprs.c: 898: {
 24882                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 24883  005484  0E50               	movlw	low (_Mdm_SmsRx+80)
 24884  005486  0100               	movlb	0	; () banked
 24885  005488  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 24886  00548A  0E07               	movlw	high (_Mdm_SmsRx+80)
 24887  00548C  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24888  00548E  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 24889  005492  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 24890  005496  0E01               	movlw	1
 24891  005498  0107               	movlb	7	; () banked
 24892  00549A  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 24893  00549C  0100               	movlb	0	; () banked
 24894  00549E  6F89               	movwf	StringCopy@Len& (0+255),b
 24895  0054A0  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24896  0054A2  0E00               	movlw	0
 24897  0054A4  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 24898  0054A6  EC03  F02B         	call	_StringCopy	;wreg free
 24899                           
 24900                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 24901  0054AA  0E15               	movlw	low (_Mdm_SmsRx+21)
 24902  0054AC  0100               	movlb	0	; () banked
 24903  0054AE  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 24904  0054B0  0E07               	movlw	high (_Mdm_SmsRx+21)
 24905  0054B2  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24906  0054B4  0E35               	movlw	low _callerNumber
 24907  0054B6  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24908  0054B8  0E03               	movlw	high _callerNumber
 24909  0054BA  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24910  0054BC  0E00               	movlw	0
 24911  0054BE  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 24912  0054C0  0E0D               	movlw	13
 24913  0054C2  6F89               	movwf	StringCopy@Len& (0+255),b
 24914  0054C4  EC03  F02B         	call	_StringCopy	;wreg free
 24915                           
 24916                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 24917  0054C8  0E01               	movlw	1
 24918  0054CA  0100               	movlb	0	; () banked
 24919  0054CC  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24920  0054CE                     l1129:
 24921                           
 24922                           ;mdm_gsm_gprs.c: 904: }
 24923                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 24924                           
 24925                           ; BSR set to: 0
 24926  0054CE  0100               	movlb	0	; () banked
 24927  0054D0  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 24928  0054D2  0012               	return	
 24929  0054D4                     __end_of_Mdm_GetSmsData:
 24930                           	opt stack 0
 24931                           tosu	equ	0xFFF
 24932                           tosh	equ	0xFFE
 24933                           tosl	equ	0xFFD
 24934                           pclath	equ	0xFFA
 24935                           tblptru	equ	0xFF8
 24936                           tblptrh	equ	0xFF7
 24937                           tblptrl	equ	0xFF6
 24938                           tablat	equ	0xFF5
 24939                           prodh	equ	0xFF4
 24940                           prodl	equ	0xFF3
 24941                           intcon	equ	0xFF2
 24942                           intcon2	equ	0xFF1
 24943                           intcon3	equ	0xFF0
 24944                           indf0	equ	0xFEF
 24945                           postinc0	equ	0xFEE
 24946                           plusw0	equ	0xFEB
 24947                           fsr0h	equ	0xFEA
 24948                           fsr0l	equ	0xFE9
 24949                           wreg	equ	0xFE8
 24950                           indf1	equ	0xFE7
 24951                           postinc1	equ	0xFE6
 24952                           postdec1	equ	0xFE5
 24953                           fsr1h	equ	0xFE2
 24954                           fsr1l	equ	0xFE1
 24955                           indf2	equ	0xFDF
 24956                           postinc2	equ	0xFDE
 24957                           postdec2	equ	0xFDD
 24958                           plusw2	equ	0xFDB
 24959                           fsr2h	equ	0xFDA
 24960                           fsr2l	equ	0xFD9
 24961                           status	equ	0xFD8
 24962                           
 24963 ;; *************** function _Led_SetLedBlinkTime *****************
 24964 ;; Defined at:
 24965 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 24966 ;; Parameters:    Size  Location     Type
 24967 ;;  Led             1    wreg     unsigned char 
 24968 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 24969 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 24970 ;; Auto vars:     Size  Location     Type
 24971 ;;  Led             1   33[BANK0 ] unsigned char 
 24972 ;; Return value:  Size  Location     Type
 24973 ;;                  1    wreg      void 
 24974 ;; Registers used:
 24975 ;;		wreg, status,2, status,0
 24976 ;; Tracked objects:
 24977 ;;		On entry : 0/0
 24978 ;;		On exit  : 0/0
 24979 ;;		Unchanged: 0/0
 24980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24981 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24984 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24985 ;;Total ram usage:        5 bytes
 24986 ;; Hardware stack levels used:    1
 24987 ;; Hardware stack levels required when called:   11
 24988 ;; This function calls:
 24989 ;;		Nothing
 24990 ;; This function is called by:
 24991 ;;		_MyApp_Task
 24992 ;; This function uses a non-reentrant model
 24993 ;;
 24994                           
 24995                           	psect	text116
 24996  0059DC                     __ptext116:
 24997                           	opt stack 0
 24998  0059DC                     _Led_SetLedBlinkTime:
 24999                           	opt stack 16
 25000                           
 25001                           ; BSR set to: 0
 25002                           ;incstack = 0
 25003                           ;Led_SetLedBlinkTime@Led stored from wreg
 25004  0059DC  0100               	movlb	0	; () banked
 25005  0059DE  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 25006                           
 25007                           ;led.c: 374: switch (Led)
 25008  0059E0  D01B               	goto	l2142
 25009  0059E2                     l2143:
 25010                           
 25011                           ; BSR set to: 0
 25012                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 25013  0059E2  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 25014  0059E6  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 25015                           
 25016                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 25017  0059EA  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 25018  0059EE  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 25019                           
 25020                           ;led.c: 379: break;
 25021  0059F2  0012               	return	
 25022  0059F4                     l2145:
 25023                           
 25024                           ; BSR set to: 0
 25025                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 25026  0059F4  C07D  F364         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25027  0059F8  C07E  F365         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25028                           
 25029                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 25030  0059FC  C07F  F366         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25031  005A00  C080  F367         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25032                           
 25033                           ;led.c: 384: break;
 25034  005A04  0012               	return	
 25035  005A06                     l2146:
 25036                           
 25037                           ; BSR set to: 0
 25038                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 25039  005A06  C07D  F364         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25040  005A0A  C07E  F365         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25041                           
 25042                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 25043  005A0E  C07F  F366         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25044  005A12  C080  F367         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25045                           
 25046                           ; BSR set to: 0
 25047                           ;led.c: 393: }
 25048                           
 25049                           ; BSR set to: 0
 25050                           ;led.c: 392: break;
 25051                           
 25052                           ;led.c: 391: default:
 25053                           
 25054                           ;led.c: 389: break;
 25055  005A16  0012               	return	
 25056  005A18                     l2142:
 25057                           
 25058                           ; BSR set to: 0
 25059  005A18  0100               	movlb	0	; () banked
 25060  005A1A  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 25061                           
 25062                           ; Switch size 1, requested type "space"
 25063                           ; Number of cases is 3, Range of values is 1 to 3
 25064                           ; switch strategies available:
 25065                           ; Name         Instructions Cycles
 25066                           ; simple_byte           10     6 (average)
 25067                           ;	Chosen strategy is simple_byte
 25068  005A1C  0A01               	xorlw	1	; case 1
 25069  005A1E  B4D8               	btfsc	status,2,c
 25070  005A20  D7E0               	goto	l2143
 25071  005A22  0A03               	xorlw	3	; case 2
 25072  005A24  B4D8               	btfsc	status,2,c
 25073  005A26  D7E6               	goto	l2145
 25074  005A28  0A01               	xorlw	1	; case 3
 25075  005A2A  A4D8               	btfss	status,2,c
 25076  005A2C  0012               	return	
 25077  005A2E  D7EB               	goto	l2146
 25078  005A30                     __end_of_Led_SetLedBlinkTime:
 25079                           	opt stack 0
 25080                           tosu	equ	0xFFF
 25081                           tosh	equ	0xFFE
 25082                           tosl	equ	0xFFD
 25083                           pclath	equ	0xFFA
 25084                           tblptru	equ	0xFF8
 25085                           tblptrh	equ	0xFF7
 25086                           tblptrl	equ	0xFF6
 25087                           tablat	equ	0xFF5
 25088                           prodh	equ	0xFF4
 25089                           prodl	equ	0xFF3
 25090                           intcon	equ	0xFF2
 25091                           intcon2	equ	0xFF1
 25092                           intcon3	equ	0xFF0
 25093                           indf0	equ	0xFEF
 25094                           postinc0	equ	0xFEE
 25095                           plusw0	equ	0xFEB
 25096                           fsr0h	equ	0xFEA
 25097                           fsr0l	equ	0xFE9
 25098                           wreg	equ	0xFE8
 25099                           indf1	equ	0xFE7
 25100                           postinc1	equ	0xFE6
 25101                           postdec1	equ	0xFE5
 25102                           fsr1h	equ	0xFE2
 25103                           fsr1l	equ	0xFE1
 25104                           indf2	equ	0xFDF
 25105                           postinc2	equ	0xFDE
 25106                           postdec2	equ	0xFDD
 25107                           plusw2	equ	0xFDB
 25108                           fsr2h	equ	0xFDA
 25109                           fsr2l	equ	0xFD9
 25110                           status	equ	0xFD8
 25111                           
 25112 ;; *************** function _GetLastInteractionNumber *****************
 25113 ;; Defined at:
 25114 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25115 ;; Parameters:    Size  Location     Type
 25116 ;;		None
 25117 ;; Auto vars:     Size  Location     Type
 25118 ;;		None
 25119 ;; Return value:  Size  Location     Type
 25120 ;;                  2   29[BANK0 ] PTR unsigned char 
 25121 ;; Registers used:
 25122 ;;		wreg, status,2, status,0
 25123 ;; Tracked objects:
 25124 ;;		On entry : 0/0
 25125 ;;		On exit  : 0/0
 25126 ;;		Unchanged: 0/0
 25127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25131 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25132 ;;Total ram usage:        2 bytes
 25133 ;; Hardware stack levels used:    1
 25134 ;; Hardware stack levels required when called:   11
 25135 ;; This function calls:
 25136 ;;		Nothing
 25137 ;; This function is called by:
 25138 ;;		_MyApp_Task
 25139 ;; This function uses a non-reentrant model
 25140 ;;
 25141                           
 25142                           	psect	text117
 25143  006914                     __ptext117:
 25144                           	opt stack 0
 25145  006914                     _GetLastInteractionNumber:
 25146                           	opt stack 16
 25147                           
 25148                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 25149                           
 25150                           ; BSR set to: 0
 25151                           ;incstack = 0
 25152  006914  0E35               	movlw	low _callerNumber
 25153  006916  0100               	movlb	0	; () banked
 25154  006918  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 25155  00691A  0E03               	movlw	high _callerNumber
 25156  00691C  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 25157  00691E  0012               	return	
 25158  006920                     __end_of_GetLastInteractionNumber:
 25159                           	opt stack 0
 25160                           tosu	equ	0xFFF
 25161                           tosh	equ	0xFFE
 25162                           tosl	equ	0xFFD
 25163                           pclath	equ	0xFFA
 25164                           tblptru	equ	0xFF8
 25165                           tblptrh	equ	0xFF7
 25166                           tblptrl	equ	0xFF6
 25167                           tablat	equ	0xFF5
 25168                           prodh	equ	0xFF4
 25169                           prodl	equ	0xFF3
 25170                           intcon	equ	0xFF2
 25171                           intcon2	equ	0xFF1
 25172                           intcon3	equ	0xFF0
 25173                           indf0	equ	0xFEF
 25174                           postinc0	equ	0xFEE
 25175                           plusw0	equ	0xFEB
 25176                           fsr0h	equ	0xFEA
 25177                           fsr0l	equ	0xFE9
 25178                           wreg	equ	0xFE8
 25179                           indf1	equ	0xFE7
 25180                           postinc1	equ	0xFE6
 25181                           postdec1	equ	0xFE5
 25182                           fsr1h	equ	0xFE2
 25183                           fsr1l	equ	0xFE1
 25184                           indf2	equ	0xFDF
 25185                           postinc2	equ	0xFDE
 25186                           postdec2	equ	0xFDD
 25187                           plusw2	equ	0xFDB
 25188                           fsr2h	equ	0xFDA
 25189                           fsr2l	equ	0xFD9
 25190                           status	equ	0xFD8
 25191                           
 25192 ;; *************** function _GetCallerNumber *****************
 25193 ;; Defined at:
 25194 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25195 ;; Parameters:    Size  Location     Type
 25196 ;;		None
 25197 ;; Auto vars:     Size  Location     Type
 25198 ;;		None
 25199 ;; Return value:  Size  Location     Type
 25200 ;;                  2   35[BANK0 ] PTR unsigned char 
 25201 ;; Registers used:
 25202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25203 ;; Tracked objects:
 25204 ;;		On entry : 0/0
 25205 ;;		On exit  : 0/0
 25206 ;;		Unchanged: 0/0
 25207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25211 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25212 ;;Total ram usage:        2 bytes
 25213 ;; Hardware stack levels used:    1
 25214 ;; Hardware stack levels required when called:   12
 25215 ;; This function calls:
 25216 ;;		_ClearBuffer
 25217 ;;		_ReceiveEvt
 25218 ;; This function is called by:
 25219 ;;		_MyApp_Task
 25220 ;; This function uses a non-reentrant model
 25221 ;;
 25222                           
 25223                           	psect	text118
 25224  0061EE                     __ptext118:
 25225                           	opt stack 0
 25226  0061EE                     _GetCallerNumber:
 25227                           	opt stack 15
 25228                           
 25229                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 25230                           
 25231                           ; BSR set to: 0
 25232                           ;incstack = 0
 25233  0061EE  0EDD               	movlw	low _ClipEvent
 25234  0061F0  0100               	movlb	0	; () banked
 25235  0061F2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25236  0061F4  0E00               	movlw	high _ClipEvent
 25237  0061F6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25238  0061F8  ECF0  F031         	call	_ReceiveEvt	;wreg free
 25239  0061FC  0900               	iorlw	0
 25240  0061FE  A4D8               	btfss	status,2,c
 25241  006200  D00B               	goto	l1156
 25242                           
 25243                           ;mdm_gsm_gprs.c: 1040: {
 25244                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 25245  006202  0E35               	movlw	low _callerNumber
 25246  006204  0100               	movlb	0	; () banked
 25247  006206  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25248  006208  0E03               	movlw	high _callerNumber
 25249  00620A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25250  00620C  0E00               	movlw	0
 25251  00620E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25252  006210  0E0D               	movlw	13
 25253  006212  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25254  006214  EC12  F031         	call	_ClearBuffer	;wreg free
 25255  006218                     l1156:
 25256                           
 25257                           ;mdm_gsm_gprs.c: 1042: }
 25258                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 25259  006218  0E35               	movlw	low _callerNumber
 25260  00621A  0100               	movlb	0	; () banked
 25261  00621C  6F83               	movwf	?_GetCallerNumber& (0+255),b
 25262  00621E  0E03               	movlw	high _callerNumber
 25263  006220  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 25264  006222  0012               	return	
 25265  006224                     __end_of_GetCallerNumber:
 25266                           	opt stack 0
 25267                           tosu	equ	0xFFF
 25268                           tosh	equ	0xFFE
 25269                           tosl	equ	0xFFD
 25270                           pclath	equ	0xFFA
 25271                           tblptru	equ	0xFF8
 25272                           tblptrh	equ	0xFF7
 25273                           tblptrl	equ	0xFF6
 25274                           tablat	equ	0xFF5
 25275                           prodh	equ	0xFF4
 25276                           prodl	equ	0xFF3
 25277                           intcon	equ	0xFF2
 25278                           intcon2	equ	0xFF1
 25279                           intcon3	equ	0xFF0
 25280                           indf0	equ	0xFEF
 25281                           postinc0	equ	0xFEE
 25282                           plusw0	equ	0xFEB
 25283                           fsr0h	equ	0xFEA
 25284                           fsr0l	equ	0xFE9
 25285                           wreg	equ	0xFE8
 25286                           indf1	equ	0xFE7
 25287                           postinc1	equ	0xFE6
 25288                           postdec1	equ	0xFE5
 25289                           fsr1h	equ	0xFE2
 25290                           fsr1l	equ	0xFE1
 25291                           indf2	equ	0xFDF
 25292                           postinc2	equ	0xFDE
 25293                           postdec2	equ	0xFDD
 25294                           plusw2	equ	0xFDB
 25295                           fsr2h	equ	0xFDA
 25296                           fsr2l	equ	0xFD9
 25297                           status	equ	0xFD8
 25298                           
 25299 ;; *************** function _UartSetConfig *****************
 25300 ;; Defined at:
 25301 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25302 ;; Parameters:    Size  Location     Type
 25303 ;;		None
 25304 ;; Auto vars:     Size  Location     Type
 25305 ;;		None
 25306 ;; Return value:  Size  Location     Type
 25307 ;;                  1    wreg      void 
 25308 ;; Registers used:
 25309 ;;		wreg, status,2
 25310 ;; Tracked objects:
 25311 ;;		On entry : 0/0
 25312 ;;		On exit  : 0/0
 25313 ;;		Unchanged: 0/0
 25314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25319 ;;Total ram usage:        0 bytes
 25320 ;; Hardware stack levels used:    1
 25321 ;; Hardware stack levels required when called:   11
 25322 ;; This function calls:
 25323 ;;		Nothing
 25324 ;; This function is called by:
 25325 ;;		_Mdm_MainTask
 25326 ;; This function uses a non-reentrant model
 25327 ;;
 25328                           
 25329                           	psect	text119
 25330  005780                     __ptext119:
 25331                           	opt stack 0
 25332  005780                     _UartSetConfig:
 25333                           	opt stack 16
 25334                           
 25335                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 25336                           
 25337                           ; BSR set to: 0
 25338                           ;incstack = 0
 25339  005780  0E01               	movlw	1
 25340  005782  0103               	movlb	3	; () banked
 25341  005784  6F20               	movwf	_UartConfig& (0+255),b
 25342                           
 25343                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 25344  005786  0E00               	movlw	0
 25345  005788  6F21               	movwf	(_UartConfig+1)& (0+255),b
 25346                           
 25347                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 25348  00578A  0E00               	movlw	0
 25349  00578C  6F22               	movwf	(_UartConfig+2)& (0+255),b
 25350                           
 25351                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 25352  00578E  0E00               	movlw	0
 25353  005790  6F23               	movwf	(_UartConfig+3)& (0+255),b
 25354                           
 25355                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 25356  005792  0E00               	movlw	0
 25357  005794  6F24               	movwf	(_UartConfig+4)& (0+255),b
 25358                           
 25359                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 25360  005796  0E00               	movlw	0
 25361  005798  6F25               	movwf	(_UartConfig+5)& (0+255),b
 25362                           
 25363                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 25364  00579A  0E01               	movlw	1
 25365  00579C  6F26               	movwf	(_UartConfig+6)& (0+255),b
 25366                           
 25367                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 25368  00579E  0E01               	movlw	1
 25369  0057A0  6F27               	movwf	(_UartConfig+7)& (0+255),b
 25370                           
 25371                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 25372  0057A2  0E00               	movlw	0
 25373  0057A4  6F28               	movwf	(_UartConfig+8)& (0+255),b
 25374                           
 25375                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 25376  0057A6  0E00               	movlw	0
 25377  0057A8  6F29               	movwf	(_UartConfig+9)& (0+255),b
 25378                           
 25379                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 25380  0057AA  0E00               	movlw	0
 25381  0057AC  6F2A               	movwf	(_UartConfig+10)& (0+255),b
 25382                           
 25383                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25384  0057AE  0E00               	movlw	0
 25385  0057B0  6F2B               	movwf	(_UartConfig+11)& (0+255),b
 25386                           
 25387                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25388  0057B2  0E01               	movlw	1
 25389  0057B4  6F2C               	movwf	(_UartConfig+12)& (0+255),b
 25390                           
 25391                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 25392  0057B6  0E00               	movlw	0
 25393  0057B8  6F2D               	movwf	(_UartConfig+13)& (0+255),b
 25394  0057BA  0E6C               	movlw	108
 25395  0057BC  6F2E               	movwf	(_UartConfig+14)& (0+255),b
 25396  0057BE  0EDC               	movlw	220
 25397  0057C0  6F2F               	movwf	(_UartConfig+15)& (0+255),b
 25398  0057C2  0E02               	movlw	2
 25399  0057C4  6F30               	movwf	(_UartConfig+16)& (0+255),b
 25400                           
 25401                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25402  0057C6  0E80               	movlw	128
 25403  0057C8  6F31               	movwf	(_UartConfig+17)& (0+255),b
 25404  0057CA  0E25               	movlw	37
 25405  0057CC  6F32               	movwf	(_UartConfig+18)& (0+255),b
 25406  0057CE  0E00               	movlw	0
 25407  0057D0  6F33               	movwf	(_UartConfig+19)& (0+255),b
 25408  0057D2  0E00               	movlw	0
 25409  0057D4  6F34               	movwf	(_UartConfig+20)& (0+255),b
 25410                           
 25411                           ; BSR set to: 3
 25412  0057D6  0012               	return		;funcret
 25413  0057D8                     __end_of_UartSetConfig:
 25414                           	opt stack 0
 25415                           tosu	equ	0xFFF
 25416                           tosh	equ	0xFFE
 25417                           tosl	equ	0xFFD
 25418                           pclath	equ	0xFFA
 25419                           tblptru	equ	0xFF8
 25420                           tblptrh	equ	0xFF7
 25421                           tblptrl	equ	0xFF6
 25422                           tablat	equ	0xFF5
 25423                           prodh	equ	0xFF4
 25424                           prodl	equ	0xFF3
 25425                           intcon	equ	0xFF2
 25426                           intcon2	equ	0xFF1
 25427                           intcon3	equ	0xFF0
 25428                           indf0	equ	0xFEF
 25429                           postinc0	equ	0xFEE
 25430                           plusw0	equ	0xFEB
 25431                           fsr0h	equ	0xFEA
 25432                           fsr0l	equ	0xFE9
 25433                           wreg	equ	0xFE8
 25434                           indf1	equ	0xFE7
 25435                           postinc1	equ	0xFE6
 25436                           postdec1	equ	0xFE5
 25437                           fsr1h	equ	0xFE2
 25438                           fsr1l	equ	0xFE1
 25439                           indf2	equ	0xFDF
 25440                           postinc2	equ	0xFDE
 25441                           postdec2	equ	0xFDD
 25442                           plusw2	equ	0xFDB
 25443                           fsr2h	equ	0xFDA
 25444                           fsr2l	equ	0xFD9
 25445                           status	equ	0xFD8
 25446                           
 25447 ;; *************** function _TurnOnModem *****************
 25448 ;; Defined at:
 25449 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25450 ;; Parameters:    Size  Location     Type
 25451 ;;		None
 25452 ;; Auto vars:     Size  Location     Type
 25453 ;;		None
 25454 ;; Return value:  Size  Location     Type
 25455 ;;                  1    wreg      void 
 25456 ;; Registers used:
 25457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25458 ;; Tracked objects:
 25459 ;;		On entry : 0/0
 25460 ;;		On exit  : 0/0
 25461 ;;		Unchanged: 0/0
 25462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25467 ;;Total ram usage:        0 bytes
 25468 ;; Hardware stack levels used:    1
 25469 ;; Hardware stack levels required when called:   12
 25470 ;; This function calls:
 25471 ;;		_GenerateEvt
 25472 ;; This function is called by:
 25473 ;;		_Mdm_MainTask
 25474 ;; This function uses a non-reentrant model
 25475 ;;
 25476                           
 25477                           	psect	text120
 25478  005D4E                     __ptext120:
 25479                           	opt stack 0
 25480  005D4E                     _TurnOnModem:
 25481                           	opt stack 15
 25482                           
 25483                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 25484                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 25485                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 25486                           
 25487                           ; BSR set to: 3
 25488                           ;incstack = 0
 25489  005D4E  D01B               	goto	l1009
 25490  005D50                     
 25491                           ;mdm_gsm_gprs.c: 385: Counter++;
 25492  005D50  0102               	movlb	2	; () banked
 25493  005D52  4BD8               	infsnz	TurnOnModem@Counter& (0+255),f,b
 25494  005D54  2BD9               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 25495                           
 25496                           ; BSR set to: 2
 25497                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 25498  005D56  0EB8               	movlw	184
 25499  005D58  5DD8               	subwf	TurnOnModem@Counter& (0+255),w,b
 25500  005D5A  0E0B               	movlw	11
 25501  005D5C  59D9               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 25502  005D5E  A0D8               	btfss	status,0,c
 25503  005D60  0012               	return	
 25504                           
 25505                           ; BSR set to: 2
 25506                           ;mdm_gsm_gprs.c: 388: {
 25507                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 25508  005D62  0E01               	movlw	1
 25509  005D64  0101               	movlb	1	; () banked
 25510  005D66  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 25511                           
 25512                           ; BSR set to: 1
 25513                           ;mdm_gsm_gprs.c: 391: }
 25514                           ;mdm_gsm_gprs.c: 392: break;
 25515  005D68  0012               	return	
 25516  005D6A                     
 25517                           ; BSR set to: 1
 25518                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 25519                           
 25520                           ; BSR set to: 1
 25521  005D6A  0EE0               	movlw	low _MdmOnOffPulseRequest
 25522  005D6C  0100               	movlb	0	; () banked
 25523  005D6E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25524  005D70  0E00               	movlw	high _MdmOnOffPulseRequest
 25525  005D72  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25526  005D74  ECE5  F033         	call	_GenerateEvt	;wreg free
 25527                           
 25528                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 25529  005D78  0E01               	movlw	1
 25530  005D7A  0100               	movlb	0	; () banked
 25531  005D7C  6FD0               	movwf	_MdmStatus& (0+255),b
 25532                           
 25533                           ; BSR set to: 0
 25534                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 25535  005D7E  0E02               	movlw	2
 25536  005D80  0101               	movlb	1	; () banked
 25537  005D82  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 25538                           
 25539                           ; BSR set to: 1
 25540                           ;mdm_gsm_gprs.c: 408: }
 25541                           
 25542                           ; BSR set to: 1
 25543                           ;mdm_gsm_gprs.c: 407: break;
 25544                           
 25545                           ;mdm_gsm_gprs.c: 406: default:
 25546                           
 25547                           ; BSR set to: 1
 25548                           ;mdm_gsm_gprs.c: 404: break;
 25549                           
 25550                           ;mdm_gsm_gprs.c: 403: case Stop:
 25551                           
 25552                           ;mdm_gsm_gprs.c: 401: break;
 25553  005D84  0012               	return	
 25554  005D86                     l1009:
 25555                           
 25556                           ; BSR set to: 1
 25557  005D86  0101               	movlb	1	; () banked
 25558  005D88  51F4               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 25559                           
 25560                           ; Switch size 1, requested type "space"
 25561                           ; Number of cases is 3, Range of values is 0 to 2
 25562                           ; switch strategies available:
 25563                           ; Name         Instructions Cycles
 25564                           ; simple_byte           10     6 (average)
 25565                           ;	Chosen strategy is simple_byte
 25566  005D8A  0A00               	xorlw	0	; case 0
 25567  005D8C  B4D8               	btfsc	status,2,c
 25568  005D8E  D7E0               	goto	l1010
 25569  005D90  0A01               	xorlw	1	; case 1
 25570  005D92  B4D8               	btfsc	status,2,c
 25571  005D94  D7EA               	goto	l1013
 25572  005D96  0A03               	xorlw	3	; case 2
 25573  005D98  0012               	return	
 25574  005D9A                     __end_of_TurnOnModem:
 25575                           	opt stack 0
 25576                           tosu	equ	0xFFF
 25577                           tosh	equ	0xFFE
 25578                           tosl	equ	0xFFD
 25579                           pclath	equ	0xFFA
 25580                           tblptru	equ	0xFF8
 25581                           tblptrh	equ	0xFF7
 25582                           tblptrl	equ	0xFF6
 25583                           tablat	equ	0xFF5
 25584                           prodh	equ	0xFF4
 25585                           prodl	equ	0xFF3
 25586                           intcon	equ	0xFF2
 25587                           intcon2	equ	0xFF1
 25588                           intcon3	equ	0xFF0
 25589                           indf0	equ	0xFEF
 25590                           postinc0	equ	0xFEE
 25591                           plusw0	equ	0xFEB
 25592                           fsr0h	equ	0xFEA
 25593                           fsr0l	equ	0xFE9
 25594                           wreg	equ	0xFE8
 25595                           indf1	equ	0xFE7
 25596                           postinc1	equ	0xFE6
 25597                           postdec1	equ	0xFE5
 25598                           fsr1h	equ	0xFE2
 25599                           fsr1l	equ	0xFE1
 25600                           indf2	equ	0xFDF
 25601                           postinc2	equ	0xFDE
 25602                           postdec2	equ	0xFDD
 25603                           plusw2	equ	0xFDB
 25604                           fsr2h	equ	0xFDA
 25605                           fsr2l	equ	0xFD9
 25606                           status	equ	0xFD8
 25607                           
 25608 ;; *************** function _SendSmsSm *****************
 25609 ;; Defined at:
 25610 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25611 ;; Parameters:    Size  Location     Type
 25612 ;;		None
 25613 ;; Auto vars:     Size  Location     Type
 25614 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25615 ;; Return value:  Size  Location     Type
 25616 ;;                  1    wreg      void 
 25617 ;; Registers used:
 25618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25619 ;; Tracked objects:
 25620 ;;		On entry : 0/0
 25621 ;;		On exit  : 0/0
 25622 ;;		Unchanged: 0/0
 25623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25625 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25627 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25628 ;;Total ram usage:       52 bytes
 25629 ;; Hardware stack levels used:    1
 25630 ;; Hardware stack levels required when called:   14
 25631 ;; This function calls:
 25632 ;;		_OsTmr_GetTimerStatus
 25633 ;;		_OsTmr_StartTimer
 25634 ;;		_ReceiveEvt
 25635 ;;		_StringCopy
 25636 ;;		_Uart_WriteStringLen
 25637 ;; This function is called by:
 25638 ;;		_Mdm_MainTask
 25639 ;; This function uses a non-reentrant model
 25640 ;;
 25641                           
 25642                           	psect	text121
 25643  001D5C                     __ptext121:
 25644                           	opt stack 0
 25645  001D5C                     _SendSmsSm:
 25646                           	opt stack 13
 25647                           
 25648                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 25649                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 25650                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25651                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 25652                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 25653                           
 25654                           ;incstack = 0
 25655  001D5C  0E03               	movlw	3
 25656  001D5E  0100               	movlb	0	; () banked
 25657  001D60  19D0               	xorwf	_MdmStatus& (0+255),w,b
 25658  001D62  A4D8               	btfss	status,2,c
 25659  001D64  0012               	return	
 25660  001D66  D0C1               	goto	l1091
 25661  001D68                     
 25662                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 25663                           
 25664                           ; BSR set to: 0
 25665  001D68  0EDF               	movlw	low _SendSmsEvent
 25666  001D6A  0100               	movlb	0	; () banked
 25667  001D6C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25668  001D6E  0E00               	movlw	high _SendSmsEvent
 25669  001D70  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25670  001D72  ECF0  F031         	call	_ReceiveEvt	;wreg free
 25671  001D76  0900               	iorlw	0
 25672  001D78  B4D8               	btfsc	status,2,c
 25673  001D7A  0012               	return	
 25674                           
 25675                           ;mdm_gsm_gprs.c: 671: {
 25676                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 25677  001D7C  0E01               	movlw	1
 25678  001D7E  0101               	movlb	1	; () banked
 25679  001D80  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25680                           
 25681                           ; BSR set to: 1
 25682                           ;mdm_gsm_gprs.c: 674: }
 25683                           ;mdm_gsm_gprs.c: 675: break;
 25684  001D82  0012               	return	
 25685  001D84                     
 25686                           ; BSR set to: 1
 25687                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 25688                           
 25689                           ; BSR set to: 1
 25690  001D84  0ECE               	movlw	low STR_5
 25691  001D86  0100               	movlb	0	; () banked
 25692  001D88  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25693  001D8A  0EFF               	movlw	high STR_5
 25694  001D8C  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25695  001D8E  0E00               	movlw	low SendSmsSm@UartMessage
 25696  001D90  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25697  001D92  0E01               	movlw	high SendSmsSm@UartMessage
 25698  001D94  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25699  001D96  0E00               	movlw	0
 25700  001D98  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 25701  001D9A  0E09               	movlw	9
 25702  001D9C  6F89               	movwf	StringCopy@Len& (0+255),b
 25703  001D9E  EC03  F02B         	call	_StringCopy	;wreg free
 25704                           
 25705                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 25706  001DA2  0E72               	movlw	low _PhoneNumber
 25707  001DA4  0100               	movlb	0	; () banked
 25708  001DA6  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25709  001DA8  0E05               	movlw	high _PhoneNumber
 25710  001DAA  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25711  001DAC  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 25712  001DAE  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25713  001DB0  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 25714  001DB2  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25715  001DB4  C0D1  F089         	movff	_PhoneNumbLen,StringCopy@Len
 25716  001DB8  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25717  001DBA  EC03  F02B         	call	_StringCopy	;wreg free
 25718                           
 25719                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 25720  001DBE  0100               	movlb	0	; () banked
 25721  001DC0  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25722  001DC2  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25723  001DC4  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25724  001DC6  0E09               	movlw	9
 25725  001DC8  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25726  001DCA  0E00               	movlw	0
 25727  001DCC  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25728  001DCE  0E00               	movlw	low SendSmsSm@UartMessage
 25729  001DD0  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25730  001DD2  6ED9               	movwf	fsr2l,c
 25731  001DD4  0E01               	movlw	high SendSmsSm@UartMessage
 25732  001DD6  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25733  001DD8  6EDA               	movwf	fsr2h,c
 25734  001DDA  0E22               	movlw	34
 25735  001DDC  6EDF               	movwf	indf2,c
 25736                           
 25737                           ; BSR set to: 0
 25738                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 25739  001DDE  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25740  001DE0  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25741  001DE2  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25742  001DE4  0E0A               	movlw	10
 25743  001DE6  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25744  001DE8  0E00               	movlw	0
 25745  001DEA  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25746  001DEC  0E00               	movlw	low SendSmsSm@UartMessage
 25747  001DEE  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25748  001DF0  6ED9               	movwf	fsr2l,c
 25749  001DF2  0E01               	movlw	high SendSmsSm@UartMessage
 25750  001DF4  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25751  001DF6  6EDA               	movwf	fsr2h,c
 25752  001DF8  0E0D               	movlw	13
 25753  001DFA  6EDF               	movwf	indf2,c
 25754                           
 25755                           ; BSR set to: 0
 25756                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 25757  001DFC  0E00               	movlw	low SendSmsSm@UartMessage
 25758  001DFE  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25759  001E00  0E01               	movlw	high SendSmsSm@UartMessage
 25760  001E02  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25761  001E04  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25762  001E06  0F0B               	addlw	11
 25763  001E08  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25764  001E0A  0E01               	movlw	1
 25765  001E0C  EC02  F030         	call	_Uart_WriteStringLen
 25766                           
 25767                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 25768  001E10  0EE5               	movlw	low SendSmsSm@SwTimer
 25769  001E12  0100               	movlb	0	; () banked
 25770  001E14  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25771  001E16  0E03               	movlw	high SendSmsSm@SwTimer
 25772  001E18  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25773  001E1A  0EC4               	movlw	196
 25774  001E1C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25775  001E1E  0E09               	movlw	9
 25776  001E20  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25777  001E22  0E00               	movlw	0
 25778  001E24  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25779  001E26  0E00               	movlw	0
 25780  001E28  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25781  001E2A  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 25782                           
 25783                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 25784  001E2E  0E05               	movlw	5
 25785  001E30  0101               	movlb	1	; () banked
 25786  001E32  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25787                           
 25788                           ; BSR set to: 1
 25789                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 25790  001E34  0E02               	movlw	2
 25791  001E36  6FEF               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 25792                           
 25793                           ;mdm_gsm_gprs.c: 691: break;
 25794  001E38  0012               	return	
 25795  001E3A                     
 25796                           ; BSR set to: 1
 25797                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 25798                           
 25799                           ; BSR set to: 1
 25800  001E3A  0E0A               	movlw	10
 25801  001E3C  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 25802                           
 25803                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 25804  001E3E  0E0D               	movlw	13
 25805  001E40  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 25806                           
 25807                           ; BSR set to: 1
 25808                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 25809  001E42  0E00               	movlw	low SendSmsSm@UartMessage
 25810  001E44  0100               	movlb	0	; () banked
 25811  001E46  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25812  001E48  0E01               	movlw	high SendSmsSm@UartMessage
 25813  001E4A  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25814  001E4C  0E02               	movlw	2
 25815  001E4E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25816  001E50  0E01               	movlw	1
 25817  001E52  EC02  F030         	call	_Uart_WriteStringLen
 25818                           
 25819                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 25820  001E56  0E03               	movlw	3
 25821  001E58  0101               	movlb	1	; () banked
 25822  001E5A  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25823                           
 25824                           ;mdm_gsm_gprs.c: 701: break;
 25825  001E5C  0012               	return	
 25826  001E5E                     
 25827                           ; BSR set to: 1
 25828                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 25829                           
 25830                           ; BSR set to: 1
 25831  001E5E  0E3C               	movlw	low _NewStringReceived
 25832  001E60  0100               	movlb	0	; () banked
 25833  001E62  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25834  001E64  0E00               	movlw	high _NewStringReceived
 25835  001E66  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25836  001E68  ECF0  F031         	call	_ReceiveEvt	;wreg free
 25837  001E6C  0900               	iorlw	0
 25838  001E6E  B4D8               	btfsc	status,2,c
 25839  001E70  0012               	return	
 25840                           
 25841                           ;mdm_gsm_gprs.c: 706: {
 25842                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 25843  001E72  CC58  FFE8         	movff	_RxBuffer,wreg
 25844  001E76  0A3E               	xorlw	62
 25845  001E78  A4D8               	btfss	status,2,c
 25846  001E7A  0012               	return	
 25847                           
 25848                           ;mdm_gsm_gprs.c: 709: {
 25849                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 25850  001E7C  0E04               	movlw	4
 25851  001E7E  0101               	movlb	1	; () banked
 25852  001E80  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25853                           
 25854                           ; BSR set to: 1
 25855                           ;mdm_gsm_gprs.c: 712: }
 25856                           ;mdm_gsm_gprs.c: 713: }
 25857                           ;mdm_gsm_gprs.c: 714: break;
 25858                           
 25859                           ; BSR set to: 1
 25860  001E82  0012               	return	
 25861  001E84                     
 25862                           ; BSR set to: 1
 25863                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 25864                           
 25865                           ; BSR set to: 1
 25866  001E84  0EC8               	movlw	low _MessageText
 25867  001E86  0100               	movlb	0	; () banked
 25868  001E88  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25869  001E8A  0E08               	movlw	high _MessageText
 25870  001E8C  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25871  001E8E  0E00               	movlw	low SendSmsSm@UartMessage
 25872  001E90  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25873  001E92  0E01               	movlw	high SendSmsSm@UartMessage
 25874  001E94  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25875  001E96  C0D2  F089         	movff	_SmsLen,StringCopy@Len
 25876  001E9A  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25877  001E9C  EC03  F02B         	call	_StringCopy	;wreg free
 25878                           
 25879                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 25880  001EA0  0100               	movlb	0	; () banked
 25881  001EA2  51D2               	movf	_SmsLen& (0+255),w,b
 25882  001EA4  0D01               	mullw	1
 25883  001EA6  0E00               	movlw	low SendSmsSm@UartMessage
 25884  001EA8  24F3               	addwf	prodl,w,c
 25885  001EAA  6ED9               	movwf	fsr2l,c
 25886  001EAC  0E01               	movlw	high SendSmsSm@UartMessage
 25887  001EAE  20F4               	addwfc	prodh,w,c
 25888  001EB0  6EDA               	movwf	fsr2h,c
 25889  001EB2  0E1A               	movlw	26
 25890  001EB4  6EDF               	movwf	indf2,c
 25891                           
 25892                           ; BSR set to: 0
 25893                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 25894  001EB6  0E00               	movlw	low SendSmsSm@UartMessage
 25895  001EB8  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25896  001EBA  0E01               	movlw	high SendSmsSm@UartMessage
 25897  001EBC  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25898  001EBE  29D2               	incf	_SmsLen& (0+255),w,b
 25899  001EC0  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25900  001EC2  0E01               	movlw	1
 25901  001EC4  EC02  F030         	call	_Uart_WriteStringLen
 25902                           
 25903                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 25904  001EC8  0E00               	movlw	0
 25905  001ECA  0101               	movlb	1	; () banked
 25906  001ECC  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25907                           
 25908                           ;mdm_gsm_gprs.c: 725: break;
 25909  001ECE  0012               	return	
 25910  001ED0                     
 25911                           ; BSR set to: 1
 25912                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 25913                           
 25914                           ; BSR set to: 1
 25915  001ED0  0EE5               	movlw	low SendSmsSm@SwTimer
 25916  001ED2  0100               	movlb	0	; () banked
 25917  001ED4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25918  001ED6  0E03               	movlw	high SendSmsSm@SwTimer
 25919  001ED8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25920  001EDA  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 25921  001EDE  06E8               	decf	wreg,f,c
 25922  001EE0  A4D8               	btfss	status,2,c
 25923  001EE2  0012               	return	
 25924                           
 25925                           ;mdm_gsm_gprs.c: 730: {
 25926                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 25927  001EE4  C1EF  F1F0         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 25928                           
 25929                           ;mdm_gsm_gprs.c: 738: }
 25930                           
 25931                           ;mdm_gsm_gprs.c: 737: break;
 25932                           
 25933                           ;mdm_gsm_gprs.c: 736: default:
 25934                           
 25935                           ;mdm_gsm_gprs.c: 733: }
 25936                           ;mdm_gsm_gprs.c: 734: break;
 25937  001EE8  0012               	return	
 25938  001EEA                     l1091:
 25939  001EEA  0101               	movlb	1	; () banked
 25940  001EEC  51F0               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 25941                           
 25942                           ; Switch size 1, requested type "space"
 25943                           ; Number of cases is 6, Range of values is 0 to 5
 25944                           ; switch strategies available:
 25945                           ; Name         Instructions Cycles
 25946                           ; simple_byte           19    10 (average)
 25947                           ;	Chosen strategy is simple_byte
 25948  001EEE  0A00               	xorlw	0	; case 0
 25949  001EF0  B4D8               	btfsc	status,2,c
 25950  001EF2  D73A               	goto	l1092
 25951  001EF4  0A01               	xorlw	1	; case 1
 25952  001EF6  B4D8               	btfsc	status,2,c
 25953  001EF8  D745               	goto	l1095
 25954  001EFA  0A03               	xorlw	3	; case 2
 25955  001EFC  B4D8               	btfsc	status,2,c
 25956  001EFE  D79D               	goto	l1096
 25957  001F00  0A01               	xorlw	1	; case 3
 25958  001F02  B4D8               	btfsc	status,2,c
 25959  001F04  D7AC               	goto	l1097
 25960  001F06  0A07               	xorlw	7	; case 4
 25961  001F08  B4D8               	btfsc	status,2,c
 25962  001F0A  D7BC               	goto	l1100
 25963  001F0C  0A01               	xorlw	1	; case 5
 25964  001F0E  A4D8               	btfss	status,2,c
 25965                           
 25966                           ; BSR set to: 1
 25967  001F10  0012               	return	
 25968  001F12  D7DE               	goto	l1101
 25969  001F14                     __end_of_SendSmsSm:
 25970                           	opt stack 0
 25971                           tosu	equ	0xFFF
 25972                           tosh	equ	0xFFE
 25973                           tosl	equ	0xFFD
 25974                           pclath	equ	0xFFA
 25975                           tblptru	equ	0xFF8
 25976                           tblptrh	equ	0xFF7
 25977                           tblptrl	equ	0xFF6
 25978                           tablat	equ	0xFF5
 25979                           prodh	equ	0xFF4
 25980                           prodl	equ	0xFF3
 25981                           intcon	equ	0xFF2
 25982                           intcon2	equ	0xFF1
 25983                           intcon3	equ	0xFF0
 25984                           indf0	equ	0xFEF
 25985                           postinc0	equ	0xFEE
 25986                           plusw0	equ	0xFEB
 25987                           fsr0h	equ	0xFEA
 25988                           fsr0l	equ	0xFE9
 25989                           wreg	equ	0xFE8
 25990                           indf1	equ	0xFE7
 25991                           postinc1	equ	0xFE6
 25992                           postdec1	equ	0xFE5
 25993                           fsr1h	equ	0xFE2
 25994                           fsr1l	equ	0xFE1
 25995                           indf2	equ	0xFDF
 25996                           postinc2	equ	0xFDE
 25997                           postdec2	equ	0xFDD
 25998                           plusw2	equ	0xFDB
 25999                           fsr2h	equ	0xFDA
 26000                           fsr2l	equ	0xFD9
 26001                           status	equ	0xFD8
 26002                           
 26003 ;; *************** function _Uart_WriteStringLen *****************
 26004 ;; Defined at:
 26005 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26006 ;; Parameters:    Size  Location     Type
 26007 ;;  Module          1    wreg     unsigned char 
 26008 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 26009 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 26010 ;;  Len             1   34[BANK0 ] unsigned char 
 26011 ;; Auto vars:     Size  Location     Type
 26012 ;;  Module          1   36[BANK0 ] unsigned char 
 26013 ;;  Index           1   35[BANK0 ] unsigned char 
 26014 ;; Return value:  Size  Location     Type
 26015 ;;                  1    wreg      void 
 26016 ;; Registers used:
 26017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26018 ;; Tracked objects:
 26019 ;;		On entry : 0/0
 26020 ;;		On exit  : 0/0
 26021 ;;		Unchanged: 0/0
 26022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26023 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26026 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26027 ;;Total ram usage:        5 bytes
 26028 ;; Hardware stack levels used:    1
 26029 ;; Hardware stack levels required when called:   12
 26030 ;; This function calls:
 26031 ;;		_UartTxBufferStatus
 26032 ;;		_UartWriteByte
 26033 ;; This function is called by:
 26034 ;;		_SendSmsSm
 26035 ;;		_GsmGprsTerminal
 26036 ;; This function uses a non-reentrant model
 26037 ;;
 26038                           
 26039                           	psect	text122
 26040  006004                     __ptext122:
 26041                           	opt stack 0
 26042  006004                     _Uart_WriteStringLen:
 26043                           	opt stack 14
 26044                           
 26045                           ;incstack = 0
 26046                           ;Uart_WriteStringLen@Module stored from wreg
 26047  006004  0100               	movlb	0	; () banked
 26048  006006  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 26049                           
 26050                           ;uart_drv.c: 544: UINT8 Index;
 26051                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 26052  006008  0E00               	movlw	0
 26053  00600A  0100               	movlb	0	; () banked
 26054  00600C  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 26055  00600E  D015               	goto	l715
 26056  006010                     
 26057                           ; BSR set to: 0
 26058                           ;uart_drv.c: 547: {
 26059                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 26060                           
 26061                           ; BSR set to: 0
 26062  006010  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 26063  006014  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 26064  006018  50DF               	movf	indf2,w,c
 26065  00601A  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 26066  00601C  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 26067  00601E  EC4F  F033         	call	_UartWriteByte
 26068                           
 26069                           ;uart_drv.c: 551: StringToWrite++;
 26070  006022  0100               	movlb	0	; () banked
 26071  006024  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 26072  006026  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 26073  006028                     
 26074                           ; BSR set to: 0
 26075                           
 26076                           ; BSR set to: 0
 26077  006028  0100               	movlb	0	; () banked
 26078  00602A  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 26079  00602C  EC33  F02E         	call	_UartTxBufferStatus
 26080  006030  06E8               	decf	wreg,f,c
 26081  006032  B4D8               	btfsc	status,2,c
 26082  006034  D7F9               	goto	l718
 26083  006036  0100               	movlb	0	; () banked
 26084  006038  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 26085  00603A                     l715:
 26086                           
 26087                           ; BSR set to: 0
 26088                           
 26089                           ; BSR set to: 0
 26090  00603A  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 26091  00603C  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 26092  00603E  B0D8               	btfsc	status,0,c
 26093  006040  0012               	return	
 26094  006042  D7E6               	goto	l716
 26095  006044                     __end_of_Uart_WriteStringLen:
 26096                           	opt stack 0
 26097                           tosu	equ	0xFFF
 26098                           tosh	equ	0xFFE
 26099                           tosl	equ	0xFFD
 26100                           pclath	equ	0xFFA
 26101                           tblptru	equ	0xFF8
 26102                           tblptrh	equ	0xFF7
 26103                           tblptrl	equ	0xFF6
 26104                           tablat	equ	0xFF5
 26105                           prodh	equ	0xFF4
 26106                           prodl	equ	0xFF3
 26107                           intcon	equ	0xFF2
 26108                           intcon2	equ	0xFF1
 26109                           intcon3	equ	0xFF0
 26110                           indf0	equ	0xFEF
 26111                           postinc0	equ	0xFEE
 26112                           plusw0	equ	0xFEB
 26113                           fsr0h	equ	0xFEA
 26114                           fsr0l	equ	0xFE9
 26115                           wreg	equ	0xFE8
 26116                           indf1	equ	0xFE7
 26117                           postinc1	equ	0xFE6
 26118                           postdec1	equ	0xFE5
 26119                           fsr1h	equ	0xFE2
 26120                           fsr1l	equ	0xFE1
 26121                           indf2	equ	0xFDF
 26122                           postinc2	equ	0xFDE
 26123                           postdec2	equ	0xFDD
 26124                           plusw2	equ	0xFDB
 26125                           fsr2h	equ	0xFDA
 26126                           fsr2l	equ	0xFD9
 26127                           status	equ	0xFD8
 26128                           
 26129 ;; *************** function _ModemEvtParser *****************
 26130 ;; Defined at:
 26131 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26132 ;; Parameters:    Size  Location     Type
 26133 ;;		None
 26134 ;; Auto vars:     Size  Location     Type
 26135 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 26136 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 26137 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 26138 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 26139 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 26140 ;;  Match           1   71[BANK0 ] unsigned char 
 26141 ;; Return value:  Size  Location     Type
 26142 ;;                  1    wreg      void 
 26143 ;; Registers used:
 26144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26145 ;; Tracked objects:
 26146 ;;		On entry : 0/0
 26147 ;;		On exit  : 0/0
 26148 ;;		Unchanged: 0/0
 26149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26151 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26153 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26154 ;;Total ram usage:       26 bytes
 26155 ;; Hardware stack levels used:    1
 26156 ;; Hardware stack levels required when called:   12
 26157 ;; This function calls:
 26158 ;;		_GenerateEvt
 26159 ;;		_ReceiveEvt
 26160 ;;		_StringCompare
 26161 ;;		_StringCopy
 26162 ;;		_Uart_ClearRxBuffer
 26163 ;; This function is called by:
 26164 ;;		_Mdm_MainTask
 26165 ;; This function uses a non-reentrant model
 26166 ;;
 26167                           
 26168                           	psect	text123
 26169  00209C                     __ptext123:
 26170                           	opt stack 0
 26171  00209C                     _ModemEvtParser:
 26172                           	opt stack 15
 26173                           
 26174                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 26175                           
 26176                           ; BSR set to: 0
 26177                           ;incstack = 0
 26178  00209C  C3C6  F0A3         	movff	ModemEvtParser@F9108,ModemEvtParser@RingString
 26179  0020A0  C3C7  F0A4         	movff	ModemEvtParser@F9108+1,ModemEvtParser@RingString+1
 26180  0020A4  C3C8  F0A5         	movff	ModemEvtParser@F9108+2,ModemEvtParser@RingString+2
 26181  0020A8  C3C9  F0A6         	movff	ModemEvtParser@F9108+3,ModemEvtParser@RingString+3
 26182                           
 26183                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 26184  0020AC  EE23  F0C1         	lfsr	2,ModemEvtParser@F9110
 26185  0020B0  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 26186  0020B4  0E04               	movlw	4
 26187  0020B6                     u14591:
 26188  0020B6  CFDB FFE3          	movff	plusw2,plusw1
 26189  0020BA  06E8               	decf	wreg,f,c
 26190  0020BC  E2FC               	bc	u14591
 26191                           
 26192                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 26193  0020BE  EE23  F0BC         	lfsr	2,ModemEvtParser@F9112
 26194  0020C2  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 26195  0020C6  0E04               	movlw	4
 26196  0020C8                     u14601:
 26197  0020C8  CFDB FFE3          	movff	plusw2,plusw1
 26198  0020CC  06E8               	decf	wreg,f,c
 26199  0020CE  E2FC               	bc	u14601
 26200                           
 26201                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 26202  0020D0  EE24  F0D6         	lfsr	2,ModemEvtParser@F9114
 26203  0020D4  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 26204  0020D8  0E09               	movlw	9
 26205  0020DA                     u14611:
 26206  0020DA  CFDB FFE3          	movff	plusw2,plusw1
 26207  0020DE  06E8               	decf	wreg,f,c
 26208  0020E0  E2FC               	bc	u14611
 26209                           
 26210                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 26211  0020E2  0E00               	movlw	0
 26212  0020E4  0100               	movlb	0	; () banked
 26213  0020E6  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 26214                           
 26215                           ; BSR set to: 0
 26216                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 26217  0020E8  0E00               	movlw	0
 26218  0020EA  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 26219                           
 26220                           ; BSR set to: 0
 26221                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 26222  0020EC  0E3B               	movlw	low _NewMdmEvtParserRequest
 26223  0020EE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26224  0020F0  0E00               	movlw	high _NewMdmEvtParserRequest
 26225  0020F2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26226  0020F4  ECF0  F031         	call	_ReceiveEvt	;wreg free
 26227  0020F8  0900               	iorlw	0
 26228  0020FA  B4D8               	btfsc	status,2,c
 26229  0020FC  0012               	return	
 26230                           
 26231                           ;mdm_gsm_gprs.c: 510: {
 26232                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 26233  0020FE  0E00               	movlw	0
 26234  002100  0100               	movlb	0	; () banked
 26235  002102  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 26236  002104                     l15057:
 26237                           
 26238                           ; BSR set to: 0
 26239  002104  0E03               	movlw	3
 26240  002106  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 26241  002108  D074               	goto	l1052
 26242  00210A  D083               	goto	u14680
 26243  00210C                     
 26244                           ; BSR set to: 0
 26245                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 26246                           
 26247                           ; BSR set to: 0
 26248  00210C  0EA3               	movlw	low ModemEvtParser@RingString
 26249  00210E  6F7D               	movwf	StringCompare@String1& (0+255),b
 26250  002110  0E00               	movlw	high ModemEvtParser@RingString
 26251  002112  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26252  002114  0E58               	movlw	low _RxBuffer
 26253  002116  6F7F               	movwf	StringCompare@String2& (0+255),b
 26254  002118  0E0C               	movlw	high _RxBuffer
 26255  00211A  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26256  00211C  0E00               	movlw	0
 26257  00211E  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26258  002120  0E04               	movlw	4
 26259  002122  6F81               	movwf	StringCompare@Len& (0+255),b
 26260  002124  EC6B  F02D         	call	_StringCompare	;wreg free
 26261  002128  0900               	iorlw	0
 26262  00212A  B4D8               	btfsc	status,2,c
 26263  00212C  D06F               	goto	l1055
 26264                           
 26265                           ;mdm_gsm_gprs.c: 518: {
 26266                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 26267  00212E  0EDE               	movlw	low _RingEvent
 26268  002130  0100               	movlb	0	; () banked
 26269  002132  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26270  002134  0E00               	movlw	high _RingEvent
 26271  002136  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26272  002138  ECE5  F033         	call	_GenerateEvt	;wreg free
 26273  00213C  D040               	goto	l15079
 26274  00213E                     
 26275                           ; BSR set to: 0
 26276                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 26277                           
 26278                           ; BSR set to: 0
 26279  00213E  0E99               	movlw	low ModemEvtParser@ClipString
 26280  002140  6F7D               	movwf	StringCompare@String1& (0+255),b
 26281  002142  0E00               	movlw	high ModemEvtParser@ClipString
 26282  002144  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26283  002146  0E58               	movlw	low _RxBuffer
 26284  002148  6F7F               	movwf	StringCompare@String2& (0+255),b
 26285  00214A  0E0C               	movlw	high _RxBuffer
 26286  00214C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26287  00214E  0E00               	movlw	0
 26288  002150  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26289  002152  0E05               	movlw	5
 26290  002154  6F81               	movwf	StringCompare@Len& (0+255),b
 26291  002156  EC6B  F02D         	call	_StringCompare	;wreg free
 26292  00215A  0900               	iorlw	0
 26293  00215C  B4D8               	btfsc	status,2,c
 26294  00215E  D056               	goto	l1055
 26295                           
 26296                           ;mdm_gsm_gprs.c: 529: {
 26297                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 26298  002160  0E60               	movlw	low (_RxBuffer+8)
 26299  002162  0100               	movlb	0	; () banked
 26300  002164  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26301  002166  0E0C               	movlw	high (_RxBuffer+8)
 26302  002168  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26303  00216A  0E35               	movlw	low _callerNumber
 26304  00216C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26305  00216E  0E03               	movlw	high _callerNumber
 26306  002170  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26307  002172  0E00               	movlw	0
 26308  002174  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26309  002176  0E0D               	movlw	13
 26310  002178  6F89               	movwf	StringCopy@Len& (0+255),b
 26311  00217A  EC03  F02B         	call	_StringCopy	;wreg free
 26312                           
 26313                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 26314  00217E  0EDD               	movlw	low _ClipEvent
 26315  002180  0100               	movlb	0	; () banked
 26316  002182  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26317  002184  0E00               	movlw	high _ClipEvent
 26318  002186  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26319  002188  ECE5  F033         	call	_GenerateEvt	;wreg free
 26320  00218C  D018               	goto	l15079
 26321  00218E                     
 26322                           ; BSR set to: 0
 26323                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 26324                           
 26325                           ; BSR set to: 0
 26326  00218E  0E9E               	movlw	low ModemEvtParser@SmsString
 26327  002190  6F7D               	movwf	StringCompare@String1& (0+255),b
 26328  002192  0E00               	movlw	high ModemEvtParser@SmsString
 26329  002194  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26330  002196  0E58               	movlw	low _RxBuffer
 26331  002198  6F7F               	movwf	StringCompare@String2& (0+255),b
 26332  00219A  0E0C               	movlw	high _RxBuffer
 26333  00219C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26334  00219E  0E00               	movlw	0
 26335  0021A0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26336  0021A2  0E05               	movlw	5
 26337  0021A4  6F81               	movwf	StringCompare@Len& (0+255),b
 26338  0021A6  EC6B  F02D         	call	_StringCompare	;wreg free
 26339  0021AA  0900               	iorlw	0
 26340  0021AC  B4D8               	btfsc	status,2,c
 26341  0021AE  D02E               	goto	l1055
 26342                           
 26343                           ;mdm_gsm_gprs.c: 541: {
 26344                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 26345  0021B0  0EDC               	movlw	low _SmsEvent
 26346  0021B2  0100               	movlb	0	; () banked
 26347  0021B4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26348  0021B6  0E00               	movlw	high _SmsEvent
 26349  0021B8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26350  0021BA  ECE5  F033         	call	_GenerateEvt	;wreg free
 26351  0021BE                     l15079:
 26352                           
 26353                           ;mdm_gsm_gprs.c: 545: Match = 1;
 26354  0021BE  0E01               	movlw	1
 26355  0021C0  0100               	movlb	0	; () banked
 26356  0021C2  D015               	goto	L37
 26357  0021C4                     
 26358                           ; BSR set to: 0
 26359                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 26360                           
 26361                           ; BSR set to: 0
 26362  0021C4  0E8F               	movlw	low ModemEvtParser@CallReadyString
 26363  0021C6  6F7D               	movwf	StringCompare@String1& (0+255),b
 26364  0021C8  0E00               	movlw	high ModemEvtParser@CallReadyString
 26365  0021CA  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26366  0021CC  0E58               	movlw	low _RxBuffer
 26367  0021CE  6F7F               	movwf	StringCompare@String2& (0+255),b
 26368  0021D0  0E0C               	movlw	high _RxBuffer
 26369  0021D2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26370  0021D4  0E00               	movlw	0
 26371  0021D6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26372  0021D8  0E0A               	movlw	10
 26373  0021DA  6F81               	movwf	StringCompare@Len& (0+255),b
 26374  0021DC  EC6B  F02D         	call	_StringCompare	;wreg free
 26375  0021E0  0900               	iorlw	0
 26376  0021E2  B4D8               	btfsc	status,2,c
 26377  0021E4  D013               	goto	l1055
 26378                           
 26379                           ;mdm_gsm_gprs.c: 552: {
 26380                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 26381  0021E6  0E02               	movlw	2
 26382  0021E8  0100               	movlb	0	; () banked
 26383  0021EA  6FD0               	movwf	_MdmStatus& (0+255),b
 26384                           
 26385                           ;mdm_gsm_gprs.c: 556: Match = 1;
 26386  0021EC  0E01               	movlw	1
 26387  0021EE                     L37:
 26388  0021EE  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 26389                           
 26390                           ; BSR set to: 0
 26391                           ;mdm_gsm_gprs.c: 562: }
 26392                           
 26393                           ; BSR set to: 0
 26394                           ;mdm_gsm_gprs.c: 561: break;
 26395                           
 26396                           ;mdm_gsm_gprs.c: 560: default:
 26397                           
 26398                           ; BSR set to: 0
 26399                           ;mdm_gsm_gprs.c: 557: }
 26400                           ;mdm_gsm_gprs.c: 558: break;
 26401  0021F0  D00D               	goto	l1055
 26402  0021F2                     l1052:
 26403                           
 26404                           ; BSR set to: 0
 26405                           
 26406                           ; BSR set to: 0
 26407  0021F2  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 26408                           
 26409                           ; Switch size 1, requested type "space"
 26410                           ; Number of cases is 4, Range of values is 0 to 3
 26411                           ; switch strategies available:
 26412                           ; Name         Instructions Cycles
 26413                           ; simple_byte           13     7 (average)
 26414                           ;	Chosen strategy is simple_byte
 26415  0021F4  0A00               	xorlw	0	; case 0
 26416  0021F6  B4D8               	btfsc	status,2,c
 26417  0021F8  D789               	goto	l1053
 26418  0021FA  0A01               	xorlw	1	; case 1
 26419  0021FC  B4D8               	btfsc	status,2,c
 26420  0021FE  D7C7               	goto	l1058
 26421  002200  0A03               	xorlw	3	; case 2
 26422  002202  B4D8               	btfsc	status,2,c
 26423  002204  D7DF               	goto	l1060
 26424  002206  0A01               	xorlw	1	; case 3
 26425  002208  B4D8               	btfsc	status,2,c
 26426  00220A  D799               	goto	l1056
 26427  00220C                     l1055:
 26428                           
 26429                           ; BSR set to: 0
 26430  00220C  0100               	movlb	0	; () banked
 26431  00220E  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 26432  002210  D779               	goto	l15057
 26433  002212                     u14680:
 26434                           
 26435                           ; BSR set to: 0
 26436                           ;mdm_gsm_gprs.c: 563: }
 26437                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 26438                           
 26439                           ; BSR set to: 0
 26440  002212  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 26441  002214  A4D8               	btfss	status,2,c
 26442  002216  0012               	return	
 26443                           
 26444                           ; BSR set to: 0
 26445                           ;mdm_gsm_gprs.c: 567: {
 26446                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 26447  002218  EC2D  F031         	call	_Uart_ClearRxBuffer	;wreg free
 26448  00221C  0012               	return	
 26449  00221E                     __end_of_ModemEvtParser:
 26450                           	opt stack 0
 26451                           tosu	equ	0xFFF
 26452                           tosh	equ	0xFFE
 26453                           tosl	equ	0xFFD
 26454                           pclath	equ	0xFFA
 26455                           tblptru	equ	0xFF8
 26456                           tblptrh	equ	0xFF7
 26457                           tblptrl	equ	0xFF6
 26458                           tablat	equ	0xFF5
 26459                           prodh	equ	0xFF4
 26460                           prodl	equ	0xFF3
 26461                           intcon	equ	0xFF2
 26462                           intcon2	equ	0xFF1
 26463                           intcon3	equ	0xFF0
 26464                           indf0	equ	0xFEF
 26465                           postinc0	equ	0xFEE
 26466                           plusw0	equ	0xFEB
 26467                           fsr0h	equ	0xFEA
 26468                           fsr0l	equ	0xFE9
 26469                           wreg	equ	0xFE8
 26470                           indf1	equ	0xFE7
 26471                           postinc1	equ	0xFE6
 26472                           postdec1	equ	0xFE5
 26473                           plusw1	equ	0xFE3
 26474                           fsr1h	equ	0xFE2
 26475                           fsr1l	equ	0xFE1
 26476                           indf2	equ	0xFDF
 26477                           postinc2	equ	0xFDE
 26478                           postdec2	equ	0xFDD
 26479                           plusw2	equ	0xFDB
 26480                           fsr2h	equ	0xFDA
 26481                           fsr2l	equ	0xFD9
 26482                           status	equ	0xFD8
 26483                           
 26484 ;; *************** function _Uart_ClearRxBuffer *****************
 26485 ;; Defined at:
 26486 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26487 ;; Parameters:    Size  Location     Type
 26488 ;;		None
 26489 ;; Auto vars:     Size  Location     Type
 26490 ;;  Index           2   29[BANK0 ] unsigned short 
 26491 ;; Return value:  Size  Location     Type
 26492 ;;                  1    wreg      void 
 26493 ;; Registers used:
 26494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26495 ;; Tracked objects:
 26496 ;;		On entry : 0/0
 26497 ;;		On exit  : 0/0
 26498 ;;		Unchanged: 0/0
 26499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26504 ;;Total ram usage:        2 bytes
 26505 ;; Hardware stack levels used:    1
 26506 ;; Hardware stack levels required when called:   11
 26507 ;; This function calls:
 26508 ;;		Nothing
 26509 ;; This function is called by:
 26510 ;;		_ModemEvtParser
 26511 ;; This function uses a non-reentrant model
 26512 ;;
 26513                           
 26514                           	psect	text124
 26515  00625A                     __ptext124:
 26516                           	opt stack 0
 26517  00625A                     _Uart_ClearRxBuffer:
 26518                           	opt stack 15
 26519                           
 26520                           ;uart_drv.c: 567: UINT16 Index = 0;
 26521                           
 26522                           ;incstack = 0
 26523  00625A  0E00               	movlw	0
 26524  00625C  0100               	movlb	0	; () banked
 26525  00625E  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 26526  006260  0E00               	movlw	0
 26527  006262  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 26528                           
 26529                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 26530  006264  0E00               	movlw	0
 26531  006266  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 26532  006268  0E00               	movlw	0
 26533  00626A  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 26534  00626C                     l14269:
 26535                           
 26536                           ; BSR set to: 0
 26537  00626C  0E90               	movlw	144
 26538  00626E  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 26539  006270  0E01               	movlw	1
 26540  006272  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 26541  006274  B0D8               	btfsc	status,0,c
 26542  006276  0012               	return	
 26543                           
 26544                           ; BSR set to: 0
 26545                           ;uart_drv.c: 571: {
 26546                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 26547                           
 26548                           ; BSR set to: 0
 26549                           
 26550                           ; BSR set to: 0
 26551  006278  0E58               	movlw	low _RxBuffer
 26552  00627A  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 26553  00627C  6ED9               	movwf	fsr2l,c
 26554  00627E  0E0C               	movlw	high _RxBuffer
 26555  006280  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 26556  006282  6EDA               	movwf	fsr2h,c
 26557  006284  0E00               	movlw	0
 26558  006286  6EDF               	movwf	indf2,c
 26559                           
 26560                           ; BSR set to: 0
 26561  006288  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 26562  00628A  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 26563  00628C  D7EF               	goto	l14269
 26564  00628E                     __end_of_Uart_ClearRxBuffer:
 26565                           	opt stack 0
 26566                           tosu	equ	0xFFF
 26567                           tosh	equ	0xFFE
 26568                           tosl	equ	0xFFD
 26569                           pclath	equ	0xFFA
 26570                           tblptru	equ	0xFF8
 26571                           tblptrh	equ	0xFF7
 26572                           tblptrl	equ	0xFF6
 26573                           tablat	equ	0xFF5
 26574                           prodh	equ	0xFF4
 26575                           prodl	equ	0xFF3
 26576                           intcon	equ	0xFF2
 26577                           intcon2	equ	0xFF1
 26578                           intcon3	equ	0xFF0
 26579                           indf0	equ	0xFEF
 26580                           postinc0	equ	0xFEE
 26581                           plusw0	equ	0xFEB
 26582                           fsr0h	equ	0xFEA
 26583                           fsr0l	equ	0xFE9
 26584                           wreg	equ	0xFE8
 26585                           indf1	equ	0xFE7
 26586                           postinc1	equ	0xFE6
 26587                           postdec1	equ	0xFE5
 26588                           plusw1	equ	0xFE3
 26589                           fsr1h	equ	0xFE2
 26590                           fsr1l	equ	0xFE1
 26591                           indf2	equ	0xFDF
 26592                           postinc2	equ	0xFDE
 26593                           postdec2	equ	0xFDD
 26594                           plusw2	equ	0xFDB
 26595                           fsr2h	equ	0xFDA
 26596                           fsr2l	equ	0xFD9
 26597                           status	equ	0xFD8
 26598                           
 26599 ;; *************** function _StringCompare *****************
 26600 ;; Defined at:
 26601 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 26602 ;; Parameters:    Size  Location     Type
 26603 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 26604 ;;		 -> MyApp_Task@receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 26605 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 26606 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 26607 ;;		 -> isNumberInMemory@readBuffer(13), MyApp_Task@cmdAddNumber(4), parseCommand@deleteNumberCmd(3), parseCommand@addNu
      +mberCmd(3), 
 26608 ;;		 -> RxBuffer(400), 
 26609 ;;  Len             2   33[BANK0 ] unsigned short 
 26610 ;; Auto vars:     Size  Location     Type
 26611 ;;  Index           2   38[BANK0 ] unsigned short 
 26612 ;;  Result          1   37[BANK0 ] unsigned char 
 26613 ;; Return value:  Size  Location     Type
 26614 ;;                  1    wreg      unsigned char 
 26615 ;; Registers used:
 26616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26617 ;; Tracked objects:
 26618 ;;		On entry : 0/0
 26619 ;;		On exit  : 0/0
 26620 ;;		Unchanged: 0/0
 26621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26622 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26623 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26624 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26625 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26626 ;;Total ram usage:       11 bytes
 26627 ;; Hardware stack levels used:    1
 26628 ;; Hardware stack levels required when called:   11
 26629 ;; This function calls:
 26630 ;;		Nothing
 26631 ;; This function is called by:
 26632 ;;		_ModemEvtParser
 26633 ;;		_parseCommand
 26634 ;;		_MyApp_Task
 26635 ;;		_isNumberInMemory
 26636 ;; This function uses a non-reentrant model
 26637 ;;
 26638                           
 26639                           	psect	text125
 26640  005AD6                     __ptext125:
 26641                           	opt stack 0
 26642  005AD6                     _StringCompare:
 26643                           	opt stack 15
 26644                           
 26645                           ;sf.c: 77: UINT16 Index = 0;
 26646                           
 26647                           ; BSR set to: 0
 26648                           ;incstack = 0
 26649  005AD6  0E00               	movlw	0
 26650  005AD8  0100               	movlb	0	; () banked
 26651  005ADA  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26652  005ADC  0E00               	movlw	0
 26653  005ADE  6F86               	movwf	StringCompare@Index& (0+255),b
 26654                           
 26655                           ;sf.c: 78: UINT8 Result = 1;
 26656  005AE0  0E01               	movlw	1
 26657  005AE2  6F85               	movwf	StringCompare@Result& (0+255),b
 26658                           
 26659                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 26660  005AE4  0E00               	movlw	0
 26661  005AE6  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26662  005AE8  0E00               	movlw	0
 26663  005AEA  6F86               	movwf	StringCompare@Index& (0+255),b
 26664  005AEC  D015               	goto	l2240
 26665  005AEE                     
 26666                           ; BSR set to: 0
 26667                           ;sf.c: 82: {
 26668                           ;sf.c: 83: if (String1[Index] != String2[Index])
 26669                           
 26670                           ; BSR set to: 0
 26671  005AEE  5186               	movf	StringCompare@Index& (0+255),w,b
 26672  005AF0  257F               	addwf	StringCompare@String2& (0+255),w,b
 26673  005AF2  6ED9               	movwf	fsr2l,c
 26674  005AF4  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26675  005AF6  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 26676  005AF8  6EDA               	movwf	fsr2h,c
 26677  005AFA  5186               	movf	StringCompare@Index& (0+255),w,b
 26678  005AFC  257D               	addwf	StringCompare@String1& (0+255),w,b
 26679  005AFE  6EE1               	movwf	fsr1l,c
 26680  005B00  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26681  005B02  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 26682  005B04  6EE2               	movwf	fsr1h,c
 26683  005B06  50DE               	movf	postinc2,w,c
 26684  005B08  18E6               	xorwf	postinc1,w,c
 26685  005B0A  B4D8               	btfsc	status,2,c
 26686  005B0C  D003               	goto	l2242
 26687                           
 26688                           ; BSR set to: 0
 26689                           ;sf.c: 84: {
 26690                           ;sf.c: 85: Result = 0;
 26691  005B0E  0E00               	movlw	0
 26692  005B10  6F85               	movwf	StringCompare@Result& (0+255),b
 26693                           
 26694                           ;sf.c: 86: break;
 26695  005B12  D008               	goto	u13560
 26696  005B14                     l2242:
 26697                           
 26698                           ; BSR set to: 0
 26699                           
 26700                           ; BSR set to: 0
 26701  005B14  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 26702  005B16  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 26703  005B18                     l2240:
 26704                           
 26705                           ; BSR set to: 0
 26706                           
 26707                           ; BSR set to: 0
 26708  005B18  5181               	movf	StringCompare@Len& (0+255),w,b
 26709  005B1A  5D86               	subwf	StringCompare@Index& (0+255),w,b
 26710  005B1C  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 26711  005B1E  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 26712  005B20  A0D8               	btfss	status,0,c
 26713  005B22  D7E5               	goto	l2241
 26714  005B24                     u13560:
 26715                           
 26716                           ; BSR set to: 0
 26717                           ;sf.c: 87: }
 26718                           ;sf.c: 88: }
 26719                           ;sf.c: 91: return Result;
 26720                           
 26721                           ; BSR set to: 0
 26722  005B24  5185               	movf	StringCompare@Result& (0+255),w,b
 26723  005B26  0012               	return	
 26724  005B28                     __end_of_StringCompare:
 26725                           	opt stack 0
 26726                           tosu	equ	0xFFF
 26727                           tosh	equ	0xFFE
 26728                           tosl	equ	0xFFD
 26729                           pclath	equ	0xFFA
 26730                           tblptru	equ	0xFF8
 26731                           tblptrh	equ	0xFF7
 26732                           tblptrl	equ	0xFF6
 26733                           tablat	equ	0xFF5
 26734                           prodh	equ	0xFF4
 26735                           prodl	equ	0xFF3
 26736                           intcon	equ	0xFF2
 26737                           intcon2	equ	0xFF1
 26738                           intcon3	equ	0xFF0
 26739                           indf0	equ	0xFEF
 26740                           postinc0	equ	0xFEE
 26741                           plusw0	equ	0xFEB
 26742                           fsr0h	equ	0xFEA
 26743                           fsr0l	equ	0xFE9
 26744                           wreg	equ	0xFE8
 26745                           indf1	equ	0xFE7
 26746                           postinc1	equ	0xFE6
 26747                           postdec1	equ	0xFE5
 26748                           plusw1	equ	0xFE3
 26749                           fsr1h	equ	0xFE2
 26750                           fsr1l	equ	0xFE1
 26751                           indf2	equ	0xFDF
 26752                           postinc2	equ	0xFDE
 26753                           postdec2	equ	0xFDD
 26754                           plusw2	equ	0xFDB
 26755                           fsr2h	equ	0xFDA
 26756                           fsr2l	equ	0xFD9
 26757                           status	equ	0xFD8
 26758                           
 26759 ;; *************** function _GetSmsSm *****************
 26760 ;; Defined at:
 26761 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26762 ;; Parameters:    Size  Location     Type
 26763 ;;		None
 26764 ;; Auto vars:     Size  Location     Type
 26765 ;;		None
 26766 ;; Return value:  Size  Location     Type
 26767 ;;                  1    wreg      void 
 26768 ;; Registers used:
 26769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26770 ;; Tracked objects:
 26771 ;;		On entry : 0/0
 26772 ;;		On exit  : 0/0
 26773 ;;		Unchanged: 0/0
 26774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26779 ;;Total ram usage:        0 bytes
 26780 ;; Hardware stack levels used:    1
 26781 ;; Hardware stack levels required when called:   13
 26782 ;; This function calls:
 26783 ;;		_ClearBuffer
 26784 ;;		_GenerateEvt
 26785 ;;		_ReceiveEvt
 26786 ;;		_StringCopy
 26787 ;;		_Uart_WriteConstString
 26788 ;; This function is called by:
 26789 ;;		_Mdm_MainTask
 26790 ;; This function uses a non-reentrant model
 26791 ;;
 26792                           
 26793                           	psect	text126
 26794  002E00                     __ptext126:
 26795                           	opt stack 0
 26796  002E00                     _GetSmsSm:
 26797                           	opt stack 14
 26798                           
 26799                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 26800                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 26801                           
 26802                           ; BSR set to: 0
 26803                           ;incstack = 0
 26804  002E00  0E03               	movlw	3
 26805  002E02  0100               	movlb	0	; () banked
 26806  002E04  19D0               	xorwf	_MdmStatus& (0+255),w,b
 26807  002E06  A4D8               	btfss	status,2,c
 26808  002E08  0012               	return	
 26809  002E0A  D084               	goto	l1070
 26810  002E0C                     
 26811                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 26812                           
 26813                           ; BSR set to: 0
 26814  002E0C  0EDB               	movlw	low _GetSmsText
 26815  002E0E  0100               	movlb	0	; () banked
 26816  002E10  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26817  002E12  0E00               	movlw	high _GetSmsText
 26818  002E14  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26819  002E16  ECF0  F031         	call	_ReceiveEvt	;wreg free
 26820  002E1A  0900               	iorlw	0
 26821  002E1C  B4D8               	btfsc	status,2,c
 26822  002E1E  0012               	return	
 26823                           
 26824                           ;mdm_gsm_gprs.c: 596: {
 26825                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 26826  002E20  0E01               	movlw	1
 26827  002E22  0101               	movlb	1	; () banked
 26828  002E24  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26829                           
 26830                           ; BSR set to: 1
 26831                           ;mdm_gsm_gprs.c: 599: }
 26832                           ;mdm_gsm_gprs.c: 600: break;
 26833  002E26  0012               	return	
 26834  002E28                     
 26835                           ; BSR set to: 1
 26836                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 26837                           
 26838                           ; BSR set to: 1
 26839  002E28  0EC2               	movlw	low STR_4
 26840  002E2A  0100               	movlb	0	; () banked
 26841  002E2C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26842  002E2E  0EFF               	movlw	high STR_4
 26843  002E30  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26844  002E32  0E01               	movlw	1
 26845  002E34  ECC0  F02F         	call	_Uart_WriteConstString
 26846                           
 26847                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 26848  002E38  0E02               	movlw	2
 26849  002E3A  0101               	movlb	1	; () banked
 26850  002E3C  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26851                           
 26852                           ;mdm_gsm_gprs.c: 607: break;
 26853  002E3E  0012               	return	
 26854  002E40                     
 26855                           ; BSR set to: 1
 26856                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 26857                           
 26858                           ; BSR set to: 1
 26859  002E40  0E3C               	movlw	low _NewStringReceived
 26860  002E42  0100               	movlb	0	; () banked
 26861  002E44  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26862  002E46  0E00               	movlw	high _NewStringReceived
 26863  002E48  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26864  002E4A  ECF0  F031         	call	_ReceiveEvt	;wreg free
 26865  002E4E  0900               	iorlw	0
 26866  002E50  B4D8               	btfsc	status,2,c
 26867  002E52  0012               	return	
 26868                           
 26869                           ;mdm_gsm_gprs.c: 612: {
 26870                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 26871  002E54  CC58  FFE8         	movff	_RxBuffer,wreg
 26872  002E58  0A2B               	xorlw	43
 26873  002E5A  A4D8               	btfss	status,2,c
 26874  002E5C  0012               	return	
 26875  002E5E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26876  002E62  0A43               	xorlw	67
 26877  002E64  A4D8               	btfss	status,2,c
 26878  002E66  0012               	return	
 26879  002E68  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 26880  002E6C  0A4D               	xorlw	77
 26881  002E6E  A4D8               	btfss	status,2,c
 26882  002E70  0012               	return	
 26883                           
 26884                           ;mdm_gsm_gprs.c: 614: {
 26885                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 26886  002E72  0E00               	movlw	low _Mdm_SmsRx
 26887  002E74  0100               	movlb	0	; () banked
 26888  002E76  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26889  002E78  0E07               	movlw	high _Mdm_SmsRx
 26890  002E7A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26891  002E7C  0E00               	movlw	0
 26892  002E7E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26893  002E80  0E50               	movlw	80
 26894  002E82  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26895  002E84  EC12  F031         	call	_ClearBuffer	;wreg free
 26896                           
 26897                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 26898  002E88  0E58               	movlw	low _RxBuffer
 26899  002E8A  0100               	movlb	0	; () banked
 26900  002E8C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26901  002E8E  0E0C               	movlw	high _RxBuffer
 26902  002E90  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26903  002E92  0E00               	movlw	low _Mdm_SmsRx
 26904  002E94  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26905  002E96  0E07               	movlw	high _Mdm_SmsRx
 26906  002E98  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26907  002E9A  C0C2  F089         	movff	_RxLen,StringCopy@Len
 26908  002E9E  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 26909  002EA2  EC03  F02B         	call	_StringCopy	;wreg free
 26910                           
 26911                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 26912  002EA6  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 26913                           
 26914                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 26915  002EAA  0E03               	movlw	3
 26916  002EAC  0101               	movlb	1	; () banked
 26917  002EAE  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26918                           
 26919                           ; BSR set to: 1
 26920                           ;mdm_gsm_gprs.c: 622: }
 26921                           ;mdm_gsm_gprs.c: 623: }
 26922                           ;mdm_gsm_gprs.c: 624: break;
 26923                           
 26924                           ; BSR set to: 1
 26925  002EB0  0012               	return	
 26926  002EB2                     
 26927                           ; BSR set to: 1
 26928                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 26929                           
 26930                           ; BSR set to: 1
 26931  002EB2  0E3C               	movlw	low _NewStringReceived
 26932  002EB4  0100               	movlb	0	; () banked
 26933  002EB6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26934  002EB8  0E00               	movlw	high _NewStringReceived
 26935  002EBA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26936  002EBC  ECF0  F031         	call	_ReceiveEvt	;wreg free
 26937  002EC0  0900               	iorlw	0
 26938  002EC2  B4D8               	btfsc	status,2,c
 26939  002EC4  0012               	return	
 26940                           
 26941                           ;mdm_gsm_gprs.c: 629: {
 26942                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 26943  002EC6  0E50               	movlw	low (_Mdm_SmsRx+80)
 26944  002EC8  0100               	movlb	0	; () banked
 26945  002ECA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26946  002ECC  0E07               	movlw	high (_Mdm_SmsRx+80)
 26947  002ECE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26948  002ED0  0E00               	movlw	0
 26949  002ED2  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26950  002ED4  0E14               	movlw	20
 26951  002ED6  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26952  002ED8  EC12  F031         	call	_ClearBuffer	;wreg free
 26953                           
 26954                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 26955  002EDC  0E58               	movlw	low _RxBuffer
 26956  002EDE  0100               	movlb	0	; () banked
 26957  002EE0  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26958  002EE2  0E0C               	movlw	high _RxBuffer
 26959  002EE4  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26960  002EE6  0E50               	movlw	low (_Mdm_SmsRx+80)
 26961  002EE8  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26962  002EEA  0E07               	movlw	high (_Mdm_SmsRx+80)
 26963  002EEC  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26964  002EEE  C0C2  F089         	movff	_RxLen,StringCopy@Len
 26965  002EF2  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 26966  002EF6  EC03  F02B         	call	_StringCopy	;wreg free
 26967                           
 26968                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 26969  002EFA  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 26970                           
 26971                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 26972  002EFE  0E00               	movlw	0
 26973  002F00  0101               	movlb	1	; () banked
 26974  002F02  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26975                           
 26976                           ; BSR set to: 1
 26977                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 26978  002F04  0EDA               	movlw	low _SmsTxtReady
 26979  002F06  0100               	movlb	0	; () banked
 26980  002F08  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26981  002F0A  0E00               	movlw	high _SmsTxtReady
 26982  002F0C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26983  002F0E  ECE5  F033         	call	_GenerateEvt	;wreg free
 26984                           
 26985                           ;mdm_gsm_gprs.c: 644: }
 26986                           
 26987                           ;mdm_gsm_gprs.c: 643: break;
 26988                           
 26989                           ;mdm_gsm_gprs.c: 642: default:
 26990                           
 26991                           ;mdm_gsm_gprs.c: 639: }
 26992                           ;mdm_gsm_gprs.c: 640: break;
 26993  002F12  0012               	return	
 26994  002F14                     l1070:
 26995  002F14  0101               	movlb	1	; () banked
 26996  002F16  51F1               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 26997                           
 26998                           ; Switch size 1, requested type "space"
 26999                           ; Number of cases is 4, Range of values is 0 to 3
 27000                           ; switch strategies available:
 27001                           ; Name         Instructions Cycles
 27002                           ; simple_byte           13     7 (average)
 27003                           ;	Chosen strategy is simple_byte
 27004  002F18  0A00               	xorlw	0	; case 0
 27005  002F1A  B4D8               	btfsc	status,2,c
 27006  002F1C  D777               	goto	l1071
 27007  002F1E  0A01               	xorlw	1	; case 1
 27008  002F20  B4D8               	btfsc	status,2,c
 27009  002F22  D782               	goto	l1074
 27010  002F24  0A03               	xorlw	3	; case 2
 27011  002F26  B4D8               	btfsc	status,2,c
 27012  002F28  D78B               	goto	l1075
 27013  002F2A  0A01               	xorlw	1	; case 3
 27014  002F2C  A4D8               	btfss	status,2,c
 27015                           
 27016                           ; BSR set to: 1
 27017  002F2E  0012               	return	
 27018  002F30  D7C0               	goto	l1078
 27019  002F32                     __end_of_GetSmsSm:
 27020                           	opt stack 0
 27021                           tosu	equ	0xFFF
 27022                           tosh	equ	0xFFE
 27023                           tosl	equ	0xFFD
 27024                           pclath	equ	0xFFA
 27025                           tblptru	equ	0xFF8
 27026                           tblptrh	equ	0xFF7
 27027                           tblptrl	equ	0xFF6
 27028                           tablat	equ	0xFF5
 27029                           prodh	equ	0xFF4
 27030                           prodl	equ	0xFF3
 27031                           intcon	equ	0xFF2
 27032                           intcon2	equ	0xFF1
 27033                           intcon3	equ	0xFF0
 27034                           indf0	equ	0xFEF
 27035                           postinc0	equ	0xFEE
 27036                           plusw0	equ	0xFEB
 27037                           fsr0h	equ	0xFEA
 27038                           fsr0l	equ	0xFE9
 27039                           wreg	equ	0xFE8
 27040                           indf1	equ	0xFE7
 27041                           postinc1	equ	0xFE6
 27042                           postdec1	equ	0xFE5
 27043                           plusw1	equ	0xFE3
 27044                           fsr1h	equ	0xFE2
 27045                           fsr1l	equ	0xFE1
 27046                           indf2	equ	0xFDF
 27047                           postinc2	equ	0xFDE
 27048                           postdec2	equ	0xFDD
 27049                           plusw2	equ	0xFDB
 27050                           fsr2h	equ	0xFDA
 27051                           fsr2l	equ	0xFD9
 27052                           status	equ	0xFD8
 27053                           
 27054 ;; *************** function _ConfigureModem *****************
 27055 ;; Defined at:
 27056 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27057 ;; Parameters:    Size  Location     Type
 27058 ;;		None
 27059 ;; Auto vars:     Size  Location     Type
 27060 ;;		None
 27061 ;; Return value:  Size  Location     Type
 27062 ;;                  1    wreg      void 
 27063 ;; Registers used:
 27064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27065 ;; Tracked objects:
 27066 ;;		On entry : 0/0
 27067 ;;		On exit  : 0/0
 27068 ;;		Unchanged: 0/0
 27069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27074 ;;Total ram usage:        0 bytes
 27075 ;; Hardware stack levels used:    1
 27076 ;; Hardware stack levels required when called:   14
 27077 ;; This function calls:
 27078 ;;		_GenerateEvt
 27079 ;;		_UartSetConfigLow
 27080 ;;		_Uart_InitUartModule
 27081 ;;		_Uart_WriteConstString
 27082 ;; This function is called by:
 27083 ;;		_Mdm_MainTask
 27084 ;; This function uses a non-reentrant model
 27085 ;;
 27086                           
 27087                           	psect	text127
 27088  00382A                     __ptext127:
 27089                           	opt stack 0
 27090  00382A                     _ConfigureModem:
 27091                           	opt stack 13
 27092                           
 27093                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 27094                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 27095                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 27096                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 27097                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 27098                           
 27099                           ;incstack = 0
 27100  00382A  D05A               	goto	l1027
 27101  00382C                     
 27102                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 27103  00382C  0E02               	movlw	2
 27104  00382E  0100               	movlb	0	; () banked
 27105  003830  19D0               	xorwf	_MdmStatus& (0+255),w,b
 27106  003832  A4D8               	btfss	status,2,c
 27107  003834  0012               	return	
 27108                           
 27109                           ; BSR set to: 0
 27110                           ;mdm_gsm_gprs.c: 431: {
 27111                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 27112  003836  0E01               	movlw	1
 27113  003838  0101               	movlb	1	; () banked
 27114  00383A  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27115                           
 27116                           ; BSR set to: 1
 27117                           ;mdm_gsm_gprs.c: 434: }
 27118                           ;mdm_gsm_gprs.c: 435: break;
 27119  00383C  0012               	return	
 27120  00383E                     
 27121                           ; BSR set to: 1
 27122                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 27123                           
 27124                           ; BSR set to: 1
 27125  00383E  0E75               	movlw	low STR_2
 27126  003840  0100               	movlb	0	; () banked
 27127  003842  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27128  003844  0EFF               	movlw	high STR_2
 27129  003846  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27130  003848  0E01               	movlw	1
 27131  00384A  ECC0  F02F         	call	_Uart_WriteConstString
 27132                           
 27133                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 27134  00384E  EC18  F02C         	call	_UartSetConfigLow	;wreg free
 27135                           
 27136                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 27137  003852  0E20               	movlw	low _UartConfig
 27138  003854  0100               	movlb	0	; () banked
 27139  003856  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 27140  003858  0E03               	movlw	high _UartConfig
 27141  00385A  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 27142  00385C  0E01               	movlw	1
 27143  00385E  EC13  F007         	call	_Uart_InitUartModule
 27144                           
 27145                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 27146  003862  0E03               	movlw	3
 27147  003864  0102               	movlb	2	; () banked
 27148  003866  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 27149  003868  0EE8               	movlw	232
 27150  00386A  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 27151                           
 27152                           ; BSR set to: 2
 27153                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 27154  00386C  0E02               	movlw	2
 27155  00386E  0101               	movlb	1	; () banked
 27156  003870  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 27157                           
 27158                           ; BSR set to: 1
 27159                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 27160  003872  0E04               	movlw	4
 27161  003874  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27162                           
 27163                           ;mdm_gsm_gprs.c: 449: break;
 27164  003876  0012               	return	
 27165  003878                     
 27166                           ; BSR set to: 1
 27167                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 27168                           
 27169                           ; BSR set to: 1
 27170  003878  0EDF               	movlw	low STR_3
 27171  00387A  0100               	movlb	0	; () banked
 27172  00387C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27173  00387E  0EFF               	movlw	high STR_3
 27174  003880  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27175  003882  0E01               	movlw	1
 27176  003884  ECC0  F02F         	call	_Uart_WriteConstString
 27177                           
 27178                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 27179  003888  0E03               	movlw	3
 27180  00388A  0102               	movlb	2	; () banked
 27181  00388C  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 27182  00388E  0EE8               	movlw	232
 27183  003890  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 27184                           
 27185                           ; BSR set to: 2
 27186                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 27187  003892  0E05               	movlw	5
 27188  003894  0101               	movlb	1	; () banked
 27189  003896  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 27190                           
 27191                           ; BSR set to: 1
 27192                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 27193  003898  0E04               	movlw	4
 27194  00389A  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27195                           
 27196                           ;mdm_gsm_gprs.c: 459: break;
 27197  00389C  0012               	return	
 27198  00389E                     
 27199                           ; BSR set to: 1
 27200                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 27201                           
 27202                           ; BSR set to: 1
 27203  00389E  0103               	movlb	3	; () banked
 27204  0038A0  4B1E               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 27205  0038A2  2B1F               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 27206                           
 27207                           ; BSR set to: 3
 27208                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 27209  0038A4  0102               	movlb	2	; () banked
 27210  0038A6  51D6               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 27211  0038A8  0103               	movlb	3	; () banked
 27212  0038AA  5D1E               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 27213  0038AC  0102               	movlb	2	; () banked
 27214  0038AE  51D7               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 27215  0038B0  0103               	movlb	3	; () banked
 27216  0038B2  591F               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 27217  0038B4  A0D8               	btfss	status,0,c
 27218  0038B6  0012               	return	
 27219                           
 27220                           ; BSR set to: 3
 27221                           ;mdm_gsm_gprs.c: 466: {
 27222                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 27223  0038B8  0E00               	movlw	0
 27224  0038BA  6F1F               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 27225  0038BC  0E00               	movlw	0
 27226  0038BE  6F1E               	movwf	ConfigureModem@DelayCounter& (0+255),b
 27227                           
 27228                           ; BSR set to: 3
 27229                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 27230  0038C0  C1F2  F1F3         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 27231                           
 27232                           ; BSR set to: 3
 27233                           ;mdm_gsm_gprs.c: 471: }
 27234                           ;mdm_gsm_gprs.c: 472: break;
 27235  0038C4  0012               	return	
 27236  0038C6                     
 27237                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 27238                           
 27239                           ; BSR set to: 3
 27240  0038C6  0E03               	movlw	3
 27241  0038C8  0100               	movlb	0	; () banked
 27242  0038CA  6FD0               	movwf	_MdmStatus& (0+255),b
 27243                           
 27244                           ; BSR set to: 0
 27245                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 27246  0038CC  0E39               	movlw	low _MdmStsReady
 27247  0038CE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27248  0038D0  0E00               	movlw	high _MdmStsReady
 27249  0038D2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27250  0038D4  ECE5  F033         	call	_GenerateEvt	;wreg free
 27251                           
 27252                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 27253  0038D8  0E06               	movlw	6
 27254  0038DA  0101               	movlb	1	; () banked
 27255  0038DC  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27256                           
 27257                           ; BSR set to: 1
 27258                           ;mdm_gsm_gprs.c: 488: }
 27259                           
 27260                           ; BSR set to: 1
 27261                           ;mdm_gsm_gprs.c: 487: break;
 27262                           
 27263                           ;mdm_gsm_gprs.c: 486: default:
 27264                           
 27265                           ; BSR set to: 1
 27266                           ;mdm_gsm_gprs.c: 484: break;
 27267                           
 27268                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 27269                           
 27270                           ;mdm_gsm_gprs.c: 481: break;
 27271  0038DE  0012               	return	
 27272  0038E0                     l1027:
 27273                           
 27274                           ; BSR set to: 1
 27275  0038E0  0101               	movlb	1	; () banked
 27276  0038E2  51F3               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 27277                           
 27278                           ; Switch size 1, requested type "space"
 27279                           ; Number of cases is 6, Range of values is 0 to 6
 27280                           ; switch strategies available:
 27281                           ; Name         Instructions Cycles
 27282                           ; simple_byte           19    10 (average)
 27283                           ;	Chosen strategy is simple_byte
 27284  0038E4  0A00               	xorlw	0	; case 0
 27285  0038E6  B4D8               	btfsc	status,2,c
 27286  0038E8  D7A1               	goto	l1028
 27287  0038EA  0A01               	xorlw	1	; case 1
 27288  0038EC  B4D8               	btfsc	status,2,c
 27289  0038EE  D7A7               	goto	l1031
 27290  0038F0  0A03               	xorlw	3	; case 2
 27291  0038F2  B4D8               	btfsc	status,2,c
 27292  0038F4  D7C1               	goto	l1032
 27293  0038F6  0A06               	xorlw	6	; case 4
 27294  0038F8  B4D8               	btfsc	status,2,c
 27295  0038FA  D7D1               	goto	l1033
 27296  0038FC  0A01               	xorlw	1	; case 5
 27297  0038FE  B4D8               	btfsc	status,2,c
 27298  003900  D7E2               	goto	l1035
 27299  003902  0A03               	xorlw	3	; case 6
 27300  003904  0012               	return	
 27301  003906                     __end_of_ConfigureModem:
 27302                           	opt stack 0
 27303                           tosu	equ	0xFFF
 27304                           tosh	equ	0xFFE
 27305                           tosl	equ	0xFFD
 27306                           pclath	equ	0xFFA
 27307                           tblptru	equ	0xFF8
 27308                           tblptrh	equ	0xFF7
 27309                           tblptrl	equ	0xFF6
 27310                           tablat	equ	0xFF5
 27311                           prodh	equ	0xFF4
 27312                           prodl	equ	0xFF3
 27313                           intcon	equ	0xFF2
 27314                           intcon2	equ	0xFF1
 27315                           intcon3	equ	0xFF0
 27316                           indf0	equ	0xFEF
 27317                           postinc0	equ	0xFEE
 27318                           plusw0	equ	0xFEB
 27319                           fsr0h	equ	0xFEA
 27320                           fsr0l	equ	0xFE9
 27321                           wreg	equ	0xFE8
 27322                           indf1	equ	0xFE7
 27323                           postinc1	equ	0xFE6
 27324                           postdec1	equ	0xFE5
 27325                           plusw1	equ	0xFE3
 27326                           fsr1h	equ	0xFE2
 27327                           fsr1l	equ	0xFE1
 27328                           indf2	equ	0xFDF
 27329                           postinc2	equ	0xFDE
 27330                           postdec2	equ	0xFDD
 27331                           plusw2	equ	0xFDB
 27332                           fsr2h	equ	0xFDA
 27333                           fsr2l	equ	0xFD9
 27334                           status	equ	0xFD8
 27335                           
 27336 ;; *************** function _Uart_InitUartModule *****************
 27337 ;; Defined at:
 27338 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27339 ;; Parameters:    Size  Location     Type
 27340 ;;  Module          1    wreg     unsigned char 
 27341 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 27342 ;;		 -> UartConfig(21), 
 27343 ;; Auto vars:     Size  Location     Type
 27344 ;;  Module          1   65[BANK0 ] unsigned char 
 27345 ;; Return value:  Size  Location     Type
 27346 ;;                  1    wreg      void 
 27347 ;; Registers used:
 27348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27349 ;; Tracked objects:
 27350 ;;		On entry : 0/0
 27351 ;;		On exit  : 0/0
 27352 ;;		Unchanged: 0/0
 27353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27354 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27357 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27358 ;;Total ram usage:        5 bytes
 27359 ;; Hardware stack levels used:    1
 27360 ;; Hardware stack levels required when called:   13
 27361 ;; This function calls:
 27362 ;;		_SetUartBaudRate
 27363 ;; This function is called by:
 27364 ;;		_ConfigureModem
 27365 ;;		_Mdm_MainTask
 27366 ;; This function uses a non-reentrant model
 27367 ;;
 27368                           
 27369                           	psect	text128
 27370  000E26                     __ptext128:
 27371                           	opt stack 0
 27372  000E26                     _Uart_InitUartModule:
 27373                           	opt stack 14
 27374                           
 27375                           ;incstack = 0
 27376                           ;Uart_InitUartModule@Module stored from wreg
 27377  000E26  0100               	movlb	0	; () banked
 27378  000E28  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 27379                           
 27380                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 27381  000E2A  0100               	movlb	0	; () banked
 27382  000E2C  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 27383  000E2E  A4D8               	btfss	status,2,c
 27384  000E30  D0BE               	goto	l668
 27385                           
 27386                           ; BSR set to: 0
 27387                           ;uart_drv.c: 291: {
 27388                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 27389  000E32  9C94               	bcf	3988,6,c	;volatile
 27390                           
 27391                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 27392  000E34  8E94               	bsf	3988,7,c	;volatile
 27393                           
 27394                           ; BSR set to: 0
 27395                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 27396  000E36  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27397  000E3A  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27398  000E3E  0E01               	movlw	1
 27399  000E40  EC64  F016         	call	_SetUartBaudRate
 27400                           
 27401                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 27402  000E44  0E00               	movlw	0
 27403  000E46  6EAD               	movwf	4013,c	;volatile
 27404                           
 27405                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27406  000E48  0100               	movlb	0	; () banked
 27407  000E4A  EE20 F004          	lfsr	2,4
 27408  000E4E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27409  000E50  26D9               	addwf	fsr2l,f,c
 27410  000E52  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27411  000E54  22DA               	addwfc	fsr2h,f,c
 27412  000E56  50DF               	movf	indf2,w,c
 27413  000E58  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27414  000E5A  0E06               	movlw	6
 27415  000E5C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27416  000E5E                     u13445:
 27417  000E5E  90D8               	bcf	status,0,c
 27418  000E60  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27419  000E62  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27420  000E64  D7FC               	goto	u13445
 27421  000E66  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27422  000E68  12AD               	iorwf	4013,f,c	;volatile
 27423                           
 27424                           ; BSR set to: 0
 27425                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27426  000E6A  EE20 F006          	lfsr	2,6
 27427  000E6E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27428  000E70  26D9               	addwf	fsr2l,f,c
 27429  000E72  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27430  000E74  22DA               	addwfc	fsr2h,f,c
 27431  000E76  50DF               	movf	indf2,w,c
 27432  000E78  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27433  000E7A  0E05               	movlw	5
 27434  000E7C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27435  000E7E                     u13455:
 27436  000E7E  90D8               	bcf	status,0,c
 27437  000E80  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27438  000E82  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27439  000E84  D7FC               	goto	u13455
 27440  000E86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27441  000E88  12AD               	iorwf	4013,f,c	;volatile
 27442                           
 27443                           ; BSR set to: 0
 27444                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 27445  000E8A  EE20 F001          	lfsr	2,1
 27446  000E8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27447  000E90  26D9               	addwf	fsr2l,f,c
 27448  000E92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27449  000E94  22DA               	addwfc	fsr2h,f,c
 27450  000E96  50DF               	movf	indf2,w,c
 27451  000E98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27452  000E9A  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27453  000E9C  0BF0               	andlw	240
 27454  000E9E  12AD               	iorwf	4013,f,c	;volatile
 27455                           
 27456                           ; BSR set to: 0
 27457                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27458  000EA0  EE20 F008          	lfsr	2,8
 27459  000EA4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27460  000EA6  26D9               	addwf	fsr2l,f,c
 27461  000EA8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27462  000EAA  22DA               	addwfc	fsr2h,f,c
 27463  000EAC  50DF               	movf	indf2,w,c
 27464  000EAE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27465  000EB0  90D8               	bcf	status,0,c
 27466  000EB2  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27467  000EB4  90D8               	bcf	status,0,c
 27468  000EB6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27469  000EB8  90D8               	bcf	status,0,c
 27470  000EBA  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27471  000EBC  12AD               	iorwf	4013,f,c	;volatile
 27472                           
 27473                           ; BSR set to: 0
 27474                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27475  000EBE  EE20 F003          	lfsr	2,3
 27476  000EC2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27477  000EC4  26D9               	addwf	fsr2l,f,c
 27478  000EC6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27479  000EC8  22DA               	addwfc	fsr2h,f,c
 27480  000ECA  50DF               	movf	indf2,w,c
 27481  000ECC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27482  000ECE  90D8               	bcf	status,0,c
 27483  000ED0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27484  000ED2  90D8               	bcf	status,0,c
 27485  000ED4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27486  000ED6  12AD               	iorwf	4013,f,c	;volatile
 27487                           
 27488                           ; BSR set to: 0
 27489                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 27490  000ED8  0E00               	movlw	0
 27491  000EDA  6EAC               	movwf	4012,c	;volatile
 27492                           
 27493                           ; BSR set to: 0
 27494                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27495  000EDC  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27496  000EE0  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27497  000EE4  50DF               	movf	indf2,w,c
 27498  000EE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27499  000EE8  0E00               	movlw	0
 27500  000EEA  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27501  000EEC  0E80               	movlw	128
 27502  000EEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27503  000EF0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27504  000EF2  12AC               	iorwf	4012,f,c	;volatile
 27505                           
 27506                           ; BSR set to: 0
 27507                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27508  000EF4  EE20 F005          	lfsr	2,5
 27509  000EF8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27510  000EFA  26D9               	addwf	fsr2l,f,c
 27511  000EFC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27512  000EFE  22DA               	addwfc	fsr2h,f,c
 27513  000F00  50DF               	movf	indf2,w,c
 27514  000F02  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27515  000F04  0E06               	movlw	6
 27516  000F06  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27517  000F08                     u13465:
 27518  000F08  90D8               	bcf	status,0,c
 27519  000F0A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27520  000F0C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27521  000F0E  D7FC               	goto	u13465
 27522  000F10  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27523  000F12  12AC               	iorwf	4012,f,c	;volatile
 27524                           
 27525                           ; BSR set to: 0
 27526                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27527  000F14  EE20 F007          	lfsr	2,7
 27528  000F18  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27529  000F1A  26D9               	addwf	fsr2l,f,c
 27530  000F1C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27531  000F1E  22DA               	addwfc	fsr2h,f,c
 27532  000F20  50DF               	movf	indf2,w,c
 27533  000F22  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27534  000F24  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27535  000F26  0BF0               	andlw	240
 27536  000F28  12AC               	iorwf	4012,f,c	;volatile
 27537                           
 27538                           ; BSR set to: 0
 27539                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 27540  000F2A  0E00               	movlw	0
 27541  000F2C  6E7E               	movwf	3966,c	;volatile
 27542                           
 27543                           ; BSR set to: 0
 27544                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27545  000F2E  EE20 F002          	lfsr	2,2
 27546  000F32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27547  000F34  26D9               	addwf	fsr2l,f,c
 27548  000F36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27549  000F38  22DA               	addwfc	fsr2h,f,c
 27550  000F3A  50DF               	movf	indf2,w,c
 27551  000F3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27552  000F3E  90D8               	bcf	status,0,c
 27553  000F40  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27554  000F42  90D8               	bcf	status,0,c
 27555  000F44  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27556  000F46  90D8               	bcf	status,0,c
 27557  000F48  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27558  000F4A  127E               	iorwf	3966,f,c	;volatile
 27559                           
 27560                           ; BSR set to: 0
 27561                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27562  000F4C  EE20 F00A          	lfsr	2,10
 27563  000F50  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27564  000F52  26D9               	addwf	fsr2l,f,c
 27565  000F54  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27566  000F56  22DA               	addwfc	fsr2h,f,c
 27567  000F58  50DF               	movf	indf2,w,c
 27568  000F5A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27569  000F5C  90D8               	bcf	status,0,c
 27570  000F5E  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27571  000F60  127E               	iorwf	3966,f,c	;volatile
 27572                           
 27573                           ; BSR set to: 0
 27574                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27575  000F62  EE20 F009          	lfsr	2,9
 27576  000F66  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27577  000F68  26D9               	addwf	fsr2l,f,c
 27578  000F6A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27579  000F6C  22DA               	addwfc	fsr2h,f,c
 27580  000F6E  50DF               	movf	indf2,w,c
 27581  000F70  127E               	iorwf	3966,f,c	;volatile
 27582                           
 27583                           ; BSR set to: 0
 27584                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 27585  000F72  EE20 F00B          	lfsr	2,11
 27586  000F76  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27587  000F78  26D9               	addwf	fsr2l,f,c
 27588  000F7A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27589  000F7C  22DA               	addwfc	fsr2h,f,c
 27590  000F7E  50DF               	movf	indf2,w,c
 27591  000F80  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27592  000F82  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27593  000F84  509D               	movf	3997,w,c	;volatile
 27594  000F86  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27595  000F88  0BEF               	andlw	-17
 27596  000F8A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27597  000F8C  6E9D               	movwf	3997,c	;volatile
 27598                           
 27599                           ; BSR set to: 0
 27600                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 27601  000F8E  EE20 F00C          	lfsr	2,12
 27602  000F92  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27603  000F94  26D9               	addwf	fsr2l,f,c
 27604  000F96  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27605  000F98  22DA               	addwfc	fsr2h,f,c
 27606  000F9A  50DF               	movf	indf2,w,c
 27607  000F9C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27608  000F9E  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27609  000FA0  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27610  000FA2  509D               	movf	3997,w,c	;volatile
 27611  000FA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27612  000FA6  0BDF               	andlw	-33
 27613  000FA8  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27614  000FAA  6E9D               	movwf	3997,c	;volatile
 27615                           
 27616                           ;uart_drv.c: 326: }
 27617  000FAC  0012               	return	
 27618  000FAE                     l668:
 27619                           
 27620                           ; BSR set to: 0
 27621                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 27622                           
 27623                           ; BSR set to: 0
 27624  000FAE  0E02               	movlw	2
 27625  000FB0  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 27626  000FB2  A4D8               	btfss	status,2,c
 27627  000FB4  0012               	return	
 27628                           
 27629                           ; BSR set to: 0
 27630                           ;uart_drv.c: 328: {
 27631                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 27632  000FB6  9094               	bcf	3988,0,c	;volatile
 27633                           
 27634                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 27635  000FB8  8294               	bsf	3988,1,c	;volatile
 27636                           
 27637                           ; BSR set to: 0
 27638                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 27639  000FBA  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27640  000FBE  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27641  000FC2  0E02               	movlw	2
 27642  000FC4  EC64  F016         	call	_SetUartBaudRate
 27643                           
 27644                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 27645  000FC8  0E00               	movlw	0
 27646  000FCA  6EA8               	movwf	4008,c	;volatile
 27647                           
 27648                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27649  000FCC  0100               	movlb	0	; () banked
 27650  000FCE  EE20 F004          	lfsr	2,4
 27651  000FD2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27652  000FD4  26D9               	addwf	fsr2l,f,c
 27653  000FD6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27654  000FD8  22DA               	addwfc	fsr2h,f,c
 27655  000FDA  50DF               	movf	indf2,w,c
 27656  000FDC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27657  000FDE  0E06               	movlw	6
 27658  000FE0  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27659  000FE2                     u13485:
 27660  000FE2  90D8               	bcf	status,0,c
 27661  000FE4  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27662  000FE6  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27663  000FE8  D7FC               	goto	u13485
 27664  000FEA  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27665  000FEC  12A8               	iorwf	4008,f,c	;volatile
 27666                           
 27667                           ; BSR set to: 0
 27668                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27669  000FEE  EE20 F006          	lfsr	2,6
 27670  000FF2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27671  000FF4  26D9               	addwf	fsr2l,f,c
 27672  000FF6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27673  000FF8  22DA               	addwfc	fsr2h,f,c
 27674  000FFA  50DF               	movf	indf2,w,c
 27675  000FFC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27676  000FFE  0E05               	movlw	5
 27677  001000  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27678  001002                     u13495:
 27679  001002  90D8               	bcf	status,0,c
 27680  001004  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27681  001006  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27682  001008  D7FC               	goto	u13495
 27683  00100A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27684  00100C  12A8               	iorwf	4008,f,c	;volatile
 27685                           
 27686                           ; BSR set to: 0
 27687                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 27688  00100E  EE20 F001          	lfsr	2,1
 27689  001012  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27690  001014  26D9               	addwf	fsr2l,f,c
 27691  001016  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27692  001018  22DA               	addwfc	fsr2h,f,c
 27693  00101A  50DF               	movf	indf2,w,c
 27694  00101C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27695  00101E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27696  001020  0BF0               	andlw	240
 27697  001022  12A8               	iorwf	4008,f,c	;volatile
 27698                           
 27699                           ; BSR set to: 0
 27700                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27701  001024  EE20 F008          	lfsr	2,8
 27702  001028  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27703  00102A  26D9               	addwf	fsr2l,f,c
 27704  00102C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27705  00102E  22DA               	addwfc	fsr2h,f,c
 27706  001030  50DF               	movf	indf2,w,c
 27707  001032  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27708  001034  90D8               	bcf	status,0,c
 27709  001036  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27710  001038  90D8               	bcf	status,0,c
 27711  00103A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27712  00103C  90D8               	bcf	status,0,c
 27713  00103E  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27714  001040  12A8               	iorwf	4008,f,c	;volatile
 27715                           
 27716                           ; BSR set to: 0
 27717                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27718  001042  EE20 F003          	lfsr	2,3
 27719  001046  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27720  001048  26D9               	addwf	fsr2l,f,c
 27721  00104A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27722  00104C  22DA               	addwfc	fsr2h,f,c
 27723  00104E  50DF               	movf	indf2,w,c
 27724  001050  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27725  001052  90D8               	bcf	status,0,c
 27726  001054  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27727  001056  90D8               	bcf	status,0,c
 27728  001058  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27729  00105A  12A8               	iorwf	4008,f,c	;volatile
 27730                           
 27731                           ; BSR set to: 0
 27732                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 27733  00105C  0E00               	movlw	0
 27734  00105E  6E9C               	movwf	3996,c	;volatile
 27735                           
 27736                           ; BSR set to: 0
 27737                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27738  001060  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27739  001064  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27740  001068  50DF               	movf	indf2,w,c
 27741  00106A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27742  00106C  0E00               	movlw	0
 27743  00106E  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27744  001070  0E80               	movlw	128
 27745  001072  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27746  001074  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27747  001076  129C               	iorwf	3996,f,c	;volatile
 27748                           
 27749                           ; BSR set to: 0
 27750                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27751  001078  EE20 F005          	lfsr	2,5
 27752  00107C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27753  00107E  26D9               	addwf	fsr2l,f,c
 27754  001080  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27755  001082  22DA               	addwfc	fsr2h,f,c
 27756  001084  50DF               	movf	indf2,w,c
 27757  001086  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27758  001088  0E06               	movlw	6
 27759  00108A  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27760  00108C                     u13505:
 27761  00108C  90D8               	bcf	status,0,c
 27762  00108E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27763  001090  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27764  001092  D7FC               	goto	u13505
 27765  001094  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27766  001096  129C               	iorwf	3996,f,c	;volatile
 27767                           
 27768                           ; BSR set to: 0
 27769                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27770  001098  EE20 F007          	lfsr	2,7
 27771  00109C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27772  00109E  26D9               	addwf	fsr2l,f,c
 27773  0010A0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27774  0010A2  22DA               	addwfc	fsr2h,f,c
 27775  0010A4  50DF               	movf	indf2,w,c
 27776  0010A6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27777  0010A8  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27778  0010AA  0BF0               	andlw	240
 27779  0010AC  129C               	iorwf	3996,f,c	;volatile
 27780                           
 27781                           ; BSR set to: 0
 27782                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 27783  0010AE  0E00               	movlw	0
 27784  0010B0  6E7C               	movwf	3964,c	;volatile
 27785                           
 27786                           ; BSR set to: 0
 27787                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27788  0010B2  EE20 F002          	lfsr	2,2
 27789  0010B6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27790  0010B8  26D9               	addwf	fsr2l,f,c
 27791  0010BA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27792  0010BC  22DA               	addwfc	fsr2h,f,c
 27793  0010BE  50DF               	movf	indf2,w,c
 27794  0010C0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27795  0010C2  90D8               	bcf	status,0,c
 27796  0010C4  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27797  0010C6  90D8               	bcf	status,0,c
 27798  0010C8  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27799  0010CA  90D8               	bcf	status,0,c
 27800  0010CC  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27801  0010CE  127C               	iorwf	3964,f,c	;volatile
 27802                           
 27803                           ; BSR set to: 0
 27804                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27805  0010D0  EE20 F00A          	lfsr	2,10
 27806  0010D4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27807  0010D6  26D9               	addwf	fsr2l,f,c
 27808  0010D8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27809  0010DA  22DA               	addwfc	fsr2h,f,c
 27810  0010DC  50DF               	movf	indf2,w,c
 27811  0010DE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27812  0010E0  90D8               	bcf	status,0,c
 27813  0010E2  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27814  0010E4  127C               	iorwf	3964,f,c	;volatile
 27815                           
 27816                           ; BSR set to: 0
 27817                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27818  0010E6  EE20 F009          	lfsr	2,9
 27819  0010EA  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27820  0010EC  26D9               	addwf	fsr2l,f,c
 27821  0010EE  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27822  0010F0  22DA               	addwfc	fsr2h,f,c
 27823  0010F2  50DF               	movf	indf2,w,c
 27824  0010F4  127C               	iorwf	3964,f,c	;volatile
 27825                           
 27826                           ; BSR set to: 0
 27827                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 27828  0010F6  EE20 F00B          	lfsr	2,11
 27829  0010FA  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27830  0010FC  26D9               	addwf	fsr2l,f,c
 27831  0010FE  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27832  001100  22DA               	addwfc	fsr2h,f,c
 27833  001102  50DF               	movf	indf2,w,c
 27834  001104  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27835  001106  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27836  001108  50A3               	movf	4003,w,c	;volatile
 27837  00110A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27838  00110C  0BEF               	andlw	-17
 27839  00110E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27840  001110  6EA3               	movwf	4003,c	;volatile
 27841                           
 27842                           ; BSR set to: 0
 27843                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 27844  001112  EE20 F00C          	lfsr	2,12
 27845  001116  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27846  001118  26D9               	addwf	fsr2l,f,c
 27847  00111A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27848  00111C  22DA               	addwfc	fsr2h,f,c
 27849  00111E  50DF               	movf	indf2,w,c
 27850  001120  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27851  001122  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27852  001124  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27853  001126  50A3               	movf	4003,w,c	;volatile
 27854  001128  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27855  00112A  0BDF               	andlw	-33
 27856  00112C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27857  00112E  6EA3               	movwf	4003,c	;volatile
 27858                           
 27859                           ; BSR set to: 0
 27860  001130  0012               	return	
 27861  001132                     __end_of_Uart_InitUartModule:
 27862                           	opt stack 0
 27863                           tosu	equ	0xFFF
 27864                           tosh	equ	0xFFE
 27865                           tosl	equ	0xFFD
 27866                           pclath	equ	0xFFA
 27867                           tblptru	equ	0xFF8
 27868                           tblptrh	equ	0xFF7
 27869                           tblptrl	equ	0xFF6
 27870                           tablat	equ	0xFF5
 27871                           prodh	equ	0xFF4
 27872                           prodl	equ	0xFF3
 27873                           intcon	equ	0xFF2
 27874                           intcon2	equ	0xFF1
 27875                           intcon3	equ	0xFF0
 27876                           indf0	equ	0xFEF
 27877                           postinc0	equ	0xFEE
 27878                           plusw0	equ	0xFEB
 27879                           fsr0h	equ	0xFEA
 27880                           fsr0l	equ	0xFE9
 27881                           wreg	equ	0xFE8
 27882                           indf1	equ	0xFE7
 27883                           postinc1	equ	0xFE6
 27884                           postdec1	equ	0xFE5
 27885                           plusw1	equ	0xFE3
 27886                           fsr1h	equ	0xFE2
 27887                           fsr1l	equ	0xFE1
 27888                           indf2	equ	0xFDF
 27889                           postinc2	equ	0xFDE
 27890                           postdec2	equ	0xFDD
 27891                           plusw2	equ	0xFDB
 27892                           fsr2h	equ	0xFDA
 27893                           fsr2l	equ	0xFD9
 27894                           status	equ	0xFD8
 27895                           
 27896 ;; *************** function _SetUartBaudRate *****************
 27897 ;; Defined at:
 27898 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27899 ;; Parameters:    Size  Location     Type
 27900 ;;  Module          1    wreg     unsigned char 
 27901 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 27902 ;;		 -> UartConfig(21), 
 27903 ;; Auto vars:     Size  Location     Type
 27904 ;;  Module          1   57[BANK0 ] unsigned char 
 27905 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 27906 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 27907 ;; Return value:  Size  Location     Type
 27908 ;;                  1    wreg      void 
 27909 ;; Registers used:
 27910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27911 ;; Tracked objects:
 27912 ;;		On entry : 0/0
 27913 ;;		On exit  : 0/0
 27914 ;;		Unchanged: 0/0
 27915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27917 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27919 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27920 ;;Total ram usage:        7 bytes
 27921 ;; Hardware stack levels used:    1
 27922 ;; Hardware stack levels required when called:   12
 27923 ;; This function calls:
 27924 ;;		___lldiv
 27925 ;;		___lmul
 27926 ;; This function is called by:
 27927 ;;		_Uart_InitUartModule
 27928 ;; This function uses a non-reentrant model
 27929 ;;
 27930                           
 27931                           	psect	text129
 27932  002CC8                     __ptext129:
 27933                           	opt stack 0
 27934  002CC8                     _SetUartBaudRate:
 27935                           	opt stack 14
 27936                           
 27937                           ; BSR set to: 0
 27938                           ;incstack = 0
 27939                           ;SetUartBaudRate@Module stored from wreg
 27940  002CC8  0100               	movlb	0	; () banked
 27941  002CCA  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 27942                           
 27943                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 27944  002CCC  0E00               	movlw	0
 27945  002CCE  0100               	movlb	0	; () banked
 27946  002CD0  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27947  002CD2  0E00               	movlw	0
 27948  002CD4  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27949                           
 27950                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 27951  002CD6  0E00               	movlw	0
 27952  002CD8  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27953                           
 27954                           ; BSR set to: 0
 27955                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 27956  002CDA  EE20 F002          	lfsr	2,2
 27957  002CDE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27958  002CE0  26D9               	addwf	fsr2l,f,c
 27959  002CE2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27960  002CE4  22DA               	addwfc	fsr2h,f,c
 27961  002CE6  50DF               	movf	indf2,w,c
 27962  002CE8  A4D8               	btfss	status,2,c
 27963  002CEA  D00B               	goto	l625
 27964                           
 27965                           ; BSR set to: 0
 27966  002CEC  EE20 F002          	lfsr	2,2
 27967  002CF0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27968  002CF2  26D9               	addwf	fsr2l,f,c
 27969  002CF4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27970  002CF6  22DA               	addwfc	fsr2h,f,c
 27971  002CF8  50DF               	movf	indf2,w,c
 27972  002CFA  A4D8               	btfss	status,2,c
 27973  002CFC  D002               	goto	l625
 27974                           
 27975                           ; BSR set to: 0
 27976                           ;uart_drv.c: 128: {
 27977                           ;uart_drv.c: 129: DivisionFactor = 64;
 27978  002CFE  0E40               	movlw	64
 27979  002D00  D039               	goto	L39
 27980  002D02                     l625:
 27981                           
 27982                           ; BSR set to: 0
 27983                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 27984                           
 27985                           ; BSR set to: 0
 27986  002D02  EE20 F002          	lfsr	2,2
 27987  002D06  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27988  002D08  26D9               	addwf	fsr2l,f,c
 27989  002D0A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27990  002D0C  22DA               	addwfc	fsr2h,f,c
 27991  002D0E  04DE               	decf	postinc2,w,c
 27992  002D10  A4D8               	btfss	status,2,c
 27993  002D12  D009               	goto	l627
 27994                           
 27995                           ; BSR set to: 0
 27996  002D14  EE20 F002          	lfsr	2,2
 27997  002D18  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27998  002D1A  26D9               	addwf	fsr2l,f,c
 27999  002D1C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28000  002D1E  22DA               	addwfc	fsr2h,f,c
 28001  002D20  50DF               	movf	indf2,w,c
 28002  002D22  B4D8               	btfsc	status,2,c
 28003  002D24  D012               	goto	u12600
 28004  002D26                     l627:
 28005                           
 28006                           ; BSR set to: 0
 28007                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 28008                           
 28009                           ; BSR set to: 0
 28010  002D26  EE20 F002          	lfsr	2,2
 28011  002D2A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28012  002D2C  26D9               	addwf	fsr2l,f,c
 28013  002D2E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28014  002D30  22DA               	addwfc	fsr2h,f,c
 28015  002D32  50DF               	movf	indf2,w,c
 28016  002D34  A4D8               	btfss	status,2,c
 28017  002D36  D00B               	goto	l629
 28018                           
 28019                           ; BSR set to: 0
 28020  002D38  EE20 F002          	lfsr	2,2
 28021  002D3C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28022  002D3E  26D9               	addwf	fsr2l,f,c
 28023  002D40  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28024  002D42  22DA               	addwfc	fsr2h,f,c
 28025  002D44  04DE               	decf	postinc2,w,c
 28026  002D46  A4D8               	btfss	status,2,c
 28027  002D48  D002               	goto	l629
 28028  002D4A                     u12600:
 28029                           
 28030                           ; BSR set to: 0
 28031                           ;uart_drv.c: 136: {
 28032                           ;uart_drv.c: 137: DivisionFactor = 16;
 28033  002D4A  0E10               	movlw	16
 28034  002D4C  D013               	goto	L39
 28035  002D4E                     l629:
 28036                           
 28037                           ; BSR set to: 0
 28038                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 28039                           
 28040                           ; BSR set to: 0
 28041  002D4E  EE20 F002          	lfsr	2,2
 28042  002D52  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28043  002D54  26D9               	addwf	fsr2l,f,c
 28044  002D56  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28045  002D58  22DA               	addwfc	fsr2h,f,c
 28046  002D5A  04DE               	decf	postinc2,w,c
 28047  002D5C  A4D8               	btfss	status,2,c
 28048  002D5E  D00B               	goto	l631
 28049                           
 28050                           ; BSR set to: 0
 28051  002D60  EE20 F002          	lfsr	2,2
 28052  002D64  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28053  002D66  26D9               	addwf	fsr2l,f,c
 28054  002D68  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28055  002D6A  22DA               	addwfc	fsr2h,f,c
 28056  002D6C  04DE               	decf	postinc2,w,c
 28057  002D6E  A4D8               	btfss	status,2,c
 28058  002D70  D002               	goto	l631
 28059                           
 28060                           ; BSR set to: 0
 28061                           ;uart_drv.c: 140: {
 28062                           ;uart_drv.c: 141: DivisionFactor = 4;
 28063  002D72  0E04               	movlw	4
 28064  002D74                     L39:
 28065  002D74  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 28066  002D76                     l631:
 28067                           
 28068                           ; BSR set to: 0
 28069                           ;uart_drv.c: 146: }
 28070                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 28071                           
 28072                           ; BSR set to: 0
 28073                           
 28074                           ; BSR set to: 0
 28075                           
 28076                           ; BSR set to: 0
 28077                           
 28078                           ; BSR set to: 0
 28079                           
 28080                           ;uart_drv.c: 143: else
 28081                           ;uart_drv.c: 144: {
 28082                           
 28083                           ; BSR set to: 0
 28084  002D76  EE20 F00D          	lfsr	2,13
 28085  002D7A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28086  002D7C  26D9               	addwf	fsr2l,f,c
 28087  002D7E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28088  002D80  22DA               	addwfc	fsr2h,f,c
 28089  002D82  CFDE F089          	movff	postinc2,___lldiv@dividend
 28090  002D86  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 28091  002D8A  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 28092  002D8E  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 28093  002D92  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 28094  002D94  6F7D               	movwf	___lmul@multiplier& (0+255),b
 28095  002D96  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 28096  002D98  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 28097  002D9A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 28098  002D9C  EE20 F011          	lfsr	2,17
 28099  002DA0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28100  002DA2  26D9               	addwf	fsr2l,f,c
 28101  002DA4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28102  002DA6  22DA               	addwfc	fsr2h,f,c
 28103  002DA8  CFDE F081          	movff	postinc2,___lmul@multiplicand
 28104  002DAC  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 28105  002DB0  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 28106  002DB4  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 28107  002DB8  ECEC  F02B         	call	___lmul	;wreg free
 28108  002DBC  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 28109  002DC0  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 28110  002DC4  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 28111  002DC8  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 28112  002DCC  EC5F  F028         	call	___lldiv	;wreg free
 28113  002DD0  0EFF               	movlw	255
 28114  002DD2  0100               	movlb	0	; () banked
 28115  002DD4  2589               	addwf	?___lldiv& (0+255),w,b
 28116  002DD6  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 28117  002DD8  0EFF               	movlw	255
 28118  002DDA  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 28119  002DDC  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 28120                           
 28121                           ; BSR set to: 0
 28122                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 28123  002DDE  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 28124  002DE0  A4D8               	btfss	status,2,c
 28125  002DE2  D005               	goto	l633
 28126                           
 28127                           ; BSR set to: 0
 28128                           ;uart_drv.c: 152: {
 28129                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 28130  002DE4  0E00               	movlw	0
 28131  002DE6  6E7F               	movwf	3967,c	;volatile
 28132                           
 28133                           ; BSR set to: 0
 28134                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 28135  002DE8  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 28136                           
 28137                           ;uart_drv.c: 156: }
 28138  002DEC  0012               	return	
 28139  002DEE                     l633:
 28140                           
 28141                           ; BSR set to: 0
 28142                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 28143                           
 28144                           ; BSR set to: 0
 28145  002DEE  0E02               	movlw	2
 28146  002DF0  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 28147  002DF2  A4D8               	btfss	status,2,c
 28148  002DF4  0012               	return	
 28149                           
 28150                           ; BSR set to: 0
 28151                           ;uart_drv.c: 158: {
 28152                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 28153  002DF6  0E00               	movlw	0
 28154  002DF8  6E7D               	movwf	3965,c	;volatile
 28155                           
 28156                           ; BSR set to: 0
 28157                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 28158  002DFA  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 28159                           
 28160                           ; BSR set to: 0
 28161  002DFE  0012               	return	
 28162  002E00                     __end_of_SetUartBaudRate:
 28163                           	opt stack 0
 28164                           tosu	equ	0xFFF
 28165                           tosh	equ	0xFFE
 28166                           tosl	equ	0xFFD
 28167                           pclath	equ	0xFFA
 28168                           tblptru	equ	0xFF8
 28169                           tblptrh	equ	0xFF7
 28170                           tblptrl	equ	0xFF6
 28171                           tablat	equ	0xFF5
 28172                           prodh	equ	0xFF4
 28173                           prodl	equ	0xFF3
 28174                           intcon	equ	0xFF2
 28175                           intcon2	equ	0xFF1
 28176                           intcon3	equ	0xFF0
 28177                           indf0	equ	0xFEF
 28178                           postinc0	equ	0xFEE
 28179                           plusw0	equ	0xFEB
 28180                           fsr0h	equ	0xFEA
 28181                           fsr0l	equ	0xFE9
 28182                           wreg	equ	0xFE8
 28183                           indf1	equ	0xFE7
 28184                           postinc1	equ	0xFE6
 28185                           postdec1	equ	0xFE5
 28186                           plusw1	equ	0xFE3
 28187                           fsr1h	equ	0xFE2
 28188                           fsr1l	equ	0xFE1
 28189                           indf2	equ	0xFDF
 28190                           postinc2	equ	0xFDE
 28191                           postdec2	equ	0xFDD
 28192                           plusw2	equ	0xFDB
 28193                           fsr2h	equ	0xFDA
 28194                           fsr2l	equ	0xFD9
 28195                           status	equ	0xFD8
 28196                           
 28197 ;; *************** function ___lmul *****************
 28198 ;; Defined at:
 28199 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 28200 ;; Parameters:    Size  Location     Type
 28201 ;;  multiplier      4   29[BANK0 ] unsigned long 
 28202 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 28203 ;; Auto vars:     Size  Location     Type
 28204 ;;  product         4   37[BANK0 ] unsigned long 
 28205 ;; Return value:  Size  Location     Type
 28206 ;;                  4   29[BANK0 ] unsigned long 
 28207 ;; Registers used:
 28208 ;;		wreg, status,2, status,0
 28209 ;; Tracked objects:
 28210 ;;		On entry : 0/0
 28211 ;;		On exit  : 0/0
 28212 ;;		Unchanged: 0/0
 28213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28214 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28215 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28217 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28218 ;;Total ram usage:       12 bytes
 28219 ;; Hardware stack levels used:    1
 28220 ;; Hardware stack levels required when called:   11
 28221 ;; This function calls:
 28222 ;;		Nothing
 28223 ;; This function is called by:
 28224 ;;		_Tmr_TmrBPrSet
 28225 ;;		_SetUartBaudRate
 28226 ;;		_strtol
 28227 ;; This function uses a non-reentrant model
 28228 ;;
 28229                           
 28230                           	psect	text130
 28231  0057D8                     __ptext130:
 28232                           	opt stack 0
 28233  0057D8                     ___lmul:
 28234                           	opt stack 15
 28235                           
 28236                           ; BSR set to: 0
 28237                           ;incstack = 0
 28238  0057D8  0E00               	movlw	0
 28239  0057DA  0100               	movlb	0	; () banked
 28240  0057DC  6F85               	movwf	___lmul@product& (0+255),b
 28241  0057DE  0E00               	movlw	0
 28242  0057E0  6F86               	movwf	(___lmul@product+1)& (0+255),b
 28243  0057E2  0E00               	movlw	0
 28244  0057E4  6F87               	movwf	(___lmul@product+2)& (0+255),b
 28245  0057E6  0E00               	movlw	0
 28246  0057E8  6F88               	movwf	(___lmul@product+3)& (0+255),b
 28247  0057EA                     
 28248                           ; BSR set to: 0
 28249                           
 28250                           ; BSR set to: 0
 28251  0057EA  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 28252  0057EC  D008               	goto	l2859
 28253                           
 28254                           ; BSR set to: 0
 28255  0057EE  5181               	movf	___lmul@multiplicand& (0+255),w,b
 28256  0057F0  2785               	addwf	___lmul@product& (0+255),f,b
 28257  0057F2  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 28258  0057F4  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 28259  0057F6  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 28260  0057F8  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 28261  0057FA  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28262  0057FC  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 28263  0057FE                     l2859:
 28264                           
 28265                           ; BSR set to: 0
 28266                           
 28267                           ; BSR set to: 0
 28268  0057FE  90D8               	bcf	status,0,c
 28269  005800  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 28270  005802  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 28271  005804  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 28272  005806  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 28273                           
 28274                           ; BSR set to: 0
 28275  005808  90D8               	bcf	status,0,c
 28276  00580A  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 28277  00580C  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 28278  00580E  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 28279  005810  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 28280  005812  517D               	movf	___lmul@multiplier& (0+255),w,b
 28281  005814  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 28282  005816  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 28283  005818  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 28284  00581A  A4D8               	btfss	status,2,c
 28285  00581C  D7E6               	goto	l2858
 28286                           
 28287                           ; BSR set to: 0
 28288  00581E  C085  F07D         	movff	___lmul@product,?___lmul
 28289  005822  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 28290  005826  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 28291  00582A  C088  F080         	movff	___lmul@product+3,?___lmul+3
 28292                           
 28293                           ; BSR set to: 0
 28294  00582E  0012               	return		;funcret
 28295  005830                     __end_of___lmul:
 28296                           	opt stack 0
 28297                           tosu	equ	0xFFF
 28298                           tosh	equ	0xFFE
 28299                           tosl	equ	0xFFD
 28300                           pclath	equ	0xFFA
 28301                           tblptru	equ	0xFF8
 28302                           tblptrh	equ	0xFF7
 28303                           tblptrl	equ	0xFF6
 28304                           tablat	equ	0xFF5
 28305                           prodh	equ	0xFF4
 28306                           prodl	equ	0xFF3
 28307                           intcon	equ	0xFF2
 28308                           intcon2	equ	0xFF1
 28309                           intcon3	equ	0xFF0
 28310                           indf0	equ	0xFEF
 28311                           postinc0	equ	0xFEE
 28312                           plusw0	equ	0xFEB
 28313                           fsr0h	equ	0xFEA
 28314                           fsr0l	equ	0xFE9
 28315                           wreg	equ	0xFE8
 28316                           indf1	equ	0xFE7
 28317                           postinc1	equ	0xFE6
 28318                           postdec1	equ	0xFE5
 28319                           plusw1	equ	0xFE3
 28320                           fsr1h	equ	0xFE2
 28321                           fsr1l	equ	0xFE1
 28322                           indf2	equ	0xFDF
 28323                           postinc2	equ	0xFDE
 28324                           postdec2	equ	0xFDD
 28325                           plusw2	equ	0xFDB
 28326                           fsr2h	equ	0xFDA
 28327                           fsr2l	equ	0xFD9
 28328                           status	equ	0xFD8
 28329                           
 28330 ;; *************** function _UartSetConfigLow *****************
 28331 ;; Defined at:
 28332 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28333 ;; Parameters:    Size  Location     Type
 28334 ;;		None
 28335 ;; Auto vars:     Size  Location     Type
 28336 ;;		None
 28337 ;; Return value:  Size  Location     Type
 28338 ;;                  1    wreg      void 
 28339 ;; Registers used:
 28340 ;;		wreg, status,2
 28341 ;; Tracked objects:
 28342 ;;		On entry : 0/0
 28343 ;;		On exit  : 0/0
 28344 ;;		Unchanged: 0/0
 28345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28350 ;;Total ram usage:        0 bytes
 28351 ;; Hardware stack levels used:    1
 28352 ;; Hardware stack levels required when called:   11
 28353 ;; This function calls:
 28354 ;;		Nothing
 28355 ;; This function is called by:
 28356 ;;		_ConfigureModem
 28357 ;; This function uses a non-reentrant model
 28358 ;;
 28359                           
 28360                           	psect	text131
 28361  005830                     __ptext131:
 28362                           	opt stack 0
 28363  005830                     _UartSetConfigLow:
 28364                           	opt stack 15
 28365                           
 28366                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 28367                           
 28368                           ; BSR set to: 0
 28369                           ;incstack = 0
 28370  005830  0E01               	movlw	1
 28371  005832  0103               	movlb	3	; () banked
 28372  005834  6F20               	movwf	_UartConfig& (0+255),b
 28373                           
 28374                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 28375  005836  0E00               	movlw	0
 28376  005838  6F21               	movwf	(_UartConfig+1)& (0+255),b
 28377                           
 28378                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 28379  00583A  0E00               	movlw	0
 28380  00583C  6F22               	movwf	(_UartConfig+2)& (0+255),b
 28381                           
 28382                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 28383  00583E  0E00               	movlw	0
 28384  005840  6F23               	movwf	(_UartConfig+3)& (0+255),b
 28385                           
 28386                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 28387  005842  0E00               	movlw	0
 28388  005844  6F24               	movwf	(_UartConfig+4)& (0+255),b
 28389                           
 28390                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 28391  005846  0E00               	movlw	0
 28392  005848  6F25               	movwf	(_UartConfig+5)& (0+255),b
 28393                           
 28394                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 28395  00584A  0E01               	movlw	1
 28396  00584C  6F26               	movwf	(_UartConfig+6)& (0+255),b
 28397                           
 28398                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 28399  00584E  0E01               	movlw	1
 28400  005850  6F27               	movwf	(_UartConfig+7)& (0+255),b
 28401                           
 28402                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 28403  005852  0E00               	movlw	0
 28404  005854  6F28               	movwf	(_UartConfig+8)& (0+255),b
 28405                           
 28406                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 28407  005856  0E00               	movlw	0
 28408  005858  6F29               	movwf	(_UartConfig+9)& (0+255),b
 28409                           
 28410                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 28411  00585A  0E00               	movlw	0
 28412  00585C  6F2A               	movwf	(_UartConfig+10)& (0+255),b
 28413                           
 28414                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 28415  00585E  0E00               	movlw	0
 28416  005860  6F2B               	movwf	(_UartConfig+11)& (0+255),b
 28417                           
 28418                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 28419  005862  0E01               	movlw	1
 28420  005864  6F2C               	movwf	(_UartConfig+12)& (0+255),b
 28421                           
 28422                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 28423  005866  0E00               	movlw	0
 28424  005868  6F2D               	movwf	(_UartConfig+13)& (0+255),b
 28425  00586A  0E6C               	movlw	108
 28426  00586C  6F2E               	movwf	(_UartConfig+14)& (0+255),b
 28427  00586E  0EDC               	movlw	220
 28428  005870  6F2F               	movwf	(_UartConfig+15)& (0+255),b
 28429  005872  0E02               	movlw	2
 28430  005874  6F30               	movwf	(_UartConfig+16)& (0+255),b
 28431                           
 28432                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 28433  005876  0E80               	movlw	128
 28434  005878  6F31               	movwf	(_UartConfig+17)& (0+255),b
 28435  00587A  0E25               	movlw	37
 28436  00587C  6F32               	movwf	(_UartConfig+18)& (0+255),b
 28437  00587E  0E00               	movlw	0
 28438  005880  6F33               	movwf	(_UartConfig+19)& (0+255),b
 28439  005882  0E00               	movlw	0
 28440  005884  6F34               	movwf	(_UartConfig+20)& (0+255),b
 28441                           
 28442                           ; BSR set to: 3
 28443  005886  0012               	return		;funcret
 28444  005888                     __end_of_UartSetConfigLow:
 28445                           	opt stack 0
 28446                           tosu	equ	0xFFF
 28447                           tosh	equ	0xFFE
 28448                           tosl	equ	0xFFD
 28449                           pclath	equ	0xFFA
 28450                           tblptru	equ	0xFF8
 28451                           tblptrh	equ	0xFF7
 28452                           tblptrl	equ	0xFF6
 28453                           tablat	equ	0xFF5
 28454                           prodh	equ	0xFF4
 28455                           prodl	equ	0xFF3
 28456                           intcon	equ	0xFF2
 28457                           intcon2	equ	0xFF1
 28458                           intcon3	equ	0xFF0
 28459                           indf0	equ	0xFEF
 28460                           postinc0	equ	0xFEE
 28461                           plusw0	equ	0xFEB
 28462                           fsr0h	equ	0xFEA
 28463                           fsr0l	equ	0xFE9
 28464                           wreg	equ	0xFE8
 28465                           indf1	equ	0xFE7
 28466                           postinc1	equ	0xFE6
 28467                           postdec1	equ	0xFE5
 28468                           plusw1	equ	0xFE3
 28469                           fsr1h	equ	0xFE2
 28470                           fsr1l	equ	0xFE1
 28471                           indf2	equ	0xFDF
 28472                           postinc2	equ	0xFDE
 28473                           postdec2	equ	0xFDD
 28474                           plusw2	equ	0xFDB
 28475                           fsr2h	equ	0xFDA
 28476                           fsr2l	equ	0xFD9
 28477                           status	equ	0xFD8
 28478                           
 28479 ;; *************** function _CheckModem *****************
 28480 ;; Defined at:
 28481 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28482 ;; Parameters:    Size  Location     Type
 28483 ;;		None
 28484 ;; Auto vars:     Size  Location     Type
 28485 ;;		None
 28486 ;; Return value:  Size  Location     Type
 28487 ;;                  1    wreg      void 
 28488 ;; Registers used:
 28489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28490 ;; Tracked objects:
 28491 ;;		On entry : 0/0
 28492 ;;		On exit  : 0/0
 28493 ;;		Unchanged: 0/0
 28494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28499 ;;Total ram usage:        0 bytes
 28500 ;; Hardware stack levels used:    1
 28501 ;; Hardware stack levels required when called:   14
 28502 ;; This function calls:
 28503 ;;		_GenerateEvt
 28504 ;;		_OsTmr_GetTimerStatus
 28505 ;;		_OsTmr_StartTimer
 28506 ;;		_ReceiveEvt
 28507 ;;		_Uart_WriteConstString
 28508 ;; This function is called by:
 28509 ;;		_Mdm_MainTask
 28510 ;; This function uses a non-reentrant model
 28511 ;;
 28512                           
 28513                           	psect	text132
 28514  0028E8                     __ptext132:
 28515                           	opt stack 0
 28516  0028E8                     _CheckModem:
 28517                           	opt stack 13
 28518                           
 28519                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 28520                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 28521                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 28522                           
 28523                           ; BSR set to: 3
 28524                           ;incstack = 0
 28525  0028E8  D096               	goto	l982
 28526  0028EA                     
 28527                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 28528  0028EA  0EF0               	movlw	low CheckModem@Timeout
 28529  0028EC  0100               	movlb	0	; () banked
 28530  0028EE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28531  0028F0  0E03               	movlw	high CheckModem@Timeout
 28532  0028F2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28533  0028F4  0ED0               	movlw	208
 28534  0028F6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28535  0028F8  0E07               	movlw	7
 28536  0028FA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28537  0028FC  0E00               	movlw	0
 28538  0028FE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28539  002900  0E00               	movlw	0
 28540  002902  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28541  002904  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 28542                           
 28543                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 28544  002908  0E01               	movlw	1
 28545  00290A  6E29               	movwf	CheckModem@CheckMdmSts,c
 28546                           
 28547                           ;mdm_gsm_gprs.c: 295: break;
 28548  00290C  0012               	return	
 28549  00290E                     
 28550                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28551  00290E  0EF0               	movlw	low CheckModem@Timeout
 28552  002910  0100               	movlb	0	; () banked
 28553  002912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28554  002914  0E03               	movlw	high CheckModem@Timeout
 28555  002916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28556  002918  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 28557  00291C  06E8               	decf	wreg,f,c
 28558  00291E  A4D8               	btfss	status,2,c
 28559  002920  0012               	return	
 28560                           
 28561                           ;mdm_gsm_gprs.c: 300: {
 28562                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 28563  002922  0E02               	movlw	2
 28564  002924  6E29               	movwf	CheckModem@CheckMdmSts,c
 28565                           
 28566                           ;mdm_gsm_gprs.c: 303: }
 28567                           ;mdm_gsm_gprs.c: 304: break;
 28568  002926  0012               	return	
 28569  002928                     
 28570                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 28571  002928  0EE6               	movlw	low STR_1
 28572  00292A  0100               	movlb	0	; () banked
 28573  00292C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28574  00292E  0EFF               	movlw	high STR_1
 28575  002930  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28576  002932  0E01               	movlw	1
 28577  002934  ECC0  F02F         	call	_Uart_WriteConstString
 28578                           
 28579                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 28580  002938  0EF0               	movlw	low CheckModem@Timeout
 28581  00293A  0100               	movlb	0	; () banked
 28582  00293C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28583  00293E  0E03               	movlw	high CheckModem@Timeout
 28584  002940  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28585  002942  0ED0               	movlw	208
 28586  002944  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28587  002946  0E07               	movlw	7
 28588  002948  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28589  00294A  0E00               	movlw	0
 28590  00294C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28591  00294E  0E00               	movlw	0
 28592  002950  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28593  002952  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 28594                           
 28595                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 28596  002956  0E03               	movlw	3
 28597  002958  6E29               	movwf	CheckModem@CheckMdmSts,c
 28598                           
 28599                           ;mdm_gsm_gprs.c: 313: break;
 28600  00295A  0012               	return	
 28601  00295C                     
 28602                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 28603  00295C  0E3C               	movlw	low _NewStringReceived
 28604  00295E  0100               	movlb	0	; () banked
 28605  002960  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28606  002962  0E00               	movlw	high _NewStringReceived
 28607  002964  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28608  002966  ECF0  F031         	call	_ReceiveEvt	;wreg free
 28609  00296A  0900               	iorlw	0
 28610  00296C  B4D8               	btfsc	status,2,c
 28611  00296E  D02F               	goto	l989
 28612                           
 28613                           ;mdm_gsm_gprs.c: 318: {
 28614                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 28615  002970  CC58  FFE8         	movff	_RxBuffer,wreg
 28616  002974  0A4F               	xorlw	79
 28617  002976  A4D8               	btfss	status,2,c
 28618  002978  D005               	goto	u14510
 28619  00297A  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28620  00297E  0A4B               	xorlw	75
 28621  002980  B4D8               	btfsc	status,2,c
 28622  002982  D00A               	goto	u14530
 28623  002984                     u14510:
 28624  002984  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28625  002988  0A4F               	xorlw	79
 28626  00298A  A4D8               	btfss	status,2,c
 28627  00298C  0012               	return	
 28628  00298E  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28629  002992  0A4B               	xorlw	75
 28630  002994  A4D8               	btfss	status,2,c
 28631  002996  0012               	return	
 28632  002998                     u14530:
 28633                           
 28634                           ;mdm_gsm_gprs.c: 321: {
 28635                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 28636  002998  0E02               	movlw	2
 28637  00299A  0100               	movlb	0	; () banked
 28638  00299C  6FD0               	movwf	_MdmStatus& (0+255),b
 28639                           
 28640                           ; BSR set to: 0
 28641                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 28642  00299E  0EE0               	movlw	low _MdmOnOffPulseRequest
 28643  0029A0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28644  0029A2  0E00               	movlw	high _MdmOnOffPulseRequest
 28645  0029A4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28646  0029A6  ECE5  F033         	call	_GenerateEvt	;wreg free
 28647                           
 28648                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 28649  0029AA  0EF0               	movlw	low CheckModem@Timeout
 28650  0029AC  0100               	movlb	0	; () banked
 28651  0029AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28652  0029B0  0E03               	movlw	high CheckModem@Timeout
 28653  0029B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28654  0029B4  0EE8               	movlw	232
 28655  0029B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28656  0029B8  0E03               	movlw	3
 28657  0029BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28658  0029BC  0E00               	movlw	0
 28659  0029BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28660  0029C0  0E00               	movlw	0
 28661  0029C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28662  0029C4  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 28663                           
 28664                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 28665  0029C8  0E04               	movlw	4
 28666  0029CA  6E29               	movwf	CheckModem@CheckMdmSts,c
 28667                           
 28668                           ;mdm_gsm_gprs.c: 329: }
 28669                           ;mdm_gsm_gprs.c: 330: }
 28670  0029CC  0012               	return	
 28671  0029CE                     l989:
 28672                           
 28673                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28674  0029CE  0EF0               	movlw	low CheckModem@Timeout
 28675  0029D0  0100               	movlb	0	; () banked
 28676  0029D2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28677  0029D4  0E03               	movlw	high CheckModem@Timeout
 28678  0029D6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28679  0029D8  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 28680  0029DC  06E8               	decf	wreg,f,c
 28681  0029DE  A4D8               	btfss	status,2,c
 28682  0029E0  0012               	return	
 28683                           
 28684                           ;mdm_gsm_gprs.c: 332: {
 28685                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 28686  0029E2  0E00               	movlw	0
 28687  0029E4  0100               	movlb	0	; () banked
 28688  0029E6  6FD0               	movwf	_MdmStatus& (0+255),b
 28689                           
 28690                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 28691  0029E8  0E01               	movlw	1
 28692  0029EA  6E2A               	movwf	_ComChecCompleted,c
 28693                           
 28694                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 28695  0029EC  0E05               	movlw	5
 28696  0029EE  6E29               	movwf	CheckModem@CheckMdmSts,c
 28697                           
 28698                           ; BSR set to: 0
 28699                           ;mdm_gsm_gprs.c: 343: }
 28700                           ;mdm_gsm_gprs.c: 344: break;
 28701                           
 28702                           ; BSR set to: 0
 28703                           
 28704                           ;mdm_gsm_gprs.c: 340: else
 28705                           ;mdm_gsm_gprs.c: 341: {
 28706                           
 28707                           ; BSR set to: 0
 28708                           
 28709                           ;mdm_gsm_gprs.c: 339: }
 28710  0029F0  0012               	return	
 28711  0029F2                     
 28712                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28713                           
 28714                           ; BSR set to: 0
 28715  0029F2  0EF0               	movlw	low CheckModem@Timeout
 28716  0029F4  0100               	movlb	0	; () banked
 28717  0029F6  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28718  0029F8  0E03               	movlw	high CheckModem@Timeout
 28719  0029FA  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28720  0029FC  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 28721  002A00  06E8               	decf	wreg,f,c
 28722  002A02  A4D8               	btfss	status,2,c
 28723  002A04  0012               	return	
 28724                           
 28725                           ;mdm_gsm_gprs.c: 349: {
 28726                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 28727  002A06  0E00               	movlw	0
 28728  002A08  0100               	movlb	0	; () banked
 28729  002A0A  6FD0               	movwf	_MdmStatus& (0+255),b
 28730                           
 28731                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 28732  002A0C  0E01               	movlw	1
 28733  002A0E  6E2A               	movwf	_ComChecCompleted,c
 28734                           
 28735                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 28736  002A10  0E05               	movlw	5
 28737  002A12  6E29               	movwf	CheckModem@CheckMdmSts,c
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;mdm_gsm_gprs.c: 365: }
 28741                           
 28742                           ; BSR set to: 0
 28743                           ;mdm_gsm_gprs.c: 364: break;
 28744                           
 28745                           ;mdm_gsm_gprs.c: 363: default:
 28746                           
 28747                           ; BSR set to: 0
 28748                           ;mdm_gsm_gprs.c: 361: break;
 28749                           
 28750                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 28751                           
 28752                           ; BSR set to: 0
 28753                           ;mdm_gsm_gprs.c: 356: }
 28754                           ;mdm_gsm_gprs.c: 357: break;
 28755  002A14  0012               	return	
 28756  002A16                     l982:
 28757                           
 28758                           ; BSR set to: 0
 28759  002A16  5029               	movf	CheckModem@CheckMdmSts,w,c
 28760                           
 28761                           ; Switch size 1, requested type "space"
 28762                           ; Number of cases is 6, Range of values is 0 to 5
 28763                           ; switch strategies available:
 28764                           ; Name         Instructions Cycles
 28765                           ; simple_byte           19    10 (average)
 28766                           ;	Chosen strategy is simple_byte
 28767  002A18  0A00               	xorlw	0	; case 0
 28768  002A1A  B4D8               	btfsc	status,2,c
 28769  002A1C  D766               	goto	l983
 28770  002A1E  0A01               	xorlw	1	; case 1
 28771  002A20  B4D8               	btfsc	status,2,c
 28772  002A22  D775               	goto	l985
 28773  002A24  0A03               	xorlw	3	; case 2
 28774  002A26  B4D8               	btfsc	status,2,c
 28775  002A28  D77F               	goto	l987
 28776  002A2A  0A01               	xorlw	1	; case 3
 28777  002A2C  B4D8               	btfsc	status,2,c
 28778  002A2E  D796               	goto	l988
 28779  002A30  0A07               	xorlw	7	; case 4
 28780  002A32  B4D8               	btfsc	status,2,c
 28781  002A34  D7DE               	goto	l998
 28782  002A36  0A01               	xorlw	1	; case 5
 28783  002A38  0012               	return	
 28784  002A3A                     __end_of_CheckModem:
 28785                           	opt stack 0
 28786                           tosu	equ	0xFFF
 28787                           tosh	equ	0xFFE
 28788                           tosl	equ	0xFFD
 28789                           pclath	equ	0xFFA
 28790                           tblptru	equ	0xFF8
 28791                           tblptrh	equ	0xFF7
 28792                           tblptrl	equ	0xFF6
 28793                           tablat	equ	0xFF5
 28794                           prodh	equ	0xFF4
 28795                           prodl	equ	0xFF3
 28796                           intcon	equ	0xFF2
 28797                           intcon2	equ	0xFF1
 28798                           intcon3	equ	0xFF0
 28799                           indf0	equ	0xFEF
 28800                           postinc0	equ	0xFEE
 28801                           plusw0	equ	0xFEB
 28802                           fsr0h	equ	0xFEA
 28803                           fsr0l	equ	0xFE9
 28804                           wreg	equ	0xFE8
 28805                           indf1	equ	0xFE7
 28806                           postinc1	equ	0xFE6
 28807                           postdec1	equ	0xFE5
 28808                           plusw1	equ	0xFE3
 28809                           fsr1h	equ	0xFE2
 28810                           fsr1l	equ	0xFE1
 28811                           indf2	equ	0xFDF
 28812                           postinc2	equ	0xFDE
 28813                           postdec2	equ	0xFDD
 28814                           plusw2	equ	0xFDB
 28815                           fsr2h	equ	0xFDA
 28816                           fsr2l	equ	0xFD9
 28817                           status	equ	0xFD8
 28818                           
 28819 ;; *************** function _MdmCntSm *****************
 28820 ;; Defined at:
 28821 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28822 ;; Parameters:    Size  Location     Type
 28823 ;;		None
 28824 ;; Auto vars:     Size  Location     Type
 28825 ;;		None
 28826 ;; Return value:  Size  Location     Type
 28827 ;;                  1    wreg      void 
 28828 ;; Registers used:
 28829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28830 ;; Tracked objects:
 28831 ;;		On entry : 0/0
 28832 ;;		On exit  : 0/0
 28833 ;;		Unchanged: 0/0
 28834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28839 ;;Total ram usage:        0 bytes
 28840 ;; Hardware stack levels used:    1
 28841 ;; Hardware stack levels required when called:   12
 28842 ;; This function calls:
 28843 ;;		_InitModemInterface
 28844 ;;		_ReceiveEvt
 28845 ;; This function is called by:
 28846 ;;		_Mdm_DrvMainFn
 28847 ;; This function uses a non-reentrant model
 28848 ;;
 28849                           
 28850                           	psect	text133
 28851  0046BA                     __ptext133:
 28852                           	opt stack 0
 28853  0046BA                     _MdmCntSm:
 28854                           	opt stack 15
 28855                           
 28856                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 28857                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 28858                           ;mdm_drv.c: 204: switch (MdmCntState)
 28859                           
 28860                           ;incstack = 0
 28861  0046BA  D045               	goto	l315
 28862  0046BC                     
 28863                           ;mdm_drv.c: 208: InitModemInterface();
 28864  0046BC  ECA9  F034         	call	_InitModemInterface	;wreg free
 28865                           
 28866                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 28867  0046C0  0E01               	movlw	1
 28868  0046C2  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28869                           
 28870                           ;mdm_drv.c: 211: break;
 28871  0046C4  0012               	return	
 28872  0046C6                     
 28873                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 28874  0046C6  0EE0               	movlw	low _MdmOnOffPulseRequest
 28875  0046C8  0100               	movlb	0	; () banked
 28876  0046CA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28877  0046CC  0E00               	movlw	high _MdmOnOffPulseRequest
 28878  0046CE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28879  0046D0  ECF0  F031         	call	_ReceiveEvt	;wreg free
 28880  0046D4  0900               	iorlw	0
 28881  0046D6  B4D8               	btfsc	status,2,c
 28882  0046D8  D009               	goto	l319
 28883                           
 28884                           ;mdm_drv.c: 216: {
 28885                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 28886  0046DA  0E02               	movlw	2
 28887  0046DC  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28888                           
 28889                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 28890  0046DE  8284               	bsf	3972,1,c	;volatile
 28891                           
 28892                           ;mdm_drv.c: 222: Counter = 0;
 28893  0046E0  0E00               	movlw	0
 28894  0046E2  0102               	movlb	2	; () banked
 28895  0046E4  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28896  0046E6  0E00               	movlw	0
 28897  0046E8  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 28898                           
 28899                           ;mdm_drv.c: 223: }
 28900  0046EA  0012               	return	
 28901  0046EC                     l319:
 28902                           
 28903                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 28904                           
 28905                           ; BSR set to: 2
 28906  0046EC  0E3D               	movlw	low _MdmResetRequest
 28907  0046EE  0100               	movlb	0	; () banked
 28908  0046F0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28909  0046F2  0E00               	movlw	high _MdmResetRequest
 28910  0046F4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28911  0046F6  ECF0  F031         	call	_ReceiveEvt	;wreg free
 28912  0046FA  0900               	iorlw	0
 28913  0046FC  B4D8               	btfsc	status,2,c
 28914  0046FE  0012               	return	
 28915                           
 28916                           ;mdm_drv.c: 225: {
 28917                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 28918  004700  0E03               	movlw	3
 28919  004702  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28920                           
 28921                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 28922  004704  8084               	bsf	3972,0,c	;volatile
 28923                           
 28924                           ;mdm_drv.c: 231: Counter = 0;
 28925  004706  0E00               	movlw	0
 28926  004708  0102               	movlb	2	; () banked
 28927  00470A  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28928  00470C  0E00               	movlw	0
 28929  00470E  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 28930                           
 28931                           ; BSR set to: 2
 28932                           ;mdm_drv.c: 236: }
 28933                           ;mdm_drv.c: 237: break;
 28934                           
 28935                           ; BSR set to: 2
 28936                           
 28937                           ;mdm_drv.c: 233: else
 28938                           ;mdm_drv.c: 234: {
 28939                           
 28940                           ; BSR set to: 2
 28941                           
 28942                           ;mdm_drv.c: 232: }
 28943  004710  0012               	return	
 28944  004712                     
 28945                           ;mdm_drv.c: 241: Counter++;
 28946                           
 28947                           ; BSR set to: 2
 28948  004712  0102               	movlb	2	; () banked
 28949  004714  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28950  004716  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28951                           
 28952                           ; BSR set to: 2
 28953                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 28954  004718  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28955  00471A  E104               	bnz	u14430
 28956  00471C  0E96               	movlw	150
 28957  00471E  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 28958  004720  A0D8               	btfss	status,0,c
 28959  004722  0012               	return	
 28960  004724                     u14430:
 28961                           
 28962                           ; BSR set to: 2
 28963                           ;mdm_drv.c: 244: {
 28964                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 28965  004724  9284               	bcf	3972,1,c	;volatile
 28966                           
 28967                           ; BSR set to: 2
 28968                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 28969  004726  0E01               	movlw	1
 28970  004728  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28971                           
 28972                           ; BSR set to: 2
 28973                           ;mdm_drv.c: 249: }
 28974                           ;mdm_drv.c: 250: break;
 28975  00472A  0012               	return	
 28976  00472C                     
 28977                           ;mdm_drv.c: 254: Counter++;
 28978                           
 28979                           ; BSR set to: 2
 28980  00472C  0102               	movlb	2	; () banked
 28981  00472E  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28982  004730  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28983                           
 28984                           ; BSR set to: 2
 28985                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 28986  004732  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28987  004734  E104               	bnz	u14440
 28988  004736  0E0A               	movlw	10
 28989  004738  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 28990  00473A  A0D8               	btfss	status,0,c
 28991  00473C  0012               	return	
 28992  00473E                     u14440:
 28993                           
 28994                           ; BSR set to: 2
 28995                           ;mdm_drv.c: 257: {
 28996                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 28997  00473E  9084               	bcf	3972,0,c	;volatile
 28998                           
 28999                           ; BSR set to: 2
 29000                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 29001  004740  0E01               	movlw	1
 29002  004742  6E2D               	movwf	MdmCntSm@MdmCntState,c
 29003                           
 29004                           ; BSR set to: 2
 29005                           ;mdm_drv.c: 267: }
 29006                           
 29007                           ; BSR set to: 2
 29008                           ;mdm_drv.c: 266: break;
 29009                           
 29010                           ;mdm_drv.c: 265: default:
 29011                           
 29012                           ; BSR set to: 2
 29013                           ;mdm_drv.c: 262: }
 29014                           ;mdm_drv.c: 263: break;
 29015  004744  0012               	return	
 29016  004746                     l315:
 29017                           
 29018                           ; BSR set to: 2
 29019  004746  502D               	movf	MdmCntSm@MdmCntState,w,c
 29020                           
 29021                           ; Switch size 1, requested type "space"
 29022                           ; Number of cases is 4, Range of values is 0 to 3
 29023                           ; switch strategies available:
 29024                           ; Name         Instructions Cycles
 29025                           ; simple_byte           13     7 (average)
 29026                           ;	Chosen strategy is simple_byte
 29027  004748  0A00               	xorlw	0	; case 0
 29028  00474A  B4D8               	btfsc	status,2,c
 29029  00474C  D7B7               	goto	l316
 29030  00474E  0A01               	xorlw	1	; case 1
 29031  004750  B4D8               	btfsc	status,2,c
 29032  004752  D7B9               	goto	l318
 29033  004754  0A03               	xorlw	3	; case 2
 29034  004756  B4D8               	btfsc	status,2,c
 29035  004758  D7DC               	goto	l323
 29036  00475A  0A01               	xorlw	1	; case 3
 29037  00475C  A4D8               	btfss	status,2,c
 29038  00475E  0012               	return	
 29039  004760  D7E5               	goto	l325
 29040  004762                     __end_of_MdmCntSm:
 29041                           	opt stack 0
 29042                           tosu	equ	0xFFF
 29043                           tosh	equ	0xFFE
 29044                           tosl	equ	0xFFD
 29045                           pclath	equ	0xFFA
 29046                           tblptru	equ	0xFF8
 29047                           tblptrh	equ	0xFF7
 29048                           tblptrl	equ	0xFF6
 29049                           tablat	equ	0xFF5
 29050                           prodh	equ	0xFF4
 29051                           prodl	equ	0xFF3
 29052                           intcon	equ	0xFF2
 29053                           intcon2	equ	0xFF1
 29054                           intcon3	equ	0xFF0
 29055                           indf0	equ	0xFEF
 29056                           postinc0	equ	0xFEE
 29057                           plusw0	equ	0xFEB
 29058                           fsr0h	equ	0xFEA
 29059                           fsr0l	equ	0xFE9
 29060                           wreg	equ	0xFE8
 29061                           indf1	equ	0xFE7
 29062                           postinc1	equ	0xFE6
 29063                           postdec1	equ	0xFE5
 29064                           plusw1	equ	0xFE3
 29065                           fsr1h	equ	0xFE2
 29066                           fsr1l	equ	0xFE1
 29067                           indf2	equ	0xFDF
 29068                           postinc2	equ	0xFDE
 29069                           postdec2	equ	0xFDD
 29070                           plusw2	equ	0xFDB
 29071                           fsr2h	equ	0xFDA
 29072                           fsr2l	equ	0xFD9
 29073                           status	equ	0xFD8
 29074                           
 29075 ;; *************** function _InitModemInterface *****************
 29076 ;; Defined at:
 29077 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 29078 ;; Parameters:    Size  Location     Type
 29079 ;;		None
 29080 ;; Auto vars:     Size  Location     Type
 29081 ;;		None
 29082 ;; Return value:  Size  Location     Type
 29083 ;;                  1    wreg      void 
 29084 ;; Registers used:
 29085 ;;		None
 29086 ;; Tracked objects:
 29087 ;;		On entry : 0/0
 29088 ;;		On exit  : 0/0
 29089 ;;		Unchanged: 0/0
 29090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29095 ;;Total ram usage:        0 bytes
 29096 ;; Hardware stack levels used:    1
 29097 ;; Hardware stack levels required when called:   11
 29098 ;; This function calls:
 29099 ;;		Nothing
 29100 ;; This function is called by:
 29101 ;;		_MdmCntSm
 29102 ;; This function uses a non-reentrant model
 29103 ;;
 29104                           
 29105                           	psect	text134
 29106  006952                     __ptext134:
 29107                           	opt stack 0
 29108  006952                     _InitModemInterface:
 29109                           	opt stack 15
 29110                           
 29111                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 29112                           
 29113                           ;incstack = 0
 29114  006952  9096               	bcf	3990,0,c	;volatile
 29115                           
 29116                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 29117  006954  9296               	bcf	3990,1,c	;volatile
 29118                           
 29119                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 29120  006956  8496               	bsf	3990,2,c	;volatile
 29121  006958  0012               	return		;funcret
 29122  00695A                     __end_of_InitModemInterface:
 29123                           	opt stack 0
 29124                           tosu	equ	0xFFF
 29125                           tosh	equ	0xFFE
 29126                           tosl	equ	0xFFD
 29127                           pclath	equ	0xFFA
 29128                           tblptru	equ	0xFF8
 29129                           tblptrh	equ	0xFF7
 29130                           tblptrl	equ	0xFF6
 29131                           tablat	equ	0xFF5
 29132                           prodh	equ	0xFF4
 29133                           prodl	equ	0xFF3
 29134                           intcon	equ	0xFF2
 29135                           intcon2	equ	0xFF1
 29136                           intcon3	equ	0xFF0
 29137                           indf0	equ	0xFEF
 29138                           postinc0	equ	0xFEE
 29139                           plusw0	equ	0xFEB
 29140                           fsr0h	equ	0xFEA
 29141                           fsr0l	equ	0xFE9
 29142                           wreg	equ	0xFE8
 29143                           indf1	equ	0xFE7
 29144                           postinc1	equ	0xFE6
 29145                           postdec1	equ	0xFE5
 29146                           plusw1	equ	0xFE3
 29147                           fsr1h	equ	0xFE2
 29148                           fsr1l	equ	0xFE1
 29149                           indf2	equ	0xFDF
 29150                           postinc2	equ	0xFDE
 29151                           postdec2	equ	0xFDD
 29152                           plusw2	equ	0xFDB
 29153                           fsr2h	equ	0xFDA
 29154                           fsr2l	equ	0xFD9
 29155                           status	equ	0xFD8
 29156                           
 29157 ;; *************** function _InitGprsNetwork *****************
 29158 ;; Defined at:
 29159 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29160 ;; Parameters:    Size  Location     Type
 29161 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 29162 ;;		 -> NULL(0), 
 29163 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 29164 ;; Auto vars:     Size  Location     Type
 29165 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 29166 ;;  Index           1   50[BANK1 ] unsigned char 
 29167 ;; Return value:  Size  Location     Type
 29168 ;;                  1    wreg      enum E8923
 29169 ;; Registers used:
 29170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29171 ;; Tracked objects:
 29172 ;;		On entry : 0/0
 29173 ;;		On exit  : 0/0
 29174 ;;		Unchanged: 0/0
 29175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29176 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29177 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29178 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29179 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29180 ;;Total ram usage:       56 bytes
 29181 ;; Hardware stack levels used:    1
 29182 ;; Hardware stack levels required when called:   14
 29183 ;; This function calls:
 29184 ;;		_ClearBuffer
 29185 ;;		_OsTmr_GetTimerStatus
 29186 ;;		_OsTmr_StartTimer
 29187 ;;		_ReceiveEvt
 29188 ;;		_StringCopy
 29189 ;;		_Uart_WriteConstString
 29190 ;;		_Uart_WriteString
 29191 ;; This function is called by:
 29192 ;;		_MdmHttp_MainTask
 29193 ;; This function uses a non-reentrant model
 29194 ;;
 29195                           
 29196                           	psect	text135
 29197  001132                     __ptext135:
 29198                           	opt stack 0
 29199  001132                     _InitGprsNetwork:
 29200                           	opt stack 13
 29201                           
 29202                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 29203                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 29204                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 29205                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 29206                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 29207                           
 29208                           ;incstack = 0
 29209  001132  0E00               	movlw	0
 29210  001134  0101               	movlb	1	; () banked
 29211  001136  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 29212                           
 29213                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 29214  001138  D154               	goto	l1219
 29215  00113A                     
 29216                           ; BSR set to: 1
 29217                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 29218                           
 29219                           ; BSR set to: 1
 29220  00113A  0ED9               	movlw	low _InitNetwork
 29221  00113C  0100               	movlb	0	; () banked
 29222  00113E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29223  001140  0E00               	movlw	high _InitNetwork
 29224  001142  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29225  001144  ECF0  F031         	call	_ReceiveEvt	;wreg free
 29226  001148  0900               	iorlw	0
 29227  00114A  B4D8               	btfsc	status,2,c
 29228  00114C  D166               	goto	l1222
 29229                           
 29230                           ;mdm_gsm_gprs_http.c: 137: {
 29231                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 29232  00114E  0E01               	movlw	1
 29233  001150  D141               	goto	L79
 29234  001152                     
 29235                           ; BSR set to: 1
 29236                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 29237                           
 29238                           ; BSR set to: 1
 29239  001152  0E89               	movlw	low STR_8
 29240  001154  0100               	movlb	0	; () banked
 29241  001156  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29242  001158  0EFE               	movlw	high STR_8
 29243  00115A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29244  00115C  0E01               	movlw	1
 29245  00115E  ECC0  F02F         	call	_Uart_WriteConstString
 29246                           
 29247                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 29248  001162  0E07               	movlw	7
 29249  001164  0101               	movlb	1	; () banked
 29250  001166  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29251                           
 29252                           ; BSR set to: 1
 29253                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 29254  001168  0E02               	movlw	2
 29255  00116A  0100               	movlb	0	; () banked
 29256  00116C  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29257                           
 29258                           ; BSR set to: 0
 29259                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 29260  00116E  0EF5               	movlw	low _ConnTimeout
 29261  001170  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29262  001172  0E02               	movlw	high _ConnTimeout
 29263  001174  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29264  001176  0E20               	movlw	32
 29265  001178  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29266  00117A  0E4E               	movlw	78
 29267  00117C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29268  00117E  0E00               	movlw	0
 29269  001180  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29270  001182  0E00               	movlw	0
 29271  001184  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29272  001186  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 29273  00118A  D0C7               	goto	l15283
 29274  00118C                     
 29275                           ; BSR set to: 1
 29276                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 29277                           
 29278                           ; BSR set to: 1
 29279  00118C  0E00               	movlw	low InitGprsNetwork@UartMessage
 29280  00118E  0100               	movlb	0	; () banked
 29281  001190  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29282  001192  0E01               	movlw	high InitGprsNetwork@UartMessage
 29283  001194  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29284  001196  0E00               	movlw	0
 29285  001198  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29286  00119A  0E32               	movlw	50
 29287  00119C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29288  00119E  EC12  F031         	call	_ClearBuffer	;wreg free
 29289                           
 29290                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 29291  0011A2  0EBD               	movlw	low STR_9
 29292  0011A4  0100               	movlb	0	; () banked
 29293  0011A6  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 29294  0011A8  0EFE               	movlw	high STR_9
 29295  0011AA  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29296  0011AC  0E00               	movlw	low InitGprsNetwork@UartMessage
 29297  0011AE  6F87               	movwf	StringCopy@DestStr& (0+255),b
 29298  0011B0  0E01               	movlw	high InitGprsNetwork@UartMessage
 29299  0011B2  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29300  0011B4  0E00               	movlw	0
 29301  0011B6  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 29302  0011B8  0E14               	movlw	20
 29303  0011BA  6F89               	movwf	StringCopy@Len& (0+255),b
 29304  0011BC  EC03  F02B         	call	_StringCopy	;wreg free
 29305                           
 29306                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 29307  0011C0  0E00               	movlw	0
 29308  0011C2  0101               	movlb	1	; () banked
 29309  0011C4  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 29310  0011C6  D01C               	goto	l1225
 29311  0011C8                     
 29312                           ; BSR set to: 1
 29313                           ;mdm_gsm_gprs_http.c: 161: {
 29314                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 29315                           
 29316                           ; BSR set to: 1
 29317  0011C8  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29318  0011CA  0D01               	mullw	1
 29319  0011CC  50F3               	movf	prodl,w,c
 29320  0011CE  0100               	movlb	0	; () banked
 29321  0011D0  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 29322  0011D2  6ED9               	movwf	fsr2l,c
 29323  0011D4  50F4               	movf	prodh,w,c
 29324  0011D6  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 29325  0011D8  6EDA               	movwf	fsr2h,c
 29326  0011DA  0101               	movlb	1	; () banked
 29327  0011DC  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29328  0011DE  0100               	movlb	0	; () banked
 29329  0011E0  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29330  0011E2  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29331  0011E4  0E14               	movlw	20
 29332  0011E6  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29333  0011E8  0E00               	movlw	0
 29334  0011EA  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29335  0011EC  0E00               	movlw	low InitGprsNetwork@UartMessage
 29336  0011EE  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29337  0011F0  6EE1               	movwf	fsr1l,c
 29338  0011F2  0E01               	movlw	high InitGprsNetwork@UartMessage
 29339  0011F4  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29340  0011F6  6EE2               	movwf	fsr1h,c
 29341  0011F8  CFDF FFE7          	movff	indf2,indf1
 29342                           
 29343                           ; BSR set to: 0
 29344  0011FC  0101               	movlb	1	; () banked
 29345  0011FE  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 29346  001200                     l1225:
 29347                           
 29348                           ; BSR set to: 1
 29349                           
 29350                           ; BSR set to: 1
 29351  001200  0100               	movlb	0	; () banked
 29352  001202  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 29353  001204  0101               	movlb	1	; () banked
 29354  001206  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 29355  001208  A0D8               	btfss	status,0,c
 29356  00120A  D7DE               	goto	l1226
 29357                           
 29358                           ; BSR set to: 1
 29359                           ;mdm_gsm_gprs_http.c: 163: }
 29360                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 29361                           
 29362                           ; BSR set to: 1
 29363  00120C  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29364  00120E  0100               	movlb	0	; () banked
 29365  001210  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29366  001212  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29367  001214  0E14               	movlw	20
 29368  001216  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29369  001218  0E00               	movlw	0
 29370  00121A  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29371  00121C  0E00               	movlw	low InitGprsNetwork@UartMessage
 29372  00121E  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29373  001220  6ED9               	movwf	fsr2l,c
 29374  001222  0E01               	movlw	high InitGprsNetwork@UartMessage
 29375  001224  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29376  001226  6EDA               	movwf	fsr2h,c
 29377  001228  0E22               	movlw	34
 29378  00122A  6EDF               	movwf	indf2,c
 29379                           
 29380                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 29381  00122C  0101               	movlb	1	; () banked
 29382  00122E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29383  001230  0100               	movlb	0	; () banked
 29384  001232  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29385  001234  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29386  001236  0E15               	movlw	21
 29387  001238  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29388  00123A  0E00               	movlw	0
 29389  00123C  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29390  00123E  0E00               	movlw	low InitGprsNetwork@UartMessage
 29391  001240  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29392  001242  6ED9               	movwf	fsr2l,c
 29393  001244  0E01               	movlw	high InitGprsNetwork@UartMessage
 29394  001246  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29395  001248  6EDA               	movwf	fsr2h,c
 29396  00124A  0E0D               	movlw	13
 29397  00124C  6EDF               	movwf	indf2,c
 29398                           
 29399                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 29400  00124E  0101               	movlb	1	; () banked
 29401  001250  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29402  001252  0100               	movlb	0	; () banked
 29403  001254  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29404  001256  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29405  001258  0E16               	movlw	22
 29406  00125A  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29407  00125C  0E00               	movlw	0
 29408  00125E  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29409  001260  0E00               	movlw	low InitGprsNetwork@UartMessage
 29410  001262  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29411  001264  6ED9               	movwf	fsr2l,c
 29412  001266  0E01               	movlw	high InitGprsNetwork@UartMessage
 29413  001268  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29414  00126A  6EDA               	movwf	fsr2h,c
 29415  00126C  0E00               	movlw	0
 29416  00126E  6EDF               	movwf	indf2,c
 29417                           
 29418                           ; BSR set to: 0
 29419                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 29420  001270  0E00               	movlw	low InitGprsNetwork@UartMessage
 29421  001272  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29422  001274  0E01               	movlw	high InitGprsNetwork@UartMessage
 29423  001276  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29424  001278  0E01               	movlw	1
 29425  00127A  EC80  F030         	call	_Uart_WriteString
 29426                           
 29427                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 29428  00127E  0E07               	movlw	7
 29429  001280  0101               	movlb	1	; () banked
 29430  001282  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29431                           
 29432                           ; BSR set to: 1
 29433                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 29434  001284  0E03               	movlw	3
 29435  001286  0100               	movlb	0	; () banked
 29436  001288  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29437                           
 29438                           ; BSR set to: 0
 29439                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 29440  00128A  0EF5               	movlw	low _ConnTimeout
 29441  00128C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29442  00128E  0E02               	movlw	high _ConnTimeout
 29443  001290  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29444  001292  0E20               	movlw	32
 29445  001294  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29446  001296  0E4E               	movlw	78
 29447  001298  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29448  00129A  0E00               	movlw	0
 29449  00129C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29450  00129E  0E00               	movlw	0
 29451  0012A0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29452  0012A2  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 29453  0012A6  D039               	goto	l15283
 29454  0012A8                     
 29455                           ; BSR set to: 1
 29456                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 29457                           
 29458                           ; BSR set to: 1
 29459  0012A8  0E4B               	movlw	low STR_10
 29460  0012AA  0100               	movlb	0	; () banked
 29461  0012AC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29462  0012AE  0EFF               	movlw	high STR_10
 29463  0012B0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29464  0012B2  0E01               	movlw	1
 29465  0012B4  ECC0  F02F         	call	_Uart_WriteConstString
 29466                           
 29467                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 29468  0012B8  0E07               	movlw	7
 29469  0012BA  0101               	movlb	1	; () banked
 29470  0012BC  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29471                           
 29472                           ; BSR set to: 1
 29473                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 29474  0012BE  0E05               	movlw	5
 29475  0012C0  0100               	movlb	0	; () banked
 29476  0012C2  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29477                           
 29478                           ; BSR set to: 0
 29479                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 29480  0012C4  0EF5               	movlw	low _ConnTimeout
 29481  0012C6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29482  0012C8  0E02               	movlw	high _ConnTimeout
 29483  0012CA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29484  0012CC  0E20               	movlw	32
 29485  0012CE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29486  0012D0  0E4E               	movlw	78
 29487  0012D2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29488  0012D4  0E00               	movlw	0
 29489  0012D6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29490  0012D8  0E00               	movlw	0
 29491  0012DA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29492  0012DC  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 29493  0012E0  D01C               	goto	l15283
 29494  0012E2                     
 29495                           ; BSR set to: 1
 29496                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 29497                           
 29498                           ; BSR set to: 1
 29499  0012E2  0E59               	movlw	low STR_11
 29500  0012E4  0100               	movlb	0	; () banked
 29501  0012E6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29502  0012E8  0EFF               	movlw	high STR_11
 29503  0012EA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29504  0012EC  0E01               	movlw	1
 29505  0012EE  ECC0  F02F         	call	_Uart_WriteConstString
 29506                           
 29507                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 29508  0012F2  0E08               	movlw	8
 29509  0012F4  0101               	movlb	1	; () banked
 29510  0012F6  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29511                           
 29512                           ; BSR set to: 1
 29513                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 29514  0012F8  0E05               	movlw	5
 29515  0012FA  0100               	movlb	0	; () banked
 29516  0012FC  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29517                           
 29518                           ; BSR set to: 0
 29519                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 29520  0012FE  0EF5               	movlw	low _ConnTimeout
 29521  001300  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29522  001302  0E02               	movlw	high _ConnTimeout
 29523  001304  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29524  001306  0E20               	movlw	32
 29525  001308  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29526  00130A  0E4E               	movlw	78
 29527  00130C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29528  00130E  0E00               	movlw	0
 29529  001310  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29530  001312  0E00               	movlw	0
 29531  001314  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29532  001316  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 29533  00131A                     l15283:
 29534                           
 29535                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 29536  00131A  0E01               	movlw	1
 29537  00131C  0101               	movlb	1	; () banked
 29538  00131E  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29539                           
 29540                           ;mdm_gsm_gprs_http.c: 201: break;
 29541  001320  D07C               	goto	l1222
 29542  001322                     
 29543                           ; BSR set to: 1
 29544                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 29545                           
 29546                           ; BSR set to: 1
 29547  001322  0E02               	movlw	2
 29548  001324  D05A               	goto	L78
 29549  001326                     
 29550                           ; BSR set to: 1
 29551                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 29552                           
 29553                           ; BSR set to: 1
 29554  001326  0E3C               	movlw	low _NewStringReceived
 29555  001328  0100               	movlb	0	; () banked
 29556  00132A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29557  00132C  0E00               	movlw	high _NewStringReceived
 29558  00132E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29559  001330  ECF0  F031         	call	_ReceiveEvt	;wreg free
 29560  001334  0900               	iorlw	0
 29561  001336  B4D8               	btfsc	status,2,c
 29562  001338  D018               	goto	l1232
 29563                           
 29564                           ;mdm_gsm_gprs_http.c: 212: {
 29565                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 29566  00133A  CC58  FFE8         	movff	_RxBuffer,wreg
 29567  00133E  0A4F               	xorlw	79
 29568  001340  A4D8               	btfss	status,2,c
 29569  001342  D06B               	goto	l1222
 29570  001344  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29571  001348  0A4B               	xorlw	75
 29572  00134A  A4D8               	btfss	status,2,c
 29573  00134C  D066               	goto	l1222
 29574                           
 29575                           ;mdm_gsm_gprs_http.c: 215: {
 29576                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 29577  00134E  C0CF  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29578                           
 29579                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 29580  001352  0E58               	movlw	low _RxBuffer
 29581  001354  0100               	movlb	0	; () banked
 29582  001356  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29583  001358  0E0C               	movlw	high _RxBuffer
 29584  00135A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29585  00135C  0E01               	movlw	1
 29586  00135E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29587  001360  0E90               	movlw	144
 29588  001362  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29589  001364  EC12  F031         	call	_ClearBuffer	;wreg free
 29590                           
 29591                           ;mdm_gsm_gprs_http.c: 220: }
 29592                           ;mdm_gsm_gprs_http.c: 221: }
 29593  001368  D058               	goto	l1222
 29594  00136A                     l1232:
 29595                           
 29596                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29597  00136A  0EF5               	movlw	low _ConnTimeout
 29598  00136C  0100               	movlb	0	; () banked
 29599  00136E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29600  001370  0E02               	movlw	high _ConnTimeout
 29601  001372  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29602  001374  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29603  001378  D029               	goto	L43
 29604  00137A                     
 29605                           ; BSR set to: 1
 29606                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 29607                           
 29608                           ; BSR set to: 1
 29609  00137A  0E3C               	movlw	low _NewStringReceived
 29610  00137C  0100               	movlb	0	; () banked
 29611  00137E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29612  001380  0E00               	movlw	high _NewStringReceived
 29613  001382  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29614  001384  ECF0  F031         	call	_ReceiveEvt	;wreg free
 29615  001388  0900               	iorlw	0
 29616  00138A  B4D8               	btfsc	status,2,c
 29617  00138C  D018               	goto	l1237
 29618                           
 29619                           ;mdm_gsm_gprs_http.c: 232: {
 29620                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 29621  00138E  CC58  FFE8         	movff	_RxBuffer,wreg
 29622  001392  0A2B               	xorlw	43
 29623  001394  A4D8               	btfss	status,2,c
 29624  001396  D041               	goto	l1222
 29625  001398  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29626  00139C  0A53               	xorlw	83
 29627  00139E  A4D8               	btfss	status,2,c
 29628  0013A0  D03C               	goto	l1222
 29629                           
 29630                           ;mdm_gsm_gprs_http.c: 235: {
 29631                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 29632  0013A2  C0CF  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29633                           
 29634                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 29635  0013A6  0E58               	movlw	low _RxBuffer
 29636  0013A8  0100               	movlb	0	; () banked
 29637  0013AA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29638  0013AC  0E0C               	movlw	high _RxBuffer
 29639  0013AE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29640  0013B0  0E01               	movlw	1
 29641  0013B2  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29642  0013B4  0E90               	movlw	144
 29643  0013B6  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29644  0013B8  EC12  F031         	call	_ClearBuffer	;wreg free
 29645                           
 29646                           ;mdm_gsm_gprs_http.c: 240: }
 29647                           ;mdm_gsm_gprs_http.c: 241: }
 29648  0013BC  D02E               	goto	l1222
 29649  0013BE                     l1237:
 29650                           
 29651                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29652  0013BE  0EF5               	movlw	low _ConnTimeout
 29653  0013C0  0100               	movlb	0	; () banked
 29654  0013C2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29655  0013C4  0E02               	movlw	high _ConnTimeout
 29656  0013C6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29657  0013C8  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29658  0013CC                     L43:
 29659  0013CC  06E8               	decf	wreg,f,c
 29660  0013CE  A4D8               	btfss	status,2,c
 29661  0013D0  D024               	goto	l1222
 29662                           
 29663                           ;mdm_gsm_gprs_http.c: 243: {
 29664                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 29665  0013D2  0E06               	movlw	6
 29666  0013D4                     L79:
 29667  0013D4  0101               	movlb	1	; () banked
 29668  0013D6  D003               	goto	L42
 29669  0013D8                     
 29670                           ; BSR set to: 1
 29671                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 29672                           
 29673                           ; BSR set to: 1
 29674  0013D8  0E03               	movlw	3
 29675  0013DA                     L78:
 29676  0013DA  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29677                           
 29678                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 29679  0013DC  0E00               	movlw	0
 29680  0013DE                     L42:
 29681  0013DE  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29682                           
 29683                           ; BSR set to: 1
 29684                           ;mdm_gsm_gprs_http.c: 257: }
 29685                           
 29686                           ; BSR set to: 1
 29687                           ;mdm_gsm_gprs_http.c: 256: break;
 29688                           
 29689                           ;mdm_gsm_gprs_http.c: 255: default:
 29690                           
 29691                           ;mdm_gsm_gprs_http.c: 253: break;
 29692  0013E0  D01C               	goto	l1222
 29693  0013E2                     l1219:
 29694                           
 29695                           ; BSR set to: 1
 29696                           
 29697                           ; BSR set to: 1
 29698  0013E2  51EA               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 29699                           
 29700                           ; Switch size 1, requested type "space"
 29701                           ; Number of cases is 9, Range of values is 0 to 8
 29702                           ; switch strategies available:
 29703                           ; Name         Instructions Cycles
 29704                           ; simple_byte           28    15 (average)
 29705                           ;	Chosen strategy is simple_byte
 29706  0013E4  0A00               	xorlw	0	; case 0
 29707  0013E6  B4D8               	btfsc	status,2,c
 29708  0013E8  D6A8               	goto	l1220
 29709  0013EA  0A01               	xorlw	1	; case 1
 29710  0013EC  B4D8               	btfsc	status,2,c
 29711  0013EE  D6B1               	goto	l1223
 29712  0013F0  0A03               	xorlw	3	; case 2
 29713  0013F2  B4D8               	btfsc	status,2,c
 29714  0013F4  D6CB               	goto	l1224
 29715  0013F6  0A01               	xorlw	1	; case 3
 29716  0013F8  B4D8               	btfsc	status,2,c
 29717  0013FA  D756               	goto	l1228
 29718  0013FC  0A07               	xorlw	7	; case 4
 29719  0013FE  B4D8               	btfsc	status,2,c
 29720  001400  D770               	goto	l1229
 29721  001402  0A01               	xorlw	1	; case 5
 29722  001404  B4D8               	btfsc	status,2,c
 29723  001406  D78D               	goto	l1230
 29724  001408  0A03               	xorlw	3	; case 6
 29725  00140A  B4D8               	btfsc	status,2,c
 29726  00140C  D7E5               	goto	l1241
 29727  00140E  0A01               	xorlw	1	; case 7
 29728  001410  B4D8               	btfsc	status,2,c
 29729  001412  D789               	goto	l1231
 29730  001414  0A0F               	xorlw	15	; case 8
 29731  001416  B4D8               	btfsc	status,2,c
 29732  001418  D7B0               	goto	l1236
 29733  00141A                     l1222:
 29734                           
 29735                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 29736                           
 29737                           ; BSR set to: 1
 29738  00141A  0101               	movlb	1	; () banked
 29739  00141C  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 29740  00141E  0012               	return	
 29741  001420                     __end_of_InitGprsNetwork:
 29742                           	opt stack 0
 29743                           tosu	equ	0xFFF
 29744                           tosh	equ	0xFFE
 29745                           tosl	equ	0xFFD
 29746                           pclath	equ	0xFFA
 29747                           tblptru	equ	0xFF8
 29748                           tblptrh	equ	0xFF7
 29749                           tblptrl	equ	0xFF6
 29750                           tablat	equ	0xFF5
 29751                           prodh	equ	0xFF4
 29752                           prodl	equ	0xFF3
 29753                           intcon	equ	0xFF2
 29754                           intcon2	equ	0xFF1
 29755                           intcon3	equ	0xFF0
 29756                           indf0	equ	0xFEF
 29757                           postinc0	equ	0xFEE
 29758                           plusw0	equ	0xFEB
 29759                           fsr0h	equ	0xFEA
 29760                           fsr0l	equ	0xFE9
 29761                           wreg	equ	0xFE8
 29762                           indf1	equ	0xFE7
 29763                           postinc1	equ	0xFE6
 29764                           postdec1	equ	0xFE5
 29765                           plusw1	equ	0xFE3
 29766                           fsr1h	equ	0xFE2
 29767                           fsr1l	equ	0xFE1
 29768                           indf2	equ	0xFDF
 29769                           postinc2	equ	0xFDE
 29770                           postdec2	equ	0xFDD
 29771                           plusw2	equ	0xFDB
 29772                           fsr2h	equ	0xFDA
 29773                           fsr2l	equ	0xFD9
 29774                           status	equ	0xFD8
 29775                           
 29776 ;; *************** function _HttpGetMethod *****************
 29777 ;; Defined at:
 29778 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29779 ;; Parameters:    Size  Location     Type
 29780 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 29781 ;;		 -> HttpGetDataLocal(5), 
 29782 ;; Auto vars:     Size  Location     Type
 29783 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 29784 ;;  Index           1  200[BANK1 ] unsigned char 
 29785 ;; Return value:  Size  Location     Type
 29786 ;;                  1    wreg      enum E8923
 29787 ;; Registers used:
 29788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29789 ;; Tracked objects:
 29790 ;;		On entry : 0/0
 29791 ;;		On exit  : 0/0
 29792 ;;		Unchanged: 0/0
 29793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29795 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29797 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29798 ;;Total ram usage:      207 bytes
 29799 ;; Hardware stack levels used:    1
 29800 ;; Hardware stack levels required when called:   14
 29801 ;; This function calls:
 29802 ;;		_ClearBuffer
 29803 ;;		_OsTmr_GetTimerStatus
 29804 ;;		_OsTmr_StartTimer
 29805 ;;		_ReceiveEvt
 29806 ;;		_StringCopy
 29807 ;;		_Uart_WriteConstString
 29808 ;;		_Uart_WriteString
 29809 ;; This function is called by:
 29810 ;;		_MdmHttp_MainTask
 29811 ;; This function uses a non-reentrant model
 29812 ;;
 29813                           
 29814                           	psect	text136
 29815  0005EC                     __ptext136:
 29816                           	opt stack 0
 29817  0005EC                     _HttpGetMethod:
 29818                           	opt stack 13
 29819                           
 29820                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 29821                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 29822                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 29823                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 29824                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 29825                           
 29826                           ; BSR set to: 1
 29827                           ;incstack = 0
 29828  0005EC  0E00               	movlw	0
 29829  0005EE  0101               	movlb	1	; () banked
 29830  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29831                           
 29832                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 29833  0005F2  D230               	goto	l1252
 29834  0005F4                     
 29835                           ; BSR set to: 1
 29836                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 29837                           
 29838                           ; BSR set to: 1
 29839  0005F4  0ED8               	movlw	low _GetMethod
 29840  0005F6  0100               	movlb	0	; () banked
 29841  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29842  0005FA  0E00               	movlw	high _GetMethod
 29843  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29844  0005FE  ECF0  F031         	call	_ReceiveEvt	;wreg free
 29845  000602  0900               	iorlw	0
 29846  000604  B4D8               	btfsc	status,2,c
 29847  000606  D257               	goto	l1255
 29848                           
 29849                           ;mdm_gsm_gprs_http.c: 284: {
 29850                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 29851  000608  0E01               	movlw	1
 29852  00060A  D18C               	goto	L45
 29853  00060C                     
 29854                           ; BSR set to: 1
 29855                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 29856                           
 29857                           ; BSR set to: 1
 29858  00060C  0E9D               	movlw	low STR_12
 29859  00060E  0100               	movlb	0	; () banked
 29860  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29861  000612  0EFF               	movlw	high STR_12
 29862  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29863  000616  0E01               	movlw	1
 29864  000618  ECC0  F02F         	call	_Uart_WriteConstString
 29865                           
 29866                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 29867  00061C  0E0A               	movlw	10
 29868  00061E  0101               	movlb	1	; () banked
 29869  000620  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29870                           
 29871                           ; BSR set to: 1
 29872                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 29873  000622  0E02               	movlw	2
 29874  000624  0100               	movlb	0	; () banked
 29875  000626  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 29879  000628  0EF5               	movlw	low _ConnTimeout
 29880  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29881  00062C  0E02               	movlw	high _ConnTimeout
 29882  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29883  000630  0E20               	movlw	32
 29884  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29885  000634  0E4E               	movlw	78
 29886  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29887  000638  0E00               	movlw	0
 29888  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29889  00063C  0E00               	movlw	0
 29890  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29891  000640  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 29892  000644  D1AF               	goto	l15449
 29893  000646                     
 29894                           ; BSR set to: 1
 29895                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 29896                           
 29897                           ; BSR set to: 1
 29898  000646  0E67               	movlw	low STR_13
 29899  000648  0100               	movlb	0	; () banked
 29900  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29901  00064C  0EFF               	movlw	high STR_13
 29902  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29903  000650  0E01               	movlw	1
 29904  000652  ECC0  F02F         	call	_Uart_WriteConstString
 29905                           
 29906                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 29907  000656  0E0A               	movlw	10
 29908  000658  0101               	movlb	1	; () banked
 29909  00065A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29910                           
 29911                           ; BSR set to: 1
 29912                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 29913  00065C  0E03               	movlw	3
 29914  00065E  0100               	movlb	0	; () banked
 29915  000660  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29916                           
 29917                           ; BSR set to: 0
 29918                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 29919  000662  0EF5               	movlw	low _ConnTimeout
 29920  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29921  000666  0E02               	movlw	high _ConnTimeout
 29922  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29923  00066A  0E20               	movlw	32
 29924  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29925  00066E  0E4E               	movlw	78
 29926  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29927  000672  0E00               	movlw	0
 29928  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29929  000676  0E00               	movlw	0
 29930  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29931  00067A  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 29932  00067E  D192               	goto	l15449
 29933  000680                     
 29934                           ; BSR set to: 1
 29935                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 29936                           
 29937                           ; BSR set to: 1
 29938  000680  0EA8               	movlw	low STR_14
 29939  000682  0100               	movlb	0	; () banked
 29940  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29941  000686  0EFE               	movlw	high STR_14
 29942  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29943  00068A  0E01               	movlw	1
 29944  00068C  ECC0  F02F         	call	_Uart_WriteConstString
 29945                           
 29946                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 29947  000690  0E0A               	movlw	10
 29948  000692  0101               	movlb	1	; () banked
 29949  000694  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29950                           
 29951                           ; BSR set to: 1
 29952                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 29953  000696  0E04               	movlw	4
 29954  000698  0100               	movlb	0	; () banked
 29955  00069A  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29956                           
 29957                           ; BSR set to: 0
 29958                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 29959  00069C  0EF5               	movlw	low _ConnTimeout
 29960  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29961  0006A0  0E02               	movlw	high _ConnTimeout
 29962  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29963  0006A4  0E20               	movlw	32
 29964  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29965  0006A8  0E4E               	movlw	78
 29966  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29967  0006AC  0E00               	movlw	0
 29968  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29969  0006B0  0E00               	movlw	0
 29970  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29971  0006B4  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 29972  0006B8  D175               	goto	l15449
 29973  0006BA                     
 29974                           ; BSR set to: 1
 29975                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 29976                           
 29977                           ; BSR set to: 1
 29978  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29979  0006BC  0100               	movlb	0	; () banked
 29980  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29981  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 29982  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29983  0006C4  0E00               	movlw	0
 29984  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29985  0006C8  0EC8               	movlw	200
 29986  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29987  0006CC  EC12  F031         	call	_ClearBuffer	;wreg free
 29988                           
 29989                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 29990  0006D0  0EE6               	movlw	low STR_15
 29991  0006D2  0100               	movlb	0	; () banked
 29992  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 29993  0006D6  0EFE               	movlw	high STR_15
 29994  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29995  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 29996  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 29997  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 29998  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29999  0006E2  0E00               	movlw	0
 30000  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30001  0006E6  0E13               	movlw	19
 30002  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 30003  0006EA  EC03  F02B         	call	_StringCopy	;wreg free
 30004                           
 30005                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 30006  0006EE  0E00               	movlw	0
 30007  0006F0  0101               	movlb	1	; () banked
 30008  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 30009  0006F4  D024               	goto	l1260
 30010  0006F6                     
 30011                           ; BSR set to: 1
 30012                           ;mdm_gsm_gprs_http.c: 332: {
 30013                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 30014                           
 30015                           ; BSR set to: 1
 30016  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30017  0006F8  0D01               	mullw	1
 30018  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 30019  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 30020  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 30021  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 30022  00070A  50F3               	movf	prodl,w,c
 30023  00070C  0100               	movlb	0	; () banked
 30024  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30025  000710  6ED9               	movwf	fsr2l,c
 30026  000712  50F4               	movf	prodh,w,c
 30027  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30028  000716  6EDA               	movwf	fsr2h,c
 30029  000718  0101               	movlb	1	; () banked
 30030  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30031  00071C  0100               	movlb	0	; () banked
 30032  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 30033  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 30034  000722  0E13               	movlw	19
 30035  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 30036  000726  0E00               	movlw	0
 30037  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 30038  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 30039  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 30040  00072E  6EE1               	movwf	fsr1l,c
 30041  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 30042  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 30043  000734  6EE2               	movwf	fsr1h,c
 30044  000736  CFDF FFE7          	movff	indf2,indf1
 30045                           
 30046                           ; BSR set to: 0
 30047  00073A  0101               	movlb	1	; () banked
 30048  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 30049  00073E                     l1260:
 30050                           
 30051                           ; BSR set to: 1
 30052                           
 30053                           ; BSR set to: 1
 30054  00073E  0100               	movlb	0	; () banked
 30055  000740  EE20 F002          	lfsr	2,2
 30056  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 30057  000746  26D9               	addwf	fsr2l,f,c
 30058  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 30059  00074A  22DA               	addwfc	fsr2h,f,c
 30060  00074C  50DE               	movf	postinc2,w,c
 30061  00074E  0101               	movlb	1	; () banked
 30062  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 30063  000752  A0D8               	btfss	status,0,c
 30064  000754  D7D0               	goto	l1261
 30065                           
 30066                           ; BSR set to: 1
 30067                           ;mdm_gsm_gprs_http.c: 334: }
 30068                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 30069                           
 30070                           ; BSR set to: 1
 30071  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30072  000758  0100               	movlb	0	; () banked
 30073  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30074  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30075  00075E  0E13               	movlw	19
 30076  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30077  000762  0E00               	movlw	0
 30078  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30079  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 30080  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30081  00076A  6ED9               	movwf	fsr2l,c
 30082  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 30083  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30084  000770  6EDA               	movwf	fsr2h,c
 30085  000772  0E22               	movlw	34
 30086  000774  6EDF               	movwf	indf2,c
 30087                           
 30088                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 30089  000776  0101               	movlb	1	; () banked
 30090  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30091  00077A  0100               	movlb	0	; () banked
 30092  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30093  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30094  000780  0E14               	movlw	20
 30095  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30096  000784  0E00               	movlw	0
 30097  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30098  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 30099  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30100  00078C  6ED9               	movwf	fsr2l,c
 30101  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 30102  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30103  000792  6EDA               	movwf	fsr2h,c
 30104  000794  0E0D               	movlw	13
 30105  000796  6EDF               	movwf	indf2,c
 30106                           
 30107                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 30108  000798  0101               	movlb	1	; () banked
 30109  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30110  00079C  0100               	movlb	0	; () banked
 30111  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30112  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30113  0007A2  0E15               	movlw	21
 30114  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30115  0007A6  0E00               	movlw	0
 30116  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30117  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 30118  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30119  0007AE  6ED9               	movwf	fsr2l,c
 30120  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 30121  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30122  0007B4  6EDA               	movwf	fsr2h,c
 30123  0007B6  0E00               	movlw	0
 30124  0007B8  6EDF               	movwf	indf2,c
 30125                           
 30126                           ; BSR set to: 0
 30127                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 30128  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 30129  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30130  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 30131  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30132  0007C2  0E01               	movlw	1
 30133  0007C4  EC80  F030         	call	_Uart_WriteString
 30134                           
 30135                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 30136  0007C8  0E0A               	movlw	10
 30137  0007CA  0101               	movlb	1	; () banked
 30138  0007CC  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30139                           
 30140                           ; BSR set to: 1
 30141                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 30142  0007CE  0E05               	movlw	5
 30143  0007D0  0100               	movlb	0	; () banked
 30144  0007D2  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30145                           
 30146                           ; BSR set to: 0
 30147                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 30148  0007D4  0EF5               	movlw	low _ConnTimeout
 30149  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30150  0007D8  0E02               	movlw	high _ConnTimeout
 30151  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30152  0007DC  0E20               	movlw	32
 30153  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30154  0007E0  0E4E               	movlw	78
 30155  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30156  0007E4  0E00               	movlw	0
 30157  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30158  0007E8  0E00               	movlw	0
 30159  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30160  0007EC  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 30161  0007F0  D0D9               	goto	l15449
 30162  0007F2                     
 30163                           ; BSR set to: 1
 30164                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 30165                           
 30166                           ; BSR set to: 1
 30167  0007F2  0E1E               	movlw	low STR_16
 30168  0007F4  0100               	movlb	0	; () banked
 30169  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30170  0007F8  0EFF               	movlw	high STR_16
 30171  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30172  0007FC  0E01               	movlw	1
 30173  0007FE  ECC0  F02F         	call	_Uart_WriteConstString
 30174                           
 30175                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 30176  000802  0E0A               	movlw	10
 30177  000804  0101               	movlb	1	; () banked
 30178  000806  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30179                           
 30180                           ; BSR set to: 1
 30181                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 30182  000808  0E06               	movlw	6
 30183  00080A  0100               	movlb	0	; () banked
 30184  00080C  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30185                           
 30186                           ; BSR set to: 0
 30187                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 30188  00080E  0EF5               	movlw	low _ConnTimeout
 30189  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30190  000812  0E02               	movlw	high _ConnTimeout
 30191  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30192  000816  0E20               	movlw	32
 30193  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30194  00081A  0E4E               	movlw	78
 30195  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30196  00081E  0E00               	movlw	0
 30197  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30198  000822  0E00               	movlw	0
 30199  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30200  000826  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 30201                           
 30202                           ;mdm_gsm_gprs_http.c: 358: break;
 30203  00082A  D145               	goto	l1255
 30204  00082C                     
 30205                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 30206  00082C  0E07               	movlw	7
 30207  00082E  0101               	movlb	1	; () banked
 30208  000830  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30209                           
 30210                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 30211  000832  0E09               	movlw	9
 30212  000834  0100               	movlb	0	; () banked
 30213  000836  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30214                           
 30215                           ; BSR set to: 0
 30216                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 30217  000838  0EF5               	movlw	low _ConnTimeout
 30218  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30219  00083C  0E02               	movlw	high _ConnTimeout
 30220  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30221  000840  0E20               	movlw	32
 30222  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30223  000844  0E4E               	movlw	78
 30224  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30225  000848  0E00               	movlw	0
 30226  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30227  00084C  0E00               	movlw	0
 30228  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30229  000850  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 30230                           
 30231                           ;mdm_gsm_gprs_http.c: 371: break;
 30232  000854  D130               	goto	l1255
 30233  000856                     
 30234                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 30235  000856  0E83               	movlw	low STR_17
 30236  000858  0100               	movlb	0	; () banked
 30237  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30238  00085C  0EFF               	movlw	high STR_17
 30239  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30240  000860  0E01               	movlw	1
 30241  000862  ECC0  F02F         	call	_Uart_WriteConstString
 30242                           
 30243                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 30244  000866  0E0D               	movlw	13
 30245  000868  0101               	movlb	1	; () banked
 30246  00086A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30247                           
 30248                           ; BSR set to: 1
 30249                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 30250  00086C  0E09               	movlw	9
 30251  00086E  0100               	movlb	0	; () banked
 30252  000870  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30253                           
 30254                           ; BSR set to: 0
 30255                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 30256  000872  0EF5               	movlw	low _ConnTimeout
 30257  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30258  000876  0E02               	movlw	high _ConnTimeout
 30259  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30260  00087A  0E20               	movlw	32
 30261  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30262  00087E  0E4E               	movlw	78
 30263  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30264  000882  0E00               	movlw	0
 30265  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30266  000886  0E00               	movlw	0
 30267  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30268  00088A  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 30269  00088E  D08A               	goto	l15449
 30270  000890                     
 30271                           ; BSR set to: 1
 30272                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 30273                           
 30274                           ; BSR set to: 1
 30275  000890  0E90               	movlw	low STR_18
 30276  000892  0100               	movlb	0	; () banked
 30277  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30278  000896  0EFF               	movlw	high STR_18
 30279  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30280  00089A  0E01               	movlw	1
 30281  00089C  ECC0  F02F         	call	_Uart_WriteConstString
 30282                           
 30283                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 30284  0008A0  0E0A               	movlw	10
 30285  0008A2  0101               	movlb	1	; () banked
 30286  0008A4  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30287                           
 30288                           ; BSR set to: 1
 30289                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 30290  0008A6  0E0E               	movlw	14
 30291  0008A8  0100               	movlb	0	; () banked
 30292  0008AA  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30293                           
 30294                           ; BSR set to: 0
 30295                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 30296  0008AC  0EF5               	movlw	low _ConnTimeout
 30297  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30298  0008B0  0E02               	movlw	high _ConnTimeout
 30299  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30300  0008B4  0E20               	movlw	32
 30301  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30302  0008B8  0E4E               	movlw	78
 30303  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30304  0008BC  0E00               	movlw	0
 30305  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30306  0008C0  0E00               	movlw	0
 30307  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30308  0008C4  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 30309  0008C8  D06D               	goto	l15449
 30310  0008CA                     
 30311                           ; BSR set to: 1
 30312                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 30313                           
 30314                           ; BSR set to: 1
 30315  0008CA  0E3C               	movlw	low _NewStringReceived
 30316  0008CC  0100               	movlb	0	; () banked
 30317  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30318  0008D0  0E00               	movlw	high _NewStringReceived
 30319  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30320  0008D4  ECF0  F031         	call	_ReceiveEvt	;wreg free
 30321  0008D8  0900               	iorlw	0
 30322  0008DA  B4D8               	btfsc	status,2,c
 30323  0008DC  D018               	goto	l1268
 30324                           
 30325                           ;mdm_gsm_gprs_http.c: 400: {
 30326                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30327  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 30328  0008E2  0A4F               	xorlw	79
 30329  0008E4  A4D8               	btfss	status,2,c
 30330  0008E6  D0E7               	goto	l1255
 30331  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30332  0008EC  0A4B               	xorlw	75
 30333  0008EE  A4D8               	btfss	status,2,c
 30334  0008F0  D0E2               	goto	l1255
 30335                           
 30336                           ;mdm_gsm_gprs_http.c: 403: {
 30337                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 30338  0008F2  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30339                           
 30340                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 30341  0008F6  0E58               	movlw	low _RxBuffer
 30342  0008F8  0100               	movlb	0	; () banked
 30343  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30344  0008FC  0E0C               	movlw	high _RxBuffer
 30345  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30346  000900  0E01               	movlw	1
 30347  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30348  000904  0E90               	movlw	144
 30349  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30350  000908  EC12  F031         	call	_ClearBuffer	;wreg free
 30351                           
 30352                           ;mdm_gsm_gprs_http.c: 408: }
 30353                           ;mdm_gsm_gprs_http.c: 409: }
 30354  00090C  D0D4               	goto	l1255
 30355  00090E                     l1268:
 30356                           
 30357                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30358  00090E  0EF5               	movlw	low _ConnTimeout
 30359  000910  0100               	movlb	0	; () banked
 30360  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30361  000914  0E02               	movlw	high _ConnTimeout
 30362  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30363  000918  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30364  00091C                     L46:
 30365  00091C  06E8               	decf	wreg,f,c
 30366  00091E  A4D8               	btfss	status,2,c
 30367  000920  D0CA               	goto	l1255
 30368                           
 30369                           ;mdm_gsm_gprs_http.c: 411: {
 30370                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 30371  000922  0E0F               	movlw	15
 30372  000924                     L45:
 30373  000924  0101               	movlb	1	; () banked
 30374  000926  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30375                           
 30376                           ; BSR set to: 1
 30377                           ;mdm_gsm_gprs_http.c: 414: }
 30378                           ;mdm_gsm_gprs_http.c: 415: break;
 30379                           
 30380                           ; BSR set to: 1
 30381  000928  D0C6               	goto	l1255
 30382  00092A                     
 30383                           ; BSR set to: 1
 30384                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 30385                           
 30386                           ; BSR set to: 1
 30387  00092A  0E3C               	movlw	low _NewStringReceived
 30388  00092C  0100               	movlb	0	; () banked
 30389  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30390  000930  0E00               	movlw	high _NewStringReceived
 30391  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30392  000934  ECF0  F031         	call	_ReceiveEvt	;wreg free
 30393  000938  0900               	iorlw	0
 30394  00093A  B4D8               	btfsc	status,2,c
 30395  00093C  D018               	goto	l1273
 30396                           
 30397                           ;mdm_gsm_gprs_http.c: 420: {
 30398                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 30399  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 30400  000942  0A2B               	xorlw	43
 30401  000944  A4D8               	btfss	status,2,c
 30402  000946  D0B7               	goto	l1255
 30403  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30404  00094C  0A48               	xorlw	72
 30405  00094E  A4D8               	btfss	status,2,c
 30406  000950  D0B2               	goto	l1255
 30407                           
 30408                           ;mdm_gsm_gprs_http.c: 423: {
 30409                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 30410  000952  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30411                           
 30412                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 30413  000956  0E58               	movlw	low _RxBuffer
 30414  000958  0100               	movlb	0	; () banked
 30415  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30416  00095C  0E0C               	movlw	high _RxBuffer
 30417  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30418  000960  0E01               	movlw	1
 30419  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30420  000964  0E90               	movlw	144
 30421  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30422  000968  EC12  F031         	call	_ClearBuffer	;wreg free
 30423                           
 30424                           ;mdm_gsm_gprs_http.c: 428: }
 30425                           ;mdm_gsm_gprs_http.c: 429: }
 30426  00096C  D0A4               	goto	l1255
 30427  00096E                     l1273:
 30428                           
 30429                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30430  00096E  0EF5               	movlw	low _ConnTimeout
 30431  000970  0100               	movlb	0	; () banked
 30432  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30433  000974  0E02               	movlw	high _ConnTimeout
 30434  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30435  000978  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30436  00097C  D7CF               	goto	L46
 30437  00097E                     
 30438                           ; BSR set to: 1
 30439                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 30440                           
 30441                           ; BSR set to: 1
 30442  00097E  0E0C               	movlw	12
 30443  000980  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30444                           
 30445                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 30446  000982  0E05               	movlw	5
 30447  000984  0100               	movlb	0	; () banked
 30448  000986  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30449                           
 30450                           ; BSR set to: 0
 30451                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 30452  000988  0EDA               	movlw	low _ConnWait
 30453  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30454  00098C  0E03               	movlw	high _ConnWait
 30455  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30456  000990  0EE8               	movlw	232
 30457  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30458  000994  0E03               	movlw	3
 30459  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30460  000998  0E00               	movlw	0
 30461  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30462  00099C  0E00               	movlw	0
 30463  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30464  0009A0  EC63  F02B         	call	_OsTmr_StartTimer	;wreg free
 30465  0009A4                     l15449:
 30466                           
 30467                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 30468  0009A4  0E01               	movlw	1
 30469  0009A6  0101               	movlb	1	; () banked
 30470  0009A8  D053               	goto	L48
 30471  0009AA                     
 30472                           ; BSR set to: 1
 30473                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 30474                           
 30475                           ; BSR set to: 1
 30476  0009AA  0EDA               	movlw	low _ConnWait
 30477  0009AC  0100               	movlb	0	; () banked
 30478  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30479  0009B0  0E03               	movlw	high _ConnWait
 30480  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30481  0009B4  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30482  0009B8  06E8               	decf	wreg,f,c
 30483  0009BA  A4D8               	btfss	status,2,c
 30484  0009BC  D07C               	goto	l1255
 30485                           
 30486                           ;mdm_gsm_gprs_http.c: 450: {
 30487                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 30488  0009BE  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30489                           
 30490                           ;mdm_gsm_gprs_http.c: 453: }
 30491                           ;mdm_gsm_gprs_http.c: 454: break;
 30492  0009C2  D079               	goto	l1255
 30493  0009C4                     
 30494                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 30495  0009C4  0E3C               	movlw	low _NewStringReceived
 30496  0009C6  0100               	movlb	0	; () banked
 30497  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30498  0009CA  0E00               	movlw	high _NewStringReceived
 30499  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30500  0009CE  ECF0  F031         	call	_ReceiveEvt	;wreg free
 30501  0009D2  0900               	iorlw	0
 30502  0009D4  B4D8               	btfsc	status,2,c
 30503  0009D6  D02D               	goto	l1281
 30504                           
 30505                           ;mdm_gsm_gprs_http.c: 459: {
 30506                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 30507  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 30508  0009DC  0A2B               	xorlw	43
 30509  0009DE  A4D8               	btfss	status,2,c
 30510  0009E0  D06A               	goto	l1255
 30511  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30512  0009E6  0A48               	xorlw	72
 30513  0009E8  A4D8               	btfss	status,2,c
 30514  0009EA  D065               	goto	l1255
 30515                           
 30516                           ;mdm_gsm_gprs_http.c: 462: {
 30517                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 30518  0009EC  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30519                           
 30520                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 30521  0009F0  0E58               	movlw	low _RxBuffer
 30522  0009F2  0100               	movlb	0	; () banked
 30523  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30524  0009F6  0E0C               	movlw	high _RxBuffer
 30525  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30526  0009FA  EE20 F003          	lfsr	2,3
 30527  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 30528  000A00  26D9               	addwf	fsr2l,f,c
 30529  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 30530  000A04  22DA               	addwfc	fsr2h,f,c
 30531  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 30532  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 30533  000A0E  0E01               	movlw	1
 30534  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30535  000A12  0E90               	movlw	144
 30536  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 30537  000A16  EC03  F02B         	call	_StringCopy	;wreg free
 30538                           
 30539                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 30540  000A1A  0E58               	movlw	low _RxBuffer
 30541  000A1C  0100               	movlb	0	; () banked
 30542  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30543  000A20  0E0C               	movlw	high _RxBuffer
 30544  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30545  000A24  0E01               	movlw	1
 30546  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30547  000A28  0E90               	movlw	144
 30548  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30549  000A2C  EC12  F031         	call	_ClearBuffer	;wreg free
 30550                           
 30551                           ;mdm_gsm_gprs_http.c: 469: }
 30552                           ;mdm_gsm_gprs_http.c: 470: }
 30553  000A30  D042               	goto	l1255
 30554  000A32                     l1281:
 30555                           
 30556                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30557  000A32  0EF5               	movlw	low _ConnTimeout
 30558  000A34  0100               	movlb	0	; () banked
 30559  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30560  000A38  0E02               	movlw	high _ConnTimeout
 30561  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30562  000A3C  EC02  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30563  000A40  D76D               	goto	L46
 30564  000A42                     
 30565                           ; BSR set to: 1
 30566                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 30567                           
 30568                           ; BSR set to: 1
 30569  000A42  0E00               	movlw	0
 30570  000A44  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30571                           
 30572                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 30573  000A46  0E02               	movlw	2
 30574  000A48  D003               	goto	L48
 30575  000A4A                     
 30576                           ; BSR set to: 1
 30577                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 30578                           
 30579                           ; BSR set to: 1
 30580  000A4A  0E00               	movlw	0
 30581  000A4C  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30582                           
 30583                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 30584  000A4E  0E03               	movlw	3
 30585  000A50                     L48:
 30586  000A50  6FE8               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 30587                           
 30588                           ; BSR set to: 1
 30589                           ;mdm_gsm_gprs_http.c: 494: }
 30590                           
 30591                           ; BSR set to: 1
 30592                           ;mdm_gsm_gprs_http.c: 493: break;
 30593                           
 30594                           ;mdm_gsm_gprs_http.c: 492: default:
 30595                           
 30596                           ;mdm_gsm_gprs_http.c: 490: break;
 30597  000A52  D031               	goto	l1255
 30598  000A54                     l1252:
 30599                           
 30600                           ; BSR set to: 1
 30601                           
 30602                           ; BSR set to: 1
 30603  000A54  51E9               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 30604                           
 30605                           ; Switch size 1, requested type "space"
 30606                           ; Number of cases is 16, Range of values is 0 to 15
 30607                           ; switch strategies available:
 30608                           ; Name         Instructions Cycles
 30609                           ; simple_byte           49    25 (average)
 30610                           ;	Chosen strategy is simple_byte
 30611  000A56  0A00               	xorlw	0	; case 0
 30612  000A58  B4D8               	btfsc	status,2,c
 30613  000A5A  D5CC               	goto	l1253
 30614  000A5C  0A01               	xorlw	1	; case 1
 30615  000A5E  B4D8               	btfsc	status,2,c
 30616  000A60  D5D5               	goto	l1256
 30617  000A62  0A03               	xorlw	3	; case 2
 30618  000A64  B4D8               	btfsc	status,2,c
 30619  000A66  D5EF               	goto	l1257
 30620  000A68  0A01               	xorlw	1	; case 3
 30621  000A6A  B4D8               	btfsc	status,2,c
 30622  000A6C  D609               	goto	l1258
 30623  000A6E  0A07               	xorlw	7	; case 4
 30624  000A70  B4D8               	btfsc	status,2,c
 30625  000A72  D623               	goto	l1259
 30626  000A74  0A01               	xorlw	1	; case 5
 30627  000A76  B4D8               	btfsc	status,2,c
 30628  000A78  D6BC               	goto	l1263
 30629  000A7A  0A03               	xorlw	3	; case 6
 30630  000A7C  B4D8               	btfsc	status,2,c
 30631  000A7E  D6D6               	goto	l1264
 30632  000A80  0A01               	xorlw	1	; case 7
 30633  000A82  B4D8               	btfsc	status,2,c
 30634  000A84  D752               	goto	l1272
 30635  000A86  0A0F               	xorlw	15	; case 8
 30636  000A88  B4D8               	btfsc	status,2,c
 30637  000A8A  D6E5               	goto	l1265
 30638  000A8C  0A01               	xorlw	1	; case 9
 30639  000A8E  B4D8               	btfsc	status,2,c
 30640  000A90  D6FF               	goto	l1266
 30641  000A92  0A03               	xorlw	3	; case 10
 30642  000A94  B4D8               	btfsc	status,2,c
 30643  000A96  D719               	goto	l1267
 30644  000A98  0A01               	xorlw	1	; case 11
 30645  000A9A  B4D8               	btfsc	status,2,c
 30646  000A9C  D770               	goto	l1277
 30647  000A9E  0A07               	xorlw	7	; case 12
 30648  000AA0  B4D8               	btfsc	status,2,c
 30649  000AA2  D783               	goto	l1278
 30650  000AA4  0A01               	xorlw	1	; case 13
 30651  000AA6  B4D8               	btfsc	status,2,c
 30652  000AA8  D78D               	goto	l1280
 30653  000AAA  0A03               	xorlw	3	; case 14
 30654  000AAC  B4D8               	btfsc	status,2,c
 30655  000AAE  D7C9               	goto	l1285
 30656  000AB0  0A01               	xorlw	1	; case 15
 30657  000AB2  B4D8               	btfsc	status,2,c
 30658  000AB4  D7CA               	goto	l1286
 30659  000AB6                     l1255:
 30660                           
 30661                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 30662                           
 30663                           ; BSR set to: 1
 30664  000AB6  0101               	movlb	1	; () banked
 30665  000AB8  51E8               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 30666  000ABA  0012               	return	
 30667  000ABC                     __end_of_HttpGetMethod:
 30668                           	opt stack 0
 30669                           tosu	equ	0xFFF
 30670                           tosh	equ	0xFFE
 30671                           tosl	equ	0xFFD
 30672                           pclath	equ	0xFFA
 30673                           tblptru	equ	0xFF8
 30674                           tblptrh	equ	0xFF7
 30675                           tblptrl	equ	0xFF6
 30676                           tablat	equ	0xFF5
 30677                           prodh	equ	0xFF4
 30678                           prodl	equ	0xFF3
 30679                           intcon	equ	0xFF2
 30680                           intcon2	equ	0xFF1
 30681                           intcon3	equ	0xFF0
 30682                           indf0	equ	0xFEF
 30683                           postinc0	equ	0xFEE
 30684                           plusw0	equ	0xFEB
 30685                           fsr0h	equ	0xFEA
 30686                           fsr0l	equ	0xFE9
 30687                           wreg	equ	0xFE8
 30688                           indf1	equ	0xFE7
 30689                           postinc1	equ	0xFE6
 30690                           postdec1	equ	0xFE5
 30691                           plusw1	equ	0xFE3
 30692                           fsr1h	equ	0xFE2
 30693                           fsr1l	equ	0xFE1
 30694                           indf2	equ	0xFDF
 30695                           postinc2	equ	0xFDE
 30696                           postdec2	equ	0xFDD
 30697                           plusw2	equ	0xFDB
 30698                           fsr2h	equ	0xFDA
 30699                           fsr2l	equ	0xFD9
 30700                           status	equ	0xFD8
 30701                           
 30702 ;; *************** function _Uart_WriteString *****************
 30703 ;; Defined at:
 30704 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30705 ;; Parameters:    Size  Location     Type
 30706 ;;  Module          1    wreg     unsigned char 
 30707 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 30708 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 30709 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 30710 ;; Auto vars:     Size  Location     Type
 30711 ;;  Module          1   34[BANK0 ] unsigned char 
 30712 ;; Return value:  Size  Location     Type
 30713 ;;                  1    wreg      void 
 30714 ;; Registers used:
 30715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30716 ;; Tracked objects:
 30717 ;;		On entry : 0/0
 30718 ;;		On exit  : 0/0
 30719 ;;		Unchanged: 0/0
 30720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30724 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30725 ;;Total ram usage:        3 bytes
 30726 ;; Hardware stack levels used:    1
 30727 ;; Hardware stack levels required when called:   12
 30728 ;; This function calls:
 30729 ;;		_UartTxBufferStatus
 30730 ;;		_UartWriteByte
 30731 ;; This function is called by:
 30732 ;;		_Mdm_SetSmsFormat
 30733 ;;		_InitGprsNetwork
 30734 ;;		_HttpGetMethod
 30735 ;;		_Mdm_PinUnlock
 30736 ;;		_Mdm_MakePhoneCall
 30737 ;; This function uses a non-reentrant model
 30738 ;;
 30739                           
 30740                           	psect	text137
 30741  006100                     __ptext137:
 30742                           	opt stack 0
 30743  006100                     _Uart_WriteString:
 30744                           	opt stack 12
 30745                           
 30746                           ; BSR set to: 1
 30747                           ;incstack = 0
 30748                           ;Uart_WriteString@Module stored from wreg
 30749  006100  0100               	movlb	0	; () banked
 30750  006102  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 30751                           
 30752                           ;uart_drv.c: 521: while (*StringToWrite)
 30753  006104  D014               	goto	u12130
 30754  006106                     
 30755                           ;uart_drv.c: 522: {
 30756                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 30757  006106  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30758  00610A  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30759  00610E  50DF               	movf	indf2,w,c
 30760  006110  0100               	movlb	0	; () banked
 30761  006112  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 30762  006114  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30763  006116  EC4F  F033         	call	_UartWriteByte
 30764                           
 30765                           ;uart_drv.c: 526: StringToWrite++;
 30766  00611A  0100               	movlb	0	; () banked
 30767  00611C  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 30768  00611E  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 30769  006120                     
 30770                           ; BSR set to: 0
 30771                           
 30772                           ; BSR set to: 0
 30773  006120  0100               	movlb	0	; () banked
 30774  006122  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30775  006124  EC33  F02E         	call	_UartTxBufferStatus
 30776  006128  06E8               	decf	wreg,f,c
 30777  00612A  B4D8               	btfsc	status,2,c
 30778  00612C  D7F9               	goto	l709
 30779  00612E                     u12130:
 30780  00612E  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30781  006132  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30782  006136  50DF               	movf	indf2,w,c
 30783  006138  B4D8               	btfsc	status,2,c
 30784  00613A  0012               	return	
 30785  00613C  D7E4               	goto	l707
 30786  00613E                     __end_of_Uart_WriteString:
 30787                           	opt stack 0
 30788                           tosu	equ	0xFFF
 30789                           tosh	equ	0xFFE
 30790                           tosl	equ	0xFFD
 30791                           pclath	equ	0xFFA
 30792                           tblptru	equ	0xFF8
 30793                           tblptrh	equ	0xFF7
 30794                           tblptrl	equ	0xFF6
 30795                           tablat	equ	0xFF5
 30796                           prodh	equ	0xFF4
 30797                           prodl	equ	0xFF3
 30798                           intcon	equ	0xFF2
 30799                           intcon2	equ	0xFF1
 30800                           intcon3	equ	0xFF0
 30801                           indf0	equ	0xFEF
 30802                           postinc0	equ	0xFEE
 30803                           plusw0	equ	0xFEB
 30804                           fsr0h	equ	0xFEA
 30805                           fsr0l	equ	0xFE9
 30806                           wreg	equ	0xFE8
 30807                           indf1	equ	0xFE7
 30808                           postinc1	equ	0xFE6
 30809                           postdec1	equ	0xFE5
 30810                           plusw1	equ	0xFE3
 30811                           fsr1h	equ	0xFE2
 30812                           fsr1l	equ	0xFE1
 30813                           indf2	equ	0xFDF
 30814                           postinc2	equ	0xFDE
 30815                           postdec2	equ	0xFDD
 30816                           plusw2	equ	0xFDB
 30817                           fsr2h	equ	0xFDA
 30818                           fsr2l	equ	0xFD9
 30819                           status	equ	0xFD8
 30820                           
 30821 ;; *************** function _Uart_WriteConstString *****************
 30822 ;; Defined at:
 30823 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30824 ;; Parameters:    Size  Location     Type
 30825 ;;  Module          1    wreg     unsigned char 
 30826 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 30827 ;;		 -> STR_32(12), STR_31(19), STR_30(14), STR_29(14), 
 30828 ;;		 -> STR_20(14), STR_19(14), STR_18(13), STR_17(13), 
 30829 ;;		 -> STR_16(17), STR_14(21), STR_13(14), STR_12(13), 
 30830 ;;		 -> STR_11(14), STR_10(14), STR_8(31), STR_7(5), 
 30831 ;;		 -> STR_6(5), STR_4(12), STR_3(7), STR_2(14), 
 30832 ;;		 -> STR_1(5), 
 30833 ;; Auto vars:     Size  Location     Type
 30834 ;;  Module          1   34[BANK0 ] unsigned char 
 30835 ;; Return value:  Size  Location     Type
 30836 ;;                  1    wreg      void 
 30837 ;; Registers used:
 30838 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30839 ;; Tracked objects:
 30840 ;;		On entry : 0/0
 30841 ;;		On exit  : 0/0
 30842 ;;		Unchanged: 0/0
 30843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30847 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30848 ;;Total ram usage:        3 bytes
 30849 ;; Hardware stack levels used:    1
 30850 ;; Hardware stack levels required when called:   12
 30851 ;; This function calls:
 30852 ;;		_UartTxBufferStatus
 30853 ;;		_UartWriteByte
 30854 ;; This function is called by:
 30855 ;;		_CheckModem
 30856 ;;		_ConfigureModem
 30857 ;;		_GetSmsSm
 30858 ;;		_Mdm_HangPhoneCall
 30859 ;;		_InitGprsNetwork
 30860 ;;		_HttpGetMethod
 30861 ;;		_MyApp_Task
 30862 ;;		_initGprsModem
 30863 ;;		_Mdm_GetPhoneCall
 30864 ;;		_MdmHttp_SetSsl
 30865 ;; This function uses a non-reentrant model
 30866 ;;
 30867                           
 30868                           	psect	text138
 30869  005F80                     __ptext138:
 30870                           	opt stack 0
 30871  005F80                     _Uart_WriteConstString:
 30872                           	opt stack 12
 30873                           
 30874                           ;incstack = 0
 30875                           ;Uart_WriteConstString@Module stored from wreg
 30876  005F80  0100               	movlb	0	; () banked
 30877  005F82  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 30878                           
 30879                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 30880  005F84  D015               	goto	u12110
 30881  005F86                     
 30882                           ;uart_drv.c: 500: {
 30883                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 30884  005F86  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30885  005F8A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30886  005F8E                     	if	0	;tblptru may be non-zero
 30887  005F8E                     	endif
 30888  005F8E                     	if	0	;tblptru may be non-zero
 30889  005F8E                     	endif
 30890  005F8E  0008               	tblrd		*
 30891  005F90  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 30892  005F94  0100               	movlb	0	; () banked
 30893  005F96  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30894  005F98  EC4F  F033         	call	_UartWriteByte
 30895                           
 30896                           ;uart_drv.c: 504: ConstStringToWrite++;
 30897  005F9C  0100               	movlb	0	; () banked
 30898  005F9E  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 30899  005FA0  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 30900  005FA2                     
 30901                           ; BSR set to: 0
 30902                           
 30903                           ; BSR set to: 0
 30904  005FA2  0100               	movlb	0	; () banked
 30905  005FA4  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30906  005FA6  EC33  F02E         	call	_UartTxBufferStatus
 30907  005FAA  06E8               	decf	wreg,f,c
 30908  005FAC  B4D8               	btfsc	status,2,c
 30909  005FAE  D7F9               	goto	l700
 30910  005FB0                     u12110:
 30911  005FB0  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30912  005FB4  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30913  005FB8                     	if	0	;tblptru may be non-zero
 30914  005FB8                     	endif
 30915  005FB8                     	if	0	;tblptru may be non-zero
 30916  005FB8                     	endif
 30917  005FB8  0008               	tblrd		*
 30918  005FBA  50F5               	movf	tablat,w,c
 30919  005FBC  0900               	iorlw	0
 30920  005FBE  B4D8               	btfsc	status,2,c
 30921  005FC0  0012               	return	
 30922  005FC2  D7E1               	goto	l698
 30923  005FC4                     __end_of_Uart_WriteConstString:
 30924                           	opt stack 0
 30925                           tosu	equ	0xFFF
 30926                           tosh	equ	0xFFE
 30927                           tosl	equ	0xFFD
 30928                           pclath	equ	0xFFA
 30929                           tblptru	equ	0xFF8
 30930                           tblptrh	equ	0xFF7
 30931                           tblptrl	equ	0xFF6
 30932                           tablat	equ	0xFF5
 30933                           prodh	equ	0xFF4
 30934                           prodl	equ	0xFF3
 30935                           intcon	equ	0xFF2
 30936                           intcon2	equ	0xFF1
 30937                           intcon3	equ	0xFF0
 30938                           indf0	equ	0xFEF
 30939                           postinc0	equ	0xFEE
 30940                           plusw0	equ	0xFEB
 30941                           fsr0h	equ	0xFEA
 30942                           fsr0l	equ	0xFE9
 30943                           wreg	equ	0xFE8
 30944                           indf1	equ	0xFE7
 30945                           postinc1	equ	0xFE6
 30946                           postdec1	equ	0xFE5
 30947                           plusw1	equ	0xFE3
 30948                           fsr1h	equ	0xFE2
 30949                           fsr1l	equ	0xFE1
 30950                           indf2	equ	0xFDF
 30951                           postinc2	equ	0xFDE
 30952                           postdec2	equ	0xFDD
 30953                           plusw2	equ	0xFDB
 30954                           fsr2h	equ	0xFDA
 30955                           fsr2l	equ	0xFD9
 30956                           status	equ	0xFD8
 30957                           
 30958 ;; *************** function _UartWriteByte *****************
 30959 ;; Defined at:
 30960 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30961 ;; Parameters:    Size  Location     Type
 30962 ;;  Module          1    wreg     unsigned char 
 30963 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 30964 ;; Auto vars:     Size  Location     Type
 30965 ;;  Module          1   30[BANK0 ] unsigned char 
 30966 ;; Return value:  Size  Location     Type
 30967 ;;                  1    wreg      void 
 30968 ;; Registers used:
 30969 ;;		wreg, status,2, status,0
 30970 ;; Tracked objects:
 30971 ;;		On entry : 0/0
 30972 ;;		On exit  : 0/0
 30973 ;;		Unchanged: 0/0
 30974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30975 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30979 ;;Total ram usage:        2 bytes
 30980 ;; Hardware stack levels used:    1
 30981 ;; Hardware stack levels required when called:   11
 30982 ;; This function calls:
 30983 ;;		Nothing
 30984 ;; This function is called by:
 30985 ;;		_Uart_WriteConstString
 30986 ;;		_Uart_WriteString
 30987 ;;		_Uart_WriteStringLen
 30988 ;; This function uses a non-reentrant model
 30989 ;;
 30990                           
 30991                           	psect	text139
 30992  00669E                     __ptext139:
 30993                           	opt stack 0
 30994  00669E                     _UartWriteByte:
 30995                           	opt stack 12
 30996                           
 30997                           ;incstack = 0
 30998                           ;UartWriteByte@Module stored from wreg
 30999  00669E  0100               	movlb	0	; () banked
 31000  0066A0  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 31001                           
 31002                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 31003  0066A2  0100               	movlb	0	; () banked
 31004  0066A4  057E               	decf	UartWriteByte@Module& (0+255),w,b
 31005  0066A6  A4D8               	btfss	status,2,c
 31006  0066A8  D003               	goto	l639
 31007                           
 31008                           ; BSR set to: 0
 31009                           ;uart_drv.c: 176: {
 31010                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 31011  0066AA  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 31012                           
 31013                           ;uart_drv.c: 179: }
 31014  0066AE  0012               	return	
 31015  0066B0                     l639:
 31016                           
 31017                           ; BSR set to: 0
 31018                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 31019                           
 31020                           ; BSR set to: 0
 31021  0066B0  0E02               	movlw	2
 31022  0066B2  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 31023  0066B4  A4D8               	btfss	status,2,c
 31024  0066B6  0012               	return	
 31025                           
 31026                           ; BSR set to: 0
 31027                           ;uart_drv.c: 181: {
 31028                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 31029  0066B8  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 31030                           
 31031                           ; BSR set to: 0
 31032  0066BC  0012               	return	
 31033  0066BE                     __end_of_UartWriteByte:
 31034                           	opt stack 0
 31035                           tosu	equ	0xFFF
 31036                           tosh	equ	0xFFE
 31037                           tosl	equ	0xFFD
 31038                           pclath	equ	0xFFA
 31039                           tblptru	equ	0xFF8
 31040                           tblptrh	equ	0xFF7
 31041                           tblptrl	equ	0xFF6
 31042                           tablat	equ	0xFF5
 31043                           prodh	equ	0xFF4
 31044                           prodl	equ	0xFF3
 31045                           intcon	equ	0xFF2
 31046                           intcon2	equ	0xFF1
 31047                           intcon3	equ	0xFF0
 31048                           indf0	equ	0xFEF
 31049                           postinc0	equ	0xFEE
 31050                           plusw0	equ	0xFEB
 31051                           fsr0h	equ	0xFEA
 31052                           fsr0l	equ	0xFE9
 31053                           wreg	equ	0xFE8
 31054                           indf1	equ	0xFE7
 31055                           postinc1	equ	0xFE6
 31056                           postdec1	equ	0xFE5
 31057                           plusw1	equ	0xFE3
 31058                           fsr1h	equ	0xFE2
 31059                           fsr1l	equ	0xFE1
 31060                           indf2	equ	0xFDF
 31061                           postinc2	equ	0xFDE
 31062                           postdec2	equ	0xFDD
 31063                           plusw2	equ	0xFDB
 31064                           fsr2h	equ	0xFDA
 31065                           fsr2l	equ	0xFD9
 31066                           status	equ	0xFD8
 31067                           
 31068 ;; *************** function _UartTxBufferStatus *****************
 31069 ;; Defined at:
 31070 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31071 ;; Parameters:    Size  Location     Type
 31072 ;;  Module          1    wreg     unsigned char 
 31073 ;; Auto vars:     Size  Location     Type
 31074 ;;  Module          1   30[BANK0 ] unsigned char 
 31075 ;;  TxBufferStat    1   31[BANK0 ] enum E9035
 31076 ;; Return value:  Size  Location     Type
 31077 ;;                  1    wreg      enum E9035
 31078 ;; Registers used:
 31079 ;;		wreg, status,2, status,0
 31080 ;; Tracked objects:
 31081 ;;		On entry : 0/0
 31082 ;;		On exit  : 0/0
 31083 ;;		Unchanged: 0/0
 31084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31086 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31087 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31088 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31089 ;;Total ram usage:        3 bytes
 31090 ;; Hardware stack levels used:    1
 31091 ;; Hardware stack levels required when called:   11
 31092 ;; This function calls:
 31093 ;;		Nothing
 31094 ;; This function is called by:
 31095 ;;		_Uart_WriteConstString
 31096 ;;		_Uart_WriteString
 31097 ;;		_Uart_WriteStringLen
 31098 ;; This function uses a non-reentrant model
 31099 ;;
 31100                           
 31101                           	psect	text140
 31102  005C66                     __ptext140:
 31103                           	opt stack 0
 31104  005C66                     _UartTxBufferStatus:
 31105                           	opt stack 12
 31106                           
 31107                           ; BSR set to: 0
 31108                           ;incstack = 0
 31109                           ;UartTxBufferStatus@Module stored from wreg
 31110  005C66  0100               	movlb	0	; () banked
 31111  005C68  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 31112                           
 31113                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 31114  005C6A  0E00               	movlw	0
 31115  005C6C  0100               	movlb	0	; () banked
 31116  005C6E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 31117                           
 31118                           ; BSR set to: 0
 31119                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 31120  005C70  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 31121  005C72  A4D8               	btfss	status,2,c
 31122  005C74  D00B               	goto	l651
 31123                           
 31124                           ; BSR set to: 0
 31125                           ;uart_drv.c: 228: {
 31126                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 31127  005C76  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 31128  005C7A  90D8               	bcf	status,0,c
 31129  005C7C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31130  005C7E  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 31131  005C80  D002               	goto	l652
 31132  005C82                     u11540:
 31133                           
 31134                           ; BSR set to: 0
 31135                           ;uart_drv.c: 231: {
 31136                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 31137  005C82  0E01               	movlw	1
 31138  005C84  D014               	goto	L51
 31139  005C86                     l652:
 31140                           
 31141                           ; BSR set to: 0
 31142                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 31143                           
 31144                           ; BSR set to: 0
 31145  005C86  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 31146  005C8A  D00C               	goto	L80
 31147  005C8C                     l651:
 31148                           
 31149                           ; BSR set to: 0
 31150                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 31151                           
 31152                           ; BSR set to: 0
 31153  005C8C  0E02               	movlw	2
 31154  005C8E  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 31155  005C90  A4D8               	btfss	status,2,c
 31156  005C92  D00E               	goto	l660
 31157                           
 31158                           ; BSR set to: 0
 31159                           ;uart_drv.c: 244: {
 31160                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 31161  005C94  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 31162  005C98  90D8               	bcf	status,0,c
 31163  005C9A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31164  005C9C  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 31165  005C9E  D7F1               	goto	u11540
 31166                           
 31167                           ; BSR set to: 0
 31168                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 31169                           
 31170                           ; BSR set to: 0
 31171                           
 31172                           ;uart_drv.c: 249: }
 31173                           
 31174                           ; BSR set to: 0
 31175                           ;uart_drv.c: 247: {
 31176                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 31177  005CA0  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 31178  005CA4                     L80:
 31179  005CA4  90D8               	bcf	status,0,c
 31180  005CA6  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31181  005CA8  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 31182  005CAA  D002               	goto	l660
 31183                           
 31184                           ; BSR set to: 0
 31185                           ;uart_drv.c: 251: {
 31186                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 31187  005CAC  0E02               	movlw	2
 31188  005CAE                     L51:
 31189  005CAE  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 31190  005CB0                     l660:
 31191                           
 31192                           ; BSR set to: 0
 31193                           ;uart_drv.c: 257: }
 31194                           ;uart_drv.c: 258: }
 31195                           ;uart_drv.c: 260: return TxBufferStatus;
 31196                           
 31197                           ; BSR set to: 0
 31198                           
 31199                           ; BSR set to: 0
 31200                           
 31201                           ; BSR set to: 0
 31202                           
 31203                           ; BSR set to: 0
 31204                           
 31205                           ;uart_drv.c: 254: else
 31206                           ;uart_drv.c: 255: {
 31207                           
 31208                           ; BSR set to: 0
 31209  005CB0  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 31210  005CB2  0012               	return	
 31211  005CB4                     __end_of_UartTxBufferStatus:
 31212                           	opt stack 0
 31213                           tosu	equ	0xFFF
 31214                           tosh	equ	0xFFE
 31215                           tosl	equ	0xFFD
 31216                           pclath	equ	0xFFA
 31217                           tblptru	equ	0xFF8
 31218                           tblptrh	equ	0xFF7
 31219                           tblptrl	equ	0xFF6
 31220                           tablat	equ	0xFF5
 31221                           prodh	equ	0xFF4
 31222                           prodl	equ	0xFF3
 31223                           intcon	equ	0xFF2
 31224                           intcon2	equ	0xFF1
 31225                           intcon3	equ	0xFF0
 31226                           indf0	equ	0xFEF
 31227                           postinc0	equ	0xFEE
 31228                           plusw0	equ	0xFEB
 31229                           fsr0h	equ	0xFEA
 31230                           fsr0l	equ	0xFE9
 31231                           wreg	equ	0xFE8
 31232                           indf1	equ	0xFE7
 31233                           postinc1	equ	0xFE6
 31234                           postdec1	equ	0xFE5
 31235                           plusw1	equ	0xFE3
 31236                           fsr1h	equ	0xFE2
 31237                           fsr1l	equ	0xFE1
 31238                           indf2	equ	0xFDF
 31239                           postinc2	equ	0xFDE
 31240                           postdec2	equ	0xFDD
 31241                           plusw2	equ	0xFDB
 31242                           fsr2h	equ	0xFDA
 31243                           fsr2l	equ	0xFD9
 31244                           status	equ	0xFD8
 31245                           
 31246 ;; *************** function _StringCopy *****************
 31247 ;; Defined at:
 31248 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31249 ;; Parameters:    Size  Location     Type
 31250 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 31251 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), smsText(20), MyApp_Task@emptyNumber(13), 
 31252 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 31253 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), 
 31254 ;;		 -> RxBuffer(400), 
 31255 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 31256 ;;		 -> MyApp_Task@receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 31257 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 31258 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 31259 ;;  Len             2   41[BANK0 ] unsigned short 
 31260 ;; Auto vars:     Size  Location     Type
 31261 ;;  Index           2   45[BANK0 ] unsigned short 
 31262 ;; Return value:  Size  Location     Type
 31263 ;;                  1    wreg      void 
 31264 ;; Registers used:
 31265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31266 ;; Tracked objects:
 31267 ;;		On entry : 0/0
 31268 ;;		On exit  : 0/0
 31269 ;;		Unchanged: 0/0
 31270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31271 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31272 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31273 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31274 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31275 ;;Total ram usage:       10 bytes
 31276 ;; Hardware stack levels used:    1
 31277 ;; Hardware stack levels required when called:   11
 31278 ;; This function calls:
 31279 ;;		Nothing
 31280 ;; This function is called by:
 31281 ;;		_ModemEvtParser
 31282 ;;		_GetSmsSm
 31283 ;;		_SendSmsSm
 31284 ;;		_Mdm_GetSmsData
 31285 ;;		_InitGprsNetwork
 31286 ;;		_HttpGetMethod
 31287 ;;		_Eeprom_Write
 31288 ;;		_MyApp_Task
 31289 ;;		_Mdm_SendSmsData
 31290 ;; This function uses a non-reentrant model
 31291 ;;
 31292                           
 31293                           	psect	text141
 31294  005606                     __ptext141:
 31295                           	opt stack 0
 31296  005606                     _StringCopy:
 31297                           	opt stack 14
 31298                           
 31299                           ;sf.c: 106: UINT16 Index = 0;
 31300                           
 31301                           ; BSR set to: 0
 31302                           ;incstack = 0
 31303  005606  0E00               	movlw	0
 31304  005608  0100               	movlb	0	; () banked
 31305  00560A  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 31306  00560C  0E00               	movlw	0
 31307  00560E  6F8D               	movwf	StringCopy@Index& (0+255),b
 31308                           
 31309                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 31310  005610  0E00               	movlw	0
 31311  005612  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 31312  005614  0E00               	movlw	0
 31313  005616  6F8D               	movwf	StringCopy@Index& (0+255),b
 31314  005618  D020               	goto	l2247
 31315  00561A                     
 31316                           ; BSR set to: 0
 31317                           ;sf.c: 110: {
 31318                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 31319                           
 31320                           ; BSR set to: 0
 31321  00561A  518D               	movf	StringCopy@Index& (0+255),w,b
 31322  00561C  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 31323  00561E  6F8B               	movwf	??_StringCopy& (0+255),b
 31324  005620  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 31325  005622  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 31326  005624  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 31327  005626  C08B  FFF6         	movff	??_StringCopy,tblptrl
 31328  00562A  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 31329  00562E  6AF8               	clrf	tblptru,c
 31330  005630  518D               	movf	StringCopy@Index& (0+255),w,b
 31331  005632  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 31332  005634  6ED9               	movwf	fsr2l,c
 31333  005636  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 31334  005638  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 31335  00563A  6EDA               	movwf	fsr2h,c
 31336  00563C  0E0E               	movlw	(high __ramtop+-1)
 31337  00563E  64F7               	cpfsgt	tblptrh,c
 31338  005640  D003               	bra	u12657
 31339  005642  0008               	tblrd		*
 31340  005644  50F5               	movf	tablat,w,c
 31341  005646  D005               	bra	u12650
 31342  005648                     u12657:
 31343  005648  CFF6 FFE9          	movff	tblptrl,fsr0l
 31344  00564C  CFF7 FFEA          	movff	tblptrh,fsr0h
 31345  005650  50EF               	movf	indf0,w,c
 31346  005652                     u12650:
 31347  005652  6EDF               	movwf	indf2,c
 31348  005654  0100               	movlb	0	; () banked
 31349  005656  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 31350  005658  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 31351  00565A                     l2247:
 31352                           
 31353                           ; BSR set to: 0
 31354                           
 31355                           ; BSR set to: 0
 31356  00565A  5189               	movf	StringCopy@Len& (0+255),w,b
 31357  00565C  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 31358  00565E  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 31359  005660  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 31360  005662  B0D8               	btfsc	status,0,c
 31361  005664  0012               	return	
 31362  005666  D7D9               	goto	l2248
 31363  005668                     __end_of_StringCopy:
 31364                           	opt stack 0
 31365                           tosu	equ	0xFFF
 31366                           tosh	equ	0xFFE
 31367                           tosl	equ	0xFFD
 31368                           pclath	equ	0xFFA
 31369                           tblptru	equ	0xFF8
 31370                           tblptrh	equ	0xFF7
 31371                           tblptrl	equ	0xFF6
 31372                           tablat	equ	0xFF5
 31373                           prodh	equ	0xFF4
 31374                           prodl	equ	0xFF3
 31375                           intcon	equ	0xFF2
 31376                           intcon2	equ	0xFF1
 31377                           intcon3	equ	0xFF0
 31378                           indf0	equ	0xFEF
 31379                           postinc0	equ	0xFEE
 31380                           plusw0	equ	0xFEB
 31381                           fsr0h	equ	0xFEA
 31382                           fsr0l	equ	0xFE9
 31383                           wreg	equ	0xFE8
 31384                           indf1	equ	0xFE7
 31385                           postinc1	equ	0xFE6
 31386                           postdec1	equ	0xFE5
 31387                           plusw1	equ	0xFE3
 31388                           fsr1h	equ	0xFE2
 31389                           fsr1l	equ	0xFE1
 31390                           indf2	equ	0xFDF
 31391                           postinc2	equ	0xFDE
 31392                           postdec2	equ	0xFDD
 31393                           plusw2	equ	0xFDB
 31394                           fsr2h	equ	0xFDA
 31395                           fsr2l	equ	0xFD9
 31396                           status	equ	0xFD8
 31397                           
 31398 ;; *************** function _OsTmr_StartTimer *****************
 31399 ;; Defined at:
 31400 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31401 ;; Parameters:    Size  Location     Type
 31402 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 31403 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 31404 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 31405 ;;  Timeout         4   35[BANK0 ] unsigned long 
 31406 ;; Auto vars:     Size  Location     Type
 31407 ;;		None
 31408 ;; Return value:  Size  Location     Type
 31409 ;;                  1    wreg      void 
 31410 ;; Registers used:
 31411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31412 ;; Tracked objects:
 31413 ;;		On entry : 0/0
 31414 ;;		On exit  : 0/0
 31415 ;;		Unchanged: 0/0
 31416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31417 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31420 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31421 ;;Total ram usage:        6 bytes
 31422 ;; Hardware stack levels used:    1
 31423 ;; Hardware stack levels required when called:   12
 31424 ;; This function calls:
 31425 ;;		_GetOsTickCounter
 31426 ;; This function is called by:
 31427 ;;		_OsTmr_Wait
 31428 ;;		_CheckModem
 31429 ;;		_SendSmsSm
 31430 ;;		_InitGprsNetwork
 31431 ;;		_HttpGetMethod
 31432 ;;		_I2cSlv_QueryI2cData
 31433 ;;		_Term_MainSm
 31434 ;; This function uses a non-reentrant model
 31435 ;;
 31436                           
 31437                           	psect	text142
 31438  0056C6                     __ptext142:
 31439                           	opt stack 0
 31440  0056C6                     _OsTmr_StartTimer:
 31441                           	opt stack 12
 31442                           
 31443                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 31444                           
 31445                           ; BSR set to: 0
 31446                           ;incstack = 0
 31447  0056C6  0100               	movlb	0	; () banked
 31448  0056C8  EE20 F001          	lfsr	2,1
 31449  0056CC  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31450  0056CE  26D9               	addwf	fsr2l,f,c
 31451  0056D0  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31452  0056D2  22DA               	addwfc	fsr2h,f,c
 31453  0056D4  0E00               	movlw	0
 31454  0056D6  6EDF               	movwf	indf2,c
 31455                           
 31456                           ; BSR set to: 0
 31457                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 31458  0056D8  EC45  F034         	call	_GetOsTickCounter	;wreg free
 31459  0056DC  0100               	movlb	0	; () banked
 31460  0056DE  EE20 F002          	lfsr	2,2
 31461  0056E2  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31462  0056E4  26D9               	addwf	fsr2l,f,c
 31463  0056E6  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31464  0056E8  22DA               	addwfc	fsr2h,f,c
 31465  0056EA  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 31466  0056EE  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 31467  0056F2  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 31468  0056F6  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 31469                           
 31470                           ; BSR set to: 0
 31471                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 31472  0056FA  EE20 F006          	lfsr	2,6
 31473  0056FE  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31474  005700  26D9               	addwf	fsr2l,f,c
 31475  005702  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31476  005704  22DA               	addwfc	fsr2h,f,c
 31477  005706  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 31478  00570A  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 31479  00570E  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 31480  005712  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 31481                           
 31482                           ; BSR set to: 0
 31483                           ;os_timers.c: 127: Timer->Enabled = 1u;
 31484  005716  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 31485  00571A  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 31486  00571E  0E01               	movlw	1
 31487  005720  6EDF               	movwf	indf2,c
 31488                           
 31489                           ; BSR set to: 0
 31490  005722  0012               	return		;funcret
 31491  005724                     __end_of_OsTmr_StartTimer:
 31492                           	opt stack 0
 31493                           tosu	equ	0xFFF
 31494                           tosh	equ	0xFFE
 31495                           tosl	equ	0xFFD
 31496                           pclath	equ	0xFFA
 31497                           tblptru	equ	0xFF8
 31498                           tblptrh	equ	0xFF7
 31499                           tblptrl	equ	0xFF6
 31500                           tablat	equ	0xFF5
 31501                           prodh	equ	0xFF4
 31502                           prodl	equ	0xFF3
 31503                           intcon	equ	0xFF2
 31504                           intcon2	equ	0xFF1
 31505                           intcon3	equ	0xFF0
 31506                           indf0	equ	0xFEF
 31507                           postinc0	equ	0xFEE
 31508                           plusw0	equ	0xFEB
 31509                           fsr0h	equ	0xFEA
 31510                           fsr0l	equ	0xFE9
 31511                           wreg	equ	0xFE8
 31512                           indf1	equ	0xFE7
 31513                           postinc1	equ	0xFE6
 31514                           postdec1	equ	0xFE5
 31515                           plusw1	equ	0xFE3
 31516                           fsr1h	equ	0xFE2
 31517                           fsr1l	equ	0xFE1
 31518                           indf2	equ	0xFDF
 31519                           postinc2	equ	0xFDE
 31520                           postdec2	equ	0xFDD
 31521                           plusw2	equ	0xFDB
 31522                           fsr2h	equ	0xFDA
 31523                           fsr2l	equ	0xFD9
 31524                           status	equ	0xFD8
 31525                           
 31526 ;; *************** function _OsTmr_GetTimerStatus *****************
 31527 ;; Defined at:
 31528 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31529 ;; Parameters:    Size  Location     Type
 31530 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 31531 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 31532 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 31533 ;; Auto vars:     Size  Location     Type
 31534 ;;		None
 31535 ;; Return value:  Size  Location     Type
 31536 ;;                  1    wreg      enum E7740
 31537 ;; Registers used:
 31538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31539 ;; Tracked objects:
 31540 ;;		On entry : 0/0
 31541 ;;		On exit  : 0/0
 31542 ;;		Unchanged: 0/0
 31543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31544 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31547 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31548 ;;Total ram usage:        6 bytes
 31549 ;; Hardware stack levels used:    1
 31550 ;; Hardware stack levels required when called:   13
 31551 ;; This function calls:
 31552 ;;		_GetElapsedTime
 31553 ;; This function is called by:
 31554 ;;		_OsTmr_Wait
 31555 ;;		_CheckModem
 31556 ;;		_SendSmsSm
 31557 ;;		_InitGprsNetwork
 31558 ;;		_HttpGetMethod
 31559 ;;		_I2cSlv_QueryI2cData
 31560 ;;		_Term_MainSm
 31561 ;; This function uses a non-reentrant model
 31562 ;;
 31563                           
 31564                           	psect	text143
 31565  004E04                     __ptext143:
 31566                           	opt stack 0
 31567  004E04                     _OsTmr_GetTimerStatus:
 31568                           	opt stack 11
 31569                           
 31570                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 31571                           
 31572                           ; BSR set to: 0
 31573                           ;incstack = 0
 31574  004E04  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31575  004E08  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31576  004E0C  04DE               	decf	postinc2,w,c
 31577  004E0E  A4D8               	btfss	status,2,c
 31578  004E10  D030               	goto	l864
 31579                           
 31580                           ;os_timers.c: 197: {
 31581                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 31582  004E12  0100               	movlb	0	; () banked
 31583  004E14  EE20 F006          	lfsr	2,6
 31584  004E18  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31585  004E1A  26D9               	addwf	fsr2l,f,c
 31586  004E1C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31587  004E1E  22DA               	addwfc	fsr2h,f,c
 31588  004E20  EE10 F002          	lfsr	1,2
 31589  004E24  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31590  004E26  26E1               	addwf	fsr1l,f,c
 31591  004E28  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31592  004E2A  22E2               	addwfc	fsr1h,f,c
 31593  004E2C  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 31594  004E30  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 31595  004E34  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 31596  004E38  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 31597  004E3C  ECC0  F01F         	call	_GetElapsedTime	;wreg free
 31598  004E40  50DE               	movf	postinc2,w,c
 31599  004E42  0100               	movlb	0	; () banked
 31600  004E44  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 31601  004E46  50DE               	movf	postinc2,w,c
 31602  004E48  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 31603  004E4A  50DE               	movf	postinc2,w,c
 31604  004E4C  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 31605  004E4E  50DE               	movf	postinc2,w,c
 31606  004E50  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 31607  004E52  A0D8               	btfss	status,0,c
 31608  004E54  D017               	goto	l867
 31609                           
 31610                           ; BSR set to: 0
 31611                           ;os_timers.c: 200: {
 31612                           ;os_timers.c: 202: Timer->Enabled = 0u;
 31613  004E56  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31614  004E5A  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31615  004E5E  0E00               	movlw	0
 31616  004E60  6EDF               	movwf	indf2,c
 31617                           
 31618                           ; BSR set to: 0
 31619                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 31620  004E62  EE20 F001          	lfsr	2,1
 31621  004E66  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31622  004E68  26D9               	addwf	fsr2l,f,c
 31623  004E6A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31624  004E6C  22DA               	addwfc	fsr2h,f,c
 31625  004E6E  0E01               	movlw	1
 31626  004E70  D008               	goto	L81
 31627  004E72                     l864:
 31628                           
 31629                           ;os_timers.c: 211: else
 31630                           ;os_timers.c: 212: {
 31631                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 31632                           
 31633                           ; BSR set to: 0
 31634  004E72  0100               	movlb	0	; () banked
 31635  004E74  EE20 F001          	lfsr	2,1
 31636  004E78  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31637  004E7A  26D9               	addwf	fsr2l,f,c
 31638  004E7C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31639  004E7E  22DA               	addwfc	fsr2h,f,c
 31640  004E80  0E02               	movlw	2
 31641  004E82                     L81:
 31642  004E82  6EDF               	movwf	indf2,c
 31643  004E84                     l867:
 31644                           
 31645                           ; BSR set to: 0
 31646                           ;os_timers.c: 215: }
 31647                           ;os_timers.c: 218: return Timer->Status;
 31648  004E84  EE20 F001          	lfsr	2,1
 31649  004E88  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31650  004E8A  26D9               	addwf	fsr2l,f,c
 31651  004E8C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31652  004E8E  22DA               	addwfc	fsr2h,f,c
 31653  004E90  50DF               	movf	indf2,w,c
 31654  004E92  0012               	return	
 31655  004E94                     __end_of_OsTmr_GetTimerStatus:
 31656                           	opt stack 0
 31657                           tosu	equ	0xFFF
 31658                           tosh	equ	0xFFE
 31659                           tosl	equ	0xFFD
 31660                           pclath	equ	0xFFA
 31661                           tblptru	equ	0xFF8
 31662                           tblptrh	equ	0xFF7
 31663                           tblptrl	equ	0xFF6
 31664                           tablat	equ	0xFF5
 31665                           prodh	equ	0xFF4
 31666                           prodl	equ	0xFF3
 31667                           intcon	equ	0xFF2
 31668                           intcon2	equ	0xFF1
 31669                           intcon3	equ	0xFF0
 31670                           indf0	equ	0xFEF
 31671                           postinc0	equ	0xFEE
 31672                           plusw0	equ	0xFEB
 31673                           fsr0h	equ	0xFEA
 31674                           fsr0l	equ	0xFE9
 31675                           wreg	equ	0xFE8
 31676                           indf1	equ	0xFE7
 31677                           postinc1	equ	0xFE6
 31678                           postdec1	equ	0xFE5
 31679                           plusw1	equ	0xFE3
 31680                           fsr1h	equ	0xFE2
 31681                           fsr1l	equ	0xFE1
 31682                           indf2	equ	0xFDF
 31683                           postinc2	equ	0xFDE
 31684                           postdec2	equ	0xFDD
 31685                           plusw2	equ	0xFDB
 31686                           fsr2h	equ	0xFDA
 31687                           fsr2l	equ	0xFD9
 31688                           status	equ	0xFD8
 31689                           
 31690 ;; *************** function _GetElapsedTime *****************
 31691 ;; Defined at:
 31692 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31693 ;; Parameters:    Size  Location     Type
 31694 ;;  StartTime       4   33[BANK0 ] unsigned long 
 31695 ;; Auto vars:     Size  Location     Type
 31696 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 31697 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 31698 ;; Return value:  Size  Location     Type
 31699 ;;                  4   33[BANK0 ] unsigned long 
 31700 ;; Registers used:
 31701 ;;		wreg, status,2, status,0, cstack
 31702 ;; Tracked objects:
 31703 ;;		On entry : 0/0
 31704 ;;		On exit  : 0/0
 31705 ;;		Unchanged: 0/0
 31706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31708 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31709 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31710 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31711 ;;Total ram usage:       20 bytes
 31712 ;; Hardware stack levels used:    1
 31713 ;; Hardware stack levels required when called:   12
 31714 ;; This function calls:
 31715 ;;		_GetOsTickCounter
 31716 ;; This function is called by:
 31717 ;;		_OsTmr_GetTimerStatus
 31718 ;;		_OsTmr_GetRemainingTime
 31719 ;; This function uses a non-reentrant model
 31720 ;;
 31721                           
 31722                           	psect	text144
 31723  003F80                     __ptext144:
 31724                           	opt stack 0
 31725  003F80                     _GetElapsedTime:
 31726                           	opt stack 11
 31727                           
 31728                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 31729                           ;os_timers.c: 87: UINT32 TimeValue;
 31730                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 31731                           
 31732                           ; BSR set to: 0
 31733                           ;incstack = 0
 31734  003F80  EC45  F034         	call	_GetOsTickCounter	;wreg free
 31735  003F84  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 31736  003F88  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 31737  003F8C  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 31738  003F90  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 31739                           
 31740                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 31741  003F94  0100               	movlb	0	; () banked
 31742  003F96  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 31743  003F98  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31744  003F9A  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 31745  003F9C  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31746  003F9E  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 31747  003FA0  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31748  003FA2  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 31749  003FA4  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31750  003FA6  A0D8               	btfss	status,0,c
 31751  003FA8  D01D               	goto	l844
 31752                           
 31753                           ; BSR set to: 0
 31754                           ;os_timers.c: 94: {
 31755                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 31756  003FAA  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31757  003FAE  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31758  003FB2  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31759  003FB6  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31760  003FBA  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31761  003FBC  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31762  003FBE  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31763  003FC0  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31764  003FC2  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31765  003FC4  0E00               	movlw	0
 31766  003FC6  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31767  003FC8  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31768  003FCA  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31769  003FCC  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31770  003FCE  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31771  003FD0  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31772  003FD2  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31773  003FD4  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31774  003FD6  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31775  003FD8  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31776  003FDA  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31777  003FDC  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31778  003FDE  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31779  003FE0  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31780  003FE2  D028               	goto	L52
 31781  003FE4                     l844:
 31782                           
 31783                           ; BSR set to: 0
 31784                           ;os_timers.c: 97: else
 31785                           ;os_timers.c: 98: {
 31786                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 31787                           
 31788                           ; BSR set to: 0
 31789  003FE4  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31790  003FE8  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31791  003FEC  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31792  003FF0  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31793  003FF4  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31794  003FF6  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31795  003FF8  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31796  003FFA  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31797  003FFC  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31798  003FFE  0E00               	movlw	0
 31799  004000  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31800  004002  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31801  004004  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31802  004006  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31803  004008  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31804  00400A  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 31805  00400C  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31806  00400E  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31807  004010  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 31808  004012  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31809  004014  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31810  004016  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 31811  004018  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31812  00401A  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31813  00401C  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 31814  00401E  0EFF               	movlw	255
 31815  004020  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 31816  004022  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31817  004024  0EFF               	movlw	255
 31818  004026  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 31819  004028  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31820  00402A  0EFF               	movlw	255
 31821  00402C  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 31822  00402E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31823  004030  0EFF               	movlw	255
 31824  004032  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 31825  004034                     L52:
 31826  004034  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 31827                           
 31828                           ; BSR set to: 0
 31829                           ;os_timers.c: 100: }
 31830                           ;os_timers.c: 102: return TimeValue;
 31831                           
 31832                           ; BSR set to: 0
 31833  004036  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 31834  00403A  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 31835  00403E  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 31836  004042  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 31837  004046  0012               	return	
 31838  004048                     __end_of_GetElapsedTime:
 31839                           	opt stack 0
 31840                           tosu	equ	0xFFF
 31841                           tosh	equ	0xFFE
 31842                           tosl	equ	0xFFD
 31843                           pclath	equ	0xFFA
 31844                           tblptru	equ	0xFF8
 31845                           tblptrh	equ	0xFF7
 31846                           tblptrl	equ	0xFF6
 31847                           tablat	equ	0xFF5
 31848                           prodh	equ	0xFF4
 31849                           prodl	equ	0xFF3
 31850                           intcon	equ	0xFF2
 31851                           intcon2	equ	0xFF1
 31852                           intcon3	equ	0xFF0
 31853                           indf0	equ	0xFEF
 31854                           postinc0	equ	0xFEE
 31855                           plusw0	equ	0xFEB
 31856                           fsr0h	equ	0xFEA
 31857                           fsr0l	equ	0xFE9
 31858                           wreg	equ	0xFE8
 31859                           indf1	equ	0xFE7
 31860                           postinc1	equ	0xFE6
 31861                           postdec1	equ	0xFE5
 31862                           plusw1	equ	0xFE3
 31863                           fsr1h	equ	0xFE2
 31864                           fsr1l	equ	0xFE1
 31865                           indf2	equ	0xFDF
 31866                           postinc2	equ	0xFDE
 31867                           postdec2	equ	0xFDD
 31868                           plusw2	equ	0xFDB
 31869                           fsr2h	equ	0xFDA
 31870                           fsr2l	equ	0xFD9
 31871                           status	equ	0xFD8
 31872                           
 31873 ;; *************** function _GetOsTickCounter *****************
 31874 ;; Defined at:
 31875 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31876 ;; Parameters:    Size  Location     Type
 31877 ;;		None
 31878 ;; Auto vars:     Size  Location     Type
 31879 ;;		None
 31880 ;; Return value:  Size  Location     Type
 31881 ;;                  4   29[BANK0 ] unsigned long 
 31882 ;; Registers used:
 31883 ;;		None
 31884 ;; Tracked objects:
 31885 ;;		On entry : 0/0
 31886 ;;		On exit  : 0/0
 31887 ;;		Unchanged: 0/0
 31888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31892 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31893 ;;Total ram usage:        4 bytes
 31894 ;; Hardware stack levels used:    1
 31895 ;; Hardware stack levels required when called:   11
 31896 ;; This function calls:
 31897 ;;		Nothing
 31898 ;; This function is called by:
 31899 ;;		_GetElapsedTime
 31900 ;;		_OsTmr_StartTimer
 31901 ;;		_OsTmr_GetElapsedTime
 31902 ;; This function uses a non-reentrant model
 31903 ;;
 31904                           
 31905                           	psect	text145
 31906  00688A                     __ptext145:
 31907                           	opt stack 0
 31908  00688A                     _GetOsTickCounter:
 31909                           	opt stack 12
 31910                           
 31911                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 31912                           
 31913                           ; BSR set to: 0
 31914                           ;incstack = 0
 31915  00688A  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 31916  00688E  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 31917  006892  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 31918  006896  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 31919  00689A  0012               	return		;funcret
 31920  00689C                     __end_of_GetOsTickCounter:
 31921                           	opt stack 0
 31922                           tosu	equ	0xFFF
 31923                           tosh	equ	0xFFE
 31924                           tosl	equ	0xFFD
 31925                           pclath	equ	0xFFA
 31926                           tblptru	equ	0xFF8
 31927                           tblptrh	equ	0xFF7
 31928                           tblptrl	equ	0xFF6
 31929                           tablat	equ	0xFF5
 31930                           prodh	equ	0xFF4
 31931                           prodl	equ	0xFF3
 31932                           intcon	equ	0xFF2
 31933                           intcon2	equ	0xFF1
 31934                           intcon3	equ	0xFF0
 31935                           indf0	equ	0xFEF
 31936                           postinc0	equ	0xFEE
 31937                           plusw0	equ	0xFEB
 31938                           fsr0h	equ	0xFEA
 31939                           fsr0l	equ	0xFE9
 31940                           wreg	equ	0xFE8
 31941                           indf1	equ	0xFE7
 31942                           postinc1	equ	0xFE6
 31943                           postdec1	equ	0xFE5
 31944                           plusw1	equ	0xFE3
 31945                           fsr1h	equ	0xFE2
 31946                           fsr1l	equ	0xFE1
 31947                           indf2	equ	0xFDF
 31948                           postinc2	equ	0xFDE
 31949                           postdec2	equ	0xFDD
 31950                           plusw2	equ	0xFDB
 31951                           fsr2h	equ	0xFDA
 31952                           fsr2l	equ	0xFD9
 31953                           status	equ	0xFD8
 31954                           
 31955 ;; *************** function _ClearBuffer *****************
 31956 ;; Defined at:
 31957 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31958 ;; Parameters:    Size  Location     Type
 31959 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 31960 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_SmsRx(102)
      +, 
 31961 ;;		 -> callerNumber(13), RxBuffer(400), 
 31962 ;;  Len             2   31[BANK0 ] unsigned short 
 31963 ;; Auto vars:     Size  Location     Type
 31964 ;;  Index           2   33[BANK0 ] unsigned short 
 31965 ;; Return value:  Size  Location     Type
 31966 ;;                  1    wreg      void 
 31967 ;; Registers used:
 31968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31969 ;; Tracked objects:
 31970 ;;		On entry : 0/0
 31971 ;;		On exit  : 0/0
 31972 ;;		Unchanged: 0/0
 31973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31974 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31977 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31978 ;;Total ram usage:        6 bytes
 31979 ;; Hardware stack levels used:    1
 31980 ;; Hardware stack levels required when called:   11
 31981 ;; This function calls:
 31982 ;;		Nothing
 31983 ;; This function is called by:
 31984 ;;		_GetSmsSm
 31985 ;;		_GetCallerNumber
 31986 ;;		_InitGprsNetwork
 31987 ;;		_HttpGetMethod
 31988 ;;		_GsmGprsTerminal
 31989 ;; This function uses a non-reentrant model
 31990 ;;
 31991                           
 31992                           	psect	text146
 31993  006224                     __ptext146:
 31994                           	opt stack 0
 31995  006224                     _ClearBuffer:
 31996                           	opt stack 15
 31997                           
 31998                           ;sf.c: 126: UINT16 Index = 0;
 31999                           
 32000                           ;incstack = 0
 32001  006224  0E00               	movlw	0
 32002  006226  0100               	movlb	0	; () banked
 32003  006228  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 32004  00622A  0E00               	movlw	0
 32005  00622C  6F81               	movwf	ClearBuffer@Index& (0+255),b
 32006                           
 32007                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 32008  00622E  0E00               	movlw	0
 32009  006230  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 32010  006232  0E00               	movlw	0
 32011  006234  6F81               	movwf	ClearBuffer@Index& (0+255),b
 32012  006236  D00A               	goto	l2253
 32013  006238                     
 32014                           ; BSR set to: 0
 32015                           ;sf.c: 130: {
 32016                           ;sf.c: 131: *(Buffer + Index) = 0;
 32017                           
 32018                           ; BSR set to: 0
 32019  006238  5181               	movf	ClearBuffer@Index& (0+255),w,b
 32020  00623A  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 32021  00623C  6ED9               	movwf	fsr2l,c
 32022  00623E  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 32023  006240  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 32024  006242  6EDA               	movwf	fsr2h,c
 32025  006244  0E00               	movlw	0
 32026  006246  6EDF               	movwf	indf2,c
 32027                           
 32028                           ; BSR set to: 0
 32029  006248  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 32030  00624A  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 32031  00624C                     l2253:
 32032                           
 32033                           ; BSR set to: 0
 32034                           
 32035                           ; BSR set to: 0
 32036  00624C  5181               	movf	ClearBuffer@Index& (0+255),w,b
 32037  00624E  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 32038  006250  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 32039  006252  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 32040  006254  A0D8               	btfss	status,0,c
 32041  006256  0012               	return	
 32042  006258  D7EF               	goto	l2254
 32043  00625A                     __end_of_ClearBuffer:
 32044                           	opt stack 0
 32045                           tosu	equ	0xFFF
 32046                           tosh	equ	0xFFE
 32047                           tosl	equ	0xFFD
 32048                           pclath	equ	0xFFA
 32049                           tblptru	equ	0xFF8
 32050                           tblptrh	equ	0xFF7
 32051                           tblptrl	equ	0xFF6
 32052                           tablat	equ	0xFF5
 32053                           prodh	equ	0xFF4
 32054                           prodl	equ	0xFF3
 32055                           intcon	equ	0xFF2
 32056                           intcon2	equ	0xFF1
 32057                           intcon3	equ	0xFF0
 32058                           indf0	equ	0xFEF
 32059                           postinc0	equ	0xFEE
 32060                           plusw0	equ	0xFEB
 32061                           fsr0h	equ	0xFEA
 32062                           fsr0l	equ	0xFE9
 32063                           wreg	equ	0xFE8
 32064                           indf1	equ	0xFE7
 32065                           postinc1	equ	0xFE6
 32066                           postdec1	equ	0xFE5
 32067                           plusw1	equ	0xFE3
 32068                           fsr1h	equ	0xFE2
 32069                           fsr1l	equ	0xFE1
 32070                           indf2	equ	0xFDF
 32071                           postinc2	equ	0xFDE
 32072                           postdec2	equ	0xFDD
 32073                           plusw2	equ	0xFDB
 32074                           fsr2h	equ	0xFDA
 32075                           fsr2l	equ	0xFD9
 32076                           status	equ	0xFD8
 32077                           
 32078 ;; *************** function _LedStateMachine *****************
 32079 ;; Defined at:
 32080 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32081 ;; Parameters:    Size  Location     Type
 32082 ;;  Led             1    wreg     unsigned char 
 32083 ;;  LedSts          2   47[BANK0 ] PTR enum E8952
 32084 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 32085 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 32086 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 32087 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 32088 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32089 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 32090 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 32091 ;; Auto vars:     Size  Location     Type
 32092 ;;  Led             1   57[BANK0 ] unsigned char 
 32093 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 32094 ;; Return value:  Size  Location     Type
 32095 ;;                  1    wreg      unsigned char 
 32096 ;; Registers used:
 32097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32098 ;; Tracked objects:
 32099 ;;		On entry : 0/0
 32100 ;;		On exit  : 0/0
 32101 ;;		Unchanged: 0/0
 32102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32103 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32104 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;Total ram usage:       11 bytes
 32108 ;; Hardware stack levels used:    1
 32109 ;; Hardware stack levels required when called:   13
 32110 ;; This function calls:
 32111 ;;		_LedBlinkStateMachine
 32112 ;;		_LedPulseStateMachine
 32113 ;;		_Led_SetLedStatus
 32114 ;; This function is called by:
 32115 ;;		_Led_MainTask
 32116 ;; This function uses a non-reentrant model
 32117 ;;
 32118                           
 32119                           	psect	text147
 32120  004762                     __ptext147:
 32121                           	opt stack 0
 32122  004762                     _LedStateMachine:
 32123                           	opt stack 14
 32124                           
 32125                           ; BSR set to: 0
 32126                           ;incstack = 0
 32127                           ;LedStateMachine@Led stored from wreg
 32128  004762  0100               	movlb	0	; () banked
 32129  004764  6F99               	movwf	LedStateMachine@Led& (0+255),b
 32130                           
 32131                           ;led.c: 238: UINT8 LedOutSts = 0u;
 32132  004766  0E00               	movlw	0
 32133  004768  0100               	movlb	0	; () banked
 32134  00476A  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32135                           
 32136                           ;led.c: 241: switch (*LedSts)
 32137  00476C  D037               	goto	l2112
 32138  00476E                     
 32139                           ; BSR set to: 0
 32140                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 32141                           
 32142                           ; BSR set to: 0
 32143  00476E  0E00               	movlw	0
 32144  004770  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32145                           
 32146                           ; BSR set to: 0
 32147                           ;led.c: 246: *LedOut = ((UINT8)(0));
 32148  004772  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32149  004776  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32150  00477A  0E00               	movlw	0
 32151  00477C  D007               	goto	L53
 32152  00477E                     
 32153                           ; BSR set to: 0
 32154                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 32155                           
 32156                           ; BSR set to: 0
 32157  00477E  0E01               	movlw	1
 32158  004780  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32159                           
 32160                           ; BSR set to: 0
 32161                           ;led.c: 252: *LedOut = ((UINT8)(1));
 32162  004782  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32163  004786  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32164  00478A  0E01               	movlw	1
 32165  00478C                     L53:
 32166  00478C  6EDF               	movwf	indf2,c
 32167                           
 32168                           ;led.c: 253: break;
 32169  00478E  D03A               	goto	l2114
 32170  004790                     
 32171                           ; BSR set to: 0
 32172                           ;led.c: 257: if (*LedOut == 1)
 32173                           
 32174                           ; BSR set to: 0
 32175  004790  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32176  004794  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32177  004798  04DE               	decf	postinc2,w,c
 32178  00479A  A4D8               	btfss	status,2,c
 32179  00479C  D006               	goto	l2117
 32180                           
 32181                           ; BSR set to: 0
 32182                           ;led.c: 258: {
 32183                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 32184  00479E  0E00               	movlw	0
 32185  0047A0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32186  0047A2  5199               	movf	LedStateMachine@Led& (0+255),w,b
 32187  0047A4  ECC1  F031         	call	_Led_SetLedStatus
 32188                           
 32189                           ;led.c: 261: }
 32190  0047A8  D02D               	goto	l2114
 32191  0047AA                     l2117:
 32192                           
 32193                           ;led.c: 262: else
 32194                           ;led.c: 263: {
 32195                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 32196  0047AA  0E01               	movlw	1
 32197  0047AC  0100               	movlb	0	; () banked
 32198  0047AE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32199  0047B0  5199               	movf	LedStateMachine@Led& (0+255),w,b
 32200  0047B2  ECC1  F031         	call	_Led_SetLedStatus
 32201                           
 32202                           ;led.c: 266: }
 32203                           ;led.c: 267: break;
 32204  0047B6  D026               	goto	l2114
 32205  0047B8                     
 32206                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 32207  0047B8  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 32208  0047BC  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 32209  0047C0  EC1D  F015         	call	_LedBlinkStateMachine	;wreg free
 32210  0047C4  D008               	goto	L54
 32211  0047C6                     
 32212                           ; BSR set to: 0
 32213                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 32214                           
 32215                           ; BSR set to: 0
 32216  0047C6  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 32217  0047CA  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 32218  0047CE  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 32219  0047D2  EC49  F01A         	call	_LedPulseStateMachine	;wreg free
 32220  0047D6                     L54:
 32221  0047D6  0100               	movlb	0	; () banked
 32222  0047D8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32223                           
 32224                           ; BSR set to: 0
 32225                           ;led.c: 281: }
 32226                           
 32227                           ; BSR set to: 0
 32228                           ;led.c: 280: break;
 32229                           
 32230                           ;led.c: 279: default:
 32231                           
 32232                           ;led.c: 277: break;
 32233  0047DA  D014               	goto	l2114
 32234  0047DC                     l2112:
 32235                           
 32236                           ; BSR set to: 0
 32237                           
 32238                           ; BSR set to: 0
 32239  0047DC  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 32240  0047E0  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 32241  0047E4  50DF               	movf	indf2,w,c
 32242                           
 32243                           ; Switch size 1, requested type "space"
 32244                           ; Number of cases is 5, Range of values is 0 to 4
 32245                           ; switch strategies available:
 32246                           ; Name         Instructions Cycles
 32247                           ; simple_byte           16     9 (average)
 32248                           ;	Chosen strategy is simple_byte
 32249  0047E6  0A00               	xorlw	0	; case 0
 32250  0047E8  B4D8               	btfsc	status,2,c
 32251  0047EA  D7C1               	goto	l2113
 32252  0047EC  0A01               	xorlw	1	; case 1
 32253  0047EE  B4D8               	btfsc	status,2,c
 32254  0047F0  D7C6               	goto	l2115
 32255  0047F2  0A03               	xorlw	3	; case 2
 32256  0047F4  B4D8               	btfsc	status,2,c
 32257  0047F6  D7CC               	goto	l2116
 32258  0047F8  0A01               	xorlw	1	; case 3
 32259  0047FA  B4D8               	btfsc	status,2,c
 32260  0047FC  D7DD               	goto	l2119
 32261  0047FE  0A07               	xorlw	7	; case 4
 32262  004800  B4D8               	btfsc	status,2,c
 32263  004802  D7E1               	goto	l2120
 32264  004804                     l2114:
 32265                           
 32266                           ;led.c: 283: return LedOutSts;
 32267                           
 32268                           ; BSR set to: 0
 32269  004804  0100               	movlb	0	; () banked
 32270  004806  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 32271  004808  0012               	return	
 32272  00480A                     __end_of_LedStateMachine:
 32273                           	opt stack 0
 32274                           tosu	equ	0xFFF
 32275                           tosh	equ	0xFFE
 32276                           tosl	equ	0xFFD
 32277                           pclath	equ	0xFFA
 32278                           tblptru	equ	0xFF8
 32279                           tblptrh	equ	0xFF7
 32280                           tblptrl	equ	0xFF6
 32281                           tablat	equ	0xFF5
 32282                           prodh	equ	0xFF4
 32283                           prodl	equ	0xFF3
 32284                           intcon	equ	0xFF2
 32285                           intcon2	equ	0xFF1
 32286                           intcon3	equ	0xFF0
 32287                           indf0	equ	0xFEF
 32288                           postinc0	equ	0xFEE
 32289                           plusw0	equ	0xFEB
 32290                           fsr0h	equ	0xFEA
 32291                           fsr0l	equ	0xFE9
 32292                           wreg	equ	0xFE8
 32293                           indf1	equ	0xFE7
 32294                           postinc1	equ	0xFE6
 32295                           postdec1	equ	0xFE5
 32296                           plusw1	equ	0xFE3
 32297                           fsr1h	equ	0xFE2
 32298                           fsr1l	equ	0xFE1
 32299                           indf2	equ	0xFDF
 32300                           postinc2	equ	0xFDE
 32301                           postdec2	equ	0xFDD
 32302                           plusw2	equ	0xFDB
 32303                           fsr2h	equ	0xFDA
 32304                           fsr2l	equ	0xFD9
 32305                           status	equ	0xFD8
 32306                           
 32307 ;; *************** function _LedPulseStateMachine *****************
 32308 ;; Defined at:
 32309 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32310 ;; Parameters:    Size  Location     Type
 32311 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 32312 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 32313 ;;  Led             1   44[BANK0 ] unsigned char 
 32314 ;; Auto vars:     Size  Location     Type
 32315 ;;		None
 32316 ;; Return value:  Size  Location     Type
 32317 ;;                  1    wreg      unsigned char 
 32318 ;; Registers used:
 32319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32320 ;; Tracked objects:
 32321 ;;		On entry : 0/0
 32322 ;;		On exit  : 0/0
 32323 ;;		Unchanged: 0/0
 32324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32325 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32327 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32328 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32329 ;;Total ram usage:        5 bytes
 32330 ;; Hardware stack levels used:    1
 32331 ;; Hardware stack levels required when called:   12
 32332 ;; This function calls:
 32333 ;;		_Led_SetLedStatus
 32334 ;;		___lwdiv
 32335 ;; This function is called by:
 32336 ;;		_LedStateMachine
 32337 ;; This function uses a non-reentrant model
 32338 ;;
 32339                           
 32340                           	psect	text148
 32341  003492                     __ptext148:
 32342                           	opt stack 0
 32343  003492                     _LedPulseStateMachine:
 32344                           	opt stack 14
 32345                           
 32346                           ;led.c: 185: switch (LedPulse->LedPulseState)
 32347                           
 32348                           ; BSR set to: 0
 32349                           ;incstack = 0
 32350  003492  D05C               	goto	l2102
 32351  003494                     
 32352                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 32353  003494  0100               	movlb	0	; () banked
 32354  003496  EE20 F001          	lfsr	2,1
 32355  00349A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32356  00349C  26D9               	addwf	fsr2l,f,c
 32357  00349E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32358  0034A0  22DA               	addwfc	fsr2h,f,c
 32359  0034A2  0E01               	movlw	1
 32360  0034A4  6EDF               	movwf	indf2,c
 32361                           
 32362                           ; BSR set to: 0
 32363                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 32364  0034A6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32365  0034AA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32366  0034AE  0E01               	movlw	1
 32367  0034B0  D036               	goto	L55
 32368  0034B2                     
 32369                           ;led.c: 196: LedPulse->LedPulseCounter++;
 32370                           
 32371                           ; BSR set to: 0
 32372  0034B2  0100               	movlb	0	; () banked
 32373  0034B4  EE20 F002          	lfsr	2,2
 32374  0034B8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32375  0034BA  26D9               	addwf	fsr2l,f,c
 32376  0034BC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32377  0034BE  22DA               	addwfc	fsr2h,f,c
 32378  0034C0  2ADE               	incf	postinc2,f,c
 32379  0034C2  0E00               	movlw	0
 32380  0034C4  22DD               	addwfc	postdec2,f,c
 32381                           
 32382                           ; BSR set to: 0
 32383                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 32384  0034C6  EE20 F004          	lfsr	2,4
 32385  0034CA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32386  0034CC  26D9               	addwf	fsr2l,f,c
 32387  0034CE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32388  0034D0  22DA               	addwfc	fsr2h,f,c
 32389  0034D2  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32390  0034D6  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32391  0034DA  0E00               	movlw	0
 32392  0034DC  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32393  0034DE  0E32               	movlw	50
 32394  0034E0  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32395  0034E2  EC18  F02D         	call	___lwdiv	;wreg free
 32396  0034E6  0100               	movlb	0	; () banked
 32397  0034E8  EE20 F002          	lfsr	2,2
 32398  0034EC  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32399  0034EE  26D9               	addwf	fsr2l,f,c
 32400  0034F0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32401  0034F2  22DA               	addwfc	fsr2h,f,c
 32402  0034F4  5183               	movf	?___lwdiv& (0+255),w,b
 32403  0034F6  5CDE               	subwf	postinc2,w,c
 32404  0034F8  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32405  0034FA  58DE               	subwfb	postinc2,w,c
 32406  0034FC  A0D8               	btfss	status,0,c
 32407  0034FE  D034               	goto	l2104
 32408                           
 32409                           ; BSR set to: 0
 32410                           ;led.c: 199: {
 32411                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 32412  003500  EE20 F002          	lfsr	2,2
 32413  003504  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32414  003506  26D9               	addwf	fsr2l,f,c
 32415  003508  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32416  00350A  22DA               	addwfc	fsr2h,f,c
 32417  00350C  0E00               	movlw	0
 32418  00350E  6EDE               	movwf	postinc2,c
 32419  003510  0E00               	movlw	0
 32420  003512  6EDD               	movwf	postdec2,c
 32421                           
 32422                           ; BSR set to: 0
 32423                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 32424  003514  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32425  003518  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32426  00351C  0E02               	movlw	2
 32427  00351E                     L55:
 32428  00351E  6EDF               	movwf	indf2,c
 32429                           
 32430                           ; BSR set to: 0
 32431                           ;led.c: 204: }
 32432                           ;led.c: 205: break;
 32433  003520  D023               	goto	l2104
 32434  003522                     
 32435                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 32436                           
 32437                           ; BSR set to: 0
 32438  003522  0100               	movlb	0	; () banked
 32439  003524  EE20 F001          	lfsr	2,1
 32440  003528  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32441  00352A  26D9               	addwf	fsr2l,f,c
 32442  00352C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32443  00352E  22DA               	addwfc	fsr2h,f,c
 32444  003530  0E00               	movlw	0
 32445  003532  6EDF               	movwf	indf2,c
 32446                           
 32447                           ; BSR set to: 0
 32448                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 32449  003534  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32450  003538  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32451  00353C  0E00               	movlw	0
 32452  00353E  6EDF               	movwf	indf2,c
 32453                           
 32454                           ; BSR set to: 0
 32455                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 32456  003540  0E00               	movlw	0
 32457  003542  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32458  003544  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 32459  003546  ECC1  F031         	call	_Led_SetLedStatus
 32460                           
 32461                           ;led.c: 218: }
 32462                           
 32463                           ;led.c: 217: break;
 32464                           
 32465                           ;led.c: 216: default:
 32466                           
 32467                           ;led.c: 214: break;
 32468  00354A  D00E               	goto	l2104
 32469  00354C                     l2102:
 32470  00354C  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32471  003550  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32472  003554  50DF               	movf	indf2,w,c
 32473                           
 32474                           ; Switch size 1, requested type "space"
 32475                           ; Number of cases is 3, Range of values is 0 to 2
 32476                           ; switch strategies available:
 32477                           ; Name         Instructions Cycles
 32478                           ; simple_byte           10     6 (average)
 32479                           ;	Chosen strategy is simple_byte
 32480  003556  0A00               	xorlw	0	; case 0
 32481  003558  B4D8               	btfsc	status,2,c
 32482  00355A  D79C               	goto	l2103
 32483  00355C  0A01               	xorlw	1	; case 1
 32484  00355E  B4D8               	btfsc	status,2,c
 32485  003560  D7A8               	goto	l2105
 32486  003562  0A03               	xorlw	3	; case 2
 32487  003564  B4D8               	btfsc	status,2,c
 32488  003566  D7DD               	goto	l2107
 32489  003568                     l2104:
 32490                           
 32491                           ;led.c: 221: return (LedPulse->LedOutState);
 32492  003568  0100               	movlb	0	; () banked
 32493  00356A  EE20 F001          	lfsr	2,1
 32494  00356E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32495  003570  26D9               	addwf	fsr2l,f,c
 32496  003572  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32497  003574  22DA               	addwfc	fsr2h,f,c
 32498  003576  50DF               	movf	indf2,w,c
 32499  003578  0012               	return	
 32500  00357A                     __end_of_LedPulseStateMachine:
 32501                           	opt stack 0
 32502                           tosu	equ	0xFFF
 32503                           tosh	equ	0xFFE
 32504                           tosl	equ	0xFFD
 32505                           pclath	equ	0xFFA
 32506                           tblptru	equ	0xFF8
 32507                           tblptrh	equ	0xFF7
 32508                           tblptrl	equ	0xFF6
 32509                           tablat	equ	0xFF5
 32510                           prodh	equ	0xFF4
 32511                           prodl	equ	0xFF3
 32512                           intcon	equ	0xFF2
 32513                           intcon2	equ	0xFF1
 32514                           intcon3	equ	0xFF0
 32515                           indf0	equ	0xFEF
 32516                           postinc0	equ	0xFEE
 32517                           plusw0	equ	0xFEB
 32518                           fsr0h	equ	0xFEA
 32519                           fsr0l	equ	0xFE9
 32520                           wreg	equ	0xFE8
 32521                           indf1	equ	0xFE7
 32522                           postinc1	equ	0xFE6
 32523                           postdec1	equ	0xFE5
 32524                           plusw1	equ	0xFE3
 32525                           fsr1h	equ	0xFE2
 32526                           fsr1l	equ	0xFE1
 32527                           indf2	equ	0xFDF
 32528                           postinc2	equ	0xFDE
 32529                           postdec2	equ	0xFDD
 32530                           plusw2	equ	0xFDB
 32531                           fsr2h	equ	0xFDA
 32532                           fsr2l	equ	0xFD9
 32533                           status	equ	0xFD8
 32534                           
 32535 ;; *************** function _Led_SetLedStatus *****************
 32536 ;; Defined at:
 32537 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32538 ;; Parameters:    Size  Location     Type
 32539 ;;  Led             1    wreg     unsigned char 
 32540 ;;  LedSts          1   29[BANK0 ] enum E8952
 32541 ;; Auto vars:     Size  Location     Type
 32542 ;;  Led             1   30[BANK0 ] unsigned char 
 32543 ;; Return value:  Size  Location     Type
 32544 ;;                  1    wreg      void 
 32545 ;; Registers used:
 32546 ;;		wreg, status,2, status,0
 32547 ;; Tracked objects:
 32548 ;;		On entry : 0/0
 32549 ;;		On exit  : 0/0
 32550 ;;		Unchanged: 0/0
 32551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32552 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32556 ;;Total ram usage:        2 bytes
 32557 ;; Hardware stack levels used:    1
 32558 ;; Hardware stack levels required when called:   11
 32559 ;; This function calls:
 32560 ;;		Nothing
 32561 ;; This function is called by:
 32562 ;;		_LedPulseStateMachine
 32563 ;;		_LedStateMachine
 32564 ;;		_MyApp_Task
 32565 ;;		_waitSetupCall
 32566 ;;		_blinkForSeconds
 32567 ;; This function uses a non-reentrant model
 32568 ;;
 32569                           
 32570                           	psect	text149
 32571  006382                     __ptext149:
 32572                           	opt stack 0
 32573  006382                     _Led_SetLedStatus:
 32574                           	opt stack 15
 32575                           
 32576                           ; BSR set to: 0
 32577                           ;incstack = 0
 32578                           ;Led_SetLedStatus@Led stored from wreg
 32579  006382  0100               	movlb	0	; () banked
 32580  006384  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 32581                           
 32582                           ;led.c: 341: switch (Led)
 32583  006386  D009               	goto	l2133
 32584  006388                     l2134:
 32585                           
 32586                           ; BSR set to: 0
 32587                           ;led.c: 344: Led1Sts = LedSts;
 32588  006388  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 32589                           
 32590                           ;led.c: 345: break;
 32591  00638C  0012               	return	
 32592  00638E                     l2136:
 32593                           
 32594                           ; BSR set to: 0
 32595                           ;led.c: 348: Led2Sts = LedSts;
 32596  00638E  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 32597                           
 32598                           ;led.c: 349: break;
 32599  006392  0012               	return	
 32600  006394                     l2137:
 32601                           
 32602                           ; BSR set to: 0
 32603                           ;led.c: 352: Led3Sts = LedSts;
 32604  006394  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 32605                           
 32606                           ; BSR set to: 0
 32607                           ;led.c: 357: }
 32608                           
 32609                           ; BSR set to: 0
 32610                           ;led.c: 356: break;
 32611                           
 32612                           ;led.c: 355: default:
 32613                           
 32614                           ;led.c: 353: break;
 32615  006398  0012               	return	
 32616  00639A                     l2133:
 32617                           
 32618                           ; BSR set to: 0
 32619  00639A  0100               	movlb	0	; () banked
 32620  00639C  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 32621                           
 32622                           ; Switch size 1, requested type "space"
 32623                           ; Number of cases is 3, Range of values is 1 to 3
 32624                           ; switch strategies available:
 32625                           ; Name         Instructions Cycles
 32626                           ; simple_byte           10     6 (average)
 32627                           ;	Chosen strategy is simple_byte
 32628  00639E  0A01               	xorlw	1	; case 1
 32629  0063A0  B4D8               	btfsc	status,2,c
 32630  0063A2  D7F2               	goto	l2134
 32631  0063A4  0A03               	xorlw	3	; case 2
 32632  0063A6  B4D8               	btfsc	status,2,c
 32633  0063A8  D7F2               	goto	l2136
 32634  0063AA  0A01               	xorlw	1	; case 3
 32635  0063AC  A4D8               	btfss	status,2,c
 32636  0063AE  0012               	return	
 32637  0063B0  D7F1               	goto	l2137
 32638  0063B2                     __end_of_Led_SetLedStatus:
 32639                           	opt stack 0
 32640                           tosu	equ	0xFFF
 32641                           tosh	equ	0xFFE
 32642                           tosl	equ	0xFFD
 32643                           pclath	equ	0xFFA
 32644                           tblptru	equ	0xFF8
 32645                           tblptrh	equ	0xFF7
 32646                           tblptrl	equ	0xFF6
 32647                           tablat	equ	0xFF5
 32648                           prodh	equ	0xFF4
 32649                           prodl	equ	0xFF3
 32650                           intcon	equ	0xFF2
 32651                           intcon2	equ	0xFF1
 32652                           intcon3	equ	0xFF0
 32653                           indf0	equ	0xFEF
 32654                           postinc0	equ	0xFEE
 32655                           plusw0	equ	0xFEB
 32656                           fsr0h	equ	0xFEA
 32657                           fsr0l	equ	0xFE9
 32658                           wreg	equ	0xFE8
 32659                           indf1	equ	0xFE7
 32660                           postinc1	equ	0xFE6
 32661                           postdec1	equ	0xFE5
 32662                           plusw1	equ	0xFE3
 32663                           fsr1h	equ	0xFE2
 32664                           fsr1l	equ	0xFE1
 32665                           indf2	equ	0xFDF
 32666                           postinc2	equ	0xFDE
 32667                           postdec2	equ	0xFDD
 32668                           plusw2	equ	0xFDB
 32669                           fsr2h	equ	0xFDA
 32670                           fsr2l	equ	0xFD9
 32671                           status	equ	0xFD8
 32672                           
 32673 ;; *************** function _LedBlinkStateMachine *****************
 32674 ;; Defined at:
 32675 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32676 ;; Parameters:    Size  Location     Type
 32677 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 32678 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32679 ;; Auto vars:     Size  Location     Type
 32680 ;;		None
 32681 ;; Return value:  Size  Location     Type
 32682 ;;                  1    wreg      unsigned char 
 32683 ;; Registers used:
 32684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32685 ;; Tracked objects:
 32686 ;;		On entry : 0/0
 32687 ;;		On exit  : 0/0
 32688 ;;		Unchanged: 0/0
 32689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32692 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32693 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32694 ;;Total ram usage:        4 bytes
 32695 ;; Hardware stack levels used:    1
 32696 ;; Hardware stack levels required when called:   12
 32697 ;; This function calls:
 32698 ;;		___lwdiv
 32699 ;; This function is called by:
 32700 ;;		_LedStateMachine
 32701 ;; This function uses a non-reentrant model
 32702 ;;
 32703                           
 32704                           	psect	text150
 32705  002A3A                     __ptext150:
 32706                           	opt stack 0
 32707  002A3A                     _LedBlinkStateMachine:
 32708                           	opt stack 14
 32709                           
 32710                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 32711                           
 32712                           ; BSR set to: 0
 32713                           ;incstack = 0
 32714  002A3A  D08F               	goto	l2089
 32715  002A3C                     
 32716                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 32717  002A3C  0100               	movlb	0	; () banked
 32718  002A3E  EE20 F008          	lfsr	2,8
 32719  002A42  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32720  002A44  26D9               	addwf	fsr2l,f,c
 32721  002A46  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32722  002A48  22DA               	addwfc	fsr2h,f,c
 32723  002A4A  EE10 F001          	lfsr	1,1
 32724  002A4E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32725  002A50  26E1               	addwf	fsr1l,f,c
 32726  002A52  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32727  002A54  22E2               	addwfc	fsr1h,f,c
 32728  002A56  CFDF FFE7          	movff	indf2,indf1
 32729                           
 32730                           ; BSR set to: 0
 32731                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 32732  002A5A  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32733  002A5E  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32734  002A62  D040               	goto	L56
 32735  002A64                     
 32736                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 32737                           
 32738                           ; BSR set to: 0
 32739  002A64  0100               	movlb	0	; () banked
 32740  002A66  EE20 F002          	lfsr	2,2
 32741  002A6A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32742  002A6C  26D9               	addwf	fsr2l,f,c
 32743  002A6E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32744  002A70  22DA               	addwfc	fsr2h,f,c
 32745  002A72  2ADE               	incf	postinc2,f,c
 32746  002A74  0E00               	movlw	0
 32747  002A76  22DD               	addwfc	postdec2,f,c
 32748                           
 32749                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 32750  002A78  EE20 F001          	lfsr	2,1
 32751  002A7C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32752  002A7E  26D9               	addwf	fsr2l,f,c
 32753  002A80  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32754  002A82  22DA               	addwfc	fsr2h,f,c
 32755  002A84  50DF               	movf	indf2,w,c
 32756  002A86  A4D8               	btfss	status,2,c
 32757  002A88  D02F               	goto	l2093
 32758                           
 32759                           ; BSR set to: 0
 32760                           ;led.c: 142: {
 32761                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 32762  002A8A  EE20 F006          	lfsr	2,6
 32763  002A8E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32764  002A90  26D9               	addwf	fsr2l,f,c
 32765  002A92  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32766  002A94  22DA               	addwfc	fsr2h,f,c
 32767  002A96  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32768  002A9A  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32769  002A9E  0E00               	movlw	0
 32770  002AA0  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32771  002AA2  0E32               	movlw	50
 32772  002AA4  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32773  002AA6  EC18  F02D         	call	___lwdiv	;wreg free
 32774  002AAA  0100               	movlb	0	; () banked
 32775  002AAC  EE20 F002          	lfsr	2,2
 32776  002AB0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32777  002AB2  26D9               	addwf	fsr2l,f,c
 32778  002AB4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32779  002AB6  22DA               	addwfc	fsr2h,f,c
 32780  002AB8  5183               	movf	?___lwdiv& (0+255),w,b
 32781  002ABA  5CDE               	subwf	postinc2,w,c
 32782  002ABC  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32783  002ABE  58DE               	subwfb	postinc2,w,c
 32784  002AC0  A0D8               	btfss	status,0,c
 32785  002AC2  D056               	goto	l2091
 32786                           
 32787                           ; BSR set to: 0
 32788                           ;led.c: 145: {
 32789                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 32790  002AC4  EE20 F002          	lfsr	2,2
 32791  002AC8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32792  002ACA  26D9               	addwf	fsr2l,f,c
 32793  002ACC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32794  002ACE  22DA               	addwfc	fsr2h,f,c
 32795  002AD0  0E00               	movlw	0
 32796  002AD2  6EDE               	movwf	postinc2,c
 32797  002AD4  0E00               	movlw	0
 32798  002AD6  6EDD               	movwf	postdec2,c
 32799                           
 32800                           ;led.c: 149: LedBlink->LedOutState = OnState;
 32801  002AD8  EE20 F001          	lfsr	2,1
 32802  002ADC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32803  002ADE  26D9               	addwf	fsr2l,f,c
 32804  002AE0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32805  002AE2  22DA               	addwfc	fsr2h,f,c
 32806  002AE4                     L56:
 32807  002AE4  0E01               	movlw	1
 32808  002AE6  D037               	goto	L57
 32809  002AE8                     l2093:
 32810                           
 32811                           ; BSR set to: 0
 32812                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 32813                           
 32814                           ; BSR set to: 0
 32815  002AE8  EE20 F001          	lfsr	2,1
 32816  002AEC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32817  002AEE  26D9               	addwf	fsr2l,f,c
 32818  002AF0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32819  002AF2  22DA               	addwfc	fsr2h,f,c
 32820  002AF4  04DE               	decf	postinc2,w,c
 32821  002AF6  A4D8               	btfss	status,2,c
 32822  002AF8  D03B               	goto	l2091
 32823                           
 32824                           ; BSR set to: 0
 32825                           ;led.c: 153: {
 32826                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 32827  002AFA  EE20 F004          	lfsr	2,4
 32828  002AFE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32829  002B00  26D9               	addwf	fsr2l,f,c
 32830  002B02  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32831  002B04  22DA               	addwfc	fsr2h,f,c
 32832  002B06  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32833  002B0A  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32834  002B0E  0E00               	movlw	0
 32835  002B10  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32836  002B12  0E32               	movlw	50
 32837  002B14  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32838  002B16  EC18  F02D         	call	___lwdiv	;wreg free
 32839  002B1A  0100               	movlb	0	; () banked
 32840  002B1C  EE20 F002          	lfsr	2,2
 32841  002B20  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32842  002B22  26D9               	addwf	fsr2l,f,c
 32843  002B24  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32844  002B26  22DA               	addwfc	fsr2h,f,c
 32845  002B28  5183               	movf	?___lwdiv& (0+255),w,b
 32846  002B2A  5CDE               	subwf	postinc2,w,c
 32847  002B2C  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32848  002B2E  58DE               	subwfb	postinc2,w,c
 32849  002B30  A0D8               	btfss	status,0,c
 32850  002B32  D01E               	goto	l2091
 32851                           
 32852                           ; BSR set to: 0
 32853                           ;led.c: 156: {
 32854                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 32855  002B34  EE20 F002          	lfsr	2,2
 32856  002B38  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32857  002B3A  26D9               	addwf	fsr2l,f,c
 32858  002B3C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32859  002B3E  22DA               	addwfc	fsr2h,f,c
 32860  002B40  0E00               	movlw	0
 32861  002B42  6EDE               	movwf	postinc2,c
 32862  002B44  0E00               	movlw	0
 32863  002B46  6EDD               	movwf	postdec2,c
 32864                           
 32865                           ;led.c: 160: LedBlink->LedOutState = OffState;
 32866  002B48  EE20 F001          	lfsr	2,1
 32867  002B4C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32868  002B4E  26D9               	addwf	fsr2l,f,c
 32869  002B50  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32870  002B52  22DA               	addwfc	fsr2h,f,c
 32871  002B54  0E00               	movlw	0
 32872  002B56                     L57:
 32873  002B56  6EDF               	movwf	indf2,c
 32874                           
 32875                           ; BSR set to: 0
 32876                           ;led.c: 167: }
 32877                           
 32878                           ; BSR set to: 0
 32879                           ;led.c: 166: break;
 32880                           
 32881                           ;led.c: 165: default:
 32882                           
 32883                           ; BSR set to: 0
 32884                           ;led.c: 161: }
 32885                           ;led.c: 162: }
 32886                           ;led.c: 163: break;
 32887                           
 32888                           ; BSR set to: 0
 32889                           
 32890                           ; BSR set to: 0
 32891  002B58  D00B               	goto	l2091
 32892  002B5A                     l2089:
 32893                           
 32894                           ; BSR set to: 0
 32895  002B5A  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32896  002B5E  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32897  002B62  50DF               	movf	indf2,w,c
 32898                           
 32899                           ; Switch size 1, requested type "space"
 32900                           ; Number of cases is 2, Range of values is 0 to 1
 32901                           ; switch strategies available:
 32902                           ; Name         Instructions Cycles
 32903                           ; simple_byte            7     4 (average)
 32904                           ;	Chosen strategy is simple_byte
 32905  002B64  0A00               	xorlw	0	; case 0
 32906  002B66  B4D8               	btfsc	status,2,c
 32907  002B68  D769               	goto	l2090
 32908  002B6A  0A01               	xorlw	1	; case 1
 32909  002B6C  B4D8               	btfsc	status,2,c
 32910  002B6E  D77A               	goto	l2092
 32911  002B70                     l2091:
 32912                           
 32913                           ;led.c: 170: return (LedBlink->LedOutState);
 32914  002B70  0100               	movlb	0	; () banked
 32915  002B72  EE20 F001          	lfsr	2,1
 32916  002B76  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32917  002B78  26D9               	addwf	fsr2l,f,c
 32918  002B7A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32919  002B7C  22DA               	addwfc	fsr2h,f,c
 32920  002B7E  50DF               	movf	indf2,w,c
 32921  002B80  0012               	return	
 32922  002B82                     __end_of_LedBlinkStateMachine:
 32923                           	opt stack 0
 32924                           tosu	equ	0xFFF
 32925                           tosh	equ	0xFFE
 32926                           tosl	equ	0xFFD
 32927                           pclath	equ	0xFFA
 32928                           tblptru	equ	0xFF8
 32929                           tblptrh	equ	0xFF7
 32930                           tblptrl	equ	0xFF6
 32931                           tablat	equ	0xFF5
 32932                           prodh	equ	0xFF4
 32933                           prodl	equ	0xFF3
 32934                           intcon	equ	0xFF2
 32935                           intcon2	equ	0xFF1
 32936                           intcon3	equ	0xFF0
 32937                           indf0	equ	0xFEF
 32938                           postinc0	equ	0xFEE
 32939                           plusw0	equ	0xFEB
 32940                           fsr0h	equ	0xFEA
 32941                           fsr0l	equ	0xFE9
 32942                           wreg	equ	0xFE8
 32943                           indf1	equ	0xFE7
 32944                           postinc1	equ	0xFE6
 32945                           postdec1	equ	0xFE5
 32946                           plusw1	equ	0xFE3
 32947                           fsr1h	equ	0xFE2
 32948                           fsr1l	equ	0xFE1
 32949                           indf2	equ	0xFDF
 32950                           postinc2	equ	0xFDE
 32951                           postdec2	equ	0xFDD
 32952                           plusw2	equ	0xFDB
 32953                           fsr2h	equ	0xFDA
 32954                           fsr2l	equ	0xFD9
 32955                           status	equ	0xFD8
 32956                           
 32957 ;; *************** function ___lwdiv *****************
 32958 ;; Defined at:
 32959 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 32960 ;; Parameters:    Size  Location     Type
 32961 ;;  dividend        2   35[BANK0 ] unsigned int 
 32962 ;;  divisor         2   37[BANK0 ] unsigned int 
 32963 ;; Auto vars:     Size  Location     Type
 32964 ;;  quotient        2   40[BANK0 ] unsigned int 
 32965 ;;  counter         1   39[BANK0 ] unsigned char 
 32966 ;; Return value:  Size  Location     Type
 32967 ;;                  2   35[BANK0 ] unsigned int 
 32968 ;; Registers used:
 32969 ;;		wreg, status,2, status,0
 32970 ;; Tracked objects:
 32971 ;;		On entry : 0/0
 32972 ;;		On exit  : 0/0
 32973 ;;		Unchanged: 0/0
 32974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32976 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32978 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32979 ;;Total ram usage:        7 bytes
 32980 ;; Hardware stack levels used:    1
 32981 ;; Hardware stack levels required when called:   11
 32982 ;; This function calls:
 32983 ;;		Nothing
 32984 ;; This function is called by:
 32985 ;;		_LedBlinkStateMachine
 32986 ;;		_LedPulseStateMachine
 32987 ;;		_secondsAppTimer
 32988 ;;		_utoa
 32989 ;; This function uses a non-reentrant model
 32990 ;;
 32991                           
 32992                           	psect	text151
 32993  005A30                     __ptext151:
 32994                           	opt stack 0
 32995  005A30                     ___lwdiv:
 32996                           	opt stack 14
 32997                           
 32998                           ; BSR set to: 0
 32999                           ;incstack = 0
 33000  005A30  0E00               	movlw	0
 33001  005A32  0100               	movlb	0	; () banked
 33002  005A34  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 33003  005A36  0E00               	movlw	0
 33004  005A38  6F88               	movwf	___lwdiv@quotient& (0+255),b
 33005                           
 33006                           ; BSR set to: 0
 33007  005A3A  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33008  005A3C  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 33009  005A3E  B4D8               	btfsc	status,2,c
 33010  005A40  D01C               	goto	l3289
 33011                           
 33012                           ; BSR set to: 0
 33013  005A42  0E01               	movlw	1
 33014  005A44  6F87               	movwf	___lwdiv@counter& (0+255),b
 33015  005A46  D004               	goto	l3284
 33016  005A48                     
 33017                           ; BSR set to: 0
 33018                           
 33019                           ; BSR set to: 0
 33020  005A48  90D8               	bcf	status,0,c
 33021  005A4A  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 33022  005A4C  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 33023  005A4E  2B87               	incf	___lwdiv@counter& (0+255),f,b
 33024  005A50                     l3284:
 33025                           
 33026                           ; BSR set to: 0
 33027                           
 33028                           ; BSR set to: 0
 33029  005A50  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 33030  005A52  D7FA               	goto	l3285
 33031  005A54                     u12040:
 33032                           
 33033                           ; BSR set to: 0
 33034                           
 33035                           ; BSR set to: 0
 33036                           
 33037                           ; BSR set to: 0
 33038  005A54  90D8               	bcf	status,0,c
 33039  005A56  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 33040  005A58  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 33041                           
 33042                           ; BSR set to: 0
 33043  005A5A  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33044  005A5C  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 33045  005A5E  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 33046  005A60  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 33047  005A62  A0D8               	btfss	status,0,c
 33048  005A64  D005               	goto	l3288
 33049                           
 33050                           ; BSR set to: 0
 33051  005A66  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33052  005A68  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 33053  005A6A  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 33054  005A6C  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 33055                           
 33056                           ; BSR set to: 0
 33057  005A6E  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 33058  005A70                     l3288:
 33059                           
 33060                           ; BSR set to: 0
 33061                           
 33062                           ; BSR set to: 0
 33063  005A70  90D8               	bcf	status,0,c
 33064  005A72  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 33065  005A74  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 33066                           
 33067                           ; BSR set to: 0
 33068  005A76  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 33069  005A78  D7ED               	goto	u12040
 33070  005A7A                     l3289:
 33071                           
 33072                           ; BSR set to: 0
 33073                           
 33074                           ; BSR set to: 0
 33075  005A7A  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 33076  005A7E  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 33077                           
 33078                           ; BSR set to: 0
 33079  005A82  0012               	return		;funcret
 33080  005A84                     __end_of___lwdiv:
 33081                           	opt stack 0
 33082                           tosu	equ	0xFFF
 33083                           tosh	equ	0xFFE
 33084                           tosl	equ	0xFFD
 33085                           pclath	equ	0xFFA
 33086                           tblptru	equ	0xFF8
 33087                           tblptrh	equ	0xFF7
 33088                           tblptrl	equ	0xFF6
 33089                           tablat	equ	0xFF5
 33090                           prodh	equ	0xFF4
 33091                           prodl	equ	0xFF3
 33092                           intcon	equ	0xFF2
 33093                           intcon2	equ	0xFF1
 33094                           intcon3	equ	0xFF0
 33095                           indf0	equ	0xFEF
 33096                           postinc0	equ	0xFEE
 33097                           plusw0	equ	0xFEB
 33098                           fsr0h	equ	0xFEA
 33099                           fsr0l	equ	0xFE9
 33100                           wreg	equ	0xFE8
 33101                           indf1	equ	0xFE7
 33102                           postinc1	equ	0xFE6
 33103                           postdec1	equ	0xFE5
 33104                           plusw1	equ	0xFE3
 33105                           fsr1h	equ	0xFE2
 33106                           fsr1l	equ	0xFE1
 33107                           indf2	equ	0xFDF
 33108                           postinc2	equ	0xFDE
 33109                           postdec2	equ	0xFDD
 33110                           plusw2	equ	0xFDB
 33111                           fsr2h	equ	0xFDA
 33112                           fsr2l	equ	0xFD9
 33113                           status	equ	0xFD8
 33114                           
 33115 ;; *************** function _OsAlrm_SetOsAlarm *****************
 33116 ;; Defined at:
 33117 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33118 ;; Parameters:    Size  Location     Type
 33119 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 33120 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 33121 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 33122 ;;		 -> I2cDummyTx(1), 
 33123 ;; Auto vars:     Size  Location     Type
 33124 ;;		None
 33125 ;; Return value:  Size  Location     Type
 33126 ;;                  1    wreg      void 
 33127 ;; Registers used:
 33128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33129 ;; Tracked objects:
 33130 ;;		On entry : 0/0
 33131 ;;		On exit  : 0/0
 33132 ;;		Unchanged: 0/0
 33133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33134 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33137 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33138 ;;Total ram usage:        8 bytes
 33139 ;; Hardware stack levels used:    1
 33140 ;; Hardware stack levels required when called:   12
 33141 ;; This function calls:
 33142 ;;		___wmul
 33143 ;; This function is called by:
 33144 ;;		_I2cSlv_MainTask
 33145 ;; This function uses a non-reentrant model
 33146 ;;
 33147                           
 33148                           	psect	text152
 33149  004048                     __ptext152:
 33150                           	opt stack 0
 33151  004048                     _OsAlrm_SetOsAlarm:
 33152                           	opt stack 15
 33153                           
 33154                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 33155                           
 33156                           ; BSR set to: 0
 33157                           ;incstack = 0
 33158  004048  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33159  00404C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33160  004050  0E00               	movlw	0
 33161  004052  0100               	movlb	0	; () banked
 33162  004054  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33163  004056  0E0B               	movlw	11
 33164  004058  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33165  00405A  EC47  F032         	call	___wmul	;wreg free
 33166  00405E  0E00               	movlw	low _OsAlarms
 33167  004060  0100               	movlb	0	; () banked
 33168  004062  257D               	addwf	?___wmul& (0+255),w,b
 33169  004064  6ED9               	movwf	fsr2l,c
 33170  004066  0E06               	movlw	high _OsAlarms
 33171  004068  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33172  00406A  6EDA               	movwf	fsr2h,c
 33173  00406C  0E01               	movlw	1
 33174  00406E  6EDF               	movwf	indf2,c
 33175                           
 33176                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 33177  004070  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33178  004074  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33179  004078  0E00               	movlw	0
 33180  00407A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33181  00407C  0E0B               	movlw	11
 33182  00407E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33183  004080  EC47  F032         	call	___wmul	;wreg free
 33184  004084  0E01               	movlw	1
 33185  004086  0100               	movlb	0	; () banked
 33186  004088  277D               	addwf	?___wmul& (0+255),f,b
 33187  00408A  0E00               	movlw	0
 33188  00408C  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33189  00408E  0E00               	movlw	low _OsAlarms
 33190  004090  257D               	addwf	?___wmul& (0+255),w,b
 33191  004092  6ED9               	movwf	fsr2l,c
 33192  004094  0E06               	movlw	high _OsAlarms
 33193  004096  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33194  004098  6EDA               	movwf	fsr2h,c
 33195  00409A  6ADE               	clrf	postinc2,c
 33196  00409C  6ADE               	clrf	postinc2,c
 33197  00409E  6ADE               	clrf	postinc2,c
 33198  0040A0  6ADD               	clrf	postdec2,c
 33199                           
 33200                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 33201  0040A2  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33202  0040A6  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33203  0040AA  0E00               	movlw	0
 33204  0040AC  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33205  0040AE  0E0B               	movlw	11
 33206  0040B0  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33207  0040B2  EC47  F032         	call	___wmul	;wreg free
 33208  0040B6  0E05               	movlw	5
 33209  0040B8  0100               	movlb	0	; () banked
 33210  0040BA  277D               	addwf	?___wmul& (0+255),f,b
 33211  0040BC  0E00               	movlw	0
 33212  0040BE  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33213  0040C0  0E00               	movlw	low _OsAlarms
 33214  0040C2  257D               	addwf	?___wmul& (0+255),w,b
 33215  0040C4  6ED9               	movwf	fsr2l,c
 33216  0040C6  0E06               	movlw	high _OsAlarms
 33217  0040C8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33218  0040CA  6EDA               	movwf	fsr2h,c
 33219  0040CC  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 33220  0040D0  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 33221  0040D4  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 33222  0040D8  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 33223                           
 33224                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 33225  0040DC  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33226  0040E0  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33227  0040E4  0E00               	movlw	0
 33228  0040E6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33229  0040E8  0E0B               	movlw	11
 33230  0040EA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33231  0040EC  EC47  F032         	call	___wmul	;wreg free
 33232  0040F0  0E09               	movlw	9
 33233  0040F2  0100               	movlb	0	; () banked
 33234  0040F4  277D               	addwf	?___wmul& (0+255),f,b
 33235  0040F6  0E00               	movlw	0
 33236  0040F8  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33237  0040FA  0E00               	movlw	low _OsAlarms
 33238  0040FC  257D               	addwf	?___wmul& (0+255),w,b
 33239  0040FE  6ED9               	movwf	fsr2l,c
 33240  004100  0E06               	movlw	high _OsAlarms
 33241  004102  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33242  004104  6EDA               	movwf	fsr2h,c
 33243  004106  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 33244  00410A  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 33245                           
 33246                           ; BSR set to: 0
 33247  00410E  0012               	return		;funcret
 33248  004110                     __end_of_OsAlrm_SetOsAlarm:
 33249                           	opt stack 0
 33250                           tosu	equ	0xFFF
 33251                           tosh	equ	0xFFE
 33252                           tosl	equ	0xFFD
 33253                           pclath	equ	0xFFA
 33254                           tblptru	equ	0xFF8
 33255                           tblptrh	equ	0xFF7
 33256                           tblptrl	equ	0xFF6
 33257                           tablat	equ	0xFF5
 33258                           prodh	equ	0xFF4
 33259                           prodl	equ	0xFF3
 33260                           intcon	equ	0xFF2
 33261                           intcon2	equ	0xFF1
 33262                           intcon3	equ	0xFF0
 33263                           indf0	equ	0xFEF
 33264                           postinc0	equ	0xFEE
 33265                           plusw0	equ	0xFEB
 33266                           fsr0h	equ	0xFEA
 33267                           fsr0l	equ	0xFE9
 33268                           wreg	equ	0xFE8
 33269                           indf1	equ	0xFE7
 33270                           postinc1	equ	0xFE6
 33271                           postdec1	equ	0xFE5
 33272                           plusw1	equ	0xFE3
 33273                           fsr1h	equ	0xFE2
 33274                           fsr1l	equ	0xFE1
 33275                           indf2	equ	0xFDF
 33276                           postinc2	equ	0xFDE
 33277                           postdec2	equ	0xFDD
 33278                           plusw2	equ	0xFDB
 33279                           fsr2h	equ	0xFDA
 33280                           fsr2l	equ	0xFD9
 33281                           status	equ	0xFD8
 33282                           
 33283 ;; *************** function ___wmul *****************
 33284 ;; Defined at:
 33285 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33286 ;; Parameters:    Size  Location     Type
 33287 ;;  multiplier      2   29[BANK0 ] unsigned int 
 33288 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 33289 ;; Auto vars:     Size  Location     Type
 33290 ;;  product         2   33[BANK0 ] unsigned int 
 33291 ;; Return value:  Size  Location     Type
 33292 ;;                  2   29[BANK0 ] unsigned int 
 33293 ;; Registers used:
 33294 ;;		wreg, status,2, status,0, prodl, prodh
 33295 ;; Tracked objects:
 33296 ;;		On entry : 0/0
 33297 ;;		On exit  : 0/0
 33298 ;;		Unchanged: 0/0
 33299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33300 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33301 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33303 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33304 ;;Total ram usage:        6 bytes
 33305 ;; Hardware stack levels used:    1
 33306 ;; Hardware stack levels required when called:   11
 33307 ;; This function calls:
 33308 ;;		Nothing
 33309 ;; This function is called by:
 33310 ;;		_OsAlrm_SetOsAlarm
 33311 ;;		_secondsAppTimer
 33312 ;;		_atoi
 33313 ;; This function uses a non-reentrant model
 33314 ;;
 33315                           
 33316                           	psect	text153
 33317  00648E                     __ptext153:
 33318                           	opt stack 0
 33319  00648E                     ___wmul:
 33320                           	opt stack 13
 33321                           
 33322                           ; BSR set to: 0
 33323                           ;incstack = 0
 33324  00648E  0100               	movlb	0	; () banked
 33325  006490  517D               	movf	___wmul@multiplier& (0+255),w,b
 33326  006492  037F               	mulwf	___wmul@multiplicand& (0+255),b
 33327  006494  CFF3 F081          	movff	prodl,___wmul@product
 33328  006498  CFF4 F082          	movff	prodh,___wmul@product+1
 33329  00649C  517D               	movf	___wmul@multiplier& (0+255),w,b
 33330  00649E  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 33331  0064A0  50F3               	movf	prodl,w,c
 33332  0064A2  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 33333  0064A4  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 33334  0064A6  037F               	mulwf	___wmul@multiplicand& (0+255),b
 33335  0064A8  50F3               	movf	prodl,w,c
 33336  0064AA  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 33337                           
 33338                           ; BSR set to: 0
 33339  0064AC  C081  F07D         	movff	___wmul@product,?___wmul
 33340  0064B0  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 33341  0064B4  0012               	return	
 33342  0064B6                     __end_of___wmul:
 33343                           	opt stack 0
 33344                           tosu	equ	0xFFF
 33345                           tosh	equ	0xFFE
 33346                           tosl	equ	0xFFD
 33347                           pclath	equ	0xFFA
 33348                           tblptru	equ	0xFF8
 33349                           tblptrh	equ	0xFF7
 33350                           tblptrl	equ	0xFF6
 33351                           tablat	equ	0xFF5
 33352                           prodh	equ	0xFF4
 33353                           prodl	equ	0xFF3
 33354                           intcon	equ	0xFF2
 33355                           intcon2	equ	0xFF1
 33356                           intcon3	equ	0xFF0
 33357                           indf0	equ	0xFEF
 33358                           postinc0	equ	0xFEE
 33359                           plusw0	equ	0xFEB
 33360                           fsr0h	equ	0xFEA
 33361                           fsr0l	equ	0xFE9
 33362                           wreg	equ	0xFE8
 33363                           indf1	equ	0xFE7
 33364                           postinc1	equ	0xFE6
 33365                           postdec1	equ	0xFE5
 33366                           plusw1	equ	0xFE3
 33367                           fsr1h	equ	0xFE2
 33368                           fsr1l	equ	0xFE1
 33369                           indf2	equ	0xFDF
 33370                           postinc2	equ	0xFDE
 33371                           postdec2	equ	0xFDD
 33372                           plusw2	equ	0xFDB
 33373                           fsr2h	equ	0xFDA
 33374                           fsr2l	equ	0xFD9
 33375                           status	equ	0xFD8
 33376                           
 33377 ;; *************** function _I2c_InitI2cModule *****************
 33378 ;; Defined at:
 33379 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33380 ;; Parameters:    Size  Location     Type
 33381 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 33382 ;;		 -> I2cConfig(10), 
 33383 ;; Auto vars:     Size  Location     Type
 33384 ;;		None
 33385 ;; Return value:  Size  Location     Type
 33386 ;;                  1    wreg      void 
 33387 ;; Registers used:
 33388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33389 ;; Tracked objects:
 33390 ;;		On entry : 0/0
 33391 ;;		On exit  : 0/0
 33392 ;;		Unchanged: 0/0
 33393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33394 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33398 ;;Total ram usage:        4 bytes
 33399 ;; Hardware stack levels used:    1
 33400 ;; Hardware stack levels required when called:   13
 33401 ;; This function calls:
 33402 ;;		_SetBaudRate
 33403 ;; This function is called by:
 33404 ;;		_I2cSlv_MainTask
 33405 ;; This function uses a non-reentrant model
 33406 ;;
 33407                           
 33408                           	psect	text154
 33409  0052B2                     __ptext154:
 33410                           	opt stack 0
 33411  0052B2                     _I2c_InitI2cModule:
 33412                           	opt stack 14
 33413                           
 33414                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 33415                           
 33416                           ; BSR set to: 0
 33417                           ;incstack = 0
 33418  0052B2  8295               	bsf	3989,1,c	;volatile
 33419                           
 33420                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 33421  0052B4  8095               	bsf	3989,0,c	;volatile
 33422                           
 33423                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 33424  0052B6  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 33425  0052BA  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 33426  0052BE  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 33427  0052C2  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 33428  0052C6  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 33429  0052CA  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 33430  0052CE  0100               	movlb	0	; () banked
 33431  0052D0  EE20 F004          	lfsr	2,4
 33432  0052D4  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33433  0052D6  26D9               	addwf	fsr2l,f,c
 33434  0052D8  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33435  0052DA  22DA               	addwfc	fsr2h,f,c
 33436  0052DC  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 33437  0052E0  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 33438  0052E4  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 33439  0052E8  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 33440  0052EC  EC5A  F02E         	call	_SetBaudRate	;wreg free
 33441                           
 33442                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 33443  0052F0  0100               	movlb	0	; () banked
 33444  0052F2  EE20 F008          	lfsr	2,8
 33445  0052F6  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33446  0052F8  26D9               	addwf	fsr2l,f,c
 33447  0052FA  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33448  0052FC  22DA               	addwfc	fsr2h,f,c
 33449  0052FE  50DF               	movf	indf2,w,c
 33450  005300  1272               	iorwf	3954,f,c	;volatile
 33451                           
 33452                           ; BSR set to: 0
 33453                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 33454  005302  EE20 F009          	lfsr	2,9
 33455  005306  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33456  005308  26D9               	addwf	fsr2l,f,c
 33457  00530A  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33458  00530C  22DA               	addwfc	fsr2h,f,c
 33459  00530E  50DF               	movf	indf2,w,c
 33460  005310  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 33461  005312  0E05               	movlw	5
 33462  005314  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 33463  005316                     u14395:
 33464  005316  90D8               	bcf	status,0,c
 33465  005318  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 33466  00531A  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 33467  00531C  D7FC               	goto	u14395
 33468  00531E  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 33469  005320  1272               	iorwf	3954,f,c	;volatile
 33470                           
 33471                           ; BSR set to: 0
 33472  005322  0012               	return		;funcret
 33473  005324                     __end_of_I2c_InitI2cModule:
 33474                           	opt stack 0
 33475                           tosu	equ	0xFFF
 33476                           tosh	equ	0xFFE
 33477                           tosl	equ	0xFFD
 33478                           pclath	equ	0xFFA
 33479                           tblptru	equ	0xFF8
 33480                           tblptrh	equ	0xFF7
 33481                           tblptrl	equ	0xFF6
 33482                           tablat	equ	0xFF5
 33483                           prodh	equ	0xFF4
 33484                           prodl	equ	0xFF3
 33485                           intcon	equ	0xFF2
 33486                           intcon2	equ	0xFF1
 33487                           intcon3	equ	0xFF0
 33488                           indf0	equ	0xFEF
 33489                           postinc0	equ	0xFEE
 33490                           plusw0	equ	0xFEB
 33491                           fsr0h	equ	0xFEA
 33492                           fsr0l	equ	0xFE9
 33493                           wreg	equ	0xFE8
 33494                           indf1	equ	0xFE7
 33495                           postinc1	equ	0xFE6
 33496                           postdec1	equ	0xFE5
 33497                           plusw1	equ	0xFE3
 33498                           fsr1h	equ	0xFE2
 33499                           fsr1l	equ	0xFE1
 33500                           indf2	equ	0xFDF
 33501                           postinc2	equ	0xFDE
 33502                           postdec2	equ	0xFDD
 33503                           plusw2	equ	0xFDB
 33504                           fsr2h	equ	0xFDA
 33505                           fsr2l	equ	0xFD9
 33506                           status	equ	0xFD8
 33507                           
 33508 ;; *************** function _SetBaudRate *****************
 33509 ;; Defined at:
 33510 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33511 ;; Parameters:    Size  Location     Type
 33512 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 33513 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 33514 ;; Auto vars:     Size  Location     Type
 33515 ;;		None
 33516 ;; Return value:  Size  Location     Type
 33517 ;;                  1    wreg      void 
 33518 ;; Registers used:
 33519 ;;		wreg, status,2, status,0, cstack
 33520 ;; Tracked objects:
 33521 ;;		On entry : 0/0
 33522 ;;		On exit  : 0/0
 33523 ;;		Unchanged: 0/0
 33524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33525 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33527 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33528 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33529 ;;Total ram usage:       12 bytes
 33530 ;; Hardware stack levels used:    1
 33531 ;; Hardware stack levels required when called:   12
 33532 ;; This function calls:
 33533 ;;		___lldiv
 33534 ;; This function is called by:
 33535 ;;		_I2c_InitI2cModule
 33536 ;; This function uses a non-reentrant model
 33537 ;;
 33538                           
 33539                           	psect	text155
 33540  005CB4                     __ptext155:
 33541                           	opt stack 0
 33542  005CB4                     _SetBaudRate:
 33543                           	opt stack 14
 33544                           
 33545                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 33546                           
 33547                           ; BSR set to: 0
 33548                           ;incstack = 0
 33549  005CB4  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 33550  005CB8  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 33551  005CBC  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 33552  005CC0  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 33553  005CC4  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 33554  005CC8  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 33555  005CCC  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 33556  005CD0  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 33557  005CD4  0E02               	movlw	2
 33558  005CD6                     u13305:
 33559  005CD6  90D8               	bcf	status,0,c
 33560  005CD8  0100               	movlb	0	; () banked
 33561  005CDA  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 33562  005CDC  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 33563  005CDE  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 33564  005CE0  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 33565  005CE2  2EE8               	decfsz	wreg,f,c
 33566  005CE4  D7F8               	goto	u13305
 33567  005CE6  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 33568  005CEA  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 33569  005CEE  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 33570  005CF2  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 33571  005CF6  EC5F  F028         	call	___lldiv	;wreg free
 33572  005CFA  0100               	movlb	0	; () banked
 33573  005CFC  0589               	decf	?___lldiv& (0+255),w,b
 33574  005CFE  6E74               	movwf	3956,c	;volatile
 33575                           
 33576                           ; BSR set to: 0
 33577  005D00  0012               	return		;funcret
 33578  005D02                     __end_of_SetBaudRate:
 33579                           	opt stack 0
 33580                           tosu	equ	0xFFF
 33581                           tosh	equ	0xFFE
 33582                           tosl	equ	0xFFD
 33583                           pclath	equ	0xFFA
 33584                           tblptru	equ	0xFF8
 33585                           tblptrh	equ	0xFF7
 33586                           tblptrl	equ	0xFF6
 33587                           tablat	equ	0xFF5
 33588                           prodh	equ	0xFF4
 33589                           prodl	equ	0xFF3
 33590                           intcon	equ	0xFF2
 33591                           intcon2	equ	0xFF1
 33592                           intcon3	equ	0xFF0
 33593                           indf0	equ	0xFEF
 33594                           postinc0	equ	0xFEE
 33595                           plusw0	equ	0xFEB
 33596                           fsr0h	equ	0xFEA
 33597                           fsr0l	equ	0xFE9
 33598                           wreg	equ	0xFE8
 33599                           indf1	equ	0xFE7
 33600                           postinc1	equ	0xFE6
 33601                           postdec1	equ	0xFE5
 33602                           plusw1	equ	0xFE3
 33603                           fsr1h	equ	0xFE2
 33604                           fsr1l	equ	0xFE1
 33605                           indf2	equ	0xFDF
 33606                           postinc2	equ	0xFDE
 33607                           postdec2	equ	0xFDD
 33608                           plusw2	equ	0xFDB
 33609                           fsr2h	equ	0xFDA
 33610                           fsr2l	equ	0xFD9
 33611                           status	equ	0xFD8
 33612                           
 33613 ;; *************** function ___lldiv *****************
 33614 ;; Defined at:
 33615 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 33616 ;; Parameters:    Size  Location     Type
 33617 ;;  dividend        4   41[BANK0 ] unsigned long 
 33618 ;;  divisor         4   45[BANK0 ] unsigned long 
 33619 ;; Auto vars:     Size  Location     Type
 33620 ;;  quotient        4   49[BANK0 ] unsigned long 
 33621 ;;  counter         1   53[BANK0 ] unsigned char 
 33622 ;; Return value:  Size  Location     Type
 33623 ;;                  4   41[BANK0 ] unsigned long 
 33624 ;; Registers used:
 33625 ;;		wreg, status,2, status,0
 33626 ;; Tracked objects:
 33627 ;;		On entry : 0/0
 33628 ;;		On exit  : 0/0
 33629 ;;		Unchanged: 0/0
 33630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33631 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33632 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33634 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33635 ;;Total ram usage:       13 bytes
 33636 ;; Hardware stack levels used:    1
 33637 ;; Hardware stack levels required when called:   11
 33638 ;; This function calls:
 33639 ;;		Nothing
 33640 ;; This function is called by:
 33641 ;;		_SetBaudRate
 33642 ;;		_Tmr_TmrBPrSet
 33643 ;;		_SetUartBaudRate
 33644 ;; This function uses a non-reentrant model
 33645 ;;
 33646                           
 33647                           	psect	text156
 33648  0050BE                     __ptext156:
 33649                           	opt stack 0
 33650  0050BE                     ___lldiv:
 33651                           	opt stack 15
 33652                           
 33653                           ; BSR set to: 0
 33654                           ;incstack = 0
 33655  0050BE  0E00               	movlw	0
 33656  0050C0  0100               	movlb	0	; () banked
 33657  0050C2  6F91               	movwf	___lldiv@quotient& (0+255),b
 33658  0050C4  0E00               	movlw	0
 33659  0050C6  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 33660  0050C8  0E00               	movlw	0
 33661  0050CA  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 33662  0050CC  0E00               	movlw	0
 33663  0050CE  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 33664                           
 33665                           ; BSR set to: 0
 33666  0050D0  518D               	movf	___lldiv@divisor& (0+255),w,b
 33667  0050D2  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 33668  0050D4  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 33669  0050D6  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 33670  0050D8  B4D8               	btfsc	status,2,c
 33671  0050DA  D02A               	goto	l3236
 33672                           
 33673                           ; BSR set to: 0
 33674  0050DC  0E01               	movlw	1
 33675  0050DE  6F95               	movwf	___lldiv@counter& (0+255),b
 33676  0050E0  D006               	goto	l3231
 33677  0050E2                     
 33678                           ; BSR set to: 0
 33679                           
 33680                           ; BSR set to: 0
 33681  0050E2  90D8               	bcf	status,0,c
 33682  0050E4  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 33683  0050E6  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 33684  0050E8  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 33685  0050EA  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 33686  0050EC  2B95               	incf	___lldiv@counter& (0+255),f,b
 33687  0050EE                     l3231:
 33688                           
 33689                           ; BSR set to: 0
 33690                           
 33691                           ; BSR set to: 0
 33692  0050EE  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 33693  0050F0  D7F8               	goto	l3232
 33694  0050F2                     u12370:
 33695                           
 33696                           ; BSR set to: 0
 33697                           
 33698                           ; BSR set to: 0
 33699                           
 33700                           ; BSR set to: 0
 33701  0050F2  90D8               	bcf	status,0,c
 33702  0050F4  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 33703  0050F6  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 33704  0050F8  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 33705  0050FA  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 33706                           
 33707                           ; BSR set to: 0
 33708  0050FC  518D               	movf	___lldiv@divisor& (0+255),w,b
 33709  0050FE  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 33710  005100  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33711  005102  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 33712  005104  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33713  005106  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 33714  005108  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33715  00510A  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 33716  00510C  A0D8               	btfss	status,0,c
 33717  00510E  D009               	goto	l3235
 33718                           
 33719                           ; BSR set to: 0
 33720  005110  518D               	movf	___lldiv@divisor& (0+255),w,b
 33721  005112  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 33722  005114  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33723  005116  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 33724  005118  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33725  00511A  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 33726  00511C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33727  00511E  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 33728                           
 33729                           ; BSR set to: 0
 33730  005120  8191               	bsf	___lldiv@quotient& (0+255),0,b
 33731  005122                     l3235:
 33732                           
 33733                           ; BSR set to: 0
 33734                           
 33735                           ; BSR set to: 0
 33736  005122  90D8               	bcf	status,0,c
 33737  005124  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 33738  005126  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 33739  005128  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 33740  00512A  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 33741                           
 33742                           ; BSR set to: 0
 33743  00512C  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 33744  00512E  D7E1               	goto	u12370
 33745  005130                     l3236:
 33746                           
 33747                           ; BSR set to: 0
 33748                           
 33749                           ; BSR set to: 0
 33750  005130  C091  F089         	movff	___lldiv@quotient,?___lldiv
 33751  005134  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 33752  005138  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 33753  00513C  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 33754                           
 33755                           ; BSR set to: 0
 33756  005140  0012               	return		;funcret
 33757  005142                     __end_of___lldiv:
 33758                           	opt stack 0
 33759                           tosu	equ	0xFFF
 33760                           tosh	equ	0xFFE
 33761                           tosl	equ	0xFFD
 33762                           pclath	equ	0xFFA
 33763                           tblptru	equ	0xFF8
 33764                           tblptrh	equ	0xFF7
 33765                           tblptrl	equ	0xFF6
 33766                           tablat	equ	0xFF5
 33767                           prodh	equ	0xFF4
 33768                           prodl	equ	0xFF3
 33769                           intcon	equ	0xFF2
 33770                           intcon2	equ	0xFF1
 33771                           intcon3	equ	0xFF0
 33772                           indf0	equ	0xFEF
 33773                           postinc0	equ	0xFEE
 33774                           plusw0	equ	0xFEB
 33775                           fsr0h	equ	0xFEA
 33776                           fsr0l	equ	0xFE9
 33777                           wreg	equ	0xFE8
 33778                           indf1	equ	0xFE7
 33779                           postinc1	equ	0xFE6
 33780                           postdec1	equ	0xFE5
 33781                           plusw1	equ	0xFE3
 33782                           fsr1h	equ	0xFE2
 33783                           fsr1l	equ	0xFE1
 33784                           indf2	equ	0xFDF
 33785                           postinc2	equ	0xFDE
 33786                           postdec2	equ	0xFDD
 33787                           plusw2	equ	0xFDB
 33788                           fsr2h	equ	0xFDA
 33789                           fsr2l	equ	0xFD9
 33790                           status	equ	0xFD8
 33791                           
 33792 ;; *************** function _I2cSetConfig *****************
 33793 ;; Defined at:
 33794 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33795 ;; Parameters:    Size  Location     Type
 33796 ;;		None
 33797 ;; Auto vars:     Size  Location     Type
 33798 ;;		None
 33799 ;; Return value:  Size  Location     Type
 33800 ;;                  1    wreg      void 
 33801 ;; Registers used:
 33802 ;;		wreg, status,2
 33803 ;; Tracked objects:
 33804 ;;		On entry : 0/0
 33805 ;;		On exit  : 0/0
 33806 ;;		Unchanged: 0/0
 33807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33812 ;;Total ram usage:        0 bytes
 33813 ;; Hardware stack levels used:    1
 33814 ;; Hardware stack levels required when called:   11
 33815 ;; This function calls:
 33816 ;;		Nothing
 33817 ;; This function is called by:
 33818 ;;		_I2cSlv_MainTask
 33819 ;; This function uses a non-reentrant model
 33820 ;;
 33821                           
 33822                           	psect	text157
 33823  00640E                     __ptext157:
 33824                           	opt stack 0
 33825  00640E                     _I2cSetConfig:
 33826                           	opt stack 16
 33827                           
 33828                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 33829                           
 33830                           ; BSR set to: 0
 33831                           ;incstack = 0
 33832  00640E  0E80               	movlw	128
 33833  006410  0103               	movlb	3	; () banked
 33834  006412  6F4D               	movwf	_I2cConfig& (0+255),b
 33835  006414  0E1A               	movlw	26
 33836  006416  6F4E               	movwf	(_I2cConfig+1)& (0+255),b
 33837  006418  0E06               	movlw	6
 33838  00641A  6F4F               	movwf	(_I2cConfig+2)& (0+255),b
 33839  00641C  0E00               	movlw	0
 33840  00641E  6F50               	movwf	(_I2cConfig+3)& (0+255),b
 33841                           
 33842                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 33843  006420  0E00               	movlw	0
 33844  006422  6F51               	movwf	(_I2cConfig+4)& (0+255),b
 33845  006424  0E6C               	movlw	108
 33846  006426  6F52               	movwf	(_I2cConfig+5)& (0+255),b
 33847  006428  0EDC               	movlw	220
 33848  00642A  6F53               	movwf	(_I2cConfig+6)& (0+255),b
 33849  00642C  0E02               	movlw	2
 33850  00642E  6F54               	movwf	(_I2cConfig+7)& (0+255),b
 33851                           
 33852                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 33853  006430  0E08               	movlw	8
 33854  006432  6F55               	movwf	(_I2cConfig+8)& (0+255),b
 33855                           
 33856                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 33857  006434  0E01               	movlw	1
 33858  006436  6F56               	movwf	(_I2cConfig+9)& (0+255),b
 33859                           
 33860                           ; BSR set to: 3
 33861  006438  0012               	return		;funcret
 33862  00643A                     __end_of_I2cSetConfig:
 33863                           	opt stack 0
 33864                           tosu	equ	0xFFF
 33865                           tosh	equ	0xFFE
 33866                           tosl	equ	0xFFD
 33867                           pclath	equ	0xFFA
 33868                           tblptru	equ	0xFF8
 33869                           tblptrh	equ	0xFF7
 33870                           tblptrl	equ	0xFF6
 33871                           tablat	equ	0xFF5
 33872                           prodh	equ	0xFF4
 33873                           prodl	equ	0xFF3
 33874                           intcon	equ	0xFF2
 33875                           intcon2	equ	0xFF1
 33876                           intcon3	equ	0xFF0
 33877                           indf0	equ	0xFEF
 33878                           postinc0	equ	0xFEE
 33879                           plusw0	equ	0xFEB
 33880                           fsr0h	equ	0xFEA
 33881                           fsr0l	equ	0xFE9
 33882                           wreg	equ	0xFE8
 33883                           indf1	equ	0xFE7
 33884                           postinc1	equ	0xFE6
 33885                           postdec1	equ	0xFE5
 33886                           plusw1	equ	0xFE3
 33887                           fsr1h	equ	0xFE2
 33888                           fsr1l	equ	0xFE1
 33889                           indf2	equ	0xFDF
 33890                           postinc2	equ	0xFDE
 33891                           postdec2	equ	0xFDD
 33892                           plusw2	equ	0xFDB
 33893                           fsr2h	equ	0xFDA
 33894                           fsr2l	equ	0xFD9
 33895                           status	equ	0xFD8
 33896                           
 33897 ;; *************** function _I2cSendMsgSm *****************
 33898 ;; Defined at:
 33899 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33900 ;; Parameters:    Size  Location     Type
 33901 ;;		None
 33902 ;; Auto vars:     Size  Location     Type
 33903 ;;		None
 33904 ;; Return value:  Size  Location     Type
 33905 ;;                  1    wreg      void 
 33906 ;; Registers used:
 33907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33908 ;; Tracked objects:
 33909 ;;		On entry : 0/0
 33910 ;;		On exit  : 0/0
 33911 ;;		Unchanged: 0/0
 33912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33917 ;;Total ram usage:        0 bytes
 33918 ;; Hardware stack levels used:    1
 33919 ;; Hardware stack levels required when called:   13
 33920 ;; This function calls:
 33921 ;;		_I2c_ReadData
 33922 ;;		_I2c_WriteData
 33923 ;;		_ReceiveEvt
 33924 ;; This function is called by:
 33925 ;;		_I2cSlv_MainTask
 33926 ;; This function uses a non-reentrant model
 33927 ;;
 33928                           
 33929                           	psect	text158
 33930  004110                     __ptext158:
 33931                           	opt stack 0
 33932  004110                     _I2cSendMsgSm:
 33933                           	opt stack 14
 33934                           
 33935                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 33936                           ;i2c_slv.c: 122: switch(I2cComState)
 33937                           
 33938                           ; BSR set to: 3
 33939                           ;incstack = 0
 33940  004110  D04F               	goto	l1382
 33941  004112                     
 33942                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 33943  004112  0ED7               	movlw	low _I2cWriteDataEvt
 33944  004114  0100               	movlb	0	; () banked
 33945  004116  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33946  004118  0E00               	movlw	high _I2cWriteDataEvt
 33947  00411A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33948  00411C  ECF0  F031         	call	_ReceiveEvt	;wreg free
 33949  004120  0900               	iorlw	0
 33950  004122  B4D8               	btfsc	status,2,c
 33951  004124  D007               	goto	l1384
 33952                           
 33953                           ;i2c_slv.c: 127: {
 33954                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 33955  004126  0E01               	movlw	1
 33956  004128  0101               	movlb	1	; () banked
 33957  00412A  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33958                           
 33959                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 33960  00412C  0E01               	movlw	1
 33961  00412E  0100               	movlb	0	; () banked
 33962  004130  6FCD               	movwf	_I2cComSts& (0+255),b
 33963                           
 33964                           ;i2c_slv.c: 132: }
 33965  004132  0012               	return	
 33966  004134                     l1384:
 33967                           
 33968                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 33969                           
 33970                           ; BSR set to: 0
 33971  004134  0ED6               	movlw	low _I2cReadDataEvt
 33972  004136  0100               	movlb	0	; () banked
 33973  004138  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33974  00413A  0E00               	movlw	high _I2cReadDataEvt
 33975  00413C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33976  00413E  ECF0  F031         	call	_ReceiveEvt	;wreg free
 33977  004142  0900               	iorlw	0
 33978  004144  B4D8               	btfsc	status,2,c
 33979  004146  D007               	goto	l1386
 33980                           
 33981                           ;i2c_slv.c: 134: {
 33982                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 33983  004148  0E02               	movlw	2
 33984  00414A  0101               	movlb	1	; () banked
 33985  00414C  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33986                           
 33987                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 33988  00414E  0E02               	movlw	2
 33989  004150  0100               	movlb	0	; () banked
 33990  004152  6FCD               	movwf	_I2cComSts& (0+255),b
 33991                           
 33992                           ;i2c_slv.c: 139: }
 33993  004154  0012               	return	
 33994  004156                     l1386:
 33995                           
 33996                           ;i2c_slv.c: 140: else
 33997                           ;i2c_slv.c: 141: {
 33998                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 33999                           
 34000                           ; BSR set to: 0
 34001  004156  0E00               	movlw	0
 34002  004158  0100               	movlb	0	; () banked
 34003  00415A  6FCD               	movwf	_I2cComSts& (0+255),b
 34004                           
 34005                           ; BSR set to: 0
 34006                           ;i2c_slv.c: 144: }
 34007                           ;i2c_slv.c: 145: break;
 34008                           
 34009                           ; BSR set to: 0
 34010  00415C  0012               	return	
 34011  00415E                     
 34012                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 34013                           
 34014                           ; BSR set to: 0
 34015  00415E  0E9E               	movlw	low _I2cTxPacket
 34016  004160  0100               	movlb	0	; () banked
 34017  004162  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 34018  004164  0E03               	movlw	high _I2cTxPacket
 34019  004166  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 34020  004168  EC0F  F011         	call	_I2c_WriteData	;wreg free
 34021  00416C  0900               	iorlw	0
 34022  00416E  B4D8               	btfsc	status,2,c
 34023  004170  0012               	return	
 34024                           
 34025                           ;i2c_slv.c: 150: {
 34026                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 34027  004172  0E03               	movlw	3
 34028  004174  0101               	movlb	1	; () banked
 34029  004176  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34030                           
 34031                           ; BSR set to: 1
 34032                           ;i2c_slv.c: 153: }
 34033                           ;i2c_slv.c: 154: break;
 34034  004178  0012               	return	
 34035  00417A                     
 34036                           ; BSR set to: 1
 34037                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 34038                           
 34039                           ; BSR set to: 1
 34040  00417A  0E93               	movlw	low _I2cRxPacket
 34041  00417C  0100               	movlb	0	; () banked
 34042  00417E  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 34043  004180  0E03               	movlw	high _I2cRxPacket
 34044  004182  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 34045  004184  ECC6  F011         	call	_I2c_ReadData	;wreg free
 34046  004188  0900               	iorlw	0
 34047  00418A  B4D8               	btfsc	status,2,c
 34048  00418C  0012               	return	
 34049                           
 34050                           ;i2c_slv.c: 159: {
 34051                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 34052  00418E  0E04               	movlw	4
 34053  004190  0101               	movlb	1	; () banked
 34054  004192  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34055                           
 34056                           ; BSR set to: 1
 34057                           ;i2c_slv.c: 162: }
 34058                           ;i2c_slv.c: 164: break;
 34059  004194  0012               	return	
 34060  004196                     
 34061                           ; BSR set to: 1
 34062                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 34063                           
 34064                           ; BSR set to: 1
 34065  004196  0E00               	movlw	0
 34066  004198  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34067                           
 34068                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 34069  00419A  0E00               	movlw	0
 34070  00419C  0100               	movlb	0	; () banked
 34071  00419E  6FCD               	movwf	_I2cComSts& (0+255),b
 34072                           
 34073                           ;i2c_slv.c: 171: break;
 34074  0041A0  0012               	return	
 34075  0041A2                     
 34076                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 34077                           
 34078                           ; BSR set to: 0
 34079  0041A2  0E00               	movlw	0
 34080  0041A4  0101               	movlb	1	; () banked
 34081  0041A6  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34082                           
 34083                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 34084  0041A8  0E00               	movlw	0
 34085  0041AA  0100               	movlb	0	; () banked
 34086  0041AC  6FCD               	movwf	_I2cComSts& (0+255),b
 34087                           
 34088                           ; BSR set to: 0
 34089                           ;i2c_slv.c: 182: }
 34090                           
 34091                           ; BSR set to: 0
 34092                           ;i2c_slv.c: 181: break;
 34093                           
 34094                           ;i2c_slv.c: 180: default:
 34095                           
 34096                           ;i2c_slv.c: 178: break;
 34097  0041AE  0012               	return	
 34098  0041B0                     l1382:
 34099                           
 34100                           ; BSR set to: 0
 34101  0041B0  0101               	movlb	1	; () banked
 34102  0041B2  51E6               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 34103                           
 34104                           ; Switch size 1, requested type "space"
 34105                           ; Number of cases is 5, Range of values is 0 to 4
 34106                           ; switch strategies available:
 34107                           ; Name         Instructions Cycles
 34108                           ; simple_byte           16     9 (average)
 34109                           ;	Chosen strategy is simple_byte
 34110  0041B4  0A00               	xorlw	0	; case 0
 34111  0041B6  B4D8               	btfsc	status,2,c
 34112  0041B8  D7AC               	goto	l1383
 34113  0041BA  0A01               	xorlw	1	; case 1
 34114  0041BC  B4D8               	btfsc	status,2,c
 34115  0041BE  D7CF               	goto	l1389
 34116  0041C0  0A03               	xorlw	3	; case 2
 34117  0041C2  B4D8               	btfsc	status,2,c
 34118  0041C4  D7DA               	goto	l1391
 34119  0041C6  0A01               	xorlw	1	; case 3
 34120  0041C8  B4D8               	btfsc	status,2,c
 34121  0041CA  D7E5               	goto	l1393
 34122  0041CC  0A07               	xorlw	7	; case 4
 34123  0041CE  A4D8               	btfss	status,2,c
 34124  0041D0  0012               	return	
 34125  0041D2  D7E7               	goto	l1394
 34126  0041D4                     __end_of_I2cSendMsgSm:
 34127                           	opt stack 0
 34128                           tosu	equ	0xFFF
 34129                           tosh	equ	0xFFE
 34130                           tosl	equ	0xFFD
 34131                           pclath	equ	0xFFA
 34132                           tblptru	equ	0xFF8
 34133                           tblptrh	equ	0xFF7
 34134                           tblptrl	equ	0xFF6
 34135                           tablat	equ	0xFF5
 34136                           prodh	equ	0xFF4
 34137                           prodl	equ	0xFF3
 34138                           intcon	equ	0xFF2
 34139                           intcon2	equ	0xFF1
 34140                           intcon3	equ	0xFF0
 34141                           indf0	equ	0xFEF
 34142                           postinc0	equ	0xFEE
 34143                           plusw0	equ	0xFEB
 34144                           fsr0h	equ	0xFEA
 34145                           fsr0l	equ	0xFE9
 34146                           wreg	equ	0xFE8
 34147                           indf1	equ	0xFE7
 34148                           postinc1	equ	0xFE6
 34149                           postdec1	equ	0xFE5
 34150                           plusw1	equ	0xFE3
 34151                           fsr1h	equ	0xFE2
 34152                           fsr1l	equ	0xFE1
 34153                           indf2	equ	0xFDF
 34154                           postinc2	equ	0xFDE
 34155                           postdec2	equ	0xFDD
 34156                           plusw2	equ	0xFDB
 34157                           fsr2h	equ	0xFDA
 34158                           fsr2l	equ	0xFD9
 34159                           status	equ	0xFD8
 34160                           
 34161 ;; *************** function _ReceiveEvt *****************
 34162 ;; Defined at:
 34163 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34164 ;; Parameters:    Size  Location     Type
 34165 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 34166 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 34167 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 34168 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 34169 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 34170 ;;		 -> ActivateRiDetection(1), 
 34171 ;; Auto vars:     Size  Location     Type
 34172 ;;  EventStatus     1   32[BANK0 ] enum E7727
 34173 ;; Return value:  Size  Location     Type
 34174 ;;                  1    wreg      enum E7699
 34175 ;; Registers used:
 34176 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34177 ;; Tracked objects:
 34178 ;;		On entry : 0/0
 34179 ;;		On exit  : 0/0
 34180 ;;		Unchanged: 0/0
 34181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34186 ;;Total ram usage:        4 bytes
 34187 ;; Hardware stack levels used:    1
 34188 ;; Hardware stack levels required when called:   11
 34189 ;; This function calls:
 34190 ;;		Nothing
 34191 ;; This function is called by:
 34192 ;;		_MdmCntSm
 34193 ;;		_CheckModem
 34194 ;;		_ModemEvtParser
 34195 ;;		_GetSmsSm
 34196 ;;		_SendSmsSm
 34197 ;;		_Mdm_GetSmsData
 34198 ;;		_Mdm_IsSmsReceived
 34199 ;;		_Mdm_IsRinging
 34200 ;;		_GetCallerNumber
 34201 ;;		_InitGprsNetwork
 34202 ;;		_HttpGetMethod
 34203 ;;		_I2cSendMsgSm
 34204 ;;		_I2cSlv_I2cReadMsgSts
 34205 ;;		_RiSm
 34206 ;;		_GsmGprsTerminal
 34207 ;; This function uses a non-reentrant model
 34208 ;;
 34209                           
 34210                           	psect	text159
 34211  0063E0                     __ptext159:
 34212                           	opt stack 0
 34213  0063E0                     _ReceiveEvt:
 34214                           	opt stack 13
 34215                           
 34216                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 34217                           
 34218                           ;incstack = 0
 34219  0063E0  0E00               	movlw	0
 34220  0063E2  0100               	movlb	0	; () banked
 34221  0063E4  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 34222                           
 34223                           ; BSR set to: 0
 34224                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 34225  0063E6  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 34226  0063EA  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 34227  0063EE  0E02               	movlw	2
 34228  0063F0  18DE               	xorwf	postinc2,w,c
 34229  0063F2  A4D8               	btfss	status,2,c
 34230  0063F4  D008               	goto	l832
 34231                           
 34232                           ; BSR set to: 0
 34233                           ;os_ser.c: 106: {
 34234                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 34235  0063F6  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 34236  0063FA  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 34237  0063FE  0E01               	movlw	1
 34238  006400  6EDF               	movwf	indf2,c
 34239                           
 34240                           ; BSR set to: 0
 34241                           ;os_ser.c: 110: EventStatus = EventReceived;
 34242  006402  0E01               	movlw	1
 34243  006404  D001               	goto	L58
 34244  006406                     l832:
 34245                           
 34246                           ; BSR set to: 0
 34247                           ;os_ser.c: 112: else
 34248                           ;os_ser.c: 113: {
 34249                           ;os_ser.c: 115: EventStatus = EventIdle;
 34250                           
 34251                           ; BSR set to: 0
 34252  006406  0E00               	movlw	0
 34253  006408                     L58:
 34254  006408  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 34255                           
 34256                           ; BSR set to: 0
 34257                           ;os_ser.c: 116: }
 34258                           ;os_ser.c: 119: return(EventStatus);
 34259  00640A  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 34260  00640C  0012               	return	
 34261  00640E                     __end_of_ReceiveEvt:
 34262                           	opt stack 0
 34263                           tosu	equ	0xFFF
 34264                           tosh	equ	0xFFE
 34265                           tosl	equ	0xFFD
 34266                           pclath	equ	0xFFA
 34267                           tblptru	equ	0xFF8
 34268                           tblptrh	equ	0xFF7
 34269                           tblptrl	equ	0xFF6
 34270                           tablat	equ	0xFF5
 34271                           prodh	equ	0xFF4
 34272                           prodl	equ	0xFF3
 34273                           intcon	equ	0xFF2
 34274                           intcon2	equ	0xFF1
 34275                           intcon3	equ	0xFF0
 34276                           indf0	equ	0xFEF
 34277                           postinc0	equ	0xFEE
 34278                           plusw0	equ	0xFEB
 34279                           fsr0h	equ	0xFEA
 34280                           fsr0l	equ	0xFE9
 34281                           wreg	equ	0xFE8
 34282                           indf1	equ	0xFE7
 34283                           postinc1	equ	0xFE6
 34284                           postdec1	equ	0xFE5
 34285                           plusw1	equ	0xFE3
 34286                           fsr1h	equ	0xFE2
 34287                           fsr1l	equ	0xFE1
 34288                           indf2	equ	0xFDF
 34289                           postinc2	equ	0xFDE
 34290                           postdec2	equ	0xFDD
 34291                           plusw2	equ	0xFDB
 34292                           fsr2h	equ	0xFDA
 34293                           fsr2l	equ	0xFD9
 34294                           status	equ	0xFD8
 34295                           
 34296 ;; *************** function _I2c_WriteData *****************
 34297 ;; Defined at:
 34298 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34299 ;; Parameters:    Size  Location     Type
 34300 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 34301 ;;		 -> I2cTxPacket(5), 
 34302 ;; Auto vars:     Size  Location     Type
 34303 ;;		None
 34304 ;; Return value:  Size  Location     Type
 34305 ;;                  1    wreg      enum E7740
 34306 ;; Registers used:
 34307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34308 ;; Tracked objects:
 34309 ;;		On entry : 0/0
 34310 ;;		On exit  : 0/0
 34311 ;;		Unchanged: 0/0
 34312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34313 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34315 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34316 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34317 ;;Total ram usage:        4 bytes
 34318 ;; Hardware stack levels used:    1
 34319 ;; Hardware stack levels required when called:   12
 34320 ;; This function calls:
 34321 ;;		_CheckAckStatus
 34322 ;;		_CheckTxStatus
 34323 ;;		_StartCondition
 34324 ;;		_StopCondition
 34325 ;;		_WriteByte
 34326 ;; This function is called by:
 34327 ;;		_I2cSendMsgSm
 34328 ;; This function uses a non-reentrant model
 34329 ;;
 34330                           
 34331                           	psect	text160
 34332  00221E                     __ptext160:
 34333                           	opt stack 0
 34334  00221E                     _I2c_WriteData:
 34335                           	opt stack 14
 34336                           
 34337                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 34338                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 34339                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 34340                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 34341                           ;i2c_drv.c: 260: switch (I2cWriteState)
 34342                           
 34343                           ; BSR set to: 0
 34344                           ;incstack = 0
 34345  00221E  D095               	goto	l160
 34346  002220                     
 34347                           ;i2c_drv.c: 264: StartCondition();
 34348  002220  ECB7  F034         	call	_StartCondition	;wreg free
 34349                           
 34350                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 34351  002224  0E00               	movlw	0
 34352  002226  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34353                           
 34354                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 34355  002228  0E01               	movlw	1
 34356  00222A  D084               	goto	L65
 34357  00222C                     
 34358                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 34359  00222C  0100               	movlb	0	; () banked
 34360  00222E  EE20 F001          	lfsr	2,1
 34361  002232  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34362  002234  26D9               	addwf	fsr2l,f,c
 34363  002236  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34364  002238  22DA               	addwfc	fsr2h,f,c
 34365  00223A  50DF               	movf	indf2,w,c
 34366  00223C  6F80               	movwf	??_I2c_WriteData& (0+255),b
 34367  00223E  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34368  002242  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34369  002246  50DF               	movf	indf2,w,c
 34370  002248  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 34371  00224A  90D8               	bcf	status,0,c
 34372  00224C  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 34373  00224E  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 34374  002250  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34375  002254  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34376  002258  6EDF               	movwf	indf2,c
 34377                           
 34378                           ; BSR set to: 0
 34379                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 34380  00225A  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34381  00225E  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34382  002262  50DF               	movf	indf2,w,c
 34383  002264  EC95  F034         	call	_WriteByte
 34384                           
 34385                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 34386  002268  0E02               	movlw	2
 34387  00226A  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34388  00226C                     
 34389                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 34390  00226C  EC9F  F034         	call	_CheckTxStatus	;wreg free
 34391  002270  0900               	iorlw	0
 34392  002272  A4D8               	btfss	status,2,c
 34393  002274  D089               	goto	l162
 34394                           
 34395                           ;i2c_drv.c: 282: {
 34396                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 34397  002276  0E03               	movlw	3
 34398  002278  D01A               	goto	L67
 34399  00227A                     
 34400                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 34401  00227A  0100               	movlb	0	; () banked
 34402  00227C  EE20 F002          	lfsr	2,2
 34403  002280  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34404  002282  26D9               	addwf	fsr2l,f,c
 34405  002284  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34406  002286  22DA               	addwfc	fsr2h,f,c
 34407  002288  CFDE F080          	movff	postinc2,??_I2c_WriteData
 34408  00228C  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 34409  002290  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 34410  002294  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 34411  002298  50DF               	movf	indf2,w,c
 34412  00229A  EC95  F034         	call	_WriteByte
 34413                           
 34414                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 34415  00229E  0E04               	movlw	4
 34416  0022A0  D049               	goto	L65
 34417  0022A2                     
 34418                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 34419  0022A2  EC9F  F034         	call	_CheckTxStatus	;wreg free
 34420  0022A6  0900               	iorlw	0
 34421  0022A8  A4D8               	btfss	status,2,c
 34422  0022AA  D06E               	goto	l162
 34423                           
 34424                           ;i2c_drv.c: 300: {
 34425                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 34426  0022AC  0E05               	movlw	5
 34427  0022AE                     L67:
 34428  0022AE  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34429                           
 34430                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 34431  0022B0  0E08               	movlw	8
 34432  0022B2  D040               	goto	L65
 34433  0022B4                     
 34434                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 34435  0022B4  0100               	movlb	0	; () banked
 34436  0022B6  EE20 F004          	lfsr	2,4
 34437  0022BA  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34438  0022BC  26D9               	addwf	fsr2l,f,c
 34439  0022BE  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34440  0022C0  22DA               	addwfc	fsr2h,f,c
 34441  0022C2  50DF               	movf	indf2,w,c
 34442  0022C4  B4D8               	btfsc	status,2,c
 34443  0022C6  D010               	goto	l170
 34444                           
 34445                           ; BSR set to: 0
 34446                           ;i2c_drv.c: 310: {
 34447                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 34448  0022C8  EE20 F004          	lfsr	2,4
 34449  0022CC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34450  0022CE  26D9               	addwf	fsr2l,f,c
 34451  0022D0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34452  0022D2  22DA               	addwfc	fsr2h,f,c
 34453  0022D4  06DF               	decf	indf2,f,c
 34454                           
 34455                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 34456  0022D6  EE20 F002          	lfsr	2,2
 34457  0022DA  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34458  0022DC  26D9               	addwf	fsr2l,f,c
 34459  0022DE  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34460  0022E0  22DA               	addwfc	fsr2h,f,c
 34461  0022E2  2ADE               	incf	postinc2,f,c
 34462  0022E4  0E00               	movlw	0
 34463  0022E6  22DD               	addwfc	postdec2,f,c
 34464  0022E8                     l170:
 34465                           
 34466                           ; BSR set to: 0
 34467                           ;i2c_drv.c: 315: }
 34468                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 34469  0022E8  EE20 F004          	lfsr	2,4
 34470  0022EC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34471  0022EE  26D9               	addwf	fsr2l,f,c
 34472  0022F0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34473  0022F2  22DA               	addwfc	fsr2h,f,c
 34474  0022F4  50DF               	movf	indf2,w,c
 34475  0022F6  A4D8               	btfss	status,2,c
 34476  0022F8  D002               	goto	l171
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;i2c_drv.c: 319: {
 34480                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 34481  0022FA  0E06               	movlw	6
 34482  0022FC  D01B               	goto	L65
 34483  0022FE                     l171:
 34484                           
 34485                           ; BSR set to: 0
 34486                           ;i2c_drv.c: 323: else
 34487                           ;i2c_drv.c: 324: {
 34488                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 34489                           
 34490                           ; BSR set to: 0
 34491  0022FE  0E03               	movlw	3
 34492  002300  D019               	goto	L65
 34493  002302                     
 34494                           ;i2c_drv.c: 332: StopCondition();
 34495                           
 34496                           ; BSR set to: 0
 34497  002302  ECB5  F034         	call	_StopCondition	;wreg free
 34498                           
 34499                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 34500  002306  0E07               	movlw	7
 34501  002308  D015               	goto	L65
 34502  00230A                     
 34503                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 34504  00230A  0E00               	movlw	0
 34505  00230C  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34506                           
 34507                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 34508  00230E  0E00               	movlw	0
 34509  002310  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34510                           
 34511                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 34512  002312  0E02               	movlw	2
 34513  002314  D018               	goto	L66
 34514  002316                     
 34515                           ;i2c_drv.c: 347: TentativeCounter++;
 34516  002316  2A35               	incf	I2c_WriteData@TentativeCounter,f,c
 34517                           
 34518                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 34519  002318  ECA4  F034         	call	_CheckAckStatus	;wreg free
 34520  00231C  0900               	iorlw	0
 34521  00231E  A4D8               	btfss	status,2,c
 34522  002320  D005               	goto	l176
 34523                           
 34524                           ;i2c_drv.c: 350: {
 34525                           ;i2c_drv.c: 352: TentativeCounter = 0;
 34526  002322  0E00               	movlw	0
 34527  002324  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34528                           
 34529                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 34530  002326  C036  F037         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 34531                           
 34532                           ;i2c_drv.c: 355: }
 34533  00232A  D02E               	goto	l162
 34534  00232C                     l176:
 34535                           
 34536                           ;i2c_drv.c: 356: else
 34537                           ;i2c_drv.c: 357: {
 34538                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 34539  00232C  0E02               	movlw	2
 34540  00232E  6435               	cpfsgt	I2c_WriteData@TentativeCounter,c
 34541  002330  D02B               	goto	l162
 34542                           
 34543                           ;i2c_drv.c: 360: {
 34544                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 34545  002332  0E09               	movlw	9
 34546  002334                     L65:
 34547  002334  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34548                           
 34549                           ;i2c_drv.c: 363: }
 34550                           ;i2c_drv.c: 364: }
 34551                           ;i2c_drv.c: 365: break;
 34552  002336  D028               	goto	l162
 34553  002338                     
 34554                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 34555  002338  0E00               	movlw	0
 34556  00233A  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34557                           
 34558                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 34559  00233C  0E00               	movlw	0
 34560  00233E  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34561                           
 34562                           ;i2c_drv.c: 372: TentativeCounter = 0;
 34563  002340  0E00               	movlw	0
 34564  002342  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34565                           
 34566                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 34567  002344  0E01               	movlw	1
 34568  002346                     L66:
 34569  002346  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34570                           
 34571                           ;i2c_drv.c: 379: }
 34572                           
 34573                           ;i2c_drv.c: 378: break;
 34574                           
 34575                           ;i2c_drv.c: 377: default:
 34576                           
 34577                           ;i2c_drv.c: 375: break;
 34578  002348  D01F               	goto	l162
 34579  00234A                     l160:
 34580  00234A  5037               	movf	I2c_WriteData@I2cWriteState,w,c
 34581                           
 34582                           ; Switch size 1, requested type "space"
 34583                           ; Number of cases is 10, Range of values is 0 to 9
 34584                           ; switch strategies available:
 34585                           ; Name         Instructions Cycles
 34586                           ; simple_byte           31    16 (average)
 34587                           ;	Chosen strategy is simple_byte
 34588  00234C  0A00               	xorlw	0	; case 0
 34589  00234E  B4D8               	btfsc	status,2,c
 34590  002350  D767               	goto	l161
 34591  002352  0A01               	xorlw	1	; case 1
 34592  002354  B4D8               	btfsc	status,2,c
 34593  002356  D76A               	goto	l163
 34594  002358  0A03               	xorlw	3	; case 2
 34595  00235A  B4D8               	btfsc	status,2,c
 34596  00235C  D787               	goto	l164
 34597  00235E  0A01               	xorlw	1	; case 3
 34598  002360  B4D8               	btfsc	status,2,c
 34599  002362  D78B               	goto	l166
 34600  002364  0A07               	xorlw	7	; case 4
 34601  002366  B4D8               	btfsc	status,2,c
 34602  002368  D79C               	goto	l167
 34603  00236A  0A01               	xorlw	1	; case 5
 34604  00236C  B4D8               	btfsc	status,2,c
 34605  00236E  D7A2               	goto	l169
 34606  002370  0A03               	xorlw	3	; case 6
 34607  002372  B4D8               	btfsc	status,2,c
 34608  002374  D7C6               	goto	l173
 34609  002376  0A01               	xorlw	1	; case 7
 34610  002378  B4D8               	btfsc	status,2,c
 34611  00237A  D7C7               	goto	l174
 34612  00237C  0A0F               	xorlw	15	; case 8
 34613  00237E  B4D8               	btfsc	status,2,c
 34614  002380  D7CA               	goto	l175
 34615  002382  0A01               	xorlw	1	; case 9
 34616  002384  B4D8               	btfsc	status,2,c
 34617  002386  D7D8               	goto	l179
 34618  002388                     l162:
 34619                           
 34620                           ;i2c_drv.c: 382: return WriteStatus;
 34621  002388  5034               	movf	I2c_WriteData@WriteStatus,w,c
 34622  00238A  0012               	return	
 34623  00238C                     __end_of_I2c_WriteData:
 34624                           	opt stack 0
 34625                           tosu	equ	0xFFF
 34626                           tosh	equ	0xFFE
 34627                           tosl	equ	0xFFD
 34628                           pclath	equ	0xFFA
 34629                           tblptru	equ	0xFF8
 34630                           tblptrh	equ	0xFF7
 34631                           tblptrl	equ	0xFF6
 34632                           tablat	equ	0xFF5
 34633                           prodh	equ	0xFF4
 34634                           prodl	equ	0xFF3
 34635                           intcon	equ	0xFF2
 34636                           intcon2	equ	0xFF1
 34637                           intcon3	equ	0xFF0
 34638                           indf0	equ	0xFEF
 34639                           postinc0	equ	0xFEE
 34640                           plusw0	equ	0xFEB
 34641                           fsr0h	equ	0xFEA
 34642                           fsr0l	equ	0xFE9
 34643                           wreg	equ	0xFE8
 34644                           indf1	equ	0xFE7
 34645                           postinc1	equ	0xFE6
 34646                           postdec1	equ	0xFE5
 34647                           plusw1	equ	0xFE3
 34648                           fsr1h	equ	0xFE2
 34649                           fsr1l	equ	0xFE1
 34650                           indf2	equ	0xFDF
 34651                           postinc2	equ	0xFDE
 34652                           postdec2	equ	0xFDD
 34653                           plusw2	equ	0xFDB
 34654                           fsr2h	equ	0xFDA
 34655                           fsr2l	equ	0xFD9
 34656                           status	equ	0xFD8
 34657                           
 34658 ;; *************** function _I2c_ReadData *****************
 34659 ;; Defined at:
 34660 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34661 ;; Parameters:    Size  Location     Type
 34662 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 34663 ;;		 -> I2cRxPacket(6), 
 34664 ;; Auto vars:     Size  Location     Type
 34665 ;;		None
 34666 ;; Return value:  Size  Location     Type
 34667 ;;                  1    wreg      enum E7787
 34668 ;; Registers used:
 34669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34670 ;; Tracked objects:
 34671 ;;		On entry : 0/0
 34672 ;;		On exit  : 0/0
 34673 ;;		Unchanged: 0/0
 34674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34677 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34678 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34679 ;;Total ram usage:        4 bytes
 34680 ;; Hardware stack levels used:    1
 34681 ;; Hardware stack levels required when called:   12
 34682 ;; This function calls:
 34683 ;;		_CheckAckStatus
 34684 ;;		_CheckTxStatus
 34685 ;;		_EnableReceiver
 34686 ;;		_GenerateEvt
 34687 ;;		_ReadByte
 34688 ;;		_SetAckStatus
 34689 ;;		_StartCondition
 34690 ;;		_StopCondition
 34691 ;;		_WriteByte
 34692 ;; This function is called by:
 34693 ;;		_I2cSendMsgSm
 34694 ;; This function uses a non-reentrant model
 34695 ;;
 34696                           
 34697                           	psect	text161
 34698  00238C                     __ptext161:
 34699                           	opt stack 0
 34700  00238C                     _I2c_ReadData:
 34701                           	opt stack 14
 34702                           
 34703                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 34704                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 34705                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 34706                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 34707                           ;i2c_drv.c: 402: switch (I2cReadState)
 34708                           
 34709                           ;incstack = 0
 34710  00238C  D090               	goto	l192
 34711  00238E                     
 34712                           ;i2c_drv.c: 406: StartCondition();
 34713  00238E  ECB7  F034         	call	_StartCondition	;wreg free
 34714                           
 34715                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 34716  002392  0E00               	movlw	0
 34717  002394  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34718                           
 34719                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 34720  002396  0E01               	movlw	1
 34721  002398  D083               	goto	L75
 34722  00239A                     
 34723                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 34724  00239A  0100               	movlb	0	; () banked
 34725  00239C  EE20 F001          	lfsr	2,1
 34726  0023A0  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34727  0023A2  26D9               	addwf	fsr2l,f,c
 34728  0023A4  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34729  0023A6  22DA               	addwfc	fsr2h,f,c
 34730  0023A8  50DF               	movf	indf2,w,c
 34731  0023AA  6F82               	movwf	??_I2c_ReadData& (0+255),b
 34732  0023AC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34733  0023B0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34734  0023B4  50DF               	movf	indf2,w,c
 34735  0023B6  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 34736  0023B8  90D8               	bcf	status,0,c
 34737  0023BA  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 34738  0023BC  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 34739  0023BE  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34740  0023C2  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34741  0023C6  6EDF               	movwf	indf2,c
 34742                           
 34743                           ; BSR set to: 0
 34744                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 34745  0023C8  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34746  0023CC  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34747  0023D0  50DF               	movf	indf2,w,c
 34748  0023D2  EC95  F034         	call	_WriteByte
 34749                           
 34750                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 34751  0023D6  0E02               	movlw	2
 34752  0023D8  D063               	goto	L75
 34753  0023DA                     
 34754                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 34755  0023DA  EC9F  F034         	call	_CheckTxStatus	;wreg free
 34756  0023DE  0900               	iorlw	0
 34757  0023E0  A4D8               	btfss	status,2,c
 34758  0023E2  D081               	goto	l194
 34759                           
 34760                           ;i2c_drv.c: 425: {
 34761                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 34762  0023E4  0E03               	movlw	3
 34763  0023E6  D05C               	goto	L75
 34764  0023E8                     
 34765                           ;i2c_drv.c: 433: TentativeCounter++;
 34766  0023E8  2A31               	incf	I2c_ReadData@TentativeCounter,f,c
 34767                           
 34768                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 34769  0023EA  ECA4  F034         	call	_CheckAckStatus	;wreg free
 34770  0023EE  0900               	iorlw	0
 34771  0023F0  A4D8               	btfss	status,2,c
 34772  0023F2  D004               	goto	l199
 34773                           
 34774                           ;i2c_drv.c: 436: {
 34775                           ;i2c_drv.c: 438: TentativeCounter = 0;
 34776  0023F4  0E00               	movlw	0
 34777  0023F6  6E31               	movwf	I2c_ReadData@TentativeCounter,c
 34778  0023F8                     
 34779                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 34780  0023F8  0E04               	movlw	4
 34781  0023FA  D052               	goto	L75
 34782  0023FC                     l199:
 34783                           
 34784                           ;i2c_drv.c: 442: else
 34785                           ;i2c_drv.c: 443: {
 34786                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 34787  0023FC  0E02               	movlw	2
 34788  0023FE  6431               	cpfsgt	I2c_ReadData@TentativeCounter,c
 34789  002400  D072               	goto	l194
 34790                           
 34791                           ;i2c_drv.c: 446: {
 34792                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 34793  002402  0E08               	movlw	8
 34794  002404  D04D               	goto	L75
 34795  002406                     
 34796                           ;i2c_drv.c: 455: EnableReceiver();
 34797  002406  ECB9  F034         	call	_EnableReceiver	;wreg free
 34798                           
 34799                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 34800  00240A  0E05               	movlw	5
 34801  00240C  D049               	goto	L75
 34802  00240E                     
 34803                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 34804  00240E  EC9F  F034         	call	_CheckTxStatus	;wreg free
 34805  002412  0900               	iorlw	0
 34806  002414  A4D8               	btfss	status,2,c
 34807  002416  D067               	goto	l194
 34808                           
 34809                           ;i2c_drv.c: 463: {
 34810                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 34811  002418  0100               	movlb	0	; () banked
 34812  00241A  EE20 F002          	lfsr	2,2
 34813  00241E  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34814  002420  26D9               	addwf	fsr2l,f,c
 34815  002422  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34816  002424  22DA               	addwfc	fsr2h,f,c
 34817  002426  CFDE F082          	movff	postinc2,??_I2c_ReadData
 34818  00242A  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 34819  00242E  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 34820  002432  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 34821  002436  EC9A  F034         	call	_ReadByte	;wreg free
 34822  00243A  6EDF               	movwf	indf2,c
 34823                           
 34824                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 34825  00243C  0100               	movlb	0	; () banked
 34826  00243E  EE20 F002          	lfsr	2,2
 34827  002442  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34828  002444  26D9               	addwf	fsr2l,f,c
 34829  002446  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34830  002448  22DA               	addwfc	fsr2h,f,c
 34831  00244A  2ADE               	incf	postinc2,f,c
 34832  00244C  0E00               	movlw	0
 34833  00244E  22DD               	addwfc	postdec2,f,c
 34834                           
 34835                           ; BSR set to: 0
 34836                           ;i2c_drv.c: 469: DataCounter++;
 34837  002450  2A32               	incf	I2c_ReadData@DataCounter,f,c
 34838                           
 34839                           ; BSR set to: 0
 34840                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 34841  002452  0E06               	movlw	6
 34842  002454  D025               	goto	L75
 34843  002456                     
 34844                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 34845                           
 34846                           ; BSR set to: 0
 34847  002456  0100               	movlb	0	; () banked
 34848  002458  EE20 F004          	lfsr	2,4
 34849  00245C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34850  00245E  26D9               	addwf	fsr2l,f,c
 34851  002460  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34852  002462  22DA               	addwfc	fsr2h,f,c
 34853  002464  50DE               	movf	postinc2,w,c
 34854  002466  5C32               	subwf	I2c_ReadData@DataCounter,w,c
 34855  002468  A0D8               	btfss	status,0,c
 34856  00246A  D008               	goto	l206
 34857                           
 34858                           ; BSR set to: 0
 34859                           ;i2c_drv.c: 478: {
 34860                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 34861  00246C  0E01               	movlw	1
 34862  00246E  EC29  F034         	call	_SetAckStatus
 34863                           
 34864                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 34865  002472  0E07               	movlw	7
 34866  002474  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34867                           
 34868                           ;i2c_drv.c: 484: DataCounter = 0;
 34869  002476  0E00               	movlw	0
 34870  002478  6E32               	movwf	I2c_ReadData@DataCounter,c
 34871                           
 34872                           ;i2c_drv.c: 485: }
 34873  00247A  D035               	goto	l194
 34874  00247C                     l206:
 34875                           
 34876                           ;i2c_drv.c: 486: else
 34877                           ;i2c_drv.c: 487: {
 34878                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 34879  00247C  0E00               	movlw	0
 34880  00247E  EC29  F034         	call	_SetAckStatus
 34881  002482  D7BA               	goto	L76
 34882  002484                     
 34883                           ;i2c_drv.c: 497: StopCondition();
 34884  002484  ECB5  F034         	call	_StopCondition	;wreg free
 34885                           
 34886                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 34887  002488  0E02               	movlw	2
 34888  00248A  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34889                           
 34890                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 34891  00248C  0E05               	movlw	5
 34892  00248E  0100               	movlb	0	; () banked
 34893  002490  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 34894  002492  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 34895  002494  0E00               	movlw	0
 34896  002496  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34897  002498  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 34898  00249A  ECE5  F033         	call	_GenerateEvt	;wreg free
 34899                           
 34900                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 34901  00249E  0E00               	movlw	0
 34902  0024A0                     L75:
 34903  0024A0  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34904                           
 34905                           ;i2c_drv.c: 504: break;
 34906  0024A2  D021               	goto	l194
 34907  0024A4                     
 34908                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 34909  0024A4  0E00               	movlw	0
 34910  0024A6  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34911                           
 34912                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 34913  0024A8  0E01               	movlw	1
 34914  0024AA  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34915                           
 34916                           ;i2c_drv.c: 515: }
 34917                           
 34918                           ;i2c_drv.c: 514: break;
 34919                           
 34920                           ;i2c_drv.c: 513: default:
 34921                           
 34922                           ;i2c_drv.c: 511: break;
 34923  0024AC  D01C               	goto	l194
 34924  0024AE                     l192:
 34925  0024AE  5033               	movf	I2c_ReadData@I2cReadState,w,c
 34926                           
 34927                           ; Switch size 1, requested type "space"
 34928                           ; Number of cases is 9, Range of values is 0 to 8
 34929                           ; switch strategies available:
 34930                           ; Name         Instructions Cycles
 34931                           ; simple_byte           28    15 (average)
 34932                           ;	Chosen strategy is simple_byte
 34933  0024B0  0A00               	xorlw	0	; case 0
 34934  0024B2  B4D8               	btfsc	status,2,c
 34935  0024B4  D76C               	goto	l193
 34936  0024B6  0A01               	xorlw	1	; case 1
 34937  0024B8  B4D8               	btfsc	status,2,c
 34938  0024BA  D76F               	goto	l195
 34939  0024BC  0A03               	xorlw	3	; case 2
 34940  0024BE  B4D8               	btfsc	status,2,c
 34941  0024C0  D78C               	goto	l196
 34942  0024C2  0A01               	xorlw	1	; case 3
 34943  0024C4  B4D8               	btfsc	status,2,c
 34944  0024C6  D790               	goto	l198
 34945  0024C8  0A07               	xorlw	7	; case 4
 34946  0024CA  B4D8               	btfsc	status,2,c
 34947  0024CC  D79C               	goto	l202
 34948  0024CE  0A01               	xorlw	1	; case 5
 34949  0024D0  B4D8               	btfsc	status,2,c
 34950  0024D2  D79D               	goto	l203
 34951  0024D4  0A03               	xorlw	3	; case 6
 34952  0024D6  B4D8               	btfsc	status,2,c
 34953  0024D8  D7BE               	goto	l205
 34954  0024DA  0A01               	xorlw	1	; case 7
 34955  0024DC  B4D8               	btfsc	status,2,c
 34956  0024DE  D7D2               	goto	l208
 34957  0024E0  0A0F               	xorlw	15	; case 8
 34958  0024E2  B4D8               	btfsc	status,2,c
 34959  0024E4  D7DF               	goto	l209
 34960  0024E6                     l194:
 34961                           
 34962                           ;i2c_drv.c: 518: return ReadStatus;
 34963  0024E6  5030               	movf	I2c_ReadData@ReadStatus,w,c
 34964  0024E8  0012               	return	
 34965  0024EA                     __end_of_I2c_ReadData:
 34966                           	opt stack 0
 34967                           tosu	equ	0xFFF
 34968                           tosh	equ	0xFFE
 34969                           tosl	equ	0xFFD
 34970                           pclath	equ	0xFFA
 34971                           tblptru	equ	0xFF8
 34972                           tblptrh	equ	0xFF7
 34973                           tblptrl	equ	0xFF6
 34974                           tablat	equ	0xFF5
 34975                           prodh	equ	0xFF4
 34976                           prodl	equ	0xFF3
 34977                           intcon	equ	0xFF2
 34978                           intcon2	equ	0xFF1
 34979                           intcon3	equ	0xFF0
 34980                           indf0	equ	0xFEF
 34981                           postinc0	equ	0xFEE
 34982                           plusw0	equ	0xFEB
 34983                           fsr0h	equ	0xFEA
 34984                           fsr0l	equ	0xFE9
 34985                           wreg	equ	0xFE8
 34986                           indf1	equ	0xFE7
 34987                           postinc1	equ	0xFE6
 34988                           postdec1	equ	0xFE5
 34989                           plusw1	equ	0xFE3
 34990                           fsr1h	equ	0xFE2
 34991                           fsr1l	equ	0xFE1
 34992                           indf2	equ	0xFDF
 34993                           postinc2	equ	0xFDE
 34994                           postdec2	equ	0xFDD
 34995                           plusw2	equ	0xFDB
 34996                           fsr2h	equ	0xFDA
 34997                           fsr2l	equ	0xFD9
 34998                           status	equ	0xFD8
 34999                           
 35000 ;; *************** function _WriteByte *****************
 35001 ;; Defined at:
 35002 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35003 ;; Parameters:    Size  Location     Type
 35004 ;;  Byte            1    wreg     unsigned char 
 35005 ;; Auto vars:     Size  Location     Type
 35006 ;;  Byte            1   29[BANK0 ] unsigned char 
 35007 ;; Return value:  Size  Location     Type
 35008 ;;                  1    wreg      void 
 35009 ;; Registers used:
 35010 ;;		wreg
 35011 ;; Tracked objects:
 35012 ;;		On entry : 0/0
 35013 ;;		On exit  : 0/0
 35014 ;;		Unchanged: 0/0
 35015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35019 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35020 ;;Total ram usage:        1 bytes
 35021 ;; Hardware stack levels used:    1
 35022 ;; Hardware stack levels required when called:   11
 35023 ;; This function calls:
 35024 ;;		Nothing
 35025 ;; This function is called by:
 35026 ;;		_I2c_WriteData
 35027 ;;		_I2c_ReadData
 35028 ;; This function uses a non-reentrant model
 35029 ;;
 35030                           
 35031                           	psect	text162
 35032  00692A                     __ptext162:
 35033                           	opt stack 0
 35034  00692A                     _WriteByte:
 35035                           	opt stack 14
 35036                           
 35037                           ;incstack = 0
 35038                           ;WriteByte@Byte stored from wreg
 35039  00692A  0100               	movlb	0	; () banked
 35040  00692C  6F7D               	movwf	WriteByte@Byte& (0+255),b
 35041                           
 35042                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 35043  00692E  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 35044  006932  0012               	return		;funcret
 35045  006934                     __end_of_WriteByte:
 35046                           	opt stack 0
 35047                           tosu	equ	0xFFF
 35048                           tosh	equ	0xFFE
 35049                           tosl	equ	0xFFD
 35050                           pclath	equ	0xFFA
 35051                           tblptru	equ	0xFF8
 35052                           tblptrh	equ	0xFF7
 35053                           tblptrl	equ	0xFF6
 35054                           tablat	equ	0xFF5
 35055                           prodh	equ	0xFF4
 35056                           prodl	equ	0xFF3
 35057                           intcon	equ	0xFF2
 35058                           intcon2	equ	0xFF1
 35059                           intcon3	equ	0xFF0
 35060                           indf0	equ	0xFEF
 35061                           postinc0	equ	0xFEE
 35062                           plusw0	equ	0xFEB
 35063                           fsr0h	equ	0xFEA
 35064                           fsr0l	equ	0xFE9
 35065                           wreg	equ	0xFE8
 35066                           indf1	equ	0xFE7
 35067                           postinc1	equ	0xFE6
 35068                           postdec1	equ	0xFE5
 35069                           plusw1	equ	0xFE3
 35070                           fsr1h	equ	0xFE2
 35071                           fsr1l	equ	0xFE1
 35072                           indf2	equ	0xFDF
 35073                           postinc2	equ	0xFDE
 35074                           postdec2	equ	0xFDD
 35075                           plusw2	equ	0xFDB
 35076                           fsr2h	equ	0xFDA
 35077                           fsr2l	equ	0xFD9
 35078                           status	equ	0xFD8
 35079                           
 35080 ;; *************** function _StopCondition *****************
 35081 ;; Defined at:
 35082 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35083 ;; Parameters:    Size  Location     Type
 35084 ;;		None
 35085 ;; Auto vars:     Size  Location     Type
 35086 ;;		None
 35087 ;; Return value:  Size  Location     Type
 35088 ;;                  1    wreg      void 
 35089 ;; Registers used:
 35090 ;;		status,2, status,0
 35091 ;; Tracked objects:
 35092 ;;		On entry : 0/0
 35093 ;;		On exit  : 0/0
 35094 ;;		Unchanged: 0/0
 35095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35100 ;;Total ram usage:        0 bytes
 35101 ;; Hardware stack levels used:    1
 35102 ;; Hardware stack levels required when called:   11
 35103 ;; This function calls:
 35104 ;;		Nothing
 35105 ;; This function is called by:
 35106 ;;		_I2c_WriteData
 35107 ;;		_I2c_ReadData
 35108 ;; This function uses a non-reentrant model
 35109 ;;
 35110                           
 35111                           	psect	text163
 35112  00696A                     __ptext163:
 35113                           	opt stack 0
 35114  00696A                     _StopCondition:
 35115                           	opt stack 14
 35116                           
 35117                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 35118                           
 35119                           ;incstack = 0
 35120  00696A  8471               	bsf	3953,2,c	;volatile
 35121  00696C  0012               	return		;funcret
 35122  00696E                     __end_of_StopCondition:
 35123                           	opt stack 0
 35124                           tosu	equ	0xFFF
 35125                           tosh	equ	0xFFE
 35126                           tosl	equ	0xFFD
 35127                           pclath	equ	0xFFA
 35128                           tblptru	equ	0xFF8
 35129                           tblptrh	equ	0xFF7
 35130                           tblptrl	equ	0xFF6
 35131                           tablat	equ	0xFF5
 35132                           prodh	equ	0xFF4
 35133                           prodl	equ	0xFF3
 35134                           intcon	equ	0xFF2
 35135                           intcon2	equ	0xFF1
 35136                           intcon3	equ	0xFF0
 35137                           indf0	equ	0xFEF
 35138                           postinc0	equ	0xFEE
 35139                           plusw0	equ	0xFEB
 35140                           fsr0h	equ	0xFEA
 35141                           fsr0l	equ	0xFE9
 35142                           wreg	equ	0xFE8
 35143                           indf1	equ	0xFE7
 35144                           postinc1	equ	0xFE6
 35145                           postdec1	equ	0xFE5
 35146                           plusw1	equ	0xFE3
 35147                           fsr1h	equ	0xFE2
 35148                           fsr1l	equ	0xFE1
 35149                           indf2	equ	0xFDF
 35150                           postinc2	equ	0xFDE
 35151                           postdec2	equ	0xFDD
 35152                           plusw2	equ	0xFDB
 35153                           fsr2h	equ	0xFDA
 35154                           fsr2l	equ	0xFD9
 35155                           status	equ	0xFD8
 35156                           
 35157 ;; *************** function _StartCondition *****************
 35158 ;; Defined at:
 35159 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35160 ;; Parameters:    Size  Location     Type
 35161 ;;		None
 35162 ;; Auto vars:     Size  Location     Type
 35163 ;;		None
 35164 ;; Return value:  Size  Location     Type
 35165 ;;                  1    wreg      void 
 35166 ;; Registers used:
 35167 ;;		status,2, status,0
 35168 ;; Tracked objects:
 35169 ;;		On entry : 0/0
 35170 ;;		On exit  : 0/0
 35171 ;;		Unchanged: 0/0
 35172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35177 ;;Total ram usage:        0 bytes
 35178 ;; Hardware stack levels used:    1
 35179 ;; Hardware stack levels required when called:   11
 35180 ;; This function calls:
 35181 ;;		Nothing
 35182 ;; This function is called by:
 35183 ;;		_I2c_WriteData
 35184 ;;		_I2c_ReadData
 35185 ;; This function uses a non-reentrant model
 35186 ;;
 35187                           
 35188                           	psect	text164
 35189  00696E                     __ptext164:
 35190                           	opt stack 0
 35191  00696E                     _StartCondition:
 35192                           	opt stack 14
 35193                           
 35194                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 35195                           
 35196                           ;incstack = 0
 35197  00696E  8071               	bsf	3953,0,c	;volatile
 35198  006970  0012               	return		;funcret
 35199  006972                     __end_of_StartCondition:
 35200                           	opt stack 0
 35201                           tosu	equ	0xFFF
 35202                           tosh	equ	0xFFE
 35203                           tosl	equ	0xFFD
 35204                           pclath	equ	0xFFA
 35205                           tblptru	equ	0xFF8
 35206                           tblptrh	equ	0xFF7
 35207                           tblptrl	equ	0xFF6
 35208                           tablat	equ	0xFF5
 35209                           prodh	equ	0xFF4
 35210                           prodl	equ	0xFF3
 35211                           intcon	equ	0xFF2
 35212                           intcon2	equ	0xFF1
 35213                           intcon3	equ	0xFF0
 35214                           indf0	equ	0xFEF
 35215                           postinc0	equ	0xFEE
 35216                           plusw0	equ	0xFEB
 35217                           fsr0h	equ	0xFEA
 35218                           fsr0l	equ	0xFE9
 35219                           wreg	equ	0xFE8
 35220                           indf1	equ	0xFE7
 35221                           postinc1	equ	0xFE6
 35222                           postdec1	equ	0xFE5
 35223                           plusw1	equ	0xFE3
 35224                           fsr1h	equ	0xFE2
 35225                           fsr1l	equ	0xFE1
 35226                           indf2	equ	0xFDF
 35227                           postinc2	equ	0xFDE
 35228                           postdec2	equ	0xFDD
 35229                           plusw2	equ	0xFDB
 35230                           fsr2h	equ	0xFDA
 35231                           fsr2l	equ	0xFD9
 35232                           status	equ	0xFD8
 35233                           
 35234 ;; *************** function _SetAckStatus *****************
 35235 ;; Defined at:
 35236 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35237 ;; Parameters:    Size  Location     Type
 35238 ;;  AckSts          1    wreg     unsigned char 
 35239 ;; Auto vars:     Size  Location     Type
 35240 ;;  AckSts          1   29[BANK0 ] unsigned char 
 35241 ;; Return value:  Size  Location     Type
 35242 ;;                  1    wreg      void 
 35243 ;; Registers used:
 35244 ;;		wreg
 35245 ;; Tracked objects:
 35246 ;;		On entry : 0/0
 35247 ;;		On exit  : 0/0
 35248 ;;		Unchanged: 0/0
 35249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35253 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35254 ;;Total ram usage:        1 bytes
 35255 ;; Hardware stack levels used:    1
 35256 ;; Hardware stack levels required when called:   11
 35257 ;; This function calls:
 35258 ;;		Nothing
 35259 ;; This function is called by:
 35260 ;;		_I2c_ReadData
 35261 ;; This function uses a non-reentrant model
 35262 ;;
 35263                           
 35264                           	psect	text165
 35265  006852                     __ptext165:
 35266                           	opt stack 0
 35267  006852                     _SetAckStatus:
 35268                           	opt stack 14
 35269                           
 35270                           ;incstack = 0
 35271                           ;SetAckStatus@AckSts stored from wreg
 35272  006852  0100               	movlb	0	; () banked
 35273  006854  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 35274                           
 35275                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 35276  006856  0100               	movlb	0	; () banked
 35277  006858  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 35278  00685A  D002               	bra	u12545
 35279  00685C  9A71               	bcf	3953,5,c	;volatile
 35280  00685E  D001               	bra	u12546
 35281  006860                     u12545:
 35282  006860  8A71               	bsf	3953,5,c	;volatile
 35283  006862                     u12546:
 35284                           
 35285                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 35286  006862  8871               	bsf	3953,4,c	;volatile
 35287  006864  0012               	return		;funcret
 35288  006866                     __end_of_SetAckStatus:
 35289                           	opt stack 0
 35290                           tosu	equ	0xFFF
 35291                           tosh	equ	0xFFE
 35292                           tosl	equ	0xFFD
 35293                           pclath	equ	0xFFA
 35294                           tblptru	equ	0xFF8
 35295                           tblptrh	equ	0xFF7
 35296                           tblptrl	equ	0xFF6
 35297                           tablat	equ	0xFF5
 35298                           prodh	equ	0xFF4
 35299                           prodl	equ	0xFF3
 35300                           intcon	equ	0xFF2
 35301                           intcon2	equ	0xFF1
 35302                           intcon3	equ	0xFF0
 35303                           indf0	equ	0xFEF
 35304                           postinc0	equ	0xFEE
 35305                           plusw0	equ	0xFEB
 35306                           fsr0h	equ	0xFEA
 35307                           fsr0l	equ	0xFE9
 35308                           wreg	equ	0xFE8
 35309                           indf1	equ	0xFE7
 35310                           postinc1	equ	0xFE6
 35311                           postdec1	equ	0xFE5
 35312                           plusw1	equ	0xFE3
 35313                           fsr1h	equ	0xFE2
 35314                           fsr1l	equ	0xFE1
 35315                           indf2	equ	0xFDF
 35316                           postinc2	equ	0xFDE
 35317                           postdec2	equ	0xFDD
 35318                           plusw2	equ	0xFDB
 35319                           fsr2h	equ	0xFDA
 35320                           fsr2l	equ	0xFD9
 35321                           status	equ	0xFD8
 35322                           
 35323 ;; *************** function _ReadByte *****************
 35324 ;; Defined at:
 35325 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35326 ;; Parameters:    Size  Location     Type
 35327 ;;		None
 35328 ;; Auto vars:     Size  Location     Type
 35329 ;;  Byte            1   29[BANK0 ] unsigned char 
 35330 ;; Return value:  Size  Location     Type
 35331 ;;                  1    wreg      unsigned char 
 35332 ;; Registers used:
 35333 ;;		wreg, status,2
 35334 ;; Tracked objects:
 35335 ;;		On entry : 0/0
 35336 ;;		On exit  : 0/0
 35337 ;;		Unchanged: 0/0
 35338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35343 ;;Total ram usage:        1 bytes
 35344 ;; Hardware stack levels used:    1
 35345 ;; Hardware stack levels required when called:   11
 35346 ;; This function calls:
 35347 ;;		Nothing
 35348 ;; This function is called by:
 35349 ;;		_I2c_ReadData
 35350 ;; This function uses a non-reentrant model
 35351 ;;
 35352                           
 35353                           	psect	text166
 35354  006934                     __ptext166:
 35355                           	opt stack 0
 35356  006934                     _ReadByte:
 35357                           	opt stack 14
 35358                           
 35359                           ;i2c_drv.c: 207: UINT8 Byte;
 35360                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 35361                           
 35362                           ;incstack = 0
 35363  006934  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 35364                           
 35365                           ;i2c_drv.c: 213: return Byte;
 35366  006938  0100               	movlb	0	; () banked
 35367  00693A  517D               	movf	ReadByte@Byte& (0+255),w,b
 35368  00693C  0012               	return	
 35369  00693E                     __end_of_ReadByte:
 35370                           	opt stack 0
 35371                           tosu	equ	0xFFF
 35372                           tosh	equ	0xFFE
 35373                           tosl	equ	0xFFD
 35374                           pclath	equ	0xFFA
 35375                           tblptru	equ	0xFF8
 35376                           tblptrh	equ	0xFF7
 35377                           tblptrl	equ	0xFF6
 35378                           tablat	equ	0xFF5
 35379                           prodh	equ	0xFF4
 35380                           prodl	equ	0xFF3
 35381                           intcon	equ	0xFF2
 35382                           intcon2	equ	0xFF1
 35383                           intcon3	equ	0xFF0
 35384                           indf0	equ	0xFEF
 35385                           postinc0	equ	0xFEE
 35386                           plusw0	equ	0xFEB
 35387                           fsr0h	equ	0xFEA
 35388                           fsr0l	equ	0xFE9
 35389                           wreg	equ	0xFE8
 35390                           indf1	equ	0xFE7
 35391                           postinc1	equ	0xFE6
 35392                           postdec1	equ	0xFE5
 35393                           plusw1	equ	0xFE3
 35394                           fsr1h	equ	0xFE2
 35395                           fsr1l	equ	0xFE1
 35396                           indf2	equ	0xFDF
 35397                           postinc2	equ	0xFDE
 35398                           postdec2	equ	0xFDD
 35399                           plusw2	equ	0xFDB
 35400                           fsr2h	equ	0xFDA
 35401                           fsr2l	equ	0xFD9
 35402                           status	equ	0xFD8
 35403                           
 35404 ;; *************** function _GenerateEvt *****************
 35405 ;; Defined at:
 35406 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35407 ;; Parameters:    Size  Location     Type
 35408 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35409 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 35410 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 35411 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 35412 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 35413 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 35414 ;; Auto vars:     Size  Location     Type
 35415 ;;  EventStatus     1   31[BANK0 ] enum E7727
 35416 ;; Return value:  Size  Location     Type
 35417 ;;                  1    wreg      enum E7699
 35418 ;; Registers used:
 35419 ;;		wreg, fsr2l, fsr2h, status,2
 35420 ;; Tracked objects:
 35421 ;;		On entry : 0/0
 35422 ;;		On exit  : 0/0
 35423 ;;		Unchanged: 0/0
 35424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35428 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35429 ;;Total ram usage:        3 bytes
 35430 ;; Hardware stack levels used:    1
 35431 ;; Hardware stack levels required when called:   11
 35432 ;; This function calls:
 35433 ;;		Nothing
 35434 ;; This function is called by:
 35435 ;;		_I2c_ReadData
 35436 ;;		_CheckModem
 35437 ;;		_TurnOnModem
 35438 ;;		_ConfigureModem
 35439 ;;		_ModemEvtParser
 35440 ;;		_GetSmsSm
 35441 ;;		_Mdm_RequestSmsData
 35442 ;;		_I2cSlv_SendI2cMsg
 35443 ;;		_I2cSlv_ReceiveI2cMsg
 35444 ;;		_RiSm
 35445 ;;		_Mdm_SendSmsData
 35446 ;;		_MdmHttp_InitGprsNetwork
 35447 ;;		_MdmHttp_GetMethod
 35448 ;;		_Alarm
 35449 ;; This function uses a non-reentrant model
 35450 ;;
 35451                           
 35452                           	psect	text167
 35453  0067CA                     __ptext167:
 35454                           	opt stack 0
 35455  0067CA                     _GenerateEvt:
 35456                           	opt stack 13
 35457                           
 35458                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 35459                           
 35460                           ; BSR set to: 0
 35461                           ;incstack = 0
 35462  0067CA  0E00               	movlw	0
 35463  0067CC  0100               	movlb	0	; () banked
 35464  0067CE  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 35465                           
 35466                           ; BSR set to: 0
 35467                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 35468  0067D0  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 35469  0067D4  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 35470  0067D8  0E02               	movlw	2
 35471  0067DA  6EDF               	movwf	indf2,c
 35472                           
 35473                           ; BSR set to: 0
 35474                           ;os_ser.c: 83: EventStatus = EventSent;
 35475  0067DC  0E02               	movlw	2
 35476  0067DE  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 35477  0067E0  0012               	return	
 35478  0067E2                     __end_of_GenerateEvt:
 35479                           	opt stack 0
 35480                           tosu	equ	0xFFF
 35481                           tosh	equ	0xFFE
 35482                           tosl	equ	0xFFD
 35483                           pclath	equ	0xFFA
 35484                           tblptru	equ	0xFF8
 35485                           tblptrh	equ	0xFF7
 35486                           tblptrl	equ	0xFF6
 35487                           tablat	equ	0xFF5
 35488                           prodh	equ	0xFF4
 35489                           prodl	equ	0xFF3
 35490                           intcon	equ	0xFF2
 35491                           intcon2	equ	0xFF1
 35492                           intcon3	equ	0xFF0
 35493                           indf0	equ	0xFEF
 35494                           postinc0	equ	0xFEE
 35495                           plusw0	equ	0xFEB
 35496                           fsr0h	equ	0xFEA
 35497                           fsr0l	equ	0xFE9
 35498                           wreg	equ	0xFE8
 35499                           indf1	equ	0xFE7
 35500                           postinc1	equ	0xFE6
 35501                           postdec1	equ	0xFE5
 35502                           plusw1	equ	0xFE3
 35503                           fsr1h	equ	0xFE2
 35504                           fsr1l	equ	0xFE1
 35505                           indf2	equ	0xFDF
 35506                           postinc2	equ	0xFDE
 35507                           postdec2	equ	0xFDD
 35508                           plusw2	equ	0xFDB
 35509                           fsr2h	equ	0xFDA
 35510                           fsr2l	equ	0xFD9
 35511                           status	equ	0xFD8
 35512                           
 35513 ;; *************** function _EnableReceiver *****************
 35514 ;; Defined at:
 35515 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35516 ;; Parameters:    Size  Location     Type
 35517 ;;		None
 35518 ;; Auto vars:     Size  Location     Type
 35519 ;;		None
 35520 ;; Return value:  Size  Location     Type
 35521 ;;                  1    wreg      void 
 35522 ;; Registers used:
 35523 ;;		status,2, status,0
 35524 ;; Tracked objects:
 35525 ;;		On entry : 0/0
 35526 ;;		On exit  : 0/0
 35527 ;;		Unchanged: 0/0
 35528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35533 ;;Total ram usage:        0 bytes
 35534 ;; Hardware stack levels used:    1
 35535 ;; Hardware stack levels required when called:   11
 35536 ;; This function calls:
 35537 ;;		Nothing
 35538 ;; This function is called by:
 35539 ;;		_I2c_ReadData
 35540 ;; This function uses a non-reentrant model
 35541 ;;
 35542                           
 35543                           	psect	text168
 35544  006972                     __ptext168:
 35545                           	opt stack 0
 35546  006972                     _EnableReceiver:
 35547                           	opt stack 14
 35548                           
 35549                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 35550                           
 35551                           ; BSR set to: 0
 35552                           ;incstack = 0
 35553  006972  8671               	bsf	3953,3,c	;volatile
 35554  006974  0012               	return		;funcret
 35555  006976                     __end_of_EnableReceiver:
 35556                           	opt stack 0
 35557                           tosu	equ	0xFFF
 35558                           tosh	equ	0xFFE
 35559                           tosl	equ	0xFFD
 35560                           pclath	equ	0xFFA
 35561                           tblptru	equ	0xFF8
 35562                           tblptrh	equ	0xFF7
 35563                           tblptrl	equ	0xFF6
 35564                           tablat	equ	0xFF5
 35565                           prodh	equ	0xFF4
 35566                           prodl	equ	0xFF3
 35567                           intcon	equ	0xFF2
 35568                           intcon2	equ	0xFF1
 35569                           intcon3	equ	0xFF0
 35570                           indf0	equ	0xFEF
 35571                           postinc0	equ	0xFEE
 35572                           plusw0	equ	0xFEB
 35573                           fsr0h	equ	0xFEA
 35574                           fsr0l	equ	0xFE9
 35575                           wreg	equ	0xFE8
 35576                           indf1	equ	0xFE7
 35577                           postinc1	equ	0xFE6
 35578                           postdec1	equ	0xFE5
 35579                           plusw1	equ	0xFE3
 35580                           fsr1h	equ	0xFE2
 35581                           fsr1l	equ	0xFE1
 35582                           indf2	equ	0xFDF
 35583                           postinc2	equ	0xFDE
 35584                           postdec2	equ	0xFDD
 35585                           plusw2	equ	0xFDB
 35586                           fsr2h	equ	0xFDA
 35587                           fsr2l	equ	0xFD9
 35588                           status	equ	0xFD8
 35589                           
 35590 ;; *************** function _CheckTxStatus *****************
 35591 ;; Defined at:
 35592 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35593 ;; Parameters:    Size  Location     Type
 35594 ;;		None
 35595 ;; Auto vars:     Size  Location     Type
 35596 ;;		None
 35597 ;; Return value:  Size  Location     Type
 35598 ;;                  1    wreg      unsigned char 
 35599 ;; Registers used:
 35600 ;;		wreg, status,2, status,0
 35601 ;; Tracked objects:
 35602 ;;		On entry : 0/0
 35603 ;;		On exit  : 0/0
 35604 ;;		Unchanged: 0/0
 35605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35610 ;;Total ram usage:        0 bytes
 35611 ;; Hardware stack levels used:    1
 35612 ;; Hardware stack levels required when called:   11
 35613 ;; This function calls:
 35614 ;;		Nothing
 35615 ;; This function is called by:
 35616 ;;		_I2c_WriteData
 35617 ;;		_I2c_ReadData
 35618 ;; This function uses a non-reentrant model
 35619 ;;
 35620                           
 35621                           	psect	text169
 35622  00693E                     __ptext169:
 35623                           	opt stack 0
 35624  00693E                     _CheckTxStatus:
 35625                           	opt stack 14
 35626                           
 35627                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 35628                           
 35629                           ;incstack = 0
 35630  00693E  4073               	rrncf	3955,w,c	;volatile
 35631  006940  42E8               	rrncf	wreg,f,c
 35632  006942  0B3F               	andlw	63
 35633  006944  0B01               	andlw	1
 35634  006946  0012               	return	
 35635  006948                     __end_of_CheckTxStatus:
 35636                           	opt stack 0
 35637                           tosu	equ	0xFFF
 35638                           tosh	equ	0xFFE
 35639                           tosl	equ	0xFFD
 35640                           pclath	equ	0xFFA
 35641                           tblptru	equ	0xFF8
 35642                           tblptrh	equ	0xFF7
 35643                           tblptrl	equ	0xFF6
 35644                           tablat	equ	0xFF5
 35645                           prodh	equ	0xFF4
 35646                           prodl	equ	0xFF3
 35647                           intcon	equ	0xFF2
 35648                           intcon2	equ	0xFF1
 35649                           intcon3	equ	0xFF0
 35650                           indf0	equ	0xFEF
 35651                           postinc0	equ	0xFEE
 35652                           plusw0	equ	0xFEB
 35653                           fsr0h	equ	0xFEA
 35654                           fsr0l	equ	0xFE9
 35655                           wreg	equ	0xFE8
 35656                           indf1	equ	0xFE7
 35657                           postinc1	equ	0xFE6
 35658                           postdec1	equ	0xFE5
 35659                           plusw1	equ	0xFE3
 35660                           fsr1h	equ	0xFE2
 35661                           fsr1l	equ	0xFE1
 35662                           indf2	equ	0xFDF
 35663                           postinc2	equ	0xFDE
 35664                           postdec2	equ	0xFDD
 35665                           plusw2	equ	0xFDB
 35666                           fsr2h	equ	0xFDA
 35667                           fsr2l	equ	0xFD9
 35668                           status	equ	0xFD8
 35669                           
 35670 ;; *************** function _CheckAckStatus *****************
 35671 ;; Defined at:
 35672 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35673 ;; Parameters:    Size  Location     Type
 35674 ;;		None
 35675 ;; Auto vars:     Size  Location     Type
 35676 ;;		None
 35677 ;; Return value:  Size  Location     Type
 35678 ;;                  1    wreg      unsigned char 
 35679 ;; Registers used:
 35680 ;;		wreg, status,2, status,0
 35681 ;; Tracked objects:
 35682 ;;		On entry : 0/0
 35683 ;;		On exit  : 0/0
 35684 ;;		Unchanged: 0/0
 35685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35690 ;;Total ram usage:        0 bytes
 35691 ;; Hardware stack levels used:    1
 35692 ;; Hardware stack levels required when called:   11
 35693 ;; This function calls:
 35694 ;;		Nothing
 35695 ;; This function is called by:
 35696 ;;		_I2c_WriteData
 35697 ;;		_I2c_ReadData
 35698 ;; This function uses a non-reentrant model
 35699 ;;
 35700                           
 35701                           	psect	text170
 35702  006948                     __ptext170:
 35703                           	opt stack 0
 35704  006948                     _CheckAckStatus:
 35705                           	opt stack 14
 35706                           
 35707                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 35708                           
 35709                           ;incstack = 0
 35710  006948  4471               	rlncf	3953,w,c	;volatile
 35711  00694A  46E8               	rlncf	wreg,f,c
 35712  00694C  0B03               	andlw	3
 35713  00694E  0B01               	andlw	1
 35714  006950  0012               	return	
 35715  006952                     __end_of_CheckAckStatus:
 35716                           	opt stack 0
 35717                           tosu	equ	0xFFF
 35718                           tosh	equ	0xFFE
 35719                           tosl	equ	0xFFD
 35720                           pclath	equ	0xFFA
 35721                           tblptru	equ	0xFF8
 35722                           tblptrh	equ	0xFF7
 35723                           tblptrl	equ	0xFF6
 35724                           tablat	equ	0xFF5
 35725                           prodh	equ	0xFF4
 35726                           prodl	equ	0xFF3
 35727                           intcon	equ	0xFF2
 35728                           intcon2	equ	0xFF1
 35729                           intcon3	equ	0xFF0
 35730                           indf0	equ	0xFEF
 35731                           postinc0	equ	0xFEE
 35732                           plusw0	equ	0xFEB
 35733                           fsr0h	equ	0xFEA
 35734                           fsr0l	equ	0xFE9
 35735                           wreg	equ	0xFE8
 35736                           indf1	equ	0xFE7
 35737                           postinc1	equ	0xFE6
 35738                           postdec1	equ	0xFE5
 35739                           plusw1	equ	0xFE3
 35740                           fsr1h	equ	0xFE2
 35741                           fsr1l	equ	0xFE1
 35742                           indf2	equ	0xFDF
 35743                           postinc2	equ	0xFDE
 35744                           postdec2	equ	0xFDD
 35745                           plusw2	equ	0xFDB
 35746                           fsr2h	equ	0xFDA
 35747                           fsr2l	equ	0xFD9
 35748                           status	equ	0xFD8
 35749                           
 35750 ;; *************** function _LowPriorityIsr *****************
 35751 ;; Defined at:
 35752 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 35753 ;; Parameters:    Size  Location     Type
 35754 ;;		None
 35755 ;; Auto vars:     Size  Location     Type
 35756 ;;		None
 35757 ;; Return value:  Size  Location     Type
 35758 ;;                  1    wreg      void 
 35759 ;; Registers used:
 35760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35761 ;; Tracked objects:
 35762 ;;		On entry : 0/0
 35763 ;;		On exit  : 0/0
 35764 ;;		Unchanged: 0/0
 35765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35768 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35769 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35770 ;;Total ram usage:       21 bytes
 35771 ;; Hardware stack levels used:    1
 35772 ;; Hardware stack levels required when called:   10
 35773 ;; This function calls:
 35774 ;;		_Tmr_Tmr2Isr
 35775 ;; This function is called by:
 35776 ;;		Interrupt level 1
 35777 ;; This function uses a non-reentrant model
 35778 ;;
 35779                           
 35780                           	psect	intcodelo
 35781  000018                     __pintcodelo:
 35782                           	opt stack 0
 35783  000018                     _LowPriorityIsr:
 35784                           	opt stack 8
 35785                           
 35786                           ;incstack = 0
 35787  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 35788  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 35789  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 35790  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 35791  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 35792  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 35793  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 35794  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 35795  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 35796  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 35797  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 35798  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 35799  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 35800  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 35801  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 35802  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 35803  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 35804  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 35805  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 35806  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 35807  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 35808  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 35809                           
 35810                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 35811  00006E  B29E               	btfsc	3998,1,c	;volatile
 35812                           
 35813                           ;irq.c: 259: {
 35814                           ;irq.c: 261: Tmr_Tmr2Isr();
 35815  000070  ECB7  F032         	call	_Tmr_Tmr2Isr	;wreg free
 35816  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 35817  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 35818  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 35819  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 35820  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 35821  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 35822  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 35823  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 35824  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 35825  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 35826  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 35827  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 35828  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 35829  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 35830  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 35831  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 35832  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 35833  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 35834  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 35835  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 35836  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 35837  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 35838  0000CA  0010               	retfie	
 35839  0000CC                     __end_of_LowPriorityIsr:
 35840                           	opt stack 0
 35841                           tosu	equ	0xFFF
 35842                           tosh	equ	0xFFE
 35843                           tosl	equ	0xFFD
 35844                           pclatu	equ	0xFFB
 35845                           pclath	equ	0xFFA
 35846                           tblptru	equ	0xFF8
 35847                           tblptrh	equ	0xFF7
 35848                           tblptrl	equ	0xFF6
 35849                           tablat	equ	0xFF5
 35850                           prodh	equ	0xFF4
 35851                           prodl	equ	0xFF3
 35852                           intcon	equ	0xFF2
 35853                           intcon2	equ	0xFF1
 35854                           intcon3	equ	0xFF0
 35855                           indf0	equ	0xFEF
 35856                           postinc0	equ	0xFEE
 35857                           plusw0	equ	0xFEB
 35858                           fsr0h	equ	0xFEA
 35859                           fsr0l	equ	0xFE9
 35860                           wreg	equ	0xFE8
 35861                           indf1	equ	0xFE7
 35862                           postinc1	equ	0xFE6
 35863                           postdec1	equ	0xFE5
 35864                           plusw1	equ	0xFE3
 35865                           fsr1h	equ	0xFE2
 35866                           fsr1l	equ	0xFE1
 35867                           bsr	equ	0xFE0
 35868                           indf2	equ	0xFDF
 35869                           postinc2	equ	0xFDE
 35870                           postdec2	equ	0xFDD
 35871                           plusw2	equ	0xFDB
 35872                           fsr2h	equ	0xFDA
 35873                           fsr2l	equ	0xFD9
 35874                           status	equ	0xFD8
 35875                           
 35876 ;; *************** function _Tmr_Tmr2Isr *****************
 35877 ;; Defined at:
 35878 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 35879 ;; Parameters:    Size  Location     Type
 35880 ;;		None
 35881 ;; Auto vars:     Size  Location     Type
 35882 ;;		None
 35883 ;; Return value:  Size  Location     Type
 35884 ;;                  1    wreg      void 
 35885 ;; Registers used:
 35886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35887 ;; Tracked objects:
 35888 ;;		On entry : 0/0
 35889 ;;		On exit  : 0/0
 35890 ;;		Unchanged: 0/0
 35891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35896 ;;Total ram usage:        0 bytes
 35897 ;; Hardware stack levels used:    1
 35898 ;; Hardware stack levels required when called:    9
 35899 ;; This function calls:
 35900 ;;		Absolute function
 35901 ;;		_Sch_SchmIntService
 35902 ;; This function is called by:
 35903 ;;		_LowPriorityIsr
 35904 ;; This function uses a non-reentrant model
 35905 ;;
 35906                           
 35907                           	psect	text172
 35908  00656E                     __ptext172:
 35909                           	opt stack 0
 35910  00656E                     _Tmr_Tmr2Isr:
 35911                           	opt stack 8
 35912                           
 35913                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 35914                           
 35915                           ;incstack = 0
 35916  00656E  929E               	bcf	3998,1,c	;volatile
 35917                           
 35918                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 35919  006570  0102               	movlb	2	; () banked
 35920  006572  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 35921  006574  11E9               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35922  006576  B4D8               	btfsc	status,2,c
 35923  006578  0012               	return	
 35924                           
 35925                           ; BSR set to: 2
 35926                           ;tmr_drv.c: 315: {
 35927                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 35928  00657A  D801               	call	i1u1632_28
 35929  00657C  0012               	return	
 35930  00657E                     i1u1632_28:
 35931  00657E  0005               	push	
 35932  006580  6EFA               	movwf	pclath,c
 35933  006582  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 35934  006584  6EFD               	movwf	tosl,c
 35935  006586  51E9               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35936  006588  6EFE               	movwf	tosh,c
 35937  00658A  50F8               	movf	tblptru,w,c
 35938  00658C  6EFF               	movwf	tosu,c
 35939  00658E  50FA               	movf	pclath,w,c
 35940  006590  0012               	return		;indir
 35941  006592                     __end_of_Tmr_Tmr2Isr:
 35942                           	opt stack 0
 35943                           tosu	equ	0xFFF
 35944                           tosh	equ	0xFFE
 35945                           tosl	equ	0xFFD
 35946                           pclatu	equ	0xFFB
 35947                           pclath	equ	0xFFA
 35948                           tblptru	equ	0xFF8
 35949                           tblptrh	equ	0xFF7
 35950                           tblptrl	equ	0xFF6
 35951                           tablat	equ	0xFF5
 35952                           prodh	equ	0xFF4
 35953                           prodl	equ	0xFF3
 35954                           intcon	equ	0xFF2
 35955                           intcon2	equ	0xFF1
 35956                           intcon3	equ	0xFF0
 35957                           indf0	equ	0xFEF
 35958                           postinc0	equ	0xFEE
 35959                           plusw0	equ	0xFEB
 35960                           fsr0h	equ	0xFEA
 35961                           fsr0l	equ	0xFE9
 35962                           wreg	equ	0xFE8
 35963                           indf1	equ	0xFE7
 35964                           postinc1	equ	0xFE6
 35965                           postdec1	equ	0xFE5
 35966                           plusw1	equ	0xFE3
 35967                           fsr1h	equ	0xFE2
 35968                           fsr1l	equ	0xFE1
 35969                           bsr	equ	0xFE0
 35970                           indf2	equ	0xFDF
 35971                           postinc2	equ	0xFDE
 35972                           postdec2	equ	0xFDD
 35973                           plusw2	equ	0xFDB
 35974                           fsr2h	equ	0xFDA
 35975                           fsr2l	equ	0xFD9
 35976                           status	equ	0xFD8
 35977                           
 35978 ;; *************** function _Sch_SchmIntService *****************
 35979 ;; Defined at:
 35980 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35981 ;; Parameters:    Size  Location     Type
 35982 ;;		None
 35983 ;; Auto vars:     Size  Location     Type
 35984 ;;		None
 35985 ;; Return value:  Size  Location     Type
 35986 ;;                  1    wreg      void 
 35987 ;; Registers used:
 35988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35989 ;; Tracked objects:
 35990 ;;		On entry : 0/0
 35991 ;;		On exit  : 0/0
 35992 ;;		Unchanged: 0/0
 35993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35998 ;;Total ram usage:        0 bytes
 35999 ;; Hardware stack levels used:    1
 36000 ;; Hardware stack levels required when called:    8
 36001 ;; This function calls:
 36002 ;;		_OsAlrm_ProcessOsAlarms
 36003 ;;		_UpdateOsCounters
 36004 ;;		_UpdateSchFlag
 36005 ;; This function is called by:
 36006 ;;		_SystemInit
 36007 ;;		_Tmr_Tmr2Isr
 36008 ;; This function uses a non-reentrant model
 36009 ;;
 36010                           
 36011                           	psect	text173
 36012  0068EC                     __ptext173:
 36013                           	opt stack 0
 36014  0068EC                     _Sch_SchmIntService:
 36015                           	opt stack 8
 36016                           
 36017                           ;os_sched.c: 217: UpdateSchFlag();
 36018                           
 36019                           ;incstack = 0
 36020  0068EC  EC7D  F033         	call	_UpdateSchFlag	;wreg free
 36021                           
 36022                           ;os_sched.c: 219: UpdateOsCounters();
 36023  0068F0  EC66  F034         	call	_UpdateOsCounters	;wreg free
 36024                           
 36025                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 36026  0068F4  EC20  F013         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 36027  0068F8  0012               	return		;funcret
 36028  0068FA                     __end_of_Sch_SchmIntService:
 36029                           	opt stack 0
 36030                           tosu	equ	0xFFF
 36031                           tosh	equ	0xFFE
 36032                           tosl	equ	0xFFD
 36033                           pclatu	equ	0xFFB
 36034                           pclath	equ	0xFFA
 36035                           tblptru	equ	0xFF8
 36036                           tblptrh	equ	0xFF7
 36037                           tblptrl	equ	0xFF6
 36038                           tablat	equ	0xFF5
 36039                           prodh	equ	0xFF4
 36040                           prodl	equ	0xFF3
 36041                           intcon	equ	0xFF2
 36042                           intcon2	equ	0xFF1
 36043                           intcon3	equ	0xFF0
 36044                           indf0	equ	0xFEF
 36045                           postinc0	equ	0xFEE
 36046                           plusw0	equ	0xFEB
 36047                           fsr0h	equ	0xFEA
 36048                           fsr0l	equ	0xFE9
 36049                           wreg	equ	0xFE8
 36050                           indf1	equ	0xFE7
 36051                           postinc1	equ	0xFE6
 36052                           postdec1	equ	0xFE5
 36053                           plusw1	equ	0xFE3
 36054                           fsr1h	equ	0xFE2
 36055                           fsr1l	equ	0xFE1
 36056                           bsr	equ	0xFE0
 36057                           indf2	equ	0xFDF
 36058                           postinc2	equ	0xFDE
 36059                           postdec2	equ	0xFDD
 36060                           plusw2	equ	0xFDB
 36061                           fsr2h	equ	0xFDA
 36062                           fsr2l	equ	0xFD9
 36063                           status	equ	0xFD8
 36064                           
 36065 ;; *************** function _UpdateSchFlag *****************
 36066 ;; Defined at:
 36067 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36068 ;; Parameters:    Size  Location     Type
 36069 ;;		None
 36070 ;; Auto vars:     Size  Location     Type
 36071 ;;		None
 36072 ;; Return value:  Size  Location     Type
 36073 ;;                  1    wreg      void 
 36074 ;; Registers used:
 36075 ;;		wreg, status,2, status,0
 36076 ;; Tracked objects:
 36077 ;;		On entry : 0/0
 36078 ;;		On exit  : 0/0
 36079 ;;		Unchanged: 0/0
 36080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36085 ;;Total ram usage:        0 bytes
 36086 ;; Hardware stack levels used:    1
 36087 ;; Hardware stack levels required when called:    4
 36088 ;; This function calls:
 36089 ;;		Nothing
 36090 ;; This function is called by:
 36091 ;;		_Sch_SchmIntService
 36092 ;; This function uses a non-reentrant model
 36093 ;;
 36094                           
 36095                           	psect	text174
 36096  0066FA                     __ptext174:
 36097                           	opt stack 0
 36098  0066FA                     _UpdateSchFlag:
 36099                           	opt stack 11
 36100                           
 36101                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 36102                           ;os_sched.c: 138: InterruptCounter++;
 36103                           
 36104                           ;incstack = 0
 36105  0066FA  0102               	movlb	2	; () banked
 36106  0066FC  4BDA               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 36107  0066FE  2BDB               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 36108                           
 36109                           ; BSR set to: 2
 36110                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 36111  006700  51DA               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 36112  006702  11DB               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 36113  006704  B4D8               	btfsc	status,2,c
 36114  006706  0012               	return	
 36115                           
 36116                           ; BSR set to: 2
 36117                           ;os_sched.c: 141: {
 36118                           ;os_sched.c: 143: InterruptCounter = 0;
 36119  006708  0E00               	movlw	0
 36120  00670A  6FDB               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 36121  00670C  0E00               	movlw	0
 36122  00670E  6FDA               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 36123                           
 36124                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 36125  006710  0E00               	movlw	0
 36126  006712  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 36127  006714  0012               	return	
 36128  006716                     __end_of_UpdateSchFlag:
 36129                           	opt stack 0
 36130                           tosu	equ	0xFFF
 36131                           tosh	equ	0xFFE
 36132                           tosl	equ	0xFFD
 36133                           pclatu	equ	0xFFB
 36134                           pclath	equ	0xFFA
 36135                           tblptru	equ	0xFF8
 36136                           tblptrh	equ	0xFF7
 36137                           tblptrl	equ	0xFF6
 36138                           tablat	equ	0xFF5
 36139                           prodh	equ	0xFF4
 36140                           prodl	equ	0xFF3
 36141                           intcon	equ	0xFF2
 36142                           intcon2	equ	0xFF1
 36143                           intcon3	equ	0xFF0
 36144                           indf0	equ	0xFEF
 36145                           postinc0	equ	0xFEE
 36146                           plusw0	equ	0xFEB
 36147                           fsr0h	equ	0xFEA
 36148                           fsr0l	equ	0xFE9
 36149                           wreg	equ	0xFE8
 36150                           indf1	equ	0xFE7
 36151                           postinc1	equ	0xFE6
 36152                           postdec1	equ	0xFE5
 36153                           plusw1	equ	0xFE3
 36154                           fsr1h	equ	0xFE2
 36155                           fsr1l	equ	0xFE1
 36156                           bsr	equ	0xFE0
 36157                           indf2	equ	0xFDF
 36158                           postinc2	equ	0xFDE
 36159                           postdec2	equ	0xFDD
 36160                           plusw2	equ	0xFDB
 36161                           fsr2h	equ	0xFDA
 36162                           fsr2l	equ	0xFD9
 36163                           status	equ	0xFD8
 36164                           
 36165 ;; *************** function _UpdateOsCounters *****************
 36166 ;; Defined at:
 36167 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36168 ;; Parameters:    Size  Location     Type
 36169 ;;		None
 36170 ;; Auto vars:     Size  Location     Type
 36171 ;;		None
 36172 ;; Return value:  Size  Location     Type
 36173 ;;                  1    wreg      void 
 36174 ;; Registers used:
 36175 ;;		wreg, status,2, status,0
 36176 ;; Tracked objects:
 36177 ;;		On entry : 0/0
 36178 ;;		On exit  : 0/0
 36179 ;;		Unchanged: 0/0
 36180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36185 ;;Total ram usage:        0 bytes
 36186 ;; Hardware stack levels used:    1
 36187 ;; Hardware stack levels required when called:    4
 36188 ;; This function calls:
 36189 ;;		Nothing
 36190 ;; This function is called by:
 36191 ;;		_Sch_SchmIntService
 36192 ;; This function uses a non-reentrant model
 36193 ;;
 36194                           
 36195                           	psect	text175
 36196  0068CC                     __ptext175:
 36197                           	opt stack 0
 36198  0068CC                     _UpdateOsCounters:
 36199                           	opt stack 11
 36200                           
 36201                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 36202                           
 36203                           ; BSR set to: 2
 36204                           ;incstack = 0
 36205  0068CC  0E01               	movlw	1
 36206  0068CE  0103               	movlb	3	; () banked
 36207  0068D0  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 36208  0068D2  0E00               	movlw	0
 36209  0068D4  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 36210  0068D6  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 36211  0068D8  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 36212                           
 36213                           ; BSR set to: 3
 36214  0068DA  0012               	return		;funcret
 36215  0068DC                     __end_of_UpdateOsCounters:
 36216                           	opt stack 0
 36217                           tosu	equ	0xFFF
 36218                           tosh	equ	0xFFE
 36219                           tosl	equ	0xFFD
 36220                           pclatu	equ	0xFFB
 36221                           pclath	equ	0xFFA
 36222                           tblptru	equ	0xFF8
 36223                           tblptrh	equ	0xFF7
 36224                           tblptrl	equ	0xFF6
 36225                           tablat	equ	0xFF5
 36226                           prodh	equ	0xFF4
 36227                           prodl	equ	0xFF3
 36228                           intcon	equ	0xFF2
 36229                           intcon2	equ	0xFF1
 36230                           intcon3	equ	0xFF0
 36231                           indf0	equ	0xFEF
 36232                           postinc0	equ	0xFEE
 36233                           plusw0	equ	0xFEB
 36234                           fsr0h	equ	0xFEA
 36235                           fsr0l	equ	0xFE9
 36236                           wreg	equ	0xFE8
 36237                           indf1	equ	0xFE7
 36238                           postinc1	equ	0xFE6
 36239                           postdec1	equ	0xFE5
 36240                           plusw1	equ	0xFE3
 36241                           fsr1h	equ	0xFE2
 36242                           fsr1l	equ	0xFE1
 36243                           bsr	equ	0xFE0
 36244                           indf2	equ	0xFDF
 36245                           postinc2	equ	0xFDE
 36246                           postdec2	equ	0xFDD
 36247                           plusw2	equ	0xFDB
 36248                           fsr2h	equ	0xFDA
 36249                           fsr2l	equ	0xFD9
 36250                           status	equ	0xFD8
 36251                           
 36252 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 36253 ;; Defined at:
 36254 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 36255 ;; Parameters:    Size  Location     Type
 36256 ;;		None
 36257 ;; Auto vars:     Size  Location     Type
 36258 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 36259 ;; Return value:  Size  Location     Type
 36260 ;;                  1    wreg      void 
 36261 ;; Registers used:
 36262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36263 ;; Tracked objects:
 36264 ;;		On entry : 0/0
 36265 ;;		On exit  : 0/0
 36266 ;;		Unchanged: 0/0
 36267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36269 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36270 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36271 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36272 ;;Total ram usage:       10 bytes
 36273 ;; Hardware stack levels used:    1
 36274 ;; Hardware stack levels required when called:    7
 36275 ;; This function calls:
 36276 ;;		_I2cDummyTx
 36277 ;;		_OsAlrm_ClearOsAlarm
 36278 ;;		i1___wmul
 36279 ;; This function is called by:
 36280 ;;		_Sch_SchmIntService
 36281 ;; This function uses a non-reentrant model
 36282 ;;
 36283                           
 36284                           	psect	text176
 36285  002640                     __ptext176:
 36286                           	opt stack 0
 36287  002640                     _OsAlrm_ProcessOsAlarms:
 36288                           	opt stack 8
 36289                           
 36290                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 36291                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 36292                           
 36293                           ; BSR set to: 3
 36294                           ;incstack = 0
 36295  002640  0E00               	movlw	0
 36296  002642  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 36297  002644  0E00               	movlw	0
 36298  002646  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 36299  002648  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 36300  00264A  E105               	bnz	i1u1584_20
 36301  00264C  0E14               	movlw	20
 36302  00264E  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 36303  002650  B0D8               	btfsc	status,0,c
 36304  002652  0012               	return	
 36305  002654  D001               	goto	i1l742
 36306  002656                     i1u1584_20:
 36307  002656  0012               	return	
 36308  002658                     i1l742:
 36309                           
 36310                           ;os_alarms.c: 121: {
 36311                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 36312  002658  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36313  00265C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36314  002660  0E00               	movlw	0
 36315  002662  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36316  002664  0E0B               	movlw	11
 36317  002666  6E1B               	movwf	i1___wmul@multiplicand,c
 36318  002668  EC6E  F032         	call	i1___wmul	;wreg free
 36319  00266C  0E00               	movlw	low _OsAlarms
 36320  00266E  2419               	addwf	?i1___wmul,w,c
 36321  002670  6ED9               	movwf	fsr2l,c
 36322  002672  0E06               	movlw	high _OsAlarms
 36323  002674  201A               	addwfc	?i1___wmul+1,w,c
 36324  002676  6EDA               	movwf	fsr2h,c
 36325  002678  04DE               	decf	postinc2,w,c
 36326  00267A  A4D8               	btfss	status,2,c
 36327  00267C  D086               	goto	i1u1588_29
 36328                           
 36329                           ;os_alarms.c: 124: {
 36330                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 36331  00267E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36332  002682  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36333  002686  0E00               	movlw	0
 36334  002688  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36335  00268A  0E0B               	movlw	11
 36336  00268C  6E1B               	movwf	i1___wmul@multiplicand,c
 36337  00268E  EC6E  F032         	call	i1___wmul	;wreg free
 36338  002692  0E01               	movlw	1
 36339  002694  2619               	addwf	?i1___wmul,f,c
 36340  002696  0E00               	movlw	0
 36341  002698  221A               	addwfc	?i1___wmul+1,f,c
 36342  00269A  0E00               	movlw	low _OsAlarms
 36343  00269C  2419               	addwf	?i1___wmul,w,c
 36344  00269E  6ED9               	movwf	fsr2l,c
 36345  0026A0  0E06               	movlw	high _OsAlarms
 36346  0026A2  201A               	addwfc	?i1___wmul+1,w,c
 36347  0026A4  6EDA               	movwf	fsr2h,c
 36348  0026A6  2ADE               	incf	postinc2,f,c
 36349  0026A8  0E00               	movlw	0
 36350  0026AA  22DE               	addwfc	postinc2,f,c
 36351  0026AC  22DE               	addwfc	postinc2,f,c
 36352  0026AE  22DE               	addwfc	postinc2,f,c
 36353                           
 36354                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 36355  0026B0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36356  0026B4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36357  0026B8  0E00               	movlw	0
 36358  0026BA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36359  0026BC  0E0B               	movlw	11
 36360  0026BE  6E1B               	movwf	i1___wmul@multiplicand,c
 36361  0026C0  EC6E  F032         	call	i1___wmul	;wreg free
 36362  0026C4  0E05               	movlw	5
 36363  0026C6  2619               	addwf	?i1___wmul,f,c
 36364  0026C8  0E00               	movlw	0
 36365  0026CA  221A               	addwfc	?i1___wmul+1,f,c
 36366  0026CC  0E00               	movlw	low _OsAlarms
 36367  0026CE  2419               	addwf	?i1___wmul,w,c
 36368  0026D0  6ED9               	movwf	fsr2l,c
 36369  0026D2  0E06               	movlw	high _OsAlarms
 36370  0026D4  201A               	addwfc	?i1___wmul+1,w,c
 36371  0026D6  6EDA               	movwf	fsr2h,c
 36372  0026D8  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36373  0026DC  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36374  0026E0  0E00               	movlw	0
 36375  0026E2  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36376  0026E4  0E0B               	movlw	11
 36377  0026E6  6E1B               	movwf	i1___wmul@multiplicand,c
 36378  0026E8  EC6E  F032         	call	i1___wmul	;wreg free
 36379  0026EC  0E01               	movlw	1
 36380  0026EE  2619               	addwf	?i1___wmul,f,c
 36381  0026F0  0E00               	movlw	0
 36382  0026F2  221A               	addwfc	?i1___wmul+1,f,c
 36383  0026F4  0E00               	movlw	low _OsAlarms
 36384  0026F6  2419               	addwf	?i1___wmul,w,c
 36385  0026F8  6EE1               	movwf	fsr1l,c
 36386  0026FA  0E06               	movlw	high _OsAlarms
 36387  0026FC  201A               	addwfc	?i1___wmul+1,w,c
 36388  0026FE  6EE2               	movwf	fsr1h,c
 36389  002700  50DE               	movf	postinc2,w,c
 36390  002702  5CE6               	subwf	postinc1,w,c
 36391  002704  50DE               	movf	postinc2,w,c
 36392  002706  58E6               	subwfb	postinc1,w,c
 36393  002708  50DE               	movf	postinc2,w,c
 36394  00270A  58E6               	subwfb	postinc1,w,c
 36395  00270C  50DE               	movf	postinc2,w,c
 36396  00270E  58E6               	subwfb	postinc1,w,c
 36397  002710  A0D8               	btfss	status,0,c
 36398  002712  D03B               	goto	i1u1588_29
 36399                           
 36400                           ;os_alarms.c: 129: {
 36401                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 36402  002714  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 36403  002716  EC44  F02C         	call	_OsAlrm_ClearOsAlarm
 36404                           
 36405                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 36406  00271A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36407  00271E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36408  002722  0E00               	movlw	0
 36409  002724  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36410  002726  0E0B               	movlw	11
 36411  002728  6E1B               	movwf	i1___wmul@multiplicand,c
 36412  00272A  EC6E  F032         	call	i1___wmul	;wreg free
 36413  00272E  0E09               	movlw	9
 36414  002730  2619               	addwf	?i1___wmul,f,c
 36415  002732  0E00               	movlw	0
 36416  002734  221A               	addwfc	?i1___wmul+1,f,c
 36417  002736  0E00               	movlw	low _OsAlarms
 36418  002738  2419               	addwf	?i1___wmul,w,c
 36419  00273A  6ED9               	movwf	fsr2l,c
 36420  00273C  0E06               	movlw	high _OsAlarms
 36421  00273E  201A               	addwfc	?i1___wmul+1,w,c
 36422  002740  6EDA               	movwf	fsr2h,c
 36423  002742  50DE               	movf	postinc2,w,c
 36424  002744  10DE               	iorwf	postinc2,w,c
 36425  002746  B4D8               	btfsc	status,2,c
 36426  002748  D020               	goto	i1u1588_29
 36427                           
 36428                           ;os_alarms.c: 134: {
 36429                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 36430  00274A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36431  00274E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36432  002752  0E00               	movlw	0
 36433  002754  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36434  002756  0E0B               	movlw	11
 36435  002758  6E1B               	movwf	i1___wmul@multiplicand,c
 36436  00275A  EC6E  F032         	call	i1___wmul	;wreg free
 36437  00275E  0E09               	movlw	9
 36438  002760  2619               	addwf	?i1___wmul,f,c
 36439  002762  0E00               	movlw	0
 36440  002764  221A               	addwfc	?i1___wmul+1,f,c
 36441  002766  0E00               	movlw	low _OsAlarms
 36442  002768  2419               	addwf	?i1___wmul,w,c
 36443  00276A  6ED9               	movwf	fsr2l,c
 36444  00276C  0E06               	movlw	high _OsAlarms
 36445  00276E  201A               	addwfc	?i1___wmul+1,w,c
 36446  002770  6EDA               	movwf	fsr2h,c
 36447  002772  D801               	call	i1u1588_28
 36448  002774  D00A               	goto	i1u1588_29
 36449  002776                     i1u1588_28:
 36450  002776  0005               	push	
 36451  002778  6EFA               	movwf	pclath,c
 36452  00277A  50DE               	movf	postinc2,w,c
 36453  00277C  6EFD               	movwf	tosl,c
 36454  00277E  50DE               	movf	postinc2,w,c
 36455  002780  6EFE               	movwf	tosh,c
 36456  002782  50F8               	movf	tblptru,w,c
 36457  002784  6EFF               	movwf	tosu,c
 36458  002786  50FA               	movf	pclath,w,c
 36459  002788  0012               	return		;indir
 36460  00278A                     i1u1588_29:
 36461  00278A  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 36462  00278C  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 36463  00278E  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 36464  002790  E101               	bnz	i1l747
 36465  002792  D75C               	goto	L77
 36466  002794                     i1l747:
 36467  002794  0012               	return		;funcret
 36468  002796                     __end_of_OsAlrm_ProcessOsAlarms:
 36469                           	opt stack 0
 36470                           tosu	equ	0xFFF
 36471                           tosh	equ	0xFFE
 36472                           tosl	equ	0xFFD
 36473                           pclatu	equ	0xFFB
 36474                           pclath	equ	0xFFA
 36475                           tblptru	equ	0xFF8
 36476                           tblptrh	equ	0xFF7
 36477                           tblptrl	equ	0xFF6
 36478                           tablat	equ	0xFF5
 36479                           prodh	equ	0xFF4
 36480                           prodl	equ	0xFF3
 36481                           intcon	equ	0xFF2
 36482                           intcon2	equ	0xFF1
 36483                           intcon3	equ	0xFF0
 36484                           indf0	equ	0xFEF
 36485                           postinc0	equ	0xFEE
 36486                           plusw0	equ	0xFEB
 36487                           fsr0h	equ	0xFEA
 36488                           fsr0l	equ	0xFE9
 36489                           wreg	equ	0xFE8
 36490                           indf1	equ	0xFE7
 36491                           postinc1	equ	0xFE6
 36492                           postdec1	equ	0xFE5
 36493                           plusw1	equ	0xFE3
 36494                           fsr1h	equ	0xFE2
 36495                           fsr1l	equ	0xFE1
 36496                           bsr	equ	0xFE0
 36497                           indf2	equ	0xFDF
 36498                           postinc2	equ	0xFDE
 36499                           postdec2	equ	0xFDD
 36500                           plusw2	equ	0xFDB
 36501                           fsr2h	equ	0xFDA
 36502                           fsr2l	equ	0xFD9
 36503                           status	equ	0xFD8
 36504                           
 36505 ;; *************** function i1___wmul *****************
 36506 ;; Defined at:
 36507 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 36508 ;; Parameters:    Size  Location     Type
 36509 ;;  multiplier      2   24[COMRAM] unsigned int 
 36510 ;;  multiplicand    2   26[COMRAM] unsigned int 
 36511 ;; Auto vars:     Size  Location     Type
 36512 ;;  __wmul          2   28[COMRAM] unsigned int 
 36513 ;; Return value:  Size  Location     Type
 36514 ;;                  2   24[COMRAM] unsigned int 
 36515 ;; Registers used:
 36516 ;;		wreg, status,2, status,0, prodl, prodh
 36517 ;; Tracked objects:
 36518 ;;		On entry : 0/0
 36519 ;;		On exit  : 0/0
 36520 ;;		Unchanged: 0/0
 36521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36526 ;;Total ram usage:        6 bytes
 36527 ;; Hardware stack levels used:    1
 36528 ;; Hardware stack levels required when called:    4
 36529 ;; This function calls:
 36530 ;;		Nothing
 36531 ;; This function is called by:
 36532 ;;		_OsAlrm_ProcessOsAlarms
 36533 ;; This function uses a non-reentrant model
 36534 ;;
 36535                           
 36536                           	psect	text177
 36537  0064DC                     __ptext177:
 36538                           	opt stack 0
 36539  0064DC                     i1___wmul:
 36540                           	opt stack 10
 36541                           
 36542                           ;incstack = 0
 36543  0064DC  5019               	movf	i1___wmul@multiplier,w,c
 36544  0064DE  021B               	mulwf	i1___wmul@multiplicand,c
 36545  0064E0  CFF3 F01D          	movff	prodl,i1___wmul@product
 36546  0064E4  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 36547  0064E8  5019               	movf	i1___wmul@multiplier,w,c
 36548  0064EA  021C               	mulwf	i1___wmul@multiplicand+1,c
 36549  0064EC  50F3               	movf	prodl,w,c
 36550  0064EE  261E               	addwf	i1___wmul@product+1,f,c
 36551  0064F0  501A               	movf	i1___wmul@multiplier+1,w,c
 36552  0064F2  021B               	mulwf	i1___wmul@multiplicand,c
 36553  0064F4  50F3               	movf	prodl,w,c
 36554  0064F6  261E               	addwf	i1___wmul@product+1,f,c
 36555  0064F8  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 36556  0064FC  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 36557  006500  0012               	return	
 36558  006502                     __end_ofi1___wmul:
 36559                           	opt stack 0
 36560                           tosu	equ	0xFFF
 36561                           tosh	equ	0xFFE
 36562                           tosl	equ	0xFFD
 36563                           pclatu	equ	0xFFB
 36564                           pclath	equ	0xFFA
 36565                           tblptru	equ	0xFF8
 36566                           tblptrh	equ	0xFF7
 36567                           tblptrl	equ	0xFF6
 36568                           tablat	equ	0xFF5
 36569                           prodh	equ	0xFF4
 36570                           prodl	equ	0xFF3
 36571                           intcon	equ	0xFF2
 36572                           intcon2	equ	0xFF1
 36573                           intcon3	equ	0xFF0
 36574                           indf0	equ	0xFEF
 36575                           postinc0	equ	0xFEE
 36576                           plusw0	equ	0xFEB
 36577                           fsr0h	equ	0xFEA
 36578                           fsr0l	equ	0xFE9
 36579                           wreg	equ	0xFE8
 36580                           indf1	equ	0xFE7
 36581                           postinc1	equ	0xFE6
 36582                           postdec1	equ	0xFE5
 36583                           plusw1	equ	0xFE3
 36584                           fsr1h	equ	0xFE2
 36585                           fsr1l	equ	0xFE1
 36586                           bsr	equ	0xFE0
 36587                           indf2	equ	0xFDF
 36588                           postinc2	equ	0xFDE
 36589                           postdec2	equ	0xFDD
 36590                           plusw2	equ	0xFDB
 36591                           fsr2h	equ	0xFDA
 36592                           fsr2l	equ	0xFD9
 36593                           status	equ	0xFD8
 36594                           
 36595 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 36596 ;; Defined at:
 36597 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 36598 ;; Parameters:    Size  Location     Type
 36599 ;;  OsAlarmId       1    wreg     unsigned char 
 36600 ;; Auto vars:     Size  Location     Type
 36601 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 36602 ;; Return value:  Size  Location     Type
 36603 ;;                  1    wreg      void 
 36604 ;; Registers used:
 36605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36606 ;; Tracked objects:
 36607 ;;		On entry : 0/0
 36608 ;;		On exit  : 0/0
 36609 ;;		Unchanged: 0/0
 36610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36615 ;;Total ram usage:        1 bytes
 36616 ;; Hardware stack levels used:    1
 36617 ;; Hardware stack levels required when called:    4
 36618 ;; This function calls:
 36619 ;;		Nothing
 36620 ;; This function is called by:
 36621 ;;		_OsAlrm_ProcessOsAlarms
 36622 ;; This function uses a non-reentrant model
 36623 ;;
 36624                           
 36625                           	psect	text178
 36626  005888                     __ptext178:
 36627                           	opt stack 0
 36628  005888                     _OsAlrm_ClearOsAlarm:
 36629                           	opt stack 10
 36630                           
 36631                           ;incstack = 0
 36632                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 36633  005888  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 36634                           
 36635                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 36636  00588A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36637  00588C  0D0B               	mullw	11
 36638  00588E  0E00               	movlw	low _OsAlarms
 36639  005890  24F3               	addwf	prodl,w,c
 36640  005892  6ED9               	movwf	fsr2l,c
 36641  005894  0E06               	movlw	high _OsAlarms
 36642  005896  20F4               	addwfc	prodh,w,c
 36643  005898  6EDA               	movwf	fsr2h,c
 36644  00589A  0E00               	movlw	0
 36645  00589C  6EDF               	movwf	indf2,c
 36646                           
 36647                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 36648  00589E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36649  0058A0  0D0B               	mullw	11
 36650  0058A2  0E01               	movlw	1
 36651  0058A4  26F3               	addwf	prodl,f,c
 36652  0058A6  0E00               	movlw	0
 36653  0058A8  22F4               	addwfc	prodh,f,c
 36654  0058AA  0E00               	movlw	low _OsAlarms
 36655  0058AC  24F3               	addwf	prodl,w,c
 36656  0058AE  6ED9               	movwf	fsr2l,c
 36657  0058B0  0E06               	movlw	high _OsAlarms
 36658  0058B2  20F4               	addwfc	prodh,w,c
 36659  0058B4  6EDA               	movwf	fsr2h,c
 36660  0058B6  6ADE               	clrf	postinc2,c
 36661  0058B8  6ADE               	clrf	postinc2,c
 36662  0058BA  6ADE               	clrf	postinc2,c
 36663  0058BC  6ADD               	clrf	postdec2,c
 36664                           
 36665                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 36666  0058BE  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36667  0058C0  0D0B               	mullw	11
 36668  0058C2  0E05               	movlw	5
 36669  0058C4  26F3               	addwf	prodl,f,c
 36670  0058C6  0E00               	movlw	0
 36671  0058C8  22F4               	addwfc	prodh,f,c
 36672  0058CA  0E00               	movlw	low _OsAlarms
 36673  0058CC  24F3               	addwf	prodl,w,c
 36674  0058CE  6ED9               	movwf	fsr2l,c
 36675  0058D0  0E06               	movlw	high _OsAlarms
 36676  0058D2  20F4               	addwfc	prodh,w,c
 36677  0058D4  6EDA               	movwf	fsr2h,c
 36678  0058D6  6ADE               	clrf	postinc2,c
 36679  0058D8  6ADE               	clrf	postinc2,c
 36680  0058DA  6ADE               	clrf	postinc2,c
 36681  0058DC  6ADD               	clrf	postdec2,c
 36682  0058DE  0012               	return		;funcret
 36683  0058E0                     __end_of_OsAlrm_ClearOsAlarm:
 36684                           	opt stack 0
 36685                           tosu	equ	0xFFF
 36686                           tosh	equ	0xFFE
 36687                           tosl	equ	0xFFD
 36688                           pclatu	equ	0xFFB
 36689                           pclath	equ	0xFFA
 36690                           tblptru	equ	0xFF8
 36691                           tblptrh	equ	0xFF7
 36692                           tblptrl	equ	0xFF6
 36693                           tablat	equ	0xFF5
 36694                           prodh	equ	0xFF4
 36695                           prodl	equ	0xFF3
 36696                           intcon	equ	0xFF2
 36697                           intcon2	equ	0xFF1
 36698                           intcon3	equ	0xFF0
 36699                           indf0	equ	0xFEF
 36700                           postinc0	equ	0xFEE
 36701                           plusw0	equ	0xFEB
 36702                           fsr0h	equ	0xFEA
 36703                           fsr0l	equ	0xFE9
 36704                           wreg	equ	0xFE8
 36705                           indf1	equ	0xFE7
 36706                           postinc1	equ	0xFE6
 36707                           postdec1	equ	0xFE5
 36708                           plusw1	equ	0xFE3
 36709                           fsr1h	equ	0xFE2
 36710                           fsr1l	equ	0xFE1
 36711                           bsr	equ	0xFE0
 36712                           indf2	equ	0xFDF
 36713                           postinc2	equ	0xFDE
 36714                           postdec2	equ	0xFDD
 36715                           plusw2	equ	0xFDB
 36716                           fsr2h	equ	0xFDA
 36717                           fsr2l	equ	0xFD9
 36718                           status	equ	0xFD8
 36719                           
 36720 ;; *************** function _I2cDummyTx *****************
 36721 ;; Defined at:
 36722 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36723 ;; Parameters:    Size  Location     Type
 36724 ;;		None
 36725 ;; Auto vars:     Size  Location     Type
 36726 ;;		None
 36727 ;; Return value:  Size  Location     Type
 36728 ;;                  1    wreg      void 
 36729 ;; Registers used:
 36730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36731 ;; Tracked objects:
 36732 ;;		On entry : 0/0
 36733 ;;		On exit  : 0/0
 36734 ;;		Unchanged: 0/0
 36735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36740 ;;Total ram usage:        0 bytes
 36741 ;; Hardware stack levels used:    1
 36742 ;; Hardware stack levels required when called:    6
 36743 ;; This function calls:
 36744 ;;		i1_I2cSlv_SendI2cMsg
 36745 ;; This function is called by:
 36746 ;;		_I2cSlv_MainTask
 36747 ;;		_OsAlrm_ProcessOsAlarms
 36748 ;; This function uses a non-reentrant model
 36749 ;;
 36750                           
 36751                           	psect	text179
 36752  006716                     __ptext179:
 36753                           	opt stack 0
 36754  006716                     _I2cDummyTx:
 36755                           	opt stack 8
 36756                           
 36757                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 36758                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 36759                           
 36760                           ;incstack = 0
 36761  006716  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 36762  006718  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 36763  00671A  0E01               	movlw	high I2cDummyTx@DummyBuffer
 36764  00671C  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 36765  00671E  0E00               	movlw	0
 36766  006720  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 36767  006722  0E01               	movlw	1
 36768  006724  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 36769  006726  ECDA  F030         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 36770                           
 36771                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 36772  00672A  0E01               	movlw	1
 36773  00672C  0101               	movlb	1	; () banked
 36774  00672E  6FE7               	movwf	_I2cBusStatus& (0+255),b
 36775                           
 36776                           ; BSR set to: 1
 36777  006730  0012               	return		;funcret
 36778  006732                     __end_of_I2cDummyTx:
 36779                           	opt stack 0
 36780                           tosu	equ	0xFFF
 36781                           tosh	equ	0xFFE
 36782                           tosl	equ	0xFFD
 36783                           pclatu	equ	0xFFB
 36784                           pclath	equ	0xFFA
 36785                           tblptru	equ	0xFF8
 36786                           tblptrh	equ	0xFF7
 36787                           tblptrl	equ	0xFF6
 36788                           tablat	equ	0xFF5
 36789                           prodh	equ	0xFF4
 36790                           prodl	equ	0xFF3
 36791                           intcon	equ	0xFF2
 36792                           intcon2	equ	0xFF1
 36793                           intcon3	equ	0xFF0
 36794                           indf0	equ	0xFEF
 36795                           postinc0	equ	0xFEE
 36796                           plusw0	equ	0xFEB
 36797                           fsr0h	equ	0xFEA
 36798                           fsr0l	equ	0xFE9
 36799                           wreg	equ	0xFE8
 36800                           indf1	equ	0xFE7
 36801                           postinc1	equ	0xFE6
 36802                           postdec1	equ	0xFE5
 36803                           plusw1	equ	0xFE3
 36804                           fsr1h	equ	0xFE2
 36805                           fsr1l	equ	0xFE1
 36806                           bsr	equ	0xFE0
 36807                           indf2	equ	0xFDF
 36808                           postinc2	equ	0xFDE
 36809                           postdec2	equ	0xFDD
 36810                           plusw2	equ	0xFDB
 36811                           fsr2h	equ	0xFDA
 36812                           fsr2l	equ	0xFD9
 36813                           status	equ	0xFD8
 36814                           
 36815 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 36816 ;; Defined at:
 36817 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36818 ;; Parameters:    Size  Location     Type
 36819 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 36820 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 36821 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 36822 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 36823 ;;  DataLenght      1   30[COMRAM] unsigned char 
 36824 ;; Auto vars:     Size  Location     Type
 36825 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 36826 ;; Return value:  Size  Location     Type
 36827 ;;                  1    wreg      unsigned char 
 36828 ;; Registers used:
 36829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36830 ;; Tracked objects:
 36831 ;;		On entry : 0/0
 36832 ;;		On exit  : 0/0
 36833 ;;		Unchanged: 0/0
 36834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36838 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36839 ;;Total ram usage:        5 bytes
 36840 ;; Hardware stack levels used:    1
 36841 ;; Hardware stack levels required when called:    5
 36842 ;; This function calls:
 36843 ;;		i1_GenerateEvt
 36844 ;; This function is called by:
 36845 ;;		_I2cDummyTx
 36846 ;; This function uses a non-reentrant model
 36847 ;;
 36848                           
 36849                           	psect	text180
 36850  0061B4                     __ptext180:
 36851                           	opt stack 0
 36852  0061B4                     i1_I2cSlv_SendI2cMsg:
 36853                           	opt stack 8
 36854                           
 36855                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 36856                           
 36857                           ; BSR set to: 1
 36858                           ;incstack = 0
 36859  0061B4  0E00               	movlw	0
 36860  0061B6  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36861                           
 36862                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 36863  0061B8  0100               	movlb	0	; () banked
 36864  0061BA  05CD               	decf	_I2cComSts& (0+255),w,b
 36865  0061BC  B4D8               	btfsc	status,2,c
 36866  0061BE  D014               	goto	i1l1412
 36867                           
 36868                           ; BSR set to: 0
 36869                           ;i2c_slv.c: 257: {
 36870                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 36871  0061C0  C01E  F39E         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 36872                           
 36873                           ; BSR set to: 0
 36874                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 36875  0061C4  0E00               	movlw	0
 36876  0061C6  0103               	movlb	3	; () banked
 36877  0061C8  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 36878                           
 36879                           ; BSR set to: 3
 36880                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 36881  0061CA  C01F  F3A2         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 36882                           
 36883                           ; BSR set to: 3
 36884                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 36885  0061CE  C01C  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 36886  0061D2  C01D  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 36887                           
 36888                           ; BSR set to: 3
 36889                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 36890  0061D6  0ED7               	movlw	low _I2cWriteDataEvt
 36891  0061D8  6E19               	movwf	i1GenerateEvt@Event,c
 36892  0061DA  0E00               	movlw	high _I2cWriteDataEvt
 36893  0061DC  6E1A               	movwf	i1GenerateEvt@Event+1,c
 36894  0061DE  EC13  F034         	call	i1_GenerateEvt	;wreg free
 36895                           
 36896                           ;i2c_slv.c: 267: TxSts = 1u;
 36897  0061E2  0E01               	movlw	1
 36898  0061E4  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36899                           
 36900                           ;i2c_slv.c: 268: }
 36901  0061E6  0012               	return	
 36902  0061E8                     i1l1412:
 36903                           
 36904                           ;i2c_slv.c: 269: else
 36905                           ;i2c_slv.c: 270: {
 36906                           ;i2c_slv.c: 272: TxSts = 0u;
 36907  0061E8  0E00               	movlw	0
 36908  0061EA  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36909  0061EC  0012               	return	
 36910  0061EE                     __end_ofi1_I2cSlv_SendI2cMsg:
 36911                           	opt stack 0
 36912                           tosu	equ	0xFFF
 36913                           tosh	equ	0xFFE
 36914                           tosl	equ	0xFFD
 36915                           pclatu	equ	0xFFB
 36916                           pclath	equ	0xFFA
 36917                           tblptru	equ	0xFF8
 36918                           tblptrh	equ	0xFF7
 36919                           tblptrl	equ	0xFF6
 36920                           tablat	equ	0xFF5
 36921                           prodh	equ	0xFF4
 36922                           prodl	equ	0xFF3
 36923                           intcon	equ	0xFF2
 36924                           intcon2	equ	0xFF1
 36925                           intcon3	equ	0xFF0
 36926                           indf0	equ	0xFEF
 36927                           postinc0	equ	0xFEE
 36928                           plusw0	equ	0xFEB
 36929                           fsr0h	equ	0xFEA
 36930                           fsr0l	equ	0xFE9
 36931                           wreg	equ	0xFE8
 36932                           indf1	equ	0xFE7
 36933                           postinc1	equ	0xFE6
 36934                           postdec1	equ	0xFE5
 36935                           plusw1	equ	0xFE3
 36936                           fsr1h	equ	0xFE2
 36937                           fsr1l	equ	0xFE1
 36938                           bsr	equ	0xFE0
 36939                           indf2	equ	0xFDF
 36940                           postinc2	equ	0xFDE
 36941                           postdec2	equ	0xFDD
 36942                           plusw2	equ	0xFDB
 36943                           fsr2h	equ	0xFDA
 36944                           fsr2l	equ	0xFD9
 36945                           status	equ	0xFD8
 36946                           
 36947 ;; *************** function i1_GenerateEvt *****************
 36948 ;; Defined at:
 36949 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36950 ;; Parameters:    Size  Location     Type
 36951 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 36952 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36953 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36954 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36955 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36956 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36957 ;; Auto vars:     Size  Location     Type
 36958 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 36959 ;; Return value:  Size  Location     Type
 36960 ;;                  1    wreg      enum E7699
 36961 ;; Registers used:
 36962 ;;		wreg, fsr2l, fsr2h, status,2
 36963 ;; Tracked objects:
 36964 ;;		On entry : 0/0
 36965 ;;		On exit  : 0/0
 36966 ;;		Unchanged: 0/0
 36967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36972 ;;Total ram usage:        3 bytes
 36973 ;; Hardware stack levels used:    1
 36974 ;; Hardware stack levels required when called:    4
 36975 ;; This function calls:
 36976 ;;		Nothing
 36977 ;; This function is called by:
 36978 ;;		i1_I2cSlv_SendI2cMsg
 36979 ;; This function uses a non-reentrant model
 36980 ;;
 36981                           
 36982                           	psect	text181
 36983  006826                     __ptext181:
 36984                           	opt stack 0
 36985  006826                     i1_GenerateEvt:
 36986                           	opt stack 8
 36987                           
 36988                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36989                           
 36990                           ;incstack = 0
 36991  006826  0E00               	movlw	0
 36992  006828  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36993                           
 36994                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36995  00682A  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 36996  00682E  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 36997  006832  0E02               	movlw	2
 36998  006834  6EDF               	movwf	indf2,c
 36999                           
 37000                           ;os_ser.c: 83: EventStatus = EventSent;
 37001  006836  0E02               	movlw	2
 37002  006838  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 37003  00683A  0012               	return	
 37004  00683C                     __end_ofi1_GenerateEvt:
 37005                           	opt stack 0
 37006                           tosu	equ	0xFFF
 37007                           tosh	equ	0xFFE
 37008                           tosl	equ	0xFFD
 37009                           pclatu	equ	0xFFB
 37010                           pclath	equ	0xFFA
 37011                           tblptru	equ	0xFF8
 37012                           tblptrh	equ	0xFF7
 37013                           tblptrl	equ	0xFF6
 37014                           tablat	equ	0xFF5
 37015                           prodh	equ	0xFF4
 37016                           prodl	equ	0xFF3
 37017                           intcon	equ	0xFF2
 37018                           intcon2	equ	0xFF1
 37019                           intcon3	equ	0xFF0
 37020                           indf0	equ	0xFEF
 37021                           postinc0	equ	0xFEE
 37022                           plusw0	equ	0xFEB
 37023                           fsr0h	equ	0xFEA
 37024                           fsr0l	equ	0xFE9
 37025                           wreg	equ	0xFE8
 37026                           indf1	equ	0xFE7
 37027                           postinc1	equ	0xFE6
 37028                           postdec1	equ	0xFE5
 37029                           plusw1	equ	0xFE3
 37030                           fsr1h	equ	0xFE2
 37031                           fsr1l	equ	0xFE1
 37032                           bsr	equ	0xFE0
 37033                           indf2	equ	0xFDF
 37034                           postinc2	equ	0xFDE
 37035                           postdec2	equ	0xFDD
 37036                           plusw2	equ	0xFDB
 37037                           fsr2h	equ	0xFDA
 37038                           fsr2l	equ	0xFD9
 37039                           status	equ	0xFD8
 37040                           
 37041 ;; *************** function _HighPriorityIsr *****************
 37042 ;; Defined at:
 37043 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 37044 ;; Parameters:    Size  Location     Type
 37045 ;;		None
 37046 ;; Auto vars:     Size  Location     Type
 37047 ;;		None
 37048 ;; Return value:  Size  Location     Type
 37049 ;;                  1    wreg      void 
 37050 ;; Registers used:
 37051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37052 ;; Tracked objects:
 37053 ;;		On entry : 0/0
 37054 ;;		On exit  : 0/0
 37055 ;;		Unchanged: 0/0
 37056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37059 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37060 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37061 ;;Total ram usage:       18 bytes
 37062 ;; Hardware stack levels used:    1
 37063 ;; Hardware stack levels required when called:    3
 37064 ;; This function calls:
 37065 ;;		_Mcu_Int0Isr
 37066 ;;		_Mcu_Int1Isr
 37067 ;;		_Rtcc_RtcIsr
 37068 ;;		_Uart_Uart1RxIsr
 37069 ;; This function is called by:
 37070 ;;		Interrupt level 2
 37071 ;; This function uses a non-reentrant model
 37072 ;;
 37073                           
 37074                           	psect	intcode
 37075  000008                     __pintcode:
 37076                           	opt stack 0
 37077  000008                     _HighPriorityIsr:
 37078                           	opt stack 8
 37079                           
 37080                           ;incstack = 0
 37081  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37082  00000A  EFB2  F022         	goto	int_func
 37083                           tosu	equ	0xFFF
 37084                           tosh	equ	0xFFE
 37085                           tosl	equ	0xFFD
 37086                           pclatu	equ	0xFFB
 37087                           pclath	equ	0xFFA
 37088                           tblptru	equ	0xFF8
 37089                           tblptrh	equ	0xFF7
 37090                           tblptrl	equ	0xFF6
 37091                           tablat	equ	0xFF5
 37092                           prodh	equ	0xFF4
 37093                           prodl	equ	0xFF3
 37094                           intcon	equ	0xFF2
 37095                           intcon2	equ	0xFF1
 37096                           intcon3	equ	0xFF0
 37097                           indf0	equ	0xFEF
 37098                           postinc0	equ	0xFEE
 37099                           plusw0	equ	0xFEB
 37100                           fsr0h	equ	0xFEA
 37101                           fsr0l	equ	0xFE9
 37102                           wreg	equ	0xFE8
 37103                           indf1	equ	0xFE7
 37104                           postinc1	equ	0xFE6
 37105                           postdec1	equ	0xFE5
 37106                           plusw1	equ	0xFE3
 37107                           fsr1h	equ	0xFE2
 37108                           fsr1l	equ	0xFE1
 37109                           bsr	equ	0xFE0
 37110                           indf2	equ	0xFDF
 37111                           postinc2	equ	0xFDE
 37112                           postdec2	equ	0xFDD
 37113                           plusw2	equ	0xFDB
 37114                           fsr2h	equ	0xFDA
 37115                           fsr2l	equ	0xFD9
 37116                           status	equ	0xFD8
 37117                           
 37118                           	psect	intcode_body
 37119  004564                     __pintcode_body:
 37120                           	opt stack 8
 37121  004564                     int_func:
 37122                           	opt stack 8
 37123  004564  CFFA F007          	movff	pclath,??_HighPriorityIsr
 37124  004568  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 37125  00456C  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 37126  004570  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 37127  004574  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 37128  004578  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 37129  00457C  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 37130  004580  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 37131  004584  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 37132  004588  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 37133  00458C  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 37134  004590  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 37135  004594  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 37136  004598  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 37137  00459C  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 37138  0045A0  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 37139  0045A4  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 37140  0045A8  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 37141                           
 37142                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 37143  0045AC  B2F2               	btfsc	intcon,1,c	;volatile
 37144                           
 37145                           ;irq.c: 158: {
 37146                           ;irq.c: 160: Mcu_Int0Isr();
 37147  0045AE  ECBF  F034         	call	_Mcu_Int0Isr	;wreg free
 37148                           
 37149                           ;irq.c: 161: }
 37150                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 37151  0045B2  B0F0               	btfsc	intcon3,0,c	;volatile
 37152                           
 37153                           ;irq.c: 167: {
 37154                           ;irq.c: 169: Mcu_Int1Isr();
 37155  0045B4  ECBD  F034         	call	_Mcu_Int1Isr	;wreg free
 37156                           
 37157                           ;irq.c: 170: }
 37158                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 37159  0045B8  B0A4               	btfsc	4004,0,c	;volatile
 37160                           
 37161                           ;irq.c: 203: {
 37162                           ;irq.c: 205: Rtcc_RtcIsr();
 37163  0045BA  ECBB  F034         	call	_Rtcc_RtcIsr	;wreg free
 37164                           
 37165                           ;irq.c: 206: }
 37166                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 37167  0045BE  BA9E               	btfsc	3998,5,c	;volatile
 37168                           
 37169                           ;irq.c: 212: {
 37170                           ;irq.c: 214: Uart_Uart1RxIsr();
 37171  0045C0  EC6E  F034         	call	_Uart_Uart1RxIsr	;wreg free
 37172  0045C4  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 37173  0045C8  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 37174  0045CC  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 37175  0045D0  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 37176  0045D4  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 37177  0045D8  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 37178  0045DC  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 37179  0045E0  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 37180  0045E4  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 37181  0045E8  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 37182  0045EC  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 37183  0045F0  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 37184  0045F4  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 37185  0045F8  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 37186  0045FC  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 37187  004600  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 37188  004604  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 37189  004608  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 37190  00460C  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 37191  00460E  0011               	retfie		f
 37192  004610                     __end_of_HighPriorityIsr:
 37193                           	opt stack 0
 37194                           tosu	equ	0xFFF
 37195                           tosh	equ	0xFFE
 37196                           tosl	equ	0xFFD
 37197                           pclatu	equ	0xFFB
 37198                           pclath	equ	0xFFA
 37199                           tblptru	equ	0xFF8
 37200                           tblptrh	equ	0xFF7
 37201                           tblptrl	equ	0xFF6
 37202                           tablat	equ	0xFF5
 37203                           prodh	equ	0xFF4
 37204                           prodl	equ	0xFF3
 37205                           intcon	equ	0xFF2
 37206                           intcon2	equ	0xFF1
 37207                           intcon3	equ	0xFF0
 37208                           indf0	equ	0xFEF
 37209                           postinc0	equ	0xFEE
 37210                           plusw0	equ	0xFEB
 37211                           fsr0h	equ	0xFEA
 37212                           fsr0l	equ	0xFE9
 37213                           wreg	equ	0xFE8
 37214                           indf1	equ	0xFE7
 37215                           postinc1	equ	0xFE6
 37216                           postdec1	equ	0xFE5
 37217                           plusw1	equ	0xFE3
 37218                           fsr1h	equ	0xFE2
 37219                           fsr1l	equ	0xFE1
 37220                           bsr	equ	0xFE0
 37221                           indf2	equ	0xFDF
 37222                           postinc2	equ	0xFDE
 37223                           postdec2	equ	0xFDD
 37224                           plusw2	equ	0xFDB
 37225                           fsr2h	equ	0xFDA
 37226                           fsr2l	equ	0xFD9
 37227                           status	equ	0xFD8
 37228                           
 37229 ;; *************** function _Uart_Uart1RxIsr *****************
 37230 ;; Defined at:
 37231 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 37232 ;; Parameters:    Size  Location     Type
 37233 ;;		None
 37234 ;; Auto vars:     Size  Location     Type
 37235 ;;		None
 37236 ;; Return value:  Size  Location     Type
 37237 ;;                  1    wreg      void 
 37238 ;; Registers used:
 37239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37240 ;; Tracked objects:
 37241 ;;		On entry : 0/0
 37242 ;;		On exit  : 0/0
 37243 ;;		Unchanged: 0/0
 37244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37249 ;;Total ram usage:        0 bytes
 37250 ;; Hardware stack levels used:    1
 37251 ;; Hardware stack levels required when called:    2
 37252 ;; This function calls:
 37253 ;;		_Uart_MdmGsmGprsReadService
 37254 ;; This function is called by:
 37255 ;;		_HighPriorityIsr
 37256 ;; This function uses a non-reentrant model
 37257 ;;
 37258                           
 37259                           	psect	text183
 37260  0068DC                     __ptext183:
 37261                           	opt stack 0
 37262  0068DC                     _Uart_Uart1RxIsr:
 37263                           	opt stack 8
 37264                           
 37265                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 37266                           ;uart_drv.c: 590: UartRxData = RCREG1;
 37267                           
 37268                           ;incstack = 0
 37269  0068DC  CFAF F02B          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 37270                           
 37271                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 37272  0068E0  C02B  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 37273  0068E4  0E01               	movlw	1
 37274  0068E6  ECF7  F01E         	call	_Uart_MdmGsmGprsReadService
 37275  0068EA  0012               	return		;funcret
 37276  0068EC                     __end_of_Uart_Uart1RxIsr:
 37277                           	opt stack 0
 37278                           tosu	equ	0xFFF
 37279                           tosh	equ	0xFFE
 37280                           tosl	equ	0xFFD
 37281                           pclatu	equ	0xFFB
 37282                           pclath	equ	0xFFA
 37283                           tblptru	equ	0xFF8
 37284                           tblptrh	equ	0xFF7
 37285                           tblptrl	equ	0xFF6
 37286                           tablat	equ	0xFF5
 37287                           prodh	equ	0xFF4
 37288                           prodl	equ	0xFF3
 37289                           intcon	equ	0xFF2
 37290                           intcon2	equ	0xFF1
 37291                           intcon3	equ	0xFF0
 37292                           indf0	equ	0xFEF
 37293                           postinc0	equ	0xFEE
 37294                           plusw0	equ	0xFEB
 37295                           fsr0h	equ	0xFEA
 37296                           fsr0l	equ	0xFE9
 37297                           wreg	equ	0xFE8
 37298                           indf1	equ	0xFE7
 37299                           postinc1	equ	0xFE6
 37300                           postdec1	equ	0xFE5
 37301                           plusw1	equ	0xFE3
 37302                           fsr1h	equ	0xFE2
 37303                           fsr1l	equ	0xFE1
 37304                           bsr	equ	0xFE0
 37305                           indf2	equ	0xFDF
 37306                           postinc2	equ	0xFDE
 37307                           postdec2	equ	0xFDD
 37308                           plusw2	equ	0xFDB
 37309                           fsr2h	equ	0xFDA
 37310                           fsr2l	equ	0xFD9
 37311                           status	equ	0xFD8
 37312                           
 37313 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 37314 ;; Defined at:
 37315 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 37316 ;; Parameters:    Size  Location     Type
 37317 ;;  Module          1    wreg     unsigned char 
 37318 ;;  UartData        1    3[COMRAM] unsigned char 
 37319 ;; Auto vars:     Size  Location     Type
 37320 ;;  Module          1    0[COMRAM] unsigned char 
 37321 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 37322 ;; Return value:  Size  Location     Type
 37323 ;;                  1    wreg      void 
 37324 ;; Registers used:
 37325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37326 ;; Tracked objects:
 37327 ;;		On entry : 0/0
 37328 ;;		On exit  : 0/0
 37329 ;;		Unchanged: 0/0
 37330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37331 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37334 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37335 ;;Total ram usage:        3 bytes
 37336 ;; Hardware stack levels used:    1
 37337 ;; Hardware stack levels required when called:    1
 37338 ;; This function calls:
 37339 ;;		i2_GenerateEvt
 37340 ;; This function is called by:
 37341 ;;		_Uart_Uart1RxIsr
 37342 ;; This function uses a non-reentrant model
 37343 ;;
 37344                           
 37345                           	psect	text184
 37346  003DEE                     __ptext184:
 37347                           	opt stack 0
 37348  003DEE                     _Uart_MdmGsmGprsReadService:
 37349                           	opt stack 8
 37350                           
 37351                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 37352                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 37353                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 37354                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 37355                           
 37356                           ;incstack = 0
 37357  003DEE  0E00               	movlw	0
 37358  003DF0  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 37359  003DF2  0E00               	movlw	0
 37360  003DF4  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 37361                           
 37362                           ;uart_drv.c: 383: switch (RxState)
 37363  003DF6  D058               	goto	i2l680
 37364  003DF8                     
 37365                           ;uart_drv.c: 387: if (UartData == '\r')
 37366  003DF8  0E0D               	movlw	13
 37367  003DFA  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 37368  003DFC  A4D8               	btfss	status,2,c
 37369  003DFE  D003               	goto	i2l682
 37370                           
 37371                           ;uart_drv.c: 388: {
 37372                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 37373  003E00  0E01               	movlw	1
 37374  003E02  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 37375                           
 37376                           ;uart_drv.c: 391: }
 37377  003E04  0012               	return	
 37378  003E06                     i2l682:
 37379                           
 37380                           ;uart_drv.c: 392: else
 37381                           ;uart_drv.c: 393: {
 37382                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 37383  003E06  0E90               	movlw	144
 37384  003E08  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37385  003E0A  0E01               	movlw	1
 37386  003E0C  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37387  003E0E  B0D8               	btfsc	status,0,c
 37388  003E10  0012               	return	
 37389                           
 37390                           ;uart_drv.c: 395: {
 37391                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 37392  003E12  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 37393  003E14  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37394  003E16  6ED9               	movwf	fsr2l,c
 37395  003E18  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 37396  003E1A  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37397  003E1C  6EDA               	movwf	fsr2h,c
 37398  003E1E  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 37399                           
 37400                           ;uart_drv.c: 399: RxCounter++;
 37401  003E22  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 37402  003E24  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 37403                           
 37404                           ;uart_drv.c: 400: }
 37405                           ;uart_drv.c: 401: }
 37406                           ;uart_drv.c: 402: break;
 37407  003E26  0012               	return	
 37408  003E28                     
 37409                           ;uart_drv.c: 406: if (UartData == '\n')
 37410  003E28  0E0A               	movlw	10
 37411  003E2A  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 37412  003E2C  A4D8               	btfss	status,2,c
 37413  003E2E  D035               	goto	i2l688
 37414                           
 37415                           ;uart_drv.c: 407: {
 37416                           ;uart_drv.c: 409: if (RxCounter > 0)
 37417  003E30  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37418  003E32  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37419  003E34  B4D8               	btfsc	status,2,c
 37420  003E36  D031               	goto	i2l688
 37421                           
 37422                           ;uart_drv.c: 410: {
 37423                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 37424  003E38  0E00               	movlw	0
 37425  003E3A  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 37426  003E3C  0E00               	movlw	0
 37427  003E3E  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 37428  003E40  D010               	goto	i2l689
 37429  003E42                     
 37430                           ;uart_drv.c: 413: {
 37431                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 37432  003E42  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 37433  003E44  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37434  003E46  6ED9               	movwf	fsr2l,c
 37435  003E48  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 37436  003E4A  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37437  003E4C  6EDA               	movwf	fsr2h,c
 37438  003E4E  0E58               	movlw	low _RxBuffer
 37439  003E50  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37440  003E52  6EE1               	movwf	fsr1l,c
 37441  003E54  0E0C               	movlw	high _RxBuffer
 37442  003E56  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37443  003E58  6EE2               	movwf	fsr1h,c
 37444  003E5A  CFDF FFE7          	movff	indf2,indf1
 37445  003E5E  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 37446  003E60  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 37447  003E62                     i2l689:
 37448  003E62  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37449  003E64  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37450  003E66  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37451  003E68  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37452  003E6A  A0D8               	btfss	status,0,c
 37453  003E6C  D7EA               	goto	i2l690
 37454                           
 37455                           ;uart_drv.c: 415: }
 37456                           ;uart_drv.c: 417: RxLen = RxCounter;
 37457  003E6E  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 37458  003E72  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 37459                           
 37460                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 37461  003E76  0E3C               	movlw	low _NewStringReceived
 37462  003E78  6E01               	movwf	i2GenerateEvt@Event,c
 37463  003E7A  0E00               	movlw	high _NewStringReceived
 37464  003E7C  6E02               	movwf	i2GenerateEvt@Event+1,c
 37465  003E7E  EC1E  F034         	call	i2_GenerateEvt	;wreg free
 37466                           
 37467                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 37468  003E82  0E3B               	movlw	low _NewMdmEvtParserRequest
 37469  003E84  6E01               	movwf	i2GenerateEvt@Event,c
 37470  003E86  0E00               	movlw	high _NewMdmEvtParserRequest
 37471  003E88  6E02               	movwf	i2GenerateEvt@Event+1,c
 37472  003E8A  EC1E  F034         	call	i2_GenerateEvt	;wreg free
 37473                           
 37474                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 37475  003E8E  0E3A               	movlw	low _NewStringMdmTerminal
 37476  003E90  6E01               	movwf	i2GenerateEvt@Event,c
 37477  003E92  0E00               	movlw	high _NewStringMdmTerminal
 37478  003E94  6E02               	movwf	i2GenerateEvt@Event+1,c
 37479  003E96  EC1E  F034         	call	i2_GenerateEvt	;wreg free
 37480  003E9A                     i2l688:
 37481                           
 37482                           ;uart_drv.c: 427: }
 37483                           ;uart_drv.c: 429: RxState = ReadData;
 37484                           
 37485                           ;uart_drv.c: 424: else
 37486                           ;uart_drv.c: 425: {
 37487                           
 37488                           ;uart_drv.c: 422: }
 37489                           ;uart_drv.c: 423: }
 37490  003E9A  0E00               	movlw	0
 37491  003E9C  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 37492                           
 37493                           ;uart_drv.c: 431: RxCounter = 0;
 37494  003E9E  0E00               	movlw	0
 37495  003EA0  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 37496  003EA2  0E00               	movlw	0
 37497  003EA4  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 37498                           
 37499                           ;uart_drv.c: 436: }
 37500                           
 37501                           ;uart_drv.c: 435: break;
 37502                           
 37503                           ;uart_drv.c: 434: default:
 37504                           
 37505                           ;uart_drv.c: 432: break;
 37506  003EA6  0012               	return	
 37507  003EA8                     i2l680:
 37508  003EA8  502C               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 37509                           
 37510                           ; Switch size 1, requested type "space"
 37511                           ; Number of cases is 2, Range of values is 0 to 1
 37512                           ; switch strategies available:
 37513                           ; Name         Instructions Cycles
 37514                           ; simple_byte            7     4 (average)
 37515                           ;	Chosen strategy is simple_byte
 37516  003EAA  0A00               	xorlw	0	; case 0
 37517  003EAC  B4D8               	btfsc	status,2,c
 37518  003EAE  D7A4               	goto	i2l681
 37519  003EB0  0A01               	xorlw	1	; case 1
 37520  003EB2  A4D8               	btfss	status,2,c
 37521  003EB4  0012               	return	
 37522  003EB6  D7B8               	goto	i2l686
 37523  003EB8                     __end_of_Uart_MdmGsmGprsReadService:
 37524                           	opt stack 0
 37525                           tosu	equ	0xFFF
 37526                           tosh	equ	0xFFE
 37527                           tosl	equ	0xFFD
 37528                           pclatu	equ	0xFFB
 37529                           pclath	equ	0xFFA
 37530                           tblptru	equ	0xFF8
 37531                           tblptrh	equ	0xFF7
 37532                           tblptrl	equ	0xFF6
 37533                           tablat	equ	0xFF5
 37534                           prodh	equ	0xFF4
 37535                           prodl	equ	0xFF3
 37536                           intcon	equ	0xFF2
 37537                           intcon2	equ	0xFF1
 37538                           intcon3	equ	0xFF0
 37539                           indf0	equ	0xFEF
 37540                           postinc0	equ	0xFEE
 37541                           plusw0	equ	0xFEB
 37542                           fsr0h	equ	0xFEA
 37543                           fsr0l	equ	0xFE9
 37544                           wreg	equ	0xFE8
 37545                           indf1	equ	0xFE7
 37546                           postinc1	equ	0xFE6
 37547                           postdec1	equ	0xFE5
 37548                           plusw1	equ	0xFE3
 37549                           fsr1h	equ	0xFE2
 37550                           fsr1l	equ	0xFE1
 37551                           bsr	equ	0xFE0
 37552                           indf2	equ	0xFDF
 37553                           postinc2	equ	0xFDE
 37554                           postdec2	equ	0xFDD
 37555                           plusw2	equ	0xFDB
 37556                           fsr2h	equ	0xFDA
 37557                           fsr2l	equ	0xFD9
 37558                           status	equ	0xFD8
 37559                           
 37560 ;; *************** function i2_GenerateEvt *****************
 37561 ;; Defined at:
 37562 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37563 ;; Parameters:    Size  Location     Type
 37564 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 37565 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37566 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37567 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37568 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37569 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37570 ;; Auto vars:     Size  Location     Type
 37571 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 37572 ;; Return value:  Size  Location     Type
 37573 ;;                  1    wreg      enum E7699
 37574 ;; Registers used:
 37575 ;;		wreg, fsr2l, fsr2h, status,2
 37576 ;; Tracked objects:
 37577 ;;		On entry : 0/0
 37578 ;;		On exit  : 0/0
 37579 ;;		Unchanged: 0/0
 37580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37584 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37585 ;;Total ram usage:        3 bytes
 37586 ;; Hardware stack levels used:    1
 37587 ;; This function calls:
 37588 ;;		Nothing
 37589 ;; This function is called by:
 37590 ;;		_Uart_MdmGsmGprsReadService
 37591 ;; This function uses a non-reentrant model
 37592 ;;
 37593                           
 37594                           	psect	text185
 37595  00683C                     __ptext185:
 37596                           	opt stack 0
 37597  00683C                     i2_GenerateEvt:
 37598                           	opt stack 8
 37599                           
 37600                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37601                           
 37602                           ;incstack = 0
 37603  00683C  0E00               	movlw	0
 37604  00683E  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37605                           
 37606                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37607  006840  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 37608  006844  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 37609  006848  0E02               	movlw	2
 37610  00684A  6EDF               	movwf	indf2,c
 37611                           
 37612                           ;os_ser.c: 83: EventStatus = EventSent;
 37613  00684C  0E02               	movlw	2
 37614  00684E  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37615  006850  0012               	return	
 37616  006852                     __end_ofi2_GenerateEvt:
 37617                           	opt stack 0
 37618                           tosu	equ	0xFFF
 37619                           tosh	equ	0xFFE
 37620                           tosl	equ	0xFFD
 37621                           pclatu	equ	0xFFB
 37622                           pclath	equ	0xFFA
 37623                           tblptru	equ	0xFF8
 37624                           tblptrh	equ	0xFF7
 37625                           tblptrl	equ	0xFF6
 37626                           tablat	equ	0xFF5
 37627                           prodh	equ	0xFF4
 37628                           prodl	equ	0xFF3
 37629                           intcon	equ	0xFF2
 37630                           intcon2	equ	0xFF1
 37631                           intcon3	equ	0xFF0
 37632                           indf0	equ	0xFEF
 37633                           postinc0	equ	0xFEE
 37634                           plusw0	equ	0xFEB
 37635                           fsr0h	equ	0xFEA
 37636                           fsr0l	equ	0xFE9
 37637                           wreg	equ	0xFE8
 37638                           indf1	equ	0xFE7
 37639                           postinc1	equ	0xFE6
 37640                           postdec1	equ	0xFE5
 37641                           plusw1	equ	0xFE3
 37642                           fsr1h	equ	0xFE2
 37643                           fsr1l	equ	0xFE1
 37644                           bsr	equ	0xFE0
 37645                           indf2	equ	0xFDF
 37646                           postinc2	equ	0xFDE
 37647                           postdec2	equ	0xFDD
 37648                           plusw2	equ	0xFDB
 37649                           fsr2h	equ	0xFDA
 37650                           fsr2l	equ	0xFD9
 37651                           status	equ	0xFD8
 37652                           
 37653 ;; *************** function _Rtcc_RtcIsr *****************
 37654 ;; Defined at:
 37655 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 37656 ;; Parameters:    Size  Location     Type
 37657 ;;		None
 37658 ;; Auto vars:     Size  Location     Type
 37659 ;;		None
 37660 ;; Return value:  Size  Location     Type
 37661 ;;                  1    wreg      void 
 37662 ;; Registers used:
 37663 ;;		wreg, status,2, status,0
 37664 ;; Tracked objects:
 37665 ;;		On entry : 0/0
 37666 ;;		On exit  : 0/0
 37667 ;;		Unchanged: 0/0
 37668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37673 ;;Total ram usage:        0 bytes
 37674 ;; Hardware stack levels used:    1
 37675 ;; This function calls:
 37676 ;;		Nothing
 37677 ;; This function is called by:
 37678 ;;		_HighPriorityIsr
 37679 ;; This function uses a non-reentrant model
 37680 ;;
 37681                           
 37682                           	psect	text186
 37683  006976                     __ptext186:
 37684                           	opt stack 0
 37685  006976                     _Rtcc_RtcIsr:
 37686                           	opt stack 10
 37687                           
 37688                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 37689                           
 37690                           ;incstack = 0
 37691  006976  90A4               	bcf	4004,0,c	;volatile
 37692  006978  0012               	return	
 37693  00697A                     __end_of_Rtcc_RtcIsr:
 37694                           	opt stack 0
 37695                           tosu	equ	0xFFF
 37696                           tosh	equ	0xFFE
 37697                           tosl	equ	0xFFD
 37698                           pclatu	equ	0xFFB
 37699                           pclath	equ	0xFFA
 37700                           tblptru	equ	0xFF8
 37701                           tblptrh	equ	0xFF7
 37702                           tblptrl	equ	0xFF6
 37703                           tablat	equ	0xFF5
 37704                           prodh	equ	0xFF4
 37705                           prodl	equ	0xFF3
 37706                           intcon	equ	0xFF2
 37707                           intcon2	equ	0xFF1
 37708                           intcon3	equ	0xFF0
 37709                           indf0	equ	0xFEF
 37710                           postinc0	equ	0xFEE
 37711                           plusw0	equ	0xFEB
 37712                           fsr0h	equ	0xFEA
 37713                           fsr0l	equ	0xFE9
 37714                           wreg	equ	0xFE8
 37715                           indf1	equ	0xFE7
 37716                           postinc1	equ	0xFE6
 37717                           postdec1	equ	0xFE5
 37718                           plusw1	equ	0xFE3
 37719                           fsr1h	equ	0xFE2
 37720                           fsr1l	equ	0xFE1
 37721                           bsr	equ	0xFE0
 37722                           indf2	equ	0xFDF
 37723                           postinc2	equ	0xFDE
 37724                           postdec2	equ	0xFDD
 37725                           plusw2	equ	0xFDB
 37726                           fsr2h	equ	0xFDA
 37727                           fsr2l	equ	0xFD9
 37728                           status	equ	0xFD8
 37729                           
 37730 ;; *************** function _Mcu_Int1Isr *****************
 37731 ;; Defined at:
 37732 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37733 ;; Parameters:    Size  Location     Type
 37734 ;;		None
 37735 ;; Auto vars:     Size  Location     Type
 37736 ;;		None
 37737 ;; Return value:  Size  Location     Type
 37738 ;;                  1    wreg      void 
 37739 ;; Registers used:
 37740 ;;		wreg, status,2, status,0
 37741 ;; Tracked objects:
 37742 ;;		On entry : 0/0
 37743 ;;		On exit  : 0/0
 37744 ;;		Unchanged: 0/0
 37745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37750 ;;Total ram usage:        0 bytes
 37751 ;; Hardware stack levels used:    1
 37752 ;; This function calls:
 37753 ;;		Nothing
 37754 ;; This function is called by:
 37755 ;;		_HighPriorityIsr
 37756 ;; This function uses a non-reentrant model
 37757 ;;
 37758                           
 37759                           	psect	text187
 37760  00697A                     __ptext187:
 37761                           	opt stack 0
 37762  00697A                     _Mcu_Int1Isr:
 37763                           	opt stack 10
 37764                           
 37765                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 37766                           
 37767                           ;incstack = 0
 37768  00697A  90F0               	bcf	intcon3,0,c	;volatile
 37769  00697C  0012               	return	
 37770  00697E                     __end_of_Mcu_Int1Isr:
 37771                           	opt stack 0
 37772                           tosu	equ	0xFFF
 37773                           tosh	equ	0xFFE
 37774                           tosl	equ	0xFFD
 37775                           pclatu	equ	0xFFB
 37776                           pclath	equ	0xFFA
 37777                           tblptru	equ	0xFF8
 37778                           tblptrh	equ	0xFF7
 37779                           tblptrl	equ	0xFF6
 37780                           tablat	equ	0xFF5
 37781                           prodh	equ	0xFF4
 37782                           prodl	equ	0xFF3
 37783                           intcon	equ	0xFF2
 37784                           intcon2	equ	0xFF1
 37785                           intcon3	equ	0xFF0
 37786                           indf0	equ	0xFEF
 37787                           postinc0	equ	0xFEE
 37788                           plusw0	equ	0xFEB
 37789                           fsr0h	equ	0xFEA
 37790                           fsr0l	equ	0xFE9
 37791                           wreg	equ	0xFE8
 37792                           indf1	equ	0xFE7
 37793                           postinc1	equ	0xFE6
 37794                           postdec1	equ	0xFE5
 37795                           plusw1	equ	0xFE3
 37796                           fsr1h	equ	0xFE2
 37797                           fsr1l	equ	0xFE1
 37798                           bsr	equ	0xFE0
 37799                           indf2	equ	0xFDF
 37800                           postinc2	equ	0xFDE
 37801                           postdec2	equ	0xFDD
 37802                           plusw2	equ	0xFDB
 37803                           fsr2h	equ	0xFDA
 37804                           fsr2l	equ	0xFD9
 37805                           status	equ	0xFD8
 37806                           
 37807 ;; *************** function _Mcu_Int0Isr *****************
 37808 ;; Defined at:
 37809 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37810 ;; Parameters:    Size  Location     Type
 37811 ;;		None
 37812 ;; Auto vars:     Size  Location     Type
 37813 ;;		None
 37814 ;; Return value:  Size  Location     Type
 37815 ;;                  1    wreg      void 
 37816 ;; Registers used:
 37817 ;;		wreg, status,2, status,0
 37818 ;; Tracked objects:
 37819 ;;		On entry : 0/0
 37820 ;;		On exit  : 0/0
 37821 ;;		Unchanged: 0/0
 37822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37827 ;;Total ram usage:        0 bytes
 37828 ;; Hardware stack levels used:    1
 37829 ;; This function calls:
 37830 ;;		Nothing
 37831 ;; This function is called by:
 37832 ;;		_HighPriorityIsr
 37833 ;; This function uses a non-reentrant model
 37834 ;;
 37835                           
 37836                           	psect	text188
 37837  00697E                     __ptext188:
 37838                           	opt stack 0
 37839  00697E                     _Mcu_Int0Isr:
 37840                           	opt stack 10
 37841                           
 37842                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 37843                           
 37844                           ;incstack = 0
 37845  00697E  92F2               	bcf	intcon,1,c	;volatile
 37846  006980  0012               	return	
 37847  006982                     __end_of_Mcu_Int0Isr:
 37848                           	opt stack 0
 37849                           tosu	equ	0xFFF
 37850                           tosh	equ	0xFFE
 37851                           tosl	equ	0xFFD
 37852                           pclatu	equ	0xFFB
 37853                           pclath	equ	0xFFA
 37854                           tblptru	equ	0xFF8
 37855                           tblptrh	equ	0xFF7
 37856                           tblptrl	equ	0xFF6
 37857                           tablat	equ	0xFF5
 37858                           prodh	equ	0xFF4
 37859                           prodl	equ	0xFF3
 37860                           intcon	equ	0xFF2
 37861                           intcon2	equ	0xFF1
 37862                           intcon3	equ	0xFF0
 37863                           indf0	equ	0xFEF
 37864                           postinc0	equ	0xFEE
 37865                           plusw0	equ	0xFEB
 37866                           fsr0h	equ	0xFEA
 37867                           fsr0l	equ	0xFE9
 37868                           wreg	equ	0xFE8
 37869                           indf1	equ	0xFE7
 37870                           postinc1	equ	0xFE6
 37871                           postdec1	equ	0xFE5
 37872                           plusw1	equ	0xFE3
 37873                           fsr1h	equ	0xFE2
 37874                           fsr1l	equ	0xFE1
 37875                           bsr	equ	0xFE0
 37876                           indf2	equ	0xFDF
 37877                           postinc2	equ	0xFDE
 37878                           postdec2	equ	0xFDD
 37879                           plusw2	equ	0xFDB
 37880                           fsr2h	equ	0xFDA
 37881                           fsr2l	equ	0xFD9
 37882                           status	equ	0xFD8
 37883                           tosu	equ	0xFFF
 37884                           tosh	equ	0xFFE
 37885                           tosl	equ	0xFFD
 37886                           pclatu	equ	0xFFB
 37887                           pclath	equ	0xFFA
 37888                           tblptru	equ	0xFF8
 37889                           tblptrh	equ	0xFF7
 37890                           tblptrl	equ	0xFF6
 37891                           tablat	equ	0xFF5
 37892                           prodh	equ	0xFF4
 37893                           prodl	equ	0xFF3
 37894                           intcon	equ	0xFF2
 37895                           intcon2	equ	0xFF1
 37896                           intcon3	equ	0xFF0
 37897                           indf0	equ	0xFEF
 37898                           postinc0	equ	0xFEE
 37899                           plusw0	equ	0xFEB
 37900                           fsr0h	equ	0xFEA
 37901                           fsr0l	equ	0xFE9
 37902                           wreg	equ	0xFE8
 37903                           indf1	equ	0xFE7
 37904                           postinc1	equ	0xFE6
 37905                           postdec1	equ	0xFE5
 37906                           plusw1	equ	0xFE3
 37907                           fsr1h	equ	0xFE2
 37908                           fsr1l	equ	0xFE1
 37909                           bsr	equ	0xFE0
 37910                           indf2	equ	0xFDF
 37911                           postinc2	equ	0xFDE
 37912                           postdec2	equ	0xFDD
 37913                           plusw2	equ	0xFDB
 37914                           fsr2h	equ	0xFDA
 37915                           fsr2l	equ	0xFD9
 37916                           status	equ	0xFD8
 37917                           
 37918                           	psect	text189
 37919  000000                     __ptext189:
 37920                           	opt stack 0
 37921                           tosu	equ	0xFFF
 37922                           tosh	equ	0xFFE
 37923                           tosl	equ	0xFFD
 37924                           pclatu	equ	0xFFB
 37925                           pclath	equ	0xFFA
 37926                           tblptru	equ	0xFF8
 37927                           tblptrh	equ	0xFF7
 37928                           tblptrl	equ	0xFF6
 37929                           tablat	equ	0xFF5
 37930                           prodh	equ	0xFF4
 37931                           prodl	equ	0xFF3
 37932                           intcon	equ	0xFF2
 37933                           intcon2	equ	0xFF1
 37934                           intcon3	equ	0xFF0
 37935                           indf0	equ	0xFEF
 37936                           postinc0	equ	0xFEE
 37937                           plusw0	equ	0xFEB
 37938                           fsr0h	equ	0xFEA
 37939                           fsr0l	equ	0xFE9
 37940                           wreg	equ	0xFE8
 37941                           indf1	equ	0xFE7
 37942                           postinc1	equ	0xFE6
 37943                           postdec1	equ	0xFE5
 37944                           plusw1	equ	0xFE3
 37945                           fsr1h	equ	0xFE2
 37946                           fsr1l	equ	0xFE1
 37947                           bsr	equ	0xFE0
 37948                           indf2	equ	0xFDF
 37949                           postinc2	equ	0xFDE
 37950                           postdec2	equ	0xFDD
 37951                           plusw2	equ	0xFDB
 37952                           fsr2h	equ	0xFDA
 37953                           fsr2l	equ	0xFD9
 37954                           status	equ	0xFD8
 37955                           
 37956                           	psect	rparam
 37957  0000                     tosu	equ	0xFFF
 37958                           tosh	equ	0xFFE
 37959                           tosl	equ	0xFFD
 37960                           pclatu	equ	0xFFB
 37961                           pclath	equ	0xFFA
 37962                           tblptru	equ	0xFF8
 37963                           tblptrh	equ	0xFF7
 37964                           tblptrl	equ	0xFF6
 37965                           tablat	equ	0xFF5
 37966                           prodh	equ	0xFF4
 37967                           prodl	equ	0xFF3
 37968                           intcon	equ	0xFF2
 37969                           intcon2	equ	0xFF1
 37970                           intcon3	equ	0xFF0
 37971                           indf0	equ	0xFEF
 37972                           postinc0	equ	0xFEE
 37973                           plusw0	equ	0xFEB
 37974                           fsr0h	equ	0xFEA
 37975                           fsr0l	equ	0xFE9
 37976                           wreg	equ	0xFE8
 37977                           indf1	equ	0xFE7
 37978                           postinc1	equ	0xFE6
 37979                           postdec1	equ	0xFE5
 37980                           plusw1	equ	0xFE3
 37981                           fsr1h	equ	0xFE2
 37982                           fsr1l	equ	0xFE1
 37983                           bsr	equ	0xFE0
 37984                           indf2	equ	0xFDF
 37985                           postinc2	equ	0xFDE
 37986                           postdec2	equ	0xFDD
 37987                           plusw2	equ	0xFDB
 37988                           fsr2h	equ	0xFDA
 37989                           fsr2l	equ	0xFD9
 37990                           status	equ	0xFD8
 37991                           
 37992                           	psect	temp
 37993  000042                     btemp:
 37994                           	opt stack 0
 37995  000042                     	ds	1
 37996  0000                     int$flags	set	btemp
 37997  0000                     wtemp6	set	btemp+1
 37998                           tosu	equ	0xFFF
 37999                           tosh	equ	0xFFE
 38000                           tosl	equ	0xFFD
 38001                           pclatu	equ	0xFFB
 38002                           pclath	equ	0xFFA
 38003                           tblptru	equ	0xFF8
 38004                           tblptrh	equ	0xFF7
 38005                           tblptrl	equ	0xFF6
 38006                           tablat	equ	0xFF5
 38007                           prodh	equ	0xFF4
 38008                           prodl	equ	0xFF3
 38009                           intcon	equ	0xFF2
 38010                           intcon2	equ	0xFF1
 38011                           intcon3	equ	0xFF0
 38012                           indf0	equ	0xFEF
 38013                           postinc0	equ	0xFEE
 38014                           plusw0	equ	0xFEB
 38015                           fsr0h	equ	0xFEA
 38016                           fsr0l	equ	0xFE9
 38017                           wreg	equ	0xFE8
 38018                           indf1	equ	0xFE7
 38019                           postinc1	equ	0xFE6
 38020                           postdec1	equ	0xFE5
 38021                           plusw1	equ	0xFE3
 38022                           fsr1h	equ	0xFE2
 38023                           fsr1l	equ	0xFE1
 38024                           bsr	equ	0xFE0
 38025                           indf2	equ	0xFDF
 38026                           postinc2	equ	0xFDE
 38027                           postdec2	equ	0xFDD
 38028                           plusw2	equ	0xFDB
 38029                           fsr2h	equ	0xFDA
 38030                           fsr2l	equ	0xFD9
 38031                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    590
    Data        183
    BSS         2364
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      5     256
    BANK4           192      0     173
    BANK5           256      0     214
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     250
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_33(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> MyApp_Task@receivedNumber(BANK4[13]), smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), MyApp_Task@emptyNumber(BANK1[13]), callerNumber(BANK3[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    parseCommand@text	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), smsText(BANK4[20]), MyApp_Task@emptyNumber(BANK1[13]), 
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@receivedNumber(BANK4[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isNumberInMemory@readBuffer(BANK1[13]), MyApp_Task@cmdAddNumber(BANK1[4]), parseCommand@deleteNumberCmd(BANK0[3]), parseCommand@addNumberCmd(BANK0[3]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> MyApp_Task@receivedNumber(BANK4[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8952 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), smsText(BANK4[20]), MyApp_Task@emptyNumber(BANK1[13]), 
		 -> callerNumber(BANK3[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_32(CODE[12]), STR_31(CODE[19]), STR_30(CODE[14]), STR_29(CODE[14]), 
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), 
		 -> STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), 
		 -> STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _waitSetupCall->_secondsAppTimer
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _saveNumberInMemory->_Eeprom_Write
    _parseCommand->_StringCompare
    _isNumberInMemory->_Eeprom_Read
    _initMemorizedNumbersCount->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_isNumberInMemory
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  880333
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  875702
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  437944
                                              0 BANK3      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  437758
                                              0 BANK3      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          23    23      0  172494
                                             19 BANK1     22    22      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
                         _StringCopy
              _Uart_WriteConstString
                      _findEmptySpot
                            _initFsm
          _initMemorizedNumbersCount
                   _isNumberInMemory
                       _parseCommand
                 _saveNumberInMemory
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (4) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _getSetupCall                                         1     1      0    5631
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (6) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (6) _Mdm_HangPhoneCall                                    0     0      0    2855
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _saveNumberInMemory                                   3     1      2   10444
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _parseCommand                                         9     7      2    3620
                                             40 BANK0      9     7      2
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _isNumberInMemory                                    19    17      2   28498
                                              0 BANK1     19    17      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _initMemorizedNumbersCount                            0     0      0    9966
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (5) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Write                                         7     4      3    9966
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   40153
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15682
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24434
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _findEmptySpot                                       17    17      0   25185
                                              0 BANK1     17    17      0
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isNumberValid                                        5     3      2     578
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Read                                          7     4      3   24354
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    8165
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5123
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73572
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13138
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6    2728
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15288
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8851
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   14102
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   42931
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21502
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21429
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteConstString                                3     1      2    2855
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (8) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2421
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7347
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7347
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2877
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1    1060
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _GetLastInteractionNumber
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _StringCopy
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber (ARG)
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _findEmptySpot
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _isNumberValid
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _StringCompare
           _isNumberValid
         _parseCommand
           _StringCompare
           _isNumberValid
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _GetLastInteractionNumber
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _StringCopy
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber (ARG)
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _findEmptySpot
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _isNumberValid
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _StringCompare
           _isNumberValid
         _parseCommand
           _StringCompare
           _isNumberValid
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      FA      22       97.7%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D6      16       83.6%
BITBANK3           100      0       0      11        0.0%
BANK3              100      5     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      AD      14       90.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A3       8        0.0%
DATA                 0      0     CC3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 27 13:12:02 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5888  
                              _USB_SD_Ptr FC1E                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 66BE  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 2796                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0030                                       l202 2406  
                                     l203 240E                                       l205 2456  
                                     l206 247C                                       l208 2484  
                                     l160 234A                                       l209 24A4  
                                     l161 2220                                       l162 2388  
                                     l170 22E8                                       l171 22FE  
                                     l163 222C                                       l315 4746  
                                     l323 4712                                       l164 226C  
                                     l316 46BC                                       l420 4CF4  
                                     l500 4BA4                                       l173 2302  
                                     l325 472C                                       l421 4D14  
                                     l237 66CA                                       l174 230A  
                                     l166 227A                                       l318 46C6  
                                     l422 4D20               __end_of_USBStdGetDscHandler 3060  
                                     l510 4B76                                       l502 4B36  
                                     l175 2316                                       l167 22A2  
                                     l319 46EC                                       l423 4D2C  
                                     l511 4B66                                       l503 4B26  
                                     l192 24AE                                       l176 232C  
                                     l416 4D40                                       l424 4D38  
                                     l512 4B8A                                       l504 4B4C  
                                     l520 5D3C                                       l193 238E  
                                     l169 22B4                                       l417 4CE6  
                                     l441 1B56                                       l513 4B6A  
                                     l505 4B2A                                       l521 5D08  
                                     l194 24E6                                       l418 4D6E  
                                     l442 195E                                       l514 4B70  
                                     l506 4B30                                       l530 3420  
                                     l195 239A                                       l179 2338  
                                     l419 4CEE                                       l523 5D22  
                                     l531 3486                                       l196 23DA  
                                     l700 5FA2                                       l444 19A6  
                                     l532 344C                                       l445 19EE  
                                     l541 6668                                       l198 23E8  
                                     l446 1A36                                       l199 23FC  
                                     l631 2D76                                       l447 1A7E  
                                     l448 1AC6                                       l528 348C  
                                     l633 2DEE                                       l625 2D02  
                                     l449 1B0E                                       l529 3478  
                                     l538 666C                                       l546 3F10  
                                     l651 5C8C                                       l707 6106  
                                     l627 2D26                                       l715 603A  
                                     l539 6664                                       l547 3F2C  
                                     l660 5CB0                                       l652 5C86  
                                     l716 6010                                       l709 6120  
                                     l629 2D4E                                       l718 6028  
                                     l639 66B0                                       l832 6406  
                                     l844 3FE4                                       l668 0FAE  
                                     _BDT 000400                                       l790 66E6  
                                     l855 51A4                                       l775 32A2  
                                     l864 4E72                                       l856 514A  
                                     l857 51BE                                       l698 5F86  
                                     l858 517A                                       l867 4E84  
                                     l982 2A16                                       l983 28EA  
                                     l985 290E                                       l987 2928  
                                     l988 295C                                       l989 29CE  
                                     l998 29F2                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4610  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 628E                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1F14  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CC  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 6004  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 28E8  
           findEmptySpot@positionInMemory 0110             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 5D50           InitGprsNetwork@GprsNetInitState 01EA  
                                    l1100 1E84                                      l1101 1ED0  
                                    l1013 5D6A                                      l1110 5B90  
                             RiSm@Counter 02DE                                      l1031 383E  
                                    l1111 5BA4                                      l1032 3878  
                                    l2000 5676                                      l1033 389E  
                                    l1009 5D86                                      l1121 5BFC  
                                    l1027 38E0                                      l1035 38C6  
                                    l1107 5BB6                                      l1220 113A  
                                    l1028 382C                                      l1052 21F2  
                                    l1060 21C4                                      l1108 5B7A  
                                    l1053 210C                                      l2102 354C  
                                    l1222 141A                                      l1230 1322  
                                    l1070 2F14                                      l2006 566A  
                                    l2103 3494                                      l1231 1326  
                                    l1223 1152                                      l1071 2E0C  
                                    l1055 220C                                      l2104 3568  
                                    l2112 47DC                                      l2120 47C6  
                                    l1232 136A                                      l1224 118C  
                                    l1056 213E                                      l1136 6568  
                                    l1152 6544                                      l2008 5670  
                                    l2105 34B2                                      l2113 476E  
                                    l1241 13D8                                      l1225 1200  
                                    l1129 54CE                                      l2114 4804  
                                    l1226 11C8                                      l1074 2E28  
                                    l1058 218E                                      l3010 39E6  
                                    l2107 3522                                      l2115 477E  
                                    l1219 13E2                                      l1075 2E40  
                                    l1091 1EEA                                      l2035 59CC  
                                    l3011 39E0                                      l2211 4F10  
                                    l2116 4790                                      l1252 0A54  
                                    l1260 073E                                      l1236 137A  
                                    l1228 12A8                                      l1092 1D68  
                                    l1156 6218                                      l1412 60F8  
                                    l1404 5922                                      l2212 4E96  
                                    l2133 639A                                      l2117 47AA  
                                    l1261 06F6                                      l1253 05F4  
                                    l1237 13BE                                      l1229 12E2  
                                    l2037 59D8                                      l3013 3A28  
                                    l1405 58E2                                      l2125 3D10  
                                    l2134 6388                                      l1078 2EB2  
                                    l2142 5A18                                      l1422 6654  
                                    l3030 505E                                      l2126 3C58  
                                    l2214 4EFC                                      l2119 47B8  
                                    l1255 0AB6                                      l1263 07F2  
                                    l1095 1D84                                      l2143 59E2  
                                    l1407 591C                                      l2136 638E  
                                    l1280 09C4                                      l1272 092A  
                                    l1264 082C                                      l1256 060C  
                                    l2240 5B18                                      l1096 1E3A  
                                    l1440 3B6E                                      l3032 507C  
                                    l3016 3A78                                      l2400 0152  
                                    l2128 3C66                                      l2137 6394  
                                    l1281 0A32                                      l1273 096E  
                                    l1265 0856                                      l1257 0646  
                                    l2241 5AEE                                      l1097 1E5E  
                                    l2145 59F4                                      l1417 5FFE  
                                    l1441 3AB8                                      l3033 5074  
                                    l3017 3A3A                                      l3201 4618  
                                    l2401 01E2                                      l2090 2A3C  
                                    l1266 0890                                      l1258 0680  
                                    l2242 5B14                                      l2146 5A06  
                                    l1442 3B84                                      l3050 529A  
                                    l3042 5256                                      l2091 2B70  
                                    l1267 08CA                                      l1259 06BA  
                                    l1443 3AD6                                      l3051 52A8  
                                    l3043 5262                                      l3019 3AAC  
                                    l3203 4654                                      l2403 01AE  
                                    l1291 5E5E                                      l2092 2A64  
                                    l1268 090E                                      l3036 509C  
                                    l3204 4696                                      l2420 02C6  
                                    l2404 019C                                      l1700 3930  
                                    l1604 27E0                                      l1620 1F5C  
                                    l2093 2AE8                                      l2253 624C  
                                    l1285 0A42                                      l1277 097E  
                                    l1445 3B34                                      l3037 50A6  
                                    l3029 504E                                      l3045 5278  
                                    l1621 1F6C                                      l2501 65A2  
                                    l1382 41B0                                      l2254 6238  
                                    l1286 0A4A                                      l1278 09AA  
                                    l1446 3B48                                      l3038 50B4  
                                    l3046 5270                                      l2414 0392  
                                    l1702 3994                                      l1606 2808  
                                    l1630 200A                                      l1622 1F74  
                                    l2502 6594                                      l1294 5E2C  
                                    l1391 417A                                      l1383 4112  
                                    l3231 50EE                                      l2247 565A  
                                    l2415 0326                                      l1703 395A  
                                    l1631 2016                                      l1623 1F8A  
                                    l1615 1F40                                      l1384 4134  
                                    l3232 50E2                                      l2248 561A  
                                    l1448 3B66                                      l2432 041E  
                                    l2416 02B4                                      l1608 2844  
                                    l1640 2092                                      l1624 1F96  
                                    l1616 1F36                                      l2504 659C  
                                    l1393 4196                                      l2089 2B5A  
                                    l3049 5290                                      l2441 0524  
                                    l2417 0250                                      l2409 01D0  
                                    l1713 30BC                                      l1633 202A  
                                    l1617 1F34                                      l1394 41A2  
                                    l1386 4156                                      l1650 42DA  
                                    l2442 0570                                      l2434 045E  
                                    l2426 0402                                      l3314 633E  
                                    l1706 39D6                                      l1714 3096  
                                    l1626 1FBE                                      l3235 5122  
                                    l2435 0578                                      l2427 03D2  
                                    l2419 0304                                      l3315 632C  
                                    l1707 399C                                      l1643 5EC8  
                                    l1811 3760                                      l2611 0DD0  
                                    l3236 5130                                      l2700 4FBE  
                                    l1652 4336                                      l1716 3134  
                                    l1644 5ED8                                      l1740 3038  
                                    l1812 3766                                      l3308 5DCE  
                                    l1636 2050                                      l1628 1FD4  
                                    l2612 0B26                USBConfigureEndpoint@handle 0083  
                                    l1389 415E                                      l2437 04B4  
                                    l2461 1464                                      l1717 311A  
                                    l1733 3048                                      l1725 35C8  
                                    l1813 376C                                      l3309 5DAC  
                                    l1629 1FE0                                      l2621 0BB8  
                                    l2702 5004                                      l3510 3670  
                                    l2438 0478                                      l2470 14B8  
                                    l1902 4492                                      l1830 17A8  
                                    l1742 3040                                      l1734 2F44  
                                    l1750 43F0                                      l1814 3780  
                                    l1638 2074                                      l2622 0BD2  
                                    l2614 0BA4                                      l3191 6634  
                                    l1903 442C                                      l1831 17AA  
                                    l1751 4372                                      l1727 363C  
                                    l1815 3786                                      l2607 0E14  
                                    l2631 0CB6                                      l2623 0BEA  
                                    l2615 0B48                                      l2800 55C6  
                                    l2704 5034                                      l1648 42B0  
                                    l3512 369E                                      l3440 5734  
                                    l2456 1688                                      l2472 15F8  
                                    l1840 18A8                                      l1832 17C6  
                                    l1736 2F58                                      l1752 4378  
                                    l1808 37E6                                      l1760 5EB0  
                                    l2640 0D3A                                      l2632 0CD2  
                                    l2608 0B0C                                      l2705 5010  
                                    l2713 5E10                                      l3521 373C  
                                    l3441 572E                                      l2457 1422  
                                    l1905 4444                                      l1841 1924  
                                    l1825 16E8                                      l1737 2FE0  
                                    l1753 4398                                      l1817 378C  
                                    l1809 3756                                      l1673 499C  
                                    l1761 5EAE                                      l2481 6754  
                                    l2625 0C4E                                      l2802 55F8  
                                    l2706 5016                                      l2714 5DEA  
                                    l2810 4A6E                                      l3450 62CA  
                                    l2474 1662                                      l2466 1478  
                                    l1906 4452                                      l1834 1854  
                                    l1826 16EE                                      l1746 43DA  
                                    l1818 37AA                                      l2803 55FE  
                                    l3515 36FE                                      l3443 574E  
                                    l2459 1448                                      l1667 3D6A  
                                    l1907 4470                                      l1739 2FE8  
                                    l1747 4360                                      l1819 37C6  
                                    l1675 49B6                                      l2643 0D60  
                                    l2635 0CE4                                      l2627 0C86  
                                    l3284 5A50                                      l2820 51E2  
                                    l2716 5E24                                      l2812 4A68  
                                    l1924 4C46                                      l3516 36B6  
                                    l2396 05D2                                      l3444 5744  
                                    l2476 1682                                      l2468 1498  
                                    l1908 4488                                      l1844 18DA  
                                    l1836 181C                                      l1828 1760  
                                    l1684 3324                                      l2484 674E  
                                    l2644 0D7C                                      l2636 0CF8  
                                    l2628 0CA4                                      l3285 5A48  
                                    l2717 5DF8                                      l3197 5F1E  
                                    l3517 36CE                                      l3509 3676  
                                    l2397 00E2                                      l1837 183A  
                                    l1685 32CC                                      l2822 521C  
                                    l2814 4A82                                      l3294 5F54  
                                    l3518 36DE                                      l1846 1930  
                                    l1774 4CCE                                      l2823 5226  
                                    l2735 486C                                      l2719 5E0A  
                                    l2583 4516                                      l1927 4BF4  
                                    l3295 5F4C                                      l3471 1BC6  
                                    l3455 6094                                      l1679 4AEE  
                                    l1839 189C                                      l1775 4CC8  
                                    l2647 0DA2                                      l2639 0D1E  
                                    l3288 5A70                                      l2824 523A  
                                    l1928 4C20                                      l3552 6486  
                                    l2840 3BFC                                      l3456 608E  
                                    l1960 2BF0                                      l1952 2B98  
                                    l1768 61A8                                      l2648 0DBE  
                                    l3289 5A7A                                      l2737 4898  
                                    l2809 4A08                                      l2585 4540  
                                    l1929 4BFA                                      l3449 62D4  
                                    l3481 1C42                                      l3473 1BDE  
                                    l2841 3BDE                                      l2833 3B94  
                                    l1793 4206                                      l1785 54E4  
                                    l1689 334E                                      l1769 61A6  
                                    l2738 48A8                                      l2690 4DAE  
                                    l3298 5F6C                                      l3490 1D10  
                                    l3482 1C52                                      l2834 3BAE  
                                    l1970 2CA4                                      l1962 2C48  
                                    l1954 2BA6                                      l1698 3926  
                                    l1794 420C                                      l2683 4DE2  
                                    l2691 4DC2                                      l2587 455E  
                                    l3299 5F76                                      l3547 6378  
                                    l3491 1D4A                                      l3475 1C32  
                                    l2835 3C10                                      l1971 2CA8  
                                    l1963 2C10                                      l1795 4288  
                                    l1787 5532                                      l2692 4DDA  
                                    l2684 4D7C                                      l3484 1C6C  
                                    l3564 6170                                      l2844 3C30  
                                    l1956 2BDA                                      l1796 424E  
                                    l2773 6698                                      l3557 65F0  
                                    l2838 3BB4                                      l1966 2C8A  
                                    l1798 426E                                      l3495 67C6  
                                    l3487 1C7E                                      l1967 2C52  
                                    l1959 2BEC                __size_of_Mdm_IsSmsReceived 0024  
                                    l3488 1CEA                                      l3568 67AE  
                                    l1992 6514                                _Led1OutSts 01FA  
                                    l2689 4DFE                                      l2777 5C54  
                                    l1993 6504                                      l2858 57EA  
                                    l2859 57FE                                      l2699 5020  
                                    l2779 5C60                                      l1995 650A  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F8  
                              _Led3OutSts 01F6                     ??_USBCtrlTrfTxService 007D  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                __size_of_Uart_Uart1RxIsr 0010                                      _UEIR 000F63  
                                    _UCON 000F65                                      u8865 5D12  
                                    u8866 5D14                                      u8875 5D1E  
                                    u8876 5D20                                      u8885 5D2C  
                                    u8886 5D2E                                      u8895 5D38  
                                    u8896 5D3A                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 0314                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6952                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0031  
             Led_SetLedBlinkTime@OnTimeMs 007D              findEmptySpot@currentPosition 00E1  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 39DE  
                                    _main 6908                           ??_Mdm_IsRinging 0081  
                                    _itoa 5EF8                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 6224                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 030C  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4610                                      _xtoi 3660  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 695A  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4CE0  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 6044                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 59DC   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 67E2  
                           _isNumberValid 55A0                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0112  
              __end_of_USBCheckStdRequest 382A                           _Rtcm_SystemDate 0463  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 689C  
       __size_of_GetLastInteractionNumber 000C                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
               ?_GetLastInteractionNumber 007D                            _GetElapsedTime 3F80  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 0085  
             __end_of_OsAlrm_ClearOsAlarm 58E0                  Eeprom_Write@SlaveAddress 0094  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 6100                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DB  
                                   l14143 4CFA                                     l12703 632C  
                                   l12741 3930                                     l14317 27D8  
                                   l15057 2104                                     l14345 283C  
                                   l11971 66CA                                     l14269 626C  
                                   l15079 21BE                                     l13905 48A8  
                                   l12937 35C0                                     l15601 2022  
                                   l15283 131A                                     l13755 3A74  
                                   l16251 318E                                     l13589 5DAC  
                                   l16239 532E                                     l15449 09A4  
                                   l14931 348C                                     l14757 55BE  
                                   l16605 5690                                     l16607 56C0  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 50BE  
                                   STR_10 FF4B                                     STR_11 FF59  
                                   STR_12 FF9D                                     STR_20 FF3D  
                                   STR_13 FF67                                     STR_21 FE5F  
                                   STR_30 FF2F                                     STR_14 FEA8  
                                   STR_31 FEFA                                     STR_15 FEE6  
                                   STR_23 FED2                                     STR_24 FFF5  
                                   STR_32 FFAA                                     STR_16 FF1E  
                                   STR_25 FFF5                                     STR_33 FFD8  
                                   STR_17 FF83                                     STR_26 FE86  
                                   STR_18 FF90                                     STR_27 FF0D  
                                   STR_28 FFB6                           __end_of___awmod 52B2  
                                   STR_29 FF2F         __size_of_USBCtrlEPServiceComplete 00FE  
                         __end_of___lldiv 5142                                     ?_utoa 008A  
                                   u12110 5FB0                                     u12040 5A54  
                                   u13000 1BCE                                     u12130 612E  
                         ___awdiv@divisor 007F                                     u12070 5F58  
                                   u13030 1C08                                     u13210 5080  
                                   u12410 6482                                     u13050 1C18  
                  __end_of_USBDeviceTasks 209C                                     u11540 5C82  
                                   u12500 6154                                     u11700 35F4  
                                   u12430 6368                                     u11470 3982  
                                   ?_xtoi 0083                                     u12600 2D4A  
                                   u12520 6160                                     u14120 04BE  
                                   u13305 5CD6                                     u12370 50F2  
                                   u11490 39C4                                     u10675 6448  
                                   u11740 2FAA                                     u10676 644A  
                                   u11477 3978                                     u10685 6454  
                                   u14310 4D8C                                     u13270 527C  
                                   u11750 2FDA                                     u10686 6456  
                                   u10695 6460                                     u14240 3C48  
                                   u10696 6462                                     u12545 6860  
                                   u13505 108C                                     u13425 6820  
                                   u11497 39BA                                     u12546 6862  
                                   u12650 5652                                     u13426 6822  
                                   u11770 302C                                     u11747 2FA0  
                                   u14180 5776                                     u13620 28A0  
                                   u13445 0E5E                                     u11757 2FD0  
                                   u14405 6874                                     u14430 4724  
                                   u14510 2984                                     u14406 6876  
                                   u13455 0E7E                                     u14440 473E  
                                   u13560 5B24                                     u12657 5648  
                                   u13465 0F08                                     u14601 20C8  
                                   u11777 3022                                     u14530 2998  
                                   u14290 5602                 ?_USBCtrlEPServiceComplete 0001  
                                   u14611 20DA                                     u14187 576C  
                                   u15500 2C7A                                     u13485 0FE2  
                                   u12790 4BD0                                     u15510 2C92  
                                   u11990 18BE                                     u13590 27FC  
                                   u13495 1002                                     u14465 680A  
                                   u14466 680E                                     u14395 5316  
                                   u15507 2C70                                     u15390 2098  
                                   u14591 20B6                                     u15551 5596  
                                   u14680 2212                                     u15480 2C38  
                                   u16248 5360                                     u16249 538E  
                                   u15487 2C2E                                     u16288 3256  
                                   u16289 3284                                     u15931 4EEE  
                                   u15941 4F06                                     u15950 0ACA  
                         __end_of___lwdiv 5A84                           __end_of___lwmod 5F80  
               TurnOnModem@TurnOnMdmState 01F4                        ??_UpdateOsCounters 0019  
                                   i1l742 2658                                     i1l747 2794  
                                   i2l680 3EA8                                     i2l681 3DF8  
                                   i2l690 3E42                                     i2l682 3E06  
                                   i2l686 3E28                                     i2l688 3E9A  
                                   i2l689 3E62                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B0  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E6  
                                   _USTAT 000F64                   __end_of_LedStateMachine 480A  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 49EA                             _StringCompare 5AD6  
                                   _sd000 FE5B                                     _sd001 FE14  
                                   _sd002 FDEE            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3D22  
                             _ApnLenLocal 01EE                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 5E2A  
                         __end_of_isalpha 6382                           __end_of_isdigit 663C  
               saveNumberInMemory@address 0098                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0091  
                             _ClearBuffer 6224                           __end_of_isspace 648E  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0037  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 65F8                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 6502  
               __end_of_Rtcc_GetRtccValue 4D74               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 5400  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 58E0                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                          parseCommand@text 0088  
                                   wtemp6 0043                           __end_of_sprintf 3C56  
                         __end_of_tolower 67B2                       __end_of_Mcu_Int0Isr 6982  
                     __end_of_Mcu_Int1Isr 697E                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 67CA  
                  __end_of_GetElapsedTime 4048                     __end_of_UartSetConfig 57D8  
                    __end_of_Eeprom_Write 5AD6                    __size_of_initGprsModem 0090  
                          ?_isNumberValid 007D               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 6766  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2F32  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 643A                            _InitSchedTimer 63B2  
                         __initialization 24EA               __size_of_saveNumberInMemory 001A  
                        __end_of_MdmCntSm 4762                      __end_of_I2c_ReadData 24EA  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 41D4  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 0ABC  
                            __end_of_atoi 3AB6                              __end_of_main 6914  
                     StringCompare@Result 0085                              __end_of_itoa 5F3C  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01DE  
                            __end_of_utoa 46BA                              __end_of_xtoi 3746  
                __end_of_Rtcm_SetRtccDate 5988                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 693E  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03CF  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE49  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4BB6  
                           ?_initPreamble 007D                                _ReceiveEvt 63E0  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 68BC                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                      initFsm@isInitialized 0103  
            isNumberInMemory@searchFailed 0110                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 5142  
                            _cdc_mem_type 01DF                        ??_Mcu_ConfigExtInt 007D  
                       CheckModem@Timeout 03F0                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
      __size_of_initMemorizedNumbersCount 001A                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3EB8                _Uart_MdmGsmGprsReadService 3DEE  
              __end_of_UsbDevice_MainTask 6526                           getsUSBUSART@len 0086  
                    __end_of_getSetupCall 669E                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 66BE                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 5988        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1412 61E8  
                             _GenerateEvt 67CA                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 002B                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC30                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 546C  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 63E0  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6972                                _UartConfig 0320  
                    __end_of_Mdm_MainTask 5BC8                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CB                             ??_Term_MainSm 00A7  
                                  _Relay1 01D9                                    _Relay2 01D8  
                                  _Relay3 01D7                                    _Relay4 02EB  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 5E70                                    _SmsLen 00D2  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5D02  
                                  ___lmul 57D8                      _I2cSlv_ReceiveI2cMsg 5FC4  
                      TurnOnModem@Counter 02D8                              ?_putUSBUSART 0083  
                                  ___wmul 648E                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5BC8                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 59DC                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 4C4C                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                         _USBEnableEndpoint 5EB4  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                                    _memcpy 5D9A  
                  __size_of_HttpGetMethod 04D0                                    _memset 6322  
                                  clear_0 25A2                                    clear_1 25B4  
                                  clear_2 25C0                                    clear_3 25CC  
                                  clear_4 25D8                                    clear_5 25E4  
                       parseCommand@F9021 FC2B                                    clear_6 25F0  
                                  clear_7 25FC                         parseCommand@F9023 FC28  
                                  clear_8 2608                                    clear_9 2614  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E2  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01EB  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01F1                        ?_USBEnableEndpoint 0085  
                          ??_initPreamble 007F                                    _strcat 5724  
                                  _strcpy 62C0                                    _strlen 6084  
                                  _strtol 1B86                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 617A  
                HttpGetMethod@UartMessage 0100                                 ??_initFsm 00B0  
                           _initGprsModem 4D74                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                     ModemEvtParser@F9110 03C1                       ModemEvtParser@F9112 03BC  
                     ModemEvtParser@F9114 04D6                       ModemEvtParser@F9108 03C6  
                            _CDCTxService 2B82                       MdmCntSm@MdmCntState 002D  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC10                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                              _callerNumber 0335  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 696A                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 0039                   __end_of_I2cSlv_MainTask 5934  
                         _InitGprsNetwork 1132                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 697E                               _Mcu_Int1Isr 697A  
                    ?_Led_SetLedBlinkTime 007D                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0090  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A7  
                    _controlTransferState 00CA         __end_of_initMemorizedNumbersCount 679A  
                   __end_ofi1_GenerateEvt 683C                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 4F22                __size_of_Rtcc_GetRtccValue 0094  
                           ?_parseCommand 0088                        _ExtInt1IsrCallback 02E0  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2632                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098             findEmptySpot@searchInProgress 010D  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 6976                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FC                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5CB4  
         I2cSlv_QueryI2cData@TimeoutTimer 0342                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5606  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FD  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D3  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DC                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 5EF8  
                             _InitNetwork 00D9                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK0 6982                              __pidataBANK1 6984  
                            __pidataBANK2 68FA                              __pidataBANK3 6044  
                            __pidataBANK4 67E2                              __pidataBANK5 5B28  
               __end_ofparseCommand@F9021 FC2E                 __end_ofparseCommand@F9023 FC2B  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 5F80          isNumberInMemory@searchInProgress 010F  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 628E  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008D  
                __size_of_InitializeTasks 0070                        __end_of_I2cDummyTx 6732  
             __end_of_USBCtrlTrfInHandler 4296                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 009E  
                     __end_of_Term_MainSm 16C4                 initGprsModem@currentState 01D5  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6826  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E5                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 62F2  
                              _cdc_notice 0459                     __end_of_Tmr_TmrBPrSet 3492  
                   __end_of_waitSetupCall 5C66                       __end_of_Rtcc_RtcIsr 697A  
                              _cdc_rx_len 00C6                         __end_of_MsgFormat FD22  
                              _cdc_tx_len 00C4                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                     _memorizedNumbersCount 0038  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 61EE  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E0  
                          ClearBuffer@Len 007F                           _secondsAppTimer 480A  
        __end_of_GetLastInteractionNumber 6920                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 643A                    _USBStdGetStatusHandler 4354  
                       __end_of_SendSmsSm 1F14       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01ED                            _Rtcc_RtcConfig 48AC  
                   __size_of_Eeprom_Write 0052                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                            ??_parseCommand 008A  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 08C8                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 6852               isNumberInMemory@phoneNumber 0100  
                __end_of_Uart_WriteString 613E              getSetupCall@isCalledReceived 0083  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 6592                               _SetBaudRate 5CB4  
                   __end_of_findEmptySpot 5240                 initGprsModem@modemCounter 03BA  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01EF  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 33A4                                 ?_TmrBInit 007D  
                           _CheckTxStatus 693E                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 0120                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 0092                                   ?___lmul 007D  
                            _Led_MainTask 3C56                            _Rtcc_UnlockRtc 689C  
                            _I2cBusStatus 01E7                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 3184  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 238C  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE49                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 4C4C                     __end_of_UpdateSchFlag 6716  
                            _EepromBuffer 04B1                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00D7                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 1420  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 3184                         __end_of_WriteByte 6934  
                      _USBCheckStdRequest 3746                         _configDescriptor1 FDAB  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 0572  
                            _Eeprom_Write 5A84                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 39DE                         triggerRelay@F9029 03CD  
                     _USBStdSetCfgHandler 357A                   __size_of_ConfigureModem 00DC  
                  I2cSlv_QueryI2cData@Ret 01E4                 Eeprom_Write@MemoryAddress 0093  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 640E  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 494C                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 008F                                   _SSP2BUF 000F75  
                            _I2c_ReadData 238C                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 4110  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DC  
          __end_of_Pm_DsReleasePinControl 6960                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 036A  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00E0  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 0029  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FB  
                     _I2cSlv_QueryI2cData 3AB6                                   _Led2Sts 01F9  
                                 _Led3Sts 01F7                __end_of_Sch_SchmIntService 68FA  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 008F  
                           _cdc_trf_state 00C5                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0E26                     __end_of_Mdm_DrvMainFn 6966  
                    __end_of_initPreamble 64DC                    initEeprom@currentState 01D4  
                        _ComChecCompleted 002A                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   __end_of_Mdm_IsRinging 654A                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CB                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DB                                   _RelayB2 01DA  
                             ?_StringCopy 0085                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D6                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 5394  
                  __end_of_Rtcc_UnlockRtc 68AC                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 6866  
                              _initEeprom 4FAE                               _Term_MainSm 1420  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD22  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 66DC  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 6810  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 5038  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 5240  
                                 ___lldiv 50BE                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 5A30  
                       ??_USBStallHandler 007D                                   ___lwmod 5F3C  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 667E  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6976                      __size_of_putUSBUSART 0022  
                                 __pcinit 24EA                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CD  
                     __end_of_TurnOnModem 5D9A                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 034D  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDEE  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0091  
                             Terminal@Len 03AC                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6908                                   __ptext1 62F2  
                                 __ptext2 6920                                   __ptext3 695A  
                                 __ptext4 66BE                                   __ptext5 6732  
                                 __ptext6 643A                                   __ptext7 63B2  
                                 __ptext8 3EB8                                   __ptext9 33A4  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 48AC  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 5DE2                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 6352  
                                 _isdigit 661A            isNumberInMemory@memoryOpResult 0111  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 2620  
                                 clear_11 262C                          ___awmod@dividend 007D  
                       ??_InitializeTasks 03FB                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02E8       __end_of_Tmr_RegisterTmr2IsrCallback 692A  
             _Tmr_RegisterTmr2IsrCallback 6920                 findEmptySpot@searchFailed 010E  
                                 _isspace 6464                              _Mdm_MainTask 5B78  
                                 _isupper 65D6               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                     MyApp_Task@emptyNumber 0113  
                  ?_Irq_InitIntController 007D                                   _smsText 049D  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2640                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC30                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 656E                                   _sprintf 3B88  
                                 _tolower 679A           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 68DC                          _HttpGetDataLocal 03A3  
                __end_of_Mdm_SetSmsFormat 5C18                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 4564                                   _toupper 67B2  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2632                              _getsUSBUSART 4BB6  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00DA               ?_Uart_MdmGsmGprsReadService 0004  
                  MyApp_Task@cmdAddNumber 0123             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC24  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC10  
                          _ModemEvtParser 209C                                   int_func 4564  
                         _USB1msTickCount 0310           _dummy_encapsulated_cmd_response 0372  
                _GetLastInteractionNumber 6914                                 i1u1632_28 657E  
                               i1u1584_20 2656                                 i1u1588_28 2776  
                               i1u1588_29 278A                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                __end_of_saveNumberInMemory 6780  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 66FA  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 1958                         _Rtcc_SetRtcStatus 67FA  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 62C0  
                           StringCopy@Len 0089                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 494C  
                      _UsbDevice_MainTask 6502                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 6966                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 32A6  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E8  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2A3A  
                         _RtccIsrCallback 02E4          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 49EA  
                    __end_of_parseCommand 4564                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 65B4                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0300  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6878                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 665E                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 0087                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E6                          _HttpGetMethodSts 01EC  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                isNumberValid@phoneNumber 007D                        _BothEP0OutUOWNsSet 01E1  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0068  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0036  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 221E                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D4  
                   __end_of_StopCondition 696E                  __size_of_HighPriorityIsr 4608  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 0369                                 _Led2Blink 0360  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 0357  
            __end_of_USBTransferOnePacket 4354                           ??_CheckTxStatus 007D  
                               _Led1Pulse 038D                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 1B86  
               __end_of_Rtcc_SetRtcStatus 6810                                 _Led2Pulse 0387  
                               _Led3Pulse 0381                         _I2cSlv_SendI2cMsg 60C2  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                         ??_ScheduleTasks 03FB                            _Tmr_TmrBConfig 3EB8  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 6878  
                       _OsAlrm_SetOsAlarm 4048                      Terminal@TermRxBuffer 0540  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5D02                               ?_initEeprom 0001  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 5D4E  
                               _ClipEvent 00DD                              ??_MyApp_Task 00B0  
                    Terminal@TermTxBuffer 0100             saveNumberInMemory@phoneNumber 0096  
                               _GetMethod 00D8                    _USBCtrlTrfSetupHandler 4F22  
                      ?_OsAlrm_SetOsAlarm 0083                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 28E8     __end_of_USBIncrement1msInternalTimers 65D6  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 65B4  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 5830  
                          _CheckAckStatus 6948                            __end_of___wmul 64B6  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 688A  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 5DE2  
                      Terminal@PackageLen 02EF         Uart_MdmGsmGprsReadService@RxState 002C  
                          __end_of_memset 6352                        _UartTxBufferStatus 5C66  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E2  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 68EC  
                               _MdmStatus 00D0                            __end_of_strcat 5780  
                          __end_of_strcpy 62F2                            __end_of_strlen 60C2  
                          __end_of_strtol 1D5C                       start_initialization 24EA  
         isNumberInMemory@currentPosition 00E2                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 382A  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 625A  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4B20                     __size_of_initPreamble 0026  
         __end_of_USBStdFeatureReqHandler 1958                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 0E26                          _UpdateOsCounters 68CC  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3DEE  
               __end_of_I2cSlv_SendI2cMsg 6100                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 4CE0  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                ?_initMemorizedNumbersCount 0001  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 68BC  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3F80                                 _SendSmsSm 1D5C  
               __end_of_OsAlrm_SetOsAlarm 4110                    __end_of_Tmr_TmrBIrqSet 5D4E  
                               _TaskTable 0586                                 _RingEvent 00DE  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D3                     __end_of_isNumberValid 5606  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B4  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 5780                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 640E                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 674C                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6952                                  ??___lmul 0085  
                           _isxdigit$6644 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2F32  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 51C4  
                      HttpGetMethod@Index 01C8                               __pdataBANK0 00E1  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03BC                isNumberInMemory@readBuffer 0102  
                             __pdataBANK4 04D6                               __pdataBANK5 0586  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 5A30  
                  __end_of_ConfigureModem 3906                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D5            __end_of_USBStdGetStatusHandler 4406  
                            _initPreamble 64B6                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC32                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 5B28  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
                           __pcstackBANK3 03FB              __size_of_USBCtrlTrfInHandler 00C2  
                         RiSm@MdmDrvState 002E                              _SetAckStatus 6852  
                            _isalpha$6634 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 692A                       __size_of_initEeprom 008A  
                    ?_USBStdGetDscHandler 0001                              _isdigit$6368 007E  
           UpdateSchFlag@InterruptCounter 02DA                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 6004       InitGprsNetwork@GprsNetInitNextState 00CF  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 669E  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 61B4  
            __end_of_LedBlinkStateMachine 2B82                               sprintf@flag 0083  
                    __size_of_Eeprom_Read 0054                           _USBStallHandler 5E70  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 0306  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 6732                __end_of_USBCheckCDCRequest 44B6  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 5888  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 667E  
                            ??_StringCopy 008B                          _Led_SetLedStatus 6382  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 663C                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_parseCommand 00AE  
                  __size_of_waitSetupCall 004E                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008               findEmptySpot@memoryOpResult 010F  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC10  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5DE2  
                               __ptext101 4D74                                 __ptext110 60C2  
                               __ptext102 480A                                 __ptext111 5FC4  
                               __ptext103 5BC8                                 __ptext120 5D4E  
                               __ptext112 663C                                 __ptext104 4FAE  
                               __ptext121 1D5C                                 __ptext113 68BC  
                               __ptext105 51C4                                 __ptext130 57D8  
                               __ptext122 6004                                 __ptext114 654A  
                               __ptext106 55A0                             Terminal@Index 00A6  
                               __ptext131 5830                                 __ptext123 209C  
                               __ptext115 546C                                 __ptext107 5988  
                               __ptext140 5C66                                 __ptext132 28E8  
                               __ptext124 625A                                 __ptext116 59DC  
                               __ptext108 3AB6                                 __ptext141 5606  
                               __ptext133 46BA                                 __ptext125 5AD6  
                               __ptext117 6914                                 __ptext109 5142  
                               __ptext150 2A3A                                 __ptext142 56C6  
                               __ptext134 6952                                 __ptext126 2E00  
                               __ptext118 61EE                                 __ptext151 5A30  
                               __ptext143 4E04                                 __ptext135 1132  
                               __ptext127 382A                                 __ptext119 5780  
                               __ptext160 221E                                 __ptext152 4048  
                               __ptext144 3F80                                 __ptext136 05EC  
                               __ptext128 0E26                                 __ptext161 238C  
                               __ptext153 648E                                 __ptext145 688A  
                               __ptext137 6100                                 __ptext129 2CC8  
                               __ptext170 6948                                 __ptext162 692A  
                               __ptext154 52B2                                 __ptext146 6224  
                               __ptext138 5F80                                 __ptext163 696A  
                               __ptext155 5CB4                                 __ptext147 4762  
                               __ptext139 669E                                 __ptext180 61B4  
                               __ptext172 656E                                 __ptext164 696E  
                               __ptext156 50BE                                 __ptext148 3492  
                               __ptext181 6826                                 __ptext173 68EC  
                               __ptext165 6852                                 __ptext157 640E  
                               __ptext149 6382                                 __ptext174 66FA  
                               __ptext166 6934                                 __ptext158 4110  
                               __ptext183 68DC                                 __ptext175 68CC  
                               __ptext167 67CA                                 __ptext159 63E0  
                               __ptext184 3DEE                                 __ptext176 2640  
                               __ptext168 6972                                 __ptext185 683C  
                               __ptext177 64DC                                 __ptext169 693E  
                               __ptext186 6976                                 __ptext178 5888  
                               __ptext187 697A                                 __ptext179 6716  
                                ?___awmod 007D                        _Sch_SchmIntService 68EC  
                               __ptext188 697E                                 __ptext189 0000  
                         _InitializeTasks 5324                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                   findEmptySpot@readBuffer 0100  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04CB                   Eeprom_Write@WriteBuffer 008F  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 0393                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 4296  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 044F  
                                ?_initFsm 0001                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039E  
          InitializeTasks@ActiveTaskIndex 03FD                    __size_of_findEmptySpot 007C  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 546C                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
              ??_GetLastInteractionNumber 007F                           Terminal@Payload 0766  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 553A  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 553A                ConfigureModem@DelayCounter 031E  
                      __end_of_StringCopy 5668                               _ep_data_out 02CE  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00DF                           Terminal@SwTimer 04C0  
                initEeprom@memoryOpResult 0101                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
                          _setupCallTicks 03B8              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                                _I2cReady 02EA                         ?_Mdm_SetSmsFormat 0001  
                          ?_UartWriteByte 007D                  MyApp_Task@numberInMemory 0128  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02D6  
                        _OsTmr_StartTimer 56C6                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E                  __end_of_isNumberInMemory 4A88  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 6826                __end_of_Mcu_StartSystemPll 66DC  
                            _parseCommand 44B6                              _PhoneNumbLen 00D1  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 6592  
                           _Rtcm_MainTask 4E94                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0099                          SendSmsSm@SwTimer 03E5  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F3  
         HttpGetMethod@GetMethodNextState 00CE                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 52B2                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 6322                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
            __end_of_OsTmr_GetTimerStatus 4E94                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4A88                      _UsbMasterPhoneNumber 0440  
        __size_of_USBStdFeatureReqHandler 0294                        _saveNumberInMemory 6766  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 2796  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 64DC  
                   __end_of_initGprsModem 4E04                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 695A  
                  __end_of_Mdm_GetSmsData 54D4                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E3                                  _ApnLocal 031C  
                          _StartCondition 696E                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01E9  
                           _Tmr_TmrBPrSet 33A4                             _waitSetupCall 5C18  
                     ?_saveNumberInMemory 0096                         _NewStringReceived 003C  
                            _isspace$6637 007E                          _UartSetConfigLow 5830  
                                _GetSmsSm 2E00                   __end_of_USBStallHandler 5EB4  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 0399  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DA  
                                _MdmCntSm 46BA                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 24FE  
                               copy_data1 251E                                 copy_data2 253E  
                               copy_data3 2576              __end_of_LedPulseStateMachine 357A  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 3660                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6934  
                           i2_GenerateEvt 683C                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5B  
               __end_of_I2c_InitI2cModule 5324                                  _MsgReady FE32  
                         ??_Term_MainTask 00A7                   __end_of_InitializeTasks 5394  
              initGprsModem@isInitialized 0099                   ?_USBCtrlTrfSetupHandler 0001  
                          isNumberValid@i 0081                             _findEmptySpot 51C4  
             __end_of_I2cSlv_QueryI2cData 3B88                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 4B20  
                    __size_of_SetBaudRate 004E                              ??_initEeprom 00B0  
                    ??_saveNumberInMemory 0098                              ?_TurnOnModem 0001  
                                _TxBuffer 0318                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 1132                                  _SmsEvent 00DC  
                         _SetUartBaudRate 2CC8              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 221E                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                           MyApp_Task@F9040 03CA  
                         MyApp_Task@F9035 FC11                           MyApp_Task@F9038 FC24  
                __end_of_UpdateOsCounters 68DC                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02F0                             _UpdateSchFlag 66FA  
                     __end_of_putUSBUSART 661A                               _line_coding 037A  
                            _Rtcc_LockRtc 68AC              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 2A3A                    __end_of_StartCondition 6972  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F0                 Rtcm_GetRtccDate@LocalDate 008A  
                parseCommand@addNumberCmd 008A                           ?_Mdm_GetSmsData 008F  
                I2c_WriteData@WriteStatus 0034                              _isupper$6640 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0032  
                          ?_Tmr_TmrBPrSet 0096                          __size_of_initFsm 0048  
                          ?_waitSetupCall 0001                          ??_ModemEvtParser 008F  
                        _GetOsTickCounter 688A                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A8  
                ModemEvtParser@RingString 00A3                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                                __ptext10 5D02                                  __ptext11 665E  
                                __ptext20 6502                                  __ptext12 4B20  
                                __ptext21 5E2A                                  __ptext13 66DC  
                         ??_UartWriteByte 007E                                  __ptext30 628E  
                                __ptext22 5B78                                  __ptext14 3184  
                                __ptext31 5E70                                  __ptext23 58E0  
                                __ptext15 5324                                  __ptext40 357A  
                                __ptext32 65B4                                  __ptext24 6960  
                                __ptext16 0ABC                                  __ptext41 4354  
                                __ptext33 2796                                  __ptext25 6592  
                                __ptext17 674C                                  __ptext50 3060  
                                __ptext42 2F32                                  __ptext34 4C4C  
                                __ptext26 6866                                  __ptext18 4E94  
                                __ptext51 3D22                                  __ptext43 16C4  
                                __ptext35 5D9A                                  __ptext27 6966  
                                __ptext19 3C56                                  __ptext60 00D0  
                                __ptext52 41D4                                  __ptext44 5668  
                                __ptext36 4F22                                  __ptext28 1F14  
                                __ptext61 3660                                  __ptext53 3906  
                                __ptext45 4406                                  __ptext37 32A6  
                                __ptext29 617A                                  __ptext70 65F8  
                                __ptext62 679A                                  __ptext54 2B82  
                                __ptext46 5394                                  __ptext38 494C  
                                __ptext71 5EF8                                  __ptext63 613E  
                                __ptext55 1420                                  __ptext47 5EB4  
                                __ptext39 3746                                  __ptext80 1958  
                                __ptext72 4610                                  __ptext64 1B86  
                                __ptext56 6084                                  __ptext48 4A88  
                                __ptext81 5240                                  __ptext73 5F3C  
                                __ptext65 67B2                                  __ptext57 5724  
                                __ptext49 54D4                                  __ptext90 5C18  
                                __ptext82 5038                                  __ptext74 4BB6  
                                __ptext66 6464                                  __ptext58 3B88  
                                __ptext91 667E                                  __ptext83 68AC  
                                __ptext75 4296                                  __ptext67 6352  
                                __ptext59 6322                                  __ptext92 6526  
                                __ptext84 553A                                  __ptext76 39DE  
                                __ptext68 65D6                                  __ptext93 6878  
                                __ptext85 4CE0                                  __ptext77 661A  
                                __ptext69 62C0                                  __ptext94 6766  
                                __ptext86 67FA                                  __ptext78 5934  
                                __ptext95 44B6                                  __ptext87 48AC  
                                __ptext79 689C                                  __ptext96 49EA  
                                __ptext88 6810                                  __ptext97 6780  
                                __ptext89 5400                                  __ptext98 64B6  
                                __ptext99 5A84                          __size_of_isupper 0022  
                 initEeprom@addressToRead 0100                                _I2cDummyTx 6716  
                  Tmr_TmrBIrqSet@Priority 007D                        __end_of_initEeprom 5038  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 002F  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 654A               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4FAE                             __size_of_main 000C  
             ??_initMemorizedNumbersCount 0096                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 008F  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                          ?_findEmptySpot 0001                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6948                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 6960                        ??_USBCtrlEPService 0097  
                                _isxdigit 613E                             _Mdm_IsRinging 6526  
                     _USBCtrlTrfInHandler 41D4                  I2c_ReadData@I2cReadState 0033  
              __end_of_Mdm_RequestSmsData 68CC                     __end_of_ScheduleTasks 32A6  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 54D4  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 008D                 _USBCtrlEPAllowStatusStage 3D22  
                     ??_Mdm_IsSmsReceived 0081                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 03FF                                strtol@sign 0093  
                         Term_MainSm@Data 046B                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 61B4                  __end_of_Mcu_ConfigExtInt 674C  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00C7  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 008F  
           I2c_WriteData@TentativeCounter 0035                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 665E                  __end_of_Led_SetLedStatus 63B2  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 5934  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 656E  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 4E04                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0152   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 56C6  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 5668  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2E00                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                 __end_ofMyApp_Task@F9035 FC1E                   __end_ofMyApp_Task@F9038 FC28  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
                  MyApp_Task@currentState 01D6            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009E                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5FC4                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 61EE  
                __end_of_Rtcm_GetRtccDate 55A0                               _putUSBUSART 65F8  
               Eeprom_Write@CommandLength 0095                       _USBCtrlTrfRxService 3060  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 617A                             ?_getSetupCall 0001  
                 _USBStdFeatureReqHandler 16C4                  __end_of_OsTmr_StartTimer 5724  
                    _LedPulseStateMachine 3492                        _USBCheckCDCRequest 4406  
                     _USBCtrlTrfTxService 3906                       RtccIrqInit@Priority 007D  
               _initMemorizedNumbersCount 6780                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                            ??_Eeprom_Write 0092  
                        _Rtcc_AlarmConfig 5400                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DD  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5E2A  
                  __size_of_isNumberValid 0066                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 6464  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00C9  
                              _WDTCONbits 000FC0                    MyApp_Task@memoryResult 0127  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 4762          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                         ??_findEmptySpot 00B0                             _StopCondition 696A  
                MyApp_Task@receivedNumber 04E0                     ??i1_I2cSlv_SendI2cMsg 0020  
                       ?_isNumberInMemory 0100                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00C8                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 625A  
                    __end_of_CDCTxService 2CC8                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2E                     Eeprom_Read@ReadBuffer 00A9  
                         ??_I2c_WriteData 0080                   ConfigureModem@NextState 01F2  
                 _UsbMasterPhoneNumberLen 031A                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 6866  
