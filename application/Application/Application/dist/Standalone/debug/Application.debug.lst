

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr  2 14:13:23 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	text0,global,reloc=2,class=CODE,delta=1
    39                           	psect	text1,global,reloc=2,class=CODE,delta=1
    40                           	psect	text2,global,reloc=2,class=CODE,delta=1
    41                           	psect	text3,global,reloc=2,class=CODE,delta=1
    42                           	psect	text4,global,reloc=2,class=CODE,delta=1
    43                           	psect	text5,global,reloc=2,class=CODE,delta=1
    44                           	psect	text6,global,reloc=2,class=CODE,delta=1
    45                           	psect	text7,global,reloc=2,class=CODE,delta=1
    46                           	psect	text8,global,reloc=2,class=CODE,delta=1
    47                           	psect	text9,global,reloc=2,class=CODE,delta=1
    48                           	psect	text10,global,reloc=2,class=CODE,delta=1
    49                           	psect	text11,global,reloc=2,class=CODE,delta=1
    50                           	psect	text12,global,reloc=2,class=CODE,delta=1
    51                           	psect	text13,global,reloc=2,class=CODE,delta=1
    52                           	psect	text14,global,reloc=2,class=CODE,delta=1
    53                           	psect	text15,global,reloc=2,class=CODE,delta=1
    54                           	psect	text16,global,reloc=2,class=CODE,delta=1
    55                           	psect	text17,global,reloc=2,class=CODE,delta=1
    56                           	psect	text18,global,reloc=2,class=CODE,delta=1
    57                           	psect	text19,global,reloc=2,class=CODE,delta=1
    58                           	psect	text20,global,reloc=2,class=CODE,delta=1
    59                           	psect	text21,global,reloc=2,class=CODE,delta=1
    60                           	psect	text22,global,reloc=2,class=CODE,delta=1
    61                           	psect	text23,global,reloc=2,class=CODE,delta=1
    62                           	psect	text24,global,reloc=2,class=CODE,delta=1
    63                           	psect	text25,global,reloc=2,class=CODE,delta=1
    64                           	psect	text26,global,reloc=2,class=CODE,delta=1
    65                           	psect	text27,global,reloc=2,class=CODE,delta=1
    66                           	psect	text28,global,reloc=2,class=CODE,delta=1
    67                           	psect	text29,global,reloc=2,class=CODE,delta=1
    68                           	psect	text30,global,reloc=2,class=CODE,delta=1
    69                           	psect	text31,global,reloc=2,class=CODE,delta=1
    70                           	psect	text32,global,reloc=2,class=CODE,delta=1
    71                           	psect	text33,global,reloc=2,class=CODE,delta=1
    72                           	psect	text34,global,reloc=2,class=CODE,delta=1
    73                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text36,global,reloc=2,class=CODE,delta=1
    75                           	psect	text37,global,reloc=2,class=CODE,delta=1
    76                           	psect	text38,global,reloc=2,class=CODE,delta=1
    77                           	psect	text39,global,reloc=2,class=CODE,delta=1
    78                           	psect	text40,global,reloc=2,class=CODE,delta=1
    79                           	psect	text41,global,reloc=2,class=CODE,delta=1
    80                           	psect	text42,global,reloc=2,class=CODE,delta=1
    81                           	psect	text43,global,reloc=2,class=CODE,delta=1
    82                           	psect	text44,global,reloc=2,class=CODE,delta=1
    83                           	psect	text45,global,reloc=2,class=CODE,delta=1
    84                           	psect	text46,global,reloc=2,class=CODE,delta=1
    85                           	psect	text47,global,reloc=2,class=CODE,delta=1
    86                           	psect	text48,global,reloc=2,class=CODE,delta=1
    87                           	psect	text49,global,reloc=2,class=CODE,delta=1
    88                           	psect	text50,global,reloc=2,class=CODE,delta=1
    89                           	psect	text51,global,reloc=2,class=CODE,delta=1
    90                           	psect	text52,global,reloc=2,class=CODE,delta=1
    91                           	psect	text53,global,reloc=2,class=CODE,delta=1
    92                           	psect	text54,global,reloc=2,class=CODE,delta=1
    93                           	psect	text55,global,reloc=2,class=CODE,delta=1
    94                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text58,global,reloc=2,class=CODE,delta=1
    97                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text60,global,reloc=2,class=CODE,delta=1
    99                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text70,global,reloc=2,class=CODE,delta=1
   109                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text74,global,reloc=2,class=CODE,delta=1
   113                           	psect	text75,global,reloc=2,class=CODE,delta=1
   114                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text78,global,reloc=2,class=CODE,delta=1
   117                           	psect	text79,global,reloc=2,class=CODE,delta=1
   118                           	psect	text80,global,reloc=2,class=CODE,delta=1
   119                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text83,global,reloc=2,class=CODE,delta=1
   122                           	psect	text84,global,reloc=2,class=CODE,delta=1
   123                           	psect	text85,global,reloc=2,class=CODE,delta=1
   124                           	psect	text86,global,reloc=2,class=CODE,delta=1
   125                           	psect	text87,global,reloc=2,class=CODE,delta=1
   126                           	psect	text88,global,reloc=2,class=CODE,delta=1
   127                           	psect	text89,global,reloc=2,class=CODE,delta=1
   128                           	psect	text90,global,reloc=2,class=CODE,delta=1
   129                           	psect	text91,global,reloc=2,class=CODE,delta=1
   130                           	psect	text92,global,reloc=2,class=CODE,delta=1
   131                           	psect	text93,global,reloc=2,class=CODE,delta=1
   132                           	psect	text94,global,reloc=2,class=CODE,delta=1
   133                           	psect	text95,global,reloc=2,class=CODE,delta=1
   134                           	psect	text96,global,reloc=2,class=CODE,delta=1
   135                           	psect	text97,global,reloc=2,class=CODE,delta=1
   136                           	psect	text98,global,reloc=2,class=CODE,delta=1
   137                           	psect	text99,global,reloc=2,class=CODE,delta=1
   138                           	psect	text100,global,reloc=2,class=CODE,delta=1
   139                           	psect	text101,global,reloc=2,class=CODE,delta=1
   140                           	psect	text102,global,reloc=2,class=CODE,delta=1
   141                           	psect	text103,global,reloc=2,class=CODE,delta=1
   142                           	psect	text104,global,reloc=2,class=CODE,delta=1
   143                           	psect	text105,global,reloc=2,class=CODE,delta=1
   144                           	psect	text106,global,reloc=2,class=CODE,delta=1
   145                           	psect	text107,global,reloc=2,class=CODE,delta=1
   146                           	psect	text108,global,reloc=2,class=CODE,delta=1
   147                           	psect	text109,global,reloc=2,class=CODE,delta=1
   148                           	psect	text110,global,reloc=2,class=CODE,delta=1
   149                           	psect	text111,global,reloc=2,class=CODE,delta=1
   150                           	psect	text112,global,reloc=2,class=CODE,delta=1
   151                           	psect	text113,global,reloc=2,class=CODE,delta=1
   152                           	psect	text114,global,reloc=2,class=CODE,delta=1
   153                           	psect	text115,global,reloc=2,class=CODE,delta=1
   154                           	psect	text116,global,reloc=2,class=CODE,delta=1
   155                           	psect	text117,global,reloc=2,class=CODE,delta=1
   156                           	psect	text118,global,reloc=2,class=CODE,delta=1
   157                           	psect	text119,global,reloc=2,class=CODE,delta=1
   158                           	psect	text120,global,reloc=2,class=CODE,delta=1
   159                           	psect	text121,global,reloc=2,class=CODE,delta=1
   160                           	psect	text122,global,reloc=2,class=CODE,delta=1
   161                           	psect	text123,global,reloc=2,class=CODE,delta=1
   162                           	psect	text124,global,reloc=2,class=CODE,delta=1
   163                           	psect	text125,global,reloc=2,class=CODE,delta=1
   164                           	psect	text126,global,reloc=2,class=CODE,delta=1
   165                           	psect	text127,global,reloc=2,class=CODE,delta=1
   166                           	psect	text128,global,reloc=2,class=CODE,delta=1
   167                           	psect	text129,global,reloc=2,class=CODE,delta=1
   168                           	psect	text130,global,reloc=2,class=CODE,delta=1
   169                           	psect	text131,global,reloc=2,class=CODE,delta=1
   170                           	psect	text132,global,reloc=2,class=CODE,delta=1
   171                           	psect	text133,global,reloc=2,class=CODE,delta=1
   172                           	psect	text134,global,reloc=2,class=CODE,delta=1
   173                           	psect	text135,global,reloc=2,class=CODE,delta=1
   174                           	psect	text136,global,reloc=2,class=CODE,delta=1
   175                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text138,global,reloc=2,class=CODE,delta=1
   177                           	psect	text139,global,reloc=2,class=CODE,delta=1
   178                           	psect	text140,global,reloc=2,class=CODE,delta=1
   179                           	psect	text141,global,reloc=2,class=CODE,delta=1
   180                           	psect	text142,global,reloc=2,class=CODE,delta=1
   181                           	psect	text143,global,reloc=2,class=CODE,delta=1
   182                           	psect	text144,global,reloc=2,class=CODE,delta=1
   183                           	psect	text145,global,reloc=2,class=CODE,delta=1
   184                           	psect	text146,global,reloc=2,class=CODE,delta=1
   185                           	psect	text147,global,reloc=2,class=CODE,delta=1
   186                           	psect	text148,global,reloc=2,class=CODE,delta=1
   187                           	psect	text149,global,reloc=2,class=CODE,delta=1
   188                           	psect	text150,global,reloc=2,class=CODE,delta=1
   189                           	psect	text151,global,reloc=2,class=CODE,delta=1
   190                           	psect	text152,global,reloc=2,class=CODE,delta=1
   191                           	psect	text153,global,reloc=2,class=CODE,delta=1
   192                           	psect	text154,global,reloc=2,class=CODE,delta=1
   193                           	psect	text155,global,reloc=2,class=CODE,delta=1
   194                           	psect	text156,global,reloc=2,class=CODE,delta=1
   195                           	psect	text157,global,reloc=2,class=CODE,delta=1
   196                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   197                           	psect	text159,global,reloc=2,class=CODE,delta=1
   198                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text161,global,reloc=2,class=CODE,delta=1
   200                           	psect	text162,global,reloc=2,class=CODE,delta=1
   201                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text164,global,reloc=2,class=CODE,delta=1
   203                           	psect	text165,global,reloc=2,class=CODE,delta=1
   204                           	psect	text166,global,reloc=2,class=CODE,delta=1
   205                           	psect	text167,global,reloc=2,class=CODE,delta=1
   206                           	psect	text168,global,reloc=2,class=CODE,delta=1
   207                           	psect	text169,global,reloc=2,class=CODE,delta=1
   208                           	psect	text170,global,reloc=2,class=CODE,delta=1
   209                           	psect	text171,global,reloc=2,class=CODE,delta=1
   210                           	psect	text172,global,reloc=2,class=CODE,delta=1
   211                           	psect	text173,global,reloc=2,class=CODE,delta=1
   212                           	psect	text174,global,reloc=2,class=CODE,delta=1
   213                           	psect	text175,global,reloc=2,class=CODE,delta=1
   214                           	psect	text176,global,reloc=2,class=CODE,delta=1
   215                           	psect	text177,global,reloc=2,class=CODE,delta=1
   216                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   217                           	psect	text179,global,reloc=2,class=CODE,delta=1
   218                           	psect	text180,global,reloc=2,class=CODE,delta=1
   219                           	psect	text181,global,reloc=2,class=CODE,delta=1
   220                           	psect	text182,global,reloc=2,class=CODE,delta=1
   221                           	psect	text183,global,reloc=2,class=CODE,delta=1
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	text185,global,reloc=2,class=CODE,delta=1
   224                           	psect	text186,global,reloc=2,class=CODE,delta=1
   225                           	psect	text187,global,reloc=2,class=CODE,delta=1
   226                           	psect	text188,global,reloc=2,class=CODE,delta=1
   227                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   229                           	psect	text190,global,reloc=2,class=CODE,delta=1
   230                           	psect	text191,global,reloc=2,class=CODE,delta=1
   231                           	psect	text192,global,reloc=2,class=CODE,delta=1
   232                           	psect	text193,global,reloc=2,class=CODE,delta=1
   233                           	psect	text194,global,reloc=2,class=CODE,delta=1
   234                           	psect	text195,global,reloc=2,class=CODE,delta=1
   235                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   236                           	psect	text196,global,reloc=2,class=CODE,delta=1
   237                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   238                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   239                           	dabs	1,0x400,48,_BDT
   240                           	dabs	1,0x438,8,_CtrlTrfData
   241                           	dabs	1,0x430,8,_SetupPkt
   242  0000                     
   243                           ; Version 1.45
   244                           ; Generated 16/11/2017 GMT
   245                           ; 
   246                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   247                           ; All rights reserved.
   248                           ; 
   249                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   250                           ; 
   251                           ; Redistribution and use in source and binary forms, with or without modification, are
   252                           ; permitted provided that the following conditions are met:
   253                           ; 
   254                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   255                           ;        conditions and the following disclaimer.
   256                           ; 
   257                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   258                           ;        of conditions and the following disclaimer in the documentation and/or other
   259                           ;        materials provided with the distribution.
   260                           ; 
   261                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   262                           ;        software without specific prior written permission.
   263                           ; 
   264                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   265                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   266                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   267                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   268                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   269                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   270                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   271                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   272                           ; 
   273                           ; 
   274                           ; Code-generator required, PIC18F46J50 Definitions
   275                           ; 
   276                           ; SFR Addresses
   277  0000                     
   278                           	psect	idataBANK0
   279  006BEE                     __pidataBANK0:
   280                           	opt stack 0
   281                           
   282                           ;initializer for findEmptySpot@currentPosition
   283  006BEE  20                 	db	32
   284                           
   285                           ;initializer for isNumberInMemory@currentPosition
   286  006BEF  20                 	db	32
   287                           
   288                           	psect	idataBANK1
   289  006BF0                     __pidataBANK1:
   290                           	opt stack 0
   291                           
   292                           ;initializer for _isMemoryEmpty
   293  006BF0  01                 	db	1
   294                           
   295                           ;initializer for InitGprsNetwork@GprsInitSts
   296  006BF1  01                 	db	1
   297                           
   298                           	psect	idataBANK2
   299  006B4C                     __pidataBANK2:
   300                           	opt stack 0
   301                           
   302                           ;initializer for Terminal@EchoOption
   303  006B4C  01                 	db	1
   304                           
   305                           ;initializer for _MainSystemTimebaseFlag
   306  006B4D  01                 	db	1
   307                           
   308                           ;initializer for _ConnTimeout
   309  006B4E  00                 	db	0
   310  006B4F  01                 	db	1
   311  006B50  0000               	dw	0
   312  006B52  0000               	dw	0
   313  006B54  0000               	dw	0
   314  006B56  0000               	dw	0
   315  006B58  00                 	db	0
   316                           
   317                           ;initializer for _relayBuffer
   318  006B59  50                 	db	80
   319  006B5A  00                 	db	0
   320                           
   321                           	psect	idataBANK3
   322  00638A                     __pidataBANK3:
   323                           	opt stack 0
   324                           
   325                           ;initializer for ModemEvtParser@F9114
   326  00638A  2B                 	db	43
   327  00638B  43                 	db	67
   328  00638C  4D                 	db	77
   329  00638D  54                 	db	84
   330  00638E  49                 	db	73
   331                           
   332                           ;initializer for ModemEvtParser@F9112
   333  00638F  2B                 	db	43
   334  006390  43                 	db	67
   335  006391  4C                 	db	76
   336  006392  49                 	db	73
   337  006393  50                 	db	80
   338                           
   339                           ;initializer for ModemEvtParser@F9110
   340  006394  52                 	db	82
   341  006395  49                 	db	73
   342  006396  4E                 	db	78
   343  006397  47                 	db	71
   344                           
   345                           ;initializer for Term_MainSm@TermDelay
   346  006398  01                 	db	1
   347  006399  01                 	db	1
   348  00639A  0000               	dw	0
   349  00639C  0000               	dw	0
   350  00639E  0000               	dw	0
   351  0063A0  0000               	dw	0
   352  0063A2  00                 	db	0
   353                           
   354                           ;initializer for _ConnWait
   355  0063A3  00                 	db	0
   356  0063A4  01                 	db	1
   357  0063A5  0000               	dw	0
   358  0063A7  0000               	dw	0
   359  0063A9  0000               	dw	0
   360  0063AB  0000               	dw	0
   361  0063AD  00                 	db	0
   362                           
   363                           ;initializer for SendSmsSm@SwTimer
   364  0063AE  01                 	db	1
   365  0063AF  01                 	db	1
   366  0063B0  0000               	dw	0
   367  0063B2  0000               	dw	0
   368  0063B4  0000               	dw	0
   369  0063B6  0000               	dw	0
   370  0063B8  00                 	db	0
   371                           
   372                           ;initializer for CheckModem@Timeout
   373  0063B9  00                 	db	0
   374  0063BA  01                 	db	1
   375  0063BB  0000               	dw	0
   376  0063BD  0000               	dw	0
   377  0063BF  0000               	dw	0
   378  0063C1  0000               	dw	0
   379  0063C3  00                 	db	0
   380                           
   381                           	psect	idataBANK4
   382  006B82                     __pidataBANK4:
   383                           	opt stack 0
   384                           
   385                           ;initializer for ModemEvtParser@F9116
   386  006B82  43                 	db	67
   387  006B83  61                 	db	97
   388  006B84  6C                 	db	108
   389  006B85  6C                 	db	108
   390  006B86  20                 	db	32
   391  006B87  52                 	db	82
   392  006B88  65                 	db	101
   393  006B89  61                 	db	97
   394  006B8A  64                 	db	100
   395  006B8B  79                 	db	121
   396                           
   397                           	psect	idataBANK5
   398  005DC0                     __pidataBANK5:
   399                           	opt stack 0
   400                           
   401                           ;initializer for _TaskTable
   402  005DC0  CC                 	db	low _Mdm_DrvMainFn
   403  005DC1  6B                 	db	high _Mdm_DrvMainFn
   404  005DC2  00                 	db	0
   405  005DC3  0000               	dw	0
   406  005DC5  000A               	dw	10
   407  005DC7  00                 	db	0
   408  005DC8  78                 	db	low _I2cSlv_MainTask
   409  005DC9  5B                 	db	high _I2cSlv_MainTask
   410  005DCA  00                 	db	0
   411  005DCB  0000               	dw	0
   412  005DCD  0001               	dw	1
   413  005DCF  00                 	db	0
   414  005DD0  10                 	db	low _Mdm_MainTask
   415  005DD1  5E                 	db	high _Mdm_MainTask
   416  005DD2  00                 	db	0
   417  005DD3  0000               	dw	0
   418  005DD5  0001               	dw	1
   419  005DD7  00                 	db	0
   420  005DD8  7A                 	db	low _MdmHttp_MainTask
   421  005DD9  60                 	db	high _MdmHttp_MainTask
   422  005DDA  00                 	db	0
   423  005DDB  0000               	dw	0
   424  005DDD  0001               	dw	1
   425  005DDF  00                 	db	0
   426  005DE0  5C                 	db	low _UsbDevice_MainTask
   427  005DE1  67                 	db	high _UsbDevice_MainTask
   428  005DE2  00                 	db	0
   429  005DE3  0000               	dw	0
   430  005DE5  0001               	dw	1
   431  005DE7  00                 	db	0
   432  005DE8  EC                 	db	low _Wdg_MainTask
   433  005DE9  67                 	db	high _Wdg_MainTask
   434  005DEA  00                 	db	0
   435  005DEB  0000               	dw	0
   436  005DED  0064               	dw	100
   437  005DEF  00                 	db	0
   438  005DF0  98                 	db	low _Led_MainTask
   439  005DF1  3C                 	db	high _Led_MainTask
   440  005DF2  00                 	db	0
   441  005DF3  0000               	dw	0
   442  005DF5  0032               	dw	50
   443  005DF7  00                 	db	0
   444  005DF8  6E                 	db	low _Rtcm_MainTask
   445  005DF9  51                 	db	high _Rtcm_MainTask
   446  005DFA  00                 	db	0
   447  005DFB  0000               	dw	0
   448  005DFD  0064               	dw	100
   449  005DFF  00                 	db	0
   450  005E00  C4                 	db	low _Term_MainTask
   451  005E01  69                 	db	high _Term_MainTask
   452  005E02  00                 	db	0
   453  005E03  0000               	dw	0
   454  005E05  0001               	dw	1
   455  005E07  00                 	db	0
   456  005E08  FC                 	db	low _MyApp_Task
   457  005E09  34                 	db	high _MyApp_Task
   458  005E0A  00                 	db	0
   459  005E0B  0000               	dw	0
   460  005E0D  0064               	dw	100
   461  005E0F  00                 	db	0
   462                           
   463                           	psect	mediumconst
   464  00FC0E                     __pmediumconst:
   465                           	opt stack 0
   466  00FC0E  00                 	db	0
   467  00FC0F                     delCmdFsm@F9013:
   468                           	opt stack 0
   469  00FC0F  00                 	db	0
   470  00FC10  00                 	db	0
   471  00FC11  00                 	db	0
   472  00FC12  00                 	db	0
   473  00FC13  00                 	db	0
   474  00FC14  00                 	db	0
   475  00FC15  00                 	db	0
   476  00FC16  00                 	db	0
   477  00FC17  00                 	db	0
   478  00FC18  00                 	db	0
   479  00FC19  00                 	db	0
   480  00FC1A  00                 	db	0
   481  00FC1B  00                 	db	0
   482  00FC1C                     __end_ofdelCmdFsm@F9013:
   483                           	opt stack 0
   484  00FC1C                     _USB_SD_Ptr:
   485                           	opt stack 0
   486  00FC1C  5B                 	db	low _sd000
   487  00FC1D  FE                 	db	high _sd000
   488  00FC1E  14                 	db	low _sd001
   489  00FC1F  FE                 	db	high _sd001
   490  00FC20  EE                 	db	low _sd002
   491  00FC21  FD                 	db	high _sd002
   492  00FC22                     __end_of_USB_SD_Ptr:
   493                           	opt stack 0
   494  00FC22                     parseCommand@F9030:
   495                           	opt stack 0
   496  00FC22  52                 	db	82
   497  00FC23  45                 	db	69
   498  00FC24  53                 	db	83
   499  00FC25  3B                 	db	59
   500  00FC26                     __end_ofparseCommand@F9030:
   501                           	opt stack 0
   502  00FC26                     parseCommand@F9028:
   503                           	opt stack 0
   504  00FC26  44                 	db	68
   505  00FC27  45                 	db	69
   506  00FC28  4C                 	db	76
   507  00FC29  3B                 	db	59
   508  00FC2A                     __end_ofparseCommand@F9028:
   509                           	opt stack 0
   510  00FC2A                     parseCommand@F9026:
   511                           	opt stack 0
   512  00FC2A  41                 	db	65
   513  00FC2B  44                 	db	68
   514  00FC2C  44                 	db	68
   515  00FC2D  3B                 	db	59
   516  00FC2E                     __end_ofparseCommand@F9026:
   517                           	opt stack 0
   518  00FC2E                     _USB_CD_Ptr:
   519                           	opt stack 0
   520  00FC2E  AB                 	db	low _configDescriptor1
   521  00FC2F  FD                 	db	high _configDescriptor1
   522  00FC30                     __end_of_USB_CD_Ptr:
   523                           	opt stack 0
   524  00FC30                     _TaskNumber:
   525                           	opt stack 0
   526  00FC30  000A               	dw	10
   527  00FC32                     __end_of_TaskNumber:
   528                           	opt stack 0
   529  00FC32                     _MsgFormat:
   530                           	opt stack 0
   531  00FC32  48                 	db	72
   532  00FC33  6F                 	db	111
   533  00FC34  73                 	db	115
   534  00FC35  74                 	db	116
   535  00FC36  20                 	db	32
   536  00FC37  6D                 	db	109
   537  00FC38  65                 	db	101
   538  00FC39  73                 	db	115
   539  00FC3A  73                 	db	115
   540  00FC3B  61                 	db	97
   541  00FC3C  67                 	db	103
   542  00FC3D  65                 	db	101
   543  00FC3E  20                 	db	32
   544  00FC3F  66                 	db	102
   545  00FC40  6F                 	db	111
   546  00FC41  72                 	db	114
   547  00FC42  6D                 	db	109
   548  00FC43  61                 	db	97
   549  00FC44  74                 	db	116
   550  00FC45  3A                 	db	58
   551  00FC46  20                 	db	32
   552  00FC47  0D                 	db	13
   553  00FC48  0A                 	db	10
   554  00FC49  5B                 	db	91
   555  00FC4A  6F                 	db	111
   556  00FC4B  70                 	db	112
   557  00FC4C  5F                 	db	95
   558  00FC4D  74                 	db	116
   559  00FC4E  79                 	db	121
   560  00FC4F  70                 	db	112
   561  00FC50  65                 	db	101
   562  00FC51  5D                 	db	93
   563  00FC52  3A                 	db	58
   564  00FC53  5B                 	db	91
   565  00FC54  6F                 	db	111
   566  00FC55  70                 	db	112
   567  00FC56  5D                 	db	93
   568  00FC57  3A                 	db	58
   569  00FC58  5B                 	db	91
   570  00FC59  6C                 	db	108
   571  00FC5A  65                 	db	101
   572  00FC5B  6E                 	db	110
   573  00FC5C  5D                 	db	93
   574  00FC5D  3A                 	db	58
   575  00FC5E  5B                 	db	91
   576  00FC5F  61                 	db	97
   577  00FC60  64                 	db	100
   578  00FC61  64                 	db	100
   579  00FC62  72                 	db	114
   580  00FC63  5D                 	db	93
   581  00FC64  3A                 	db	58
   582  00FC65  5B                 	db	91
   583  00FC66  70                 	db	112
   584  00FC67  61                 	db	97
   585  00FC68  79                 	db	121
   586  00FC69  6C                 	db	108
   587  00FC6A  6F                 	db	111
   588  00FC6B  61                 	db	97
   589  00FC6C  64                 	db	100
   590  00FC6D  5D                 	db	93
   591  00FC6E  0D                 	db	13
   592  00FC6F  0A                 	db	10
   593  00FC70  0D                 	db	13
   594  00FC71  0A                 	db	10
   595  00FC72  5B                 	db	91
   596  00FC73  6F                 	db	111
   597  00FC74  70                 	db	112
   598  00FC75  5F                 	db	95
   599  00FC76  74                 	db	116
   600  00FC77  79                 	db	121
   601  00FC78  70                 	db	112
   602  00FC79  65                 	db	101
   603  00FC7A  5D                 	db	93
   604  00FC7B  20                 	db	32
   605  00FC7C  3D                 	db	61
   606  00FC7D  20                 	db	32
   607  00FC7E  53                 	db	83
   608  00FC7F  4F                 	db	79
   609  00FC80  2C                 	db	44
   610  00FC81  53                 	db	83
   611  00FC82  42                 	db	66
   612  00FC83  0D                 	db	13
   613  00FC84  0A                 	db	10
   614  00FC85  5B                 	db	91
   615  00FC86  6F                 	db	111
   616  00FC87  70                 	db	112
   617  00FC88  5D                 	db	93
   618  00FC89  20                 	db	32
   619  00FC8A  3D                 	db	61
   620  00FC8B  20                 	db	32
   621  00FC8C  52                 	db	82
   622  00FC8D  3A                 	db	58
   623  00FC8E  20                 	db	32
   624  00FC8F  72                 	db	114
   625  00FC90  65                 	db	101
   626  00FC91  61                 	db	97
   627  00FC92  64                 	db	100
   628  00FC93  2C                 	db	44
   629  00FC94  57                 	db	87
   630  00FC95  3A                 	db	58
   631  00FC96  20                 	db	32
   632  00FC97  77                 	db	119
   633  00FC98  72                 	db	114
   634  00FC99  69                 	db	105
   635  00FC9A  74                 	db	116
   636  00FC9B  65                 	db	101
   637  00FC9C  0D                 	db	13
   638  00FC9D  0A                 	db	10
   639  00FC9E  5B                 	db	91
   640  00FC9F  6C                 	db	108
   641  00FCA0  65                 	db	101
   642  00FCA1  6E                 	db	110
   643  00FCA2  5D                 	db	93
   644  00FCA3  20                 	db	32
   645  00FCA4  3D                 	db	61
   646  00FCA5  20                 	db	32
   647  00FCA6  32                 	db	50
   648  00FCA7  20                 	db	32
   649  00FCA8  62                 	db	98
   650  00FCA9  79                 	db	121
   651  00FCAA  74                 	db	116
   652  00FCAB  65                 	db	101
   653  00FCAC  20                 	db	32
   654  00FCAD  41                 	db	65
   655  00FCAE  53                 	db	83
   656  00FCAF  43                 	db	67
   657  00FCB0  49                 	db	73
   658  00FCB1  49                 	db	73
   659  00FCB2  0D                 	db	13
   660  00FCB3  0A                 	db	10
   661  00FCB4  5B                 	db	91
   662  00FCB5  61                 	db	97
   663  00FCB6  64                 	db	100
   664  00FCB7  64                 	db	100
   665  00FCB8  72                 	db	114
   666  00FCB9  5D                 	db	93
   667  00FCBA  20                 	db	32
   668  00FCBB  3D                 	db	61
   669  00FCBC  20                 	db	32
   670  00FCBD  32                 	db	50
   671  00FCBE  20                 	db	32
   672  00FCBF  62                 	db	98
   673  00FCC0  79                 	db	121
   674  00FCC1  74                 	db	116
   675  00FCC2  65                 	db	101
   676  00FCC3  20                 	db	32
   677  00FCC4  41                 	db	65
   678  00FCC5  53                 	db	83
   679  00FCC6  43                 	db	67
   680  00FCC7  49                 	db	73
   681  00FCC8  49                 	db	73
   682  00FCC9  0D                 	db	13
   683  00FCCA  0A                 	db	10
   684  00FCCB  5B                 	db	91
   685  00FCCC  70                 	db	112
   686  00FCCD  61                 	db	97
   687  00FCCE  79                 	db	121
   688  00FCCF  6C                 	db	108
   689  00FCD0  6F                 	db	111
   690  00FCD1  61                 	db	97
   691  00FCD2  64                 	db	100
   692  00FCD3  5D                 	db	93
   693  00FCD4  20                 	db	32
   694  00FCD5  3D                 	db	61
   695  00FCD6  20                 	db	32
   696  00FCD7  6D                 	db	109
   697  00FCD8  61                 	db	97
   698  00FCD9  78                 	db	120
   699  00FCDA  20                 	db	32
   700  00FCDB  32                 	db	50
   701  00FCDC  30                 	db	48
   702  00FCDD  20                 	db	32
   703  00FCDE  62                 	db	98
   704  00FCDF  79                 	db	121
   705  00FCE0  74                 	db	116
   706  00FCE1  65                 	db	101
   707  00FCE2  20                 	db	32
   708  00FCE3  41                 	db	65
   709  00FCE4  53                 	db	83
   710  00FCE5  43                 	db	67
   711  00FCE6  49                 	db	73
   712  00FCE7  49                 	db	73
   713  00FCE8  0D                 	db	13
   714  00FCE9  0A                 	db	10
   715  00FCEA  0D                 	db	13
   716  00FCEB  0A                 	db	10
   717  00FCEC  54                 	db	84
   718  00FCED  65                 	db	101
   719  00FCEE  72                 	db	114
   720  00FCEF  6D                 	db	109
   721  00FCF0  69                 	db	105
   722  00FCF1  6E                 	db	110
   723  00FCF2  61                 	db	97
   724  00FCF3  6C                 	db	108
   725  00FCF4  20                 	db	32
   726  00FCF5  4D                 	db	77
   727  00FCF6  6F                 	db	111
   728  00FCF7  64                 	db	100
   729  00FCF8  65                 	db	101
   730  00FCF9  3A                 	db	58
   731  00FCFA  20                 	db	32
   732  00FCFB  43                 	db	67
   733  00FCFC  4F                 	db	79
   734  00FCFD  4D                 	db	77
   735  00FCFE  4D                 	db	77
   736  00FCFF  41                 	db	65
   737  00FD00  4E                 	db	78
   738  00FD01  44                 	db	68
   739  00FD02  20                 	db	32
   740  00FD03  4D                 	db	77
   741  00FD04  4F                 	db	79
   742  00FD05  44                 	db	68
   743  00FD06  45                 	db	69
   744  00FD07  0D                 	db	13
   745  00FD08  0A                 	db	10
   746  00FD09  4D                 	db	77
   747  00FD0A  6F                 	db	111
   748  00FD0B  64                 	db	100
   749  00FD0C  65                 	db	101
   750  00FD0D  6D                 	db	109
   751  00FD0E  20                 	db	32
   752  00FD0F  54                 	db	84
   753  00FD10  79                 	db	121
   754  00FD11  70                 	db	112
   755  00FD12  65                 	db	101
   756  00FD13  3A                 	db	58
   757  00FD14  20                 	db	32
   758  00FD15  47                 	db	71
   759  00FD16  53                 	db	83
   760  00FD17  4D                 	db	77
   761  00FD18  2F                 	db	47
   762  00FD19  47                 	db	71
   763  00FD1A  50                 	db	80
   764  00FD1B  52                 	db	82
   765  00FD1C  53                 	db	83
   766  00FD1D  0D                 	db	13
   767  00FD1E  0A                 	db	10
   768  00FD1F  0D                 	db	13
   769  00FD20  0A                 	db	10
   770  00FD21  00                 	db	0
   771  00FD22                     __end_of_MsgFormat:
   772                           	opt stack 0
   773  00FD22                     _Welcome:
   774                           	opt stack 0
   775  00FD22  2A                 	db	42
   776  00FD23  2A                 	db	42
   777  00FD24  2A                 	db	42
   778  00FD25  2A                 	db	42
   779  00FD26  2A                 	db	42
   780  00FD27  2A                 	db	42
   781  00FD28  2A                 	db	42
   782  00FD29  2A                 	db	42
   783  00FD2A  2A                 	db	42
   784  00FD2B  2A                 	db	42
   785  00FD2C  2A                 	db	42
   786  00FD2D  2A                 	db	42
   787  00FD2E  2A                 	db	42
   788  00FD2F  2A                 	db	42
   789  00FD30  2A                 	db	42
   790  00FD31  2A                 	db	42
   791  00FD32  2A                 	db	42
   792  00FD33  2A                 	db	42
   793  00FD34  2A                 	db	42
   794  00FD35  2A                 	db	42
   795  00FD36  2A                 	db	42
   796  00FD37  2A                 	db	42
   797  00FD38  2A                 	db	42
   798  00FD39  2A                 	db	42
   799  00FD3A  2A                 	db	42
   800  00FD3B  2A                 	db	42
   801  00FD3C  2A                 	db	42
   802  00FD3D  2A                 	db	42
   803  00FD3E  2A                 	db	42
   804  00FD3F  2A                 	db	42
   805  00FD40  2A                 	db	42
   806  00FD41  2A                 	db	42
   807  00FD42  2A                 	db	42
   808  00FD43  2A                 	db	42
   809  00FD44  2A                 	db	42
   810  00FD45  2A                 	db	42
   811  00FD46  2A                 	db	42
   812  00FD47  2A                 	db	42
   813  00FD48  2A                 	db	42
   814  00FD49  2A                 	db	42
   815  00FD4A  2A                 	db	42
   816  00FD4B  2A                 	db	42
   817  00FD4C  2A                 	db	42
   818  00FD4D  2A                 	db	42
   819  00FD4E  2A                 	db	42
   820  00FD4F  2A                 	db	42
   821  00FD50  2A                 	db	42
   822  00FD51  2A                 	db	42
   823  00FD52  2A                 	db	42
   824  00FD53  0D                 	db	13
   825  00FD54  0A                 	db	10
   826  00FD55  20                 	db	32
   827  00FD56  20                 	db	32
   828  00FD57  20                 	db	32
   829  00FD58  20                 	db	32
   830  00FD59  20                 	db	32
   831  00FD5A  20                 	db	32
   832  00FD5B  20                 	db	32
   833  00FD5C  20                 	db	32
   834  00FD5D  20                 	db	32
   835  00FD5E  20                 	db	32
   836  00FD5F  20                 	db	32
   837  00FD60  20                 	db	32
   838  00FD61  20                 	db	32
   839  00FD62  20                 	db	32
   840  00FD63  20                 	db	32
   841  00FD64  20                 	db	32
   842  00FD65  20                 	db	32
   843  00FD66  20                 	db	32
   844  00FD67  4D                 	db	77
   845  00FD68  45                 	db	69
   846  00FD69  52                 	db	82
   847  00FD6A  43                 	db	67
   848  00FD6B  55                 	db	85
   849  00FD6C  52                 	db	82
   850  00FD6D  59                 	db	89
   851  00FD6E  20                 	db	32
   852  00FD6F  53                 	db	83
   853  00FD70  59                 	db	89
   854  00FD71  53                 	db	83
   855  00FD72  54                 	db	84
   856  00FD73  45                 	db	69
   857  00FD74  4D                 	db	77
   858  00FD75  0D                 	db	13
   859  00FD76  0A                 	db	10
   860  00FD77  2A                 	db	42
   861  00FD78  2A                 	db	42
   862  00FD79  2A                 	db	42
   863  00FD7A  2A                 	db	42
   864  00FD7B  2A                 	db	42
   865  00FD7C  2A                 	db	42
   866  00FD7D  2A                 	db	42
   867  00FD7E  2A                 	db	42
   868  00FD7F  2A                 	db	42
   869  00FD80  2A                 	db	42
   870  00FD81  2A                 	db	42
   871  00FD82  2A                 	db	42
   872  00FD83  2A                 	db	42
   873  00FD84  2A                 	db	42
   874  00FD85  2A                 	db	42
   875  00FD86  2A                 	db	42
   876  00FD87  2A                 	db	42
   877  00FD88  2A                 	db	42
   878  00FD89  2A                 	db	42
   879  00FD8A  2A                 	db	42
   880  00FD8B  2A                 	db	42
   881  00FD8C  2A                 	db	42
   882  00FD8D  2A                 	db	42
   883  00FD8E  2A                 	db	42
   884  00FD8F  2A                 	db	42
   885  00FD90  2A                 	db	42
   886  00FD91  2A                 	db	42
   887  00FD92  2A                 	db	42
   888  00FD93  2A                 	db	42
   889  00FD94  2A                 	db	42
   890  00FD95  2A                 	db	42
   891  00FD96  2A                 	db	42
   892  00FD97  2A                 	db	42
   893  00FD98  2A                 	db	42
   894  00FD99  2A                 	db	42
   895  00FD9A  2A                 	db	42
   896  00FD9B  2A                 	db	42
   897  00FD9C  2A                 	db	42
   898  00FD9D  2A                 	db	42
   899  00FD9E  2A                 	db	42
   900  00FD9F  2A                 	db	42
   901  00FDA0  2A                 	db	42
   902  00FDA1  2A                 	db	42
   903  00FDA2  2A                 	db	42
   904  00FDA3  2A                 	db	42
   905  00FDA4  2A                 	db	42
   906  00FDA5  2A                 	db	42
   907  00FDA6  2A                 	db	42
   908  00FDA7  2A                 	db	42
   909  00FDA8  0D                 	db	13
   910  00FDA9  0A                 	db	10
   911  00FDAA  00                 	db	0
   912  00FDAB                     __end_of_Welcome:
   913                           	opt stack 0
   914  00FDAB                     _configDescriptor1:
   915                           	opt stack 0
   916  00FDAB  09                 	db	9
   917  00FDAC  02                 	db	2
   918  00FDAD  43                 	db	67
   919  00FDAE  00                 	db	0
   920  00FDAF  02                 	db	2
   921  00FDB0  01                 	db	1
   922  00FDB1  00                 	db	0
   923  00FDB2  C0                 	db	192
   924  00FDB3  32                 	db	50
   925  00FDB4  09                 	db	9
   926  00FDB5  04                 	db	4
   927  00FDB6  00                 	db	0
   928  00FDB7  00                 	db	0
   929  00FDB8  01                 	db	1
   930  00FDB9  02                 	db	2
   931  00FDBA  02                 	db	2
   932  00FDBB  01                 	db	1
   933  00FDBC  00                 	db	0
   934  00FDBD  05                 	db	5
   935  00FDBE  24                 	db	36
   936  00FDBF  00                 	db	0
   937  00FDC0  10                 	db	16
   938  00FDC1  01                 	db	1
   939  00FDC2  04                 	db	4
   940  00FDC3  24                 	db	36
   941  00FDC4  02                 	db	2
   942  00FDC5  02                 	db	2
   943  00FDC6  05                 	db	5
   944  00FDC7  24                 	db	36
   945  00FDC8  06                 	db	6
   946  00FDC9  00                 	db	0
   947  00FDCA  01                 	db	1
   948  00FDCB  05                 	db	5
   949  00FDCC  24                 	db	36
   950  00FDCD  01                 	db	1
   951  00FDCE  00                 	db	0
   952  00FDCF  01                 	db	1
   953  00FDD0  07                 	db	7
   954  00FDD1  05                 	db	5
   955  00FDD2  81                 	db	129
   956  00FDD3  03                 	db	3
   957  00FDD4  08                 	db	8
   958  00FDD5  00                 	db	0
   959  00FDD6  02                 	db	2
   960  00FDD7  09                 	db	9
   961  00FDD8  04                 	db	4
   962  00FDD9  01                 	db	1
   963  00FDDA  00                 	db	0
   964  00FDDB  02                 	db	2
   965  00FDDC  0A                 	db	10
   966  00FDDD  00                 	db	0
   967  00FDDE  00                 	db	0
   968  00FDDF  00                 	db	0
   969  00FDE0  07                 	db	7
   970  00FDE1  05                 	db	5
   971  00FDE2  02                 	db	2
   972  00FDE3  02                 	db	2
   973  00FDE4  40                 	db	64
   974  00FDE5  00                 	db	0
   975  00FDE6  00                 	db	0
   976  00FDE7  07                 	db	7
   977  00FDE8  05                 	db	5
   978  00FDE9  82                 	db	130
   979  00FDEA  02                 	db	2
   980  00FDEB  40                 	db	64
   981  00FDEC  00                 	db	0
   982  00FDED  00                 	db	0
   983  00FDEE                     __end_of_configDescriptor1:
   984                           	opt stack 0
   985  00FDEE                     _sd002:
   986                           	opt stack 0
   987  00FDEE  26                 	db	38
   988  00FDEF  03                 	db	3
   989  00FDF0  0054               	dw	84
   990  00FDF2  0065               	dw	101
   991  00FDF4  0072               	dw	114
   992  00FDF6  006D               	dw	109
   993  00FDF8  0069               	dw	105
   994  00FDFA  006E               	dw	110
   995  00FDFC  0061               	dw	97
   996  00FDFE  006C               	dw	108
   997  00FE00  0020               	dw	32
   998  00FE02  0049               	dw	73
   999  00FE04  006E               	dw	110
  1000  00FE06  0074               	dw	116
  1001  00FE08  0065               	dw	101
  1002  00FE0A  0072               	dw	114
  1003  00FE0C  0066               	dw	102
  1004  00FE0E  0061               	dw	97
  1005  00FE10  0063               	dw	99
  1006  00FE12  0065               	dw	101
  1007  00FE14                     __end_of_sd002:
  1008                           	opt stack 0
  1009  00FE14                     _sd001:
  1010                           	opt stack 0
  1011  00FE14  1E                 	db	30
  1012  00FE15  03                 	db	3
  1013  00FE16  004D               	dw	77
  1014  00FE18  0065               	dw	101
  1015  00FE1A  0072               	dw	114
  1016  00FE1C  0063               	dw	99
  1017  00FE1E  0075               	dw	117
  1018  00FE20  0072               	dw	114
  1019  00FE22  0079               	dw	121
  1020  00FE24  0020               	dw	32
  1021  00FE26  0053               	dw	83
  1022  00FE28  0079               	dw	121
  1023  00FE2A  0073               	dw	115
  1024  00FE2C  0074               	dw	116
  1025  00FE2E  0065               	dw	101
  1026  00FE30  006D               	dw	109
  1027  00FE32                     __end_of_sd001:
  1028                           	opt stack 0
  1029  00FE32                     _MsgReady:
  1030                           	opt stack 0
  1031  00FE32  0D                 	db	13
  1032  00FE33  0A                 	db	10
  1033  00FE34  53                 	db	83
  1034  00FE35  79                 	db	121
  1035  00FE36  73                 	db	115
  1036  00FE37  74                 	db	116
  1037  00FE38  65                 	db	101
  1038  00FE39  6D                 	db	109
  1039  00FE3A  20                 	db	32
  1040  00FE3B  52                 	db	82
  1041  00FE3C  65                 	db	101
  1042  00FE3D  61                 	db	97
  1043  00FE3E  64                 	db	100
  1044  00FE3F  79                 	db	121
  1045  00FE40  2E                 	db	46
  1046  00FE41  2E                 	db	46
  1047  00FE42  2E                 	db	46
  1048  00FE43  20                 	db	32
  1049  00FE44  0D                 	db	13
  1050  00FE45  0A                 	db	10
  1051  00FE46  0D                 	db	13
  1052  00FE47  0A                 	db	10
  1053  00FE48  00                 	db	0
  1054  00FE49                     __end_of_MsgReady:
  1055                           	opt stack 0
  1056  00FE49                     _device_dsc:
  1057                           	opt stack 0
  1058  00FE49  12                 	db	18
  1059  00FE4A  01                 	db	1
  1060  00FE4B  0200               	dw	512
  1061  00FE4D  02                 	db	2
  1062  00FE4E  00                 	db	0
  1063  00FE4F  00                 	db	0
  1064  00FE50  08                 	db	8
  1065  00FE51  04D8               	dw	1240
  1066  00FE53  000A               	dw	10
  1067  00FE55  0100               	dw	256
  1068  00FE57  01                 	db	1
  1069  00FE58  02                 	db	2
  1070  00FE59  00                 	db	0
  1071  00FE5A  01                 	db	1
  1072  00FE5B                     __end_of_device_dsc:
  1073                           	opt stack 0
  1074  00FE5B                     _sd000:
  1075                           	opt stack 0
  1076  00FE5B  04                 	db	4
  1077  00FE5C  03                 	db	3
  1078  00FE5D  0409               	dw	1033
  1079  00FE5F                     __end_of_sd000:
  1080                           	opt stack 0
  1081  0000                     _RPINR1	set	3815
  1082  0000                     _UEP0bits	set	3878
  1083  0000                     _UIEbits	set	3894
  1084  0000                     _UADDR	set	3896
  1085  0000                     _UIE	set	3894
  1086  0000                     _UEIE	set	3895
  1087  0000                     _UCFG	set	3897
  1088  0000                     _RTCCAL	set	3902
  1089  0000                     _PADCFG1bits	set	3900
  1090  0000                     _RTCCFGbits	set	3903
  1091  0000                     _DSCONLbits	set	3916
  1092  0000                     _DSGPR1	set	3919
  1093  0000                     _DSGPR0	set	3918
  1094  0000                     _DSCONHbits	set	3917
  1095  0000                     _ANCON1bits	set	3913
  1096  0000                     _UEP1	set	3879
  1097  0000                     _UEP0	set	3878
  1098  0000                     _T1CONbits	set	4045
  1099  0000                     _PORTDbits	set	3971
  1100  0000                     _USTAT	set	3940
  1101  0000                     _PIR2bits	set	4001
  1102  0000                     _UCON	set	3941
  1103  0000                     _UIRbits	set	3938
  1104  0000                     _UCONbits	set	3941
  1105  0000                     _UIR	set	3938
  1106  0000                     _UEIR	set	3939
  1107  0000                     _PIE2bits	set	4000
  1108  0000                     _BAUDCON2	set	3964
  1109  0000                     _RCSTA2	set	3996
  1110  0000                     _BAUDCON1	set	3966
  1111  0000                     _RCSTA1	set	4012
  1112  0000                     _TRISCbits	set	3988
  1113  0000                     _TXSTA2	set	4008
  1114  0000                     _TXSTA1	set	4013
  1115  0000                     _RCREG2	set	4010
  1116  0000                     _RCREG1	set	4015
  1117  0000                     _TXREG2	set	4009
  1118  0000                     _TXREG1	set	4014
  1119  0000                     _SPBRG2	set	4011
  1120  0000                     _SPBRGH2	set	3965
  1121  0000                     _SPBRG1	set	4016
  1122  0000                     _SPBRGH1	set	3967
  1123  0000                     _PR4	set	3959
  1124  0000                     _PR2	set	4043
  1125  0000                     _PIE1bits	set	3997
  1126  0000                     _IPR1bits	set	3999
  1127  0000                     _T4CONbits	set	3958
  1128  0000                     _T2CONbits	set	4042
  1129  0000                     _ALRMVALL	set	3982
  1130  0000                     _ALRMVALH	set	3983
  1131  0000                     _RTCVALH	set	3993
  1132  0000                     _RTCVALL	set	3992
  1133  0000                     _ALRMRPTbits	set	3984
  1134  0000                     _ALRMCFGbits	set	3985
  1135  0000                     _PIE3bits	set	4003
  1136  0000                     _IPR3bits	set	4005
  1137  0000                     _OSCCONbits	set	4051
  1138  0000                     _PORTEbits	set	3972
  1139  0000                     _TRISEbits	set	3990
  1140  0000                     _WDTCONbits	set	4032
  1141  0000                     _INTCON2bits	set	4081
  1142  0000                     _TRISBbits	set	3987
  1143  0000                     _OSCTUNEbits	set	3995
  1144  0000                     _SSP2CON1	set	3954
  1145  0000                     _TRISDbits	set	3989
  1146  0000                     _SSP2BUF	set	3957
  1147  0000                     _SSP2CON2bits	set	3953
  1148  0000                     _SSP2STAT	set	3955
  1149  0000                     _SSP2CON2	set	3953
  1150  0000                     _SSP2ADD	set	3956
  1151  0000                     _PIR1bits	set	3998
  1152  0000                     _PIR3bits	set	4004
  1153  0000                     _INTCON3bits	set	4080
  1154  0000                     _INTCONbits	set	4082
  1155  0000                     _RCONbits	set	4048
  1156  00FE5F                     STR_21:
  1157  00FE5F  20                 	db	32
  1158  00FE60  4C                 	db	76	;'L'
  1159  00FE61  61                 	db	97	;'a'
  1160  00FE62  7A                 	db	122	;'z'
  1161  00FE63  79                 	db	121	;'y'
  1162  00FE64  20                 	db	32
  1163  00FE65  64                 	db	100	;'d'
  1164  00FE66  65                 	db	101	;'e'
  1165  00FE67  76                 	db	118	;'v'
  1166  00FE68  69                 	db	105	;'i'
  1167  00FE69  63                 	db	99	;'c'
  1168  00FE6A  65                 	db	101	;'e'
  1169  00FE6B  2E                 	db	46
  1170  00FE6C  2E                 	db	46
  1171  00FE6D  2E                 	db	46
  1172  00FE6E  79                 	db	121	;'y'
  1173  00FE6F  6F                 	db	111	;'o'
  1174  00FE70  75                 	db	117	;'u'
  1175  00FE71  27                 	db	39
  1176  00FE72  76                 	db	118	;'v'
  1177  00FE73  65                 	db	101	;'e'
  1178  00FE74  20                 	db	32
  1179  00FE75  62                 	db	98	;'b'
  1180  00FE76  65                 	db	101	;'e'
  1181  00FE77  65                 	db	101	;'e'
  1182  00FE78  6E                 	db	110	;'n'
  1183  00FE79  20                 	db	32
  1184  00FE7A  74                 	db	116	;'t'
  1185  00FE7B  69                 	db	105	;'i'
  1186  00FE7C  6D                 	db	109	;'m'
  1187  00FE7D  65                 	db	101	;'e'
  1188  00FE7E  64                 	db	100	;'d'
  1189  00FE7F  2D                 	db	45
  1190  00FE80  6F                 	db	111	;'o'
  1191  00FE81  75                 	db	117	;'u'
  1192  00FE82  74                 	db	116	;'t'
  1193  00FE83  21                 	db	33
  1194  00FE84  21                 	db	33
  1195  00FE85  21                 	db	33
  1196  00FE86  0D                 	db	13
  1197  00FE87  0A                 	db	10
  1198  00FE88  00                 	db	0
  1199  00FE89                     STR_8:
  1200  00FE89  41                 	db	65	;'A'
  1201  00FE8A  54                 	db	84	;'T'
  1202  00FE8B  2B                 	db	43
  1203  00FE8C  53                 	db	83	;'S'
  1204  00FE8D  41                 	db	65	;'A'
  1205  00FE8E  50                 	db	80	;'P'
  1206  00FE8F  42                 	db	66	;'B'
  1207  00FE90  52                 	db	82	;'R'
  1208  00FE91  3D                 	db	61	;'='
  1209  00FE92  33                 	db	51	;'3'
  1210  00FE93  2C                 	db	44
  1211  00FE94  31                 	db	49	;'1'
  1212  00FE95  2C                 	db	44
  1213  00FE96  22                 	db	34
  1214  00FE97  43                 	db	67	;'C'
  1215  00FE98  6F                 	db	111	;'o'
  1216  00FE99  6E                 	db	110	;'n'
  1217  00FE9A  74                 	db	116	;'t'
  1218  00FE9B  79                 	db	121	;'y'
  1219  00FE9C  70                 	db	112	;'p'
  1220  00FE9D  65                 	db	101	;'e'
  1221  00FE9E  22                 	db	34
  1222  00FE9F  2C                 	db	44
  1223  00FEA0  22                 	db	34
  1224  00FEA1  47                 	db	71	;'G'
  1225  00FEA2  50                 	db	80	;'P'
  1226  00FEA3  52                 	db	82	;'R'
  1227  00FEA4  53                 	db	83	;'S'
  1228  00FEA5  22                 	db	34
  1229  00FEA6  0D                 	db	13
  1230  00FEA7  00                 	db	0
  1231  00FEA8                     STR_14:
  1232  00FEA8  41                 	db	65	;'A'
  1233  00FEA9  54                 	db	84	;'T'
  1234  00FEAA  2B                 	db	43
  1235  00FEAB  48                 	db	72	;'H'
  1236  00FEAC  54                 	db	84	;'T'
  1237  00FEAD  54                 	db	84	;'T'
  1238  00FEAE  50                 	db	80	;'P'
  1239  00FEAF  50                 	db	80	;'P'
  1240  00FEB0  41                 	db	65	;'A'
  1241  00FEB1  52                 	db	82	;'R'
  1242  00FEB2  41                 	db	65	;'A'
  1243  00FEB3  3D                 	db	61	;'='
  1244  00FEB4  22                 	db	34
  1245  00FEB5  43                 	db	67	;'C'
  1246  00FEB6  49                 	db	73	;'I'
  1247  00FEB7  44                 	db	68	;'D'
  1248  00FEB8  22                 	db	34
  1249  00FEB9  2C                 	db	44
  1250  00FEBA  31                 	db	49	;'1'
  1251  00FEBB  0D                 	db	13
  1252  00FEBC  00                 	db	0
  1253  00FEBD                     STR_9:
  1254  00FEBD  41                 	db	65	;'A'
  1255  00FEBE  54                 	db	84	;'T'
  1256  00FEBF  2B                 	db	43
  1257  00FEC0  53                 	db	83	;'S'
  1258  00FEC1  41                 	db	65	;'A'
  1259  00FEC2  50                 	db	80	;'P'
  1260  00FEC3  42                 	db	66	;'B'
  1261  00FEC4  52                 	db	82	;'R'
  1262  00FEC5  3D                 	db	61	;'='
  1263  00FEC6  33                 	db	51	;'3'
  1264  00FEC7  2C                 	db	44
  1265  00FEC8  31                 	db	49	;'1'
  1266  00FEC9  2C                 	db	44
  1267  00FECA  22                 	db	34
  1268  00FECB  41                 	db	65	;'A'
  1269  00FECC  50                 	db	80	;'P'
  1270  00FECD  4E                 	db	78	;'N'
  1271  00FECE  22                 	db	34
  1272  00FECF  2C                 	db	44
  1273  00FED0  22                 	db	34
  1274  00FED1  00                 	db	0
  1275  00FED2                     STR_23:
  1276  00FED2  46                 	db	70	;'F'
  1277  00FED3  72                 	db	114	;'r'
  1278  00FED4  61                 	db	97	;'a'
  1279  00FED5  6D                 	db	109	;'m'
  1280  00FED6  65                 	db	101	;'e'
  1281  00FED7  77                 	db	119	;'w'
  1282  00FED8  6F                 	db	111	;'o'
  1283  00FED9  72                 	db	114	;'r'
  1284  00FEDA  6B                 	db	107	;'k'
  1285  00FEDB  20                 	db	32
  1286  00FEDC  56                 	db	86	;'V'
  1287  00FEDD  65                 	db	101	;'e'
  1288  00FEDE  72                 	db	114	;'r'
  1289  00FEDF  73                 	db	115	;'s'
  1290  00FEE0  69                 	db	105	;'i'
  1291  00FEE1  6F                 	db	111	;'o'
  1292  00FEE2  6E                 	db	110	;'n'
  1293  00FEE3  3A                 	db	58	;':'
  1294  00FEE4  20                 	db	32
  1295  00FEE5  00                 	db	0
  1296  00FEE6                     STR_15:
  1297  00FEE6  41                 	db	65	;'A'
  1298  00FEE7  54                 	db	84	;'T'
  1299  00FEE8  2B                 	db	43
  1300  00FEE9  48                 	db	72	;'H'
  1301  00FEEA  54                 	db	84	;'T'
  1302  00FEEB  54                 	db	84	;'T'
  1303  00FEEC  50                 	db	80	;'P'
  1304  00FEED  50                 	db	80	;'P'
  1305  00FEEE  41                 	db	65	;'A'
  1306  00FEEF  52                 	db	82	;'R'
  1307  00FEF0  41                 	db	65	;'A'
  1308  00FEF1  3D                 	db	61	;'='
  1309  00FEF2  22                 	db	34
  1310  00FEF3  55                 	db	85	;'U'
  1311  00FEF4  52                 	db	82	;'R'
  1312  00FEF5  4C                 	db	76	;'L'
  1313  00FEF6  22                 	db	34
  1314  00FEF7  2C                 	db	44
  1315  00FEF8  22                 	db	34
  1316  00FEF9  00                 	db	0
  1317  00FEFA                     STR_30:
  1318  00FEFA  41                 	db	65	;'A'
  1319  00FEFB  54                 	db	84	;'T'
  1320  00FEFC  2B                 	db	43
  1321  00FEFD  43                 	db	67	;'C'
  1322  00FEFE  4D                 	db	77	;'M'
  1323  00FEFF  47                 	db	71	;'G'
  1324  00FF00  44                 	db	68	;'D'
  1325  00FF01  41                 	db	65	;'A'
  1326  00FF02  3D                 	db	61	;'='
  1327  00FF03  44                 	db	68	;'D'
  1328  00FF04  45                 	db	69	;'E'
  1329  00FF05  4C                 	db	76	;'L'
  1330  00FF06  20                 	db	32
  1331  00FF07  41                 	db	65	;'A'
  1332  00FF08  4C                 	db	76	;'L'
  1333  00FF09  4C                 	db	76	;'L'
  1334  00FF0A  0D                 	db	13
  1335  00FF0B  0A                 	db	10
  1336  00FF0C  00                 	db	0
  1337  00FF0D                     STR_27:
  1338  00FF0D  42                 	db	66	;'B'
  1339  00FF0E  75                 	db	117	;'u'
  1340  00FF0F  69                 	db	105	;'i'
  1341  00FF10  6C                 	db	108	;'l'
  1342  00FF11  64                 	db	100	;'d'
  1343  00FF12  20                 	db	32
  1344  00FF13  44                 	db	68	;'D'
  1345  00FF14  61                 	db	97	;'a'
  1346  00FF15  74                 	db	116	;'t'
  1347  00FF16  65                 	db	101	;'e'
  1348  00FF17  3A                 	db	58	;':'
  1349  00FF18  20                 	db	32
  1350  00FF19  25                 	db	37
  1351  00FF1A  73                 	db	115	;'s'
  1352  00FF1B  0D                 	db	13
  1353  00FF1C  0A                 	db	10
  1354  00FF1D  00                 	db	0
  1355  00FF1E                     STR_16:
  1356  00FF1E  41                 	db	65	;'A'
  1357  00FF1F  54                 	db	84	;'T'
  1358  00FF20  2B                 	db	43
  1359  00FF21  48                 	db	72	;'H'
  1360  00FF22  54                 	db	84	;'T'
  1361  00FF23  54                 	db	84	;'T'
  1362  00FF24  50                 	db	80	;'P'
  1363  00FF25  41                 	db	65	;'A'
  1364  00FF26  43                 	db	67	;'C'
  1365  00FF27  54                 	db	84	;'T'
  1366  00FF28  49                 	db	73	;'I'
  1367  00FF29  4F                 	db	79	;'O'
  1368  00FF2A  4E                 	db	78	;'N'
  1369  00FF2B  3D                 	db	61	;'='
  1370  00FF2C  30                 	db	48	;'0'
  1371  00FF2D  0D                 	db	13
  1372  00FF2E  00                 	db	0
  1373  00FF2F                     STR_29:
  1374  00FF2F  41                 	db	65	;'A'
  1375  00FF30  54                 	db	84	;'T'
  1376  00FF31  2B                 	db	43
  1377  00FF32  43                 	db	67	;'C'
  1378  00FF33  4D                 	db	77	;'M'
  1379  00FF34  47                 	db	71	;'G'
  1380  00FF35  44                 	db	68	;'D'
  1381  00FF36  3D                 	db	61	;'='
  1382  00FF37  31                 	db	49	;'1'
  1383  00FF38  2C                 	db	44
  1384  00FF39  30                 	db	48	;'0'
  1385  00FF3A  0D                 	db	13
  1386  00FF3B  0A                 	db	10
  1387  00FF3C  00                 	db	0
  1388  00FF3D  41                 	db	65	;'A'
  1389  00FF3E  54                 	db	84	;'T'
  1390  00FF3F  2B                 	db	43
  1391  00FF40  48                 	db	72	;'H'
  1392  00FF41  54                 	db	84	;'T'
  1393  00FF42  54                 	db	84	;'T'
  1394  00FF43  50                 	db	80	;'P'
  1395  00FF44  53                 	db	83	;'S'
  1396  00FF45  53                 	db	83	;'S'
  1397  00FF46  4C                 	db	76	;'L'
  1398  00FF47  3D                 	db	61	;'='
  1399  00FF48  30                 	db	48	;'0'
  1400  00FF49  0D                 	db	13
  1401  00FF4A  00                 	db	0
  1402  00FF4B                     STR_10:
  1403  00FF4B  41                 	db	65	;'A'
  1404  00FF4C  54                 	db	84	;'T'
  1405  00FF4D  2B                 	db	43
  1406  00FF4E  53                 	db	83	;'S'
  1407  00FF4F  41                 	db	65	;'A'
  1408  00FF50  50                 	db	80	;'P'
  1409  00FF51  42                 	db	66	;'B'
  1410  00FF52  52                 	db	82	;'R'
  1411  00FF53  3D                 	db	61	;'='
  1412  00FF54  31                 	db	49	;'1'
  1413  00FF55  2C                 	db	44
  1414  00FF56  31                 	db	49	;'1'
  1415  00FF57  0D                 	db	13
  1416  00FF58  00                 	db	0
  1417  00FF59                     STR_11:
  1418  00FF59  41                 	db	65	;'A'
  1419  00FF5A  54                 	db	84	;'T'
  1420  00FF5B  2B                 	db	43
  1421  00FF5C  53                 	db	83	;'S'
  1422  00FF5D  41                 	db	65	;'A'
  1423  00FF5E  50                 	db	80	;'P'
  1424  00FF5F  42                 	db	66	;'B'
  1425  00FF60  52                 	db	82	;'R'
  1426  00FF61  3D                 	db	61	;'='
  1427  00FF62  32                 	db	50	;'2'
  1428  00FF63  2C                 	db	44
  1429  00FF64  31                 	db	49	;'1'
  1430  00FF65  0D                 	db	13
  1431  00FF66  00                 	db	0
  1432  00FF67                     STR_13:
  1433  00FF67  41                 	db	65	;'A'
  1434  00FF68  54                 	db	84	;'T'
  1435  00FF69  2B                 	db	43
  1436  00FF6A  48                 	db	72	;'H'
  1437  00FF6B  54                 	db	84	;'T'
  1438  00FF6C  54                 	db	84	;'T'
  1439  00FF6D  50                 	db	80	;'P'
  1440  00FF6E  53                 	db	83	;'S'
  1441  00FF6F  53                 	db	83	;'S'
  1442  00FF70  4C                 	db	76	;'L'
  1443  00FF71  3D                 	db	61	;'='
  1444  00FF72  31                 	db	49	;'1'
  1445  00FF73  0D                 	db	13
  1446  00FF74  00                 	db	0
  1447  00FF75                     STR_2:
  1448  00FF75  41                 	db	65	;'A'
  1449  00FF76  54                 	db	84	;'T'
  1450  00FF77  2B                 	db	43
  1451  00FF78  49                 	db	73	;'I'
  1452  00FF79  50                 	db	80	;'P'
  1453  00FF7A  52                 	db	82	;'R'
  1454  00FF7B  3D                 	db	61	;'='
  1455  00FF7C  39                 	db	57	;'9'
  1456  00FF7D  36                 	db	54	;'6'
  1457  00FF7E  30                 	db	48	;'0'
  1458  00FF7F  30                 	db	48	;'0'
  1459  00FF80  0D                 	db	13
  1460  00FF81  0A                 	db	10
  1461  00FF82  00                 	db	0
  1462  00FF83                     STR_17:
  1463  00FF83  41                 	db	65	;'A'
  1464  00FF84  54                 	db	84	;'T'
  1465  00FF85  2B                 	db	43
  1466  00FF86  48                 	db	72	;'H'
  1467  00FF87  54                 	db	84	;'T'
  1468  00FF88  54                 	db	84	;'T'
  1469  00FF89  50                 	db	80	;'P'
  1470  00FF8A  52                 	db	82	;'R'
  1471  00FF8B  45                 	db	69	;'E'
  1472  00FF8C  41                 	db	65	;'A'
  1473  00FF8D  44                 	db	68	;'D'
  1474  00FF8E  0D                 	db	13
  1475  00FF8F  00                 	db	0
  1476  00FF90                     STR_18:
  1477  00FF90  41                 	db	65	;'A'
  1478  00FF91  54                 	db	84	;'T'
  1479  00FF92  2B                 	db	43
  1480  00FF93  48                 	db	72	;'H'
  1481  00FF94  54                 	db	84	;'T'
  1482  00FF95  54                 	db	84	;'T'
  1483  00FF96  50                 	db	80	;'P'
  1484  00FF97  54                 	db	84	;'T'
  1485  00FF98  45                 	db	69	;'E'
  1486  00FF99  52                 	db	82	;'R'
  1487  00FF9A  4D                 	db	77	;'M'
  1488  00FF9B  0D                 	db	13
  1489  00FF9C  00                 	db	0
  1490  00FF9D                     STR_12:
  1491  00FF9D  41                 	db	65	;'A'
  1492  00FF9E  54                 	db	84	;'T'
  1493  00FF9F  2B                 	db	43
  1494  00FFA0  48                 	db	72	;'H'
  1495  00FFA1  54                 	db	84	;'T'
  1496  00FFA2  54                 	db	84	;'T'
  1497  00FFA3  50                 	db	80	;'P'
  1498  00FFA4  49                 	db	73	;'I'
  1499  00FFA5  4E                 	db	78	;'N'
  1500  00FFA6  49                 	db	73	;'I'
  1501  00FFA7  54                 	db	84	;'T'
  1502  00FFA8  0D                 	db	13
  1503  00FFA9  00                 	db	0
  1504  00FFAA                     STR_31:
  1505  00FFAA  41                 	db	65	;'A'
  1506  00FFAB  54                 	db	84	;'T'
  1507  00FFAC  2B                 	db	43
  1508  00FFAD  43                 	db	67	;'C'
  1509  00FFAE  4C                 	db	76	;'L'
  1510  00FFAF  49                 	db	73	;'I'
  1511  00FFB0  50                 	db	80	;'P'
  1512  00FFB1  3D                 	db	61	;'='
  1513  00FFB2  31                 	db	49	;'1'
  1514  00FFB3  0D                 	db	13
  1515  00FFB4  0A                 	db	10
  1516  00FFB5  00                 	db	0
  1517  00FFB6                     STR_28:
  1518  00FFB6  4D                 	db	77	;'M'
  1519  00FFB7  61                 	db	97	;'a'
  1520  00FFB8  72                 	db	114	;'r'
  1521  00FFB9  20                 	db	32
  1522  00FFBA  32                 	db	50	;'2'
  1523  00FFBB  37                 	db	55	;'7'
  1524  00FFBC  20                 	db	32
  1525  00FFBD  32                 	db	50	;'2'
  1526  00FFBE  30                 	db	48	;'0'
  1527  00FFBF  32                 	db	50	;'2'
  1528  00FFC0  32                 	db	50	;'2'
  1529  00FFC1  00                 	db	0
  1530  00FFC2                     STR_4:
  1531  00FFC2  41                 	db	65	;'A'
  1532  00FFC3  54                 	db	84	;'T'
  1533  00FFC4  2B                 	db	43
  1534  00FFC5  43                 	db	67	;'C'
  1535  00FFC6  4D                 	db	77	;'M'
  1536  00FFC7  47                 	db	71	;'G'
  1537  00FFC8  52                 	db	82	;'R'
  1538  00FFC9  3D                 	db	61	;'='
  1539  00FFCA  31                 	db	49	;'1'
  1540  00FFCB  0D                 	db	13
  1541  00FFCC  0A                 	db	10
  1542  00FFCD  00                 	db	0
  1543  00FFCE                     STR_5:
  1544  00FFCE  41                 	db	65	;'A'
  1545  00FFCF  54                 	db	84	;'T'
  1546  00FFD0  2B                 	db	43
  1547  00FFD1  43                 	db	67	;'C'
  1548  00FFD2  4D                 	db	77	;'M'
  1549  00FFD3  47                 	db	71	;'G'
  1550  00FFD4  53                 	db	83	;'S'
  1551  00FFD5  3D                 	db	61	;'='
  1552  00FFD6  22                 	db	34
  1553  00FFD7  00                 	db	0
  1554  00FFD8                     STR_32:
  1555  00FFD8  28                 	db	40
  1556  00FFD9  6E                 	db	110	;'n'
  1557  00FFDA  75                 	db	117	;'u'
  1558  00FFDB  6C                 	db	108	;'l'
  1559  00FFDC  6C                 	db	108	;'l'
  1560  00FFDD  29                 	db	41
  1561  00FFDE  00                 	db	0
  1562  00FFDF                     STR_3:
  1563  00FFDF  41                 	db	65	;'A'
  1564  00FFE0  54                 	db	84	;'T'
  1565  00FFE1  45                 	db	69	;'E'
  1566  00FFE2  30                 	db	48	;'0'
  1567  00FFE3  0D                 	db	13
  1568  00FFE4  0A                 	db	10
  1569  00FFE5  00                 	db	0
  1570  00FFE6                     STR_1:
  1571  00FFE6  41                 	db	65	;'A'
  1572  00FFE7  54                 	db	84	;'T'
  1573  00FFE8  0D                 	db	13
  1574  00FFE9  0A                 	db	10
  1575  00FFEA  00                 	db	0
  1576  00FFEB  41                 	db	65	;'A'
  1577  00FFEC  54                 	db	84	;'T'
  1578  00FFED  41                 	db	65	;'A'
  1579  00FFEE  0D                 	db	13
  1580  00FFEF  00                 	db	0
  1581  00FFF0                     STR_6:
  1582  00FFF0  41                 	db	65	;'A'
  1583  00FFF1  54                 	db	84	;'T'
  1584  00FFF2  48                 	db	72	;'H'
  1585  00FFF3  0D                 	db	13
  1586  00FFF4  00                 	db	0
  1587  00FFF5                     STR_24:
  1588  00FFF5  2E                 	db	46
  1589  00FFF6  00                 	db	0
  1590  0000                     
  1591                           ; #config settings
  1592  00FFF7  00                 	db	0	; dummy byte at the end
  1593  0000                     
  1594                           	psect	cinit
  1595  0022DE                     __pcinit:
  1596                           	opt stack 0
  1597  0022DE                     start_initialization:
  1598                           	opt stack 0
  1599  0022DE                     __initialization:
  1600                           	opt stack 0
  1601                           
  1602                           ; Initialize objects allocated to BANK5 (80 bytes)
  1603                           ; load TBLPTR registers with __pidataBANK5
  1604  0022DE  0EC0               	movlw	low __pidataBANK5
  1605  0022E0  6EF6               	movwf	tblptrl,c
  1606  0022E2  0E5D               	movlw	high __pidataBANK5
  1607  0022E4  6EF7               	movwf	tblptrh,c
  1608  0022E6  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1609  0022E8  6EF8               	movwf	tblptru,c
  1610  0022EA  EE05  F0A4         	lfsr	0,__pdataBANK5
  1611  0022EE  EE10 F050          	lfsr	1,80
  1612  0022F2                     copy_data0:
  1613  0022F2  0009               	tblrd		*+
  1614  0022F4  CFF5 FFEE          	movff	tablat,postinc0
  1615  0022F8  50E5               	movf	postdec1,w,c
  1616  0022FA  50E1               	movf	fsr1l,w,c
  1617  0022FC  E1FA               	bnz	copy_data0
  1618                           
  1619                           ; Initialize objects allocated to BANK3 (58 bytes)
  1620                           ; load TBLPTR registers with __pidataBANK3
  1621  0022FE  0E8A               	movlw	low __pidataBANK3
  1622  002300  6EF6               	movwf	tblptrl,c
  1623  002302  0E63               	movlw	high __pidataBANK3
  1624  002304  6EF7               	movwf	tblptrh,c
  1625  002306  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1626  002308  6EF8               	movwf	tblptru,c
  1627  00230A  EE03  F0C3         	lfsr	0,__pdataBANK3
  1628  00230E  EE10 F03A          	lfsr	1,58
  1629  002312                     copy_data1:
  1630  002312  0009               	tblrd		*+
  1631  002314  CFF5 FFEE          	movff	tablat,postinc0
  1632  002318  50E5               	movf	postdec1,w,c
  1633  00231A  50E1               	movf	fsr1l,w,c
  1634  00231C  E1FA               	bnz	copy_data1
  1635                           
  1636                           ; Initialize objects allocated to BANK2 (15 bytes)
  1637                           ; load TBLPTR registers with __pidataBANK2
  1638  00231E  0E4C               	movlw	low __pidataBANK2
  1639  002320  6EF6               	movwf	tblptrl,c
  1640  002322  0E6B               	movlw	high __pidataBANK2
  1641  002324  6EF7               	movwf	tblptrh,c
  1642  002326  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1643  002328  6EF8               	movwf	tblptru,c
  1644  00232A  EE02  F0F1         	lfsr	0,__pdataBANK2
  1645  00232E  EE10 F00F          	lfsr	1,15
  1646  002332                     copy_data2:
  1647  002332  0009               	tblrd		*+
  1648  002334  CFF5 FFEE          	movff	tablat,postinc0
  1649  002338  50E5               	movf	postdec1,w,c
  1650  00233A  50E1               	movf	fsr1l,w,c
  1651  00233C  E1FA               	bnz	copy_data2
  1652                           
  1653                           ; Initialize objects allocated to BANK1 (2 bytes)
  1654                           ; load TBLPTR registers with __pidataBANK1
  1655  00233E  0EF0               	movlw	low __pidataBANK1
  1656  002340  6EF6               	movwf	tblptrl,c
  1657  002342  0E6B               	movlw	high __pidataBANK1
  1658  002344  6EF7               	movwf	tblptrh,c
  1659  002346  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1660  002348  6EF8               	movwf	tblptru,c
  1661  00234A  0009               	tblrd		*+	;fetch initializer
  1662  00234C  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1663  002350  0009               	tblrd		*+	;fetch initializer
  1664  002352  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1665                           
  1666                           ; Initialize objects allocated to BANK4 (10 bytes)
  1667                           ; load TBLPTR registers with __pidataBANK4
  1668  002356  0E82               	movlw	low __pidataBANK4
  1669  002358  6EF6               	movwf	tblptrl,c
  1670  00235A  0E6B               	movlw	high __pidataBANK4
  1671  00235C  6EF7               	movwf	tblptrh,c
  1672  00235E  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1673  002360  6EF8               	movwf	tblptru,c
  1674  002362  EE04  F0F2         	lfsr	0,__pdataBANK4
  1675  002366  EE10 F00A          	lfsr	1,10
  1676  00236A                     copy_data3:
  1677  00236A  0009               	tblrd		*+
  1678  00236C  CFF5 FFEE          	movff	tablat,postinc0
  1679  002370  50E5               	movf	postdec1,w,c
  1680  002372  50E1               	movf	fsr1l,w,c
  1681  002374  E1FA               	bnz	copy_data3
  1682                           
  1683                           ; Initialize objects allocated to BANK0 (2 bytes)
  1684                           ; load TBLPTR registers with __pidataBANK0
  1685  002376  0EEE               	movlw	low __pidataBANK0
  1686  002378  6EF6               	movwf	tblptrl,c
  1687  00237A  0E6B               	movlw	high __pidataBANK0
  1688  00237C  6EF7               	movwf	tblptrh,c
  1689  00237E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1690  002380  6EF8               	movwf	tblptru,c
  1691  002382  0009               	tblrd		*+	;fetch initializer
  1692  002384  CFF5 F0E1          	movff	tablat,__pdataBANK0
  1693  002388  0009               	tblrd		*+	;fetch initializer
  1694  00238A  CFF5 F0E2          	movff	tablat,__pdataBANK0+1
  1695                           
  1696                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1697  00238E  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1698  002392  EE13 F020          	lfsr	1,800
  1699  002396                     clear_0:
  1700  002396  6AEE               	clrf	postinc0,c
  1701  002398  50E5               	movf	postdec1,w,c
  1702  00239A  50E1               	movf	fsr1l,w,c
  1703  00239C  E1FC               	bnz	clear_0
  1704  00239E  50E2               	movf	fsr1h,w,c
  1705  0023A0  E1FA               	bnz	clear_0
  1706                           
  1707                           ; Clear objects allocated to BANK9 (200 bytes)
  1708  0023A2  EE09  F000         	lfsr	0,__pbssBANK9
  1709  0023A6  0EC8               	movlw	200
  1710  0023A8                     clear_1:
  1711  0023A8  6AEE               	clrf	postinc0,c
  1712  0023AA  06E8               	decf	wreg,f,c
  1713  0023AC  E1FD               	bnz	clear_1
  1714                           
  1715                           ; Clear objects allocated to BANK8 (200 bytes)
  1716  0023AE  EE08  F000         	lfsr	0,__pbssBANK8
  1717  0023B2  0EC8               	movlw	200
  1718  0023B4                     clear_2:
  1719  0023B4  6AEE               	clrf	postinc0,c
  1720  0023B6  06E8               	decf	wreg,f,c
  1721  0023B8  E1FD               	bnz	clear_2
  1722                           
  1723                           ; Clear objects allocated to BANK7 (246 bytes)
  1724  0023BA  EE07  F000         	lfsr	0,__pbssBANK7
  1725  0023BE  0EF6               	movlw	246
  1726  0023C0                     clear_3:
  1727  0023C0  6AEE               	clrf	postinc0,c
  1728  0023C2  06E8               	decf	wreg,f,c
  1729  0023C4  E1FD               	bnz	clear_3
  1730                           
  1731                           ; Clear objects allocated to BANK6 (220 bytes)
  1732  0023C6  EE06  F000         	lfsr	0,__pbssBANK6
  1733  0023CA  0EDC               	movlw	220
  1734  0023CC                     clear_4:
  1735  0023CC  6AEE               	clrf	postinc0,c
  1736  0023CE  06E8               	decf	wreg,f,c
  1737  0023D0  E1FD               	bnz	clear_4
  1738                           
  1739                           ; Clear objects allocated to BANK5 (164 bytes)
  1740  0023D2  EE05  F000         	lfsr	0,__pbssBANK5
  1741  0023D6  0EA4               	movlw	164
  1742  0023D8                     clear_5:
  1743  0023D8  6AEE               	clrf	postinc0,c
  1744  0023DA  06E8               	decf	wreg,f,c
  1745  0023DC  E1FD               	bnz	clear_5
  1746                           
  1747                           ; Clear objects allocated to BANK3 (195 bytes)
  1748  0023DE  EE03  F000         	lfsr	0,__pbssBANK3
  1749  0023E2  0EC3               	movlw	195
  1750  0023E4                     clear_6:
  1751  0023E4  6AEE               	clrf	postinc0,c
  1752  0023E6  06E8               	decf	wreg,f,c
  1753  0023E8  E1FD               	bnz	clear_6
  1754                           
  1755                           ; Clear objects allocated to BANK2 (41 bytes)
  1756  0023EA  EE02  F0C8         	lfsr	0,__pbssBANK2
  1757  0023EE  0E29               	movlw	41
  1758  0023F0                     clear_7:
  1759  0023F0  6AEE               	clrf	postinc0,c
  1760  0023F2  06E8               	decf	wreg,f,c
  1761  0023F4  E1FD               	bnz	clear_7
  1762                           
  1763                           ; Clear objects allocated to BANK1 (53 bytes)
  1764  0023F6  EE01  F0C9         	lfsr	0,__pbssBANK1
  1765  0023FA  0E35               	movlw	53
  1766  0023FC                     clear_8:
  1767  0023FC  6AEE               	clrf	postinc0,c
  1768  0023FE  06E8               	decf	wreg,f,c
  1769  002400  E1FD               	bnz	clear_8
  1770                           
  1771                           ; Clear objects allocated to BANK4 (178 bytes)
  1772  002402  EE04  F040         	lfsr	0,__pbssBANK4
  1773  002406  0EB2               	movlw	178
  1774  002408                     clear_9:
  1775  002408  6AEE               	clrf	postinc0,c
  1776  00240A  06E8               	decf	wreg,f,c
  1777  00240C  E1FD               	bnz	clear_9
  1778                           
  1779                           ; Clear objects allocated to BANK0 (49 bytes)
  1780  00240E  EE00  F0B0         	lfsr	0,__pbssBANK0
  1781  002412  0E31               	movlw	49
  1782  002414                     clear_10:
  1783  002414  6AEE               	clrf	postinc0,c
  1784  002416  06E8               	decf	wreg,f,c
  1785  002418  E1FD               	bnz	clear_10
  1786                           
  1787                           ; Clear objects allocated to COMRAM (31 bytes)
  1788  00241A  EE00  F023         	lfsr	0,__pbssCOMRAM
  1789  00241E  0E1F               	movlw	31
  1790  002420                     clear_11:
  1791  002420  6AEE               	clrf	postinc0,c
  1792  002422  06E8               	decf	wreg,f,c
  1793  002424  E1FD               	bnz	clear_11
  1794  002426                     end_of_initialization:
  1795                           	opt stack 0
  1796  002426                     __end_of__initialization:
  1797                           	opt stack 0
  1798  002426  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1799  002428  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1800  00242A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1801  00242C  6EF8               	movwf	tblptru,c
  1802  00242E  0100               	movlb	0
  1803  002430  EFB5  F035         	goto	_main	;jump to C main() function
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           
  1814                           	psect	bssCOMRAM
  1815  000023                     __pbssCOMRAM:
  1816                           	opt stack 0
  1817  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1818                           	opt stack 0
  1819  000023                     	ds	2
  1820  000025                     _USBDeferOUTDataStagePackets:
  1821                           	opt stack 0
  1822  000025                     	ds	1
  1823  000026                     _USBDeferINDataStagePackets:
  1824                           	opt stack 0
  1825  000026                     	ds	1
  1826  000027                     _USBStatusStageEnabledFlag2:
  1827                           	opt stack 0
  1828  000027                     	ds	1
  1829  000028                     _USBStatusStageEnabledFlag1:
  1830                           	opt stack 0
  1831  000028                     	ds	1
  1832  000029                     _USBStatusStageTimeoutCounter:
  1833                           	opt stack 0
  1834  000029                     	ds	1
  1835  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1836                           	opt stack 0
  1837  00002A                     	ds	1
  1838  00002B                     _ComChecCompleted:
  1839                           	opt stack 0
  1840  00002B                     	ds	1
  1841  00002C                     Uart_Uart1RxIsr@UartRxData:
  1842                           	opt stack 0
  1843  00002C                     	ds	1
  1844  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1845                           	opt stack 0
  1846  00002D                     	ds	1
  1847  00002E                     MdmCntSm@MdmCntState:
  1848                           	opt stack 0
  1849  00002E                     	ds	1
  1850  00002F                     RiSm@MdmDrvState:
  1851                           	opt stack 0
  1852  00002F                     	ds	1
  1853  000030                     _Mmd_RingIndicator:
  1854                           	opt stack 0
  1855  000030                     	ds	1
  1856  000031                     I2c_ReadData@ReadStatus:
  1857                           	opt stack 0
  1858  000031                     	ds	1
  1859  000032                     I2c_ReadData@TentativeCounter:
  1860                           	opt stack 0
  1861  000032                     	ds	1
  1862  000033                     I2c_ReadData@DataCounter:
  1863                           	opt stack 0
  1864  000033                     	ds	1
  1865  000034                     I2c_ReadData@I2cReadState:
  1866                           	opt stack 0
  1867  000034                     	ds	1
  1868  000035                     I2c_WriteData@WriteStatus:
  1869                           	opt stack 0
  1870  000035                     	ds	1
  1871  000036                     I2c_WriteData@TentativeCounter:
  1872                           	opt stack 0
  1873  000036                     	ds	1
  1874  000037                     I2c_WriteData@I2cNextState:
  1875                           	opt stack 0
  1876  000037                     	ds	1
  1877  000038                     I2c_WriteData@I2cWriteState:
  1878                           	opt stack 0
  1879  000038                     	ds	1
  1880  000039                     _I2cReadDataEvt:
  1881                           	opt stack 0
  1882  000039                     	ds	1
  1883  00003A                     _NewStringMdmTerminal:
  1884                           	opt stack 0
  1885  00003A                     	ds	1
  1886  00003B                     _NewMdmEvtParserRequest:
  1887                           	opt stack 0
  1888  00003B                     	ds	1
  1889  00003C                     _NewStringReceived:
  1890                           	opt stack 0
  1891  00003C                     	ds	1
  1892  00003D                     _MdmResetRequest:
  1893                           	opt stack 0
  1894  00003D                     	ds	1
  1895  00003E                     _CallClosedEvent:
  1896                           	opt stack 0
  1897  00003E                     	ds	1
  1898  00003F                     _IncomingCallEvent:
  1899                           	opt stack 0
  1900  00003F                     	ds	1
  1901  000040                     _NewSmsEvent:
  1902                           	opt stack 0
  1903  000040                     	ds	1
  1904  000041                     _ActivateRiDetection:
  1905                           	opt stack 0
  1906  000041                     	ds	1
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1h	equ	0xFE2
  1915                           fsr1l	equ	0xFE1
  1916                           
  1917                           	psect	bssBANK0
  1918  0000B0                     __pbssBANK0:
  1919                           	opt stack 0
  1920  0000B0                     _inPipes:
  1921                           	opt stack 0
  1922  0000B0                     	ds	6
  1923  0000B6                     _pBDTEntryIn:
  1924                           	opt stack 0
  1925  0000B6                     	ds	6
  1926  0000BC                     _CDCDataOutHandle:
  1927                           	opt stack 0
  1928  0000BC                     	ds	2
  1929  0000BE                     _pBDTEntryEP0OutNext:
  1930                           	opt stack 0
  1931  0000BE                     	ds	2
  1932  0000C0                     _pBDTEntryEP0OutCurrent:
  1933                           	opt stack 0
  1934  0000C0                     	ds	2
  1935  0000C2                     _RxLen:
  1936                           	opt stack 0
  1937  0000C2                     	ds	2
  1938  0000C4                     findEmptySpot@currentState:
  1939                           	opt stack 0
  1940  0000C4                     	ds	1
  1941  0000C5                     isNumberInMemory@currentState:
  1942                           	opt stack 0
  1943  0000C5                     	ds	1
  1944  0000C6                     Eeprom_Reset@memoryAddress:
  1945                           	opt stack 0
  1946  0000C6                     	ds	1
  1947  0000C7                     _cdc_tx_len:
  1948                           	opt stack 0
  1949  0000C7                     	ds	1
  1950  0000C8                     _cdc_trf_state:
  1951                           	opt stack 0
  1952  0000C8                     	ds	1
  1953  0000C9                     _cdc_rx_len:
  1954                           	opt stack 0
  1955  0000C9                     	ds	1
  1956  0000CA                     _USBDeferStatusStagePacket:
  1957                           	opt stack 0
  1958  0000CA                     	ds	1
  1959  0000CB                     _endpoint_number:
  1960                           	opt stack 0
  1961  0000CB                     	ds	1
  1962  0000CC                     _controlTransferState:
  1963                           	opt stack 0
  1964  0000CC                     	ds	1
  1965  0000CD                     _shortPacketStatus:
  1966                           	opt stack 0
  1967  0000CD                     	ds	1
  1968  0000CE                     _USBDeviceState:
  1969                           	opt stack 0
  1970  0000CE                     	ds	1
  1971  0000CF                     _I2cComSts:
  1972                           	opt stack 0
  1973  0000CF                     	ds	1
  1974  0000D0                     HttpGetMethod@GetMethodNextState:
  1975                           	opt stack 0
  1976  0000D0                     	ds	1
  1977  0000D1                     _MdmStatus:
  1978                           	opt stack 0
  1979  0000D1                     	ds	1
  1980  0000D2                     _PhoneNumbLen:
  1981                           	opt stack 0
  1982  0000D2                     	ds	1
  1983  0000D3                     _SmsLen:
  1984                           	opt stack 0
  1985  0000D3                     	ds	1
  1986  0000D4                     _SystemState:
  1987                           	opt stack 0
  1988  0000D4                     	ds	1
  1989  0000D5                     _USTATcopy:
  1990                           	opt stack 0
  1991  0000D5                     	ds	1
  1992  0000D6                     _USBActiveConfiguration:
  1993                           	opt stack 0
  1994  0000D6                     	ds	1
  1995  0000D7                     _I2cWriteDataEvt:
  1996                           	opt stack 0
  1997  0000D7                     	ds	1
  1998  0000D8                     _GetMethod:
  1999                           	opt stack 0
  2000  0000D8                     	ds	1
  2001  0000D9                     _InitNetwork:
  2002                           	opt stack 0
  2003  0000D9                     	ds	1
  2004  0000DA                     _SmsTxtReady:
  2005                           	opt stack 0
  2006  0000DA                     	ds	1
  2007  0000DB                     _GetSmsText:
  2008                           	opt stack 0
  2009  0000DB                     	ds	1
  2010  0000DC                     _SmsEvent:
  2011                           	opt stack 0
  2012  0000DC                     	ds	1
  2013  0000DD                     _ClipEvent:
  2014                           	opt stack 0
  2015  0000DD                     	ds	1
  2016  0000DE                     _RingEvent:
  2017                           	opt stack 0
  2018  0000DE                     	ds	1
  2019  0000DF                     _SendSmsEvent:
  2020                           	opt stack 0
  2021  0000DF                     	ds	1
  2022  0000E0                     _MdmOnOffPulseRequest:
  2023                           	opt stack 0
  2024  0000E0                     	ds	1
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           postdec1	equ	0xFE5
  2032                           fsr1h	equ	0xFE2
  2033                           fsr1l	equ	0xFE1
  2034                           
  2035                           	psect	dataBANK0
  2036  0000E1                     __pdataBANK0:
  2037                           	opt stack 0
  2038  0000E1                     findEmptySpot@currentPosition:
  2039                           	opt stack 0
  2040  0000E1                     	ds	1
  2041  0000E2                     isNumberInMemory@currentPosition:
  2042                           	opt stack 0
  2043  0000E2                     	ds	1
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           postdec1	equ	0xFE5
  2051                           fsr1h	equ	0xFE2
  2052                           fsr1l	equ	0xFE1
  2053                           
  2054                           	psect	bssBANK1
  2055  0001C9                     __pbssBANK1:
  2056                           	opt stack 0
  2057  0001C9                     _outPipes:
  2058                           	opt stack 0
  2059  0001C9                     	ds	8
  2060  0001D1                     _CDCDataInHandle:
  2061                           	opt stack 0
  2062  0001D1                     	ds	2
  2063  0001D3                     triggerCmdFsm@currentState:
  2064                           	opt stack 0
  2065  0001D3                     	ds	1
  2066  0001D4                     delCmdFsm@currentState:
  2067                           	opt stack 0
  2068  0001D4                     	ds	1
  2069  0001D5                     addCmdFsm@currentState:
  2070                           	opt stack 0
  2071  0001D5                     	ds	1
  2072  0001D6                     initFsm@currentState:
  2073                           	opt stack 0
  2074  0001D6                     	ds	1
  2075  0001D7                     initEeprom@currentState:
  2076                           	opt stack 0
  2077  0001D7                     	ds	1
  2078  0001D8                     initGprsModem@currentState:
  2079                           	opt stack 0
  2080  0001D8                     	ds	1
  2081  0001D9                     MyApp_Task@currentState:
  2082                           	opt stack 0
  2083  0001D9                     	ds	1
  2084  0001DA                     GsmGprsTerminal@SMS:
  2085                           	opt stack 0
  2086  0001DA                     	ds	1
  2087  0001DB                     	ds	1
  2088  0001DC                     _control_signal_bitmap:
  2089                           	opt stack 0
  2090  0001DC                     	ds	1
  2091  0001DD                     _cdc_mem_type:
  2092                           	opt stack 0
  2093  0001DD                     	ds	1
  2094  0001DE                     _USBTicksSinceSuspendEnd:
  2095                           	opt stack 0
  2096  0001DE                     	ds	1
  2097  0001DF                     _BothEP0OutUOWNsSet:
  2098                           	opt stack 0
  2099  0001DF                     	ds	1
  2100  0001E0                     _USBBusIsSuspended:
  2101                           	opt stack 0
  2102  0001E0                     	ds	1
  2103  0001E1                     _RemoteWakeup:
  2104                           	opt stack 0
  2105  0001E1                     	ds	1
  2106  0001E2                     I2cSlv_QueryI2cData@Ret:
  2107                           	opt stack 0
  2108  0001E2                     	ds	1
  2109  0001E3                     I2cSlv_QueryI2cData@I2cOpState:
  2110                           	opt stack 0
  2111  0001E3                     	ds	1
  2112  0001E4                     I2cSendMsgSm@I2cComState:
  2113                           	opt stack 0
  2114  0001E4                     	ds	1
  2115  0001E5                     _I2cBusStatus:
  2116                           	opt stack 0
  2117  0001E5                     	ds	1
  2118  0001E6                     HttpGetMethod@GetMOutSts:
  2119                           	opt stack 0
  2120  0001E6                     	ds	1
  2121  0001E7                     HttpGetMethod@GetMethodState:
  2122                           	opt stack 0
  2123  0001E7                     	ds	1
  2124  0001E8                     InitGprsNetwork@GprsNetInitState:
  2125                           	opt stack 0
  2126  0001E8                     	ds	1
  2127  0001E9                     _PostMethod:
  2128                           	opt stack 0
  2129  0001E9                     	ds	1
  2130  0001EA                     _HttpGetMethodSts:
  2131                           	opt stack 0
  2132  0001EA                     	ds	1
  2133  0001EB                     _GprsNetworkSts:
  2134                           	opt stack 0
  2135  0001EB                     	ds	1
  2136  0001EC                     _ApnLenLocal:
  2137                           	opt stack 0
  2138  0001EC                     	ds	1
  2139  0001ED                     SendSmsSm@SendSms_NextState:
  2140                           	opt stack 0
  2141  0001ED                     	ds	1
  2142  0001EE                     SendSmsSm@SendSms_State:
  2143                           	opt stack 0
  2144  0001EE                     	ds	1
  2145  0001EF                     GetSmsSm@GetSmsState:
  2146                           	opt stack 0
  2147  0001EF                     	ds	1
  2148  0001F0                     ConfigureModem@NextState:
  2149                           	opt stack 0
  2150  0001F0                     	ds	1
  2151  0001F1                     ConfigureModem@MdmConfigState:
  2152                           	opt stack 0
  2153  0001F1                     	ds	1
  2154  0001F2                     TurnOnModem@TurnOnMdmState:
  2155                           	opt stack 0
  2156  0001F2                     	ds	1
  2157  0001F3                     CheckModem@CheckMdmSts:
  2158                           	opt stack 0
  2159  0001F3                     	ds	1
  2160  0001F4                     _AlarmEvent:
  2161                           	opt stack 0
  2162  0001F4                     	ds	1
  2163  0001F5                     _Led3OutSts:
  2164                           	opt stack 0
  2165  0001F5                     	ds	1
  2166  0001F6                     _Led3Sts:
  2167                           	opt stack 0
  2168  0001F6                     	ds	1
  2169  0001F7                     _Led2OutSts:
  2170                           	opt stack 0
  2171  0001F7                     	ds	1
  2172  0001F8                     _Led2Sts:
  2173                           	opt stack 0
  2174  0001F8                     	ds	1
  2175  0001F9                     _Led1OutSts:
  2176                           	opt stack 0
  2177  0001F9                     	ds	1
  2178  0001FA                     _Led1Sts:
  2179                           	opt stack 0
  2180  0001FA                     	ds	1
  2181  0001FB                     _ReadAddress:
  2182                           	opt stack 0
  2183  0001FB                     	ds	1
  2184  0001FC                     I2cDummyTx@DummyBuffer:
  2185                           	opt stack 0
  2186  0001FC                     	ds	1
  2187  0001FD                     _MdmStsReady:
  2188                           	opt stack 0
  2189  0001FD                     	ds	1
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           postdec1	equ	0xFE5
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           
  2200                           	psect	dataBANK1
  2201  0001FE                     __pdataBANK1:
  2202                           	opt stack 0
  2203  0001FE                     _isMemoryEmpty:
  2204                           	opt stack 0
  2205  0001FE                     	ds	1
  2206  0001FF                     InitGprsNetwork@GprsInitSts:
  2207                           	opt stack 0
  2208  0001FF                     	ds	1
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           
  2219                           	psect	bssBANK2
  2220  0002C8                     __pbssBANK2:
  2221                           	opt stack 0
  2222  0002C8                     _pCDCDst:
  2223                           	opt stack 0
  2224  0002C8                     	ds	3
  2225  0002CB                     _pCDCSrc:
  2226                           	opt stack 0
  2227  0002CB                     	ds	3
  2228  0002CE                     _ep_data_out:
  2229                           	opt stack 0
  2230  0002CE                     	ds	3
  2231  0002D1                     _ep_data_in:
  2232                           	opt stack 0
  2233  0002D1                     	ds	3
  2234  0002D4                     _pDst:
  2235                           	opt stack 0
  2236  0002D4                     	ds	2
  2237  0002D6                     ConfigureModem@DelayValueMs:
  2238                           	opt stack 0
  2239  0002D6                     	ds	2
  2240  0002D8                     TurnOnModem@Counter:
  2241                           	opt stack 0
  2242  0002D8                     	ds	2
  2243  0002DA                     UpdateSchFlag@InterruptCounter:
  2244                           	opt stack 0
  2245  0002DA                     	ds	2
  2246  0002DC                     MdmCntSm@Counter:
  2247                           	opt stack 0
  2248  0002DC                     	ds	2
  2249  0002DE                     RiSm@Counter:
  2250                           	opt stack 0
  2251  0002DE                     	ds	2
  2252  0002E0                     _ExtInt1IsrCallback:
  2253                           	opt stack 0
  2254  0002E0                     	ds	2
  2255  0002E2                     _ExtInt0IsrCallback:
  2256                           	opt stack 0
  2257  0002E2                     	ds	2
  2258  0002E4                     _RtccIsrCallback:
  2259                           	opt stack 0
  2260  0002E4                     	ds	2
  2261  0002E6                     _Tmr4IsrCallback:
  2262                           	opt stack 0
  2263  0002E6                     	ds	2
  2264  0002E8                     _Tmr2IsrCallback:
  2265                           	opt stack 0
  2266  0002E8                     	ds	2
  2267  0002EA                     Term_MainSm@TermMainSmState:
  2268                           	opt stack 0
  2269  0002EA                     	ds	1
  2270  0002EB                     Terminal@FormatOption:
  2271                           	opt stack 0
  2272  0002EB                     	ds	1
  2273  0002EC                     Terminal@SlaveAddr:
  2274                           	opt stack 0
  2275  0002EC                     	ds	1
  2276  0002ED                     Terminal@PackageLen:
  2277                           	opt stack 0
  2278  0002ED                     	ds	1
  2279  0002EE                     Terminal@TermState:
  2280                           	opt stack 0
  2281  0002EE                     	ds	1
  2282  0002EF                     _USBAlternateInterface:
  2283                           	opt stack 0
  2284  0002EF                     	ds	2
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           postdec1	equ	0xFE5
  2292                           fsr1h	equ	0xFE2
  2293                           fsr1l	equ	0xFE1
  2294                           
  2295                           	psect	dataBANK2
  2296  0002F1                     __pdataBANK2:
  2297                           	opt stack 0
  2298  0002F1                     Terminal@EchoOption:
  2299                           	opt stack 0
  2300  0002F1                     	ds	1
  2301  0002F2                     _MainSystemTimebaseFlag:
  2302                           	opt stack 0
  2303  0002F2                     	ds	1
  2304  0002F3                     _ConnTimeout:
  2305                           	opt stack 0
  2306  0002F3                     	ds	11
  2307  0002FE                     _relayBuffer:
  2308                           	opt stack 0
  2309  0002FE                     	ds	2
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           postdec1	equ	0xFE5
  2317                           fsr1h	equ	0xFE2
  2318                           fsr1l	equ	0xFE1
  2319                           
  2320                           	psect	bssBANK3
  2321  000300                     __pbssBANK3:
  2322                           	opt stack 0
  2323  000300                     _Rtcm_SystemDate:
  2324                           	opt stack 0
  2325  000300                     	ds	8
  2326  000308                     _Rtcm_RtccAlarm:
  2327                           	opt stack 0
  2328  000308                     	ds	6
  2329  00030E                     _pBDTEntryOut:
  2330                           	opt stack 0
  2331  00030E                     	ds	6
  2332  000314                     _BaudRateGen:
  2333                           	opt stack 0
  2334  000314                     	ds	4
  2335  000318                     _USB1msTickCount:
  2336                           	opt stack 0
  2337  000318                     	ds	4
  2338  00031C                     _OsTmr_OsTickCounter:
  2339                           	opt stack 0
  2340  00031C                     	ds	4
  2341  000320                     _secondCounter:
  2342                           	opt stack 0
  2343  000320                     	ds	2
  2344  000322                     _UsbMasterPhoneNumberLen:
  2345                           	opt stack 0
  2346  000322                     	ds	2
  2347  000324                     _ApnLocal:
  2348                           	opt stack 0
  2349  000324                     	ds	2
  2350  000326                     ConfigureModem@DelayCounter:
  2351                           	opt stack 0
  2352  000326                     	ds	2
  2353  000328                     _UartConfig:
  2354                           	opt stack 0
  2355  000328                     	ds	21
  2356  00033D                     _readBuffer:
  2357                           	opt stack 0
  2358  00033D                     	ds	13
  2359  00034A                     I2cSlv_QueryI2cData@TimeoutTimer:
  2360                           	opt stack 0
  2361  00034A                     	ds	11
  2362  000355                     _I2cConfig:
  2363                           	opt stack 0
  2364  000355                     	ds	10
  2365  00035F                     _Led3Blink:
  2366                           	opt stack 0
  2367  00035F                     	ds	9
  2368  000368                     _Led2Blink:
  2369                           	opt stack 0
  2370  000368                     	ds	9
  2371  000371                     _Led1Blink:
  2372                           	opt stack 0
  2373  000371                     	ds	9
  2374  00037A                     _dummy_encapsulated_cmd_response:
  2375                           	opt stack 0
  2376  00037A                     	ds	8
  2377  000382                     _line_coding:
  2378                           	opt stack 0
  2379  000382                     	ds	7
  2380  000389                     _Led3Pulse:
  2381                           	opt stack 0
  2382  000389                     	ds	6
  2383  00038F                     _Led2Pulse:
  2384                           	opt stack 0
  2385  00038F                     	ds	6
  2386  000395                     _Led1Pulse:
  2387                           	opt stack 0
  2388  000395                     	ds	6
  2389  00039B                     _I2cRxPacket:
  2390                           	opt stack 0
  2391  00039B                     	ds	6
  2392  0003A1                     _I2cTxPacket:
  2393                           	opt stack 0
  2394  0003A1                     	ds	5
  2395  0003A6                     _HttpGetDataLocal:
  2396                           	opt stack 0
  2397  0003A6                     	ds	5
  2398  0003AB                     _memoryPreamble:
  2399                           	opt stack 0
  2400  0003AB                     	ds	4
  2401  0003AF                     Terminal@Addr:
  2402                           	opt stack 0
  2403  0003AF                     	ds	4
  2404  0003B3                     Terminal@Len:
  2405                           	opt stack 0
  2406  0003B3                     	ds	4
  2407  0003B7                     _AlCfg:
  2408                           	opt stack 0
  2409  0003B7                     	ds	4
  2410  0003BB                     _RtcConfig:
  2411                           	opt stack 0
  2412  0003BB                     	ds	4
  2413  0003BF                     initGprsModem@modemCounter:
  2414                           	opt stack 0
  2415  0003BF                     	ds	2
  2416  0003C1                     _setupCallTicks:
  2417                           	opt stack 0
  2418  0003C1                     	ds	2
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1h	equ	0xFE2
  2427                           fsr1l	equ	0xFE1
  2428                           
  2429                           	psect	dataBANK3
  2430  0003C3                     __pdataBANK3:
  2431                           	opt stack 0
  2432  0003C3                     ModemEvtParser@F9114:
  2433                           	opt stack 0
  2434  0003C3                     	ds	5
  2435  0003C8                     ModemEvtParser@F9112:
  2436                           	opt stack 0
  2437  0003C8                     	ds	5
  2438  0003CD                     ModemEvtParser@F9110:
  2439                           	opt stack 0
  2440  0003CD                     	ds	4
  2441  0003D1                     Term_MainSm@TermDelay:
  2442                           	opt stack 0
  2443  0003D1                     	ds	11
  2444  0003DC                     _ConnWait:
  2445                           	opt stack 0
  2446  0003DC                     	ds	11
  2447  0003E7                     SendSmsSm@SwTimer:
  2448                           	opt stack 0
  2449  0003E7                     	ds	11
  2450  0003F2                     CheckModem@Timeout:
  2451                           	opt stack 0
  2452  0003F2                     	ds	11
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1h	equ	0xFE2
  2461                           fsr1l	equ	0xFE1
  2462                           
  2463                           	psect	bssBANK4
  2464  000440                     __pbssBANK4:
  2465                           	opt stack 0
  2466  000440                     _UsbMasterPhoneNumber:
  2467                           	opt stack 0
  2468  000440                     	ds	15
  2469  00044F                     _cdc_notice:
  2470                           	opt stack 0
  2471  00044F                     	ds	10
  2472  000459                     Term_MainSm@Data:
  2473                           	opt stack 0
  2474  000459                     	ds	50
  2475  00048B                     _smsText:
  2476                           	opt stack 0
  2477  00048B                     	ds	20
  2478  00049F                     _PhoneNumber:
  2479                           	opt stack 0
  2480  00049F                     	ds	20
  2481  0004B3                     _EepromBuffer:
  2482                           	opt stack 0
  2483  0004B3                     	ds	15
  2484  0004C2                     _receivedNumber:
  2485                           	opt stack 0
  2486  0004C2                     	ds	13
  2487  0004CF                     _callerNumber:
  2488                           	opt stack 0
  2489  0004CF                     	ds	13
  2490  0004DC                     Terminal@SwTimer:
  2491                           	opt stack 0
  2492  0004DC                     	ds	11
  2493  0004E7                     I2cSlv_QueryI2cData@QueryTimer:
  2494                           	opt stack 0
  2495  0004E7                     	ds	11
  2496                           tblptru	equ	0xFF8
  2497                           tblptrh	equ	0xFF7
  2498                           tblptrl	equ	0xFF6
  2499                           tablat	equ	0xFF5
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           postdec1	equ	0xFE5
  2503                           fsr1h	equ	0xFE2
  2504                           fsr1l	equ	0xFE1
  2505                           
  2506                           	psect	dataBANK4
  2507  0004F2                     __pdataBANK4:
  2508                           	opt stack 0
  2509  0004F2                     ModemEvtParser@F9116:
  2510                           	opt stack 0
  2511  0004F2                     	ds	10
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           postinc0	equ	0xFEE
  2517                           wreg	equ	0xFE8
  2518                           postdec1	equ	0xFE5
  2519                           fsr1h	equ	0xFE2
  2520                           fsr1l	equ	0xFE1
  2521                           
  2522                           	psect	bssBANK5
  2523  000500                     __pbssBANK5:
  2524                           	opt stack 0
  2525  000500                     _cdc_data_rx:
  2526                           	opt stack 0
  2527  000500                     	ds	64
  2528  000540                     Terminal@TermRxBuffer:
  2529                           	opt stack 0
  2530  000540                     	ds	50
  2531  000572                     _MessageText:
  2532                           	opt stack 0
  2533  000572                     	ds	50
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           fsr1h	equ	0xFE2
  2542                           fsr1l	equ	0xFE1
  2543                           
  2544                           	psect	dataBANK5
  2545  0005A4                     __pdataBANK5:
  2546                           	opt stack 0
  2547  0005A4                     _TaskTable:
  2548                           	opt stack 0
  2549  0005A4                     	ds	80
  2550                           tblptru	equ	0xFF8
  2551                           tblptrh	equ	0xFF7
  2552                           tblptrl	equ	0xFF6
  2553                           tablat	equ	0xFF5
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           postdec1	equ	0xFE5
  2557                           fsr1h	equ	0xFE2
  2558                           fsr1l	equ	0xFE1
  2559                           
  2560                           	psect	bssBANK6
  2561  000600                     __pbssBANK6:
  2562                           	opt stack 0
  2563  000600                     _OsAlarms:
  2564                           	opt stack 0
  2565  000600                     	ds	220
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           postinc0	equ	0xFEE
  2571                           wreg	equ	0xFE8
  2572                           postdec1	equ	0xFE5
  2573                           fsr1h	equ	0xFE2
  2574                           fsr1l	equ	0xFE1
  2575                           
  2576                           	psect	bssBANK7
  2577  000700                     __pbssBANK7:
  2578                           	opt stack 0
  2579  000700                     _Mdm_SmsRx:
  2580                           	opt stack 0
  2581  000700                     	ds	102
  2582  000766                     Terminal@Payload:
  2583                           	opt stack 0
  2584  000766                     	ds	80
  2585  0007B6                     _cdc_data_tx:
  2586                           	opt stack 0
  2587  0007B6                     	ds	64
  2588                           tblptru	equ	0xFF8
  2589                           tblptrh	equ	0xFF7
  2590                           tblptrl	equ	0xFF6
  2591                           tablat	equ	0xFF5
  2592                           postinc0	equ	0xFEE
  2593                           wreg	equ	0xFE8
  2594                           postdec1	equ	0xFE5
  2595                           fsr1h	equ	0xFE2
  2596                           fsr1l	equ	0xFE1
  2597                           
  2598                           	psect	bssBANK8
  2599  000800                     __pbssBANK8:
  2600                           	opt stack 0
  2601  000800                     GsmGprsTerminal@UsbBuffer:
  2602                           	opt stack 0
  2603  000800                     	ds	200
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           postinc0	equ	0xFEE
  2609                           wreg	equ	0xFE8
  2610                           postdec1	equ	0xFE5
  2611                           fsr1h	equ	0xFE2
  2612                           fsr1l	equ	0xFE1
  2613                           
  2614                           	psect	bssBANK9
  2615  000900                     __pbssBANK9:
  2616                           	opt stack 0
  2617  000900                     GsmGprsTerminal@UartBuffer:
  2618                           	opt stack 0
  2619  000900                     	ds	200
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1h	equ	0xFE2
  2628                           fsr1l	equ	0xFE1
  2629                           
  2630                           	psect	bssBIGRAMl
  2631  000AC8                     __pbssBIGRAMl:
  2632                           	opt stack 0
  2633  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2634                           	opt stack 0
  2635  000AC8                     	ds	400
  2636  000C58                     _RxBuffer:
  2637                           	opt stack 0
  2638  000C58                     	ds	400
  2639                           tblptru	equ	0xFF8
  2640                           tblptrh	equ	0xFF7
  2641                           tblptrl	equ	0xFF6
  2642                           tablat	equ	0xFF5
  2643                           postinc0	equ	0xFEE
  2644                           wreg	equ	0xFE8
  2645                           postdec1	equ	0xFE5
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           
  2649                           	psect	cstackBANK10
  2650  000A00                     __pcstackBANK10:
  2651                           	opt stack 0
  2652  000A00                     Terminal@UsbRxBuffer:
  2653                           	opt stack 0
  2654                           
  2655                           ; 200 bytes @ 0x0
  2656  000A00                     	ds	200
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           postdec1	equ	0xFE5
  2664                           fsr1h	equ	0xFE2
  2665                           fsr1l	equ	0xFE1
  2666                           
  2667                           	psect	cstackBANK4
  2668  0004FC                     __pcstackBANK4:
  2669                           	opt stack 0
  2670  0004FC                     ??_ScheduleTasks:
  2671                           
  2672                           ; 1 bytes @ 0x0
  2673  0004FC                     	ds	4
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           postdec1	equ	0xFE5
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           
  2684                           	psect	cstackBANK3
  2685  0003FD                     __pcstackBANK3:
  2686                           	opt stack 0
  2687  0003FD                     ??_InitializeTasks:
  2688  0003FD                     ScheduleTasks@ActiveTaskIndex:
  2689                           	opt stack 0
  2690                           
  2691                           ; 1 bytes @ 0x0
  2692  0003FD                     	ds	2
  2693  0003FF                     InitializeTasks@ActiveTaskIndex:
  2694                           	opt stack 0
  2695                           
  2696                           ; 1 bytes @ 0x2
  2697  0003FF                     	ds	1
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           postinc0	equ	0xFEE
  2703                           wreg	equ	0xFE8
  2704                           postdec1	equ	0xFE5
  2705                           fsr1h	equ	0xFE2
  2706                           fsr1l	equ	0xFE1
  2707                           
  2708                           	psect	cstackBANK2
  2709  000200                     __pcstackBANK2:
  2710                           	opt stack 0
  2711  000200                     Terminal@UsbTxBuffer:
  2712                           	opt stack 0
  2713                           
  2714                           ; 200 bytes @ 0x0
  2715  000200                     	ds	200
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           postdec1	equ	0xFE5
  2723                           fsr1h	equ	0xFE2
  2724                           fsr1l	equ	0xFE1
  2725                           
  2726                           	psect	cstackBANK1
  2727  000100                     __pcstackBANK1:
  2728                           	opt stack 0
  2729  000100                     initEeprom@addressToRead:
  2730                           	opt stack 0
  2731  000100                     isNumberInMemory@phoneNumber:
  2732                           	opt stack 0
  2733  000100                     isMasterNumber@phoneNumber:
  2734                           	opt stack 0
  2735  000100                     findEmptySpot@positionInMemory:
  2736                           	opt stack 0
  2737  000100                     SendSmsSm@UartMessage:
  2738                           	opt stack 0
  2739  000100                     InitGprsNetwork@UartMessage:
  2740                           	opt stack 0
  2741  000100                     Terminal@TermTxBuffer:
  2742                           	opt stack 0
  2743  000100                     HttpGetMethod@UartMessage:
  2744                           	opt stack 0
  2745                           
  2746                           ; 200 bytes @ 0x0
  2747  000100                     	ds	1
  2748  000101                     initEeprom@memoryOpResult:
  2749                           	opt stack 0
  2750                           
  2751                           ; 1 bytes @ 0x1
  2752  000101                     	ds	1
  2753  000102                     initEeprom@isInitialized:
  2754                           	opt stack 0
  2755  000102                     isMasterNumber@memoryOpResult:
  2756                           	opt stack 0
  2757  000102                     findEmptySpot@memoryOpResult:
  2758                           	opt stack 0
  2759  000102                     isNumberInMemory@positionInMemory:
  2760                           	opt stack 0
  2761                           
  2762                           ; 2 bytes @ 0x2
  2763  000102                     	ds	1
  2764  000103                     initFsm@isInitialized:
  2765                           	opt stack 0
  2766                           
  2767                           ; 1 bytes @ 0x3
  2768  000103                     	ds	1
  2769  000104                     isNumberInMemory@memoryOpResult:
  2770                           	opt stack 0
  2771                           
  2772                           ; 1 bytes @ 0x4
  2773  000104                     	ds	1
  2774  000105                     addCmdFsm@receivedNumber:
  2775                           	opt stack 0
  2776  000105                     delCmdFsm@receivedNumber:
  2777                           	opt stack 0
  2778  000105                     triggerCmdFsm@receivedNumber:
  2779                           	opt stack 0
  2780                           
  2781                           ; 2 bytes @ 0x5
  2782  000105                     	ds	2
  2783  000107                     triggerCmdFsm@isComplete:
  2784                           	opt stack 0
  2785  000107                     addCmdFsm@smsText:
  2786                           	opt stack 0
  2787  000107                     delCmdFsm@smsText:
  2788                           	opt stack 0
  2789                           
  2790                           ; 2 bytes @ 0x7
  2791  000107                     	ds	1
  2792  000108                     triggerCmdFsm@numberInMemory:
  2793                           	opt stack 0
  2794                           
  2795                           ; 1 bytes @ 0x8
  2796  000108                     	ds	1
  2797  000109                     addCmdFsm@isComplete:
  2798                           	opt stack 0
  2799  000109                     triggerCmdFsm@masterOpResult:
  2800                           	opt stack 0
  2801  000109                     delCmdFsm@emptyNumber:
  2802                           	opt stack 0
  2803                           
  2804                           ; 13 bytes @ 0x9
  2805  000109                     	ds	1
  2806  00010A                     addCmdFsm@masterOpResult:
  2807                           	opt stack 0
  2808  00010A                     triggerCmdFsm@searchNumber:
  2809                           	opt stack 0
  2810                           
  2811                           ; 1 bytes @ 0xA
  2812  00010A                     	ds	1
  2813  00010B                     addCmdFsm@numberInMemory:
  2814                           	opt stack 0
  2815                           
  2816                           ; 1 bytes @ 0xB
  2817  00010B                     	ds	1
  2818  00010C                     addCmdFsm@searchNumber:
  2819                           	opt stack 0
  2820                           
  2821                           ; 1 bytes @ 0xC
  2822  00010C                     	ds	10
  2823  000116                     delCmdFsm@isComplete:
  2824                           	opt stack 0
  2825                           
  2826                           ; 1 bytes @ 0x16
  2827  000116                     	ds	1
  2828  000117                     delCmdFsm@masterOpResult:
  2829                           	opt stack 0
  2830                           
  2831                           ; 1 bytes @ 0x17
  2832  000117                     	ds	1
  2833  000118                     delCmdFsm@numberInMemory:
  2834                           	opt stack 0
  2835                           
  2836                           ; 1 bytes @ 0x18
  2837  000118                     	ds	1
  2838  000119                     delCmdFsm@searchNumber:
  2839                           	opt stack 0
  2840                           
  2841                           ; 1 bytes @ 0x19
  2842  000119                     	ds	25
  2843  000132                     InitGprsNetwork@Index:
  2844                           	opt stack 0
  2845  000132                     Term_MainSm@FwkMajorStr:
  2846                           	opt stack 0
  2847                           
  2848                           ; 4 bytes @ 0x32
  2849  000132                     	ds	4
  2850  000136                     Term_MainSm@FwkMinorStr:
  2851                           	opt stack 0
  2852                           
  2853                           ; 4 bytes @ 0x36
  2854  000136                     	ds	4
  2855  00013A                     Term_MainSm@FwkBuildStr:
  2856                           	opt stack 0
  2857                           
  2858                           ; 4 bytes @ 0x3A
  2859  00013A                     	ds	142
  2860  0001C8                     HttpGetMethod@Index:
  2861                           	opt stack 0
  2862                           
  2863                           ; 1 bytes @ 0xC8
  2864  0001C8                     	ds	1
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           postdec1	equ	0xFE5
  2872                           fsr1h	equ	0xFE2
  2873                           fsr1l	equ	0xFE1
  2874                           
  2875                           	psect	cstackBANK0
  2876  000060                     __pcstackBANK0:
  2877                           	opt stack 0
  2878  000060                     
  2879                           ; 1 bytes @ 0x0
  2880  000060                     	ds	8
  2881  000068                     ??_LowPriorityIsr:
  2882                           
  2883                           ; 1 bytes @ 0x8
  2884  000068                     	ds	21
  2885  00007D                     ??_isdigit:
  2886  00007D                     ??_isspace:
  2887  00007D                     ??_isupper:
  2888  00007D                     ??_Rtcc_GetRtccValue:
  2889  00007D                     ??_UartTxBufferStatus:
  2890  00007D                     ??_USBStdGetDscHandler:
  2891  00007D                     ??_USBStdGetStatusHandler:
  2892  00007D                     ?_GetLastInteractionNumber:
  2893                           	opt stack 0
  2894  00007D                     ?_USBTransferOnePacket:
  2895                           	opt stack 0
  2896  00007D                     ?_strlen:
  2897                           	opt stack 0
  2898  00007D                     ?_sprintf:
  2899                           	opt stack 0
  2900  00007D                     ?_initPreamble:
  2901                           	opt stack 0
  2902  00007D                     ?___wmul:
  2903                           	opt stack 0
  2904  00007D                     ?___awdiv:
  2905                           	opt stack 0
  2906  00007D                     ?___awmod:
  2907                           	opt stack 0
  2908  00007D                     ?___lwmod:
  2909                           	opt stack 0
  2910  00007D                     ?_GetOsTickCounter:
  2911                           	opt stack 0
  2912  00007D                     ?___lmul:
  2913                           	opt stack 0
  2914  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2915                           	opt stack 0
  2916  00007D                     SetAckStatus@AckSts:
  2917                           	opt stack 0
  2918  00007D                     WriteByte@Byte:
  2919                           	opt stack 0
  2920  00007D                     ReadByte@Byte:
  2921                           	opt stack 0
  2922  00007D                     Mcu_SetWdgSts@WdgSts:
  2923                           	opt stack 0
  2924  00007D                     RtccIrqInit@Priority:
  2925                           	opt stack 0
  2926  00007D                     Rtcc_SetRtcStatus@Status:
  2927                           	opt stack 0
  2928  00007D                     TmrBInit@Prescaler:
  2929                           	opt stack 0
  2930  00007D                     Tmr_TmrBIrqSet@Priority:
  2931                           	opt stack 0
  2932  00007D                     Tmr_StartTmr@TmrNumb:
  2933                           	opt stack 0
  2934  00007D                     UartWriteByte@ByteToWrite:
  2935                           	opt stack 0
  2936  00007D                     USBTransferOnePacket@dir:
  2937                           	opt stack 0
  2938  00007D                     USBConfigureEndpoint@direction:
  2939                           	opt stack 0
  2940  00007D                     USBCtrlTrfTxService@byteToSend:
  2941                           	opt stack 0
  2942  00007D                     USBCtrlTrfRxService@i:
  2943                           	opt stack 0
  2944  00007D                     Led_SetLedStatus@LedSts:
  2945                           	opt stack 0
  2946  00007D                     toupper@c:
  2947                           	opt stack 0
  2948  00007D                     tolower@c:
  2949                           	opt stack 0
  2950  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2951                           	opt stack 0
  2952  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2953                           	opt stack 0
  2954  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2955                           	opt stack 0
  2956  00007D                     Uart_ClearRxBuffer@Index:
  2957                           	opt stack 0
  2958  00007D                     GenerateEvt@Event:
  2959                           	opt stack 0
  2960  00007D                     ReceiveEvt@Event:
  2961                           	opt stack 0
  2962  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2963                           	opt stack 0
  2964  00007D                     StringCompare@String1:
  2965                           	opt stack 0
  2966  00007D                     ClearBuffer@Buffer:
  2967                           	opt stack 0
  2968  00007D                     isNumberValid@phoneNumber:
  2969                           	opt stack 0
  2970  00007D                     sprintf@sp:
  2971                           	opt stack 0
  2972  00007D                     ___wmul@multiplier:
  2973                           	opt stack 0
  2974  00007D                     ___awdiv@dividend:
  2975                           	opt stack 0
  2976  00007D                     ___awmod@dividend:
  2977                           	opt stack 0
  2978  00007D                     ___lwmod@dividend:
  2979                           	opt stack 0
  2980  00007D                     memcpy@d1:
  2981                           	opt stack 0
  2982  00007D                     memset@p1:
  2983                           	opt stack 0
  2984  00007D                     strcat@to:
  2985                           	opt stack 0
  2986  00007D                     strcpy@to:
  2987                           	opt stack 0
  2988  00007D                     strlen@s:
  2989                           	opt stack 0
  2990  00007D                     ___lmul@multiplier:
  2991                           	opt stack 0
  2992                           
  2993                           ; 4 bytes @ 0x1D
  2994  00007D                     	ds	1
  2995  00007E                     ??_USBConfigureEndpoint:
  2996  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2997                           	opt stack 0
  2998  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2999                           	opt stack 0
  3000  00007E                     TmrBInit@Postscaler:
  3001                           	opt stack 0
  3002  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  3003                           	opt stack 0
  3004  00007E                     UartWriteByte@Module:
  3005                           	opt stack 0
  3006  00007E                     UartTxBufferStatus@Module:
  3007                           	opt stack 0
  3008  00007E                     USBCtrlTrfRxService@byteToRead:
  3009                           	opt stack 0
  3010  00007E                     USBCtrlTrfInHandler@lastDTS:
  3011                           	opt stack 0
  3012  00007E                     Led_SetLedStatus@Led:
  3013                           	opt stack 0
  3014  00007E                     _isdigit$6441:
  3015                           	opt stack 0
  3016  00007E                     _isspace$6710:
  3017                           	opt stack 0
  3018  00007E                     _isupper$6713:
  3019                           	opt stack 0
  3020  00007E                     I2c_WriteData@WritePacket:
  3021                           	opt stack 0
  3022  00007E                     Rtcc_RtcConfig@RtcConfig:
  3023                           	opt stack 0
  3024  00007E                     USBTransferOnePacket@data:
  3025                           	opt stack 0
  3026  00007E                     USBStdGetStatusHandler@p:
  3027                           	opt stack 0
  3028                           
  3029                           ; 2 bytes @ 0x1E
  3030  00007E                     	ds	1
  3031  00007F                     ??_strlen:
  3032  00007F                     ??_Rtcc_AlarmConfig:
  3033  00007F                     ??_TmrBInit:
  3034  00007F                     Irq_InitIntController@IntPriorityEn:
  3035                           	opt stack 0
  3036  00007F                     Rtcc_GetRtccValue@RetValue:
  3037                           	opt stack 0
  3038  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3039                           	opt stack 0
  3040  00007F                     UartTxBufferStatus@TxBufferStatus:
  3041                           	opt stack 0
  3042  00007F                     GenerateEvt@EventStatus:
  3043                           	opt stack 0
  3044  00007F                     isdigit@c:
  3045                           	opt stack 0
  3046  00007F                     isspace@c:
  3047                           	opt stack 0
  3048  00007F                     isupper@c:
  3049                           	opt stack 0
  3050  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3051                           	opt stack 0
  3052  00007F                     StringCompare@String2:
  3053                           	opt stack 0
  3054  00007F                     ClearBuffer@Len:
  3055                           	opt stack 0
  3056  00007F                     sprintf@f:
  3057                           	opt stack 0
  3058  00007F                     ___wmul@multiplicand:
  3059                           	opt stack 0
  3060  00007F                     ___awdiv@divisor:
  3061                           	opt stack 0
  3062  00007F                     ___awmod@divisor:
  3063                           	opt stack 0
  3064  00007F                     ___lwmod@divisor:
  3065                           	opt stack 0
  3066  00007F                     memcpy@s1:
  3067                           	opt stack 0
  3068  00007F                     memset@c:
  3069                           	opt stack 0
  3070  00007F                     strcat@from:
  3071                           	opt stack 0
  3072  00007F                     strcpy@from:
  3073                           	opt stack 0
  3074                           
  3075                           ; 2 bytes @ 0x1F
  3076  00007F                     	ds	1
  3077  000080                     ??_isalpha:
  3078  000080                     ??_isxdigit:
  3079  000080                     ??_I2c_WriteData:
  3080  000080                     ??_Rtcc_RtcConfig:
  3081  000080                     Rtcc_GetRtccValue@RegValue:
  3082                           	opt stack 0
  3083  000080                     TmrBInit@TmrNumb:
  3084                           	opt stack 0
  3085  000080                     ReceiveEvt@EventStatus:
  3086                           	opt stack 0
  3087  000080                     USBTransferOnePacket@len:
  3088                           	opt stack 0
  3089  000080                     isNumberValid@isNumberOk:
  3090                           	opt stack 0
  3091  000080                     I2c_ReadData@ReadPacket:
  3092                           	opt stack 0
  3093  000080                     Uart_WriteConstString@ConstStringToWrite:
  3094                           	opt stack 0
  3095  000080                     Uart_WriteString@StringToWrite:
  3096                           	opt stack 0
  3097  000080                     Uart_WriteStringLen@StringToWrite:
  3098                           	opt stack 0
  3099  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3100                           	opt stack 0
  3101  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x20
  3105  000080                     	ds	1
  3106  000081                     ?_GetElapsedTime:
  3107                           	opt stack 0
  3108  000081                     ?_Rtcm_GetRtccDate:
  3109                           	opt stack 0
  3110  000081                     Mdm_IsSmsReceived@Ret:
  3111                           	opt stack 0
  3112  000081                     Mdm_IsRinging@Ret:
  3113                           	opt stack 0
  3114  000081                     I2cSlv_I2cReadMsgSts@Result:
  3115                           	opt stack 0
  3116  000081                     USBTransferOnePacket@ep:
  3117                           	opt stack 0
  3118  000081                     Led_SetLedBlinkTime@Led:
  3119                           	opt stack 0
  3120  000081                     isNumberValid@i:
  3121                           	opt stack 0
  3122  000081                     ___awdiv@counter:
  3123                           	opt stack 0
  3124  000081                     ___awmod@counter:
  3125                           	opt stack 0
  3126  000081                     ___lwmod@counter:
  3127                           	opt stack 0
  3128  000081                     _isalpha$6707:
  3129                           	opt stack 0
  3130  000081                     _isxdigit$6717:
  3131                           	opt stack 0
  3132  000081                     OsTmr_StartTimer@Timer:
  3133                           	opt stack 0
  3134  000081                     StringCompare@Len:
  3135                           	opt stack 0
  3136  000081                     ClearBuffer@Index:
  3137                           	opt stack 0
  3138  000081                     ___wmul@product:
  3139                           	opt stack 0
  3140  000081                     memcpy@n:
  3141                           	opt stack 0
  3142  000081                     memset@n:
  3143                           	opt stack 0
  3144  000081                     strcat@cp:
  3145                           	opt stack 0
  3146  000081                     strcpy@cp:
  3147                           	opt stack 0
  3148  000081                     strlen@cp:
  3149                           	opt stack 0
  3150  000081                     GetElapsedTime@StartTime:
  3151                           	opt stack 0
  3152  000081                     ___lmul@multiplicand:
  3153                           	opt stack 0
  3154                           
  3155                           ; 4 bytes @ 0x21
  3156  000081                     	ds	1
  3157  000082                     ??_I2c_ReadData:
  3158  000082                     Uart_WriteConstString@Module:
  3159                           	opt stack 0
  3160  000082                     Uart_WriteString@Module:
  3161                           	opt stack 0
  3162  000082                     Uart_WriteStringLen@Len:
  3163                           	opt stack 0
  3164  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3165                           	opt stack 0
  3166  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3167                           	opt stack 0
  3168  000082                     USBConfigureEndpoint@EPNum:
  3169                           	opt stack 0
  3170  000082                     ___awdiv@sign:
  3171                           	opt stack 0
  3172  000082                     ___awmod@sign:
  3173                           	opt stack 0
  3174  000082                     isalpha@c:
  3175                           	opt stack 0
  3176  000082                     isxdigit@c:
  3177                           	opt stack 0
  3178  000082                     USBTransferOnePacket@handle:
  3179                           	opt stack 0
  3180                           
  3181                           ; 2 bytes @ 0x22
  3182  000082                     	ds	1
  3183  000083                     ?_GetCallerNumber:
  3184                           	opt stack 0
  3185  000083                     ?_atoi:
  3186                           	opt stack 0
  3187  000083                     ?_xtoi:
  3188                           	opt stack 0
  3189  000083                     ?___lwdiv:
  3190                           	opt stack 0
  3191  000083                     Uart_WriteStringLen@Index:
  3192                           	opt stack 0
  3193  000083                     Mdm_SetSmsFormat@Index:
  3194                           	opt stack 0
  3195  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3196                           	opt stack 0
  3197  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3198                           	opt stack 0
  3199  000083                     getSetupCall@isCalledReceived:
  3200                           	opt stack 0
  3201  000083                     sprintf@flag:
  3202                           	opt stack 0
  3203  000083                     memcpy@tmp:
  3204                           	opt stack 0
  3205  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3206                           	opt stack 0
  3207  000083                     USBConfigureEndpoint@handle:
  3208                           	opt stack 0
  3209  000083                     putUSBUSART@data:
  3210                           	opt stack 0
  3211  000083                     atoi@s:
  3212                           	opt stack 0
  3213  000083                     ___awdiv@quotient:
  3214                           	opt stack 0
  3215  000083                     ___lwdiv@dividend:
  3216                           	opt stack 0
  3217  000083                     memset@p:
  3218                           	opt stack 0
  3219  000083                     xtoi@s:
  3220                           	opt stack 0
  3221  000083                     OsTmr_StartTimer@Timeout:
  3222                           	opt stack 0
  3223                           
  3224                           ; 4 bytes @ 0x23
  3225  000083                     	ds	1
  3226  000084                     Uart_WriteStringLen@Module:
  3227                           	opt stack 0
  3228  000084                     I2cSlv_SendI2cMsg@TxSts:
  3229                           	opt stack 0
  3230  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3231                           	opt stack 0
  3232  000084                     CDCTxService@i:
  3233                           	opt stack 0
  3234  000084                     getsUSBUSART@buffer:
  3235                           	opt stack 0
  3236  000084                     sprintf@ap:
  3237                           	opt stack 0
  3238  000084                     memcpy@d:
  3239                           	opt stack 0
  3240  000084                     Mdm_SetSmsFormat@UartMessage:
  3241                           	opt stack 0
  3242                           
  3243                           ; 20 bytes @ 0x24
  3244  000084                     	ds	1
  3245  000085                     ??_atoi:
  3246  000085                     ??_xtoi:
  3247  000085                     ??_GetElapsedTime:
  3248  000085                     Rtcc_SetRtccValue@Value:
  3249                           	opt stack 0
  3250  000085                     USBDeviceInit@i:
  3251                           	opt stack 0
  3252  000085                     USBEnableEndpoint@options:
  3253                           	opt stack 0
  3254  000085                     putUSBUSART@length:
  3255                           	opt stack 0
  3256  000085                     CDCTxService@byte_to_send:
  3257                           	opt stack 0
  3258  000085                     Eeprom_Reset@SlaveAddress:
  3259                           	opt stack 0
  3260  000085                     StringCompare@Result:
  3261                           	opt stack 0
  3262  000085                     triggerRelay@res:
  3263                           	opt stack 0
  3264  000085                     StringCopy@SourceStr:
  3265                           	opt stack 0
  3266  000085                     ___lwdiv@divisor:
  3267                           	opt stack 0
  3268  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3269                           	opt stack 0
  3270  000085                     ___lmul@product:
  3271                           	opt stack 0
  3272                           
  3273                           ; 4 bytes @ 0x25
  3274  000085                     	ds	1
  3275  000086                     ??_Rtcc_SetRtccValue:
  3276  000086                     getsUSBUSART@len:
  3277                           	opt stack 0
  3278  000086                     triggerRelay@isRelayOn:
  3279                           	opt stack 0
  3280  000086                     sprintf@c:
  3281                           	opt stack 0
  3282  000086                     USBEnableEndpoint@p:
  3283                           	opt stack 0
  3284  000086                     StringCompare@Index:
  3285                           	opt stack 0
  3286  000086                     memcpy@s:
  3287                           	opt stack 0
  3288                           
  3289                           ; 2 bytes @ 0x26
  3290  000086                     	ds	1
  3291  000087                     atoi@sign:
  3292                           	opt stack 0
  3293  000087                     ___lwdiv@counter:
  3294                           	opt stack 0
  3295  000087                     xtoi@sign:
  3296                           	opt stack 0
  3297  000087                     StringCopy@DestStr:
  3298                           	opt stack 0
  3299  000087                     sprintf@cp:
  3300                           	opt stack 0
  3301                           
  3302                           ; 2 bytes @ 0x27
  3303  000087                     	ds	1
  3304  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3305                           	opt stack 0
  3306  000088                     USBEnableEndpoint@ep:
  3307                           	opt stack 0
  3308  000088                     atoi@a:
  3309                           	opt stack 0
  3310  000088                     ___lwdiv@quotient:
  3311                           	opt stack 0
  3312  000088                     xtoi@val:
  3313                           	opt stack 0
  3314  000088                     parseCommand@addNumberCmd:
  3315                           	opt stack 0
  3316                           
  3317                           ; 4 bytes @ 0x28
  3318  000088                     	ds	1
  3319  000089                     ??_Rtcm_GetRtccDate:
  3320  000089                     ?_strtol:
  3321                           	opt stack 0
  3322  000089                     ?___lldiv:
  3323                           	opt stack 0
  3324  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3325                           	opt stack 0
  3326  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3327                           	opt stack 0
  3328  000089                     StringCopy@Len:
  3329                           	opt stack 0
  3330  000089                     strtol@s:
  3331                           	opt stack 0
  3332  000089                     ___lldiv@dividend:
  3333                           	opt stack 0
  3334  000089                     Rtcm_SetRtccDate@Date:
  3335                           	opt stack 0
  3336                           
  3337                           ; 8 bytes @ 0x29
  3338  000089                     	ds	1
  3339  00008A                     xtoi@c:
  3340                           	opt stack 0
  3341  00008A                     LedBlinkStateMachine@LedBlink:
  3342                           	opt stack 0
  3343  00008A                     LedPulseStateMachine@LedPulse:
  3344                           	opt stack 0
  3345  00008A                     secondsAppTimer@counter:
  3346                           	opt stack 0
  3347  00008A                     utoa@buf:
  3348                           	opt stack 0
  3349  00008A                     Rtcm_GetRtccDate@LocalDate:
  3350                           	opt stack 0
  3351                           
  3352                           ; 8 bytes @ 0x2A
  3353  00008A                     	ds	1
  3354  00008B                     ??_StringCopy:
  3355  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3356                           	opt stack 0
  3357  00008B                     strtol@endptr:
  3358                           	opt stack 0
  3359                           
  3360                           ; 2 bytes @ 0x2B
  3361  00008B                     	ds	1
  3362  00008C                     LedPulseStateMachine@Led:
  3363                           	opt stack 0
  3364  00008C                     secondsAppTimer@isCyclic:
  3365                           	opt stack 0
  3366  00008C                     utoa@val:
  3367                           	opt stack 0
  3368  00008C                     parseCommand@deleteNumberCmd:
  3369                           	opt stack 0
  3370                           
  3371                           ; 4 bytes @ 0x2C
  3372  00008C                     	ds	1
  3373  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3374                           	opt stack 0
  3375  00008D                     StringCopy@Index:
  3376                           	opt stack 0
  3377  00008D                     strtol@base:
  3378                           	opt stack 0
  3379  00008D                     GetElapsedTime@TimeValue:
  3380                           	opt stack 0
  3381  00008D                     ___lldiv@divisor:
  3382                           	opt stack 0
  3383                           
  3384                           ; 4 bytes @ 0x2D
  3385  00008D                     	ds	1
  3386  00008E                     utoa@base:
  3387                           	opt stack 0
  3388                           
  3389                           ; 2 bytes @ 0x2E
  3390  00008E                     	ds	1
  3391  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3392  00008F                     ??_strtol:
  3393  00008F                     secondsAppTimer@seconds:
  3394                           	opt stack 0
  3395  00008F                     Mdm_GetSmsData@MessageText:
  3396                           	opt stack 0
  3397  00008F                     Eeprom_Write@WriteBuffer:
  3398                           	opt stack 0
  3399  00008F                     LedStateMachine@LedSts:
  3400                           	opt stack 0
  3401  00008F                     ModemEvtParser@CallReadyString:
  3402                           	opt stack 0
  3403                           
  3404                           ; 10 bytes @ 0x2F
  3405  00008F                     	ds	1
  3406  000090                     secondsAppTimer@isExpired:
  3407                           	opt stack 0
  3408  000090                     utoa@v:
  3409                           	opt stack 0
  3410  000090                     parseCommand@resetCmd:
  3411                           	opt stack 0
  3412                           
  3413                           ; 4 bytes @ 0x30
  3414  000090                     	ds	1
  3415  000091                     ??_USBStdFeatureReqHandler:
  3416  000091                     Mdm_GetSmsData@GetSmsStatus:
  3417                           	opt stack 0
  3418  000091                     USBStdSetCfgHandler@i:
  3419                           	opt stack 0
  3420  000091                     Eeprom_Write@DataLength:
  3421                           	opt stack 0
  3422  000091                     LedStateMachine@LedOut:
  3423                           	opt stack 0
  3424  000091                     secondsAppTimer@destinationTicks:
  3425                           	opt stack 0
  3426  000091                     GetElapsedTime@CurrentTimestamp:
  3427                           	opt stack 0
  3428  000091                     ___lldiv@quotient:
  3429                           	opt stack 0
  3430                           
  3431                           ; 4 bytes @ 0x31
  3432  000091                     	ds	1
  3433  000092                     Eeprom_Write@WriteSts:
  3434                           	opt stack 0
  3435  000092                     utoa@c:
  3436                           	opt stack 0
  3437  000092                     USBStdFeatureReqHandler@pUEP:
  3438                           	opt stack 0
  3439                           
  3440                           ; 2 bytes @ 0x32
  3441  000092                     	ds	1
  3442  000093                     Eeprom_Write@MemoryAddress:
  3443                           	opt stack 0
  3444  000093                     waitSetupCall@isCallArrived:
  3445                           	opt stack 0
  3446  000093                     strtol@sign:
  3447                           	opt stack 0
  3448  000093                     LedStateMachine@LedBlink:
  3449                           	opt stack 0
  3450  000093                     itoa@buf:
  3451                           	opt stack 0
  3452                           
  3453                           ; 2 bytes @ 0x33
  3454  000093                     	ds	1
  3455  000094                     USBStdFeatureReqHandler@current_ep_data:
  3456                           	opt stack 0
  3457  000094                     Eeprom_Write@SlaveAddress:
  3458                           	opt stack 0
  3459  000094                     parseCommand@state:
  3460                           	opt stack 0
  3461  000094                     strtol@a:
  3462                           	opt stack 0
  3463                           
  3464                           ; 4 bytes @ 0x34
  3465  000094                     	ds	1
  3466  000095                     Eeprom_Write@CommandLength:
  3467                           	opt stack 0
  3468  000095                     detectCmd@currentState:
  3469                           	opt stack 0
  3470  000095                     ___lldiv@counter:
  3471                           	opt stack 0
  3472  000095                     OsTmr_GetTimerStatus@Timer:
  3473                           	opt stack 0
  3474  000095                     USBStdFeatureReqHandler@p:
  3475                           	opt stack 0
  3476  000095                     LedStateMachine@LedPulse:
  3477                           	opt stack 0
  3478  000095                     itoa@val:
  3479                           	opt stack 0
  3480                           
  3481                           ; 2 bytes @ 0x35
  3482  000095                     	ds	1
  3483  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3484                           	opt stack 0
  3485  000096                     SetUartBaudRate@UartConfig:
  3486                           	opt stack 0
  3487  000096                     saveNumberInMemory@phoneNumber:
  3488                           	opt stack 0
  3489  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3490                           	opt stack 0
  3491                           
  3492                           ; 4 bytes @ 0x36
  3493  000096                     	ds	1
  3494  000097                     ??_USBCtrlEPService:
  3495  000097                     itoa@base:
  3496                           	opt stack 0
  3497                           
  3498                           ; 2 bytes @ 0x37
  3499  000097                     	ds	1
  3500  000098                     Tmr_TmrBPrSet@Prescaler:
  3501                           	opt stack 0
  3502  000098                     Mdm_SetSmsFormat@TextFormat:
  3503                           	opt stack 0
  3504  000098                     USBDeviceTasks@i:
  3505                           	opt stack 0
  3506  000098                     LedStateMachine@LedOutSts:
  3507                           	opt stack 0
  3508  000098                     saveNumberInMemory@address:
  3509                           	opt stack 0
  3510  000098                     strtol@c:
  3511                           	opt stack 0
  3512                           
  3513                           ; 1 bytes @ 0x38
  3514  000098                     	ds	1
  3515  000099                     Tmr_TmrBPrSet@Postscaler:
  3516                           	opt stack 0
  3517  000099                     SetUartBaudRate@Module:
  3518                           	opt stack 0
  3519  000099                     LedStateMachine@Led:
  3520                           	opt stack 0
  3521  000099                     initGprsModem@isInitialized:
  3522                           	opt stack 0
  3523  000099                     itoa@cp:
  3524                           	opt stack 0
  3525  000099                     ModemEvtParser@ClipString:
  3526                           	opt stack 0
  3527                           
  3528                           ; 5 bytes @ 0x39
  3529  000099                     	ds	1
  3530  00009A                     ??_Led_MainTask:
  3531  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3532                           	opt stack 0
  3533  00009A                     SetUartBaudRate@BaudRateRegister:
  3534                           	opt stack 0
  3535  00009A                     SetBaudRate@McuClockHz:
  3536                           	opt stack 0
  3537                           
  3538                           ; 4 bytes @ 0x3A
  3539  00009A                     	ds	1
  3540  00009B                     ??_SendSmsSm:
  3541  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3542                           	opt stack 0
  3543  00009B                     OsTmr_Wait@WaitTimer:
  3544                           	opt stack 0
  3545  00009B                     InitGprsNetwork@Apn:
  3546                           	opt stack 0
  3547  00009B                     HttpGetMethod@GetData:
  3548                           	opt stack 0
  3549                           
  3550                           ; 2 bytes @ 0x3B
  3551  00009B                     	ds	1
  3552  00009C                     SetUartBaudRate@DivisionFactor:
  3553                           	opt stack 0
  3554  00009C                     Tmr_TmrBPrSet@Divisor:
  3555                           	opt stack 0
  3556                           
  3557                           ; 4 bytes @ 0x3C
  3558  00009C                     	ds	1
  3559  00009D                     ??_HttpGetMethod:
  3560  00009D                     InitGprsNetwork@ApnLen:
  3561                           	opt stack 0
  3562  00009D                     Uart_InitUartModule@UartConfig:
  3563                           	opt stack 0
  3564  00009D                     OsTmr_Wait@DelayMs:
  3565                           	opt stack 0
  3566                           
  3567                           ; 4 bytes @ 0x3D
  3568  00009D                     	ds	1
  3569  00009E                     ??_SetBaudRate:
  3570  00009E                     ??_InitGprsNetwork:
  3571  00009E                     ModemEvtParser@SmsString:
  3572                           	opt stack 0
  3573                           
  3574                           ; 5 bytes @ 0x3E
  3575  00009E                     	ds	1
  3576  00009F                     ??_Uart_InitUartModule:
  3577                           
  3578                           ; 1 bytes @ 0x3F
  3579  00009F                     	ds	1
  3580  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3581                           	opt stack 0
  3582                           
  3583                           ; 2 bytes @ 0x40
  3584  0000A0                     	ds	1
  3585  0000A1                     Uart_InitUartModule@Module:
  3586                           	opt stack 0
  3587  0000A1                     OsTmr_Wait@Ret:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0x41
  3591  0000A1                     	ds	1
  3592  0000A2                     ??_Terminal:
  3593  0000A2                     I2c_InitI2cModule@I2cConfig:
  3594                           	opt stack 0
  3595  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3596                           	opt stack 0
  3597                           
  3598                           ; 2 bytes @ 0x42
  3599  0000A2                     	ds	1
  3600  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3601                           	opt stack 0
  3602  0000A3                     ModemEvtParser@RingString:
  3603                           	opt stack 0
  3604                           
  3605                           ; 4 bytes @ 0x43
  3606  0000A3                     	ds	1
  3607  0000A4                     ??_I2c_InitI2cModule:
  3608  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3609                           	opt stack 0
  3610  0000A4                     Terminal@i:
  3611                           	opt stack 0
  3612  0000A4                     InitSchedTimer@TmrBConfig:
  3613                           	opt stack 0
  3614                           
  3615                           ; 7 bytes @ 0x44
  3616  0000A4                     	ds	1
  3617  0000A5                     Terminal@ReceivedBytes:
  3618                           	opt stack 0
  3619  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3620                           	opt stack 0
  3621                           
  3622                           ; 2 bytes @ 0x45
  3623  0000A5                     	ds	1
  3624  0000A6                     Terminal@Index:
  3625                           	opt stack 0
  3626                           
  3627                           ; 1 bytes @ 0x46
  3628  0000A6                     	ds	1
  3629  0000A7                     ModemEvtParser@Match:
  3630                           	opt stack 0
  3631  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3632                           	opt stack 0
  3633                           
  3634                           ; 1 bytes @ 0x47
  3635  0000A7                     	ds	1
  3636  0000A8                     ModemEvtParser@CompareIdx:
  3637                           	opt stack 0
  3638  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3639                           	opt stack 0
  3640                           
  3641                           ; 1 bytes @ 0x48
  3642  0000A8                     	ds	1
  3643  0000A9                     Eeprom_Read@ReadBuffer:
  3644                           	opt stack 0
  3645                           
  3646                           ; 2 bytes @ 0x49
  3647  0000A9                     	ds	2
  3648  0000AB                     Eeprom_Read@DataLength:
  3649                           	opt stack 0
  3650                           
  3651                           ; 1 bytes @ 0x4B
  3652  0000AB                     	ds	1
  3653  0000AC                     Eeprom_Read@MemoryAddress:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x4C
  3657  0000AC                     	ds	1
  3658  0000AD                     Eeprom_Read@SlaveAddress:
  3659                           	opt stack 0
  3660                           
  3661                           ; 1 bytes @ 0x4D
  3662  0000AD                     	ds	1
  3663  0000AE                     Eeprom_Read@ReadSts:
  3664                           	opt stack 0
  3665                           
  3666                           ; 1 bytes @ 0x4E
  3667  0000AE                     	ds	1
  3668  0000AF                     Eeprom_Read@QuerySts:
  3669                           	opt stack 0
  3670                           
  3671                           ; 1 bytes @ 0x4F
  3672  0000AF                     	ds	1
  3673  0000B0                     tblptru	equ	0xFF8
  3674                           tblptrh	equ	0xFF7
  3675                           tblptrl	equ	0xFF6
  3676                           tablat	equ	0xFF5
  3677                           postinc0	equ	0xFEE
  3678                           wreg	equ	0xFE8
  3679                           postdec1	equ	0xFE5
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           
  3683                           ; 1 bytes @ 0x50
  3684                           
  3685                           	psect	cstackCOMRAM
  3686  000001                     __pcstackCOMRAM:
  3687                           	opt stack 0
  3688  000001                     i2GenerateEvt@Event:
  3689                           	opt stack 0
  3690                           
  3691                           ; 2 bytes @ 0x0
  3692  000001                     	ds	2
  3693  000003                     i2GenerateEvt@EventStatus:
  3694                           	opt stack 0
  3695                           
  3696                           ; 1 bytes @ 0x2
  3697  000003                     	ds	1
  3698  000004                     Uart_MdmGsmGprsReadService@UartData:
  3699                           	opt stack 0
  3700                           
  3701                           ; 1 bytes @ 0x3
  3702  000004                     	ds	1
  3703  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3704                           	opt stack 0
  3705                           
  3706                           ; 2 bytes @ 0x4
  3707  000005                     	ds	2
  3708  000007                     ??_HighPriorityIsr:
  3709                           
  3710                           ; 1 bytes @ 0x6
  3711  000007                     	ds	18
  3712  000019                     ?i1___wmul:
  3713                           	opt stack 0
  3714  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3715                           	opt stack 0
  3716  000019                     i1GenerateEvt@Event:
  3717                           	opt stack 0
  3718  000019                     i1___wmul@multiplier:
  3719                           	opt stack 0
  3720                           
  3721                           ; 2 bytes @ 0x18
  3722  000019                     	ds	2
  3723  00001B                     i1GenerateEvt@EventStatus:
  3724                           	opt stack 0
  3725  00001B                     i1___wmul@multiplicand:
  3726                           	opt stack 0
  3727                           
  3728                           ; 2 bytes @ 0x1A
  3729  00001B                     	ds	1
  3730  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3731                           	opt stack 0
  3732                           
  3733                           ; 2 bytes @ 0x1B
  3734  00001C                     	ds	1
  3735  00001D                     i1___wmul@product:
  3736                           	opt stack 0
  3737                           
  3738                           ; 2 bytes @ 0x1C
  3739  00001D                     	ds	1
  3740  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3741                           	opt stack 0
  3742                           
  3743                           ; 1 bytes @ 0x1D
  3744  00001E                     	ds	1
  3745  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3746                           	opt stack 0
  3747                           
  3748                           ; 1 bytes @ 0x1E
  3749  00001F                     	ds	1
  3750  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3751                           	opt stack 0
  3752                           
  3753                           ; 1 bytes @ 0x1F
  3754  000020                     	ds	1
  3755  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3756                           	opt stack 0
  3757                           
  3758                           ; 2 bytes @ 0x20
  3759  000021                     	ds	2
  3760  000023                     tblptru	equ	0xFF8
  3761                           tblptrh	equ	0xFF7
  3762                           tblptrl	equ	0xFF6
  3763                           tablat	equ	0xFF5
  3764                           postinc0	equ	0xFEE
  3765                           wreg	equ	0xFE8
  3766                           postdec1	equ	0xFE5
  3767                           fsr1h	equ	0xFE2
  3768                           fsr1l	equ	0xFE1
  3769                           
  3770                           ; 1 bytes @ 0x22
  3771 ;;
  3772 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3773 ;;
  3774 ;; *************** function _main *****************
  3775 ;; Defined at:
  3776 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  2   14[None  ] short 
  3783 ;; Registers used:
  3784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3794 ;;Total ram usage:        0 bytes
  3795 ;; Hardware stack levels required when called:   23
  3796 ;; This function calls:
  3797 ;;		_Sch_MainScheduler
  3798 ;;		_SystemInit
  3799 ;; This function is called by:
  3800 ;;		Startup code after reset
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text0
  3805  006B6A                     __ptext0:
  3806                           	opt stack 0
  3807  006B6A                     _main:
  3808                           	opt stack 8
  3809                           
  3810                           ;main.c: 61: SystemInit();
  3811                           
  3812                           ;incstack = 0
  3813  006B6A  ECB9  F032         	call	_SystemInit	;wreg free
  3814                           
  3815                           ;main.c: 64: Sch_MainScheduler();
  3816  006B6E  EC9B  F034         	call	_Sch_MainScheduler	;wreg free
  3817                           
  3818                           ;main.c: 67: return 0;
  3819                           ;	Return value of _main is never used
  3820  006B72  EF66  F000         	goto	start
  3821  006B76                     __end_of_main:
  3822                           	opt stack 0
  3823                           tblptru	equ	0xFF8
  3824                           tblptrh	equ	0xFF7
  3825                           tblptrl	equ	0xFF6
  3826                           tablat	equ	0xFF5
  3827                           postinc0	equ	0xFEE
  3828                           wreg	equ	0xFE8
  3829                           postdec1	equ	0xFE5
  3830                           fsr1h	equ	0xFE2
  3831                           fsr1l	equ	0xFE1
  3832                           
  3833 ;; *************** function _SystemInit *****************
  3834 ;; Defined at:
  3835 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3853 ;;Total ram usage:        0 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:   15
  3856 ;; This function calls:
  3857 ;;		_InitSchedTimer
  3858 ;;		_Irq_InitIntController
  3859 ;;		_Mcu_ConfigExtInt
  3860 ;;		_Mcu_StartSystemPll
  3861 ;;		_Pm_DsReleasePinControl
  3862 ;;		_Tmr_RegisterTmr2IsrCallback
  3863 ;; This function is called by:
  3864 ;;		_main
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text1
  3869  006572                     __ptext1:
  3870                           	opt stack 0
  3871  006572                     _SystemInit:
  3872                           	opt stack 15
  3873                           
  3874                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3875                           
  3876                           ;incstack = 0
  3877  006572  ECE3  F035         	call	_Pm_DsReleasePinControl	;wreg free
  3878                           
  3879                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3880  006576  EC8C  F034         	call	_Mcu_StartSystemPll	;wreg free
  3881                           
  3882                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3883  00657A  0E01               	movlw	1
  3884  00657C  0100               	movlb	0	; () banked
  3885  00657E  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3886  006580  0E01               	movlw	1
  3887  006582  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3888  006584  0E01               	movlw	1
  3889  006586  EC5D  F033         	call	_Irq_InitIntController
  3890                           
  3891                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3892  00658A  0E5C               	movlw	low _Sch_SchmIntService
  3893  00658C  0100               	movlb	0	; () banked
  3894  00658E  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3895  006590  0E6B               	movlw	high _Sch_SchmIntService
  3896  006592  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3897  006594  ECC6  F035         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3898                           
  3899                           ;sys_init.c: 132: InitSchedTimer();
  3900  006598  EC19  F033         	call	_InitSchedTimer	;wreg free
  3901                           
  3902                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3903  00659C  ECD5  F034         	call	_Mcu_ConfigExtInt	;wreg free
  3904  0065A0  0012               	return		;funcret
  3905  0065A2                     __end_of_SystemInit:
  3906                           	opt stack 0
  3907                           tblptru	equ	0xFF8
  3908                           tblptrh	equ	0xFF7
  3909                           tblptrl	equ	0xFF6
  3910                           tablat	equ	0xFF5
  3911                           postinc0	equ	0xFEE
  3912                           wreg	equ	0xFE8
  3913                           postdec1	equ	0xFE5
  3914                           fsr1h	equ	0xFE2
  3915                           fsr1l	equ	0xFE1
  3916                           
  3917 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3918 ;; Defined at:
  3919 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3922 ;;		 -> Sch_SchmIntService(1), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;Total ram usage:        2 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:   11
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_SystemInit
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text2
  3949  006B8C                     __ptext2:
  3950                           	opt stack 0
  3951  006B8C                     _Tmr_RegisterTmr2IsrCallback:
  3952                           	opt stack 18
  3953                           
  3954                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3955                           
  3956                           ;incstack = 0
  3957  006B8C  C07D  F2E8         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3958  006B90  C07E  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3959  006B94  0012               	return		;funcret
  3960  006B96                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3961                           	opt stack 0
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           postinc0	equ	0xFEE
  3967                           wreg	equ	0xFE8
  3968                           postdec1	equ	0xFE5
  3969                           fsr1h	equ	0xFE2
  3970                           fsr1l	equ	0xFE1
  3971                           
  3972 ;; *************** function _Pm_DsReleasePinControl *****************
  3973 ;; Defined at:
  3974 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		None
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:   11
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_SystemInit
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text3
  4003  006BC6                     __ptext3:
  4004                           	opt stack 0
  4005  006BC6                     _Pm_DsReleasePinControl:
  4006                           	opt stack 18
  4007                           
  4008                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  4009                           
  4010                           ;incstack = 0
  4011  006BC6  010F               	movlb	15	; () banked
  4012  006BC8  914C               	bcf	76,0,b	;volatile
  4013                           
  4014                           ; BSR set to: 15
  4015  006BCA  0012               	return		;funcret
  4016  006BCC                     __end_of_Pm_DsReleasePinControl:
  4017                           	opt stack 0
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           postinc0	equ	0xFEE
  4023                           wreg	equ	0xFE8
  4024                           postdec1	equ	0xFE5
  4025                           fsr1h	equ	0xFE2
  4026                           fsr1l	equ	0xFE1
  4027                           
  4028 ;; *************** function _Mcu_StartSystemPll *****************
  4029 ;; Defined at:
  4030 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4047 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4048 ;;Total ram usage:        2 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:   11
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_SystemInit
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text4
  4059  006918                     __ptext4:
  4060                           	opt stack 0
  4061  006918                     _Mcu_StartSystemPll:
  4062                           	opt stack 18
  4063                           
  4064                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4065                           
  4066                           ; BSR set to: 15
  4067                           ;incstack = 0
  4068  006918  0E03               	movlw	3
  4069  00691A  0100               	movlb	0	; () banked
  4070  00691C  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4071  00691E  0EE8               	movlw	232
  4072  006920  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4076  006922  8C9B               	bsf	3995,6,c	;volatile
  4077  006924                     l12293:
  4078                           
  4079                           ; BSR set to: 0
  4080  006924  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4081  006926  A0D8               	btfss	status,0,c
  4082  006928  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4083  00692A  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4084  00692C  E1FB               	bnz	l12293
  4085  00692E  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4086  006930  B4D8               	btfsc	status,2,c
  4087  006932  0012               	return	
  4088  006934  D7F7               	goto	l237
  4089  006936                     __end_of_Mcu_StartSystemPll:
  4090                           	opt stack 0
  4091                           tblptru	equ	0xFF8
  4092                           tblptrh	equ	0xFF7
  4093                           tblptrl	equ	0xFF6
  4094                           tablat	equ	0xFF5
  4095                           postinc0	equ	0xFEE
  4096                           wreg	equ	0xFE8
  4097                           postdec1	equ	0xFE5
  4098                           fsr1h	equ	0xFE2
  4099                           fsr1l	equ	0xFE1
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function _Mcu_ConfigExtInt *****************
  4103 ;; Defined at:
  4104 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:   11
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_SystemInit
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text5
  4133  0069AA                     __ptext5:
  4134                           	opt stack 0
  4135  0069AA                     _Mcu_ConfigExtInt:
  4136                           	opt stack 18
  4137                           
  4138                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;incstack = 0
  4142  0069AA  8093               	bsf	3987,0,c	;volatile
  4143                           
  4144                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4145  0069AC  8695               	bsf	3989,3,c	;volatile
  4146                           
  4147                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4148  0069AE  010F               	movlb	15	; () banked
  4149  0069B0  8949               	bsf	73,4,b	;volatile
  4150                           
  4151                           ; BSR set to: 15
  4152                           ;mcu_drv.c: 108: RPINR1 = 20;
  4153  0069B2  0E14               	movlw	20
  4154  0069B4  010E               	movlb	14	; () banked
  4155  0069B6  6FE7               	movwf	231,b	;volatile
  4156                           
  4157                           ; BSR set to: 14
  4158                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4159  0069B8  88F2               	bsf	intcon,4,c	;volatile
  4160                           
  4161                           ; BSR set to: 14
  4162                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4163  0069BA  86F0               	bsf	intcon3,3,c	;volatile
  4164                           
  4165                           ; BSR set to: 14
  4166                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4167  0069BC  8CF0               	bsf	intcon3,6,c	;volatile
  4168                           
  4169                           ; BSR set to: 14
  4170                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4171  0069BE  9CF1               	bcf	intcon2,6,c	;volatile
  4172                           
  4173                           ; BSR set to: 14
  4174                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4175  0069C0  9AF1               	bcf	intcon2,5,c	;volatile
  4176                           
  4177                           ; BSR set to: 14
  4178  0069C2  0012               	return		;funcret
  4179  0069C4                     __end_of_Mcu_ConfigExtInt:
  4180                           	opt stack 0
  4181                           tblptru	equ	0xFF8
  4182                           tblptrh	equ	0xFF7
  4183                           tblptrl	equ	0xFF6
  4184                           tablat	equ	0xFF5
  4185                           intcon	equ	0xFF2
  4186                           intcon2	equ	0xFF1
  4187                           intcon3	equ	0xFF0
  4188                           postinc0	equ	0xFEE
  4189                           wreg	equ	0xFE8
  4190                           postdec1	equ	0xFE5
  4191                           fsr1h	equ	0xFE2
  4192                           fsr1l	equ	0xFE1
  4193                           status	equ	0xFD8
  4194                           
  4195 ;; *************** function _Irq_InitIntController *****************
  4196 ;; Defined at:
  4197 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  IntPriorityE    1    wreg     enum E7720
  4200 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4201 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		wreg
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4216 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4217 ;;Total ram usage:        3 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:   11
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_SystemInit
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text6
  4228  0066BA                     __ptext6:
  4229                           	opt stack 0
  4230  0066BA                     _Irq_InitIntController:
  4231                           	opt stack 18
  4232                           
  4233                           ; BSR set to: 14
  4234                           ;incstack = 0
  4235                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4236  0066BA  0100               	movlb	0	; () banked
  4237  0066BC  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4238                           
  4239                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4240  0066BE  0100               	movlb	0	; () banked
  4241  0066C0  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4242  0066C2  D002               	bra	u10845
  4243  0066C4  9ED0               	bcf	4048,7,c	;volatile
  4244  0066C6  D001               	bra	u10846
  4245  0066C8                     u10845:
  4246  0066C8  8ED0               	bsf	4048,7,c	;volatile
  4247  0066CA                     u10846:
  4248                           
  4249                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4250  0066CA  0100               	movlb	0	; () banked
  4251  0066CC  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4252  0066CE  D002               	bra	u10855
  4253  0066D0  9EF2               	bcf	intcon,7,c	;volatile
  4254  0066D2  D001               	bra	u10856
  4255  0066D4                     u10855:
  4256  0066D4  8EF2               	bsf	intcon,7,c	;volatile
  4257  0066D6                     u10856:
  4258                           
  4259                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4260  0066D6  0100               	movlb	0	; () banked
  4261  0066D8  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4262  0066DA  D002               	bra	u10865
  4263  0066DC  9CF2               	bcf	intcon,6,c	;volatile
  4264  0066DE  D001               	bra	u10866
  4265  0066E0                     u10865:
  4266  0066E0  8CF2               	bsf	intcon,6,c	;volatile
  4267  0066E2                     u10866:
  4268  0066E2  0012               	return		;funcret
  4269  0066E4                     __end_of_Irq_InitIntController:
  4270                           	opt stack 0
  4271                           tblptru	equ	0xFF8
  4272                           tblptrh	equ	0xFF7
  4273                           tblptrl	equ	0xFF6
  4274                           tablat	equ	0xFF5
  4275                           intcon	equ	0xFF2
  4276                           intcon2	equ	0xFF1
  4277                           intcon3	equ	0xFF0
  4278                           postinc0	equ	0xFEE
  4279                           wreg	equ	0xFE8
  4280                           postdec1	equ	0xFE5
  4281                           fsr1h	equ	0xFE2
  4282                           fsr1l	equ	0xFE1
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function _InitSchedTimer *****************
  4286 ;; Defined at:
  4287 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4302 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4305 ;;Total ram usage:        7 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:   14
  4308 ;; This function calls:
  4309 ;;		_Tmr_TmrBConfig
  4310 ;; This function is called by:
  4311 ;;		_SystemInit
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text7
  4316  006632                     __ptext7:
  4317                           	opt stack 0
  4318  006632                     _InitSchedTimer:
  4319                           	opt stack 15
  4320                           
  4321                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4322                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4323                           
  4324                           ;incstack = 0
  4325  006632  0E04               	movlw	4
  4326  006634  0100               	movlb	0	; () banked
  4327  006636  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4328                           
  4329                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4330  006638  0E0C               	movlw	12
  4331  00663A  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4332                           
  4333                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4334  00663C  0E00               	movlw	0
  4335  00663E  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4336                           
  4337                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4338  006640  0E01               	movlw	1
  4339  006642  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4340                           
  4341                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4342  006644  0E03               	movlw	3
  4343  006646  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4344  006648  0EE8               	movlw	232
  4345  00664A  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4346                           
  4347                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4348  00664C  0E01               	movlw	1
  4349  00664E  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4353  006650  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4354  006652  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4355  006654  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4356  006656  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4357  006658  0E02               	movlw	2
  4358  00665A  EC7D  F01F         	call	_Tmr_TmrBConfig
  4359  00665E  0012               	return		;funcret
  4360  006660                     __end_of_InitSchedTimer:
  4361                           	opt stack 0
  4362                           tblptru	equ	0xFF8
  4363                           tblptrh	equ	0xFF7
  4364                           tblptrl	equ	0xFF6
  4365                           tablat	equ	0xFF5
  4366                           intcon	equ	0xFF2
  4367                           intcon2	equ	0xFF1
  4368                           intcon3	equ	0xFF0
  4369                           postinc0	equ	0xFEE
  4370                           wreg	equ	0xFE8
  4371                           postdec1	equ	0xFE5
  4372                           fsr1h	equ	0xFE2
  4373                           fsr1l	equ	0xFE1
  4374                           status	equ	0xFD8
  4375                           
  4376 ;; *************** function _Tmr_TmrBConfig *****************
  4377 ;; Defined at:
  4378 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  TmrNumb         1    wreg     unsigned char 
  4381 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4382 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4394 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4398 ;;Total ram usage:        4 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:   13
  4401 ;; This function calls:
  4402 ;;		_TmrBInit
  4403 ;;		_Tmr_StartTmr
  4404 ;;		_Tmr_TmrBIrqSet
  4405 ;;		_Tmr_TmrBPrSet
  4406 ;; This function is called by:
  4407 ;;		_InitSchedTimer
  4408 ;;		_InitAuxTimer
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text8
  4413  003EFA                     __ptext8:
  4414                           	opt stack 0
  4415  003EFA                     _Tmr_TmrBConfig:
  4416                           	opt stack 15
  4417                           
  4418                           ;incstack = 0
  4419                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4420  003EFA  0100               	movlb	0	; () banked
  4421  003EFC  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4422                           
  4423                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4424  003EFE  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4425  003F02  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4426  003F06  50DF               	movf	indf2,w,c
  4427  003F08  0100               	movlb	0	; () banked
  4428  003F0A  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4429  003F0C  EE20 F001          	lfsr	2,1
  4430  003F10  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4431  003F12  26D9               	addwf	fsr2l,f,c
  4432  003F14  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4433  003F16  22DA               	addwfc	fsr2h,f,c
  4434  003F18  50DF               	movf	indf2,w,c
  4435  003F1A  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4436  003F1C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4437  003F1E  EC68  F026         	call	_TmrBInit
  4438                           
  4439                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4440  003F22  0100               	movlb	0	; () banked
  4441  003F24  EE20 F002          	lfsr	2,2
  4442  003F28  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4443  003F2A  26D9               	addwf	fsr2l,f,c
  4444  003F2C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4445  003F2E  22DA               	addwfc	fsr2h,f,c
  4446  003F30  04DE               	decf	postinc2,w,c
  4447  003F32  A4D8               	btfss	status,2,c
  4448  003F34  D00E               	goto	l546
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;tmr_drv.c: 277: {
  4452                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4453  003F36  EE20 F003          	lfsr	2,3
  4454  003F3A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4455  003F3C  26D9               	addwf	fsr2l,f,c
  4456  003F3E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4457  003F40  22DA               	addwfc	fsr2h,f,c
  4458  003F42  50DF               	movf	indf2,w,c
  4459  003F44  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4460  003F46  0E01               	movlw	1
  4461  003F48  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4462  003F4A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4463  003F4C  ECCD  F02F         	call	_Tmr_TmrBIrqSet
  4464                           
  4465                           ;tmr_drv.c: 280: }
  4466  003F50  D00E               	goto	l547
  4467  003F52                     l546:
  4468                           
  4469                           ;tmr_drv.c: 281: else
  4470                           ;tmr_drv.c: 282: {
  4471                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4472  003F52  0100               	movlb	0	; () banked
  4473  003F54  EE20 F003          	lfsr	2,3
  4474  003F58  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4475  003F5A  26D9               	addwf	fsr2l,f,c
  4476  003F5C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4477  003F5E  22DA               	addwfc	fsr2h,f,c
  4478  003F60  50DF               	movf	indf2,w,c
  4479  003F62  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4480  003F64  0E00               	movlw	0
  4481  003F66  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4482  003F68  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4483  003F6A  ECCD  F02F         	call	_Tmr_TmrBIrqSet
  4484  003F6E                     l547:
  4485                           
  4486                           ;tmr_drv.c: 285: }
  4487                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4488  003F6E  0100               	movlb	0	; () banked
  4489  003F70  EE20 F004          	lfsr	2,4
  4490  003F74  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4491  003F76  26D9               	addwf	fsr2l,f,c
  4492  003F78  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4493  003F7A  22DA               	addwfc	fsr2h,f,c
  4494  003F7C  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4495  003F80  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4496  003F84  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4497  003F88  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4498  003F8C  50DF               	movf	indf2,w,c
  4499  003F8E  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4500  003F90  EE20 F001          	lfsr	2,1
  4501  003F94  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4502  003F96  26D9               	addwf	fsr2l,f,c
  4503  003F98  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4504  003F9A  22DA               	addwfc	fsr2h,f,c
  4505  003F9C  50DF               	movf	indf2,w,c
  4506  003F9E  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4507  003FA0  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4508  003FA2  ECAD  F018         	call	_Tmr_TmrBPrSet
  4509                           
  4510                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4511  003FA6  0100               	movlb	0	; () banked
  4512  003FA8  EE20 F006          	lfsr	2,6
  4513  003FAC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4514  003FAE  26D9               	addwf	fsr2l,f,c
  4515  003FB0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4516  003FB2  22DA               	addwfc	fsr2h,f,c
  4517  003FB4  04DE               	decf	postinc2,w,c
  4518  003FB6  A4D8               	btfss	status,2,c
  4519  003FB8  0012               	return	
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;tmr_drv.c: 290: {
  4523                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4524  003FBA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4525  003FBC  EC5C  F034         	call	_Tmr_StartTmr
  4526                           
  4527                           ;tmr_drv.c: 293: }
  4528  003FC0  0012               	return	
  4529  003FC2                     __end_of_Tmr_TmrBConfig:
  4530                           	opt stack 0
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           intcon	equ	0xFF2
  4536                           intcon2	equ	0xFF1
  4537                           intcon3	equ	0xFF0
  4538                           postinc0	equ	0xFEE
  4539                           wreg	equ	0xFE8
  4540                           postdec1	equ	0xFE5
  4541                           fsr1h	equ	0xFE2
  4542                           fsr1l	equ	0xFE1
  4543                           indf2	equ	0xFDF
  4544                           postinc2	equ	0xFDE
  4545                           postdec2	equ	0xFDD
  4546                           fsr2h	equ	0xFDA
  4547                           fsr2l	equ	0xFD9
  4548                           status	equ	0xFD8
  4549                           
  4550 ;; *************** function _Tmr_TmrBPrSet *****************
  4551 ;; Defined at:
  4552 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  TmrNumb         1    wreg     unsigned char 
  4555 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4556 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4557 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4560 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4561 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      enum E7736
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4572 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4574 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4575 ;;Total ram usage:       10 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:   12
  4578 ;; This function calls:
  4579 ;;		___lldiv
  4580 ;;		___lmul
  4581 ;; This function is called by:
  4582 ;;		_Tmr_TmrBConfig
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text9
  4587  00315A                     __ptext9:
  4588                           	opt stack 0
  4589  00315A                     _Tmr_TmrBPrSet:
  4590                           	opt stack 15
  4591                           
  4592                           ;incstack = 0
  4593                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4594  00315A  0100               	movlb	0	; () banked
  4595  00315C  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4596                           
  4597                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4598                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4599  00315E  0E00               	movlw	0
  4600  003160  0100               	movlb	0	; () banked
  4601  003162  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4602  003164  0E00               	movlw	0
  4603  003166  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4604  003168  0E00               	movlw	0
  4605  00316A  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4606  00316C  0E00               	movlw	0
  4607  00316E  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4611  003170  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4612  003172  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4613  003174  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4614  003178  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4615  00317C  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4616  00317E  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4617  003180  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4618  003184  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4619  003188  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4620  00318A  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4621  00318C  EC0D  F02D         	call	___lmul	;wreg free
  4622  003190  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4623  003194  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4624  003198  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4625  00319C  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4626                           
  4627                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4628  0031A0  0E00               	movlw	0
  4629  0031A2  0100               	movlb	0	; () banked
  4630  0031A4  6F89               	movwf	___lldiv@dividend& (0+255),b
  4631  0031A6  0E1B               	movlw	27
  4632  0031A8  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4633  0031AA  0EB7               	movlw	183
  4634  0031AC  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4635  0031AE  0E00               	movlw	0
  4636  0031B0  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4637  0031B2  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4638  0031B6  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4639  0031BA  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4640  0031BE  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4641  0031C2  EC87  F029         	call	___lldiv	;wreg free
  4642  0031C6  0100               	movlb	0	; () banked
  4643  0031C8  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4644  0031CA  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4645  0031CC  E13A               	bnz	l15405
  4646  0031CE  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4647  0031D0  A0D8               	btfss	status,0,c
  4648  0031D2  D02D               	goto	l529
  4649  0031D4  D036               	goto	l528
  4650  0031D6                     
  4651                           ; BSR set to: 0
  4652                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4653                           
  4654                           ; BSR set to: 0
  4655  0031D6  0E00               	movlw	0
  4656  0031D8  6F89               	movwf	___lldiv@dividend& (0+255),b
  4657  0031DA  0E1B               	movlw	27
  4658  0031DC  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4659  0031DE  0EB7               	movlw	183
  4660  0031E0  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4661  0031E2  0E00               	movlw	0
  4662  0031E4  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4663  0031E6  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4664  0031EA  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4665  0031EE  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4666  0031F2  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4667  0031F6  EC87  F029         	call	___lldiv	;wreg free
  4668  0031FA  0100               	movlb	0	; () banked
  4669  0031FC  5189               	movf	?___lldiv& (0+255),w,b
  4670  0031FE  6ECB               	movwf	4043,c	;volatile
  4671                           
  4672                           ;tmr_drv.c: 210: break;
  4673  003200  D01D               	goto	l531
  4674  003202                     
  4675                           ; BSR set to: 0
  4676                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4677                           
  4678                           ; BSR set to: 0
  4679  003202  0E00               	movlw	0
  4680  003204  6F89               	movwf	___lldiv@dividend& (0+255),b
  4681  003206  0E1B               	movlw	27
  4682  003208  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4683  00320A  0EB7               	movlw	183
  4684  00320C  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4685  00320E  0E00               	movlw	0
  4686  003210  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4687  003212  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4688  003216  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4689  00321A  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4690  00321E  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4691  003222  EC87  F029         	call	___lldiv	;wreg free
  4692  003226  0100               	movlb	0	; () banked
  4693  003228  5189               	movf	?___lldiv& (0+255),w,b
  4694  00322A  6E77               	movwf	3959,c	;volatile
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;tmr_drv.c: 219: }
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;tmr_drv.c: 218: break;
  4701                           
  4702                           ;tmr_drv.c: 217: default:
  4703                           
  4704                           ;tmr_drv.c: 215: break;
  4705  00322C  D007               	goto	l531
  4706  00322E                     l529:
  4707                           
  4708                           ; BSR set to: 0
  4709                           
  4710                           ; BSR set to: 0
  4711  00322E  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4712                           
  4713                           ; Switch size 1, requested type "space"
  4714                           ; Number of cases is 2, Range of values is 2 to 4
  4715                           ; switch strategies available:
  4716                           ; Name         Instructions Cycles
  4717                           ; simple_byte            7     4 (average)
  4718                           ;	Chosen strategy is simple_byte
  4719  003230  0A02               	xorlw	2	; case 2
  4720  003232  B4D8               	btfsc	status,2,c
  4721  003234  D7D0               	goto	l530
  4722  003236  0A06               	xorlw	6	; case 4
  4723  003238  B4D8               	btfsc	status,2,c
  4724  00323A  D7E3               	goto	l532
  4725  00323C                     l531:
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4729                           
  4730                           ; BSR set to: 0
  4731  00323C  0E00               	movlw	0
  4732  00323E  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4733                           
  4734                           ;tmr_drv.c: 223: }
  4735  003240  0012               	return	
  4736  003242                     l528:
  4737  003242                     l15405:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;tmr_drv.c: 224: else
  4741                           ;tmr_drv.c: 225: {
  4742                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4743  003242  0E01               	movlw	1
  4744  003244  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4745                           
  4746                           ; BSR set to: 0
  4747  003246  0012               	return	
  4748  003248                     __end_of_Tmr_TmrBPrSet:
  4749                           	opt stack 0
  4750                           tblptru	equ	0xFF8
  4751                           tblptrh	equ	0xFF7
  4752                           tblptrl	equ	0xFF6
  4753                           tablat	equ	0xFF5
  4754                           prodh	equ	0xFF4
  4755                           prodl	equ	0xFF3
  4756                           intcon	equ	0xFF2
  4757                           intcon2	equ	0xFF1
  4758                           intcon3	equ	0xFF0
  4759                           postinc0	equ	0xFEE
  4760                           wreg	equ	0xFE8
  4761                           postdec1	equ	0xFE5
  4762                           fsr1h	equ	0xFE2
  4763                           fsr1l	equ	0xFE1
  4764                           indf2	equ	0xFDF
  4765                           postinc2	equ	0xFDE
  4766                           postdec2	equ	0xFDD
  4767                           fsr2h	equ	0xFDA
  4768                           fsr2l	equ	0xFD9
  4769                           status	equ	0xFD8
  4770                           
  4771 ;; *************** function _Tmr_TmrBIrqSet *****************
  4772 ;; Defined at:
  4773 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  TmrNumb         1    wreg     unsigned char 
  4776 ;;  Priority        1   29[BANK0 ] enum E7716
  4777 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4793 ;;Total ram usage:        3 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:   11
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_Tmr_TmrBConfig
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text10
  4804  005F9A                     __ptext10:
  4805                           	opt stack 0
  4806  005F9A                     _Tmr_TmrBIrqSet:
  4807                           	opt stack 16
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;incstack = 0
  4811                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4812  005F9A  0100               	movlb	0	; () banked
  4813  005F9C  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4814                           
  4815                           ;tmr_drv.c: 156: switch (TmrNumb)
  4816  005F9E  D01A               	goto	l520
  4817  005FA0                     l521:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4821  005FA0  929E               	bcf	3998,1,c	;volatile
  4822                           
  4823                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4824  005FA2  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4825  005FA4  D002               	bra	u9185
  4826  005FA6  929F               	bcf	3999,1,c	;volatile
  4827  005FA8  D001               	bra	u9186
  4828  005FAA                     u9185:
  4829  005FAA  829F               	bsf	3999,1,c	;volatile
  4830  005FAC                     u9186:
  4831                           
  4832                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4833  005FAC  0100               	movlb	0	; () banked
  4834  005FAE  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4835  005FB0  D002               	bra	u9195
  4836  005FB2  929D               	bcf	3997,1,c	;volatile
  4837  005FB4  D001               	bra	u9196
  4838  005FB6                     u9195:
  4839  005FB6  829D               	bsf	3997,1,c	;volatile
  4840  005FB8                     u9196:
  4841                           
  4842                           ;tmr_drv.c: 165: break;
  4843  005FB8  0012               	return	
  4844  005FBA                     l523:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4848  005FBA  96A4               	bcf	4004,3,c	;volatile
  4849                           
  4850                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4851  005FBC  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4852  005FBE  D002               	bra	u9205
  4853  005FC0  96A5               	bcf	4005,3,c	;volatile
  4854  005FC2  D001               	bra	u9206
  4855  005FC4                     u9205:
  4856  005FC4  86A5               	bsf	4005,3,c	;volatile
  4857  005FC6                     u9206:
  4858                           
  4859                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4860  005FC6  0100               	movlb	0	; () banked
  4861  005FC8  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4862  005FCA  D002               	bra	u9215
  4863  005FCC  96A3               	bcf	4003,3,c	;volatile
  4864  005FCE  D001               	bra	u9216
  4865  005FD0                     u9215:
  4866  005FD0  86A3               	bsf	4003,3,c	;volatile
  4867  005FD2                     u9216:
  4868                           
  4869                           ;tmr_drv.c: 178: }
  4870                           
  4871                           ;tmr_drv.c: 177: break;
  4872                           
  4873                           ;tmr_drv.c: 176: default:
  4874                           
  4875                           ;tmr_drv.c: 174: break;
  4876  005FD2  0012               	return	
  4877  005FD4                     l520:
  4878  005FD4  0100               	movlb	0	; () banked
  4879  005FD6  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4880                           
  4881                           ; Switch size 1, requested type "space"
  4882                           ; Number of cases is 2, Range of values is 2 to 4
  4883                           ; switch strategies available:
  4884                           ; Name         Instructions Cycles
  4885                           ; simple_byte            7     4 (average)
  4886                           ;	Chosen strategy is simple_byte
  4887  005FD8  0A02               	xorlw	2	; case 2
  4888  005FDA  B4D8               	btfsc	status,2,c
  4889  005FDC  D7E1               	goto	l521
  4890  005FDE  0A06               	xorlw	6	; case 4
  4891  005FE0  A4D8               	btfss	status,2,c
  4892  005FE2  0012               	return	
  4893  005FE4  D7EA               	goto	l523
  4894  005FE6                     __end_of_Tmr_TmrBIrqSet:
  4895                           	opt stack 0
  4896                           tblptru	equ	0xFF8
  4897                           tblptrh	equ	0xFF7
  4898                           tblptrl	equ	0xFF6
  4899                           tablat	equ	0xFF5
  4900                           prodh	equ	0xFF4
  4901                           prodl	equ	0xFF3
  4902                           intcon	equ	0xFF2
  4903                           intcon2	equ	0xFF1
  4904                           intcon3	equ	0xFF0
  4905                           postinc0	equ	0xFEE
  4906                           wreg	equ	0xFE8
  4907                           postdec1	equ	0xFE5
  4908                           fsr1h	equ	0xFE2
  4909                           fsr1l	equ	0xFE1
  4910                           indf2	equ	0xFDF
  4911                           postinc2	equ	0xFDE
  4912                           postdec2	equ	0xFDD
  4913                           fsr2h	equ	0xFDA
  4914                           fsr2l	equ	0xFD9
  4915                           status	equ	0xFD8
  4916                           
  4917 ;; *************** function _Tmr_StartTmr *****************
  4918 ;; Defined at:
  4919 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  TmrNumb         1    wreg     unsigned char 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4936 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4937 ;;Total ram usage:        1 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:   11
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_Tmr_TmrBConfig
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text11
  4948  0068B8                     __ptext11:
  4949                           	opt stack 0
  4950  0068B8                     _Tmr_StartTmr:
  4951                           	opt stack 16
  4952                           
  4953                           ;incstack = 0
  4954                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4955  0068B8  0100               	movlb	0	; () banked
  4956  0068BA  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4957                           
  4958                           ;tmr_drv.c: 245: switch (TmrNumb)
  4959  0068BC  D004               	goto	l538
  4960  0068BE                     l539:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4964  0068BE  84CA               	bsf	4042,2,c	;volatile
  4965                           
  4966                           ;tmr_drv.c: 250: break;
  4967  0068C0  0012               	return	
  4968  0068C2                     l541:
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4972  0068C2  8476               	bsf	3958,2,c	;volatile
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;tmr_drv.c: 259: }
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;tmr_drv.c: 258: break;
  4979                           
  4980                           ;tmr_drv.c: 257: default:
  4981                           
  4982                           ;tmr_drv.c: 255: break;
  4983  0068C4  0012               	return	
  4984  0068C6                     l538:
  4985                           
  4986                           ; BSR set to: 0
  4987  0068C6  0100               	movlb	0	; () banked
  4988  0068C8  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4989                           
  4990                           ; Switch size 1, requested type "space"
  4991                           ; Number of cases is 2, Range of values is 2 to 4
  4992                           ; switch strategies available:
  4993                           ; Name         Instructions Cycles
  4994                           ; simple_byte            7     4 (average)
  4995                           ;	Chosen strategy is simple_byte
  4996  0068CA  0A02               	xorlw	2	; case 2
  4997  0068CC  B4D8               	btfsc	status,2,c
  4998  0068CE  D7F7               	goto	l539
  4999  0068D0  0A06               	xorlw	6	; case 4
  5000  0068D2  A4D8               	btfss	status,2,c
  5001  0068D4  0012               	return	
  5002  0068D6  D7F5               	goto	l541
  5003  0068D8                     __end_of_Tmr_StartTmr:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           prodh	equ	0xFF4
  5010                           prodl	equ	0xFF3
  5011                           intcon	equ	0xFF2
  5012                           intcon2	equ	0xFF1
  5013                           intcon3	equ	0xFF0
  5014                           postinc0	equ	0xFEE
  5015                           wreg	equ	0xFE8
  5016                           postdec1	equ	0xFE5
  5017                           fsr1h	equ	0xFE2
  5018                           fsr1l	equ	0xFE1
  5019                           indf2	equ	0xFDF
  5020                           postinc2	equ	0xFDE
  5021                           postdec2	equ	0xFDD
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026 ;; *************** function _TmrBInit *****************
  5027 ;; Defined at:
  5028 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  TmrNumb         1    wreg     unsigned char 
  5031 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5032 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5044 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;Total ram usage:        4 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:   11
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_Tmr_TmrBConfig
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text12
  5059  004CD0                     __ptext12:
  5060                           	opt stack 0
  5061  004CD0                     _TmrBInit:
  5062                           	opt stack 16
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;incstack = 0
  5066                           ;TmrBInit@TmrNumb stored from wreg
  5067  004CD0  0100               	movlb	0	; () banked
  5068  004CD2  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5069                           
  5070                           ;tmr_drv.c: 75: switch (TmrNumb)
  5071  004CD4  D03F               	goto	l500
  5072  004CD6                     l503:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5076  004CD6  90CA               	bcf	4042,0,c	;volatile
  5077  004CD8  D001               	goto	L1
  5078  004CDA                     l505:
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5082  004CDA  80CA               	bsf	4042,0,c	;volatile
  5083  004CDC                     L1:
  5084                           
  5085                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5086  004CDC  92CA               	bcf	4042,1,c	;volatile
  5087                           
  5088                           ;tmr_drv.c: 91: break;
  5089  004CDE  D00E               	goto	l504
  5090  004CE0                     l506:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5094  004CE0  80CA               	bsf	4042,0,c	;volatile
  5095                           
  5096                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5097  004CE2  82CA               	bsf	4042,1,c	;volatile
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;tmr_drv.c: 100: }
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;tmr_drv.c: 99: break;
  5104                           
  5105                           ;tmr_drv.c: 98: default:
  5106                           
  5107                           ;tmr_drv.c: 96: break;
  5108  004CE4  D00B               	goto	l504
  5109  004CE6                     
  5110                           ; BSR set to: 0
  5111  004CE6  0100               	movlb	0	; () banked
  5112  004CE8  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5113                           
  5114                           ; Switch size 1, requested type "space"
  5115                           ; Number of cases is 3, Range of values is 1 to 16
  5116                           ; switch strategies available:
  5117                           ; Name         Instructions Cycles
  5118                           ; simple_byte           10     6 (average)
  5119                           ;	Chosen strategy is simple_byte
  5120  004CEA  0A01               	xorlw	1	; case 1
  5121  004CEC  B4D8               	btfsc	status,2,c
  5122  004CEE  D7F3               	goto	l503
  5123  004CF0  0A05               	xorlw	5	; case 4
  5124  004CF2  B4D8               	btfsc	status,2,c
  5125  004CF4  D7F2               	goto	l505
  5126  004CF6  0A14               	xorlw	20	; case 16
  5127  004CF8  B4D8               	btfsc	status,2,c
  5128  004CFA  D7F2               	goto	l506
  5129  004CFC                     l504:
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5133                           
  5134                           ; BSR set to: 0
  5135  004CFC  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5136  004D00  0EFF               	movlw	255
  5137  004D02  277F               	addwf	??_TmrBInit& (0+255),f,b
  5138  004D04  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5139  004D06  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5140  004D08  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5141  004D0A  50CA               	movf	4042,w,c	;volatile
  5142  004D0C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5143  004D0E  0B87               	andlw	-121
  5144  004D10  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5145  004D12  6ECA               	movwf	4042,c	;volatile
  5146                           
  5147                           ;tmr_drv.c: 104: break;
  5148  004D14  0012               	return	
  5149  004D16                     l511:
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5153  004D16  9076               	bcf	3958,0,c	;volatile
  5154  004D18  D001               	goto	L2
  5155  004D1A                     l513:
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5159  004D1A  8076               	bsf	3958,0,c	;volatile
  5160  004D1C                     L2:
  5161                           
  5162                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5163  004D1C  9276               	bcf	3958,1,c	;volatile
  5164                           
  5165                           ;tmr_drv.c: 120: break;
  5166  004D1E  D00D               	goto	l512
  5167  004D20                     l514:
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5171  004D20  8076               	bsf	3958,0,c	;volatile
  5172                           
  5173                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5174  004D22  8276               	bsf	3958,1,c	;volatile
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;tmr_drv.c: 129: }
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;tmr_drv.c: 128: break;
  5181                           
  5182                           ;tmr_drv.c: 127: default:
  5183                           
  5184                           ;tmr_drv.c: 125: break;
  5185  004D24  D00A               	goto	l512
  5186  004D26                     
  5187                           ; BSR set to: 0
  5188                           
  5189                           ; BSR set to: 0
  5190  004D26  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5191                           
  5192                           ; Switch size 1, requested type "space"
  5193                           ; Number of cases is 3, Range of values is 1 to 16
  5194                           ; switch strategies available:
  5195                           ; Name         Instructions Cycles
  5196                           ; simple_byte           10     6 (average)
  5197                           ;	Chosen strategy is simple_byte
  5198  004D28  0A01               	xorlw	1	; case 1
  5199  004D2A  B4D8               	btfsc	status,2,c
  5200  004D2C  D7F4               	goto	l511
  5201  004D2E  0A05               	xorlw	5	; case 4
  5202  004D30  B4D8               	btfsc	status,2,c
  5203  004D32  D7F3               	goto	l513
  5204  004D34  0A14               	xorlw	20	; case 16
  5205  004D36  B4D8               	btfsc	status,2,c
  5206  004D38  D7F3               	goto	l514
  5207  004D3A                     l512:
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5211                           
  5212                           ; BSR set to: 0
  5213  004D3A  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5214  004D3E  0EFF               	movlw	255
  5215  004D40  277F               	addwf	??_TmrBInit& (0+255),f,b
  5216  004D42  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5217  004D44  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5218  004D46  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5219  004D48  5076               	movf	3958,w,c	;volatile
  5220  004D4A  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5221  004D4C  0B87               	andlw	-121
  5222  004D4E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5223  004D50  6E76               	movwf	3958,c	;volatile
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;tmr_drv.c: 137: }
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;tmr_drv.c: 136: break;
  5230                           
  5231                           ;tmr_drv.c: 135: default:
  5232                           
  5233                           ;tmr_drv.c: 133: break;
  5234  004D52  0012               	return	
  5235  004D54                     l500:
  5236                           
  5237                           ; BSR set to: 0
  5238  004D54  0100               	movlb	0	; () banked
  5239  004D56  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5240                           
  5241                           ; Switch size 1, requested type "space"
  5242                           ; Number of cases is 2, Range of values is 2 to 4
  5243                           ; switch strategies available:
  5244                           ; Name         Instructions Cycles
  5245                           ; simple_byte            7     4 (average)
  5246                           ;	Chosen strategy is simple_byte
  5247  004D58  0A02               	xorlw	2	; case 2
  5248  004D5A  B4D8               	btfsc	status,2,c
  5249  004D5C  D7C4               	goto	l502
  5250  004D5E  0A06               	xorlw	6	; case 4
  5251  004D60  A4D8               	btfss	status,2,c
  5252  004D62  0012               	return	
  5253  004D64  D7E0               	goto	l510
  5254  004D66                     __end_of_TmrBInit:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           prodh	equ	0xFF4
  5261                           prodl	equ	0xFF3
  5262                           intcon	equ	0xFF2
  5263                           intcon2	equ	0xFF1
  5264                           intcon3	equ	0xFF0
  5265                           postinc0	equ	0xFEE
  5266                           wreg	equ	0xFE8
  5267                           postdec1	equ	0xFE5
  5268                           fsr1h	equ	0xFE2
  5269                           fsr1l	equ	0xFE1
  5270                           indf2	equ	0xFDF
  5271                           postinc2	equ	0xFDE
  5272                           postdec2	equ	0xFDD
  5273                           fsr2h	equ	0xFDA
  5274                           fsr2l	equ	0xFD9
  5275                           status	equ	0xFD8
  5276                           
  5277 ;; *************** function _Sch_MainScheduler *****************
  5278 ;; Defined at:
  5279 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5297 ;;Total ram usage:        0 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:   22
  5300 ;; This function calls:
  5301 ;;		_InitializeTasks
  5302 ;;		_ScheduleTasks
  5303 ;; This function is called by:
  5304 ;;		_main
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           	psect	text13
  5309  006936                     __ptext13:
  5310                           	opt stack 0
  5311  006936                     _Sch_MainScheduler:
  5312                           	opt stack 8
  5313                           
  5314                           ;os_sched.c: 178: InitializeTasks();
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;incstack = 0
  5318  006936  EC7C  F02A         	call	_InitializeTasks	;wreg free
  5319                           
  5320                           ;os_sched.c: 180: SystemState = RunningState;
  5321  00693A  0E01               	movlw	1
  5322  00693C  0100               	movlb	0	; () banked
  5323  00693E  6FD4               	movwf	_SystemState& (0+255),b
  5324  006940                     
  5325                           ;os_sched.c: 188: {
  5326                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5327                           
  5328                           ; BSR set to: 0
  5329  006940  0102               	movlb	2	; () banked
  5330  006942  51F2               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5331  006944  A4D8               	btfss	status,2,c
  5332  006946  D7FC               	goto	l790
  5333                           
  5334                           ; BSR set to: 2
  5335                           ;os_sched.c: 191: {
  5336                           ;os_sched.c: 196: ScheduleTasks();
  5337  006948  EC81  F016         	call	_ScheduleTasks	;wreg free
  5338                           
  5339                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5340  00694C  0E01               	movlw	1
  5341  00694E  0102               	movlb	2	; () banked
  5342  006950  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5343                           
  5344                           ; BSR set to: 2
  5345                           
  5346                           ; BSR set to: 2
  5347  006952  D7F6               	goto	l790
  5348  006954                     __end_of_Sch_MainScheduler:
  5349                           	opt stack 0
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           prodh	equ	0xFF4
  5355                           prodl	equ	0xFF3
  5356                           intcon	equ	0xFF2
  5357                           intcon2	equ	0xFF1
  5358                           intcon3	equ	0xFF0
  5359                           postinc0	equ	0xFEE
  5360                           wreg	equ	0xFE8
  5361                           postdec1	equ	0xFE5
  5362                           fsr1h	equ	0xFE2
  5363                           fsr1l	equ	0xFE1
  5364                           indf2	equ	0xFDF
  5365                           postinc2	equ	0xFDE
  5366                           postdec2	equ	0xFDD
  5367                           fsr2h	equ	0xFDA
  5368                           fsr2l	equ	0xFD9
  5369                           status	equ	0xFD8
  5370                           
  5371 ;; *************** function _ScheduleTasks *****************
  5372 ;; Defined at:
  5373 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  ActiveTaskIn    1    0[BANK3 ] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5388 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5390 ;;      Totals:         0       0       0       0       1       4       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;Total ram usage:        5 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:   21
  5394 ;; This function calls:
  5395 ;;		_I2cSlv_MainTask
  5396 ;;		_Led_MainTask
  5397 ;;		_MdmHttp_MainTask
  5398 ;;		_Mdm_DrvMainFn
  5399 ;;		_Mdm_MainTask
  5400 ;;		_MyApp_Task
  5401 ;;		_Rtcm_MainTask
  5402 ;;		_Term_MainTask
  5403 ;;		_UsbDevice_MainTask
  5404 ;;		_Wdg_MainTask
  5405 ;; This function is called by:
  5406 ;;		_Sch_MainScheduler
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text14
  5411  002D02                     __ptext14:
  5412                           	opt stack 0
  5413  002D02                     _ScheduleTasks:
  5414                           	opt stack 8
  5415                           
  5416                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5417                           
  5418                           ; BSR set to: 2
  5419                           ;incstack = 0
  5420  002D02  0E00               	movlw	0
  5421  002D04  0103               	movlb	3	; () banked
  5422  002D06  6FFD               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5423                           
  5424                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5425  002D08  0E00               	movlw	0
  5426  002D0A  6FFD               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5427  002D0C                     l16673:
  5428                           
  5429                           ; BSR set to: 3
  5430  002D0C  0E30               	movlw	low _TaskNumber
  5431  002D0E  6EF6               	movwf	tblptrl,c
  5432  002D10                     	if	1	;There is more than 1 active tblptr byte
  5433  002D10  0EFC               	movlw	high _TaskNumber
  5434  002D12  6EF7               	movwf	tblptrh,c
  5435  002D14                     	endif
  5436  002D14                     	if	0	;There are less than 3 active tblptr bytes
  5437  002D14                     	endif
  5438  002D14  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5439  002D16  0104               	movlb	4	; () banked
  5440  002D18  6FFC               	movwf	??_ScheduleTasks& (0+255),b
  5441  002D1A  6BFD               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5442  002D1C  0009               	tblrd		*+
  5443  002D1E  50F5               	movf	tablat,w,c
  5444  002D20  5DFC               	subwf	??_ScheduleTasks& (0+255),w,b
  5445  002D22  0009               	tblrd		*+
  5446  002D24  50F5               	movf	tablat,w,c
  5447  002D26  59FD               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5448  002D28  B0D8               	btfsc	status,0,c
  5449  002D2A  0012               	return	
  5450                           
  5451                           ; BSR set to: 4
  5452                           ;os_sched.c: 106: {
  5453                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5454                           
  5455                           ; BSR set to: 4
  5456                           
  5457                           ; BSR set to: 4
  5458  002D2C  0103               	movlb	3	; () banked
  5459  002D2E  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5460  002D30  0D08               	mullw	8
  5461  002D32  0E03               	movlw	3
  5462  002D34  26F3               	addwf	prodl,f,c
  5463  002D36  0E00               	movlw	0
  5464  002D38  22F4               	addwfc	prodh,f,c
  5465  002D3A  0EA4               	movlw	low _TaskTable
  5466  002D3C  24F3               	addwf	prodl,w,c
  5467  002D3E  6ED9               	movwf	fsr2l,c
  5468  002D40  0E05               	movlw	high _TaskTable
  5469  002D42  20F4               	addwfc	prodh,w,c
  5470  002D44  6EDA               	movwf	fsr2h,c
  5471  002D46  2ADE               	incf	postinc2,f,c
  5472  002D48  0E00               	movlw	0
  5473  002D4A  22DD               	addwfc	postdec2,f,c
  5474                           
  5475                           ; BSR set to: 3
  5476                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5477  002D4C  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5478  002D4E  0D08               	mullw	8
  5479  002D50  0E05               	movlw	5
  5480  002D52  26F3               	addwf	prodl,f,c
  5481  002D54  0E00               	movlw	0
  5482  002D56  22F4               	addwfc	prodh,f,c
  5483  002D58  0EA4               	movlw	low _TaskTable
  5484  002D5A  24F3               	addwf	prodl,w,c
  5485  002D5C  6ED9               	movwf	fsr2l,c
  5486  002D5E  0E05               	movlw	high _TaskTable
  5487  002D60  20F4               	addwfc	prodh,w,c
  5488  002D62  6EDA               	movwf	fsr2h,c
  5489  002D64  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5490  002D66  0D08               	mullw	8
  5491  002D68  0E03               	movlw	3
  5492  002D6A  26F3               	addwf	prodl,f,c
  5493  002D6C  0E00               	movlw	0
  5494  002D6E  22F4               	addwfc	prodh,f,c
  5495  002D70  0EA4               	movlw	low _TaskTable
  5496  002D72  24F3               	addwf	prodl,w,c
  5497  002D74  6EE1               	movwf	fsr1l,c
  5498  002D76  0E05               	movlw	high _TaskTable
  5499  002D78  20F4               	addwfc	prodh,w,c
  5500  002D7A  6EE2               	movwf	fsr1h,c
  5501  002D7C  50DE               	movf	postinc2,w,c
  5502  002D7E  5CE6               	subwf	postinc1,w,c
  5503  002D80  50DE               	movf	postinc2,w,c
  5504  002D82  58E6               	subwfb	postinc1,w,c
  5505  002D84  A0D8               	btfss	status,0,c
  5506  002D86  D04E               	goto	l775
  5507                           
  5508                           ; BSR set to: 3
  5509                           ;os_sched.c: 111: {
  5510                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5511  002D88  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5512  002D8A  0D08               	mullw	8
  5513  002D8C  0E03               	movlw	3
  5514  002D8E  26F3               	addwf	prodl,f,c
  5515  002D90  0E00               	movlw	0
  5516  002D92  22F4               	addwfc	prodh,f,c
  5517  002D94  0EA4               	movlw	low _TaskTable
  5518  002D96  24F3               	addwf	prodl,w,c
  5519  002D98  6ED9               	movwf	fsr2l,c
  5520  002D9A  0E05               	movlw	high _TaskTable
  5521  002D9C  20F4               	addwfc	prodh,w,c
  5522  002D9E  6EDA               	movwf	fsr2h,c
  5523  002DA0  0E00               	movlw	0
  5524  002DA2  6EDE               	movwf	postinc2,c
  5525  002DA4  0E00               	movlw	0
  5526  002DA6  6EDD               	movwf	postdec2,c
  5527                           
  5528                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5529  002DA8  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5530  002DAA  0D08               	mullw	8
  5531  002DAC  0E02               	movlw	2
  5532  002DAE  26F3               	addwf	prodl,f,c
  5533  002DB0  0E00               	movlw	0
  5534  002DB2  22F4               	addwfc	prodh,f,c
  5535  002DB4  0EA4               	movlw	low _TaskTable
  5536  002DB6  24F3               	addwf	prodl,w,c
  5537  002DB8  6ED9               	movwf	fsr2l,c
  5538  002DBA  0E05               	movlw	high _TaskTable
  5539  002DBC  20F4               	addwfc	prodh,w,c
  5540  002DBE  6EDA               	movwf	fsr2h,c
  5541  002DC0  0E01               	movlw	1
  5542  002DC2  6EDF               	movwf	indf2,c
  5543                           
  5544                           ; BSR set to: 3
  5545                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5546  002DC4  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5547  002DC6  0D08               	mullw	8
  5548  002DC8  0EA4               	movlw	low _TaskTable
  5549  002DCA  24F3               	addwf	prodl,w,c
  5550  002DCC  6ED9               	movwf	fsr2l,c
  5551  002DCE  0E05               	movlw	high _TaskTable
  5552  002DD0  20F4               	addwfc	prodh,w,c
  5553  002DD2  6EDA               	movwf	fsr2h,c
  5554  002DD4  D801               	call	u16528
  5555  002DD6  D017               	goto	u16529
  5556  002DD8                     u16528:
  5557  002DD8  0005               	push	
  5558  002DDA  6EFA               	movwf	pclath,c
  5559  002DDC  50DE               	movf	postinc2,w,c
  5560  002DDE  6EFD               	movwf	tosl,c
  5561  002DE0  50DE               	movf	postinc2,w,c
  5562  002DE2  6EFE               	movwf	tosh,c
  5563  002DE4  50F8               	movf	tblptru,w,c
  5564  002DE6  6EFF               	movwf	tosu,c
  5565  002DE8  50FA               	movf	pclath,w,c
  5566  002DEA  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5567  002DEC  0D08               	mullw	8
  5568  002DEE  0E07               	movlw	7
  5569  002DF0  26F3               	addwf	prodl,f,c
  5570  002DF2  0E00               	movlw	0
  5571  002DF4  22F4               	addwfc	prodh,f,c
  5572  002DF6  0EA4               	movlw	low _TaskTable
  5573  002DF8  24F3               	addwf	prodl,w,c
  5574  002DFA  6ED9               	movwf	fsr2l,c
  5575  002DFC  0E05               	movlw	high _TaskTable
  5576  002DFE  20F4               	addwfc	prodh,w,c
  5577  002E00  6EDA               	movwf	fsr2h,c
  5578  002E02  50DF               	movf	indf2,w,c
  5579  002E04  0012               	return		;indir
  5580  002E06                     u16529:
  5581                           
  5582                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5583  002E06  0103               	movlb	3	; () banked
  5584  002E08  51FD               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5585  002E0A  0D08               	mullw	8
  5586  002E0C  0E02               	movlw	2
  5587  002E0E  26F3               	addwf	prodl,f,c
  5588  002E10  0E00               	movlw	0
  5589  002E12  22F4               	addwfc	prodh,f,c
  5590  002E14  0EA4               	movlw	low _TaskTable
  5591  002E16  24F3               	addwf	prodl,w,c
  5592  002E18  6ED9               	movwf	fsr2l,c
  5593  002E1A  0E05               	movlw	high _TaskTable
  5594  002E1C  20F4               	addwfc	prodh,w,c
  5595  002E1E  6EDA               	movwf	fsr2h,c
  5596  002E20  0E00               	movlw	0
  5597  002E22  6EDF               	movwf	indf2,c
  5598  002E24                     l775:
  5599                           
  5600                           ; BSR set to: 3
  5601                           
  5602                           ; BSR set to: 3
  5603                           
  5604                           ;os_sched.c: 117: else
  5605                           ;os_sched.c: 118: {
  5606                           
  5607                           ; BSR set to: 3
  5608  002E24  2BFD               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5609  002E26  D772               	goto	l16673
  5610  002E28                     __end_of_ScheduleTasks:
  5611                           	opt stack 0
  5612                           tosu	equ	0xFFF
  5613                           tosh	equ	0xFFE
  5614                           tosl	equ	0xFFD
  5615                           pclath	equ	0xFFA
  5616                           tblptru	equ	0xFF8
  5617                           tblptrh	equ	0xFF7
  5618                           tblptrl	equ	0xFF6
  5619                           tablat	equ	0xFF5
  5620                           prodh	equ	0xFF4
  5621                           prodl	equ	0xFF3
  5622                           intcon	equ	0xFF2
  5623                           intcon2	equ	0xFF1
  5624                           intcon3	equ	0xFF0
  5625                           postinc0	equ	0xFEE
  5626                           wreg	equ	0xFE8
  5627                           postinc1	equ	0xFE6
  5628                           postdec1	equ	0xFE5
  5629                           fsr1h	equ	0xFE2
  5630                           fsr1l	equ	0xFE1
  5631                           indf2	equ	0xFDF
  5632                           postinc2	equ	0xFDE
  5633                           postdec2	equ	0xFDD
  5634                           fsr2h	equ	0xFDA
  5635                           fsr2l	equ	0xFD9
  5636                           status	equ	0xFD8
  5637                           
  5638 ;; *************** function _InitializeTasks *****************
  5639 ;; Defined at:
  5640 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  ActiveTaskIn    1    2[BANK3 ] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5655 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5657 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
  5658 ;;Total ram usage:        3 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:   21
  5661 ;; This function calls:
  5662 ;;		_I2cSlv_MainTask
  5663 ;;		_Led_MainTask
  5664 ;;		_MdmHttp_MainTask
  5665 ;;		_Mdm_DrvMainFn
  5666 ;;		_Mdm_MainTask
  5667 ;;		_MyApp_Task
  5668 ;;		_Rtcm_MainTask
  5669 ;;		_Term_MainTask
  5670 ;;		_UsbDevice_MainTask
  5671 ;;		_Wdg_MainTask
  5672 ;; This function is called by:
  5673 ;;		_Sch_MainScheduler
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text15
  5678  0054F8                     __ptext15:
  5679                           	opt stack 0
  5680  0054F8                     _InitializeTasks:
  5681                           	opt stack 8
  5682                           
  5683                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5684                           
  5685                           ; BSR set to: 4
  5686                           ;incstack = 0
  5687  0054F8  0E00               	movlw	0
  5688  0054FA  0103               	movlb	3	; () banked
  5689  0054FC  6FFF               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5690                           
  5691                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5692  0054FE  0E00               	movlw	0
  5693  005500  6FFF               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5694  005502                     l16661:
  5695                           
  5696                           ; BSR set to: 3
  5697  005502  0E30               	movlw	low _TaskNumber
  5698  005504  6EF6               	movwf	tblptrl,c
  5699  005506                     	if	1	;There is more than 1 active tblptr byte
  5700  005506  0EFC               	movlw	high _TaskNumber
  5701  005508  6EF7               	movwf	tblptrh,c
  5702  00550A                     	endif
  5703  00550A                     	if	0	;There are less than 3 active tblptr bytes
  5704  00550A                     	endif
  5705  00550A  51FF               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5706  00550C  6FFD               	movwf	??_InitializeTasks& (0+255),b
  5707  00550E  6BFE               	clrf	(??_InitializeTasks+1)& (0+255),b
  5708  005510  0009               	tblrd		*+
  5709  005512  50F5               	movf	tablat,w,c
  5710  005514  5DFD               	subwf	??_InitializeTasks& (0+255),w,b
  5711  005516  0009               	tblrd		*+
  5712  005518  50F5               	movf	tablat,w,c
  5713  00551A  59FE               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5714  00551C  B0D8               	btfsc	status,0,c
  5715  00551E  0012               	return	
  5716                           
  5717                           ; BSR set to: 3
  5718                           ;os_sched.c: 86: {
  5719                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5720                           
  5721                           ; BSR set to: 3
  5722                           
  5723                           ; BSR set to: 3
  5724  005520  51FF               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5725  005522  0D08               	mullw	8
  5726  005524  0EA4               	movlw	low _TaskTable
  5727  005526  24F3               	addwf	prodl,w,c
  5728  005528  6ED9               	movwf	fsr2l,c
  5729  00552A  0E05               	movlw	high _TaskTable
  5730  00552C  20F4               	addwfc	prodh,w,c
  5731  00552E  6EDA               	movwf	fsr2h,c
  5732  005530  D801               	call	u16488
  5733  005532  D017               	goto	u16489
  5734  005534                     u16488:
  5735  005534  0005               	push	
  5736  005536  6EFA               	movwf	pclath,c
  5737  005538  50DE               	movf	postinc2,w,c
  5738  00553A  6EFD               	movwf	tosl,c
  5739  00553C  50DE               	movf	postinc2,w,c
  5740  00553E  6EFE               	movwf	tosh,c
  5741  005540  50F8               	movf	tblptru,w,c
  5742  005542  6EFF               	movwf	tosu,c
  5743  005544  50FA               	movf	pclath,w,c
  5744  005546  51FF               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5745  005548  0D08               	mullw	8
  5746  00554A  0E07               	movlw	7
  5747  00554C  26F3               	addwf	prodl,f,c
  5748  00554E  0E00               	movlw	0
  5749  005550  22F4               	addwfc	prodh,f,c
  5750  005552  0EA4               	movlw	low _TaskTable
  5751  005554  24F3               	addwf	prodl,w,c
  5752  005556  6ED9               	movwf	fsr2l,c
  5753  005558  0E05               	movlw	high _TaskTable
  5754  00555A  20F4               	addwfc	prodh,w,c
  5755  00555C  6EDA               	movwf	fsr2h,c
  5756  00555E  50DF               	movf	indf2,w,c
  5757  005560  0012               	return		;indir
  5758  005562                     u16489:
  5759  005562  0103               	movlb	3	; () banked
  5760  005564  2BFF               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5761  005566  D7CD               	goto	l16661
  5762  005568                     __end_of_InitializeTasks:
  5763                           	opt stack 0
  5764                           tosu	equ	0xFFF
  5765                           tosh	equ	0xFFE
  5766                           tosl	equ	0xFFD
  5767                           pclath	equ	0xFFA
  5768                           tblptru	equ	0xFF8
  5769                           tblptrh	equ	0xFF7
  5770                           tblptrl	equ	0xFF6
  5771                           tablat	equ	0xFF5
  5772                           prodh	equ	0xFF4
  5773                           prodl	equ	0xFF3
  5774                           intcon	equ	0xFF2
  5775                           intcon2	equ	0xFF1
  5776                           intcon3	equ	0xFF0
  5777                           postinc0	equ	0xFEE
  5778                           wreg	equ	0xFE8
  5779                           postinc1	equ	0xFE6
  5780                           postdec1	equ	0xFE5
  5781                           fsr1h	equ	0xFE2
  5782                           fsr1l	equ	0xFE1
  5783                           indf2	equ	0xFDF
  5784                           postinc2	equ	0xFDE
  5785                           postdec2	equ	0xFDD
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790 ;; *************** function _MyApp_Task *****************
  5791 ;; Defined at:
  5792 ;;		line 148 in file "../Source/c/04_App/app.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  Options         1    wreg     unsigned char 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  Options         1    0[COMRAM] unsigned char 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      void 
  5799 ;; Registers used:
  5800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;Total ram usage:        0 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:   19
  5813 ;; This function calls:
  5814 ;;		_Eeprom_Reset
  5815 ;;		_Led_SetLedBlinkTime
  5816 ;;		_addCmdFsm
  5817 ;;		_delCmdFsm
  5818 ;;		_detectCmd
  5819 ;;		_initFsm
  5820 ;;		_triggerCmdFsm
  5821 ;; This function is called by:
  5822 ;;		_InitializeTasks
  5823 ;;		_ScheduleTasks
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text16
  5828  0034FC                     __ptext16:
  5829                           	opt stack 0
  5830  0034FC                     _MyApp_Task:
  5831                           	opt stack 9
  5832                           
  5833                           ;app.c: 150: static gateFsmStates currentState = GATE_INIT;
  5834                           ;app.c: 152: switch (SystemState)
  5835                           
  5836                           ; BSR set to: 3
  5837                           ;incstack = 0
  5838  0034FC  D068               	goto	l2591
  5839  0034FE                     
  5840                           ;app.c: 157: Led_SetLedBlinkTime(1u,100,900);
  5841  0034FE  0E00               	movlw	0
  5842  003500  0100               	movlb	0	; () banked
  5843  003502  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5844  003504  0E64               	movlw	100
  5845  003506  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5846  003508  0E03               	movlw	3
  5847  00350A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5848  00350C  0E84               	movlw	132
  5849  00350E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5850  003510  0E01               	movlw	1
  5851  003512  EC3A  F02E         	call	_Led_SetLedBlinkTime
  5852                           
  5853                           ;app.c: 158: break;
  5854  003516  0012               	return	
  5855  003518                     
  5856                           ;app.c: 165: if (initFsm())
  5857  003518  ECE2  F023         	call	_initFsm	;wreg free
  5858  00351C  0900               	iorlw	0
  5859  00351E  B4D8               	btfsc	status,2,c
  5860  003520  0012               	return	
  5861                           
  5862                           ;app.c: 166: {
  5863                           ;app.c: 167: currentState = GATE_WAIT_EVENT;
  5864  003522  0E01               	movlw	1
  5865  003524  0101               	movlb	1	; () banked
  5866  003526  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5867                           
  5868                           ; BSR set to: 1
  5869                           ;app.c: 168: }
  5870                           ;app.c: 169: break;
  5871  003528  0012               	return	
  5872  00352A                     
  5873                           ; BSR set to: 1
  5874                           ;app.c: 172: currentState = detectCmd();
  5875                           
  5876                           ; BSR set to: 1
  5877  00352A  ECCE  F025         	call	_detectCmd	;wreg free
  5878  00352E  0101               	movlb	1	; () banked
  5879  003530  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5880                           
  5881                           ;app.c: 173: break;
  5882  003532  0012               	return	
  5883  003534                     
  5884                           ; BSR set to: 1
  5885                           ;app.c: 176: if (addCmdFsm(receivedNumber, smsText))
  5886                           
  5887                           ; BSR set to: 1
  5888  003534  0EC2               	movlw	low _receivedNumber
  5889  003536  6F05               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5890  003538  0E04               	movlw	high _receivedNumber
  5891  00353A  6F06               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5892  00353C  0E8B               	movlw	low _smsText
  5893  00353E  6F07               	movwf	addCmdFsm@smsText& (0+255),b
  5894  003540  0E04               	movlw	high _smsText
  5895  003542  6F08               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5896  003544  EC7D  F01D         	call	_addCmdFsm	;wreg free
  5897  003548  0900               	iorlw	0
  5898  00354A  B4D8               	btfsc	status,2,c
  5899  00354C  0012               	return	
  5900                           
  5901                           ;app.c: 177: {
  5902                           ;app.c: 178: currentState = GATE_WAIT_EVENT;
  5903  00354E  0E01               	movlw	1
  5904  003550  0101               	movlb	1	; () banked
  5905  003552  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5906                           
  5907                           ; BSR set to: 1
  5908                           ;app.c: 179: }
  5909                           ;app.c: 180: break;
  5910  003554  0012               	return	
  5911  003556                     
  5912                           ; BSR set to: 1
  5913                           ;app.c: 183: if (delCmdFsm(receivedNumber, smsText))
  5914                           
  5915                           ; BSR set to: 1
  5916  003556  0EC2               	movlw	low _receivedNumber
  5917  003558  6F05               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5918  00355A  0E04               	movlw	high _receivedNumber
  5919  00355C  6F06               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5920  00355E  0E8B               	movlw	low _smsText
  5921  003560  6F07               	movwf	delCmdFsm@smsText& (0+255),b
  5922  003562  0E04               	movlw	high _smsText
  5923  003564  6F08               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  5924  003566  ECCB  F021         	call	_delCmdFsm	;wreg free
  5925  00356A  0900               	iorlw	0
  5926  00356C  B4D8               	btfsc	status,2,c
  5927  00356E  0012               	return	
  5928                           
  5929                           ;app.c: 184: {
  5930                           ;app.c: 185: currentState = GATE_WAIT_EVENT;
  5931  003570  0E01               	movlw	1
  5932  003572  0101               	movlb	1	; () banked
  5933  003574  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5934                           
  5935                           ; BSR set to: 1
  5936                           ;app.c: 186: }
  5937                           ;app.c: 187: break;
  5938  003576  0012               	return	
  5939  003578                     
  5940                           ; BSR set to: 1
  5941                           ;app.c: 190: if (triggerCmdFsm(receivedNumber))
  5942                           
  5943                           ; BSR set to: 1
  5944  003578  0EC2               	movlw	low _receivedNumber
  5945  00357A  6F05               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  5946  00357C  0E04               	movlw	high _receivedNumber
  5947  00357E  6F06               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  5948  003580  ECA8  F01C         	call	_triggerCmdFsm	;wreg free
  5949  003584  0900               	iorlw	0
  5950  003586  B4D8               	btfsc	status,2,c
  5951  003588  0012               	return	
  5952                           
  5953                           ;app.c: 191: {
  5954                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  5955  00358A  0E01               	movlw	1
  5956  00358C  0101               	movlb	1	; () banked
  5957  00358E  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5958                           
  5959                           ; BSR set to: 1
  5960                           ;app.c: 193: }
  5961                           ;app.c: 194: break;
  5962  003590  0012               	return	
  5963  003592                     
  5964                           ; BSR set to: 1
  5965                           ;app.c: 197: if (Eeprom_Reset() == 0)
  5966                           
  5967                           ; BSR set to: 1
  5968  003592  EC91  F02D         	call	_Eeprom_Reset	;wreg free
  5969  003596  0900               	iorlw	0
  5970  003598  A4D8               	btfss	status,2,c
  5971  00359A  0012               	return	
  5972                           
  5973                           ;app.c: 198: {
  5974                           ;app.c: 199: currentState = GATE_INIT;
  5975  00359C  0E00               	movlw	0
  5976  00359E  0101               	movlb	1	; () banked
  5977  0035A0  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;app.c: 205: }
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;app.c: 204: break;
  5984                           
  5985                           ;app.c: 203: default:
  5986                           
  5987                           ; BSR set to: 1
  5988                           ;app.c: 200: }
  5989                           ;app.c: 201: break;
  5990  0035A2  0012               	return	
  5991  0035A4                     
  5992                           ; BSR set to: 1
  5993  0035A4  0101               	movlb	1	; () banked
  5994  0035A6  51D9               	movf	MyApp_Task@currentState& (0+255),w,b
  5995                           
  5996                           ; Switch size 1, requested type "space"
  5997                           ; Number of cases is 6, Range of values is 0 to 5
  5998                           ; switch strategies available:
  5999                           ; Name         Instructions Cycles
  6000                           ; simple_byte           19    10 (average)
  6001                           ;	Chosen strategy is simple_byte
  6002  0035A8  0A00               	xorlw	0	; case 0
  6003  0035AA  B4D8               	btfsc	status,2,c
  6004  0035AC  D7B5               	goto	l2596
  6005  0035AE  0A01               	xorlw	1	; case 1
  6006  0035B0  B4D8               	btfsc	status,2,c
  6007  0035B2  D7BB               	goto	l2599
  6008  0035B4  0A03               	xorlw	3	; case 2
  6009  0035B6  B4D8               	btfsc	status,2,c
  6010  0035B8  D7BD               	goto	l2600
  6011  0035BA  0A01               	xorlw	1	; case 3
  6012  0035BC  B4D8               	btfsc	status,2,c
  6013  0035BE  D7CB               	goto	l2602
  6014  0035C0  0A07               	xorlw	7	; case 4
  6015  0035C2  B4D8               	btfsc	status,2,c
  6016  0035C4  D7D9               	goto	l2604
  6017  0035C6  0A01               	xorlw	1	; case 5
  6018  0035C8  A4D8               	btfss	status,2,c
  6019                           
  6020                           ; BSR set to: 1
  6021                           ;app.c: 211: }
  6022                           
  6023                           ; BSR set to: 1
  6024                           ;app.c: 210: break;
  6025                           
  6026                           ;app.c: 209: default:
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;app.c: 206: break;
  6030  0035CA  0012               	return	
  6031  0035CC  D7E2               	goto	l2606
  6032  0035CE                     l2591:
  6033                           
  6034                           ; BSR set to: 1
  6035  0035CE  0100               	movlb	0	; () banked
  6036  0035D0  51D4               	movf	_SystemState& (0+255),w,b
  6037                           
  6038                           ; Switch size 1, requested type "space"
  6039                           ; Number of cases is 2, Range of values is 0 to 1
  6040                           ; switch strategies available:
  6041                           ; Name         Instructions Cycles
  6042                           ; simple_byte            7     4 (average)
  6043                           ;	Chosen strategy is simple_byte
  6044  0035D2  0A00               	xorlw	0	; case 0
  6045  0035D4  B4D8               	btfsc	status,2,c
  6046  0035D6  D793               	goto	l2592
  6047  0035D8  0A01               	xorlw	1	; case 1
  6048  0035DA  A4D8               	btfss	status,2,c
  6049  0035DC  0012               	return	
  6050  0035DE  D7E2               	goto	l2595
  6051  0035E0                     __end_of_MyApp_Task:
  6052                           	opt stack 0
  6053                           tosu	equ	0xFFF
  6054                           tosh	equ	0xFFE
  6055                           tosl	equ	0xFFD
  6056                           pclath	equ	0xFFA
  6057                           tblptru	equ	0xFF8
  6058                           tblptrh	equ	0xFF7
  6059                           tblptrl	equ	0xFF6
  6060                           tablat	equ	0xFF5
  6061                           prodh	equ	0xFF4
  6062                           prodl	equ	0xFF3
  6063                           intcon	equ	0xFF2
  6064                           intcon2	equ	0xFF1
  6065                           intcon3	equ	0xFF0
  6066                           postinc0	equ	0xFEE
  6067                           wreg	equ	0xFE8
  6068                           postinc1	equ	0xFE6
  6069                           postdec1	equ	0xFE5
  6070                           fsr1h	equ	0xFE2
  6071                           fsr1l	equ	0xFE1
  6072                           indf2	equ	0xFDF
  6073                           postinc2	equ	0xFDE
  6074                           postdec2	equ	0xFDD
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function _Term_MainTask *****************
  6080 ;; Defined at:
  6081 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  Options         1    wreg     unsigned char 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;  Options         1    0[COMRAM] unsigned char 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6099 ;;Total ram usage:        0 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:   17
  6102 ;; This function calls:
  6103 ;;		_Term_MainSm
  6104 ;; This function is called by:
  6105 ;;		_InitializeTasks
  6106 ;;		_ScheduleTasks
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text17
  6111  0069C4                     __ptext17:
  6112                           	opt stack 0
  6113  0069C4                     _Term_MainTask:
  6114                           	opt stack 11
  6115                           
  6116                           ;term.c: 847: switch (SystemState)
  6117                           
  6118                           ;incstack = 0
  6119  0069C4  D003               	goto	l2490
  6120  0069C6                     
  6121                           ;term.c: 858: Term_MainSm();
  6122  0069C6  EC5B  F008         	call	_Term_MainSm	;wreg free
  6123                           
  6124                           ;term.c: 865: }
  6125                           
  6126                           ;term.c: 864: break;
  6127                           
  6128                           ;term.c: 863: default:
  6129                           
  6130                           ;term.c: 860: break;
  6131  0069CA  0012               	return	
  6132  0069CC                     l2490:
  6133  0069CC  0100               	movlb	0	; () banked
  6134  0069CE  51D4               	movf	_SystemState& (0+255),w,b
  6135                           
  6136                           ; Switch size 1, requested type "space"
  6137                           ; Number of cases is 2, Range of values is 0 to 1
  6138                           ; switch strategies available:
  6139                           ; Name         Instructions Cycles
  6140                           ; simple_byte            7     4 (average)
  6141                           ;	Chosen strategy is simple_byte
  6142  0069D0  0A00               	xorlw	0	; case 0
  6143  0069D2  B4D8               	btfsc	status,2,c
  6144  0069D4  0012               	return	
  6145  0069D6  0A01               	xorlw	1	; case 1
  6146  0069D8  A4D8               	btfss	status,2,c
  6147  0069DA  0012               	return	
  6148  0069DC  D7F4               	goto	l2493
  6149  0069DE                     __end_of_Term_MainTask:
  6150                           	opt stack 0
  6151                           tosu	equ	0xFFF
  6152                           tosh	equ	0xFFE
  6153                           tosl	equ	0xFFD
  6154                           pclath	equ	0xFFA
  6155                           tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           prodh	equ	0xFF4
  6160                           prodl	equ	0xFF3
  6161                           intcon	equ	0xFF2
  6162                           intcon2	equ	0xFF1
  6163                           intcon3	equ	0xFF0
  6164                           postinc0	equ	0xFEE
  6165                           wreg	equ	0xFE8
  6166                           postinc1	equ	0xFE6
  6167                           postdec1	equ	0xFE5
  6168                           fsr1h	equ	0xFE2
  6169                           fsr1l	equ	0xFE1
  6170                           indf2	equ	0xFDF
  6171                           postinc2	equ	0xFDE
  6172                           postdec2	equ	0xFDD
  6173                           fsr2h	equ	0xFDA
  6174                           fsr2l	equ	0xFD9
  6175                           status	equ	0xFD8
  6176                           
  6177 ;; *************** function _Rtcm_MainTask *****************
  6178 ;; Defined at:
  6179 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  Options         1    wreg     unsigned char 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  Options         1    0[COMRAM] unsigned char 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      void 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;Total ram usage:        0 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:   14
  6200 ;; This function calls:
  6201 ;;		_Rtcc_AlarmConfig
  6202 ;;		_Rtcc_LockRtc
  6203 ;;		_Rtcc_RtcConfig
  6204 ;;		_Rtcc_SetRtcStatus
  6205 ;;		_Rtcc_UnlockRtc
  6206 ;;		_Rtcm_GetRtccDate
  6207 ;;		_Rtcm_SetRtccDate
  6208 ;; This function is called by:
  6209 ;;		_InitializeTasks
  6210 ;;		_ScheduleTasks
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text18
  6215  00516E                     __ptext18:
  6216                           	opt stack 0
  6217  00516E                     _Rtcm_MainTask:
  6218                           	opt stack 14
  6219                           
  6220                           ;rtcm.c: 101: switch (SystemState)
  6221                           
  6222                           ;incstack = 0
  6223  00516E  D03D               	goto	l2220
  6224  005170                     l2221:
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6228  005170  86CD               	bsf	4045,3,c	;volatile
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6232  005172  0E00               	movlw	0
  6233  005174  0103               	movlb	3	; () banked
  6234  005176  6FBB               	movwf	_RtcConfig& (0+255),b
  6235                           
  6236                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6237  005178  0E00               	movlw	0
  6238  00517A  6FBC               	movwf	(_RtcConfig+1)& (0+255),b
  6239                           
  6240                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6241  00517C  0E01               	movlw	1
  6242  00517E  6FBD               	movwf	(_RtcConfig+2)& (0+255),b
  6243                           
  6244                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6245  005180  0E01               	movlw	1
  6246  005182  6FBE               	movwf	(_RtcConfig+3)& (0+255),b
  6247                           
  6248                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6249  005184  0E01               	movlw	1
  6250  005186  6FB7               	movwf	_AlCfg& (0+255),b
  6251                           
  6252                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6253  005188  0E01               	movlw	1
  6254  00518A  6FB8               	movwf	(_AlCfg+1)& (0+255),b
  6255                           
  6256                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6257  00518C  0E01               	movlw	1
  6258  00518E  6FB9               	movwf	(_AlCfg+2)& (0+255),b
  6259                           
  6260                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6261  005190  0E00               	movlw	0
  6262  005192  6FBA               	movwf	(_AlCfg+3)& (0+255),b
  6263                           
  6264                           ; BSR set to: 3
  6265                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6266  005194  EC7E  F035         	call	_Rtcc_UnlockRtc	;wreg free
  6267                           
  6268                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6269  005198  0EBB               	movlw	low _RtcConfig
  6270  00519A  0100               	movlb	0	; () banked
  6271  00519C  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6272  00519E  0E03               	movlw	high _RtcConfig
  6273  0051A0  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6274  0051A2  EC2F  F025         	call	_Rtcc_RtcConfig	;wreg free
  6275                           
  6276                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6277  0051A6  0EB7               	movlw	low _AlCfg
  6278  0051A8  0100               	movlb	0	; () banked
  6279  0051AA  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6280  0051AC  0E03               	movlw	high _AlCfg
  6281  0051AE  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6282  0051B0  EC21  F02B         	call	_Rtcc_AlarmConfig	;wreg free
  6283                           
  6284                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6285  0051B4  0E01               	movlw	1
  6286  0051B6  EC2D  F035         	call	_Rtcc_SetRtcStatus
  6287                           
  6288                           ;rtcm.c: 127: Rtcc_LockRtc();
  6289  0051BA  EC86  F035         	call	_Rtcc_LockRtc	;wreg free
  6290                           
  6291                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6292  0051BE  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6293  0051C2  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6294  0051C6  0E07               	movlw	7
  6295  0051C8                     u16401:
  6296  0051C8  CFDB FFEB          	movff	plusw2,plusw0
  6297  0051CC  06E8               	decf	wreg,f,c
  6298  0051CE  E2FC               	bc	u16401
  6299  0051D0  ECE6  F02D         	call	_Rtcm_SetRtccDate	;wreg free
  6300                           
  6301                           ;rtcm.c: 154: break;
  6302  0051D4  0012               	return	
  6303  0051D6                     
  6304                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6305  0051D6  ECBE  F02B         	call	_Rtcm_GetRtccDate	;wreg free
  6306  0051DA  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6307  0051DE  0E07               	movlw	7
  6308  0051E0                     u16411:
  6309  0051E0  CFEB FFDB          	movff	plusw0,plusw2
  6310  0051E4  06E8               	decf	wreg,f,c
  6311  0051E6  E2FC               	bc	u16411
  6312                           
  6313                           ;rtcm.c: 165: }
  6314                           
  6315                           ;rtcm.c: 164: break;
  6316                           
  6317                           ;rtcm.c: 163: default:
  6318                           
  6319                           ;rtcm.c: 160: break;
  6320  0051E8  0012               	return	
  6321  0051EA                     l2220:
  6322  0051EA  0100               	movlb	0	; () banked
  6323  0051EC  51D4               	movf	_SystemState& (0+255),w,b
  6324                           
  6325                           ; Switch size 1, requested type "space"
  6326                           ; Number of cases is 2, Range of values is 0 to 1
  6327                           ; switch strategies available:
  6328                           ; Name         Instructions Cycles
  6329                           ; simple_byte            7     4 (average)
  6330                           ;	Chosen strategy is simple_byte
  6331  0051EE  0A00               	xorlw	0	; case 0
  6332  0051F0  B4D8               	btfsc	status,2,c
  6333  0051F2  D7BE               	goto	l2221
  6334  0051F4  0A01               	xorlw	1	; case 1
  6335  0051F6  A4D8               	btfss	status,2,c
  6336  0051F8  0012               	return	
  6337  0051FA  D7ED               	goto	l2223
  6338  0051FC                     __end_of_Rtcm_MainTask:
  6339                           	opt stack 0
  6340                           tosu	equ	0xFFF
  6341                           tosh	equ	0xFFE
  6342                           tosl	equ	0xFFD
  6343                           pclath	equ	0xFFA
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           prodh	equ	0xFF4
  6349                           prodl	equ	0xFF3
  6350                           intcon	equ	0xFF2
  6351                           intcon2	equ	0xFF1
  6352                           intcon3	equ	0xFF0
  6353                           postinc0	equ	0xFEE
  6354                           plusw0	equ	0xFEB
  6355                           wreg	equ	0xFE8
  6356                           postinc1	equ	0xFE6
  6357                           postdec1	equ	0xFE5
  6358                           fsr1h	equ	0xFE2
  6359                           fsr1l	equ	0xFE1
  6360                           indf2	equ	0xFDF
  6361                           postinc2	equ	0xFDE
  6362                           postdec2	equ	0xFDD
  6363                           plusw2	equ	0xFDB
  6364                           fsr2h	equ	0xFDA
  6365                           fsr2l	equ	0xFD9
  6366                           status	equ	0xFD8
  6367                           
  6368 ;; *************** function _Led_MainTask *****************
  6369 ;; Defined at:
  6370 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  Options         1    wreg     unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  Options         1    0[COMRAM] unsigned char 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1    wreg      void 
  6377 ;; Registers used:
  6378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6387 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6388 ;;Total ram usage:        1 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:   14
  6391 ;; This function calls:
  6392 ;;		_LedStateMachine
  6393 ;; This function is called by:
  6394 ;;		_InitializeTasks
  6395 ;;		_ScheduleTasks
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text19
  6400  003C98                     __ptext19:
  6401                           	opt stack 0
  6402  003C98                     _Led_MainTask:
  6403                           	opt stack 14
  6404                           
  6405                           ;led.c: 300: switch (SystemState)
  6406                           
  6407                           ;incstack = 0
  6408  003C98  D05C               	goto	l2134
  6409  003C9A                     l2135:
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6413  003C9A  9895               	bcf	3989,4,c	;volatile
  6414                           
  6415                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6416  003C9C  9A95               	bcf	3989,5,c	;volatile
  6417                           
  6418                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6419  003C9E  9C95               	bcf	3989,6,c	;volatile
  6420                           
  6421                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6422  003CA0  9883               	bcf	3971,4,c	;volatile
  6423                           
  6424                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6425  003CA2  9A83               	bcf	3971,5,c	;volatile
  6426                           
  6427                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6428  003CA4  9C83               	bcf	3971,6,c	;volatile
  6429                           
  6430                           ;led.c: 311: break;
  6431  003CA6  0012               	return	
  6432  003CA8                     
  6433                           ; BSR set to: 0
  6434                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6435                           
  6436                           ; BSR set to: 0
  6437  003CA8  0EFA               	movlw	low _Led1Sts
  6438  003CAA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6439  003CAC  0E01               	movlw	high _Led1Sts
  6440  003CAE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6441  003CB0  0EF9               	movlw	low _Led1OutSts
  6442  003CB2  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6443  003CB4  0E01               	movlw	high _Led1OutSts
  6444  003CB6  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6445  003CB8  0E71               	movlw	low _Led1Blink
  6446  003CBA  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6447  003CBC  0E03               	movlw	high _Led1Blink
  6448  003CBE  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6449  003CC0  0E95               	movlw	low _Led1Pulse
  6450  003CC2  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6451  003CC4  0E03               	movlw	high _Led1Pulse
  6452  003CC6  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6453  003CC8  0E01               	movlw	1
  6454  003CCA  EC8A  F024         	call	_LedStateMachine
  6455  003CCE  0100               	movlb	0	; () banked
  6456  003CD0  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6457  003CD2  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6458  003CD4  5083               	movf	3971,w,c	;volatile
  6459  003CD6  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6460  003CD8  0BEF               	andlw	-17
  6461  003CDA  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6462  003CDC  6E83               	movwf	3971,c	;volatile
  6463                           
  6464                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6465  003CDE  0EF8               	movlw	low _Led2Sts
  6466  003CE0  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6467  003CE2  0E01               	movlw	high _Led2Sts
  6468  003CE4  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6469  003CE6  0EF7               	movlw	low _Led2OutSts
  6470  003CE8  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6471  003CEA  0E01               	movlw	high _Led2OutSts
  6472  003CEC  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6473  003CEE  0E68               	movlw	low _Led2Blink
  6474  003CF0  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6475  003CF2  0E03               	movlw	high _Led2Blink
  6476  003CF4  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6477  003CF6  0E8F               	movlw	low _Led2Pulse
  6478  003CF8  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6479  003CFA  0E03               	movlw	high _Led2Pulse
  6480  003CFC  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6481  003CFE  0E02               	movlw	2
  6482  003D00  EC8A  F024         	call	_LedStateMachine
  6483  003D04  0100               	movlb	0	; () banked
  6484  003D06  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6485  003D08  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6486  003D0A  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6487  003D0C  5083               	movf	3971,w,c	;volatile
  6488  003D0E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6489  003D10  0BDF               	andlw	-33
  6490  003D12  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6491  003D14  6E83               	movwf	3971,c	;volatile
  6492                           
  6493                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6494  003D16  0EF6               	movlw	low _Led3Sts
  6495  003D18  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6496  003D1A  0E01               	movlw	high _Led3Sts
  6497  003D1C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6498  003D1E  0EF5               	movlw	low _Led3OutSts
  6499  003D20  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6500  003D22  0E01               	movlw	high _Led3OutSts
  6501  003D24  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6502  003D26  0E5F               	movlw	low _Led3Blink
  6503  003D28  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6504  003D2A  0E03               	movlw	high _Led3Blink
  6505  003D2C  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6506  003D2E  0E89               	movlw	low _Led3Pulse
  6507  003D30  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6508  003D32  0E03               	movlw	high _Led3Pulse
  6509  003D34  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6510  003D36  0E03               	movlw	3
  6511  003D38  EC8A  F024         	call	_LedStateMachine
  6512  003D3C  0100               	movlb	0	; () banked
  6513  003D3E  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6514  003D40  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6515  003D42  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6516  003D44  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6517  003D46  5083               	movf	3971,w,c	;volatile
  6518  003D48  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6519  003D4A  0BBF               	andlw	-65
  6520  003D4C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6521  003D4E  6E83               	movwf	3971,c	;volatile
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;led.c: 326: }
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;led.c: 325: break;
  6528                           
  6529                           ;led.c: 324: default:
  6530                           
  6531                           ;led.c: 321: break;
  6532  003D50  0012               	return	
  6533  003D52                     l2134:
  6534                           
  6535                           ; BSR set to: 0
  6536  003D52  0100               	movlb	0	; () banked
  6537  003D54  51D4               	movf	_SystemState& (0+255),w,b
  6538                           
  6539                           ; Switch size 1, requested type "space"
  6540                           ; Number of cases is 2, Range of values is 0 to 1
  6541                           ; switch strategies available:
  6542                           ; Name         Instructions Cycles
  6543                           ; simple_byte            7     4 (average)
  6544                           ;	Chosen strategy is simple_byte
  6545  003D56  0A00               	xorlw	0	; case 0
  6546  003D58  B4D8               	btfsc	status,2,c
  6547  003D5A  D79F               	goto	l2135
  6548  003D5C  0A01               	xorlw	1	; case 1
  6549  003D5E  A4D8               	btfss	status,2,c
  6550  003D60  0012               	return	
  6551  003D62  D7A2               	goto	l2137
  6552  003D64                     __end_of_Led_MainTask:
  6553                           	opt stack 0
  6554                           tosu	equ	0xFFF
  6555                           tosh	equ	0xFFE
  6556                           tosl	equ	0xFFD
  6557                           pclath	equ	0xFFA
  6558                           tblptru	equ	0xFF8
  6559                           tblptrh	equ	0xFF7
  6560                           tblptrl	equ	0xFF6
  6561                           tablat	equ	0xFF5
  6562                           prodh	equ	0xFF4
  6563                           prodl	equ	0xFF3
  6564                           intcon	equ	0xFF2
  6565                           intcon2	equ	0xFF1
  6566                           intcon3	equ	0xFF0
  6567                           postinc0	equ	0xFEE
  6568                           plusw0	equ	0xFEB
  6569                           wreg	equ	0xFE8
  6570                           postinc1	equ	0xFE6
  6571                           postdec1	equ	0xFE5
  6572                           fsr1h	equ	0xFE2
  6573                           fsr1l	equ	0xFE1
  6574                           indf2	equ	0xFDF
  6575                           postinc2	equ	0xFDE
  6576                           postdec2	equ	0xFDD
  6577                           plusw2	equ	0xFDB
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582 ;; *************** function _UsbDevice_MainTask *****************
  6583 ;; Defined at:
  6584 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  Options         1    wreg     unsigned char 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  Options         1    0[COMRAM] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6602 ;;Total ram usage:        0 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:   20
  6605 ;; This function calls:
  6606 ;;		_CDCTxService
  6607 ;;		_USBDeviceInit
  6608 ;;		_USBDeviceTasks
  6609 ;; This function is called by:
  6610 ;;		_InitializeTasks
  6611 ;;		_ScheduleTasks
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text20
  6616  00675C                     __ptext20:
  6617                           	opt stack 0
  6618  00675C                     _UsbDevice_MainTask:
  6619                           	opt stack 8
  6620                           
  6621                           ;usb_device_mgr.c: 74: switch (SystemState)
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;incstack = 0
  6625  00675C  D008               	goto	l1992
  6626  00675E                     
  6627                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6628  00675E  ECC5  F012         	call	_USBDeviceInit	;wreg free
  6629                           
  6630                           ;usb_device_mgr.c: 80: ;
  6631                           ;usb_device_mgr.c: 81: break;
  6632  006762  0012               	return	
  6633  006764                     
  6634                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6635  006764  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6636                           
  6637                           ;usb_device_mgr.c: 90: CDCTxService();
  6638  006768  EC12  F014         	call	_CDCTxService	;wreg free
  6639                           
  6640                           ;usb_device_mgr.c: 101: }
  6641                           
  6642                           ;usb_device_mgr.c: 100: break;
  6643                           
  6644                           ;usb_device_mgr.c: 99: default:
  6645                           
  6646                           ;usb_device_mgr.c: 96: break;
  6647  00676C  0012               	return	
  6648  00676E                     l1992:
  6649  00676E  0100               	movlb	0	; () banked
  6650  006770  51D4               	movf	_SystemState& (0+255),w,b
  6651                           
  6652                           ; Switch size 1, requested type "space"
  6653                           ; Number of cases is 2, Range of values is 0 to 1
  6654                           ; switch strategies available:
  6655                           ; Name         Instructions Cycles
  6656                           ; simple_byte            7     4 (average)
  6657                           ;	Chosen strategy is simple_byte
  6658  006772  0A00               	xorlw	0	; case 0
  6659  006774  B4D8               	btfsc	status,2,c
  6660  006776  D7F3               	goto	l1993
  6661  006778  0A01               	xorlw	1	; case 1
  6662  00677A  A4D8               	btfss	status,2,c
  6663  00677C  0012               	return	
  6664  00677E  D7F2               	goto	l1995
  6665  006780                     __end_of_UsbDevice_MainTask:
  6666                           	opt stack 0
  6667                           tosu	equ	0xFFF
  6668                           tosh	equ	0xFFE
  6669                           tosl	equ	0xFFD
  6670                           pclath	equ	0xFFA
  6671                           tblptru	equ	0xFF8
  6672                           tblptrh	equ	0xFF7
  6673                           tblptrl	equ	0xFF6
  6674                           tablat	equ	0xFF5
  6675                           prodh	equ	0xFF4
  6676                           prodl	equ	0xFF3
  6677                           intcon	equ	0xFF2
  6678                           intcon2	equ	0xFF1
  6679                           intcon3	equ	0xFF0
  6680                           postinc0	equ	0xFEE
  6681                           plusw0	equ	0xFEB
  6682                           wreg	equ	0xFE8
  6683                           postinc1	equ	0xFE6
  6684                           postdec1	equ	0xFE5
  6685                           fsr1h	equ	0xFE2
  6686                           fsr1l	equ	0xFE1
  6687                           indf2	equ	0xFDF
  6688                           postinc2	equ	0xFDE
  6689                           postdec2	equ	0xFDD
  6690                           plusw2	equ	0xFDB
  6691                           fsr2h	equ	0xFDA
  6692                           fsr2l	equ	0xFD9
  6693                           status	equ	0xFD8
  6694                           
  6695 ;; *************** function _MdmHttp_MainTask *****************
  6696 ;; Defined at:
  6697 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  Options         1    wreg     unsigned char 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  Options         1    0[COMRAM] unsigned char 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  1    wreg      void 
  6704 ;; Registers used:
  6705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6715 ;;Total ram usage:        0 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:   15
  6718 ;; This function calls:
  6719 ;;		_HttpGetMethod
  6720 ;;		_InitGprsNetwork
  6721 ;; This function is called by:
  6722 ;;		_InitializeTasks
  6723 ;;		_ScheduleTasks
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text21
  6728  00607A                     __ptext21:
  6729                           	opt stack 0
  6730  00607A                     _MdmHttp_MainTask:
  6731                           	opt stack 13
  6732                           
  6733                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6734                           
  6735                           ;incstack = 0
  6736  00607A  D019               	goto	l1291
  6737  00607C                     
  6738                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6739  00607C  0E03               	movlw	3
  6740  00607E  0100               	movlb	0	; () banked
  6741  006080  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6742  006082  A4D8               	btfss	status,2,c
  6743  006084  0012               	return	
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;mdm_gsm_gprs_http.c: 570: {
  6747                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6748  006086  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6749  00608A  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6750  00608E  C1EC  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6751  006092  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6752  006096  0101               	movlb	1	; () banked
  6753  006098  6FEB               	movwf	_GprsNetworkSts& (0+255),b
  6754                           
  6755                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6756  00609A  0EA6               	movlw	low _HttpGetDataLocal
  6757  00609C  0100               	movlb	0	; () banked
  6758  00609E  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6759  0060A0  0E03               	movlw	high _HttpGetDataLocal
  6760  0060A2  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6761  0060A4  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6762  0060A8  0101               	movlb	1	; () banked
  6763  0060AA  6FEA               	movwf	_HttpGetMethodSts& (0+255),b
  6764                           
  6765                           ; BSR set to: 1
  6766                           ;mdm_gsm_gprs_http.c: 581: }
  6767                           
  6768                           ; BSR set to: 1
  6769                           ;mdm_gsm_gprs_http.c: 580: break;
  6770                           
  6771                           ;mdm_gsm_gprs_http.c: 579: default:
  6772                           
  6773                           ; BSR set to: 1
  6774                           ;mdm_gsm_gprs_http.c: 575: }
  6775                           ;mdm_gsm_gprs_http.c: 576: break;
  6776  0060AC  0012               	return	
  6777  0060AE                     l1291:
  6778                           
  6779                           ; BSR set to: 1
  6780  0060AE  0100               	movlb	0	; () banked
  6781  0060B0  51D4               	movf	_SystemState& (0+255),w,b
  6782                           
  6783                           ; Switch size 1, requested type "space"
  6784                           ; Number of cases is 2, Range of values is 0 to 1
  6785                           ; switch strategies available:
  6786                           ; Name         Instructions Cycles
  6787                           ; simple_byte            7     4 (average)
  6788                           ;	Chosen strategy is simple_byte
  6789  0060B2  0A00               	xorlw	0	; case 0
  6790  0060B4  B4D8               	btfsc	status,2,c
  6791  0060B6  0012               	return	
  6792  0060B8  0A01               	xorlw	1	; case 1
  6793  0060BA  A4D8               	btfss	status,2,c
  6794  0060BC  0012               	return	
  6795  0060BE  D7DE               	goto	l1294
  6796  0060C0                     __end_of_MdmHttp_MainTask:
  6797                           	opt stack 0
  6798                           tosu	equ	0xFFF
  6799                           tosh	equ	0xFFE
  6800                           tosl	equ	0xFFD
  6801                           pclath	equ	0xFFA
  6802                           tblptru	equ	0xFF8
  6803                           tblptrh	equ	0xFF7
  6804                           tblptrl	equ	0xFF6
  6805                           tablat	equ	0xFF5
  6806                           prodh	equ	0xFF4
  6807                           prodl	equ	0xFF3
  6808                           intcon	equ	0xFF2
  6809                           intcon2	equ	0xFF1
  6810                           intcon3	equ	0xFF0
  6811                           postinc0	equ	0xFEE
  6812                           plusw0	equ	0xFEB
  6813                           wreg	equ	0xFE8
  6814                           postinc1	equ	0xFE6
  6815                           postdec1	equ	0xFE5
  6816                           fsr1h	equ	0xFE2
  6817                           fsr1l	equ	0xFE1
  6818                           indf2	equ	0xFDF
  6819                           postinc2	equ	0xFDE
  6820                           postdec2	equ	0xFDD
  6821                           plusw2	equ	0xFDB
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function _Mdm_MainTask *****************
  6827 ;; Defined at:
  6828 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  Options         1    wreg     unsigned char 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  Options         1    0[COMRAM] unsigned char 
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  1    wreg      void 
  6835 ;; Registers used:
  6836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6846 ;;Total ram usage:        0 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:   15
  6849 ;; This function calls:
  6850 ;;		_CheckModem
  6851 ;;		_ConfigureModem
  6852 ;;		_GetSmsSm
  6853 ;;		_ModemEvtParser
  6854 ;;		_SendSmsSm
  6855 ;;		_TurnOnModem
  6856 ;;		_UartSetConfig
  6857 ;;		_Uart_InitUartModule
  6858 ;; This function is called by:
  6859 ;;		_InitializeTasks
  6860 ;;		_ScheduleTasks
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text22
  6865  005E10                     __ptext22:
  6866                           	opt stack 0
  6867  005E10                     _Mdm_MainTask:
  6868                           	opt stack 13
  6869                           
  6870                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6871                           
  6872                           ;incstack = 0
  6873  005E10  D01E               	goto	l1107
  6874  005E12                     
  6875                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6876  005E12  ECE1  F02C         	call	_UartSetConfig	;wreg free
  6877                           
  6878                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6879  005E16  0E28               	movlw	low _UartConfig
  6880  005E18  0100               	movlb	0	; () banked
  6881  005E1A  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6882  005E1C  0E03               	movlw	high _UartConfig
  6883  005E1E  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6884  005E20  0E01               	movlw	1
  6885  005E22  EC5E  F005         	call	_Uart_InitUartModule
  6886                           
  6887                           ;mdm_gsm_gprs.c: 764: break;
  6888  005E26  0012               	return	
  6889  005E28                     
  6890                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6891  005E28  EC10  F010         	call	_CheckModem	;wreg free
  6892                           
  6893                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6894  005E2C  042B               	decf	_ComChecCompleted,w,c
  6895  005E2E  A4D8               	btfss	status,2,c
  6896  005E30  D005               	goto	l1111
  6897  005E32  0100               	movlb	0	; () banked
  6898  005E34  51D1               	movf	_MdmStatus& (0+255),w,b
  6899  005E36  B4D8               	btfsc	status,2,c
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;mdm_gsm_gprs.c: 772: {
  6903                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6904  005E38  ECF3  F02F         	call	_TurnOnModem	;wreg free
  6905  005E3C                     l1111:
  6906                           
  6907                           ;mdm_gsm_gprs.c: 775: }
  6908                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6909  005E3C  EC62  F01B         	call	_ConfigureModem	;wreg free
  6910                           
  6911                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6912  005E40  EC98  F00E         	call	_ModemEvtParser	;wreg free
  6913                           
  6914                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6915  005E44  EC51  F015         	call	_GetSmsSm	;wreg free
  6916                           
  6917                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6918  005E48  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6919                           
  6920                           ;mdm_gsm_gprs.c: 789: }
  6921                           
  6922                           ;mdm_gsm_gprs.c: 788: break;
  6923                           
  6924                           ;mdm_gsm_gprs.c: 787: default:
  6925                           
  6926                           ;mdm_gsm_gprs.c: 784: break;
  6927  005E4C  0012               	return	
  6928  005E4E                     l1107:
  6929  005E4E  0100               	movlb	0	; () banked
  6930  005E50  51D4               	movf	_SystemState& (0+255),w,b
  6931                           
  6932                           ; Switch size 1, requested type "space"
  6933                           ; Number of cases is 2, Range of values is 0 to 1
  6934                           ; switch strategies available:
  6935                           ; Name         Instructions Cycles
  6936                           ; simple_byte            7     4 (average)
  6937                           ;	Chosen strategy is simple_byte
  6938  005E52  0A00               	xorlw	0	; case 0
  6939  005E54  B4D8               	btfsc	status,2,c
  6940  005E56  D7DD               	goto	l1108
  6941  005E58  0A01               	xorlw	1	; case 1
  6942  005E5A  A4D8               	btfss	status,2,c
  6943  005E5C  0012               	return	
  6944  005E5E  D7E4               	goto	l1110
  6945  005E60                     __end_of_Mdm_MainTask:
  6946                           	opt stack 0
  6947                           tosu	equ	0xFFF
  6948                           tosh	equ	0xFFE
  6949                           tosl	equ	0xFFD
  6950                           pclath	equ	0xFFA
  6951                           tblptru	equ	0xFF8
  6952                           tblptrh	equ	0xFF7
  6953                           tblptrl	equ	0xFF6
  6954                           tablat	equ	0xFF5
  6955                           prodh	equ	0xFF4
  6956                           prodl	equ	0xFF3
  6957                           intcon	equ	0xFF2
  6958                           intcon2	equ	0xFF1
  6959                           intcon3	equ	0xFF0
  6960                           postinc0	equ	0xFEE
  6961                           plusw0	equ	0xFEB
  6962                           wreg	equ	0xFE8
  6963                           postinc1	equ	0xFE6
  6964                           postdec1	equ	0xFE5
  6965                           fsr1h	equ	0xFE2
  6966                           fsr1l	equ	0xFE1
  6967                           indf2	equ	0xFDF
  6968                           postinc2	equ	0xFDE
  6969                           postdec2	equ	0xFDD
  6970                           plusw2	equ	0xFDB
  6971                           fsr2h	equ	0xFDA
  6972                           fsr2l	equ	0xFD9
  6973                           status	equ	0xFD8
  6974                           
  6975 ;; *************** function _I2cSlv_MainTask *****************
  6976 ;; Defined at:
  6977 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  Options         1    wreg     unsigned char 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  Options         1    0[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:   14
  6998 ;; This function calls:
  6999 ;;		_I2cSendMsgSm
  7000 ;;		_I2cSetConfig
  7001 ;;		_I2c_InitI2cModule
  7002 ;;		_OsAlrm_SetOsAlarm
  7003 ;; This function is called by:
  7004 ;;		_InitializeTasks
  7005 ;;		_ScheduleTasks
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text23
  7010  005B78                     __ptext23:
  7011                           	opt stack 0
  7012  005B78                     _I2cSlv_MainTask:
  7013                           	opt stack 14
  7014                           
  7015                           ;i2c_slv.c: 217: switch (SystemState)
  7016                           
  7017                           ;incstack = 0
  7018  005B78  D020               	goto	l1404
  7019  005B7A                     
  7020                           ;i2c_slv.c: 222: I2cSetConfig();
  7021  005B7A  EC47  F033         	call	_I2cSetConfig	;wreg free
  7022                           
  7023                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7024  005B7E  0E55               	movlw	low _I2cConfig
  7025  005B80  0100               	movlb	0	; () banked
  7026  005B82  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7027  005B84  0E03               	movlw	high _I2cConfig
  7028  005B86  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7029  005B88  EC43  F02A         	call	_I2c_InitI2cModule	;wreg free
  7030                           
  7031                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7032  005B8C  0E00               	movlw	0
  7033  005B8E  0100               	movlb	0	; () banked
  7034  005B90  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7035  005B92  0E00               	movlw	0
  7036  005B94  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7037  005B96  0E32               	movlw	50
  7038  005B98  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7039  005B9A  0E00               	movlw	0
  7040  005B9C  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7041  005B9E  0E00               	movlw	0
  7042  005BA0  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7043  005BA2  0E00               	movlw	0
  7044  005BA4  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7045  005BA6  0E8E               	movlw	low _I2cDummyTx
  7046  005BA8  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7047  005BAA  0E69               	movlw	high _I2cDummyTx
  7048  005BAC  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7049  005BAE  EC45  F020         	call	_OsAlrm_SetOsAlarm	;wreg free
  7050                           
  7051                           ;i2c_slv.c: 227: break;
  7052  005BB2  0012               	return	
  7053  005BB4                     
  7054                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7055  005BB4  ECA9  F020         	call	_I2cSendMsgSm	;wreg free
  7056                           
  7057                           ;i2c_slv.c: 238: }
  7058                           
  7059                           ;i2c_slv.c: 237: break;
  7060                           
  7061                           ;i2c_slv.c: 236: default:
  7062                           
  7063                           ;i2c_slv.c: 233: break;
  7064  005BB8  0012               	return	
  7065  005BBA                     l1404:
  7066  005BBA  0100               	movlb	0	; () banked
  7067  005BBC  51D4               	movf	_SystemState& (0+255),w,b
  7068                           
  7069                           ; Switch size 1, requested type "space"
  7070                           ; Number of cases is 2, Range of values is 0 to 1
  7071                           ; switch strategies available:
  7072                           ; Name         Instructions Cycles
  7073                           ; simple_byte            7     4 (average)
  7074                           ;	Chosen strategy is simple_byte
  7075  005BBE  0A00               	xorlw	0	; case 0
  7076  005BC0  B4D8               	btfsc	status,2,c
  7077  005BC2  D7DB               	goto	l1405
  7078  005BC4  0A01               	xorlw	1	; case 1
  7079  005BC6  A4D8               	btfss	status,2,c
  7080  005BC8  0012               	return	
  7081  005BCA  D7F4               	goto	l1407
  7082  005BCC                     __end_of_I2cSlv_MainTask:
  7083                           	opt stack 0
  7084                           tosu	equ	0xFFF
  7085                           tosh	equ	0xFFE
  7086                           tosl	equ	0xFFD
  7087                           pclath	equ	0xFFA
  7088                           tblptru	equ	0xFF8
  7089                           tblptrh	equ	0xFF7
  7090                           tblptrl	equ	0xFF6
  7091                           tablat	equ	0xFF5
  7092                           prodh	equ	0xFF4
  7093                           prodl	equ	0xFF3
  7094                           intcon	equ	0xFF2
  7095                           intcon2	equ	0xFF1
  7096                           intcon3	equ	0xFF0
  7097                           postinc0	equ	0xFEE
  7098                           plusw0	equ	0xFEB
  7099                           wreg	equ	0xFE8
  7100                           postinc1	equ	0xFE6
  7101                           postdec1	equ	0xFE5
  7102                           fsr1h	equ	0xFE2
  7103                           fsr1l	equ	0xFE1
  7104                           indf2	equ	0xFDF
  7105                           postinc2	equ	0xFDE
  7106                           postdec2	equ	0xFDD
  7107                           plusw2	equ	0xFDB
  7108                           fsr2h	equ	0xFDA
  7109                           fsr2l	equ	0xFD9
  7110                           status	equ	0xFD8
  7111                           
  7112 ;; *************** function _Mdm_DrvMainFn *****************
  7113 ;; Defined at:
  7114 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  Options         1    wreg     unsigned char 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  Options         1    0[COMRAM] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:   13
  7135 ;; This function calls:
  7136 ;;		_MdmCntSm
  7137 ;; This function is called by:
  7138 ;;		_InitializeTasks
  7139 ;;		_ScheduleTasks
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text24
  7144  006BCC                     __ptext24:
  7145                           	opt stack 0
  7146  006BCC                     _Mdm_DrvMainFn:
  7147                           	opt stack 15
  7148                           
  7149                           ;mdm_drv.c: 307: MdmCntSm();
  7150                           
  7151                           ;incstack = 0
  7152  006BCC  EC36  F024         	call	_MdmCntSm	;wreg free
  7153  006BD0  0012               	return		;funcret
  7154  006BD2                     __end_of_Mdm_DrvMainFn:
  7155                           	opt stack 0
  7156                           tosu	equ	0xFFF
  7157                           tosh	equ	0xFFE
  7158                           tosl	equ	0xFFD
  7159                           pclath	equ	0xFFA
  7160                           tblptru	equ	0xFF8
  7161                           tblptrh	equ	0xFF7
  7162                           tblptrl	equ	0xFF6
  7163                           tablat	equ	0xFF5
  7164                           prodh	equ	0xFF4
  7165                           prodl	equ	0xFF3
  7166                           intcon	equ	0xFF2
  7167                           intcon2	equ	0xFF1
  7168                           intcon3	equ	0xFF0
  7169                           postinc0	equ	0xFEE
  7170                           plusw0	equ	0xFEB
  7171                           wreg	equ	0xFE8
  7172                           postinc1	equ	0xFE6
  7173                           postdec1	equ	0xFE5
  7174                           fsr1h	equ	0xFE2
  7175                           fsr1l	equ	0xFE1
  7176                           indf2	equ	0xFDF
  7177                           postinc2	equ	0xFDE
  7178                           postdec2	equ	0xFDD
  7179                           plusw2	equ	0xFDB
  7180                           fsr2h	equ	0xFDA
  7181                           fsr2l	equ	0xFD9
  7182                           status	equ	0xFD8
  7183                           
  7184 ;; *************** function _Wdg_MainTask *****************
  7185 ;; Defined at:
  7186 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  Options         1    wreg     unsigned char 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  Options         1    0[COMRAM] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1    wreg      void 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7204 ;;Total ram usage:        0 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:   12
  7207 ;; This function calls:
  7208 ;;		_Mcu_ClearWdg
  7209 ;;		_Mcu_SetWdgSts
  7210 ;; This function is called by:
  7211 ;;		_InitializeTasks
  7212 ;;		_ScheduleTasks
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text25
  7217  0067EC                     __ptext25:
  7218                           	opt stack 0
  7219  0067EC                     _Wdg_MainTask:
  7220                           	opt stack 16
  7221                           
  7222                           ;wdg.c: 75: switch (SystemState)
  7223                           
  7224                           ;incstack = 0
  7225  0067EC  D007               	goto	l2510
  7226  0067EE                     
  7227                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7228  0067EE  0E01               	movlw	1
  7229  0067F0  EC63  F035         	call	_Mcu_SetWdgSts
  7230                           
  7231                           ;wdg.c: 81: break;
  7232  0067F4  0012               	return	
  7233  0067F6                     
  7234                           ;wdg.c: 86: Mcu_ClearWdg();
  7235  0067F6  ECE9  F035         	call	_Mcu_ClearWdg	;wreg free
  7236                           
  7237                           ;wdg.c: 92: }
  7238                           
  7239                           ;wdg.c: 91: break;
  7240                           
  7241                           ;wdg.c: 90: default:
  7242                           
  7243                           ;wdg.c: 87: break;
  7244  0067FA  0012               	return	
  7245  0067FC                     l2510:
  7246  0067FC  0100               	movlb	0	; () banked
  7247  0067FE  51D4               	movf	_SystemState& (0+255),w,b
  7248                           
  7249                           ; Switch size 1, requested type "space"
  7250                           ; Number of cases is 2, Range of values is 0 to 1
  7251                           ; switch strategies available:
  7252                           ; Name         Instructions Cycles
  7253                           ; simple_byte            7     4 (average)
  7254                           ;	Chosen strategy is simple_byte
  7255  006800  0A00               	xorlw	0	; case 0
  7256  006802  B4D8               	btfsc	status,2,c
  7257  006804  D7F4               	goto	l2511
  7258  006806  0A01               	xorlw	1	; case 1
  7259  006808  A4D8               	btfss	status,2,c
  7260  00680A  0012               	return	
  7261  00680C  D7F4               	goto	l2513
  7262  00680E                     __end_of_Wdg_MainTask:
  7263                           	opt stack 0
  7264                           tosu	equ	0xFFF
  7265                           tosh	equ	0xFFE
  7266                           tosl	equ	0xFFD
  7267                           pclath	equ	0xFFA
  7268                           tblptru	equ	0xFF8
  7269                           tblptrh	equ	0xFF7
  7270                           tblptrl	equ	0xFF6
  7271                           tablat	equ	0xFF5
  7272                           prodh	equ	0xFF4
  7273                           prodl	equ	0xFF3
  7274                           intcon	equ	0xFF2
  7275                           intcon2	equ	0xFF1
  7276                           intcon3	equ	0xFF0
  7277                           postinc0	equ	0xFEE
  7278                           plusw0	equ	0xFEB
  7279                           wreg	equ	0xFE8
  7280                           postinc1	equ	0xFE6
  7281                           postdec1	equ	0xFE5
  7282                           fsr1h	equ	0xFE2
  7283                           fsr1l	equ	0xFE1
  7284                           indf2	equ	0xFDF
  7285                           postinc2	equ	0xFDE
  7286                           postdec2	equ	0xFDD
  7287                           plusw2	equ	0xFDB
  7288                           fsr2h	equ	0xFDA
  7289                           fsr2l	equ	0xFD9
  7290                           status	equ	0xFD8
  7291                           
  7292 ;; *************** function _Mcu_SetWdgSts *****************
  7293 ;; Defined at:
  7294 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  WdgSts          1    wreg     unsigned char 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;Total ram usage:        1 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:   11
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_Wdg_MainTask
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text26
  7323  006AC6                     __ptext26:
  7324                           	opt stack 0
  7325  006AC6                     _Mcu_SetWdgSts:
  7326                           	opt stack 16
  7327                           
  7328                           ;incstack = 0
  7329                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7330  006AC6  0100               	movlb	0	; () banked
  7331  006AC8  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7332                           
  7333                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7334  006ACA  0100               	movlb	0	; () banked
  7335  006ACC  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7336  006ACE  D002               	bra	u14795
  7337  006AD0  90C0               	bcf	4032,0,c	;volatile
  7338  006AD2  D001               	bra	u14796
  7339  006AD4                     u14795:
  7340  006AD4  80C0               	bsf	4032,0,c	;volatile
  7341  006AD6                     u14796:
  7342  006AD6  0012               	return		;funcret
  7343  006AD8                     __end_of_Mcu_SetWdgSts:
  7344                           	opt stack 0
  7345                           tosu	equ	0xFFF
  7346                           tosh	equ	0xFFE
  7347                           tosl	equ	0xFFD
  7348                           pclath	equ	0xFFA
  7349                           tblptru	equ	0xFF8
  7350                           tblptrh	equ	0xFF7
  7351                           tblptrl	equ	0xFF6
  7352                           tablat	equ	0xFF5
  7353                           prodh	equ	0xFF4
  7354                           prodl	equ	0xFF3
  7355                           intcon	equ	0xFF2
  7356                           intcon2	equ	0xFF1
  7357                           intcon3	equ	0xFF0
  7358                           postinc0	equ	0xFEE
  7359                           plusw0	equ	0xFEB
  7360                           wreg	equ	0xFE8
  7361                           postinc1	equ	0xFE6
  7362                           postdec1	equ	0xFE5
  7363                           fsr1h	equ	0xFE2
  7364                           fsr1l	equ	0xFE1
  7365                           indf2	equ	0xFDF
  7366                           postinc2	equ	0xFDE
  7367                           postdec2	equ	0xFDD
  7368                           plusw2	equ	0xFDB
  7369                           fsr2h	equ	0xFDA
  7370                           fsr2l	equ	0xFD9
  7371                           status	equ	0xFD8
  7372                           
  7373 ;; *************** function _Mcu_ClearWdg *****************
  7374 ;; Defined at:
  7375 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		None
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;Total ram usage:        0 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:   11
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_Wdg_MainTask
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text27
  7404  006BD2                     __ptext27:
  7405                           	opt stack 0
  7406  006BD2                     _Mcu_ClearWdg:
  7407                           	opt stack 16
  7408                           
  7409                           ;incstack = 0
  7410  006BD2  0004               	clrwdt		;# 
  7411  006BD4  0012               	return		;funcret
  7412  006BD6                     __end_of_Mcu_ClearWdg:
  7413                           	opt stack 0
  7414                           tosu	equ	0xFFF
  7415                           tosh	equ	0xFFE
  7416                           tosl	equ	0xFFD
  7417                           pclath	equ	0xFFA
  7418                           tblptru	equ	0xFF8
  7419                           tblptrh	equ	0xFF7
  7420                           tblptrl	equ	0xFF6
  7421                           tablat	equ	0xFF5
  7422                           prodh	equ	0xFF4
  7423                           prodl	equ	0xFF3
  7424                           intcon	equ	0xFF2
  7425                           intcon2	equ	0xFF1
  7426                           intcon3	equ	0xFF0
  7427                           postinc0	equ	0xFEE
  7428                           plusw0	equ	0xFEB
  7429                           wreg	equ	0xFE8
  7430                           postinc1	equ	0xFE6
  7431                           postdec1	equ	0xFE5
  7432                           fsr1h	equ	0xFE2
  7433                           fsr1l	equ	0xFE1
  7434                           indf2	equ	0xFDF
  7435                           postinc2	equ	0xFDE
  7436                           postdec2	equ	0xFDD
  7437                           plusw2	equ	0xFDB
  7438                           fsr2h	equ	0xFDA
  7439                           fsr2l	equ	0xFD9
  7440                           status	equ	0xFD8
  7441                           
  7442 ;; *************** function _USBDeviceTasks *****************
  7443 ;; Defined at:
  7444 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  i               1   56[BANK0 ] unsigned char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7461 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7462 ;;Total ram usage:        1 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:   19
  7465 ;; This function calls:
  7466 ;;		_USBCtrlEPAllowStatusStage
  7467 ;;		_USBCtrlEPService
  7468 ;;		_USBDeviceInit
  7469 ;;		_USBIncrement1msInternalTimers
  7470 ;;		_USBStallHandler
  7471 ;;		_USBSuspend
  7472 ;;		_USBWakeFromSuspend
  7473 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7474 ;; This function is called by:
  7475 ;;		_UsbDevice_MainTask
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text28
  7480  001BAA                     __ptext28:
  7481                           	opt stack 0
  7482  001BAA                     _USBDeviceTasks:
  7483                           	opt stack 8
  7484                           
  7485                           ;usb_device.c: 562: }
  7486                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7487                           
  7488                           ; BSR set to: 0
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;usb_device.c: 561: return;
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7495                           
  7496                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7497                           
  7498                           ;usb_device.c: 529: UIE = 0;
  7499                           
  7500                           ;usb_device.c: 524: {
  7501                           ;usb_device.c: 526: UCON = 0;
  7502                           
  7503                           ;usb_device.c: 497: uint8_t i;
  7504                           ;usb_device.c: 523: if (1 != 1)
  7505                           
  7506                           ;incstack = 0
  7507  001BAA  0100               	movlb	0	; () banked
  7508  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7509  001BAE  A4D8               	btfss	status,2,c
  7510  001BB0  D012               	goto	l1615
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;usb_device.c: 585: {
  7514                           ;usb_device.c: 587: UCON = 0;
  7515  001BB2  0E00               	movlw	0
  7516  001BB4  6E65               	movwf	3941,c	;volatile
  7517                           
  7518                           ;usb_device.c: 590: UIE = 0;
  7519  001BB6  0E00               	movlw	0
  7520  001BB8  010F               	movlb	15	; () banked
  7521  001BBA  6F36               	movwf	54,b	;volatile
  7522                           
  7523                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7524  001BBC  0E16               	movlw	22
  7525  001BBE  6F39               	movwf	57,b	;volatile
  7526  001BC0  0E9F               	movlw	159
  7527  001BC2  6F37               	movwf	55,b	;volatile
  7528  001BC4  0E7B               	movlw	123
  7529  001BC6  6F36               	movwf	54,b	;volatile
  7530                           
  7531                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7532  001BC8  D001               	goto	l1616
  7533  001BCA                     l1617:
  7534  001BCA  8665               	bsf	3941,3,c	;volatile
  7535  001BCC                     l1616:
  7536  001BCC  A665               	btfss	3941,3,c	;volatile
  7537  001BCE  D7FD               	goto	l1617
  7538                           
  7539                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7540  001BD0  0E01               	movlw	1
  7541  001BD2  0100               	movlb	0	; () banked
  7542  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7543  001BD6                     l1615:
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;usb_device.c: 605: }
  7547                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7548                           
  7549                           ; BSR set to: 0
  7550  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7551  001BD8  B4D8               	btfsc	status,2,c
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;usb_device.c: 609: {
  7555                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7556  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7557  001BDC  D00A               	goto	l1620
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;usb_device.c: 620: {
  7561                           ;usb_device.c: 626: {UIR = 0;};
  7562  001BDE  0E00               	movlw	0
  7563  001BE0  6E62               	movwf	3938,c	;volatile
  7564                           
  7565                           ;usb_device.c: 630: UIE=0;
  7566  001BE2  0E00               	movlw	0
  7567  001BE4  010F               	movlb	15	; () banked
  7568  001BE6  6F36               	movwf	54,b	;volatile
  7569                           
  7570                           ; BSR set to: 15
  7571                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7572  001BE8  8136               	bsf	54,0,b	;volatile
  7573                           
  7574                           ; BSR set to: 15
  7575                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7576  001BEA  8936               	bsf	54,4,b	;volatile
  7577                           
  7578                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7579  001BEC  0E02               	movlw	2
  7580  001BEE  0100               	movlb	0	; () banked
  7581  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7582  001BF2                     l1620:
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;usb_device.c: 635: }
  7586                           ;usb_device.c: 636: }
  7587                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7588                           
  7589                           ; BSR set to: 0
  7590                           
  7591                           ; BSR set to: 0
  7592  001BF2  A462               	btfss	3938,2,c	;volatile
  7593  001BF4  D006               	goto	l1621
  7594                           
  7595                           ; BSR set to: 0
  7596  001BF6  010F               	movlb	15	; () banked
  7597  001BF8  A536               	btfss	54,2,b	;volatile
  7598  001BFA  D003               	goto	l1621
  7599                           
  7600                           ; BSR set to: 15
  7601                           ;usb_device.c: 653: {
  7602                           ;usb_device.c: 654: (UIR &= 0xFB);
  7603  001BFC  9462               	bcf	3938,2,c	;volatile
  7604                           
  7605                           ; BSR set to: 15
  7606                           ;usb_device.c: 658: USBWakeFromSuspend();
  7607  001BFE  ECE2  F031         	call	_USBWakeFromSuspend	;wreg free
  7608  001C02                     l1621:
  7609                           
  7610                           ;usb_device.c: 660: }
  7611                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7612  001C02  A265               	btfss	3941,1,c	;volatile
  7613  001C04  D002               	goto	l1622
  7614                           
  7615                           ;usb_device.c: 666: {
  7616                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7617  001C06  98A1               	bcf	4001,4,c	;volatile
  7618                           
  7619                           ;usb_device.c: 668: return;
  7620  001C08  0012               	return	
  7621  001C0A                     l1622:
  7622                           
  7623                           ;usb_device.c: 669: }
  7624                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7625  001C0A  A062               	btfss	3938,0,c	;volatile
  7626  001C0C  D009               	goto	l1623
  7627  001C0E  010F               	movlb	15	; () banked
  7628  001C10  A136               	btfss	54,0,b	;volatile
  7629  001C12  D006               	goto	l1623
  7630                           
  7631                           ; BSR set to: 15
  7632                           ;usb_device.c: 682: {
  7633                           ;usb_device.c: 683: USBDeviceInit();
  7634  001C14  ECC5  F012         	call	_USBDeviceInit	;wreg free
  7635                           
  7636                           ;usb_device.c: 687: ;
  7637                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7638  001C18  0E04               	movlw	4
  7639  001C1A  0100               	movlb	0	; () banked
  7640  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;usb_device.c: 699: (UIR &= 0xFE);
  7644  001C1E  9062               	bcf	3938,0,c	;volatile
  7645  001C20                     l1623:
  7646                           
  7647                           ;usb_device.c: 700: }
  7648                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7649                           
  7650                           ; BSR set to: 0
  7651  001C20  A862               	btfss	3938,4,c	;volatile
  7652  001C22  D004               	goto	l1624
  7653  001C24  010F               	movlb	15	; () banked
  7654  001C26  B936               	btfsc	54,4,b	;volatile
  7655                           
  7656                           ; BSR set to: 15
  7657                           ;usb_device.c: 706: {
  7658                           ;usb_device.c: 712: USBSuspend();
  7659  001C28  EC87  F032         	call	_USBSuspend	;wreg free
  7660  001C2C                     l1624:
  7661                           
  7662                           ;usb_device.c: 714: }
  7663                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7664  001C2C  AC62               	btfss	3938,6,c	;volatile
  7665  001C2E  D01C               	goto	l1628
  7666                           
  7667                           ;usb_device.c: 727: {
  7668                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7669  001C30  010F               	movlb	15	; () banked
  7670  001C32  AD36               	btfss	54,6,b	;volatile
  7671  001C34  D00F               	goto	l1626
  7672                           
  7673                           ; BSR set to: 15
  7674                           ;usb_device.c: 730: {
  7675                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7676  001C36  0E00               	movlw	0
  7677  001C38  0100               	movlb	0	; () banked
  7678  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7679  001C3C  0E73               	movlw	115
  7680  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7681  001C40  0E00               	movlw	0
  7682  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7683  001C44  0E00               	movlw	0
  7684  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7685  001C48  0E00               	movlw	0
  7686  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7687  001C4C  0E01               	movlw	1
  7688  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7689  001C50  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7690  001C54                     l1626:
  7691                           
  7692                           ;usb_device.c: 732: }
  7693                           ;usb_device.c: 733: (UIR &= 0xBF);
  7694  001C54  9C62               	bcf	3938,6,c	;volatile
  7695                           
  7696                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7697  001C56  EC07  F034         	call	_USBIncrement1msInternalTimers	;wreg free
  7698                           
  7699                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7700  001C5A  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7701  001C5C  A4D8               	btfss	status,2,c
  7702                           
  7703                           ;usb_device.c: 754: {
  7704                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7705  001C5E  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7706                           
  7707                           ;usb_device.c: 756: }
  7708                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7709  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7710  001C62  B4D8               	btfsc	status,2,c
  7711                           
  7712                           ;usb_device.c: 763: {
  7713                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7714  001C64  ECB2  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7715  001C68                     l1628:
  7716                           
  7717                           ;usb_device.c: 765: }
  7718                           ;usb_device.c: 767: }
  7719                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7720  001C68  AA62               	btfss	3938,5,c	;volatile
  7721  001C6A  D004               	goto	l1629
  7722  001C6C  010F               	movlb	15	; () banked
  7723  001C6E  BB36               	btfsc	54,5,b	;volatile
  7724                           
  7725                           ; BSR set to: 15
  7726                           ;usb_device.c: 770: {
  7727                           ;usb_device.c: 771: USBStallHandler();
  7728  001C70  EC60  F030         	call	_USBStallHandler	;wreg free
  7729  001C74                     l1629:
  7730                           
  7731                           ;usb_device.c: 772: }
  7732                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7733  001C74  A262               	btfss	3938,1,c	;volatile
  7734  001C76  D013               	goto	l1630
  7735  001C78  010F               	movlb	15	; () banked
  7736  001C7A  A336               	btfss	54,1,b	;volatile
  7737  001C7C  D010               	goto	l1630
  7738                           
  7739                           ; BSR set to: 15
  7740                           ;usb_device.c: 775: {
  7741                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7742  001C7E  0E7F               	movlw	127
  7743  001C80  0100               	movlb	0	; () banked
  7744  001C82  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7745  001C84  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7746  001C86  0E00               	movlw	0
  7747  001C88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7748  001C8A  0E00               	movlw	0
  7749  001C8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7750  001C8E  0E00               	movlw	0
  7751  001C90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7752  001C92  0E01               	movlw	1
  7753  001C94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7754  001C96  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7755                           
  7756                           ;usb_device.c: 777: {UEIR = 0;};
  7757  001C9A  0E00               	movlw	0
  7758  001C9C  6E63               	movwf	3939,c	;volatile
  7759  001C9E                     l1630:
  7760                           
  7761                           ;usb_device.c: 785: }
  7762                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7763  001C9E  0E04               	movlw	4
  7764  001CA0  0100               	movlb	0	; () banked
  7765  001CA2  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7766  001CA4  D002               	goto	l1631
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;usb_device.c: 793: {
  7770                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7771  001CA6  98A1               	bcf	4001,4,c	;volatile
  7772                           
  7773                           ;usb_device.c: 795: return;
  7774  001CA8  0012               	return	
  7775  001CAA                     l1631:
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;usb_device.c: 796: }
  7779                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7780  001CAA  010F               	movlb	15	; () banked
  7781  001CAC  A736               	btfss	54,3,b	;volatile
  7782  001CAE  D03E               	goto	u15750
  7783                           
  7784                           ; BSR set to: 15
  7785                           ;usb_device.c: 802: {
  7786                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7787  001CB0  0E00               	movlw	0
  7788  001CB2  0100               	movlb	0	; () banked
  7789  001CB4  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7790  001CB6                     l16041:
  7791                           
  7792                           ; BSR set to: 0
  7793  001CB6  0E03               	movlw	3
  7794  001CB8  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7795  001CBA  D001               	goto	l1633
  7796  001CBC  D037               	goto	u15750
  7797  001CBE                     l1633:
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;usb_device.c: 804: {
  7801                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7802  001CBE  A662               	btfss	3938,3,c	;volatile
  7803  001CC0  D035               	goto	u15750
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;usb_device.c: 806: {
  7807                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7808  001CC2  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7812  001CC6  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7813  001CC8  32E8               	rrcf	wreg,f,c
  7814  001CCA  32E8               	rrcf	wreg,f,c
  7815  001CCC  0B0F               	andlw	15
  7816  001CCE  6FCB               	movwf	_endpoint_number& (0+255),b
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;usb_device.c: 811: (UIR &= 0xF7);
  7820  001CD0  9662               	bcf	3938,3,c	;volatile
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7824  001CD2  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7825  001CD4  D007               	goto	l1636
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;usb_device.c: 817: {
  7829                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7830  001CD6  51CB               	movf	_endpoint_number& (0+255),w,b
  7831  001CD8  0D01               	mullw	1
  7832  001CDA  0ECE               	movlw	low _ep_data_out
  7833  001CDC  24F3               	addwf	prodl,w,c
  7834  001CDE  6ED9               	movwf	fsr2l,c
  7835  001CE0  0E02               	movlw	high _ep_data_out
  7836  001CE2  D007               	goto	L3
  7837  001CE4                     l1636:
  7838                           
  7839                           ;usb_device.c: 820: else
  7840                           ;usb_device.c: 821: {
  7841                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7842                           
  7843                           ; BSR set to: 2
  7844  001CE4  0100               	movlb	0	; () banked
  7845  001CE6  51CB               	movf	_endpoint_number& (0+255),w,b
  7846  001CE8  0D01               	mullw	1
  7847  001CEA  0ED1               	movlw	low _ep_data_in
  7848  001CEC  24F3               	addwf	prodl,w,c
  7849  001CEE  6ED9               	movwf	fsr2l,c
  7850  001CF0  0E02               	movlw	high _ep_data_in
  7851  001CF2                     L3:
  7852  001CF2  20F4               	addwfc	prodh,w,c
  7853  001CF4  6EDA               	movwf	fsr2h,c
  7854  001CF6  0102               	movlb	2	; () banked
  7855  001CF8  70DF               	btg	indf2,0,c
  7856                           
  7857                           ; BSR set to: 2
  7858                           ;usb_device.c: 823: }
  7859                           ;usb_device.c: 828: if(endpoint_number == 0)
  7860                           
  7861                           ; BSR set to: 2
  7862  001CFA  0100               	movlb	0	; () banked
  7863  001CFC  51CB               	movf	_endpoint_number& (0+255),w,b
  7864  001CFE  A4D8               	btfss	status,2,c
  7865  001D00  D003               	goto	l1638
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;usb_device.c: 829: {
  7869                           ;usb_device.c: 830: USBCtrlEPService();
  7870  001D02  EC49  F027         	call	_USBCtrlEPService	;wreg free
  7871                           
  7872                           ;usb_device.c: 831: }
  7873  001D06  D00F               	goto	l1640
  7874  001D08                     l1638:
  7875                           
  7876                           ;usb_device.c: 832: else
  7877                           ;usb_device.c: 833: {
  7878                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7879  001D08  0E00               	movlw	0
  7880  001D0A  0100               	movlb	0	; () banked
  7881  001D0C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7882  001D0E  0E72               	movlw	114
  7883  001D10  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7884  001D12  0ED5               	movlw	low _USTATcopy
  7885  001D14  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7886  001D16  0E00               	movlw	high _USTATcopy
  7887  001D18  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7888  001D1A  0E00               	movlw	0
  7889  001D1C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7890  001D1E  0E00               	movlw	0
  7891  001D20  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7892  001D22  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7893  001D26                     l1640:
  7894  001D26  0100               	movlb	0	; () banked
  7895  001D28  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7896  001D2A  D7C5               	goto	l16041
  7897  001D2C                     u15750:
  7898                           
  7899                           ;usb_device.c: 840: }
  7900                           ;usb_device.c: 841: }
  7901                           ;usb_device.c: 842: }
  7902                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7903                           
  7904                           ; BSR set to: 0
  7905  001D2C  98A1               	bcf	4001,4,c	;volatile
  7906  001D2E  0012               	return		;funcret
  7907  001D30                     __end_of_USBDeviceTasks:
  7908                           	opt stack 0
  7909                           tosu	equ	0xFFF
  7910                           tosh	equ	0xFFE
  7911                           tosl	equ	0xFFD
  7912                           pclath	equ	0xFFA
  7913                           tblptru	equ	0xFF8
  7914                           tblptrh	equ	0xFF7
  7915                           tblptrl	equ	0xFF6
  7916                           tablat	equ	0xFF5
  7917                           prodh	equ	0xFF4
  7918                           prodl	equ	0xFF3
  7919                           intcon	equ	0xFF2
  7920                           intcon2	equ	0xFF1
  7921                           intcon3	equ	0xFF0
  7922                           postinc0	equ	0xFEE
  7923                           plusw0	equ	0xFEB
  7924                           wreg	equ	0xFE8
  7925                           postinc1	equ	0xFE6
  7926                           postdec1	equ	0xFE5
  7927                           fsr1h	equ	0xFE2
  7928                           fsr1l	equ	0xFE1
  7929                           indf2	equ	0xFDF
  7930                           postinc2	equ	0xFDE
  7931                           postdec2	equ	0xFDD
  7932                           plusw2	equ	0xFDB
  7933                           fsr2h	equ	0xFDA
  7934                           fsr2l	equ	0xFD9
  7935                           status	equ	0xFD8
  7936                           
  7937 ;; *************** function _USBWakeFromSuspend *****************
  7938 ;; Defined at:
  7939 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;		None
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7957 ;;Total ram usage:        0 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:   15
  7960 ;; This function calls:
  7961 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7962 ;; This function is called by:
  7963 ;;		_USBDeviceTasks
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           	psect	text29
  7968  0063C4                     __ptext29:
  7969                           	opt stack 0
  7970  0063C4                     _USBWakeFromSuspend:
  7971                           	opt stack 11
  7972                           
  7973                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7974                           
  7975                           ;incstack = 0
  7976  0063C4  0E00               	movlw	0
  7977  0063C6  0101               	movlb	1	; () banked
  7978  0063C8  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  7979                           
  7980                           ; BSR set to: 1
  7981                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7982  0063CA  0E00               	movlw	0
  7983  0063CC  0100               	movlb	0	; () banked
  7984  0063CE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7985  0063D0  0E74               	movlw	116
  7986  0063D2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7987  0063D4  0E00               	movlw	0
  7988  0063D6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7989  0063D8  0E00               	movlw	0
  7990  0063DA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7991  0063DC  0E00               	movlw	0
  7992  0063DE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7993  0063E0  0E00               	movlw	0
  7994  0063E2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7995  0063E4  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7996                           
  7997                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7998  0063E8  9265               	bcf	3941,1,c	;volatile
  7999                           
  8000                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8001  0063EA  010F               	movlb	15	; () banked
  8002  0063EC  9536               	bcf	54,2,b	;volatile
  8003                           
  8004                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8005  0063EE  D001               	goto	l1768
  8006  0063F0                     
  8007                           ;usb_device.c: 2361: {
  8008                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8009                           
  8010                           ; BSR set to: 15
  8011  0063F0  9462               	bcf	3938,2,c	;volatile
  8012  0063F2                     l1768:
  8013  0063F2  B462               	btfsc	3938,2,c	;volatile
  8014  0063F4  D7FD               	goto	l1769
  8015                           
  8016                           ;usb_device.c: 2363: }
  8017                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8018  0063F6  0E00               	movlw	0
  8019  0063F8  0101               	movlb	1	; () banked
  8020  0063FA  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8021                           
  8022                           ; BSR set to: 1
  8023  0063FC  0012               	return		;funcret
  8024  0063FE                     __end_of_USBWakeFromSuspend:
  8025                           	opt stack 0
  8026                           tosu	equ	0xFFF
  8027                           tosh	equ	0xFFE
  8028                           tosl	equ	0xFFD
  8029                           pclath	equ	0xFFA
  8030                           tblptru	equ	0xFF8
  8031                           tblptrh	equ	0xFF7
  8032                           tblptrl	equ	0xFF6
  8033                           tablat	equ	0xFF5
  8034                           prodh	equ	0xFF4
  8035                           prodl	equ	0xFF3
  8036                           intcon	equ	0xFF2
  8037                           intcon2	equ	0xFF1
  8038                           intcon3	equ	0xFF0
  8039                           postinc0	equ	0xFEE
  8040                           plusw0	equ	0xFEB
  8041                           wreg	equ	0xFE8
  8042                           postinc1	equ	0xFE6
  8043                           postdec1	equ	0xFE5
  8044                           fsr1h	equ	0xFE2
  8045                           fsr1l	equ	0xFE1
  8046                           indf2	equ	0xFDF
  8047                           postinc2	equ	0xFDE
  8048                           postdec2	equ	0xFDD
  8049                           plusw2	equ	0xFDB
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8
  8053                           
  8054 ;; *************** function _USBSuspend *****************
  8055 ;; Defined at:
  8056 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;		None
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8074 ;;Total ram usage:        0 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:   15
  8077 ;; This function calls:
  8078 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8079 ;; This function is called by:
  8080 ;;		_USBDeviceTasks
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text30
  8085  00650E                     __ptext30:
  8086                           	opt stack 0
  8087  00650E                     _USBSuspend:
  8088                           	opt stack 11
  8089                           
  8090                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;incstack = 0
  8094  00650E  010F               	movlb	15	; () banked
  8095  006510  8536               	bsf	54,2,b	;volatile
  8096                           
  8097                           ; BSR set to: 15
  8098                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8099  006512  9862               	bcf	3938,4,c	;volatile
  8100                           
  8101                           ; BSR set to: 15
  8102                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8103  006514  8265               	bsf	3941,1,c	;volatile
  8104                           
  8105                           ; BSR set to: 15
  8106                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8107  006516  0E01               	movlw	1
  8108  006518  0101               	movlb	1	; () banked
  8109  00651A  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  8110                           
  8111                           ; BSR set to: 1
  8112                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8113  00651C  0E00               	movlw	0
  8114  00651E  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8115                           
  8116                           ; BSR set to: 1
  8117                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8118  006520  0E00               	movlw	0
  8119  006522  0100               	movlb	0	; () banked
  8120  006524  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8121  006526  0E75               	movlw	117
  8122  006528  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8123  00652A  0E00               	movlw	0
  8124  00652C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8125  00652E  0E00               	movlw	0
  8126  006530  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8127  006532  0E00               	movlw	0
  8128  006534  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8129  006536  0E00               	movlw	0
  8130  006538  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8131  00653A  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8132  00653E  0012               	return		;funcret
  8133  006540                     __end_of_USBSuspend:
  8134                           	opt stack 0
  8135                           tosu	equ	0xFFF
  8136                           tosh	equ	0xFFE
  8137                           tosl	equ	0xFFD
  8138                           pclath	equ	0xFFA
  8139                           tblptru	equ	0xFF8
  8140                           tblptrh	equ	0xFF7
  8141                           tblptrl	equ	0xFF6
  8142                           tablat	equ	0xFF5
  8143                           prodh	equ	0xFF4
  8144                           prodl	equ	0xFF3
  8145                           intcon	equ	0xFF2
  8146                           intcon2	equ	0xFF1
  8147                           intcon3	equ	0xFF0
  8148                           postinc0	equ	0xFEE
  8149                           plusw0	equ	0xFEB
  8150                           wreg	equ	0xFE8
  8151                           postinc1	equ	0xFE6
  8152                           postdec1	equ	0xFE5
  8153                           fsr1h	equ	0xFE2
  8154                           fsr1l	equ	0xFE1
  8155                           indf2	equ	0xFDF
  8156                           postinc2	equ	0xFDE
  8157                           postdec2	equ	0xFDD
  8158                           plusw2	equ	0xFDB
  8159                           fsr2h	equ	0xFDA
  8160                           fsr2l	equ	0xFD9
  8161                           status	equ	0xFD8
  8162                           
  8163 ;; *************** function _USBStallHandler *****************
  8164 ;; Defined at:
  8165 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;		None
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;		None
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1    wreg      void 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8182 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8183 ;;Total ram usage:        1 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:   11
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_USBDeviceTasks
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           	psect	text31
  8194  0060C0                     __ptext31:
  8195                           	opt stack 0
  8196  0060C0                     _USBStallHandler:
  8197                           	opt stack 15
  8198                           
  8199                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8200                           
  8201                           ;incstack = 0
  8202  0060C0  010F               	movlb	15	; () banked
  8203  0060C2  A126               	btfss	38,0,b	;volatile
  8204  0060C4  D01D               	goto	l1760
  8205                           
  8206                           ; BSR set to: 15
  8207                           ;usb_device.c: 2233: {
  8208                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8209  0060C6  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8210  0060CA  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8211  0060CE  0E80               	movlw	128
  8212  0060D0  18DE               	xorwf	postinc2,w,c
  8213  0060D2  A4D8               	btfss	status,2,c
  8214  0060D4  D014               	goto	l1761
  8215                           
  8216                           ; BSR set to: 15
  8217  0060D6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8218  0060DA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8219  0060DE  0E84               	movlw	132
  8220  0060E0  18DE               	xorwf	postinc2,w,c
  8221  0060E2  A4D8               	btfss	status,2,c
  8222  0060E4  D00C               	goto	l1761
  8223                           
  8224                           ; BSR set to: 15
  8225                           ;usb_device.c: 2236: {
  8226                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8227  0060E6  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8228  0060EA  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8229  0060EE  0E0C               	movlw	12
  8230  0060F0  6EDF               	movwf	indf2,c
  8231                           
  8232                           ; BSR set to: 15
  8233                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8234  0060F2  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8235  0060F6  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8236  0060FA  0E00               	movlw	0
  8237  0060FC  8EDB               	bsf	plusw2,7,c
  8238  0060FE                     l1761:
  8239                           
  8240                           ; BSR set to: 15
  8241                           ;usb_device.c: 2240: }
  8242                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8243                           
  8244                           ; BSR set to: 15
  8245  0060FE  9126               	bcf	38,0,b	;volatile
  8246  006100                     l1760:
  8247                           
  8248                           ; BSR set to: 15
  8249                           ;usb_device.c: 2242: }
  8250                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8251  006100  9A62               	bcf	3938,5,c	;volatile
  8252                           
  8253                           ; BSR set to: 15
  8254  006102  0012               	return		;funcret
  8255  006104                     __end_of_USBStallHandler:
  8256                           	opt stack 0
  8257                           tosu	equ	0xFFF
  8258                           tosh	equ	0xFFE
  8259                           tosl	equ	0xFFD
  8260                           pclath	equ	0xFFA
  8261                           tblptru	equ	0xFF8
  8262                           tblptrh	equ	0xFF7
  8263                           tblptrl	equ	0xFF6
  8264                           tablat	equ	0xFF5
  8265                           prodh	equ	0xFF4
  8266                           prodl	equ	0xFF3
  8267                           intcon	equ	0xFF2
  8268                           intcon2	equ	0xFF1
  8269                           intcon3	equ	0xFF0
  8270                           postinc0	equ	0xFEE
  8271                           plusw0	equ	0xFEB
  8272                           wreg	equ	0xFE8
  8273                           postinc1	equ	0xFE6
  8274                           postdec1	equ	0xFE5
  8275                           fsr1h	equ	0xFE2
  8276                           fsr1l	equ	0xFE1
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           plusw2	equ	0xFDB
  8281                           fsr2h	equ	0xFDA
  8282                           fsr2l	equ	0xFD9
  8283                           status	equ	0xFD8
  8284                           
  8285 ;; *************** function _USBIncrement1msInternalTimers *****************
  8286 ;; Defined at:
  8287 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;		None
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8305 ;;Total ram usage:        0 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:   11
  8308 ;; This function calls:
  8309 ;;		Nothing
  8310 ;; This function is called by:
  8311 ;;		_USBDeviceTasks
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text32
  8316  00680E                     __ptext32:
  8317                           	opt stack 0
  8318  00680E                     _USBIncrement1msInternalTimers:
  8319                           	opt stack 15
  8320                           
  8321                           ;usb_device.c: 3050: USB1msTickCount++;
  8322                           
  8323                           ; BSR set to: 15
  8324                           ;incstack = 0
  8325  00680E  0E01               	movlw	1
  8326  006810  0103               	movlb	3	; () banked
  8327  006812  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8328  006814  0E00               	movlw	0
  8329  006816  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8330  006818  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8331  00681A  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8332                           
  8333                           ; BSR set to: 3
  8334                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8335  00681C  0101               	movlb	1	; () banked
  8336  00681E  51E0               	movf	_USBBusIsSuspended& (0+255),w,b
  8337  006820  A4D8               	btfss	status,2,c
  8338  006822  0012               	return	
  8339                           
  8340                           ; BSR set to: 1
  8341                           ;usb_device.c: 3052: {
  8342                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8343  006824  2BDE               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8344                           
  8345                           ; BSR set to: 1
  8346                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8347  006826  51DE               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8348  006828  A4D8               	btfss	status,2,c
  8349  00682A  0012               	return	
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;usb_device.c: 3056: {
  8353                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8354  00682C  69DE               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8355                           
  8356                           ; BSR set to: 1
  8357  00682E  0012               	return	
  8358  006830                     __end_of_USBIncrement1msInternalTimers:
  8359                           	opt stack 0
  8360                           tosu	equ	0xFFF
  8361                           tosh	equ	0xFFE
  8362                           tosl	equ	0xFFD
  8363                           pclath	equ	0xFFA
  8364                           tblptru	equ	0xFF8
  8365                           tblptrh	equ	0xFF7
  8366                           tblptrl	equ	0xFF6
  8367                           tablat	equ	0xFF5
  8368                           prodh	equ	0xFF4
  8369                           prodl	equ	0xFF3
  8370                           intcon	equ	0xFF2
  8371                           intcon2	equ	0xFF1
  8372                           intcon3	equ	0xFF0
  8373                           postinc0	equ	0xFEE
  8374                           plusw0	equ	0xFEB
  8375                           wreg	equ	0xFE8
  8376                           postinc1	equ	0xFE6
  8377                           postdec1	equ	0xFE5
  8378                           fsr1h	equ	0xFE2
  8379                           fsr1l	equ	0xFE1
  8380                           indf2	equ	0xFDF
  8381                           postinc2	equ	0xFDE
  8382                           postdec2	equ	0xFDD
  8383                           plusw2	equ	0xFDB
  8384                           fsr2h	equ	0xFDA
  8385                           fsr2l	equ	0xFD9
  8386                           status	equ	0xFD8
  8387                           
  8388 ;; *************** function _USBDeviceInit *****************
  8389 ;; Defined at:
  8390 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  i               1   37[BANK0 ] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;Total ram usage:        1 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:   12
  8411 ;; This function calls:
  8412 ;;		_memset
  8413 ;; This function is called by:
  8414 ;;		_USBDeviceTasks
  8415 ;;		_UsbDevice_MainTask
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text33
  8420  00258A                     __ptext33:
  8421                           	opt stack 0
  8422  00258A                     _USBDeviceInit:
  8423                           	opt stack 14
  8424                           
  8425                           ;usb_device.c: 297: uint8_t i;
  8426                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8427                           
  8428                           ; BSR set to: 1
  8429                           ;incstack = 0
  8430  00258A  98A0               	bcf	4000,4,c	;volatile
  8431                           
  8432                           ;usb_device.c: 303: ;
  8433                           ;usb_device.c: 306: {UEIR = 0;};
  8434  00258C  0E00               	movlw	0
  8435  00258E  6E63               	movwf	3939,c	;volatile
  8436                           
  8437                           ;usb_device.c: 309: {UIR = 0;};
  8438  002590  0E00               	movlw	0
  8439  002592  6E62               	movwf	3938,c	;volatile
  8440                           
  8441                           ;usb_device.c: 312: UEP0 = 0;
  8442  002594  0E00               	movlw	0
  8443  002596  010F               	movlb	15	; () banked
  8444  002598  6F26               	movwf	38,b	;volatile
  8445                           
  8446                           ; BSR set to: 15
  8447                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8448  00259A  0E27               	movlw	39
  8449  00259C  0100               	movlb	0	; () banked
  8450  00259E  6F7D               	movwf	memset@p1& (0+255),b
  8451  0025A0  0E0F               	movlw	15
  8452  0025A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8453  0025A4  0E00               	movlw	0
  8454  0025A6  6F80               	movwf	(memset@c+1)& (0+255),b
  8455  0025A8  0E00               	movlw	0
  8456  0025AA  6F7F               	movwf	memset@c& (0+255),b
  8457  0025AC  0E00               	movlw	0
  8458  0025AE  6F82               	movwf	(memset@n+1)& (0+255),b
  8459  0025B0  0E02               	movlw	2
  8460  0025B2  6F81               	movwf	memset@n& (0+255),b
  8461  0025B4  ECD1  F032         	call	_memset	;wreg free
  8462                           
  8463                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8464  0025B8  0E16               	movlw	22
  8465  0025BA  010F               	movlb	15	; () banked
  8466  0025BC  6F39               	movwf	57,b	;volatile
  8467                           
  8468                           ; BSR set to: 15
  8469  0025BE  0E9F               	movlw	159
  8470  0025C0  6F37               	movwf	55,b	;volatile
  8471                           
  8472                           ; BSR set to: 15
  8473  0025C2  0E7B               	movlw	123
  8474  0025C4  6F36               	movwf	54,b	;volatile
  8475                           
  8476                           ; BSR set to: 15
  8477                           ;usb_device.c: 319: ;
  8478                           ;usb_device.c: 322: ;
  8479                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8480  0025C6  0E00               	movlw	0
  8481  0025C8  0100               	movlb	0	; () banked
  8482  0025CA  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8483  0025CC                     l14697:
  8484                           
  8485                           ; BSR set to: 0
  8486  0025CC  0E0B               	movlw	11
  8487  0025CE  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8488  0025D0  D001               	goto	l1604
  8489  0025D2  D00E               	goto	u13830
  8490  0025D4                     l1604:
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;usb_device.c: 326: {
  8494                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8495                           
  8496                           ; BSR set to: 0
  8497  0025D4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8498  0025D6  0D04               	mullw	4
  8499  0025D8  0E00               	movlw	0
  8500  0025DA  24F3               	addwf	prodl,w,c
  8501  0025DC  6ED9               	movwf	fsr2l,c
  8502  0025DE  0E04               	movlw	4
  8503  0025E0  20F4               	addwfc	prodh,w,c
  8504  0025E2  6EDA               	movwf	fsr2h,c
  8505  0025E4  6ADE               	clrf	postinc2,c
  8506  0025E6  6ADE               	clrf	postinc2,c
  8507  0025E8  6ADE               	clrf	postinc2,c
  8508  0025EA  6ADD               	clrf	postdec2,c
  8509                           
  8510                           ; BSR set to: 0
  8511  0025EC  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8512  0025EE  D7EE               	goto	l14697
  8513  0025F0                     u13830:
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;usb_device.c: 328: }
  8517                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8518  0025F0  8C65               	bsf	3941,6,c	;volatile
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;usb_device.c: 334: UADDR = 0x00;
  8522  0025F2  0E00               	movlw	0
  8523  0025F4  010F               	movlb	15	; () banked
  8524  0025F6  6F38               	movwf	56,b	;volatile
  8525                           
  8526                           ; BSR set to: 15
  8527                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8528  0025F8  9865               	bcf	3941,4,c	;volatile
  8529                           
  8530                           ; BSR set to: 15
  8531                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8532  0025FA  9C65               	bcf	3941,6,c	;volatile
  8533  0025FC                     
  8534                           ;usb_device.c: 344: {
  8535                           ;usb_device.c: 345: (UIR &= 0xF7);
  8536                           
  8537                           ; BSR set to: 15
  8538  0025FC  9662               	bcf	3938,3,c	;volatile
  8539                           
  8540                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8541  0025FE  0E00               	movlw	0
  8542  002600  0100               	movlb	0	; () banked
  8543  002602  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8547  002604  0E00               	movlw	0
  8548  002606  0101               	movlb	1	; () banked
  8549  002608  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8550                           
  8551                           ; BSR set to: 1
  8552                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8553  00260A  0E00               	movlw	0
  8554  00260C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8555  00260E  0E00               	movlw	0
  8556  002610  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8557                           
  8558                           ; BSR set to: 1
  8559                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8560  002612  B662               	btfsc	3938,3,c	;volatile
  8561  002614  D7F3               	goto	l1606
  8562                           
  8563                           ; BSR set to: 1
  8564                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8565                           
  8566                           ; BSR set to: 1
  8567  002616  0E01               	movlw	1
  8568  002618  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8569                           
  8570                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8571  00261A  0E01               	movlw	1
  8572  00261C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8573                           
  8574                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8575  00261E  0E00               	movlw	0
  8576  002620  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8577                           
  8578                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8579  002622  0E00               	movlw	0
  8580  002624  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8581                           
  8582                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8583  002626  0E00               	movlw	0
  8584  002628  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  8585                           
  8586                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8587  00262A  0E00               	movlw	0
  8588  00262C  0100               	movlb	0	; () banked
  8589  00262E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8590  002630                     l14725:
  8591                           
  8592                           ; BSR set to: 0
  8593  002630  0E02               	movlw	2
  8594  002632  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8595  002634  D001               	goto	l1608
  8596  002636  D02E               	goto	u13860
  8597  002638                     l1608:
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;usb_device.c: 364: {
  8601                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8602                           
  8603                           ; BSR set to: 0
  8604  002638  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8605  00263A  0D02               	mullw	2
  8606  00263C  0EB6               	movlw	low _pBDTEntryIn
  8607  00263E  24F3               	addwf	prodl,w,c
  8608  002640  6ED9               	movwf	fsr2l,c
  8609  002642  0E00               	movlw	high _pBDTEntryIn
  8610  002644  20F4               	addwfc	prodh,w,c
  8611  002646  6EDA               	movwf	fsr2h,c
  8612  002648  0E00               	movlw	0
  8613  00264A  6EDE               	movwf	postinc2,c
  8614  00264C  0E00               	movlw	0
  8615  00264E  6EDD               	movwf	postdec2,c
  8616                           
  8617                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8618  002650  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8619  002652  0D02               	mullw	2
  8620  002654  0E0E               	movlw	low _pBDTEntryOut
  8621  002656  24F3               	addwf	prodl,w,c
  8622  002658  6ED9               	movwf	fsr2l,c
  8623  00265A  0E03               	movlw	high _pBDTEntryOut
  8624  00265C  20F4               	addwfc	prodh,w,c
  8625  00265E  6EDA               	movwf	fsr2h,c
  8626  002660  0E00               	movlw	0
  8627  002662  6EDE               	movwf	postinc2,c
  8628  002664  0E00               	movlw	0
  8629  002666  6EDD               	movwf	postdec2,c
  8630                           
  8631                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8632  002668  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8633  00266A  0D01               	mullw	1
  8634  00266C  0ED1               	movlw	low _ep_data_in
  8635  00266E  24F3               	addwf	prodl,w,c
  8636  002670  6ED9               	movwf	fsr2l,c
  8637  002672  0E02               	movlw	high _ep_data_in
  8638  002674  20F4               	addwfc	prodh,w,c
  8639  002676  6EDA               	movwf	fsr2h,c
  8640  002678  0E00               	movlw	0
  8641  00267A  6EDF               	movwf	indf2,c
  8642                           
  8643                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8644  00267C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8645  00267E  0D01               	mullw	1
  8646  002680  0ECE               	movlw	low _ep_data_out
  8647  002682  24F3               	addwf	prodl,w,c
  8648  002684  6ED9               	movwf	fsr2l,c
  8649  002686  0E02               	movlw	high _ep_data_out
  8650  002688  20F4               	addwfc	prodh,w,c
  8651  00268A  6EDA               	movwf	fsr2h,c
  8652  00268C  0E00               	movlw	0
  8653  00268E  6EDF               	movwf	indf2,c
  8654                           
  8655                           ; BSR set to: 0
  8656  002690  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8657  002692  D7CE               	goto	l14725
  8658  002694                     u13860:
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;usb_device.c: 369: }
  8662                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8663                           
  8664                           ; BSR set to: 0
  8665  002694  0E08               	movlw	8
  8666  002696  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8667  002698  0E04               	movlw	4
  8668  00269A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8672  00269C  0E16               	movlw	22
  8673  00269E  010F               	movlb	15	; () banked
  8674  0026A0  6F26               	movwf	38,b	;volatile
  8675                           
  8676                           ; BSR set to: 15
  8677                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8678  0026A2  0E04               	movlw	4
  8679  0026A4  0104               	movlb	4	; () banked
  8680  0026A6  6F03               	movwf	3,b	;volatile
  8681  0026A8  0E30               	movlw	48
  8682  0026AA  6F02               	movwf	2,b	;volatile
  8683                           
  8684                           ; BSR set to: 4
  8685                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8686  0026AC  0E08               	movlw	8
  8687  0026AE  6F01               	movwf	1,b	;volatile
  8688                           
  8689                           ; BSR set to: 4
  8690                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8691  0026B0  0E04               	movlw	4
  8692  0026B2  6F00               	movwf	0,b	;volatile
  8693                           
  8694                           ; BSR set to: 4
  8695                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8696  0026B4  8F00               	bsf	0,7,b	;volatile
  8697                           
  8698                           ; BSR set to: 4
  8699                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8700  0026B6  0E00               	movlw	0
  8701  0026B8  0100               	movlb	0	; () banked
  8702  0026BA  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;usb_device.c: 384: USB1msTickCount = 0;
  8706  0026BC  0E00               	movlw	0
  8707  0026BE  0103               	movlb	3	; () banked
  8708  0026C0  6F18               	movwf	_USB1msTickCount& (0+255),b
  8709  0026C2  0E00               	movlw	0
  8710  0026C4  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8711  0026C6  0E00               	movlw	0
  8712  0026C8  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8713  0026CA  0E00               	movlw	0
  8714  0026CC  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8715                           
  8716                           ; BSR set to: 3
  8717                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8718  0026CE  0E00               	movlw	0
  8719  0026D0  0101               	movlb	1	; () banked
  8720  0026D2  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8721                           
  8722                           ; BSR set to: 1
  8723                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8724  0026D4  0E00               	movlw	0
  8725  0026D6  0100               	movlb	0	; () banked
  8726  0026D8  6FCE               	movwf	_USBDeviceState& (0+255),b
  8727                           
  8728                           ; BSR set to: 0
  8729  0026DA  0012               	return		;funcret
  8730  0026DC                     __end_of_USBDeviceInit:
  8731                           	opt stack 0
  8732                           tosu	equ	0xFFF
  8733                           tosh	equ	0xFFE
  8734                           tosl	equ	0xFFD
  8735                           pclath	equ	0xFFA
  8736                           tblptru	equ	0xFF8
  8737                           tblptrh	equ	0xFF7
  8738                           tblptrl	equ	0xFF6
  8739                           tablat	equ	0xFF5
  8740                           prodh	equ	0xFF4
  8741                           prodl	equ	0xFF3
  8742                           intcon	equ	0xFF2
  8743                           intcon2	equ	0xFF1
  8744                           intcon3	equ	0xFF0
  8745                           postinc0	equ	0xFEE
  8746                           plusw0	equ	0xFEB
  8747                           wreg	equ	0xFE8
  8748                           postinc1	equ	0xFE6
  8749                           postdec1	equ	0xFE5
  8750                           fsr1h	equ	0xFE2
  8751                           fsr1l	equ	0xFE1
  8752                           indf2	equ	0xFDF
  8753                           postinc2	equ	0xFDE
  8754                           postdec2	equ	0xFDD
  8755                           plusw2	equ	0xFDB
  8756                           fsr2h	equ	0xFDA
  8757                           fsr2l	equ	0xFD9
  8758                           status	equ	0xFD8
  8759                           
  8760 ;; *************** function _USBCtrlEPService *****************
  8761 ;; Defined at:
  8762 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;		None
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;		None
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8778 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8779 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;Total ram usage:        1 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; Hardware stack levels required when called:   18
  8783 ;; This function calls:
  8784 ;;		_USBCtrlTrfInHandler
  8785 ;;		_USBCtrlTrfOutHandler
  8786 ;;		_USBCtrlTrfSetupHandler
  8787 ;;		_memcpy
  8788 ;; This function is called by:
  8789 ;;		_USBDeviceTasks
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           	psect	text34
  8794  004E92                     __ptext34:
  8795                           	opt stack 0
  8796  004E92                     _USBCtrlEPService:
  8797                           	opt stack 8
  8798                           
  8799                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;incstack = 0
  8803  004E92  0E2D               	movlw	45
  8804  004E94  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8805                           
  8806                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8807  004E96  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8808  004E9A  0EFD               	movlw	253
  8809  004E9C  0100               	movlb	0	; () banked
  8810  004E9E  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8811  004EA0  A4D8               	btfss	status,2,c
  8812  004EA2  D038               	goto	l1774
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;usb_device.c: 2401: {
  8816                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8817  004EA4  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8818  004EA8  90D8               	bcf	status,0,c
  8819  004EAA  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8820  004EAC  0E3F               	movlw	63
  8821  004EAE  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8822  004EB0  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8823  004EB2  0D04               	mullw	4
  8824  004EB4  0E00               	movlw	0
  8825  004EB6  24F3               	addwf	prodl,w,c
  8826  004EB8  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8827  004EBA  0E04               	movlw	4
  8828  004EBC  20F4               	addwfc	prodh,w,c
  8829  004EBE  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8833  004EC0  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8834  004EC4  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8838  004EC8  0E04               	movlw	4
  8839  004ECA  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8843  004ECC  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8844  004ED0  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8845  004ED4  30DF               	rrcf	223,w,c
  8846  004ED6  32E8               	rrcf	wreg,f,c
  8847  004ED8  0B0F               	andlw	15
  8848  004EDA  0A0D               	xorlw	13
  8849  004EDC  A4D8               	btfss	status,2,c
  8850  004EDE  D017               	goto	l1775
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;usb_device.c: 2418: {
  8854                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8855  004EE0  0E30               	movlw	48
  8856  004EE2  6F7D               	movwf	memcpy@d1& (0+255),b
  8857  004EE4  0E04               	movlw	4
  8858  004EE6  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8859  004EE8  EE20 F002          	lfsr	2,2
  8860  004EEC  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8861  004EEE  26D9               	addwf	fsr2l,f,c
  8862  004EF0  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8863  004EF2  22DA               	addwfc	fsr2h,f,c
  8864  004EF4  CFDE F07F          	movff	postinc2,memcpy@s1
  8865  004EF8  CFDD F080          	movff	postdec2,memcpy@s1+1
  8866  004EFC  0E00               	movlw	0
  8867  004EFE  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8868  004F00  0E08               	movlw	8
  8869  004F02  6F81               	movwf	memcpy@n& (0+255),b
  8870  004F04  EC19  F030         	call	_memcpy	;wreg free
  8871                           
  8872                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8873  004F08  ECFE  F028         	call	_USBCtrlTrfSetupHandler	;wreg free
  8874                           
  8875                           ;usb_device.c: 2427: }
  8876  004F0C  0012               	return	
  8877  004F0E                     l1775:
  8878                           
  8879                           ;usb_device.c: 2428: else
  8880                           ;usb_device.c: 2429: {
  8881                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8882  004F0E  EC8B  F02B         	call	_USBCtrlTrfOutHandler	;wreg free
  8883                           
  8884                           ;usb_device.c: 2432: }
  8885                           ;usb_device.c: 2433: }
  8886  004F12  0012               	return	
  8887  004F14                     l1774:
  8888                           
  8889                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8890  004F14  0100               	movlb	0	; () banked
  8891  004F16  51D5               	movf	_USTATcopy& (0+255),w,b
  8892  004F18  0BFD               	andlw	253
  8893  004F1A  0A04               	xorlw	4
  8894  004F1C  A4D8               	btfss	status,2,c
  8895  004F1E  0012               	return	
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;usb_device.c: 2435: {
  8899                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8900  004F20  EC0B  F021         	call	_USBCtrlTrfInHandler	;wreg free
  8901  004F24  0012               	return	
  8902  004F26                     __end_of_USBCtrlEPService:
  8903                           	opt stack 0
  8904                           tosu	equ	0xFFF
  8905                           tosh	equ	0xFFE
  8906                           tosl	equ	0xFFD
  8907                           pclath	equ	0xFFA
  8908                           tblptru	equ	0xFF8
  8909                           tblptrh	equ	0xFF7
  8910                           tblptrl	equ	0xFF6
  8911                           tablat	equ	0xFF5
  8912                           prodh	equ	0xFF4
  8913                           prodl	equ	0xFF3
  8914                           intcon	equ	0xFF2
  8915                           intcon2	equ	0xFF1
  8916                           intcon3	equ	0xFF0
  8917                           postinc0	equ	0xFEE
  8918                           plusw0	equ	0xFEB
  8919                           wreg	equ	0xFE8
  8920                           postinc1	equ	0xFE6
  8921                           postdec1	equ	0xFE5
  8922                           fsr1h	equ	0xFE2
  8923                           fsr1l	equ	0xFE1
  8924                           indf2	equ	0xFDF
  8925                           postinc2	equ	0xFDE
  8926                           postdec2	equ	0xFDD
  8927                           plusw2	equ	0xFDB
  8928                           fsr2h	equ	0xFDA
  8929                           fsr2l	equ	0xFD9
  8930                           status	equ	0xFD8
  8931                           
  8932 ;; *************** function _memcpy *****************
  8933 ;; Defined at:
  8934 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;  d1              2   29[BANK0 ] PTR void 
  8937 ;;		 -> SetupPkt(8), 
  8938 ;;  s1              2   31[BANK0 ] PTR const void 
  8939 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8940 ;;  n               2   33[BANK0 ] unsigned int 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8943 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8944 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8945 ;;		 -> SetupPkt(8), 
  8946 ;;  tmp             1   35[BANK0 ] unsigned char 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  2   29[BANK0 ] PTR void 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8956 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8957 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8959 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8960 ;;Total ram usage:       11 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; Hardware stack levels required when called:   11
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_USBCtrlEPService
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text35
  8971  006032                     __ptext35:
  8972                           	opt stack 0
  8973  006032                     _memcpy:
  8974                           	opt stack 14
  8975                           
  8976                           ;incstack = 0
  8977  006032  C07F  F086         	movff	memcpy@s1,memcpy@s
  8978  006036  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8979  00603A  C07D  F084         	movff	memcpy@d1,memcpy@d
  8980  00603E  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8981  006042  D011               	goto	l3396
  8982  006044                     l13897:
  8983  006044  C086  FFD9         	movff	memcpy@s,fsr2l
  8984  006048  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8985  00604C  50DF               	movf	indf2,w,c
  8986  00604E  0100               	movlb	0	; () banked
  8987  006050  6F83               	movwf	memcpy@tmp& (0+255),b
  8988                           
  8989                           ; BSR set to: 0
  8990  006052  4B86               	infsnz	memcpy@s& (0+255),f,b
  8991  006054  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8992                           
  8993                           ; BSR set to: 0
  8994  006056  C084  FFD9         	movff	memcpy@d,fsr2l
  8995  00605A  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8996  00605E  C083  FFDF         	movff	memcpy@tmp,indf2
  8997                           
  8998                           ; BSR set to: 0
  8999  006062  4B84               	infsnz	memcpy@d& (0+255),f,b
  9000  006064  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9001  006066                     l3396:
  9002                           
  9003                           ; BSR set to: 0
  9004  006066  0100               	movlb	0	; () banked
  9005  006068  0781               	decf	memcpy@n& (0+255),f,b
  9006  00606A  A0D8               	btfss	status,0,c
  9007  00606C  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9008  00606E  2981               	incf	memcpy@n& (0+255),w,b
  9009  006070  E1E9               	bnz	l13897
  9010  006072  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9011  006074  B4D8               	btfsc	status,2,c
  9012  006076  0012               	return	
  9013  006078  D7E5               	goto	l3397
  9014  00607A                     __end_of_memcpy:
  9015                           	opt stack 0
  9016                           tosu	equ	0xFFF
  9017                           tosh	equ	0xFFE
  9018                           tosl	equ	0xFFD
  9019                           pclath	equ	0xFFA
  9020                           tblptru	equ	0xFF8
  9021                           tblptrh	equ	0xFF7
  9022                           tblptrl	equ	0xFF6
  9023                           tablat	equ	0xFF5
  9024                           prodh	equ	0xFF4
  9025                           prodl	equ	0xFF3
  9026                           intcon	equ	0xFF2
  9027                           intcon2	equ	0xFF1
  9028                           intcon3	equ	0xFF0
  9029                           postinc0	equ	0xFEE
  9030                           plusw0	equ	0xFEB
  9031                           wreg	equ	0xFE8
  9032                           postinc1	equ	0xFE6
  9033                           postdec1	equ	0xFE5
  9034                           fsr1h	equ	0xFE2
  9035                           fsr1l	equ	0xFE1
  9036                           indf2	equ	0xFDF
  9037                           postinc2	equ	0xFDE
  9038                           postdec2	equ	0xFDD
  9039                           plusw2	equ	0xFDB
  9040                           fsr2h	equ	0xFDA
  9041                           fsr2l	equ	0xFD9
  9042                           status	equ	0xFD8
  9043                           
  9044 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9045 ;; Defined at:
  9046 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;		None
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;		None
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  1    wreg      void 
  9053 ;; Registers used:
  9054 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9064 ;;Total ram usage:        0 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:   17
  9067 ;; This function calls:
  9068 ;;		_USBCheckStdRequest
  9069 ;;		_USBCtrlEPServiceComplete
  9070 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9071 ;; This function is called by:
  9072 ;;		_USBCtrlEPService
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text36
  9077  0051FC                     __ptext36:
  9078                           	opt stack 0
  9079  0051FC                     _USBCtrlTrfSetupHandler:
  9080                           	opt stack 8
  9081                           
  9082                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;incstack = 0
  9086  0051FC  0E00               	movlw	0
  9087  0051FE  0100               	movlb	0	; () banked
  9088  005200  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9089                           
  9090                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9091  005202  0E00               	movlw	0
  9092  005204  6FCA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9093                           
  9094                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9095  005206  0E00               	movlw	0
  9096  005208  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9097                           
  9098                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9099  00520A  0E00               	movlw	0
  9100  00520C  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9101                           
  9102                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9103  00520E  0E00               	movlw	0
  9104  005210  0101               	movlb	1	; () banked
  9105  005212  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9106                           
  9107                           ;usb_device.c: 2493: controlTransferState = 0;
  9108  005214  0E00               	movlw	0
  9109  005216  0100               	movlb	0	; () banked
  9110  005218  6FCC               	movwf	_controlTransferState& (0+255),b
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9114  00521A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9115  00521E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9116  005222  0E7F               	movlw	127
  9117  005224  16DF               	andwf	indf2,f,c
  9118                           
  9119                           ; BSR set to: 0
  9120                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9121  005226  0E04               	movlw	4
  9122  005228  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9126  00522A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9127  00522E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9128  005232  0E7F               	movlw	127
  9129  005234  16DF               	andwf	indf2,f,c
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9133  005236  0E04               	movlw	4
  9134  005238  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9138  00523A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9139  00523E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9140  005242  0E7F               	movlw	127
  9141  005244  16DF               	andwf	indf2,f,c
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9145  005246  0E00               	movlw	0
  9146  005248  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9150  00524A  0E00               	movlw	0
  9151  00524C  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9152  00524E  0E00               	movlw	0
  9153  005250  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9157  005252  0E00               	movlw	0
  9158  005254  0101               	movlb	1	; () banked
  9159  005256  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9160                           
  9161                           ; BSR set to: 1
  9162                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9163  005258  0E00               	movlw	0
  9164  00525A  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9165  00525C  0E00               	movlw	0
  9166  00525E  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9167                           
  9168                           ; BSR set to: 1
  9169                           ;usb_device.c: 2517: USBCheckStdRequest();
  9170  005260  ECF0  F01A         	call	_USBCheckStdRequest	;wreg free
  9171                           
  9172                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9173  005264  0E00               	movlw	0
  9174  005266  0100               	movlb	0	; () banked
  9175  005268  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9176  00526A  0E03               	movlw	3
  9177  00526C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9178  00526E  0E00               	movlw	0
  9179  005270  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9180  005272  0E00               	movlw	0
  9181  005274  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9182  005276  0E00               	movlw	0
  9183  005278  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9184  00527A  0E00               	movlw	0
  9185  00527C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9186  00527E  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9187                           
  9188                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9189  005282  EC2E  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9190  005286  0012               	return		;funcret
  9191  005288                     __end_of_USBCtrlTrfSetupHandler:
  9192                           	opt stack 0
  9193                           tosu	equ	0xFFF
  9194                           tosh	equ	0xFFE
  9195                           tosl	equ	0xFFD
  9196                           pclath	equ	0xFFA
  9197                           tblptru	equ	0xFF8
  9198                           tblptrh	equ	0xFF7
  9199                           tblptrl	equ	0xFF6
  9200                           tablat	equ	0xFF5
  9201                           prodh	equ	0xFF4
  9202                           prodl	equ	0xFF3
  9203                           intcon	equ	0xFF2
  9204                           intcon2	equ	0xFF1
  9205                           intcon3	equ	0xFF0
  9206                           postinc0	equ	0xFEE
  9207                           plusw0	equ	0xFEB
  9208                           wreg	equ	0xFE8
  9209                           postinc1	equ	0xFE6
  9210                           postdec1	equ	0xFE5
  9211                           fsr1h	equ	0xFE2
  9212                           fsr1l	equ	0xFE1
  9213                           indf2	equ	0xFDF
  9214                           postinc2	equ	0xFDE
  9215                           postdec2	equ	0xFDD
  9216                           plusw2	equ	0xFDB
  9217                           fsr2h	equ	0xFDA
  9218                           fsr2l	equ	0xFD9
  9219                           status	equ	0xFD8
  9220                           
  9221 ;; *************** function _USBCtrlEPServiceComplete *****************
  9222 ;; Defined at:
  9223 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;		None
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  1    wreg      void 
  9230 ;; Registers used:
  9231 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9241 ;;Total ram usage:        0 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:   13
  9244 ;; This function calls:
  9245 ;;		_USBCtrlEPAllowDataStage
  9246 ;;		_USBCtrlEPAllowStatusStage
  9247 ;; This function is called by:
  9248 ;;		_USBCtrlTrfSetupHandler
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text37
  9253  00305C                     __ptext37:
  9254                           	opt stack 0
  9255  00305C                     _USBCtrlEPServiceComplete:
  9256                           	opt stack 11
  9257                           
  9258                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9259                           
  9260                           ;incstack = 0
  9261  00305C  9865               	bcf	3941,4,c	;volatile
  9262                           
  9263                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9264  00305E  0100               	movlb	0	; () banked
  9265  003060  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9266  003062  D03B               	goto	l1684
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;usb_device.c: 1647: {
  9270                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9271  003064  0101               	movlb	1	; () banked
  9272  003066  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9273  003068  D00C               	goto	l1685
  9274                           
  9275                           ; BSR set to: 1
  9276                           ;usb_device.c: 1649: {
  9277                           ;usb_device.c: 1650: controlTransferState = 2;
  9278  00306A  0E02               	movlw	2
  9279  00306C  0100               	movlb	0	; () banked
  9280  00306E  6FCC               	movwf	_controlTransferState& (0+255),b
  9281                           
  9282                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9283  003070  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9284  003072  B4D8               	btfsc	status,2,c
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;usb_device.c: 1662: {
  9288                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9289  003074  EC7F  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9290                           
  9291                           ;usb_device.c: 1664: }
  9292                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9293  003078  0E00               	movlw	0
  9294  00307A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9295                           
  9296                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9297  00307C  0E00               	movlw	0
  9298  00307E  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9299                           
  9300                           ;usb_device.c: 1670: }
  9301  003080  0012               	return	
  9302  003082                     l1685:
  9303                           
  9304                           ;usb_device.c: 1671: else
  9305                           ;usb_device.c: 1672: {
  9306                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9307  003082  0100               	movlb	0	; () banked
  9308  003084  EE20 F001          	lfsr	2,1
  9309  003088  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9310  00308A  26D9               	addwf	fsr2l,f,c
  9311  00308C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9312  00308E  22DA               	addwfc	fsr2h,f,c
  9313  003090  0E08               	movlw	8
  9314  003092  6EDF               	movwf	indf2,c
  9315                           
  9316                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9317  003094  EE20 F002          	lfsr	2,2
  9318  003098  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9319  00309A  26D9               	addwf	fsr2l,f,c
  9320  00309C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9321  00309E  22DA               	addwfc	fsr2h,f,c
  9322  0030A0  0E30               	movlw	48
  9323  0030A2  6EDE               	movwf	postinc2,c
  9324  0030A4  0E04               	movlw	4
  9325  0030A6  6EDD               	movwf	postdec2,c
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9329  0030A8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9330  0030AC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9331  0030B0  0E0C               	movlw	12
  9332  0030B2  6EDF               	movwf	indf2,c
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9336  0030B4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9337  0030B8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9338  0030BC  0E00               	movlw	0
  9339  0030BE  8EDB               	bsf	plusw2,7,c
  9340                           
  9341                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9342  0030C0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9343  0030C4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9344  0030C8  0E04               	movlw	4
  9345  0030CA  6EDF               	movwf	indf2,c
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9349  0030CC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9350  0030D0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9351  0030D4  0E00               	movlw	0
  9352  0030D6  8EDB               	bsf	plusw2,7,c
  9353                           
  9354                           ; BSR set to: 0
  9355                           ;usb_device.c: 1683: }
  9356                           ;usb_device.c: 1684: }
  9357  0030D8  0012               	return	
  9358  0030DA                     l1684:
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;usb_device.c: 1685: else
  9362                           ;usb_device.c: 1686: {
  9363                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9364  0030DA  0104               	movlb	4	; () banked
  9365  0030DC  AF30               	btfss	48,7,b	;volatile
  9366  0030DE  D012               	goto	l1689
  9367                           
  9368                           ; BSR set to: 4
  9369                           ;usb_device.c: 1688: {
  9370                           ;usb_device.c: 1689: controlTransferState = 1;
  9371  0030E0  0E01               	movlw	1
  9372  0030E2  0100               	movlb	0	; () banked
  9373  0030E4  6FCC               	movwf	_controlTransferState& (0+255),b
  9374                           
  9375                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9376  0030E6  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9377  0030E8  B4D8               	btfsc	status,2,c
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;usb_device.c: 1704: {
  9381                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9382  0030EA  EC7F  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9383                           
  9384                           ;usb_device.c: 1706: }
  9385                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9386  0030EE  0E00               	movlw	0
  9387  0030F0  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9388                           
  9389                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9390  0030F2  0E00               	movlw	0
  9391  0030F4  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9392                           
  9393                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9394  0030F6  0100               	movlb	0	; () banked
  9395  0030F8  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9396  0030FA  A4D8               	btfss	status,2,c
  9397  0030FC  0012               	return	
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;usb_device.c: 1731: {
  9401                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9402  0030FE  ECB2  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9403                           
  9404                           ;usb_device.c: 1733: }
  9405                           ;usb_device.c: 1734: }
  9406  003102  0012               	return	
  9407  003104                     l1689:
  9408                           
  9409                           ;usb_device.c: 1735: else
  9410                           ;usb_device.c: 1736: {
  9411                           ;usb_device.c: 1747: controlTransferState = 2;
  9412  003104  0E02               	movlw	2
  9413  003106  0100               	movlb	0	; () banked
  9414  003108  6FCC               	movwf	_controlTransferState& (0+255),b
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9418  00310A  EE20 F001          	lfsr	2,1
  9419  00310E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9420  003110  26D9               	addwf	fsr2l,f,c
  9421  003112  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9422  003114  22DA               	addwfc	fsr2h,f,c
  9423  003116  0E08               	movlw	8
  9424  003118  6EDF               	movwf	indf2,c
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9428  00311A  EE20 F002          	lfsr	2,2
  9429  00311E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9430  003120  26D9               	addwf	fsr2l,f,c
  9431  003122  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9432  003124  22DA               	addwfc	fsr2h,f,c
  9433  003126  0E30               	movlw	48
  9434  003128  6EDE               	movwf	postinc2,c
  9435  00312A  0E04               	movlw	4
  9436  00312C  6EDD               	movwf	postdec2,c
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9440  00312E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9441  003132  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9442  003136  0E04               	movlw	4
  9443  003138  6EDF               	movwf	indf2,c
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9447  00313A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9448  00313E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9449  003142  0E00               	movlw	0
  9450  003144  8EDB               	bsf	plusw2,7,c
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9454  003146  0E00               	movlw	0
  9455  003148  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9459  00314A  0E00               	movlw	0
  9460  00314C  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9464  00314E  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9465  003150  A4D8               	btfss	status,2,c
  9466  003152  0012               	return	
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;usb_device.c: 1759: {
  9470                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9471  003154  ECB2  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9472  003158  0012               	return	
  9473  00315A                     __end_of_USBCtrlEPServiceComplete:
  9474                           	opt stack 0
  9475                           tosu	equ	0xFFF
  9476                           tosh	equ	0xFFE
  9477                           tosl	equ	0xFFD
  9478                           pclath	equ	0xFFA
  9479                           tblptru	equ	0xFF8
  9480                           tblptrh	equ	0xFF7
  9481                           tblptrl	equ	0xFF6
  9482                           tablat	equ	0xFF5
  9483                           prodh	equ	0xFF4
  9484                           prodl	equ	0xFF3
  9485                           intcon	equ	0xFF2
  9486                           intcon2	equ	0xFF1
  9487                           intcon3	equ	0xFF0
  9488                           postinc0	equ	0xFEE
  9489                           plusw0	equ	0xFEB
  9490                           wreg	equ	0xFE8
  9491                           postinc1	equ	0xFE6
  9492                           postdec1	equ	0xFE5
  9493                           fsr1h	equ	0xFE2
  9494                           fsr1l	equ	0xFE1
  9495                           indf2	equ	0xFDF
  9496                           postinc2	equ	0xFDE
  9497                           postdec2	equ	0xFDD
  9498                           plusw2	equ	0xFDB
  9499                           fsr2h	equ	0xFDA
  9500                           fsr2l	equ	0xFD9
  9501                           status	equ	0xFD8
  9502                           
  9503 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9504 ;; Defined at:
  9505 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;		None
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;		None
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  1    wreg      void 
  9512 ;; Registers used:
  9513 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9523 ;;Total ram usage:        0 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:   12
  9526 ;; This function calls:
  9527 ;;		_USBCtrlTrfTxService
  9528 ;; This function is called by:
  9529 ;;		_USBCtrlEPServiceComplete
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text38
  9534  004AFE                     __ptext38:
  9535                           	opt stack 0
  9536  004AFE                     _USBCtrlEPAllowDataStage:
  9537                           	opt stack 11
  9538                           
  9539                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9540                           
  9541                           ;incstack = 0
  9542  004AFE  0E00               	movlw	0
  9543  004B00  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9544                           
  9545                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9546  004B02  0E00               	movlw	0
  9547  004B04  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9548                           
  9549                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9550  004B06  0E02               	movlw	2
  9551  004B08  0100               	movlb	0	; () banked
  9552  004B0A  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9553  004B0C  A4D8               	btfss	status,2,c
  9554  004B0E  D01F               	goto	l1673
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;usb_device.c: 1512: {
  9558                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9559  004B10  EE20 F001          	lfsr	2,1
  9560  004B14  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9561  004B16  26D9               	addwf	fsr2l,f,c
  9562  004B18  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9563  004B1A  22DA               	addwfc	fsr2h,f,c
  9564  004B1C  0E08               	movlw	8
  9565  004B1E  6EDF               	movwf	indf2,c
  9566                           
  9567                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9568  004B20  EE20 F002          	lfsr	2,2
  9569  004B24  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9570  004B26  26D9               	addwf	fsr2l,f,c
  9571  004B28  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9572  004B2A  22DA               	addwfc	fsr2h,f,c
  9573  004B2C  0E38               	movlw	56
  9574  004B2E  6EDE               	movwf	postinc2,c
  9575  004B30  0E04               	movlw	4
  9576  004B32  6EDD               	movwf	postdec2,c
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9580  004B34  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9581  004B38  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9582  004B3C  0E48               	movlw	72
  9583  004B3E  6EDF               	movwf	indf2,c
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9587  004B40  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9588  004B44  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9589  004B48  0E00               	movlw	0
  9590  004B4A  8EDB               	bsf	plusw2,7,c
  9591                           
  9592                           ;usb_device.c: 1518: }
  9593  004B4C  0012               	return	
  9594  004B4E                     l1673:
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;usb_device.c: 1519: else
  9598                           ;usb_device.c: 1520: {
  9599                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9600                           
  9601                           ; BSR set to: 0
  9602  004B4E  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9603  004B50  0104               	movlb	4	; () banked
  9604  004B52  5D36               	subwf	54,w,b	;volatile
  9605  004B54  0100               	movlb	0	; () banked
  9606  004B56  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9607  004B58  0104               	movlb	4	; () banked
  9608  004B5A  5937               	subwfb	55,w,b	;volatile
  9609  004B5C  B0D8               	btfsc	status,0,c
  9610  004B5E  D004               	goto	l1675
  9611                           
  9612                           ; BSR set to: 4
  9613                           ;usb_device.c: 1524: {
  9614                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9615  004B60  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9616  004B64  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9617  004B68                     l1675:
  9618                           
  9619                           ; BSR set to: 4
  9620                           ;usb_device.c: 1526: }
  9621                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9622                           
  9623                           ; BSR set to: 4
  9624  004B68  ECD0  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9625                           
  9626                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9627  004B6C  0100               	movlb	0	; () banked
  9628  004B6E  EE20 F002          	lfsr	2,2
  9629  004B72  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9630  004B74  26D9               	addwf	fsr2l,f,c
  9631  004B76  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9632  004B78  22DA               	addwfc	fsr2h,f,c
  9633  004B7A  0E38               	movlw	56
  9634  004B7C  6EDE               	movwf	postinc2,c
  9635  004B7E  0E04               	movlw	4
  9636  004B80  6EDD               	movwf	postdec2,c
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9640  004B82  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9641  004B86  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9642  004B8A  0E48               	movlw	72
  9643  004B8C  6EDF               	movwf	indf2,c
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9647  004B8E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9648  004B92  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9649  004B96  0E00               	movlw	0
  9650  004B98  8EDB               	bsf	plusw2,7,c
  9651  004B9A  0012               	return	
  9652  004B9C                     __end_of_USBCtrlEPAllowDataStage:
  9653                           	opt stack 0
  9654                           tosu	equ	0xFFF
  9655                           tosh	equ	0xFFE
  9656                           tosl	equ	0xFFD
  9657                           pclath	equ	0xFFA
  9658                           tblptru	equ	0xFF8
  9659                           tblptrh	equ	0xFF7
  9660                           tblptrl	equ	0xFF6
  9661                           tablat	equ	0xFF5
  9662                           prodh	equ	0xFF4
  9663                           prodl	equ	0xFF3
  9664                           intcon	equ	0xFF2
  9665                           intcon2	equ	0xFF1
  9666                           intcon3	equ	0xFF0
  9667                           postinc0	equ	0xFEE
  9668                           plusw0	equ	0xFEB
  9669                           wreg	equ	0xFE8
  9670                           postinc1	equ	0xFE6
  9671                           postdec1	equ	0xFE5
  9672                           fsr1h	equ	0xFE2
  9673                           fsr1l	equ	0xFE1
  9674                           indf2	equ	0xFDF
  9675                           postinc2	equ	0xFDE
  9676                           postdec2	equ	0xFDD
  9677                           plusw2	equ	0xFDB
  9678                           fsr2h	equ	0xFDA
  9679                           fsr2l	equ	0xFD9
  9680                           status	equ	0xFD8
  9681                           
  9682 ;; *************** function _USBCheckStdRequest *****************
  9683 ;; Defined at:
  9684 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;		None
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  1    wreg      void 
  9691 ;; Registers used:
  9692 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9702 ;;Total ram usage:        0 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; Hardware stack levels required when called:   16
  9705 ;; This function calls:
  9706 ;;		_USBStdFeatureReqHandler
  9707 ;;		_USBStdGetDscHandler
  9708 ;;		_USBStdGetStatusHandler
  9709 ;;		_USBStdSetCfgHandler
  9710 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9711 ;; This function is called by:
  9712 ;;		_USBCtrlTrfSetupHandler
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text39
  9717  0035E0                     __ptext39:
  9718                           	opt stack 0
  9719  0035E0                     _USBCheckStdRequest:
  9720                           	opt stack 8
  9721                           
  9722                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;incstack = 0
  9726  0035E0  0104               	movlb	4	; () banked
  9727  0035E2  3930               	swapf	48,w,b	;volatile
  9728  0035E4  32E8               	rrcf	wreg,f,c
  9729  0035E6  0B03               	andlw	3
  9730  0035E8  0900               	iorlw	0
  9731  0035EA  A4D8               	btfss	status,2,c
  9732  0035EC  0012               	return	
  9733  0035EE  D048               	goto	l1808
  9734  0035F0                     l1809:
  9735                           
  9736                           ; BSR set to: 4
  9737                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9738  0035F0  0100               	movlb	0	; () banked
  9739  0035F2  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9743  0035F4  0E08               	movlw	8
  9744  0035F6  6FCE               	movwf	_USBDeviceState& (0+255),b
  9745                           
  9746                           ;usb_device.c: 2713: break;
  9747  0035F8  0012               	return	
  9748  0035FA                     
  9749                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9750                           
  9751                           ; BSR set to: 0
  9752  0035FA  ECEA  F015         	call	_USBStdGetDscHandler	;wreg free
  9753                           
  9754                           ;usb_device.c: 2716: break;
  9755  0035FE  0012               	return	
  9756  003600                     
  9757                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9758  003600  EC98  F019         	call	_USBStdSetCfgHandler	;wreg free
  9759                           
  9760                           ;usb_device.c: 2719: break;
  9761  003604  0012               	return	
  9762  003606                     
  9763                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9764  003606  0ED6               	movlw	low _USBActiveConfiguration
  9765  003608  0100               	movlb	0	; () banked
  9766  00360A  6FB0               	movwf	_inPipes& (0+255),b
  9767  00360C  0E00               	movlw	high _USBActiveConfiguration
  9768  00360E  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9772  003610  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9776  003612  0E01               	movlw	1
  9777  003614  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9781  003616  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9782                           
  9783                           ;usb_device.c: 2725: break;
  9784  003618  0012               	return	
  9785  00361A                     
  9786                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9787                           
  9788                           ; BSR set to: 0
  9789  00361A  EC86  F022         	call	_USBStdGetStatusHandler	;wreg free
  9790                           
  9791                           ;usb_device.c: 2728: break;
  9792  00361E  0012               	return	
  9793  003620                     
  9794                           ;usb_device.c: 2730: case 3:
  9795                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9796  003620  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9797                           
  9798                           ;usb_device.c: 2732: break;
  9799  003624  0012               	return	
  9800  003626                     
  9801                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9802  003626  0104               	movlb	4	; () banked
  9803  003628  5134               	movf	52,w,b	;volatile
  9804  00362A  0D01               	mullw	1
  9805  00362C  0EEF               	movlw	low _USBAlternateInterface
  9806  00362E  24F3               	addwf	prodl,w,c
  9807  003630  0100               	movlb	0	; () banked
  9808  003632  6FB0               	movwf	_inPipes& (0+255),b
  9809  003634  0E02               	movlw	high _USBAlternateInterface
  9810  003636  20F4               	addwfc	prodh,w,c
  9811  003638  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9815  00363A  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9819  00363C  0E01               	movlw	1
  9820  00363E  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9824  003640  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9825                           
  9826                           ;usb_device.c: 2738: break;
  9827  003642  0012               	return	
  9828  003644                     l1818:
  9829                           
  9830                           ; BSR set to: 4
  9831                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9832  003644  0100               	movlb	0	; () banked
  9833  003646  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9837  003648  0104               	movlb	4	; () banked
  9838  00364A  5134               	movf	52,w,b	;volatile
  9839  00364C  0D01               	mullw	1
  9840  00364E  0EEF               	movlw	low _USBAlternateInterface
  9841  003650  24F3               	addwf	prodl,w,c
  9842  003652  6ED9               	movwf	fsr2l,c
  9843  003654  0E02               	movlw	high _USBAlternateInterface
  9844  003656  20F4               	addwfc	prodh,w,c
  9845  003658  6EDA               	movwf	fsr2h,c
  9846  00365A  C432 FFDF          	movff	1074,indf2	;volatile
  9847                           
  9848                           ;usb_device.c: 2742: break;
  9849  00365E  0012               	return	
  9850  003660                     
  9851                           ; BSR set to: 4
  9852                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9853                           
  9854                           ; BSR set to: 4
  9855  003660  0E00               	movlw	0
  9856  003662  0100               	movlb	0	; () banked
  9857  003664  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9858  003666  0E02               	movlw	2
  9859  003668  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9860  00366A  0E00               	movlw	0
  9861  00366C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9862  00366E  0E00               	movlw	0
  9863  003670  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9864  003672  0E00               	movlw	0
  9865  003674  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9866  003676  0E00               	movlw	0
  9867  003678  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9868  00367A  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9869                           
  9870                           ;usb_device.c: 2749: }
  9871                           
  9872                           ;usb_device.c: 2748: break;
  9873                           
  9874                           ;usb_device.c: 2747: default:
  9875                           
  9876                           ;usb_device.c: 2746: case 12:
  9877                           
  9878                           ;usb_device.c: 2745: break;
  9879  00367E  0012               	return	
  9880  003680                     l1808:
  9881  003680  0104               	movlb	4	; () banked
  9882  003682  5131               	movf	49,w,b	;volatile
  9883                           
  9884                           ; Switch size 1, requested type "space"
  9885                           ; Number of cases is 11, Range of values is 0 to 12
  9886                           ; switch strategies available:
  9887                           ; Name         Instructions Cycles
  9888                           ; simple_byte           34    18 (average)
  9889                           ;	Chosen strategy is simple_byte
  9890  003684  0A00               	xorlw	0	; case 0
  9891  003686  B4D8               	btfsc	status,2,c
  9892  003688  D7C8               	goto	l1814
  9893  00368A  0A01               	xorlw	1	; case 1
  9894  00368C  B4D8               	btfsc	status,2,c
  9895  00368E  D7C8               	goto	l1815
  9896  003690  0A02               	xorlw	2	; case 3
  9897  003692  B4D8               	btfsc	status,2,c
  9898  003694  D7C5               	goto	l1815
  9899  003696  0A06               	xorlw	6	; case 5
  9900  003698  B4D8               	btfsc	status,2,c
  9901  00369A  D7AA               	goto	l1809
  9902  00369C  0A03               	xorlw	3	; case 6
  9903  00369E  B4D8               	btfsc	status,2,c
  9904  0036A0  D7AC               	goto	l1811
  9905  0036A2  0A01               	xorlw	1	; case 7
  9906  0036A4  B4D8               	btfsc	status,2,c
  9907  0036A6  D7DC               	goto	l1819
  9908  0036A8  0A0F               	xorlw	15	; case 8
  9909  0036AA  B4D8               	btfsc	status,2,c
  9910  0036AC  D7AC               	goto	l1813
  9911  0036AE  0A01               	xorlw	1	; case 9
  9912  0036B0  B4D8               	btfsc	status,2,c
  9913  0036B2  D7A6               	goto	l1812
  9914  0036B4  0A03               	xorlw	3	; case 10
  9915  0036B6  B4D8               	btfsc	status,2,c
  9916  0036B8  D7B6               	goto	l1817
  9917  0036BA  0A01               	xorlw	1	; case 11
  9918  0036BC  B4D8               	btfsc	status,2,c
  9919  0036BE  D7C2               	goto	l1818
  9920  0036C0  0A07               	xorlw	7	; case 12
  9921  0036C2  0012               	return	
  9922  0036C4                     __end_of_USBCheckStdRequest:
  9923                           	opt stack 0
  9924                           tosu	equ	0xFFF
  9925                           tosh	equ	0xFFE
  9926                           tosl	equ	0xFFD
  9927                           pclath	equ	0xFFA
  9928                           tblptru	equ	0xFF8
  9929                           tblptrh	equ	0xFF7
  9930                           tblptrl	equ	0xFF6
  9931                           tablat	equ	0xFF5
  9932                           prodh	equ	0xFF4
  9933                           prodl	equ	0xFF3
  9934                           intcon	equ	0xFF2
  9935                           intcon2	equ	0xFF1
  9936                           intcon3	equ	0xFF0
  9937                           postinc0	equ	0xFEE
  9938                           plusw0	equ	0xFEB
  9939                           wreg	equ	0xFE8
  9940                           postinc1	equ	0xFE6
  9941                           postdec1	equ	0xFE5
  9942                           fsr1h	equ	0xFE2
  9943                           fsr1l	equ	0xFE1
  9944                           indf2	equ	0xFDF
  9945                           postinc2	equ	0xFDE
  9946                           postdec2	equ	0xFDD
  9947                           plusw2	equ	0xFDB
  9948                           fsr2h	equ	0xFDA
  9949                           fsr2l	equ	0xFD9
  9950                           status	equ	0xFD8
  9951                           
  9952 ;; *************** function _USBStdSetCfgHandler *****************
  9953 ;; Defined at:
  9954 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;		None
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  i               1   49[BANK0 ] unsigned char 
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      void 
  9961 ;; Registers used:
  9962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9971 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9972 ;;Total ram usage:        1 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:   15
  9975 ;; This function calls:
  9976 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9977 ;;		_memset
  9978 ;; This function is called by:
  9979 ;;		_USBCheckStdRequest
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           	psect	text40
  9984  003330                     __ptext40:
  9985                           	opt stack 0
  9986  003330                     _USBStdSetCfgHandler:
  9987                           	opt stack 8
  9988                           
  9989                           ;usb_device.c: 1988: uint8_t i;
  9990                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9991                           
  9992                           ;incstack = 0
  9993  003330  0100               	movlb	0	; () banked
  9994  003332  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9998  003334  0E27               	movlw	39
  9999  003336  6F7D               	movwf	memset@p1& (0+255),b
 10000  003338  0E0F               	movlw	15
 10001  00333A  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10002  00333C  0E00               	movlw	0
 10003  00333E  6F80               	movwf	(memset@c+1)& (0+255),b
 10004  003340  0E00               	movlw	0
 10005  003342  6F7F               	movwf	memset@c& (0+255),b
 10006  003344  0E00               	movlw	0
 10007  003346  6F82               	movwf	(memset@n+1)& (0+255),b
 10008  003348  0E02               	movlw	2
 10009  00334A  6F81               	movwf	memset@n& (0+255),b
 10010  00334C  ECD1  F032         	call	_memset	;wreg free
 10011                           
 10012                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10013  003350  0E00               	movlw	0
 10014  003352  0100               	movlb	0	; () banked
 10015  003354  6F7D               	movwf	memset@p1& (0+255),b
 10016  003356  0E04               	movlw	4
 10017  003358  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10018  00335A  0E00               	movlw	0
 10019  00335C  6F80               	movwf	(memset@c+1)& (0+255),b
 10020  00335E  0E00               	movlw	0
 10021  003360  6F7F               	movwf	memset@c& (0+255),b
 10022  003362  0E00               	movlw	0
 10023  003364  6F82               	movwf	(memset@n+1)& (0+255),b
 10024  003366  0E30               	movlw	48
 10025  003368  6F81               	movwf	memset@n& (0+255),b
 10026  00336A  ECD1  F032         	call	_memset	;wreg free
 10027                           
 10028                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10029  00336E  8C65               	bsf	3941,6,c	;volatile
 10030                           
 10031                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10032  003370  0E00               	movlw	0
 10033  003372  0100               	movlb	0	; () banked
 10034  003374  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10035  003376                     l13233:
 10036                           
 10037                           ; BSR set to: 0
 10038  003376  0E02               	movlw	2
 10039  003378  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10040  00337A  D001               	goto	l1725
 10041  00337C  D016               	goto	u11860
 10042  00337E                     l1725:
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;usb_device.c: 2006: {
 10046                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10047                           
 10048                           ; BSR set to: 0
 10049  00337E  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10050  003380  0D01               	mullw	1
 10051  003382  0ED1               	movlw	low _ep_data_in
 10052  003384  24F3               	addwf	prodl,w,c
 10053  003386  6ED9               	movwf	fsr2l,c
 10054  003388  0E02               	movlw	high _ep_data_in
 10055  00338A  20F4               	addwfc	prodh,w,c
 10056  00338C  6EDA               	movwf	fsr2h,c
 10057  00338E  0E00               	movlw	0
 10058  003390  6EDF               	movwf	indf2,c
 10059                           
 10060                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10061  003392  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10062  003394  0D01               	mullw	1
 10063  003396  0ECE               	movlw	low _ep_data_out
 10064  003398  24F3               	addwf	prodl,w,c
 10065  00339A  6ED9               	movwf	fsr2l,c
 10066  00339C  0E02               	movlw	high _ep_data_out
 10067  00339E  20F4               	addwfc	prodh,w,c
 10068  0033A0  6EDA               	movwf	fsr2h,c
 10069  0033A2  0E00               	movlw	0
 10070  0033A4  6EDF               	movwf	indf2,c
 10071                           
 10072                           ; BSR set to: 0
 10073  0033A6  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10074  0033A8  D7E6               	goto	l13233
 10075  0033AA                     u11860:
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;usb_device.c: 2009: }
 10079                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10080                           
 10081                           ; BSR set to: 0
 10082  0033AA  0EEF               	movlw	low _USBAlternateInterface
 10083  0033AC  6F7D               	movwf	memset@p1& (0+255),b
 10084  0033AE  0E02               	movlw	high _USBAlternateInterface
 10085  0033B0  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10086  0033B2  0E00               	movlw	0
 10087  0033B4  6F80               	movwf	(memset@c+1)& (0+255),b
 10088  0033B6  0E00               	movlw	0
 10089  0033B8  6F7F               	movwf	memset@c& (0+255),b
 10090  0033BA  0E00               	movlw	0
 10091  0033BC  6F82               	movwf	(memset@n+1)& (0+255),b
 10092  0033BE  0E02               	movlw	2
 10093  0033C0  6F81               	movwf	memset@n& (0+255),b
 10094  0033C2  ECD1  F032         	call	_memset	;wreg free
 10095                           
 10096                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10097  0033C6  9C65               	bcf	3941,6,c	;volatile
 10098                           
 10099                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10100  0033C8  0E08               	movlw	8
 10101  0033CA  0100               	movlb	0	; () banked
 10102  0033CC  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10103  0033CE  0E04               	movlw	4
 10104  0033D0  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10108  0033D2  0E00               	movlw	0
 10109  0033D4  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10110  0033D6  0E04               	movlw	4
 10111  0033D8  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10115  0033DA  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10116  0033DE  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10117                           
 10118                           ; BSR set to: 0
 10119                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10120  0033E2  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10124  0033E6  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10125  0033E8  A4D8               	btfss	status,2,c
 10126  0033EA  D003               	goto	l1727
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;usb_device.c: 2028: {
 10130                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10131  0033EC  0E10               	movlw	16
 10132  0033EE  6FCE               	movwf	_USBDeviceState& (0+255),b
 10133                           
 10134                           ;usb_device.c: 2031: }
 10135  0033F0  0012               	return	
 10136  0033F2                     l1727:
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;usb_device.c: 2032: else
 10140                           ;usb_device.c: 2033: {
 10141                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10142                           
 10143                           ; BSR set to: 0
 10144  0033F2  0E00               	movlw	0
 10145  0033F4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10146  0033F6  0E01               	movlw	1
 10147  0033F8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10148  0033FA  0ED6               	movlw	low _USBActiveConfiguration
 10149  0033FC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10150  0033FE  0E00               	movlw	high _USBActiveConfiguration
 10151  003400  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10152  003402  0E00               	movlw	0
 10153  003404  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10154  003406  0E01               	movlw	1
 10155  003408  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10156  00340A  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10157                           
 10158                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10159  00340E  0E20               	movlw	32
 10160  003410  0100               	movlb	0	; () banked
 10161  003412  6FCE               	movwf	_USBDeviceState& (0+255),b
 10162  003414  0012               	return	
 10163  003416                     __end_of_USBStdSetCfgHandler:
 10164                           	opt stack 0
 10165                           tosu	equ	0xFFF
 10166                           tosh	equ	0xFFE
 10167                           tosl	equ	0xFFD
 10168                           pclath	equ	0xFFA
 10169                           tblptru	equ	0xFF8
 10170                           tblptrh	equ	0xFF7
 10171                           tblptrl	equ	0xFF6
 10172                           tablat	equ	0xFF5
 10173                           prodh	equ	0xFF4
 10174                           prodl	equ	0xFF3
 10175                           intcon	equ	0xFF2
 10176                           intcon2	equ	0xFF1
 10177                           intcon3	equ	0xFF0
 10178                           postinc0	equ	0xFEE
 10179                           plusw0	equ	0xFEB
 10180                           wreg	equ	0xFE8
 10181                           postinc1	equ	0xFE6
 10182                           postdec1	equ	0xFE5
 10183                           fsr1h	equ	0xFE2
 10184                           fsr1l	equ	0xFE1
 10185                           indf2	equ	0xFDF
 10186                           postinc2	equ	0xFDE
 10187                           postdec2	equ	0xFDD
 10188                           plusw2	equ	0xFDB
 10189                           fsr2h	equ	0xFDA
 10190                           fsr2l	equ	0xFD9
 10191                           status	equ	0xFD8
 10192                           
 10193 ;; *************** function _USBStdGetStatusHandler *****************
 10194 ;; Defined at:
 10195 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;		None
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10200 ;;		 -> NULL(0), BDT(48), 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      void 
 10203 ;; Registers used:
 10204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10213 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10214 ;;Total ram usage:        3 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:   11
 10217 ;; This function calls:
 10218 ;;		Nothing
 10219 ;; This function is called by:
 10220 ;;		_USBCheckStdRequest
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           	psect	text41
 10225  00450C                     __ptext41:
 10226                           	opt stack 0
 10227  00450C                     _USBStdGetStatusHandler:
 10228                           	opt stack 12
 10229                           
 10230                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;incstack = 0
 10234  00450C  0E00               	movlw	0
 10235  00450E  0104               	movlb	4	; () banked
 10236  004510  6F38               	movwf	56,b	;volatile
 10237                           
 10238                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10239  004512  0E00               	movlw	0
 10240  004514  6F39               	movwf	57,b	;volatile
 10241                           
 10242                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10243  004516  D03D               	goto	l1746
 10244  004518                     l1747:
 10245                           
 10246                           ; BSR set to: 4
 10247                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10248  004518  0100               	movlb	0	; () banked
 10249  00451A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10250                           
 10251                           ;usb_device.c: 2163: }
 10252                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10253                           
 10254                           ; BSR set to: 4
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;usb_device.c: 2161: {
 10258                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10259                           
 10260                           ;usb_device.c: 2160: if(0 == 1)
 10261  00451C  0101               	movlb	1	; () banked
 10262  00451E  05E1               	decf	_RemoteWakeup& (0+255),w,b
 10263  004520  A4D8               	btfss	status,2,c
 10264  004522  D042               	goto	l1750
 10265                           
 10266                           ; BSR set to: 1
 10267                           ;usb_device.c: 2166: {
 10268                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10269  004524  0104               	movlb	4	; () banked
 10270  004526  8338               	bsf	56,1,b	;volatile
 10271                           
 10272                           ; BSR set to: 4
 10273                           ;usb_device.c: 2168: }
 10274                           ;usb_device.c: 2169: break;
 10275  004528  D03F               	goto	l1750
 10276  00452A                     l1751:
 10277                           
 10278                           ; BSR set to: 4
 10279                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10280  00452A  0100               	movlb	0	; () banked
 10281  00452C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10282                           
 10283                           ;usb_device.c: 2172: break;
 10284  00452E  D03C               	goto	l1750
 10285  004530                     l1752:
 10286                           
 10287                           ; BSR set to: 4
 10288                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10289  004530  0100               	movlb	0	; () banked
 10290  004532  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10291                           
 10292                           ;usb_device.c: 2178: {
 10293                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10294                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10295  004534  0104               	movlb	4	; () banked
 10296  004536  BF34               	btfsc	52,7,b	;volatile
 10297  004538  D00B               	goto	l1753
 10298                           
 10299                           ; BSR set to: 4
 10300                           ;usb_device.c: 2182: {
 10301                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10302  00453A  5134               	movf	52,w,b	;volatile
 10303  00453C  0B0F               	andlw	15
 10304  00453E  0100               	movlb	0	; () banked
 10305  004540  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10306  004542  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10307  004544  0D02               	mullw	2
 10308  004546  0E0E               	movlw	low _pBDTEntryOut
 10309  004548  24F3               	addwf	prodl,w,c
 10310  00454A  6ED9               	movwf	fsr2l,c
 10311  00454C  0E03               	movlw	high _pBDTEntryOut
 10312  00454E  D00B               	goto	L4
 10313  004550                     l1753:
 10314                           
 10315                           ;usb_device.c: 2185: else
 10316                           ;usb_device.c: 2186: {
 10317                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10318                           
 10319                           ; BSR set to: 0
 10320  004550  0104               	movlb	4	; () banked
 10321  004552  5134               	movf	52,w,b	;volatile
 10322  004554  0B0F               	andlw	15
 10323  004556  0100               	movlb	0	; () banked
 10324  004558  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10325  00455A  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10326  00455C  0D02               	mullw	2
 10327  00455E  0EB6               	movlw	low _pBDTEntryIn
 10328  004560  24F3               	addwf	prodl,w,c
 10329  004562  6ED9               	movwf	fsr2l,c
 10330  004564  0E00               	movlw	high _pBDTEntryIn
 10331  004566                     L4:
 10332  004566  20F4               	addwfc	prodh,w,c
 10333  004568  6EDA               	movwf	fsr2h,c
 10334  00456A  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10335  00456E  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;usb_device.c: 2188: }
 10339                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10340                           
 10341                           ; BSR set to: 0
 10342  004572  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10343  004576  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10344  00457A  AEDF               	btfss	indf2,7,c
 10345  00457C  D015               	goto	l1750
 10346                           
 10347                           ; BSR set to: 0
 10348  00457E  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10349  004582  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10350  004586  A4DF               	btfss	indf2,2,c
 10351  004588  D00F               	goto	l1750
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10355  00458A  0E01               	movlw	1
 10356  00458C  0104               	movlb	4	; () banked
 10357  00458E  6F38               	movwf	56,b	;volatile
 10358                           
 10359                           ; BSR set to: 4
 10360                           ;usb_device.c: 2193: }
 10361                           ;usb_device.c: 2194: }
 10362                           
 10363                           ; BSR set to: 4
 10364                           ;usb_device.c: 2192: break;
 10365  004590  D00B               	goto	l1750
 10366  004592                     l1746:
 10367                           
 10368                           ; BSR set to: 4
 10369                           
 10370                           ; BSR set to: 4
 10371  004592  5130               	movf	48,w,b	;volatile
 10372  004594  0B1F               	andlw	31
 10373                           
 10374                           ; Switch size 1, requested type "space"
 10375                           ; Number of cases is 3, Range of values is 0 to 2
 10376                           ; switch strategies available:
 10377                           ; Name         Instructions Cycles
 10378                           ; simple_byte           10     6 (average)
 10379                           ;	Chosen strategy is simple_byte
 10380  004596  0A00               	xorlw	0	; case 0
 10381  004598  B4D8               	btfsc	status,2,c
 10382  00459A  D7BE               	goto	l1747
 10383  00459C  0A01               	xorlw	1	; case 1
 10384  00459E  B4D8               	btfsc	status,2,c
 10385  0045A0  D7C4               	goto	l1751
 10386  0045A2  0A03               	xorlw	3	; case 2
 10387  0045A4  B4D8               	btfsc	status,2,c
 10388  0045A6  D7C4               	goto	l1752
 10389  0045A8                     l1750:
 10390                           
 10391                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10392  0045A8  0100               	movlb	0	; () banked
 10393  0045AA  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10394  0045AC  0012               	return	
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;usb_device.c: 2197: {
 10398                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10399  0045AE  0E38               	movlw	56
 10400  0045B0  6FB0               	movwf	_inPipes& (0+255),b
 10401  0045B2  0E04               	movlw	4
 10402  0045B4  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10406  0045B6  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10410  0045B8  0E02               	movlw	2
 10411  0045BA  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10412  0045BC  0012               	return	
 10413  0045BE                     __end_of_USBStdGetStatusHandler:
 10414                           	opt stack 0
 10415                           tosu	equ	0xFFF
 10416                           tosh	equ	0xFFE
 10417                           tosl	equ	0xFFD
 10418                           pclath	equ	0xFFA
 10419                           tblptru	equ	0xFF8
 10420                           tblptrh	equ	0xFF7
 10421                           tblptrl	equ	0xFF6
 10422                           tablat	equ	0xFF5
 10423                           prodh	equ	0xFF4
 10424                           prodl	equ	0xFF3
 10425                           intcon	equ	0xFF2
 10426                           intcon2	equ	0xFF1
 10427                           intcon3	equ	0xFF0
 10428                           postinc0	equ	0xFEE
 10429                           plusw0	equ	0xFEB
 10430                           wreg	equ	0xFE8
 10431                           postinc1	equ	0xFE6
 10432                           postdec1	equ	0xFE5
 10433                           fsr1h	equ	0xFE2
 10434                           fsr1l	equ	0xFE1
 10435                           indf2	equ	0xFDF
 10436                           postinc2	equ	0xFDE
 10437                           postdec2	equ	0xFDD
 10438                           plusw2	equ	0xFDB
 10439                           fsr2h	equ	0xFDA
 10440                           fsr2l	equ	0xFD9
 10441                           status	equ	0xFD8
 10442                           
 10443 ;; *************** function _USBStdGetDscHandler *****************
 10444 ;; Defined at:
 10445 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10446 ;; Parameters:    Size  Location     Type
 10447 ;;		None
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;		None
 10450 ;; Return value:  Size  Location     Type
 10451 ;;                  1    wreg      void 
 10452 ;; Registers used:
 10453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10454 ;; Tracked objects:
 10455 ;;		On entry : 0/0
 10456 ;;		On exit  : 0/0
 10457 ;;		Unchanged: 0/0
 10458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10463 ;;Total ram usage:        2 bytes
 10464 ;; Hardware stack levels used:    1
 10465 ;; Hardware stack levels required when called:   11
 10466 ;; This function calls:
 10467 ;;		Nothing
 10468 ;; This function is called by:
 10469 ;;		_USBCheckStdRequest
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           
 10473                           	psect	text42
 10474  002BD4                     __ptext42:
 10475                           	opt stack 0
 10476  002BD4                     _USBStdGetDscHandler:
 10477                           	opt stack 12
 10478                           
 10479                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;incstack = 0
 10483  002BD4  0E80               	movlw	128
 10484  002BD6  0104               	movlb	4	; () banked
 10485  002BD8  1930               	xorwf	48,w,b	;volatile
 10486  002BDA  A4D8               	btfss	status,2,c
 10487  002BDC  0012               	return	
 10488                           
 10489                           ; BSR set to: 4
 10490                           ;usb_device.c: 2064: {
 10491                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10492  002BDE  0EC0               	movlw	192
 10493  002BE0  0100               	movlb	0	; () banked
 10494  002BE2  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10495                           
 10496                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10497  002BE4  D082               	goto	l1733
 10498  002BE6                     
 10499                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10500                           
 10501                           ; BSR set to: 0
 10502  002BE6  0E49               	movlw	low _device_dsc
 10503  002BE8  0100               	movlb	0	; () banked
 10504  002BEA  6FB0               	movwf	_inPipes& (0+255),b
 10505  002BEC  0EFE               	movlw	high _device_dsc
 10506  002BEE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10510  002BF0  0E00               	movlw	0
 10511  002BF2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10512  002BF4  0E12               	movlw	18
 10513  002BF6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10514                           
 10515                           ;usb_device.c: 2076: break;
 10516  002BF8  0012               	return	
 10517  002BFA                     
 10518                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10519                           
 10520                           ; BSR set to: 0
 10521  002BFA  0104               	movlb	4	; () banked
 10522  002BFC  5132               	movf	50,w,b	;volatile
 10523  002BFE  A4D8               	btfss	status,2,c
 10524  002C00  D040               	goto	l1737
 10525                           
 10526                           ; BSR set to: 4
 10527                           ;usb_device.c: 2082: {
 10528                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10529  002C02  5132               	movf	50,w,b	;volatile
 10530  002C04  0D02               	mullw	2
 10531  002C06  0E2E               	movlw	low _USB_CD_Ptr
 10532  002C08  24F3               	addwf	prodl,w,c
 10533  002C0A  6EF6               	movwf	tblptrl,c
 10534  002C0C  0EFC               	movlw	high _USB_CD_Ptr
 10535  002C0E  20F4               	addwfc	prodh,w,c
 10536  002C10  6EF7               	movwf	tblptrh,c
 10537  002C12                     	if	0	;There are less than 3 active tblptr bytes
 10538  002C12                     	endif
 10539  002C12  0009               	tblrd		*+
 10540  002C14  CFF5 F0B0          	movff	tablat,_inPipes
 10541  002C18  000A               	tblrd		*-
 10542  002C1A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10543                           
 10544                           ; BSR set to: 4
 10545                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10546  002C1E  0E02               	movlw	2
 10547  002C20  0100               	movlb	0	; () banked
 10548  002C22  25B0               	addwf	_inPipes& (0+255),w,b
 10549  002C24  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10550  002C26  0E00               	movlw	0
 10551  002C28  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10552  002C2A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10553  002C2C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10554  002C30  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10555  002C34  6AF8               	clrf	tblptru,c
 10556  002C36  0E0E               	movlw	(high __ramtop+-1)
 10557  002C38  64F7               	cpfsgt	tblptrh,c
 10558  002C3A  D003               	bra	u11907
 10559  002C3C  0008               	tblrd		*
 10560  002C3E  50F5               	movf	tablat,w,c
 10561  002C40  D005               	bra	u11900
 10562  002C42                     u11907:
 10563  002C42  CFF6 FFE9          	movff	tblptrl,fsr0l
 10564  002C46  CFF7 FFEA          	movff	tblptrh,fsr0h
 10565  002C4A  50EF               	movf	indf0,w,c
 10566  002C4C                     u11900:
 10567  002C4C  0100               	movlb	0	; () banked
 10568  002C4E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10572  002C50  0E03               	movlw	3
 10573  002C52  25B0               	addwf	_inPipes& (0+255),w,b
 10574  002C54  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10575  002C56  0E00               	movlw	0
 10576  002C58  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10577  002C5A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10578  002C5C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10579  002C60  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10580  002C64  6AF8               	clrf	tblptru,c
 10581  002C66  0E0E               	movlw	(high __ramtop+-1)
 10582  002C68  64F7               	cpfsgt	tblptrh,c
 10583  002C6A  D003               	bra	u11917
 10584  002C6C  0008               	tblrd		*
 10585  002C6E  50F5               	movf	tablat,w,c
 10586  002C70  D005               	bra	u11910
 10587  002C72                     u11917:
 10588  002C72  CFF6 FFE9          	movff	tblptrl,fsr0l
 10589  002C76  CFF7 FFEA          	movff	tblptrh,fsr0h
 10590  002C7A  50EF               	movf	indf0,w,c
 10591  002C7C                     u11910:
 10592  002C7C  0100               	movlb	0	; () banked
 10593  002C7E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10594                           
 10595                           ;usb_device.c: 2094: }
 10596  002C80  0012               	return	
 10597  002C82                     l1737:
 10598                           
 10599                           ;usb_device.c: 2095: else
 10600                           ;usb_device.c: 2096: {
 10601                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10602                           
 10603                           ; BSR set to: 0
 10604  002C82  0E00               	movlw	0
 10605  002C84  0100               	movlb	0	; () banked
 10606  002C86  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;usb_device.c: 2098: }
 10610                           ;usb_device.c: 2099: break;
 10611  002C88  0012               	return	
 10612  002C8A                     
 10613                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10614                           
 10615                           ; BSR set to: 0
 10616  002C8A  0E03               	movlw	3
 10617  002C8C  0104               	movlb	4	; () banked
 10618  002C8E  6132               	cpfslt	50,b	;volatile
 10619  002C90  D024               	goto	l1740
 10620                           
 10621                           ; BSR set to: 4
 10622                           ;usb_device.c: 2105: {
 10623                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10624  002C92  5132               	movf	50,w,b	;volatile
 10625  002C94  0D02               	mullw	2
 10626  002C96  0E1C               	movlw	low _USB_SD_Ptr
 10627  002C98  24F3               	addwf	prodl,w,c
 10628  002C9A  6EF6               	movwf	tblptrl,c
 10629  002C9C  0EFC               	movlw	high _USB_SD_Ptr
 10630  002C9E  20F4               	addwfc	prodh,w,c
 10631  002CA0  6EF7               	movwf	tblptrh,c
 10632  002CA2                     	if	0	;There are less than 3 active tblptr bytes
 10633  002CA2                     	endif
 10634  002CA2  0009               	tblrd		*+
 10635  002CA4  CFF5 F0B0          	movff	tablat,_inPipes
 10636  002CA8  000A               	tblrd		*-
 10637  002CAA  CFF5 F0B1          	movff	tablat,_inPipes+1
 10638                           
 10639                           ; BSR set to: 4
 10640                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10641  002CAE  C0B0  FFF6         	movff	_inPipes,tblptrl
 10642  002CB2  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10643  002CB6  6AF8               	clrf	tblptru,c
 10644  002CB8  0E0E               	movlw	(high __ramtop+-1)
 10645  002CBA  64F7               	cpfsgt	tblptrh,c
 10646  002CBC  D003               	bra	u11937
 10647  002CBE  0008               	tblrd		*
 10648  002CC0  50F5               	movf	tablat,w,c
 10649  002CC2  D005               	bra	u11930
 10650  002CC4                     u11937:
 10651  002CC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10652  002CC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10653  002CCC  50EF               	movf	indf0,w,c
 10654  002CCE                     u11930:
 10655  002CCE  0100               	movlb	0	; () banked
 10656  002CD0  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10657  002CD2  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10658  002CD4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10659  002CD6  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10660                           
 10661                           ;usb_device.c: 2110: }
 10662  002CD8  0012               	return	
 10663  002CDA                     l1740:
 10664                           
 10665                           ;usb_device.c: 2120: else
 10666                           ;usb_device.c: 2121: {
 10667                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10668                           
 10669                           ; BSR set to: 0
 10670  002CDA  0E00               	movlw	0
 10671  002CDC  0100               	movlb	0	; () banked
 10672  002CDE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10673                           
 10674                           ; BSR set to: 0
 10675                           ;usb_device.c: 2123: }
 10676                           ;usb_device.c: 2124: break;
 10677  002CE0  0012               	return	
 10678  002CE2                     
 10679                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10680                           
 10681                           ; BSR set to: 0
 10682  002CE2  0E00               	movlw	0
 10683  002CE4  0100               	movlb	0	; () banked
 10684  002CE6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;usb_device.c: 2128: }
 10688                           
 10689                           ;usb_device.c: 2127: break;
 10690  002CE8  0012               	return	
 10691  002CEA                     l1733:
 10692                           
 10693                           ; BSR set to: 0
 10694                           
 10695                           ; BSR set to: 0
 10696  002CEA  0104               	movlb	4	; () banked
 10697  002CEC  5133               	movf	51,w,b	;volatile
 10698                           
 10699                           ; Switch size 1, requested type "space"
 10700                           ; Number of cases is 3, Range of values is 1 to 3
 10701                           ; switch strategies available:
 10702                           ; Name         Instructions Cycles
 10703                           ; simple_byte           10     6 (average)
 10704                           ;	Chosen strategy is simple_byte
 10705  002CEE  0A01               	xorlw	1	; case 1
 10706  002CF0  B4D8               	btfsc	status,2,c
 10707  002CF2  D779               	goto	l1734
 10708  002CF4  0A03               	xorlw	3	; case 2
 10709  002CF6  B4D8               	btfsc	status,2,c
 10710  002CF8  D780               	goto	l1736
 10711  002CFA  0A01               	xorlw	1	; case 3
 10712  002CFC  B4D8               	btfsc	status,2,c
 10713  002CFE  D7C5               	goto	l1739
 10714  002D00  D7F0               	goto	l1742
 10715  002D02                     __end_of_USBStdGetDscHandler:
 10716                           	opt stack 0
 10717                           tosu	equ	0xFFF
 10718                           tosh	equ	0xFFE
 10719                           tosl	equ	0xFFD
 10720                           pclath	equ	0xFFA
 10721                           tblptru	equ	0xFF8
 10722                           tblptrh	equ	0xFF7
 10723                           tblptrl	equ	0xFF6
 10724                           tablat	equ	0xFF5
 10725                           prodh	equ	0xFF4
 10726                           prodl	equ	0xFF3
 10727                           intcon	equ	0xFF2
 10728                           intcon2	equ	0xFF1
 10729                           intcon3	equ	0xFF0
 10730                           indf0	equ	0xFEF
 10731                           postinc0	equ	0xFEE
 10732                           plusw0	equ	0xFEB
 10733                           fsr0h	equ	0xFEA
 10734                           fsr0l	equ	0xFE9
 10735                           wreg	equ	0xFE8
 10736                           postinc1	equ	0xFE6
 10737                           postdec1	equ	0xFE5
 10738                           fsr1h	equ	0xFE2
 10739                           fsr1l	equ	0xFE1
 10740                           indf2	equ	0xFDF
 10741                           postinc2	equ	0xFDE
 10742                           postdec2	equ	0xFDD
 10743                           plusw2	equ	0xFDB
 10744                           fsr2h	equ	0xFDA
 10745                           fsr2l	equ	0xFD9
 10746                           status	equ	0xFD8
 10747                           
 10748 ;; *************** function _USBStdFeatureReqHandler *****************
 10749 ;; Defined at:
 10750 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;		None
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10755 ;;		 -> NULL(0), BDT(48), 
 10756 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10757 ;;		 -> UEP0(1), 
 10758 ;;  current_ep_d    1   52[BANK0 ] struct .
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10769 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10770 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10771 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10772 ;;Total ram usage:        6 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:   15
 10775 ;; This function calls:
 10776 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10777 ;; This function is called by:
 10778 ;;		_USBCheckStdRequest
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text43
 10783  00135A                     __ptext43:
 10784                           	opt stack 0
 10785  00135A                     _USBStdFeatureReqHandler:
 10786                           	opt stack 8
 10787                           
 10788                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10789                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10790                           ;usb_device.c: 2778: unsigned char* pUEP;
 10791                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10792                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10793                           
 10794                           ;incstack = 0
 10795  00135A  0104               	movlb	4	; () banked
 10796  00135C  0532               	decf	50,w,b	;volatile
 10797  00135E  A4D8               	btfss	status,2,c
 10798  001360  D011               	goto	l1826
 10799                           
 10800                           ; BSR set to: 4
 10801  001362  5130               	movf	48,w,b	;volatile
 10802  001364  0B1F               	andlw	31
 10803  001366  0900               	iorlw	0
 10804  001368  A4D8               	btfss	status,2,c
 10805  00136A  D00C               	goto	l1826
 10806                           
 10807                           ; BSR set to: 4
 10808                           ;usb_device.c: 2818: {
 10809                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10810  00136C  0100               	movlb	0	; () banked
 10811  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10815  001370  0E03               	movlw	3
 10816  001372  0104               	movlb	4	; () banked
 10817  001374  1931               	xorwf	49,w,b	;volatile
 10818  001376  A4D8               	btfss	status,2,c
 10819  001378  D002               	goto	l1825
 10820                           
 10821                           ; BSR set to: 4
 10822                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10823  00137A  0E01               	movlw	1
 10824  00137C  D001               	goto	L5
 10825  00137E                     l1825:
 10826                           
 10827                           ;usb_device.c: 2822: else
 10828                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10829                           
 10830                           ; BSR set to: 1
 10831  00137E  0E00               	movlw	0
 10832  001380                     L5:
 10833  001380  0101               	movlb	1	; () banked
 10834  001382  6FE1               	movwf	_RemoteWakeup& (0+255),b
 10835  001384                     l1826:
 10836                           
 10837                           ;usb_device.c: 2824: }
 10838                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10839                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10840                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10841                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10842                           
 10843                           ; BSR set to: 1
 10844  001384  0104               	movlb	4	; () banked
 10845  001386  5132               	movf	50,w,b	;volatile
 10846  001388  A4D8               	btfss	status,2,c
 10847  00138A  0012               	return	
 10848                           
 10849                           ; BSR set to: 4
 10850  00138C  5130               	movf	48,w,b	;volatile
 10851  00138E  0B1F               	andlw	31
 10852  001390  0A02               	xorlw	2
 10853  001392  A4D8               	btfss	status,2,c
 10854  001394  0012               	return	
 10855                           
 10856                           ; BSR set to: 4
 10857  001396  5134               	movf	52,w,b	;volatile
 10858  001398  0B0F               	andlw	15
 10859  00139A  0900               	iorlw	0
 10860  00139C  B4D8               	btfsc	status,2,c
 10861  00139E  0012               	return	
 10862                           
 10863                           ; BSR set to: 4
 10864  0013A0  5134               	movf	52,w,b	;volatile
 10865  0013A2  0B0F               	andlw	15
 10866  0013A4  0100               	movlb	0	; () banked
 10867  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10868  0013A8  0E03               	movlw	3
 10869  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10870  0013AC  0012               	return	
 10871                           
 10872                           ; BSR set to: 0
 10873  0013AE  0E20               	movlw	32
 10874  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10875  0013B2  A4D8               	btfss	status,2,c
 10876  0013B4  0012               	return	
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;usb_device.c: 2831: {
 10880                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10881  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10882                           
 10883                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10884  0013B8  0104               	movlb	4	; () banked
 10885  0013BA  BF34               	btfsc	52,7,b	;volatile
 10886  0013BC  D01C               	goto	l1828
 10887                           
 10888                           ; BSR set to: 4
 10889                           ;usb_device.c: 2838: {
 10890                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10891  0013BE  5134               	movf	52,w,b	;volatile
 10892  0013C0  0B0F               	andlw	15
 10893  0013C2  0100               	movlb	0	; () banked
 10894  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10895  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10896  0013C8  0D02               	mullw	2
 10897  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10898  0013CC  24F3               	addwf	prodl,w,c
 10899  0013CE  6ED9               	movwf	fsr2l,c
 10900  0013D0  0E03               	movlw	high _pBDTEntryOut
 10901  0013D2  20F4               	addwfc	prodh,w,c
 10902  0013D4  6EDA               	movwf	fsr2h,c
 10903  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10904  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10905                           
 10906                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10907  0013DE  0104               	movlb	4	; () banked
 10908  0013E0  5134               	movf	52,w,b	;volatile
 10909  0013E2  0B0F               	andlw	15
 10910  0013E4  0100               	movlb	0	; () banked
 10911  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10912  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10913  0013EA  0D01               	mullw	1
 10914  0013EC  0ECE               	movlw	low _ep_data_out
 10915  0013EE  24F3               	addwf	prodl,w,c
 10916  0013F0  6ED9               	movwf	fsr2l,c
 10917  0013F2  0E02               	movlw	high _ep_data_out
 10918  0013F4  D01C               	goto	L6
 10919  0013F6                     l1828:
 10920                           
 10921                           ;usb_device.c: 2842: else
 10922                           ;usb_device.c: 2843: {
 10923                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10924                           
 10925                           ; BSR set to: 0
 10926  0013F6  0104               	movlb	4	; () banked
 10927  0013F8  5134               	movf	52,w,b	;volatile
 10928  0013FA  0B0F               	andlw	15
 10929  0013FC  0100               	movlb	0	; () banked
 10930  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10931  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10932  001402  0D02               	mullw	2
 10933  001404  0EB6               	movlw	low _pBDTEntryIn
 10934  001406  24F3               	addwf	prodl,w,c
 10935  001408  6ED9               	movwf	fsr2l,c
 10936  00140A  0E00               	movlw	high _pBDTEntryIn
 10937  00140C  20F4               	addwfc	prodh,w,c
 10938  00140E  6EDA               	movwf	fsr2h,c
 10939  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10940  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10941                           
 10942                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10943  001418  0104               	movlb	4	; () banked
 10944  00141A  5134               	movf	52,w,b	;volatile
 10945  00141C  0B0F               	andlw	15
 10946  00141E  0100               	movlb	0	; () banked
 10947  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10948  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10949  001424  0D01               	mullw	1
 10950  001426  0ED1               	movlw	low _ep_data_in
 10951  001428  24F3               	addwf	prodl,w,c
 10952  00142A  6ED9               	movwf	fsr2l,c
 10953  00142C  0E02               	movlw	high _ep_data_in
 10954  00142E                     L6:
 10955  00142E  20F4               	addwfc	prodh,w,c
 10956  001430  6EDA               	movwf	fsr2h,c
 10957  001432  50DF               	movf	indf2,w,c
 10958  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;usb_device.c: 2846: }
 10962                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10963                           
 10964                           ; BSR set to: 0
 10965  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10966  001438  D002               	goto	l1830
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;usb_device.c: 2853: {
 10970                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10971  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10972                           
 10973                           ;usb_device.c: 2855: }
 10974  00143C  D001               	goto	l1831
 10975  00143E                     l1830:
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;usb_device.c: 2856: else
 10979                           ;usb_device.c: 2857: {
 10980                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10981                           
 10982                           ; BSR set to: 0
 10983  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10984  001440                     l1831:
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;usb_device.c: 2859: }
 10988                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10989                           
 10990                           ; BSR set to: 0
 10991  001440  0104               	movlb	4	; () banked
 10992  001442  BF34               	btfsc	52,7,b	;volatile
 10993  001444  D00B               	goto	l1832
 10994                           
 10995                           ; BSR set to: 4
 10996                           ;usb_device.c: 2865: {
 10997                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10998  001446  5134               	movf	52,w,b	;volatile
 10999  001448  0B0F               	andlw	15
 11000  00144A  0100               	movlb	0	; () banked
 11001  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11002  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11003  001450  0D02               	mullw	2
 11004  001452  0E0E               	movlw	low _pBDTEntryOut
 11005  001454  24F3               	addwf	prodl,w,c
 11006  001456  6ED9               	movwf	fsr2l,c
 11007  001458  0E03               	movlw	high _pBDTEntryOut
 11008  00145A  D00B               	goto	L7
 11009  00145C                     l1832:
 11010                           
 11011                           ;usb_device.c: 2868: else
 11012                           ;usb_device.c: 2869: {
 11013                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11014                           
 11015                           ; BSR set to: 0
 11016  00145C  0104               	movlb	4	; () banked
 11017  00145E  5134               	movf	52,w,b	;volatile
 11018  001460  0B0F               	andlw	15
 11019  001462  0100               	movlb	0	; () banked
 11020  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11021  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11022  001468  0D02               	mullw	2
 11023  00146A  0EB6               	movlw	low _pBDTEntryIn
 11024  00146C  24F3               	addwf	prodl,w,c
 11025  00146E  6ED9               	movwf	fsr2l,c
 11026  001470  0E00               	movlw	high _pBDTEntryIn
 11027  001472                     L7:
 11028  001472  20F4               	addwfc	prodh,w,c
 11029  001474  6EDA               	movwf	fsr2h,c
 11030  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11031  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;usb_device.c: 2871: }
 11035                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11036                           
 11037                           ; BSR set to: 0
 11038  00147E  0E03               	movlw	3
 11039  001480  0104               	movlb	4	; () banked
 11040  001482  1931               	xorwf	49,w,b	;volatile
 11041  001484  A4D8               	btfss	status,2,c
 11042  001486  D031               	goto	l1834
 11043                           
 11044                           ; BSR set to: 4
 11045                           ;usb_device.c: 2875: {
 11046                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11047  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11048  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11049  001490  0100               	movlb	0	; () banked
 11050  001492  AEDF               	btfss	indf2,7,c
 11051  001494  D01D               	goto	l1837
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;usb_device.c: 2877: {
 11055                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11056  001496  0104               	movlb	4	; () banked
 11057  001498  BF34               	btfsc	52,7,b	;volatile
 11058  00149A  D00B               	goto	l1836
 11059                           
 11060                           ; BSR set to: 4
 11061                           ;usb_device.c: 2881: {
 11062                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11063  00149C  5134               	movf	52,w,b	;volatile
 11064  00149E  0B0F               	andlw	15
 11065  0014A0  0100               	movlb	0	; () banked
 11066  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11067  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11068  0014A6  0D01               	mullw	1
 11069  0014A8  0ECE               	movlw	low _ep_data_out
 11070  0014AA  24F3               	addwf	prodl,w,c
 11071  0014AC  6ED9               	movwf	fsr2l,c
 11072  0014AE  0E02               	movlw	high _ep_data_out
 11073  0014B0  D00B               	goto	L8
 11074  0014B2                     l1836:
 11075                           
 11076                           ;usb_device.c: 2884: else
 11077                           ;usb_device.c: 2885: {
 11078                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11079                           
 11080                           ; BSR set to: 2
 11081  0014B2  0104               	movlb	4	; () banked
 11082  0014B4  5134               	movf	52,w,b	;volatile
 11083  0014B6  0B0F               	andlw	15
 11084  0014B8  0100               	movlb	0	; () banked
 11085  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11086  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11087  0014BE  0D01               	mullw	1
 11088  0014C0  0ED1               	movlw	low _ep_data_in
 11089  0014C2  24F3               	addwf	prodl,w,c
 11090  0014C4  6ED9               	movwf	fsr2l,c
 11091  0014C6  0E02               	movlw	high _ep_data_in
 11092  0014C8                     L8:
 11093  0014C8  20F4               	addwfc	prodh,w,c
 11094  0014CA  6EDA               	movwf	fsr2h,c
 11095  0014CC  0102               	movlb	2	; () banked
 11096  0014CE  82DF               	bsf	indf2,1,c
 11097  0014D0                     l1837:
 11098                           
 11099                           ;usb_device.c: 2887: }
 11100                           ;usb_device.c: 2888: }
 11101                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11102                           
 11103                           ; BSR set to: 2
 11104                           
 11105                           ; BSR set to: 2
 11106  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11107  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11108  0014D8  0E00               	movlw	0
 11109  0014DA  84DB               	bsf	plusw2,2,c
 11110                           
 11111                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11112  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11113  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11114  0014E4  0E00               	movlw	0
 11115  0014E6  8EDB               	bsf	plusw2,7,c
 11116                           
 11117                           ;usb_device.c: 2893: }
 11118  0014E8  0012               	return	
 11119  0014EA                     l1834:
 11120                           
 11121                           ;usb_device.c: 2894: else
 11122                           ;usb_device.c: 2895: {
 11123                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11124  0014EA  0E04               	movlw	4
 11125  0014EC  0100               	movlb	0	; () banked
 11126  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11130  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11131  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11132  0014F8  AEDF               	btfss	indf2,7,c
 11133  0014FA  D01B               	goto	l1839
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;usb_device.c: 2902: {
 11137                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11138  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11139  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11140  001504  0E7F               	movlw	127
 11141  001506  16DF               	andwf	indf2,f,c
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11145  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11146  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11147  001510  0E00               	movlw	0
 11148  001512  8CDB               	bsf	plusw2,6,c
 11149                           
 11150                           ; BSR set to: 0
 11151                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11152  001514  0E00               	movlw	0
 11153  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11154  001518  0E05               	movlw	5
 11155  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11156  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11157  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11158  001524  0E00               	movlw	0
 11159  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11160  001528  0E02               	movlw	2
 11161  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11162  00152C  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11163                           
 11164                           ;usb_device.c: 2908: }
 11165  001530  D006               	goto	l1840
 11166  001532                     l1839:
 11167                           
 11168                           ;usb_device.c: 2909: else
 11169                           ;usb_device.c: 2910: {
 11170                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11171  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11172  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11173  00153A  0E00               	movlw	0
 11174  00153C  8CDB               	bsf	plusw2,6,c
 11175  00153E                     l1840:
 11176                           
 11177                           ;usb_device.c: 2913: }
 11178                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11179  00153E  0E04               	movlw	4
 11180  001540  0100               	movlb	0	; () banked
 11181  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11185  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11186  001546  D006               	goto	u12150
 11187                           
 11188                           ; BSR set to: 0
 11189  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11190  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11191  001550  AEDF               	btfss	indf2,7,c
 11192  001552  D033               	goto	l1841
 11193  001554                     u12150:
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;usb_device.c: 2924: {
 11197                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11198  001554  0104               	movlb	4	; () banked
 11199  001556  BF34               	btfsc	52,7,b	;volatile
 11200  001558  D00B               	goto	l1844
 11201                           
 11202                           ; BSR set to: 4
 11203                           ;usb_device.c: 2926: {
 11204                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11205  00155A  5134               	movf	52,w,b	;volatile
 11206  00155C  0B0F               	andlw	15
 11207  00155E  0100               	movlb	0	; () banked
 11208  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11209  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11210  001564  0D01               	mullw	1
 11211  001566  0ECE               	movlw	low _ep_data_out
 11212  001568  24F3               	addwf	prodl,w,c
 11213  00156A  6ED9               	movwf	fsr2l,c
 11214  00156C  0E02               	movlw	high _ep_data_out
 11215  00156E  D00B               	goto	L9
 11216  001570                     l1844:
 11217                           
 11218                           ;usb_device.c: 2929: else
 11219                           ;usb_device.c: 2930: {
 11220                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11221                           
 11222                           ; BSR set to: 2
 11223  001570  0104               	movlb	4	; () banked
 11224  001572  5134               	movf	52,w,b	;volatile
 11225  001574  0B0F               	andlw	15
 11226  001576  0100               	movlb	0	; () banked
 11227  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11228  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11229  00157C  0D01               	mullw	1
 11230  00157E  0ED1               	movlw	low _ep_data_in
 11231  001580  24F3               	addwf	prodl,w,c
 11232  001582  6ED9               	movwf	fsr2l,c
 11233  001584  0E02               	movlw	high _ep_data_in
 11234  001586                     L9:
 11235  001586  20F4               	addwfc	prodh,w,c
 11236  001588  6EDA               	movwf	fsr2h,c
 11237  00158A  0102               	movlb	2	; () banked
 11238  00158C  92DF               	bcf	indf2,1,c
 11239                           
 11240                           ; BSR set to: 2
 11241                           ;usb_device.c: 2932: }
 11242                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11243                           
 11244                           ; BSR set to: 2
 11245  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11246  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11247  001596  0E3B               	movlw	59
 11248  001598  16DF               	andwf	indf2,f,c
 11249                           
 11250                           ; BSR set to: 2
 11251                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11252  00159A  0E00               	movlw	0
 11253  00159C  0100               	movlb	0	; () banked
 11254  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11255  0015A0  0E05               	movlw	5
 11256  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11257  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11258  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11259  0015AC  0E00               	movlw	0
 11260  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11261  0015B0  0E02               	movlw	2
 11262  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11263  0015B4  EC55  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11264                           
 11265                           ;usb_device.c: 2938: }
 11266  0015B8  D006               	goto	l1846
 11267  0015BA                     l1841:
 11268                           
 11269                           ;usb_device.c: 2939: else
 11270                           ;usb_device.c: 2940: {
 11271                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11272  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11273  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11274  0015C2  0E3B               	movlw	59
 11275  0015C4  16DF               	andwf	indf2,f,c
 11276  0015C6                     l1846:
 11277                           
 11278                           ;usb_device.c: 2943: }
 11279                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11280  0015C6  0104               	movlb	4	; () banked
 11281  0015C8  5134               	movf	52,w,b	;volatile
 11282  0015CA  0B0F               	andlw	15
 11283  0015CC  0100               	movlb	0	; () banked
 11284  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11285  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11286  0015D2  0D01               	mullw	1
 11287  0015D4  0E26               	movlw	38
 11288  0015D6  24F3               	addwf	prodl,w,c
 11289  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11290  0015DA  0E0F               	movlw	15
 11291  0015DC  20F4               	addwfc	prodh,w,c
 11292  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11296  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11297  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11298  0015E8  0EFE               	movlw	254
 11299  0015EA  16DF               	andwf	indf2,f,c
 11300                           
 11301                           ; BSR set to: 0
 11302  0015EC  0012               	return	
 11303  0015EE                     __end_of_USBStdFeatureReqHandler:
 11304                           	opt stack 0
 11305                           tosu	equ	0xFFF
 11306                           tosh	equ	0xFFE
 11307                           tosl	equ	0xFFD
 11308                           pclath	equ	0xFFA
 11309                           tblptru	equ	0xFF8
 11310                           tblptrh	equ	0xFF7
 11311                           tblptrl	equ	0xFF6
 11312                           tablat	equ	0xFF5
 11313                           prodh	equ	0xFF4
 11314                           prodl	equ	0xFF3
 11315                           intcon	equ	0xFF2
 11316                           intcon2	equ	0xFF1
 11317                           intcon3	equ	0xFF0
 11318                           indf0	equ	0xFEF
 11319                           postinc0	equ	0xFEE
 11320                           plusw0	equ	0xFEB
 11321                           fsr0h	equ	0xFEA
 11322                           fsr0l	equ	0xFE9
 11323                           wreg	equ	0xFE8
 11324                           postinc1	equ	0xFE6
 11325                           postdec1	equ	0xFE5
 11326                           fsr1h	equ	0xFE2
 11327                           fsr1l	equ	0xFE1
 11328                           indf2	equ	0xFDF
 11329                           postinc2	equ	0xFDE
 11330                           postdec2	equ	0xFDD
 11331                           plusw2	equ	0xFDB
 11332                           fsr2h	equ	0xFDA
 11333                           fsr2l	equ	0xFD9
 11334                           status	equ	0xFD8
 11335                           
 11336 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11337 ;; Defined at:
 11338 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;  event           2   41[BANK0 ] enum E8366
 11341 ;;  pdata           2   43[BANK0 ] PTR void 
 11342 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11343 ;;  size            2   45[BANK0 ] unsigned int 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      unsigned char 
 11348 ;; Registers used:
 11349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11355 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11358 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11359 ;;Total ram usage:        8 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:   14
 11362 ;; This function calls:
 11363 ;;		_CDCInitEP
 11364 ;;		_USBCheckCDCRequest
 11365 ;; This function is called by:
 11366 ;;		_USBDeviceTasks
 11367 ;;		_USBStdSetCfgHandler
 11368 ;;		_USBSuspend
 11369 ;;		_USBWakeFromSuspend
 11370 ;;		_USBCtrlTrfSetupHandler
 11371 ;;		_USBCheckStdRequest
 11372 ;;		_USBStdFeatureReqHandler
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           	psect	text44
 11377  0058AA                     __ptext44:
 11378                           	opt stack 0
 11379  0058AA                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11380                           	opt stack 12
 11381                           
 11382                           ;usb_device_mgr.c: 106: switch( (int) event )
 11383                           
 11384                           ;incstack = 0
 11385  0058AA  D006               	goto	l2000
 11386  0058AC                     
 11387                           ;usb_device_mgr.c: 134: CDCInitEP();
 11388  0058AC  ECEB  F02A         	call	_CDCInitEP	;wreg free
 11389                           
 11390                           ;usb_device_mgr.c: 142: break;
 11391                           
 11392                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11393                           
 11394                           ;usb_device_mgr.c: 139: break;
 11395  0058B0  0012               	return	
 11396  0058B2                     
 11397                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11398  0058B2  ECDF  F022         	call	_USBCheckCDCRequest	;wreg free
 11399                           
 11400                           ;usb_device_mgr.c: 163: }
 11401                           
 11402                           ;usb_device_mgr.c: 162: break;
 11403                           
 11404                           ;usb_device_mgr.c: 161: default:
 11405                           
 11406                           ;usb_device_mgr.c: 159: break;
 11407                           
 11408                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11409                           
 11410                           ;usb_device_mgr.c: 156: break;
 11411                           
 11412                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11413                           
 11414                           ;usb_device_mgr.c: 153: break;
 11415  0058B6  0012               	return	
 11416  0058B8                     l2000:
 11417  0058B8  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11418  0058BC  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11419                           
 11420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11421                           ; Switch size 1, requested type "space"
 11422                           ; Number of cases is 2, Range of values is 0 to 127
 11423                           ; switch strategies available:
 11424                           ; Name         Instructions Cycles
 11425                           ; simple_byte            7     4 (average)
 11426                           ;	Chosen strategy is simple_byte
 11427  0058C0  0100               	movlb	0	; () banked
 11428  0058C2  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11429  0058C4  0A00               	xorlw	0	; case 0
 11430  0058C6  B4D8               	btfsc	status,2,c
 11431  0058C8  D004               	goto	l16991
 11432  0058CA  0A7F               	xorlw	127	; case 127
 11433  0058CC  A4D8               	btfss	status,2,c
 11434  0058CE  0012               	return	
 11435  0058D0  D018               	goto	l16993
 11436  0058D2                     l16991:
 11437                           
 11438                           ; BSR set to: 0
 11439                           ; Switch size 1, requested type "space"
 11440                           ; Number of cases is 8, Range of values is 1 to 117
 11441                           ; switch strategies available:
 11442                           ; Name         Instructions Cycles
 11443                           ; simple_byte           25    13 (average)
 11444                           ;	Chosen strategy is simple_byte
 11445  0058D2  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11446  0058D4  0A01               	xorlw	1	; case 1
 11447  0058D6  B4D8               	btfsc	status,2,c
 11448  0058D8  D7E9               	goto	l2006
 11449  0058DA  0A03               	xorlw	3	; case 2
 11450  0058DC  B4D8               	btfsc	status,2,c
 11451  0058DE  0012               	return	
 11452  0058E0  0A01               	xorlw	1	; case 3
 11453  0058E2  B4D8               	btfsc	status,2,c
 11454  0058E4  D7E6               	goto	l2008
 11455  0058E6  0A06               	xorlw	6	; case 5
 11456  0058E8  B4D8               	btfsc	status,2,c
 11457  0058EA  0012               	return	
 11458  0058EC  0A77               	xorlw	119	; case 114
 11459  0058EE  B4D8               	btfsc	status,2,c
 11460  0058F0  0012               	return	
 11461  0058F2  0A01               	xorlw	1	; case 115
 11462  0058F4  B4D8               	btfsc	status,2,c
 11463  0058F6  0012               	return	
 11464  0058F8  0A07               	xorlw	7	; case 116
 11465  0058FA  B4D8               	btfsc	status,2,c
 11466  0058FC  0012               	return	
 11467  0058FE  0A01               	xorlw	1	; case 117
 11468  005900  0012               	return	
 11469  005902                     l16993:
 11470                           
 11471                           ; BSR set to: 0
 11472                           ; Switch size 1, requested type "space"
 11473                           ; Number of cases is 1, Range of values is 255 to 255
 11474                           ; switch strategies available:
 11475                           ; Name         Instructions Cycles
 11476                           ; simple_byte            4     3 (average)
 11477                           ;	Chosen strategy is simple_byte
 11478  005902  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11479  005904  0AFF               	xorlw	255	; case 255
 11480  005906  0012               	return	
 11481  005908                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11482                           	opt stack 0
 11483                           tosu	equ	0xFFF
 11484                           tosh	equ	0xFFE
 11485                           tosl	equ	0xFFD
 11486                           pclath	equ	0xFFA
 11487                           tblptru	equ	0xFF8
 11488                           tblptrh	equ	0xFF7
 11489                           tblptrl	equ	0xFF6
 11490                           tablat	equ	0xFF5
 11491                           prodh	equ	0xFF4
 11492                           prodl	equ	0xFF3
 11493                           intcon	equ	0xFF2
 11494                           intcon2	equ	0xFF1
 11495                           intcon3	equ	0xFF0
 11496                           indf0	equ	0xFEF
 11497                           postinc0	equ	0xFEE
 11498                           plusw0	equ	0xFEB
 11499                           fsr0h	equ	0xFEA
 11500                           fsr0l	equ	0xFE9
 11501                           wreg	equ	0xFE8
 11502                           postinc1	equ	0xFE6
 11503                           postdec1	equ	0xFE5
 11504                           fsr1h	equ	0xFE2
 11505                           fsr1l	equ	0xFE1
 11506                           indf2	equ	0xFDF
 11507                           postinc2	equ	0xFDE
 11508                           postdec2	equ	0xFDD
 11509                           plusw2	equ	0xFDB
 11510                           fsr2h	equ	0xFDA
 11511                           fsr2l	equ	0xFD9
 11512                           status	equ	0xFD8
 11513                           
 11514 ;; *************** function _USBCheckCDCRequest *****************
 11515 ;; Defined at:
 11516 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;		None
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;		None
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1    wreg      void 
 11523 ;; Registers used:
 11524 ;;		wreg, status,2, status,0
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/0
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11534 ;;Total ram usage:        0 bytes
 11535 ;; Hardware stack levels used:    1
 11536 ;; Hardware stack levels required when called:   11
 11537 ;; This function calls:
 11538 ;;		Nothing
 11539 ;; This function is called by:
 11540 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544                           	psect	text45
 11545  0045BE                     __ptext45:
 11546                           	opt stack 0
 11547  0045BE                     _USBCheckCDCRequest:
 11548                           	opt stack 14
 11549                           
 11550                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11551                           
 11552                           ;incstack = 0
 11553  0045BE  0104               	movlb	4	; () banked
 11554  0045C0  5130               	movf	48,w,b	;volatile
 11555  0045C2  0B1F               	andlw	31
 11556  0045C4  06E8               	decf	wreg,f,c
 11557  0045C6  A4D8               	btfss	status,2,c
 11558  0045C8  0012               	return	
 11559                           
 11560                           ; BSR set to: 4
 11561                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11562                           
 11563                           ; BSR set to: 4
 11564                           
 11565                           ; BSR set to: 4
 11566  0045CA  3930               	swapf	48,w,b	;volatile
 11567  0045CC  32E8               	rrcf	wreg,f,c
 11568  0045CE  0B03               	andlw	3
 11569  0045D0  06E8               	decf	wreg,f,c
 11570  0045D2  A4D8               	btfss	status,2,c
 11571  0045D4  0012               	return	
 11572                           
 11573                           ; BSR set to: 4
 11574                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11575                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11576                           
 11577                           ; BSR set to: 4
 11578                           
 11579                           ; BSR set to: 4
 11580  0045D6  5134               	movf	52,w,b	;volatile
 11581  0045D8  B4D8               	btfsc	status,2,c
 11582  0045DA  D037               	goto	l1902
 11583                           
 11584                           ; BSR set to: 4
 11585  0045DC  0534               	decf	52,w,b	;volatile
 11586  0045DE  A4D8               	btfss	status,2,c
 11587  0045E0  0012               	return	
 11588  0045E2  D033               	goto	l1902
 11589  0045E4                     
 11590                           ; BSR set to: 4
 11591                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11592                           
 11593                           ; BSR set to: 4
 11594  0045E4  0E7A               	movlw	low _dummy_encapsulated_cmd_response
 11595  0045E6  0100               	movlb	0	; () banked
 11596  0045E8  6FB0               	movwf	_inPipes& (0+255),b
 11597  0045EA  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11598  0045EC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11602  0045EE  0E00               	movlw	0
 11603  0045F0  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11604  0045F2  0E08               	movlw	8
 11605  0045F4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11609  0045F6  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11613  0045F8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11614                           
 11615                           ;usb_device_cdc.c: 178: break;
 11616  0045FA  0012               	return	
 11617  0045FC                     
 11618                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11619                           
 11620                           ; BSR set to: 0
 11621  0045FC  0E7A               	movlw	low _dummy_encapsulated_cmd_response
 11622  0045FE  0100               	movlb	0	; () banked
 11623  004600  6FB0               	movwf	_inPipes& (0+255),b
 11624  004602  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11625  004604  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11629  004606  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11630                           
 11631                           ;usb_device_cdc.c: 183: break;
 11632  004608  0012               	return	
 11633  00460A                     l1906:
 11634                           
 11635                           ; BSR set to: 4
 11636                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11637  00460A  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11638  00460E  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11639                           
 11640                           ; BSR set to: 4
 11641                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11642  004612  0E82               	movlw	low _line_coding
 11643  004614  0101               	movlb	1	; () banked
 11644  004616  6FC9               	movwf	_outPipes& (0+255),b
 11645  004618  0E03               	movlw	high _line_coding
 11646  00461A  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11647                           
 11648                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11649  00461C  0E00               	movlw	0
 11650  00461E  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11651  004620  0E00               	movlw	0
 11652  004622  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11653                           
 11654                           ; BSR set to: 1
 11655                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11656  004624  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11657                           
 11658                           ;usb_device_cdc.c: 192: break;
 11659  004626  0012               	return	
 11660  004628                     
 11661                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11662                           
 11663                           ; BSR set to: 1
 11664  004628  0E82               	movlw	low _line_coding
 11665  00462A  0100               	movlb	0	; () banked
 11666  00462C  6FB0               	movwf	_inPipes& (0+255),b
 11667  00462E  0E03               	movlw	high _line_coding
 11668  004630  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11669                           
 11670                           ; BSR set to: 0
 11671  004632  0E00               	movlw	0
 11672  004634  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11673  004636  0E07               	movlw	7
 11674  004638  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11675                           
 11676                           ; BSR set to: 0
 11677  00463A  0EC1               	movlw	193
 11678  00463C  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11679                           
 11680                           ;usb_device_cdc.c: 199: break;
 11681  00463E  0012               	return	
 11682  004640                     l1908:
 11683                           
 11684                           ; BSR set to: 4
 11685                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11686  004640  C432 F1DC          	movff	1074,_control_signal_bitmap	;volatile
 11687                           
 11688                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11689  004644  0100               	movlb	0	; () banked
 11690  004646  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11691                           
 11692                           ; BSR set to: 0
 11693                           ;usb_device_cdc.c: 261: }
 11694                           
 11695                           ; BSR set to: 0
 11696                           ;usb_device_cdc.c: 260: break;
 11697                           
 11698                           ;usb_device_cdc.c: 259: default:
 11699                           
 11700                           ;usb_device_cdc.c: 235: break;
 11701  004648  0012               	return	
 11702  00464A                     l1902:
 11703                           
 11704                           ; BSR set to: 0
 11705  00464A  0104               	movlb	4	; () banked
 11706  00464C  5131               	movf	49,w,b	;volatile
 11707                           
 11708                           ; Switch size 1, requested type "space"
 11709                           ; Number of cases is 5, Range of values is 0 to 34
 11710                           ; switch strategies available:
 11711                           ; Name         Instructions Cycles
 11712                           ; simple_byte           16     9 (average)
 11713                           ;	Chosen strategy is simple_byte
 11714  00464E  0A00               	xorlw	0	; case 0
 11715  004650  B4D8               	btfsc	status,2,c
 11716  004652  D7C8               	goto	l1903
 11717  004654  0A01               	xorlw	1	; case 1
 11718  004656  B4D8               	btfsc	status,2,c
 11719  004658  D7D1               	goto	l1905
 11720  00465A  0A21               	xorlw	33	; case 32
 11721  00465C  B4D8               	btfsc	status,2,c
 11722  00465E  D7D5               	goto	l1906
 11723  004660  0A01               	xorlw	1	; case 33
 11724  004662  B4D8               	btfsc	status,2,c
 11725  004664  D7E1               	goto	l1907
 11726  004666  0A03               	xorlw	3	; case 34
 11727  004668  A4D8               	btfss	status,2,c
 11728  00466A  0012               	return	
 11729  00466C  D7E9               	goto	l1908
 11730  00466E                     __end_of_USBCheckCDCRequest:
 11731                           	opt stack 0
 11732                           tosu	equ	0xFFF
 11733                           tosh	equ	0xFFE
 11734                           tosl	equ	0xFFD
 11735                           pclath	equ	0xFFA
 11736                           tblptru	equ	0xFF8
 11737                           tblptrh	equ	0xFF7
 11738                           tblptrl	equ	0xFF6
 11739                           tablat	equ	0xFF5
 11740                           prodh	equ	0xFF4
 11741                           prodl	equ	0xFF3
 11742                           intcon	equ	0xFF2
 11743                           intcon2	equ	0xFF1
 11744                           intcon3	equ	0xFF0
 11745                           indf0	equ	0xFEF
 11746                           postinc0	equ	0xFEE
 11747                           plusw0	equ	0xFEB
 11748                           fsr0h	equ	0xFEA
 11749                           fsr0l	equ	0xFE9
 11750                           wreg	equ	0xFE8
 11751                           postinc1	equ	0xFE6
 11752                           postdec1	equ	0xFE5
 11753                           fsr1h	equ	0xFE2
 11754                           fsr1l	equ	0xFE1
 11755                           indf2	equ	0xFDF
 11756                           postinc2	equ	0xFDE
 11757                           postdec2	equ	0xFDD
 11758                           plusw2	equ	0xFDB
 11759                           fsr2h	equ	0xFDA
 11760                           fsr2l	equ	0xFD9
 11761                           status	equ	0xFD8
 11762                           
 11763 ;; *************** function _CDCInitEP *****************
 11764 ;; Defined at:
 11765 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11766 ;; Parameters:    Size  Location     Type
 11767 ;;		None
 11768 ;; Auto vars:     Size  Location     Type
 11769 ;;		None
 11770 ;; Return value:  Size  Location     Type
 11771 ;;                  1    wreg      void 
 11772 ;; Registers used:
 11773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11774 ;; Tracked objects:
 11775 ;;		On entry : 0/0
 11776 ;;		On exit  : 0/0
 11777 ;;		Unchanged: 0/0
 11778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11783 ;;Total ram usage:        0 bytes
 11784 ;; Hardware stack levels used:    1
 11785 ;; Hardware stack levels required when called:   13
 11786 ;; This function calls:
 11787 ;;		_USBEnableEndpoint
 11788 ;;		_USBTransferOnePacket
 11789 ;; This function is called by:
 11790 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11791 ;; This function uses a non-reentrant model
 11792 ;;
 11793                           
 11794                           	psect	text46
 11795  0055D6                     __ptext46:
 11796                           	opt stack 0
 11797  0055D6                     _CDCInitEP:
 11798                           	opt stack 12
 11799                           
 11800                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11801                           
 11802                           ;incstack = 0
 11803  0055D6  0E80               	movlw	128
 11804  0055D8  0103               	movlb	3	; () banked
 11805  0055DA  6F82               	movwf	_line_coding& (0+255),b
 11806  0055DC  0E25               	movlw	37
 11807  0055DE  6F83               	movwf	(_line_coding+1)& (0+255),b
 11808  0055E0  0E00               	movlw	0
 11809  0055E2  6F84               	movwf	(_line_coding+2)& (0+255),b
 11810  0055E4  0E00               	movlw	0
 11811  0055E6  6F85               	movwf	(_line_coding+3)& (0+255),b
 11812                           
 11813                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11814  0055E8  0E00               	movlw	0
 11815  0055EA  6F86               	movwf	(_line_coding+4)& (0+255),b
 11816                           
 11817                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11818  0055EC  0E00               	movlw	0
 11819  0055EE  6F87               	movwf	(_line_coding+5)& (0+255),b
 11820                           
 11821                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11822  0055F0  0E08               	movlw	8
 11823  0055F2  6F88               	movwf	(_line_coding+6)& (0+255),b
 11824                           
 11825                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11826  0055F4  0E00               	movlw	0
 11827  0055F6  0100               	movlb	0	; () banked
 11828  0055F8  6FC9               	movwf	_cdc_rx_len& (0+255),b
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11832  0055FA  0E1A               	movlw	26
 11833  0055FC  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11834  0055FE  0E01               	movlw	1
 11835  005600  EC82  F030         	call	_USBEnableEndpoint
 11836                           
 11837                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11838  005604  0E1E               	movlw	30
 11839  005606  0100               	movlb	0	; () banked
 11840  005608  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11841  00560A  0E02               	movlw	2
 11842  00560C  EC82  F030         	call	_USBEnableEndpoint
 11843                           
 11844                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11845  005610  0E00               	movlw	0
 11846  005612  0100               	movlb	0	; () banked
 11847  005614  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11848  005616  0E00               	movlw	low _cdc_data_rx
 11849  005618  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11850  00561A  0E05               	movlw	high _cdc_data_rx
 11851  00561C  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11852  00561E  0E40               	movlw	64
 11853  005620  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11854  005622  0E02               	movlw	2
 11855  005624  EC6C  F021         	call	_USBTransferOnePacket
 11856  005628  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11857  00562C  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11858                           
 11859                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11860  005630  0E00               	movlw	0
 11861  005632  0101               	movlb	1	; () banked
 11862  005634  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11863  005636  0E00               	movlw	0
 11864  005638  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11865                           
 11866                           ; BSR set to: 1
 11867                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11868  00563A  0E00               	movlw	0
 11869  00563C  0100               	movlb	0	; () banked
 11870  00563E  6FC8               	movwf	_cdc_trf_state& (0+255),b
 11871                           
 11872                           ; BSR set to: 0
 11873  005640  0012               	return		;funcret
 11874  005642                     __end_of_CDCInitEP:
 11875                           	opt stack 0
 11876                           tosu	equ	0xFFF
 11877                           tosh	equ	0xFFE
 11878                           tosl	equ	0xFFD
 11879                           pclath	equ	0xFFA
 11880                           tblptru	equ	0xFF8
 11881                           tblptrh	equ	0xFF7
 11882                           tblptrl	equ	0xFF6
 11883                           tablat	equ	0xFF5
 11884                           prodh	equ	0xFF4
 11885                           prodl	equ	0xFF3
 11886                           intcon	equ	0xFF2
 11887                           intcon2	equ	0xFF1
 11888                           intcon3	equ	0xFF0
 11889                           indf0	equ	0xFEF
 11890                           postinc0	equ	0xFEE
 11891                           plusw0	equ	0xFEB
 11892                           fsr0h	equ	0xFEA
 11893                           fsr0l	equ	0xFE9
 11894                           wreg	equ	0xFE8
 11895                           postinc1	equ	0xFE6
 11896                           postdec1	equ	0xFE5
 11897                           fsr1h	equ	0xFE2
 11898                           fsr1l	equ	0xFE1
 11899                           indf2	equ	0xFDF
 11900                           postinc2	equ	0xFDE
 11901                           postdec2	equ	0xFDD
 11902                           plusw2	equ	0xFDB
 11903                           fsr2h	equ	0xFDA
 11904                           fsr2l	equ	0xFD9
 11905                           status	equ	0xFD8
 11906                           
 11907 ;; *************** function _USBEnableEndpoint *****************
 11908 ;; Defined at:
 11909 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11910 ;; Parameters:    Size  Location     Type
 11911 ;;  ep              1    wreg     unsigned char 
 11912 ;;  options         1   37[BANK0 ] unsigned char 
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;  ep              1   40[BANK0 ] unsigned char 
 11915 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11916 ;;		 -> UEP0(1), 
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11926 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11927 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11930 ;;Total ram usage:        4 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:   12
 11933 ;; This function calls:
 11934 ;;		_USBConfigureEndpoint
 11935 ;; This function is called by:
 11936 ;;		_CDCInitEP
 11937 ;; This function uses a non-reentrant model
 11938 ;;
 11939                           
 11940                           	psect	text47
 11941  006104                     __ptext47:
 11942                           	opt stack 0
 11943  006104                     _USBEnableEndpoint:
 11944                           	opt stack 12
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;incstack = 0
 11948                           ;USBEnableEndpoint@ep stored from wreg
 11949  006104  0100               	movlb	0	; () banked
 11950  006106  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11951                           
 11952                           ;usb_device.c: 898: unsigned char* p;
 11953                           ;usb_device.c: 902: if(options & 0x04)
 11954  006108  0100               	movlb	0	; () banked
 11955  00610A  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11956  00610C  D005               	goto	l1643
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;usb_device.c: 903: {
 11960                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11961  00610E  0E00               	movlw	0
 11962  006110  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11963  006112  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11964  006114  EC1C  F026         	call	_USBConfigureEndpoint
 11965  006118                     l1643:
 11966                           
 11967                           ;usb_device.c: 905: }
 11968                           ;usb_device.c: 906: if(options & 0x02)
 11969  006118  0100               	movlb	0	; () banked
 11970  00611A  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11971  00611C  D005               	goto	l1644
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;usb_device.c: 907: {
 11975                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11976  00611E  0E01               	movlw	1
 11977  006120  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11978  006122  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11979  006124  EC1C  F026         	call	_USBConfigureEndpoint
 11980  006128                     l1644:
 11981                           
 11982                           ;usb_device.c: 909: }
 11983                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11984  006128  0100               	movlb	0	; () banked
 11985  00612A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11986  00612C  0D01               	mullw	1
 11987  00612E  0E26               	movlw	38
 11988  006130  24F3               	addwf	prodl,w,c
 11989  006132  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11990  006134  0E0F               	movlw	15
 11991  006136  20F4               	addwfc	prodh,w,c
 11992  006138  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11993                           
 11994                           ; BSR set to: 0
 11995                           ;usb_device.c: 919: *p = options;
 11996  00613A  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11997  00613E  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11998  006142  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11999                           
 12000                           ; BSR set to: 0
 12001  006146  0012               	return		;funcret
 12002  006148                     __end_of_USBEnableEndpoint:
 12003                           	opt stack 0
 12004                           tosu	equ	0xFFF
 12005                           tosh	equ	0xFFE
 12006                           tosl	equ	0xFFD
 12007                           pclath	equ	0xFFA
 12008                           tblptru	equ	0xFF8
 12009                           tblptrh	equ	0xFF7
 12010                           tblptrl	equ	0xFF6
 12011                           tablat	equ	0xFF5
 12012                           prodh	equ	0xFF4
 12013                           prodl	equ	0xFF3
 12014                           intcon	equ	0xFF2
 12015                           intcon2	equ	0xFF1
 12016                           intcon3	equ	0xFF0
 12017                           indf0	equ	0xFEF
 12018                           postinc0	equ	0xFEE
 12019                           plusw0	equ	0xFEB
 12020                           fsr0h	equ	0xFEA
 12021                           fsr0l	equ	0xFE9
 12022                           wreg	equ	0xFE8
 12023                           postinc1	equ	0xFE6
 12024                           postdec1	equ	0xFE5
 12025                           fsr1h	equ	0xFE2
 12026                           fsr1l	equ	0xFE1
 12027                           indf2	equ	0xFDF
 12028                           postinc2	equ	0xFDE
 12029                           postdec2	equ	0xFDD
 12030                           plusw2	equ	0xFDB
 12031                           fsr2h	equ	0xFDA
 12032                           fsr2l	equ	0xFD9
 12033                           status	equ	0xFD8
 12034                           
 12035 ;; *************** function _USBConfigureEndpoint *****************
 12036 ;; Defined at:
 12037 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12038 ;; Parameters:    Size  Location     Type
 12039 ;;  EPNum           1    wreg     unsigned char 
 12040 ;;  direction       1   29[BANK0 ] unsigned char 
 12041 ;; Auto vars:     Size  Location     Type
 12042 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12043 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12044 ;;		 -> BDT(48), 
 12045 ;; Return value:  Size  Location     Type
 12046 ;;                  1    wreg      void 
 12047 ;; Registers used:
 12048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12049 ;; Tracked objects:
 12050 ;;		On entry : 0/0
 12051 ;;		On exit  : 0/0
 12052 ;;		Unchanged: 0/0
 12053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12054 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12055 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12056 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12057 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12058 ;;Total ram usage:        8 bytes
 12059 ;; Hardware stack levels used:    1
 12060 ;; Hardware stack levels required when called:   11
 12061 ;; This function calls:
 12062 ;;		Nothing
 12063 ;; This function is called by:
 12064 ;;		_USBEnableEndpoint
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           
 12068                           	psect	text48
 12069  004C38                     __ptext48:
 12070                           	opt stack 0
 12071  004C38                     _USBConfigureEndpoint:
 12072                           	opt stack 12
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;incstack = 0
 12076                           ;USBConfigureEndpoint@EPNum stored from wreg
 12077  004C38  0100               	movlb	0	; () banked
 12078  004C3A  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12079                           
 12080                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12081                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12082  004C3C  0E00               	movlw	0
 12083  004C3E  0100               	movlb	0	; () banked
 12084  004C40  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12085  004C42  0E04               	movlw	4
 12086  004C44  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12090  004C46  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12091  004C48  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12092  004C4A  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12093  004C4C  90D8               	bcf	status,0,c
 12094  004C4E  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12095  004C50  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12096  004C52  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12097  004C54  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12098  004C56  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12099  004C58  90D8               	bcf	status,0,c
 12100  004C5A  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12101  004C5C  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12102  004C5E  90D8               	bcf	status,0,c
 12103  004C60  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12104  004C62  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12105  004C64  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12106  004C66  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12107  004C68  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12108  004C6A  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12109  004C6C  90D8               	bcf	status,0,c
 12110  004C6E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12111  004C70  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12112  004C72  90D8               	bcf	status,0,c
 12113  004C74  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12114  004C76  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12115  004C78  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12116  004C7A  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12117  004C7C  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12118  004C7E  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12122  004C80  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12123  004C84  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12124  004C88  9EDF               	bcf	indf2,7,c
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;usb_device.c: 1575: if(direction == 0)
 12128  004C8A  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12129  004C8C  A4D8               	btfss	status,2,c
 12130  004C8E  D007               	goto	l1679
 12131                           
 12132                           ; BSR set to: 0
 12133                           ;usb_device.c: 1576: {
 12134                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12135  004C90  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12136  004C92  0D02               	mullw	2
 12137  004C94  0E0E               	movlw	low _pBDTEntryOut
 12138  004C96  24F3               	addwf	prodl,w,c
 12139  004C98  6ED9               	movwf	fsr2l,c
 12140  004C9A  0E03               	movlw	high _pBDTEntryOut
 12141  004C9C  D006               	goto	L10
 12142  004C9E                     l1679:
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;usb_device.c: 1579: else
 12146                           ;usb_device.c: 1580: {
 12147                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12148                           
 12149                           ; BSR set to: 0
 12150  004C9E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12151  004CA0  0D02               	mullw	2
 12152  004CA2  0EB6               	movlw	low _pBDTEntryIn
 12153  004CA4  24F3               	addwf	prodl,w,c
 12154  004CA6  6ED9               	movwf	fsr2l,c
 12155  004CA8  0E00               	movlw	high _pBDTEntryIn
 12156  004CAA                     L10:
 12157  004CAA  20F4               	addwfc	prodh,w,c
 12158  004CAC  6EDA               	movwf	fsr2h,c
 12159  004CAE  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12160  004CB2  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12161                           
 12162                           ; BSR set to: 0
 12163                           ;usb_device.c: 1582: }
 12164                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12165                           
 12166                           ; BSR set to: 0
 12167  004CB6  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12168  004CBA  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12169  004CBE  9CDF               	bcf	indf2,6,c
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12173  004CC0  EE20 F004          	lfsr	2,4
 12174  004CC4  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12175  004CC6  26D9               	addwf	fsr2l,f,c
 12176  004CC8  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12177  004CCA  22DA               	addwfc	fsr2h,f,c
 12178  004CCC  8CDF               	bsf	indf2,6,c
 12179                           
 12180                           ; BSR set to: 0
 12181  004CCE  0012               	return		;funcret
 12182  004CD0                     __end_of_USBConfigureEndpoint:
 12183                           	opt stack 0
 12184                           tosu	equ	0xFFF
 12185                           tosh	equ	0xFFE
 12186                           tosl	equ	0xFFD
 12187                           pclath	equ	0xFFA
 12188                           tblptru	equ	0xFF8
 12189                           tblptrh	equ	0xFF7
 12190                           tblptrl	equ	0xFF6
 12191                           tablat	equ	0xFF5
 12192                           prodh	equ	0xFF4
 12193                           prodl	equ	0xFF3
 12194                           intcon	equ	0xFF2
 12195                           intcon2	equ	0xFF1
 12196                           intcon3	equ	0xFF0
 12197                           indf0	equ	0xFEF
 12198                           postinc0	equ	0xFEE
 12199                           plusw0	equ	0xFEB
 12200                           fsr0h	equ	0xFEA
 12201                           fsr0l	equ	0xFE9
 12202                           wreg	equ	0xFE8
 12203                           postinc1	equ	0xFE6
 12204                           postdec1	equ	0xFE5
 12205                           fsr1h	equ	0xFE2
 12206                           fsr1l	equ	0xFE1
 12207                           indf2	equ	0xFDF
 12208                           postinc2	equ	0xFDE
 12209                           postdec2	equ	0xFDD
 12210                           plusw2	equ	0xFDB
 12211                           fsr2h	equ	0xFDA
 12212                           fsr2l	equ	0xFD9
 12213                           status	equ	0xFD8
 12214                           
 12215 ;; *************** function _USBCtrlTrfOutHandler *****************
 12216 ;; Defined at:
 12217 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;		None
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;		None
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12235 ;;Total ram usage:        0 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:   13
 12238 ;; This function calls:
 12239 ;;		_USBCtrlTrfRxService
 12240 ;; This function is called by:
 12241 ;;		_USBCtrlEPService
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           	psect	text49
 12246  005716                     __ptext49:
 12247                           	opt stack 0
 12248  005716                     _USBCtrlTrfOutHandler:
 12249                           	opt stack 12
 12250                           
 12251                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12252                           
 12253                           ; BSR set to: 0
 12254                           ;incstack = 0
 12255  005716  0E02               	movlw	2
 12256  005718  0100               	movlb	0	; () banked
 12257  00571A  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12258  00571C  A4D8               	btfss	status,2,c
 12259  00571E  D003               	goto	l1785
 12260                           
 12261                           ; BSR set to: 0
 12262                           ;usb_device.c: 2558: {
 12263                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12264  005720  EC14  F017         	call	_USBCtrlTrfRxService	;wreg free
 12265                           
 12266                           ;usb_device.c: 2560: }
 12267  005724  0012               	return	
 12268  005726                     l1785:
 12269                           
 12270                           ;usb_device.c: 2561: else
 12271                           ;usb_device.c: 2562: {
 12272                           ;usb_device.c: 2565: controlTransferState = 0;
 12273  005726  0E00               	movlw	0
 12274  005728  0100               	movlb	0	; () banked
 12275  00572A  6FCC               	movwf	_controlTransferState& (0+255),b
 12276                           
 12277                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12278  00572C  0101               	movlb	1	; () banked
 12279  00572E  51DF               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12280  005730  A4D8               	btfss	status,2,c
 12281  005732  D020               	goto	l1787
 12282                           
 12283                           ; BSR set to: 1
 12284                           ;usb_device.c: 2573: {
 12285                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12286  005734  0100               	movlb	0	; () banked
 12287  005736  EE20 F001          	lfsr	2,1
 12288  00573A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12289  00573C  26D9               	addwf	fsr2l,f,c
 12290  00573E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12291  005740  22DA               	addwfc	fsr2h,f,c
 12292  005742  0E08               	movlw	8
 12293  005744  6EDF               	movwf	indf2,c
 12294                           
 12295                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12296  005746  EE20 F002          	lfsr	2,2
 12297  00574A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12298  00574C  26D9               	addwf	fsr2l,f,c
 12299  00574E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12300  005750  22DA               	addwfc	fsr2h,f,c
 12301  005752  0E30               	movlw	48
 12302  005754  6EDE               	movwf	postinc2,c
 12303  005756  0E04               	movlw	4
 12304  005758  6EDD               	movwf	postdec2,c
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12308  00575A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12309  00575E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12310  005762  0E0C               	movlw	12
 12311  005764  6EDF               	movwf	indf2,c
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12315  005766  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12316  00576A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12317  00576E  0E00               	movlw	0
 12318  005770  8EDB               	bsf	plusw2,7,c
 12319                           
 12320                           ;usb_device.c: 2578: }
 12321  005772  0012               	return	
 12322  005774                     l1787:
 12323                           
 12324                           ;usb_device.c: 2579: else
 12325                           ;usb_device.c: 2580: {
 12326                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12327                           
 12328                           ; BSR set to: 0
 12329  005774  0E00               	movlw	0
 12330  005776  0101               	movlb	1	; () banked
 12331  005778  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12332                           
 12333                           ; BSR set to: 1
 12334  00577A  0012               	return	
 12335  00577C                     __end_of_USBCtrlTrfOutHandler:
 12336                           	opt stack 0
 12337                           tosu	equ	0xFFF
 12338                           tosh	equ	0xFFE
 12339                           tosl	equ	0xFFD
 12340                           pclath	equ	0xFFA
 12341                           tblptru	equ	0xFF8
 12342                           tblptrh	equ	0xFF7
 12343                           tblptrl	equ	0xFF6
 12344                           tablat	equ	0xFF5
 12345                           prodh	equ	0xFF4
 12346                           prodl	equ	0xFF3
 12347                           intcon	equ	0xFF2
 12348                           intcon2	equ	0xFF1
 12349                           intcon3	equ	0xFF0
 12350                           indf0	equ	0xFEF
 12351                           postinc0	equ	0xFEE
 12352                           plusw0	equ	0xFEB
 12353                           fsr0h	equ	0xFEA
 12354                           fsr0l	equ	0xFE9
 12355                           wreg	equ	0xFE8
 12356                           postinc1	equ	0xFE6
 12357                           postdec1	equ	0xFE5
 12358                           fsr1h	equ	0xFE2
 12359                           fsr1l	equ	0xFE1
 12360                           indf2	equ	0xFDF
 12361                           postinc2	equ	0xFDE
 12362                           postdec2	equ	0xFDD
 12363                           plusw2	equ	0xFDB
 12364                           fsr2h	equ	0xFDA
 12365                           fsr2l	equ	0xFD9
 12366                           status	equ	0xFD8
 12367                           
 12368 ;; *************** function _USBCtrlTrfRxService *****************
 12369 ;; Defined at:
 12370 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12375 ;;  i               1   29[BANK0 ] unsigned char 
 12376 ;; Return value:  Size  Location     Type
 12377 ;;                  1    wreg      void 
 12378 ;; Registers used:
 12379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12380 ;; Tracked objects:
 12381 ;;		On entry : 0/0
 12382 ;;		On exit  : 0/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12386 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12388 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12389 ;;Total ram usage:        2 bytes
 12390 ;; Hardware stack levels used:    1
 12391 ;; Hardware stack levels required when called:   12
 12392 ;; This function calls:
 12393 ;;		_USBCtrlEPAllowStatusStage
 12394 ;; This function is called by:
 12395 ;;		_USBCtrlTrfOutHandler
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text50
 12400  002E28                     __ptext50:
 12401                           	opt stack 0
 12402  002E28                     _USBCtrlTrfRxService:
 12403                           	opt stack 12
 12404                           
 12405                           ;usb_device.c: 1872: uint8_t byteToRead;
 12406                           ;usb_device.c: 1873: uint8_t i;
 12407                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12408                           
 12409                           ;incstack = 0
 12410  002E28  0100               	movlb	0	; () banked
 12411  002E2A  EE20 F001          	lfsr	2,1
 12412  002E2E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12413  002E30  26D9               	addwf	fsr2l,f,c
 12414  002E32  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12415  002E34  22DA               	addwfc	fsr2h,f,c
 12416  002E36  50DF               	movf	indf2,w,c
 12417  002E38  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12421  002E3A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12422  002E3C  0101               	movlb	1	; () banked
 12423  002E3E  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12424  002E40  0E00               	movlw	0
 12425  002E42  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12426  002E44  A0D8               	btfss	status,0,c
 12427                           
 12428                           ; BSR set to: 1
 12429                           ;usb_device.c: 1884: {
 12430                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12431  002E46  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12432                           
 12433                           ; BSR set to: 1
 12434                           ;usb_device.c: 1886: }
 12435                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12436                           
 12437                           ; BSR set to: 1
 12438  002E4A  0100               	movlb	0	; () banked
 12439  002E4C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12440  002E4E  0101               	movlb	1	; () banked
 12441  002E50  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12442  002E52  0E00               	movlw	0
 12443  002E54  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12444                           
 12445                           ; BSR set to: 1
 12446                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12447  002E56  0E00               	movlw	0
 12448  002E58  0100               	movlb	0	; () banked
 12449  002E5A  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12450  002E5C  D013               	goto	l1713
 12451  002E5E                     
 12452                           ; BSR set to: 0
 12453                           ;usb_device.c: 1893: {
 12454                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12455                           
 12456                           ; BSR set to: 0
 12457  002E5E  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12458  002E60  0D01               	mullw	1
 12459  002E62  0E38               	movlw	56
 12460  002E64  24F3               	addwf	prodl,w,c
 12461  002E66  6ED9               	movwf	fsr2l,c
 12462  002E68  0E04               	movlw	4
 12463  002E6A  20F4               	addwfc	prodh,w,c
 12464  002E6C  6EDA               	movwf	fsr2h,c
 12465  002E6E  C1C9  FFE1         	movff	_outPipes,fsr1l
 12466  002E72  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12467  002E76  CFDF FFE7          	movff	indf2,indf1
 12468                           
 12469                           ; BSR set to: 0
 12470  002E7A  0101               	movlb	1	; () banked
 12471  002E7C  4BC9               	infsnz	_outPipes& (0+255),f,b
 12472  002E7E  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12473                           
 12474                           ; BSR set to: 1
 12475  002E80  0100               	movlb	0	; () banked
 12476  002E82  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12477  002E84                     l1713:
 12478                           
 12479                           ; BSR set to: 0
 12480                           
 12481                           ; BSR set to: 0
 12482  002E84  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12483  002E86  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12484  002E88  A0D8               	btfss	status,0,c
 12485  002E8A  D7E9               	goto	l1714
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;usb_device.c: 1895: }
 12489                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12490                           
 12491                           ; BSR set to: 0
 12492  002E8C  0101               	movlb	1	; () banked
 12493  002E8E  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12494  002E90  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12495  002E92  B4D8               	btfsc	status,2,c
 12496  002E94  D033               	goto	l1716
 12497                           
 12498                           ; BSR set to: 1
 12499                           ;usb_device.c: 1900: {
 12500                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12501  002E96  0100               	movlb	0	; () banked
 12502  002E98  EE20 F001          	lfsr	2,1
 12503  002E9C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12504  002E9E  26D9               	addwf	fsr2l,f,c
 12505  002EA0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12506  002EA2  22DA               	addwfc	fsr2h,f,c
 12507  002EA4  0E08               	movlw	8
 12508  002EA6  6EDF               	movwf	indf2,c
 12509                           
 12510                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12511  002EA8  EE20 F002          	lfsr	2,2
 12512  002EAC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12513  002EAE  26D9               	addwf	fsr2l,f,c
 12514  002EB0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12515  002EB2  22DA               	addwfc	fsr2h,f,c
 12516  002EB4  0E38               	movlw	56
 12517  002EB6  6EDE               	movwf	postinc2,c
 12518  002EB8  0E04               	movlw	4
 12519  002EBA  6EDD               	movwf	postdec2,c
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12523  002EBC  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12524  002EC0  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12525  002EC4  BCDF               	btfsc	indf2,6,c
 12526  002EC6  D00D               	goto	l1717
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;usb_device.c: 1904: {
 12530                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12531  002EC8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12532  002ECC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12533  002ED0  0E48               	movlw	72
 12534  002ED2  6EDF               	movwf	indf2,c
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12538  002ED4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12539  002ED8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12540  002EDC  0E00               	movlw	0
 12541  002EDE  8EDB               	bsf	plusw2,7,c
 12542                           
 12543                           ;usb_device.c: 1907: }
 12544  002EE0  0012               	return	
 12545  002EE2                     l1717:
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;usb_device.c: 1908: else
 12549                           ;usb_device.c: 1909: {
 12550                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12551                           
 12552                           ; BSR set to: 0
 12553  002EE2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12554  002EE6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12555  002EEA  0E08               	movlw	8
 12556  002EEC  6EDF               	movwf	indf2,c
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12560  002EEE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12561  002EF2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12562  002EF6  0E00               	movlw	0
 12563  002EF8  8EDB               	bsf	plusw2,7,c
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;usb_device.c: 1912: }
 12567                           ;usb_device.c: 1913: }
 12568  002EFA  0012               	return	
 12569  002EFC                     l1716:
 12570                           
 12571                           ;usb_device.c: 1914: else
 12572                           ;usb_device.c: 1915: {
 12573                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12574                           
 12575                           ; BSR set to: 0
 12576  002EFC  0100               	movlb	0	; () banked
 12577  002EFE  EE20 F001          	lfsr	2,1
 12578  002F02  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12579  002F04  26D9               	addwf	fsr2l,f,c
 12580  002F06  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12581  002F08  22DA               	addwfc	fsr2h,f,c
 12582  002F0A  0E08               	movlw	8
 12583  002F0C  6EDF               	movwf	indf2,c
 12584                           
 12585                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12586  002F0E  EE20 F002          	lfsr	2,2
 12587  002F12  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12588  002F14  26D9               	addwf	fsr2l,f,c
 12589  002F16  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12590  002F18  22DA               	addwfc	fsr2h,f,c
 12591  002F1A  0E30               	movlw	48
 12592  002F1C  6EDE               	movwf	postinc2,c
 12593  002F1E  0E04               	movlw	4
 12594  002F20  6EDD               	movwf	postdec2,c
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12598  002F22  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12599  002F26  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12600  002F2A  0E04               	movlw	4
 12601  002F2C  6EDF               	movwf	indf2,c
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12605  002F2E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12606  002F32  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12607  002F36  0E00               	movlw	0
 12608  002F38  8EDB               	bsf	plusw2,7,c
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;usb_device.c: 1944: }
 12612                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12613                           
 12614                           ; BSR set to: 0
 12615  002F3A  0101               	movlb	1	; () banked
 12616  002F3C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12617                           
 12618                           ; BSR set to: 1
 12619                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12620  002F3E  0100               	movlb	0	; () banked
 12621  002F40  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12622  002F42  A4D8               	btfss	status,2,c
 12623  002F44  0012               	return	
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;usb_device.c: 1960: {
 12627                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12628  002F46  ECB2  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12629  002F4A  0012               	return	
 12630  002F4C                     __end_of_USBCtrlTrfRxService:
 12631                           	opt stack 0
 12632                           tosu	equ	0xFFF
 12633                           tosh	equ	0xFFE
 12634                           tosl	equ	0xFFD
 12635                           pclath	equ	0xFFA
 12636                           tblptru	equ	0xFF8
 12637                           tblptrh	equ	0xFF7
 12638                           tblptrl	equ	0xFF6
 12639                           tablat	equ	0xFF5
 12640                           prodh	equ	0xFF4
 12641                           prodl	equ	0xFF3
 12642                           intcon	equ	0xFF2
 12643                           intcon2	equ	0xFF1
 12644                           intcon3	equ	0xFF0
 12645                           indf0	equ	0xFEF
 12646                           postinc0	equ	0xFEE
 12647                           plusw0	equ	0xFEB
 12648                           fsr0h	equ	0xFEA
 12649                           fsr0l	equ	0xFE9
 12650                           wreg	equ	0xFE8
 12651                           indf1	equ	0xFE7
 12652                           postinc1	equ	0xFE6
 12653                           postdec1	equ	0xFE5
 12654                           fsr1h	equ	0xFE2
 12655                           fsr1l	equ	0xFE1
 12656                           indf2	equ	0xFDF
 12657                           postinc2	equ	0xFDE
 12658                           postdec2	equ	0xFDD
 12659                           plusw2	equ	0xFDB
 12660                           fsr2h	equ	0xFDA
 12661                           fsr2l	equ	0xFD9
 12662                           status	equ	0xFD8
 12663                           
 12664 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12665 ;; Defined at:
 12666 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;		None
 12669 ;; Auto vars:     Size  Location     Type
 12670 ;;		None
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  1    wreg      void 
 12673 ;; Registers used:
 12674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12684 ;;Total ram usage:        0 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; Hardware stack levels required when called:   11
 12687 ;; This function calls:
 12688 ;;		Nothing
 12689 ;; This function is called by:
 12690 ;;		_USBDeviceTasks
 12691 ;;		_USBCtrlEPServiceComplete
 12692 ;;		_USBCtrlTrfRxService
 12693 ;; This function uses a non-reentrant model
 12694 ;;
 12695                           
 12696                           	psect	text51
 12697  003D64                     __ptext51:
 12698                           	opt stack 0
 12699  003D64                     _USBCtrlEPAllowStatusStage:
 12700                           	opt stack 12
 12701                           
 12702                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12703                           
 12704                           ;incstack = 0
 12705  003D64  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12706  003D66  A4D8               	btfss	status,2,c
 12707  003D68  0012               	return	
 12708                           
 12709                           ;usb_device.c: 1442: {
 12710                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12711  003D6A  0E01               	movlw	1
 12712  003D6C  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12713                           
 12714                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12715  003D6E  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12716  003D70  A4D8               	btfss	status,2,c
 12717  003D72  0012               	return	
 12718                           
 12719                           ;usb_device.c: 1445: {
 12720                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12721  003D74  0E01               	movlw	1
 12722  003D76  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12723                           
 12724                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12725  003D78  0E02               	movlw	2
 12726  003D7A  0100               	movlb	0	; () banked
 12727  003D7C  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12728  003D7E  A4D8               	btfss	status,2,c
 12729  003D80  D015               	goto	l1667
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;usb_device.c: 1451: {
 12733                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12734  003D82  EE20 F001          	lfsr	2,1
 12735  003D86  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12736  003D88  26D9               	addwf	fsr2l,f,c
 12737  003D8A  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12738  003D8C  22DA               	addwfc	fsr2h,f,c
 12739  003D8E  0E00               	movlw	0
 12740  003D90  6EDF               	movwf	indf2,c
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12744  003D92  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12745  003D96  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12746  003D9A  0E48               	movlw	72
 12747  003D9C  6EDF               	movwf	indf2,c
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12751  003D9E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12752  003DA2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12753  003DA6  0E00               	movlw	0
 12754  003DA8  8EDB               	bsf	plusw2,7,c
 12755                           
 12756                           ;usb_device.c: 1455: }
 12757  003DAA  0012               	return	
 12758  003DAC                     l1667:
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12762                           
 12763                           ; BSR set to: 0
 12764  003DAC  05CC               	decf	_controlTransferState& (0+255),w,b
 12765  003DAE  A4D8               	btfss	status,2,c
 12766  003DB0  0012               	return	
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;usb_device.c: 1457: {
 12770                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12771  003DB2  0E00               	movlw	0
 12772  003DB4  0101               	movlb	1	; () banked
 12773  003DB6  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12774                           
 12775                           ; BSR set to: 1
 12776                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12777  003DB8  0100               	movlb	0	; () banked
 12778  003DBA  EE20 F001          	lfsr	2,1
 12779  003DBE  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12780  003DC0  26D9               	addwf	fsr2l,f,c
 12781  003DC2  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12782  003DC4  22DA               	addwfc	fsr2h,f,c
 12783  003DC6  0E08               	movlw	8
 12784  003DC8  6EDF               	movwf	indf2,c
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12788  003DCA  EE20 F002          	lfsr	2,2
 12789  003DCE  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12790  003DD0  26D9               	addwf	fsr2l,f,c
 12791  003DD2  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12792  003DD4  22DA               	addwfc	fsr2h,f,c
 12793  003DD6  0E30               	movlw	48
 12794  003DD8  6EDE               	movwf	postinc2,c
 12795  003DDA  0E04               	movlw	4
 12796  003DDC  6EDD               	movwf	postdec2,c
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12800  003DDE  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12801  003DE2  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12802  003DE6  0E04               	movlw	4
 12803  003DE8  6EDF               	movwf	indf2,c
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12807  003DEA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12808  003DEE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12809  003DF2  0E00               	movlw	0
 12810  003DF4  8EDB               	bsf	plusw2,7,c
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12814  003DF6  0E01               	movlw	1
 12815  003DF8  0101               	movlb	1	; () banked
 12816  003DFA  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12817                           
 12818                           ; BSR set to: 1
 12819                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12820  003DFC  0100               	movlb	0	; () banked
 12821  003DFE  EE20 F001          	lfsr	2,1
 12822  003E02  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12823  003E04  26D9               	addwf	fsr2l,f,c
 12824  003E06  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12825  003E08  22DA               	addwfc	fsr2h,f,c
 12826  003E0A  0E08               	movlw	8
 12827  003E0C  6EDF               	movwf	indf2,c
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12831  003E0E  EE20 F002          	lfsr	2,2
 12832  003E12  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12833  003E14  26D9               	addwf	fsr2l,f,c
 12834  003E16  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12835  003E18  22DA               	addwfc	fsr2h,f,c
 12836  003E1A  0E30               	movlw	48
 12837  003E1C  6EDE               	movwf	postinc2,c
 12838  003E1E  0E04               	movlw	4
 12839  003E20  6EDD               	movwf	postdec2,c
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12843  003E22  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12844  003E26  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12845  003E2A  0E80               	movlw	128
 12846  003E2C  6EDF               	movwf	indf2,c
 12847                           
 12848                           ; BSR set to: 0
 12849                           
 12850                           ; BSR set to: 0
 12851                           
 12852                           ; BSR set to: 0
 12853  003E2E  0012               	return	
 12854  003E30                     __end_of_USBCtrlEPAllowStatusStage:
 12855                           	opt stack 0
 12856                           tosu	equ	0xFFF
 12857                           tosh	equ	0xFFE
 12858                           tosl	equ	0xFFD
 12859                           pclath	equ	0xFFA
 12860                           tblptru	equ	0xFF8
 12861                           tblptrh	equ	0xFF7
 12862                           tblptrl	equ	0xFF6
 12863                           tablat	equ	0xFF5
 12864                           prodh	equ	0xFF4
 12865                           prodl	equ	0xFF3
 12866                           intcon	equ	0xFF2
 12867                           intcon2	equ	0xFF1
 12868                           intcon3	equ	0xFF0
 12869                           indf0	equ	0xFEF
 12870                           postinc0	equ	0xFEE
 12871                           plusw0	equ	0xFEB
 12872                           fsr0h	equ	0xFEA
 12873                           fsr0l	equ	0xFE9
 12874                           wreg	equ	0xFE8
 12875                           indf1	equ	0xFE7
 12876                           postinc1	equ	0xFE6
 12877                           postdec1	equ	0xFE5
 12878                           fsr1h	equ	0xFE2
 12879                           fsr1l	equ	0xFE1
 12880                           indf2	equ	0xFDF
 12881                           postinc2	equ	0xFDE
 12882                           postdec2	equ	0xFDD
 12883                           plusw2	equ	0xFDB
 12884                           fsr2h	equ	0xFDA
 12885                           fsr2l	equ	0xFD9
 12886                           status	equ	0xFD8
 12887                           
 12888 ;; *************** function _USBCtrlTrfInHandler *****************
 12889 ;; Defined at:
 12890 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;		None
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;Total ram usage:        1 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:   12
 12911 ;; This function calls:
 12912 ;;		_USBCtrlTrfTxService
 12913 ;; This function is called by:
 12914 ;;		_USBCtrlEPService
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text52
 12919  004216                     __ptext52:
 12920                           	opt stack 0
 12921  004216                     _USBCtrlTrfInHandler:
 12922                           	opt stack 13
 12923                           
 12924                           ;usb_device.c: 2611: uint8_t lastDTS;
 12925                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12926                           
 12927                           ;incstack = 0
 12928  004216  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12929  00421A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12930  00421E  0100               	movlb	0	; () banked
 12931  004220  0E00               	movlw	0
 12932  004222  BCDF               	btfsc	indf2,6,c
 12933  004224  0E01               	movlw	1
 12934  004226  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12938  004228  0E04               	movlw	4
 12939  00422A  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12940                           
 12941                           ; BSR set to: 0
 12942                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12943  00422C  0E08               	movlw	8
 12944  00422E  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12945  004230  A4D8               	btfss	status,2,c
 12946  004232  D00D               	goto	l1794
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;usb_device.c: 2622: {
 12950                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12951  004234  0104               	movlb	4	; () banked
 12952  004236  5132               	movf	50,w,b	;volatile
 12953  004238  0B7F               	andlw	127
 12954  00423A  010F               	movlb	15	; () banked
 12955  00423C  6F38               	movwf	56,b	;volatile
 12956                           
 12957                           ; BSR set to: 15
 12958                           ;usb_device.c: 2624: if(UADDR != 0u)
 12959  00423E  5138               	movf	56,w,b	;volatile
 12960  004240  B4D8               	btfsc	status,2,c
 12961  004242  D002               	goto	l1793
 12962                           
 12963                           ; BSR set to: 15
 12964                           ;usb_device.c: 2625: {
 12965                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12966  004244  0E10               	movlw	16
 12967  004246  D001               	goto	L11
 12968  004248                     l1793:
 12969                           
 12970                           ;usb_device.c: 2628: else
 12971                           ;usb_device.c: 2629: {
 12972                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12973                           
 12974                           ; BSR set to: 0
 12975  004248  0E04               	movlw	4
 12976  00424A                     L11:
 12977  00424A  0100               	movlb	0	; () banked
 12978  00424C  6FCE               	movwf	_USBDeviceState& (0+255),b
 12979  00424E                     l1794:
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;usb_device.c: 2631: }
 12983                           ;usb_device.c: 2632: }
 12984                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12985                           
 12986                           ; BSR set to: 0
 12987                           
 12988                           ; BSR set to: 0
 12989  00424E  05CC               	decf	_controlTransferState& (0+255),w,b
 12990  004250  A4D8               	btfss	status,2,c
 12991  004252  D03B               	goto	l1795
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;usb_device.c: 2636: {
 12995                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12996  004254  EE20 F002          	lfsr	2,2
 12997  004258  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12998  00425A  26D9               	addwf	fsr2l,f,c
 12999  00425C  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13000  00425E  22DA               	addwfc	fsr2h,f,c
 13001  004260  0E38               	movlw	56
 13002  004262  6EDE               	movwf	postinc2,c
 13003  004264  0E04               	movlw	4
 13004  004266  6EDD               	movwf	postdec2,c
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13008  004268  ECD0  F01B         	call	_USBCtrlTrfTxService	;wreg free
 13009                           
 13010                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13011  00426C  0E02               	movlw	2
 13012  00426E  0100               	movlb	0	; () banked
 13013  004270  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 13014  004272  A4D8               	btfss	status,2,c
 13015  004274  D00D               	goto	l1796
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;usb_device.c: 2645: {
 13019                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13020  004276  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13021  00427A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13022  00427E  0E04               	movlw	4
 13023  004280  6EDF               	movwf	indf2,c
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13027  004282  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13028  004286  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13029  00428A  0E00               	movlw	0
 13030  00428C  8EDB               	bsf	plusw2,7,c
 13031                           
 13032                           ;usb_device.c: 2650: }
 13033  00428E  0012               	return	
 13034  004290                     l1796:
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;usb_device.c: 2651: else
 13038                           ;usb_device.c: 2652: {
 13039                           ;usb_device.c: 2653: if(lastDTS == 0)
 13040                           
 13041                           ; BSR set to: 0
 13042  004290  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13043  004292  A4D8               	btfss	status,2,c
 13044  004294  D00D               	goto	l1798
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;usb_device.c: 2654: {
 13048                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13049  004296  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13050  00429A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13051  00429E  0E48               	movlw	72
 13052  0042A0  6EDF               	movwf	indf2,c
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13056  0042A2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13057  0042A6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13058  0042AA  0E00               	movlw	0
 13059  0042AC  8EDB               	bsf	plusw2,7,c
 13060                           
 13061                           ;usb_device.c: 2657: }
 13062  0042AE  0012               	return	
 13063  0042B0                     l1798:
 13064                           
 13065                           ; BSR set to: 0
 13066                           ;usb_device.c: 2658: else
 13067                           ;usb_device.c: 2659: {
 13068                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13069                           
 13070                           ; BSR set to: 0
 13071  0042B0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13072  0042B4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13073  0042B8  0E08               	movlw	8
 13074  0042BA  6EDF               	movwf	indf2,c
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13078  0042BC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13079  0042C0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13080  0042C4  0E00               	movlw	0
 13081  0042C6  8EDB               	bsf	plusw2,7,c
 13082                           
 13083                           ; BSR set to: 0
 13084                           ;usb_device.c: 2662: }
 13085                           ;usb_device.c: 2663: }
 13086                           ;usb_device.c: 2664: }
 13087                           
 13088                           ; BSR set to: 0
 13089  0042C8  0012               	return	
 13090  0042CA                     l1795:
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;usb_device.c: 2665: else
 13094                           ;usb_device.c: 2666: {
 13095                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13096  0042CA  0101               	movlb	1	; () banked
 13097  0042CC  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13098                           
 13099                           ; BSR set to: 1
 13100                           ;usb_device.c: 2675: }
 13101                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13102                           
 13103                           ; BSR set to: 1
 13104  0042CE  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13105                           
 13106                           ; BSR set to: 1
 13107                           ;usb_device.c: 2677: }
 13108                           ;usb_device.c: 2679: controlTransferState = 0;
 13109                           
 13110                           ; BSR set to: 1
 13111  0042D0  0E00               	movlw	0
 13112  0042D2  0100               	movlb	0	; () banked
 13113  0042D4  6FCC               	movwf	_controlTransferState& (0+255),b
 13114  0042D6  0012               	return	
 13115  0042D8                     __end_of_USBCtrlTrfInHandler:
 13116                           	opt stack 0
 13117                           tosu	equ	0xFFF
 13118                           tosh	equ	0xFFE
 13119                           tosl	equ	0xFFD
 13120                           pclath	equ	0xFFA
 13121                           tblptru	equ	0xFF8
 13122                           tblptrh	equ	0xFF7
 13123                           tblptrl	equ	0xFF6
 13124                           tablat	equ	0xFF5
 13125                           prodh	equ	0xFF4
 13126                           prodl	equ	0xFF3
 13127                           intcon	equ	0xFF2
 13128                           intcon2	equ	0xFF1
 13129                           intcon3	equ	0xFF0
 13130                           indf0	equ	0xFEF
 13131                           postinc0	equ	0xFEE
 13132                           plusw0	equ	0xFEB
 13133                           fsr0h	equ	0xFEA
 13134                           fsr0l	equ	0xFE9
 13135                           wreg	equ	0xFE8
 13136                           indf1	equ	0xFE7
 13137                           postinc1	equ	0xFE6
 13138                           postdec1	equ	0xFE5
 13139                           fsr1h	equ	0xFE2
 13140                           fsr1l	equ	0xFE1
 13141                           indf2	equ	0xFDF
 13142                           postinc2	equ	0xFDE
 13143                           postdec2	equ	0xFDD
 13144                           plusw2	equ	0xFDB
 13145                           fsr2h	equ	0xFDA
 13146                           fsr2l	equ	0xFD9
 13147                           status	equ	0xFD8
 13148                           
 13149 ;; *************** function _USBCtrlTrfTxService *****************
 13150 ;; Defined at:
 13151 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13152 ;; Parameters:    Size  Location     Type
 13153 ;;		None
 13154 ;; Auto vars:     Size  Location     Type
 13155 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13156 ;; Return value:  Size  Location     Type
 13157 ;;                  1    wreg      void 
 13158 ;; Registers used:
 13159 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13160 ;; Tracked objects:
 13161 ;;		On entry : 0/0
 13162 ;;		On exit  : 0/0
 13163 ;;		Unchanged: 0/0
 13164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13168 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13169 ;;Total ram usage:        1 bytes
 13170 ;; Hardware stack levels used:    1
 13171 ;; Hardware stack levels required when called:   11
 13172 ;; This function calls:
 13173 ;;		Nothing
 13174 ;; This function is called by:
 13175 ;;		_USBCtrlEPAllowDataStage
 13176 ;;		_USBCtrlTrfInHandler
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           	psect	text53
 13181  0037A0                     __ptext53:
 13182                           	opt stack 0
 13183  0037A0                     _USBCtrlTrfTxService:
 13184                           	opt stack 11
 13185                           
 13186                           ;usb_device.c: 1791: uint8_t byteToSend;
 13187                           ;usb_device.c: 1795: byteToSend = 8;
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;incstack = 0
 13191  0037A0  0E08               	movlw	8
 13192  0037A2  0100               	movlb	0	; () banked
 13193  0037A4  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13197  0037A6  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13198  0037A8  E110               	bnz	l13061
 13199  0037AA  0E08               	movlw	8
 13200  0037AC  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13201  0037AE  B0D8               	btfsc	status,0,c
 13202  0037B0  D00C               	goto	l1700
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;usb_device.c: 1797: {
 13206                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13207  0037B2  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13211  0037B6  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13212  0037B8  A4D8               	btfss	status,2,c
 13213  0037BA  D002               	goto	l1698
 13214                           
 13215                           ; BSR set to: 0
 13216                           ;usb_device.c: 1806: {
 13217                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13218  0037BC  0E01               	movlw	1
 13219  0037BE  D004               	goto	L12
 13220  0037C0                     l1698:
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13224                           
 13225                           ; BSR set to: 0
 13226  0037C0  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13227  0037C2  A4D8               	btfss	status,2,c
 13228  0037C4  D002               	goto	l1700
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;usb_device.c: 1810: {
 13232                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13233  0037C6  0E02               	movlw	2
 13234  0037C8                     L12:
 13235  0037C8  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13236  0037CA                     l1700:
 13237  0037CA                     l13061:
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;usb_device.c: 1812: }
 13241                           ;usb_device.c: 1813: }
 13242                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13243  0037CA  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13244  0037CC  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13245  0037CE  0E00               	movlw	0
 13246  0037D0  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13250  0037D2  EE20 F001          	lfsr	2,1
 13251  0037D6  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13252  0037D8  26D9               	addwf	fsr2l,f,c
 13253  0037DA  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13254  0037DC  22DA               	addwfc	fsr2h,f,c
 13255  0037DE  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13259  0037E2  0E38               	movlw	56
 13260  0037E4  0102               	movlb	2	; () banked
 13261  0037E6  6FD4               	movwf	_pDst& (0+255),b
 13262  0037E8  0E04               	movlw	4
 13263  0037EA  6FD5               	movwf	(_pDst+1)& (0+255),b
 13264                           
 13265                           ; BSR set to: 2
 13266                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13267  0037EC  0100               	movlb	0	; () banked
 13268  0037EE  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13269  0037F0  D01E               	goto	l1702
 13270  0037F2  D03E               	goto	l1706
 13271  0037F4                     
 13272                           ; BSR set to: 0
 13273                           ;usb_device.c: 1830: {
 13274                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13275                           
 13276                           ; BSR set to: 0
 13277  0037F4  C0B0  FFF6         	movff	_inPipes,tblptrl
 13278  0037F8  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13279  0037FC  6AF8               	clrf	tblptru,c
 13280  0037FE  C2D4  FFD9         	movff	_pDst,fsr2l
 13281  003802  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13282  003806  0E0E               	movlw	(high __ramtop+-1)
 13283  003808  64F7               	cpfsgt	tblptrh,c
 13284  00380A  D003               	bra	u11697
 13285  00380C  0008               	tblrd		*
 13286  00380E  50F5               	movf	tablat,w,c
 13287  003810  D005               	bra	u11690
 13288  003812                     u11697:
 13289  003812  CFF6 FFE9          	movff	tblptrl,fsr0l
 13290  003816  CFF7 FFEA          	movff	tblptrh,fsr0h
 13291  00381A  50EF               	movf	indf0,w,c
 13292  00381C                     u11690:
 13293  00381C  6EDF               	movwf	indf2,c
 13294  00381E  0100               	movlb	0	; () banked
 13295  003820  4BB0               	infsnz	_inPipes& (0+255),f,b
 13296  003822  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13297                           
 13298                           ; BSR set to: 0
 13299  003824  0102               	movlb	2	; () banked
 13300  003826  4BD4               	infsnz	_pDst& (0+255),f,b
 13301  003828  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13302                           
 13303                           ; BSR set to: 2
 13304                           ;usb_device.c: 1832: byteToSend--;
 13305  00382A  0100               	movlb	0	; () banked
 13306  00382C  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13307  00382E                     l1702:
 13308                           
 13309                           ; BSR set to: 0
 13310                           
 13311                           ; BSR set to: 0
 13312  00382E  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13313  003830  B4D8               	btfsc	status,2,c
 13314  003832  0012               	return	
 13315  003834  D7DF               	goto	l1703
 13316  003836                     
 13317                           ; BSR set to: 0
 13318                           ;usb_device.c: 1838: {
 13319                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13320                           
 13321                           ; BSR set to: 0
 13322  003836  C0B0  FFF6         	movff	_inPipes,tblptrl
 13323  00383A  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13324  00383E  6AF8               	clrf	tblptru,c
 13325  003840  C2D4  FFD9         	movff	_pDst,fsr2l
 13326  003844  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13327  003848  0E0E               	movlw	(high __ramtop+-1)
 13328  00384A  64F7               	cpfsgt	tblptrh,c
 13329  00384C  D003               	bra	u11717
 13330  00384E  0008               	tblrd		*
 13331  003850  50F5               	movf	tablat,w,c
 13332  003852  D005               	bra	u11710
 13333  003854                     u11717:
 13334  003854  CFF6 FFE9          	movff	tblptrl,fsr0l
 13335  003858  CFF7 FFEA          	movff	tblptrh,fsr0h
 13336  00385C  50EF               	movf	indf0,w,c
 13337  00385E                     u11710:
 13338  00385E  6EDF               	movwf	indf2,c
 13339  003860  0100               	movlb	0	; () banked
 13340  003862  4BB0               	infsnz	_inPipes& (0+255),f,b
 13341  003864  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13342                           
 13343                           ; BSR set to: 0
 13344  003866  0102               	movlb	2	; () banked
 13345  003868  4BD4               	infsnz	_pDst& (0+255),f,b
 13346  00386A  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13347                           
 13348                           ; BSR set to: 2
 13349                           ;usb_device.c: 1840: byteToSend--;
 13350  00386C  0100               	movlb	0	; () banked
 13351  00386E  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13352  003870                     l1706:
 13353                           
 13354                           ; BSR set to: 0
 13355                           
 13356                           ; BSR set to: 0
 13357  003870  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13358  003872  B4D8               	btfsc	status,2,c
 13359  003874  0012               	return	
 13360  003876  D7DF               	goto	l1707
 13361  003878                     __end_of_USBCtrlTrfTxService:
 13362                           	opt stack 0
 13363                           tosu	equ	0xFFF
 13364                           tosh	equ	0xFFE
 13365                           tosl	equ	0xFFD
 13366                           pclath	equ	0xFFA
 13367                           tblptru	equ	0xFF8
 13368                           tblptrh	equ	0xFF7
 13369                           tblptrl	equ	0xFF6
 13370                           tablat	equ	0xFF5
 13371                           prodh	equ	0xFF4
 13372                           prodl	equ	0xFF3
 13373                           intcon	equ	0xFF2
 13374                           intcon2	equ	0xFF1
 13375                           intcon3	equ	0xFF0
 13376                           indf0	equ	0xFEF
 13377                           postinc0	equ	0xFEE
 13378                           plusw0	equ	0xFEB
 13379                           fsr0h	equ	0xFEA
 13380                           fsr0l	equ	0xFE9
 13381                           wreg	equ	0xFE8
 13382                           indf1	equ	0xFE7
 13383                           postinc1	equ	0xFE6
 13384                           postdec1	equ	0xFE5
 13385                           fsr1h	equ	0xFE2
 13386                           fsr1l	equ	0xFE1
 13387                           indf2	equ	0xFDF
 13388                           postinc2	equ	0xFDE
 13389                           postdec2	equ	0xFDD
 13390                           plusw2	equ	0xFDB
 13391                           fsr2h	equ	0xFDA
 13392                           fsr2l	equ	0xFD9
 13393                           status	equ	0xFD8
 13394                           
 13395 ;; *************** function _CDCTxService *****************
 13396 ;; Defined at:
 13397 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;		None
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13402 ;;  i               1   36[BANK0 ] unsigned char 
 13403 ;; Return value:  Size  Location     Type
 13404 ;;                  1    wreg      void 
 13405 ;; Registers used:
 13406 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13407 ;; Tracked objects:
 13408 ;;		On entry : 0/0
 13409 ;;		On exit  : 0/0
 13410 ;;		Unchanged: 0/0
 13411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13416 ;;Total ram usage:        2 bytes
 13417 ;; Hardware stack levels used:    1
 13418 ;; Hardware stack levels required when called:   12
 13419 ;; This function calls:
 13420 ;;		_USBTransferOnePacket
 13421 ;; This function is called by:
 13422 ;;		_UsbDevice_MainTask
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           	psect	text54
 13427  002824                     __ptext54:
 13428                           	opt stack 0
 13429  002824                     _CDCTxService:
 13430                           	opt stack 15
 13431                           
 13432                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13433                           ;usb_device_cdc.c: 842: uint8_t i;
 13434                           ;usb_device_cdc.c: 844: ;
 13435                           ;usb_device_cdc.c: 846: {};
 13436                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13437                           
 13438                           ; BSR set to: 0
 13439                           ;incstack = 0
 13440  002824  0101               	movlb	1	; () banked
 13441  002826  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13442  002828  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13443  00282A  B4D8               	btfsc	status,2,c
 13444  00282C  D006               	goto	l1952
 13445                           
 13446                           ; BSR set to: 1
 13447  00282E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13448  002832  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13449  002836  BEDF               	btfsc	indf2,7,c
 13450  002838  0012               	return	
 13451  00283A                     l1952:
 13452                           
 13453                           ; BSR set to: 1
 13454                           ;usb_device_cdc.c: 852: }
 13455                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13456                           
 13457                           ; BSR set to: 1
 13458  00283A  0E03               	movlw	3
 13459  00283C  0100               	movlb	0	; () banked
 13460  00283E  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13461  002840  A4D8               	btfss	status,2,c
 13462  002842  D002               	goto	l1954
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13466  002844  0E00               	movlw	0
 13467  002846  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13468  002848                     l1954:
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13472  002848  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13473  00284A  B4D8               	btfsc	status,2,c
 13474  00284C  0012               	return	
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;usb_device_cdc.c: 869: }
 13478                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13479                           
 13480                           ; BSR set to: 0
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;usb_device_cdc.c: 866: {
 13484                           ;usb_device_cdc.c: 867: ;
 13485                           ;usb_device_cdc.c: 868: return;
 13486  00284E  0E02               	movlw	2
 13487  002850  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13488  002852  A4D8               	btfss	status,2,c
 13489  002854  D013               	goto	l1956
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;usb_device_cdc.c: 875: {
 13493                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13494  002856  0E01               	movlw	1
 13495  002858  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13496  00285A  0E00               	movlw	0
 13497  00285C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13498  00285E  0E00               	movlw	0
 13499  002860  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13500  002862  0E00               	movlw	0
 13501  002864  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13502  002866  0E02               	movlw	2
 13503  002868  EC6C  F021         	call	_USBTransferOnePacket
 13504  00286C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13505  002870  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13506                           
 13507                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13508  002874  0E03               	movlw	3
 13509  002876  0100               	movlb	0	; () banked
 13510  002878  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13511                           
 13512                           ;usb_device_cdc.c: 879: }
 13513  00287A  0012               	return	
 13514  00287C                     l1956:
 13515                           
 13516                           ; BSR set to: 0
 13517                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13518                           
 13519                           ; BSR set to: 0
 13520  00287C  05C8               	decf	_cdc_trf_state& (0+255),w,b
 13521  00287E  A4D8               	btfss	status,2,c
 13522  002880  0012               	return	
 13523                           
 13524                           ; BSR set to: 0
 13525                           ;usb_device_cdc.c: 881: {
 13526                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13527  002882  0E40               	movlw	64
 13528  002884  65C7               	cpfsgt	_cdc_tx_len& (0+255),b
 13529  002886  D003               	goto	l1959
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13533  002888  0E40               	movlw	64
 13534  00288A  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13535  00288C  D002               	goto	l1960
 13536  00288E                     l1959:
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;usb_device_cdc.c: 887: else
 13540                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13541  00288E  C0C7  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13542  002892                     l1960:
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13546                           
 13547                           ; BSR set to: 0
 13548  002892  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13549  002894  0800               	sublw	0
 13550  002896  25C7               	addwf	_cdc_tx_len& (0+255),w,b
 13551  002898  6FC7               	movwf	_cdc_tx_len& (0+255),b
 13552                           
 13553                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13554  00289A  0EB6               	movlw	low _cdc_data_tx
 13555  00289C  0102               	movlb	2	; () banked
 13556  00289E  6FC8               	movwf	_pCDCDst& (0+255),b
 13557  0028A0  0E07               	movlw	high _cdc_data_tx
 13558  0028A2  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13559                           
 13560                           ; BSR set to: 2
 13561                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13562  0028A4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13563                           
 13564                           ; BSR set to: 2
 13565                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13566  0028A8  0101               	movlb	1	; () banked
 13567  0028AA  51DD               	movf	_cdc_mem_type& (0+255),w,b
 13568  0028AC  B4D8               	btfsc	status,2,c
 13569  0028AE  D01D               	goto	l1962
 13570  0028B0  D03D               	goto	l1966
 13571  0028B2                     
 13572                           ;usb_device_cdc.c: 901: {
 13573                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13574                           
 13575                           ; BSR set to: 1
 13576  0028B2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13577  0028B6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13578  0028BA  6AF8               	clrf	tblptru,c
 13579  0028BC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13580  0028C0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13581  0028C4  0E0E               	movlw	(high __ramtop+-1)
 13582  0028C6  64F7               	cpfsgt	tblptrh,c
 13583  0028C8  D003               	bra	u15847
 13584  0028CA  0008               	tblrd		*
 13585  0028CC  50F5               	movf	tablat,w,c
 13586  0028CE  D005               	bra	u15840
 13587  0028D0                     u15847:
 13588  0028D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13589  0028D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13590  0028D8  50EF               	movf	indf0,w,c
 13591  0028DA                     u15840:
 13592  0028DA  6EDF               	movwf	indf2,c
 13593                           
 13594                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13595  0028DC  0102               	movlb	2	; () banked
 13596  0028DE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13597  0028E0  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13598                           
 13599                           ; BSR set to: 2
 13600                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13601  0028E2  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13602  0028E4  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13603                           
 13604                           ; BSR set to: 2
 13605                           ;usb_device_cdc.c: 905: i--;
 13606  0028E6  0100               	movlb	0	; () banked
 13607  0028E8  0784               	decf	CDCTxService@i& (0+255),f,b
 13608  0028EA                     l1962:
 13609                           
 13610                           ; BSR set to: 0
 13611  0028EA  0100               	movlb	0	; () banked
 13612  0028EC  5184               	movf	CDCTxService@i& (0+255),w,b
 13613  0028EE  B4D8               	btfsc	status,2,c
 13614  0028F0  D021               	goto	u15870
 13615  0028F2  D7DF               	goto	l1963
 13616  0028F4                     
 13617                           ; BSR set to: 0
 13618                           ;usb_device_cdc.c: 911: {
 13619                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13620                           
 13621                           ; BSR set to: 0
 13622  0028F4  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13623  0028F8  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13624  0028FC  6AF8               	clrf	tblptru,c
 13625  0028FE  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13626  002902  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13627  002906  0E0E               	movlw	(high __ramtop+-1)
 13628  002908  64F7               	cpfsgt	tblptrh,c
 13629  00290A  D003               	bra	u15867
 13630  00290C  0008               	tblrd		*
 13631  00290E  50F5               	movf	tablat,w,c
 13632  002910  D005               	bra	u15860
 13633  002912                     u15867:
 13634  002912  CFF6 FFE9          	movff	tblptrl,fsr0l
 13635  002916  CFF7 FFEA          	movff	tblptrh,fsr0h
 13636  00291A  50EF               	movf	indf0,w,c
 13637  00291C                     u15860:
 13638  00291C  6EDF               	movwf	indf2,c
 13639                           
 13640                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13641  00291E  0102               	movlb	2	; () banked
 13642  002920  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13643  002922  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13644                           
 13645                           ; BSR set to: 2
 13646                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13647  002924  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13648  002926  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13649                           
 13650                           ; BSR set to: 2
 13651                           ;usb_device_cdc.c: 915: i--;
 13652  002928  0100               	movlb	0	; () banked
 13653  00292A  0784               	decf	CDCTxService@i& (0+255),f,b
 13654  00292C                     l1966:
 13655                           
 13656                           ; BSR set to: 0
 13657  00292C  0100               	movlb	0	; () banked
 13658  00292E  5184               	movf	CDCTxService@i& (0+255),w,b
 13659  002930  A4D8               	btfss	status,2,c
 13660  002932  D7E0               	goto	l1967
 13661  002934                     u15870:
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;usb_device_cdc.c: 916: }
 13665                           ;usb_device_cdc.c: 917: }
 13666                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13667                           
 13668                           ; BSR set to: 0
 13669                           
 13670                           ; BSR set to: 0
 13671  002934  51C7               	movf	_cdc_tx_len& (0+255),w,b
 13672  002936  A4D8               	btfss	status,2,c
 13673  002938  D008               	goto	l1971
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;usb_device_cdc.c: 924: {
 13677                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13678  00293A  0E40               	movlw	64
 13679  00293C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13680  00293E  A4D8               	btfss	status,2,c
 13681  002940  D002               	goto	l1970
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13685  002942  0E02               	movlw	2
 13686  002944  D001               	goto	L13
 13687  002946                     l1970:
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;usb_device_cdc.c: 927: else
 13691                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13692                           
 13693                           ; BSR set to: 0
 13694  002946  0E03               	movlw	3
 13695  002948                     L13:
 13696  002948  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13697  00294A                     l1971:
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;usb_device_cdc.c: 929: }
 13701                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13702                           
 13703                           ; BSR set to: 0
 13704                           
 13705                           ; BSR set to: 0
 13706  00294A  0E01               	movlw	1
 13707  00294C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13708  00294E  0EB6               	movlw	low _cdc_data_tx
 13709  002950  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13710  002952  0E07               	movlw	high _cdc_data_tx
 13711  002954  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13712  002956  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13713  00295A  0E02               	movlw	2
 13714  00295C  EC6C  F021         	call	_USBTransferOnePacket
 13715  002960  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13716  002964  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13717  002968  0012               	return	
 13718  00296A                     __end_of_CDCTxService:
 13719                           	opt stack 0
 13720                           tosu	equ	0xFFF
 13721                           tosh	equ	0xFFE
 13722                           tosl	equ	0xFFD
 13723                           pclath	equ	0xFFA
 13724                           tblptru	equ	0xFF8
 13725                           tblptrh	equ	0xFF7
 13726                           tblptrl	equ	0xFF6
 13727                           tablat	equ	0xFF5
 13728                           prodh	equ	0xFF4
 13729                           prodl	equ	0xFF3
 13730                           intcon	equ	0xFF2
 13731                           intcon2	equ	0xFF1
 13732                           intcon3	equ	0xFF0
 13733                           indf0	equ	0xFEF
 13734                           postinc0	equ	0xFEE
 13735                           plusw0	equ	0xFEB
 13736                           fsr0h	equ	0xFEA
 13737                           fsr0l	equ	0xFE9
 13738                           wreg	equ	0xFE8
 13739                           indf1	equ	0xFE7
 13740                           postinc1	equ	0xFE6
 13741                           postdec1	equ	0xFE5
 13742                           fsr1h	equ	0xFE2
 13743                           fsr1l	equ	0xFE1
 13744                           indf2	equ	0xFDF
 13745                           postinc2	equ	0xFDE
 13746                           postdec2	equ	0xFDD
 13747                           plusw2	equ	0xFDB
 13748                           fsr2h	equ	0xFDA
 13749                           fsr2l	equ	0xFD9
 13750                           status	equ	0xFD8
 13751                           
 13752 ;; *************** function _Term_MainSm *****************
 13753 ;; Defined at:
 13754 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;		None
 13757 ;; Auto vars:     Size  Location     Type
 13758 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13759 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13760 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13761 ;;  FwkBuildYear    4    0        unsigned char [4]
 13762 ;;  FwkBuildMont    4    0        unsigned char [4]
 13763 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  1    wreg      void 
 13766 ;; Registers used:
 13767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13774 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13776 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13777 ;;Total ram usage:       12 bytes
 13778 ;; Hardware stack levels used:    1
 13779 ;; Hardware stack levels required when called:   16
 13780 ;; This function calls:
 13781 ;;		_OsTmr_GetTimerStatus
 13782 ;;		_OsTmr_StartTimer
 13783 ;;		_Terminal
 13784 ;;		_memset
 13785 ;;		_putUSBUSART
 13786 ;;		_sprintf
 13787 ;;		_strcat
 13788 ;;		_strcpy
 13789 ;;		_strlen
 13790 ;;		_utoa
 13791 ;; This function is called by:
 13792 ;;		_Term_MainTask
 13793 ;; This function uses a non-reentrant model
 13794 ;;
 13795                           
 13796                           	psect	text55
 13797  0010B6                     __ptext55:
 13798                           	opt stack 0
 13799  0010B6                     _Term_MainSm:
 13800                           	opt stack 11
 13801                           
 13802                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13803                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13804                           ;term.c: 711: static UINT8 Data[50];
 13805                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13806                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13807                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13808                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13809                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13810                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13811                           ;term.c: 719: switch (TermMainSmState)
 13812                           
 13813                           ;incstack = 0
 13814  0010B6  D133               	goto	l2465
 13815  0010B8                     
 13816                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13817  0010B8  0ED1               	movlw	low Term_MainSm@TermDelay
 13818  0010BA  0100               	movlb	0	; () banked
 13819  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13820  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13821  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13822  0010C2  0ED0               	movlw	208
 13823  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13824  0010C6  0E07               	movlw	7
 13825  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13826  0010CA  0E00               	movlw	0
 13827  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13828  0010CE  0E00               	movlw	0
 13829  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13830  0010D2  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 13831                           
 13832                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13833  0010D6  0E01               	movlw	1
 13834  0010D8  0102               	movlb	2	; () banked
 13835  0010DA  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13836                           
 13837                           ;term.c: 726: break;
 13838  0010DC  0012               	return	
 13839  0010DE                     
 13840                           ; BSR set to: 2
 13841                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13842                           
 13843                           ; BSR set to: 2
 13844  0010DE  0ED1               	movlw	low Term_MainSm@TermDelay
 13845  0010E0  0100               	movlb	0	; () banked
 13846  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13847  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13848  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13849  0010E8  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 13850  0010EC  06E8               	decf	wreg,f,c
 13851  0010EE  A4D8               	btfss	status,2,c
 13852  0010F0  0012               	return	
 13853                           
 13854                           ;term.c: 731: {
 13855                           ;term.c: 733: TermMainSmState = Term_InitState;
 13856  0010F2  0E02               	movlw	2
 13857  0010F4  0102               	movlb	2	; () banked
 13858  0010F6  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13859                           
 13860                           ; BSR set to: 2
 13861                           ;term.c: 734: }
 13862                           ;term.c: 735: break;
 13863  0010F8  0012               	return	
 13864  0010FA                     
 13865                           ; BSR set to: 2
 13866                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13867                           
 13868                           ; BSR set to: 2
 13869  0010FA  0E1F               	movlw	31
 13870  0010FC  0100               	movlb	0	; () banked
 13871  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13872  001100  0012               	return	
 13873                           
 13874                           ; BSR set to: 0
 13875  001102  B265               	btfsc	3941,1,c	;volatile
 13876  001104  0012               	return	
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;term.c: 743: else
 13880                           ;term.c: 744: {
 13881                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13882                           
 13883                           ; BSR set to: 0
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;term.c: 740: {
 13887                           ;term.c: 742: }
 13888  001106  0E03               	movlw	3
 13889  001108  0102               	movlb	2	; () banked
 13890  00110A  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13891                           
 13892                           ; BSR set to: 2
 13893                           ;term.c: 747: }
 13894                           ;term.c: 748: break;
 13895  00110C  0012               	return	
 13896  00110E                     
 13897                           ; BSR set to: 2
 13898                           ;term.c: 752: if((cdc_trf_state == 0))
 13899                           
 13900                           ; BSR set to: 2
 13901  00110E  0100               	movlb	0	; () banked
 13902  001110  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13903  001112  A4D8               	btfss	status,2,c
 13904  001114  0012               	return	
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;term.c: 753: {
 13908                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13909  001116  0E22               	movlw	low _Welcome
 13910  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13911  00111A  0EFD               	movlw	high _Welcome
 13912  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13913  00111E  0E88               	movlw	136
 13914  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13915  001122  EC29  F034         	call	_putUSBUSART	;wreg free
 13916                           
 13917                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13918  001126  0E04               	movlw	4
 13919  001128  0102               	movlb	2	; () banked
 13920  00112A  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13921                           
 13922                           ; BSR set to: 2
 13923                           ;term.c: 758: }
 13924                           ;term.c: 759: break;
 13925  00112C  0012               	return	
 13926  00112E                     
 13927                           ; BSR set to: 2
 13928                           ;term.c: 763: if((cdc_trf_state == 0))
 13929                           
 13930                           ; BSR set to: 2
 13931  00112E  0100               	movlb	0	; () banked
 13932  001130  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13933  001132  A4D8               	btfss	status,2,c
 13934  001134  0012               	return	
 13935                           
 13936                           ; BSR set to: 0
 13937                           ;term.c: 764: {
 13938                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13939  001136  0E32               	movlw	low _MsgFormat
 13940  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13941  00113A  0EFC               	movlw	high _MsgFormat
 13942  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13943  00113E  0EEF               	movlw	239
 13944  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13945  001142  EC29  F034         	call	_putUSBUSART	;wreg free
 13946                           
 13947                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13948  001146  0E05               	movlw	5
 13949  001148  0102               	movlb	2	; () banked
 13950  00114A  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13951                           
 13952                           ; BSR set to: 2
 13953                           ;term.c: 769: }
 13954                           ;term.c: 770: break;
 13955  00114C  0012               	return	
 13956  00114E                     
 13957                           ; BSR set to: 2
 13958                           ;term.c: 774: if((cdc_trf_state == 0))
 13959                           
 13960                           ; BSR set to: 2
 13961  00114E  0100               	movlb	0	; () banked
 13962  001150  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13963  001152  A4D8               	btfss	status,2,c
 13964  001154  0012               	return	
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;term.c: 775: {
 13968                           ;term.c: 777: memset(Data,0,50);
 13969  001156  0E59               	movlw	low Term_MainSm@Data
 13970  001158  6F7D               	movwf	memset@p1& (0+255),b
 13971  00115A  0E04               	movlw	high Term_MainSm@Data
 13972  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13973  00115E  0E00               	movlw	0
 13974  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13975  001162  0E00               	movlw	0
 13976  001164  6F7F               	movwf	memset@c& (0+255),b
 13977  001166  0E00               	movlw	0
 13978  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13979  00116A  0E32               	movlw	50
 13980  00116C  6F81               	movwf	memset@n& (0+255),b
 13981  00116E  ECD1  F032         	call	_memset	;wreg free
 13982                           
 13983                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13984  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13985  001174  0100               	movlb	0	; () banked
 13986  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13987  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13988  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13989  00117C  0E00               	movlw	0
 13990  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13991  001180  0E01               	movlw	1
 13992  001182  6F8C               	movwf	utoa@val& (0+255),b
 13993  001184  0E00               	movlw	0
 13994  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13995  001188  0E0A               	movlw	10
 13996  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13997  00118C  EC8D  F023         	call	_utoa	;wreg free
 13998                           
 13999                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14000  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14001  001192  0100               	movlb	0	; () banked
 14002  001194  6F8A               	movwf	utoa@buf& (0+255),b
 14003  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14004  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14005  00119A  0E00               	movlw	0
 14006  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14007  00119E  0E02               	movlw	2
 14008  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 14009  0011A2  0E00               	movlw	0
 14010  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14011  0011A6  0E0A               	movlw	10
 14012  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 14013  0011AA  EC8D  F023         	call	_utoa	;wreg free
 14014                           
 14015                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14016  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14017  0011B0  0100               	movlb	0	; () banked
 14018  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 14019  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14020  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14021  0011B8  0E00               	movlw	0
 14022  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14023  0011BC  0E00               	movlw	0
 14024  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 14025  0011C0  0E00               	movlw	0
 14026  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14027  0011C4  0E0A               	movlw	10
 14028  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 14029  0011C8  EC8D  F023         	call	_utoa	;wreg free
 14030                           
 14031                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14032  0011CC  0E59               	movlw	low Term_MainSm@Data
 14033  0011CE  0100               	movlb	0	; () banked
 14034  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14035  0011D2  0E04               	movlw	high Term_MainSm@Data
 14036  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14037  0011D6  0ED2               	movlw	low STR_23
 14038  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14039  0011DA  0EFE               	movlw	high STR_23
 14040  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14041  0011DE  ECA0  F032         	call	_strcpy	;wreg free
 14042                           
 14043                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14044  0011E2  0E59               	movlw	low Term_MainSm@Data
 14045  0011E4  0100               	movlb	0	; () banked
 14046  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14047  0011E8  0E04               	movlw	high Term_MainSm@Data
 14048  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14049  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14050  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14051  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14052  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14053  0011F4  ECB3  F02C         	call	_strcat	;wreg free
 14054                           
 14055                           ;term.c: 784: strcat(Data,".");
 14056  0011F8  0E59               	movlw	low Term_MainSm@Data
 14057  0011FA  0100               	movlb	0	; () banked
 14058  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14059  0011FE  0E04               	movlw	high Term_MainSm@Data
 14060  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14061  001202  0EF5               	movlw	low STR_24
 14062  001204  6F7F               	movwf	strcat@from& (0+255),b
 14063  001206  0EFF               	movlw	high STR_24
 14064  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14065  00120A  ECB3  F02C         	call	_strcat	;wreg free
 14066                           
 14067                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14068  00120E  0E59               	movlw	low Term_MainSm@Data
 14069  001210  0100               	movlb	0	; () banked
 14070  001212  6F7D               	movwf	strcat@to& (0+255),b
 14071  001214  0E04               	movlw	high Term_MainSm@Data
 14072  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14073  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14074  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14075  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14076  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14077  001220  ECB3  F02C         	call	_strcat	;wreg free
 14078                           
 14079                           ;term.c: 786: strcat(Data,".");
 14080  001224  0E59               	movlw	low Term_MainSm@Data
 14081  001226  0100               	movlb	0	; () banked
 14082  001228  6F7D               	movwf	strcat@to& (0+255),b
 14083  00122A  0E04               	movlw	high Term_MainSm@Data
 14084  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14085  00122E  0EF5               	movlw	low STR_24
 14086  001230  6F7F               	movwf	strcat@from& (0+255),b
 14087  001232  0EFF               	movlw	high STR_24
 14088  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14089  001236  ECB3  F02C         	call	_strcat	;wreg free
 14090                           
 14091                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14092  00123A  0E59               	movlw	low Term_MainSm@Data
 14093  00123C  0100               	movlb	0	; () banked
 14094  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14095  001240  0E04               	movlw	high Term_MainSm@Data
 14096  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14097  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14098  001246  6F7F               	movwf	strcat@from& (0+255),b
 14099  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14100  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14101  00124C  ECB3  F02C         	call	_strcat	;wreg free
 14102                           
 14103                           ;term.c: 788: strcat(Data,"\r\n");
 14104  001250  0E59               	movlw	low Term_MainSm@Data
 14105  001252  0100               	movlb	0	; () banked
 14106  001254  6F7D               	movwf	strcat@to& (0+255),b
 14107  001256  0E04               	movlw	high Term_MainSm@Data
 14108  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14109  00125A  0E86               	movlw	low (STR_21+39)
 14110  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14111  00125E  0EFE               	movlw	high (STR_21+39)
 14112  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14113  001262  ECB3  F02C         	call	_strcat	;wreg free
 14114                           
 14115                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14116  001266  0E59               	movlw	low Term_MainSm@Data
 14117  001268  0100               	movlb	0	; () banked
 14118  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14119  00126C  0E04               	movlw	high Term_MainSm@Data
 14120  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14121  001270  0E59               	movlw	low Term_MainSm@Data
 14122  001272  6F7D               	movwf	strlen@s& (0+255),b
 14123  001274  0E04               	movlw	high Term_MainSm@Data
 14124  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14125  001278  EC4A  F031         	call	_strlen	;wreg free
 14126  00127C  0100               	movlb	0	; () banked
 14127  00127E  517D               	movf	?_strlen& (0+255),w,b
 14128  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14129  001282  EC29  F034         	call	_putUSBUSART	;wreg free
 14130                           
 14131                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14132  001286  0E06               	movlw	6
 14133  001288  0102               	movlb	2	; () banked
 14134  00128A  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14135                           
 14136                           ; BSR set to: 2
 14137                           ;term.c: 793: }
 14138                           ;term.c: 794: break;
 14139  00128C  0012               	return	
 14140  00128E                     
 14141                           ; BSR set to: 2
 14142                           ;term.c: 798: if((cdc_trf_state == 0))
 14143                           
 14144                           ; BSR set to: 2
 14145  00128E  0100               	movlb	0	; () banked
 14146  001290  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14147  001292  A4D8               	btfss	status,2,c
 14148  001294  0012               	return	
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;term.c: 799: {
 14152                           ;term.c: 801: memset(Data,0,50);
 14153  001296  0E59               	movlw	low Term_MainSm@Data
 14154  001298  6F7D               	movwf	memset@p1& (0+255),b
 14155  00129A  0E04               	movlw	high Term_MainSm@Data
 14156  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14157  00129E  0E00               	movlw	0
 14158  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14159  0012A2  0E00               	movlw	0
 14160  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14161  0012A6  0E00               	movlw	0
 14162  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14163  0012AA  0E32               	movlw	50
 14164  0012AC  6F81               	movwf	memset@n& (0+255),b
 14165  0012AE  ECD1  F032         	call	_memset	;wreg free
 14166                           
 14167                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14168  0012B2  0E59               	movlw	low Term_MainSm@Data
 14169  0012B4  0100               	movlb	0	; () banked
 14170  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14171  0012B8  0E04               	movlw	high Term_MainSm@Data
 14172  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14173  0012BC  0E0D               	movlw	low STR_27
 14174  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14175  0012C0  0EFF               	movlw	high STR_27
 14176  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14177  0012C4  0EB6               	movlw	low STR_28
 14178  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14179  0012C8  0EFF               	movlw	high STR_28
 14180  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14181  0012CC  ECE5  F01D         	call	_sprintf	;wreg free
 14182                           
 14183                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14184  0012D0  0E59               	movlw	low Term_MainSm@Data
 14185  0012D2  0100               	movlb	0	; () banked
 14186  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14187  0012D6  0E04               	movlw	high Term_MainSm@Data
 14188  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14189  0012DA  0E59               	movlw	low Term_MainSm@Data
 14190  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14191  0012DE  0E04               	movlw	high Term_MainSm@Data
 14192  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14193  0012E2  EC4A  F031         	call	_strlen	;wreg free
 14194  0012E6  0100               	movlb	0	; () banked
 14195  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14196  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14197  0012EC  EC29  F034         	call	_putUSBUSART	;wreg free
 14198                           
 14199                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14200  0012F0  0E07               	movlw	7
 14201  0012F2  0102               	movlb	2	; () banked
 14202  0012F4  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14203                           
 14204                           ; BSR set to: 2
 14205                           ;term.c: 808: }
 14206                           ;term.c: 809: break;
 14207  0012F6  0012               	return	
 14208  0012F8                     
 14209                           ; BSR set to: 2
 14210                           ;term.c: 813: if((cdc_trf_state == 0))
 14211                           
 14212                           ; BSR set to: 2
 14213  0012F8  0100               	movlb	0	; () banked
 14214  0012FA  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14215  0012FC  A4D8               	btfss	status,2,c
 14216  0012FE  0012               	return	
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;term.c: 814: {
 14220                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14221  001300  0E32               	movlw	low _MsgReady
 14222  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14223  001304  0EFE               	movlw	high _MsgReady
 14224  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14225  001308  0E16               	movlw	22
 14226  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14227  00130C  EC29  F034         	call	_putUSBUSART	;wreg free
 14228                           
 14229                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14230  001310  0E08               	movlw	8
 14231  001312  0102               	movlb	2	; () banked
 14232  001314  6FEA               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14233                           
 14234                           ; BSR set to: 2
 14235                           ;term.c: 819: }
 14236                           ;term.c: 820: break;
 14237  001316  0012               	return	
 14238  001318                     
 14239                           ; BSR set to: 2
 14240                           ;term.c: 824: Terminal();
 14241                           
 14242                           ; BSR set to: 2
 14243  001318  EC68  F000         	call	_Terminal	;wreg free
 14244                           
 14245                           ;term.c: 829: }
 14246                           
 14247                           ;term.c: 828: break;
 14248                           
 14249                           ;term.c: 827: default:
 14250                           
 14251                           ;term.c: 825: break;
 14252  00131C  0012               	return	
 14253  00131E                     l2465:
 14254  00131E  0102               	movlb	2	; () banked
 14255  001320  51EA               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14256                           
 14257                           ; Switch size 1, requested type "space"
 14258                           ; Number of cases is 9, Range of values is 0 to 8
 14259                           ; switch strategies available:
 14260                           ; Name         Instructions Cycles
 14261                           ; simple_byte           28    15 (average)
 14262                           ;	Chosen strategy is simple_byte
 14263  001322  0A00               	xorlw	0	; case 0
 14264  001324  B4D8               	btfsc	status,2,c
 14265  001326  D6C8               	goto	l2466
 14266  001328  0A01               	xorlw	1	; case 1
 14267  00132A  B4D8               	btfsc	status,2,c
 14268  00132C  D6D8               	goto	l2468
 14269  00132E  0A03               	xorlw	3	; case 2
 14270  001330  B4D8               	btfsc	status,2,c
 14271  001332  D6E3               	goto	l2470
 14272  001334  0A01               	xorlw	1	; case 3
 14273  001336  B4D8               	btfsc	status,2,c
 14274  001338  D6EA               	goto	l2475
 14275  00133A  0A07               	xorlw	7	; case 4
 14276  00133C  B4D8               	btfsc	status,2,c
 14277  00133E  D6F7               	goto	l2477
 14278  001340  0A01               	xorlw	1	; case 5
 14279  001342  B4D8               	btfsc	status,2,c
 14280  001344  D704               	goto	l2479
 14281  001346  0A03               	xorlw	3	; case 6
 14282  001348  B4D8               	btfsc	status,2,c
 14283  00134A  D7A1               	goto	l2481
 14284  00134C  0A01               	xorlw	1	; case 7
 14285  00134E  B4D8               	btfsc	status,2,c
 14286  001350  D7D3               	goto	l2483
 14287  001352  0A0F               	xorlw	15	; case 8
 14288  001354  A4D8               	btfss	status,2,c
 14289  001356  0012               	return	
 14290  001358  D7DF               	goto	l2485
 14291  00135A                     __end_of_Term_MainSm:
 14292                           	opt stack 0
 14293                           tosu	equ	0xFFF
 14294                           tosh	equ	0xFFE
 14295                           tosl	equ	0xFFD
 14296                           pclath	equ	0xFFA
 14297                           tblptru	equ	0xFF8
 14298                           tblptrh	equ	0xFF7
 14299                           tblptrl	equ	0xFF6
 14300                           tablat	equ	0xFF5
 14301                           prodh	equ	0xFF4
 14302                           prodl	equ	0xFF3
 14303                           intcon	equ	0xFF2
 14304                           intcon2	equ	0xFF1
 14305                           intcon3	equ	0xFF0
 14306                           indf0	equ	0xFEF
 14307                           postinc0	equ	0xFEE
 14308                           plusw0	equ	0xFEB
 14309                           fsr0h	equ	0xFEA
 14310                           fsr0l	equ	0xFE9
 14311                           wreg	equ	0xFE8
 14312                           indf1	equ	0xFE7
 14313                           postinc1	equ	0xFE6
 14314                           postdec1	equ	0xFE5
 14315                           fsr1h	equ	0xFE2
 14316                           fsr1l	equ	0xFE1
 14317                           indf2	equ	0xFDF
 14318                           postinc2	equ	0xFDE
 14319                           postdec2	equ	0xFDD
 14320                           plusw2	equ	0xFDB
 14321                           fsr2h	equ	0xFDA
 14322                           fsr2l	equ	0xFD9
 14323                           status	equ	0xFD8
 14324                           
 14325 ;; *************** function _strlen *****************
 14326 ;; Defined at:
 14327 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14330 ;;		 -> Term_MainSm@Data(50), 
 14331 ;; Auto vars:     Size  Location     Type
 14332 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14333 ;;		 -> Term_MainSm@Data(50), 
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  2   29[BANK0 ] unsigned int 
 14336 ;; Registers used:
 14337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14346 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14347 ;;Total ram usage:        6 bytes
 14348 ;; Hardware stack levels used:    1
 14349 ;; Hardware stack levels required when called:   11
 14350 ;; This function calls:
 14351 ;;		Nothing
 14352 ;; This function is called by:
 14353 ;;		_Term_MainSm
 14354 ;; This function uses a non-reentrant model
 14355 ;;
 14356                           
 14357                           	psect	text56
 14358  006294                     __ptext56:
 14359                           	opt stack 0
 14360  006294                     _strlen:
 14361                           	opt stack 15
 14362                           
 14363                           ;incstack = 0
 14364  006294  C07D  F081         	movff	strlen@s,strlen@cp
 14365  006298  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14366  00629C  D003               	goto	l3543
 14367  00629E  0100               	movlb	0	; () banked
 14368  0062A0  4B81               	infsnz	strlen@cp& (0+255),f,b
 14369  0062A2  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14370  0062A4                     l3543:
 14371                           
 14372                           ; BSR set to: 0
 14373  0062A4  C081  FFD9         	movff	strlen@cp,fsr2l
 14374  0062A8  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14375  0062AC  50DF               	movf	indf2,w,c
 14376  0062AE  A4D8               	btfss	status,2,c
 14377  0062B0  D7F6               	goto	l3544
 14378  0062B2  C07D  F07F         	movff	strlen@s,??_strlen
 14379  0062B6  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14380  0062BA  0100               	movlb	0	; () banked
 14381  0062BC  1F7F               	comf	??_strlen& (0+255),f,b
 14382  0062BE  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14383  0062C0  4B7F               	infsnz	??_strlen& (0+255),f,b
 14384  0062C2  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14385  0062C4  5181               	movf	strlen@cp& (0+255),w,b
 14386  0062C6  257F               	addwf	??_strlen& (0+255),w,b
 14387  0062C8  6F7D               	movwf	?_strlen& (0+255),b
 14388  0062CA  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14389  0062CC  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14390  0062CE  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14391  0062D0  0012               	return	
 14392  0062D2                     __end_of_strlen:
 14393                           	opt stack 0
 14394                           tosu	equ	0xFFF
 14395                           tosh	equ	0xFFE
 14396                           tosl	equ	0xFFD
 14397                           pclath	equ	0xFFA
 14398                           tblptru	equ	0xFF8
 14399                           tblptrh	equ	0xFF7
 14400                           tblptrl	equ	0xFF6
 14401                           tablat	equ	0xFF5
 14402                           prodh	equ	0xFF4
 14403                           prodl	equ	0xFF3
 14404                           intcon	equ	0xFF2
 14405                           intcon2	equ	0xFF1
 14406                           intcon3	equ	0xFF0
 14407                           indf0	equ	0xFEF
 14408                           postinc0	equ	0xFEE
 14409                           plusw0	equ	0xFEB
 14410                           fsr0h	equ	0xFEA
 14411                           fsr0l	equ	0xFE9
 14412                           wreg	equ	0xFE8
 14413                           indf1	equ	0xFE7
 14414                           postinc1	equ	0xFE6
 14415                           postdec1	equ	0xFE5
 14416                           fsr1h	equ	0xFE2
 14417                           fsr1l	equ	0xFE1
 14418                           indf2	equ	0xFDF
 14419                           postinc2	equ	0xFDE
 14420                           postdec2	equ	0xFDD
 14421                           plusw2	equ	0xFDB
 14422                           fsr2h	equ	0xFDA
 14423                           fsr2l	equ	0xFD9
 14424                           status	equ	0xFD8
 14425                           
 14426 ;; *************** function _strcat *****************
 14427 ;; Defined at:
 14428 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14429 ;; Parameters:    Size  Location     Type
 14430 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14431 ;;		 -> Term_MainSm@Data(50), 
 14432 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14433 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14434 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14437 ;;		 -> Term_MainSm@Data(50), 
 14438 ;; Return value:  Size  Location     Type
 14439 ;;                  2   29[BANK0 ] PTR unsigned char 
 14440 ;; Registers used:
 14441 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14442 ;; Tracked objects:
 14443 ;;		On entry : 0/0
 14444 ;;		On exit  : 0/0
 14445 ;;		Unchanged: 0/0
 14446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14448 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14450 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;Total ram usage:        6 bytes
 14452 ;; Hardware stack levels used:    1
 14453 ;; Hardware stack levels required when called:   11
 14454 ;; This function calls:
 14455 ;;		Nothing
 14456 ;; This function is called by:
 14457 ;;		_Term_MainSm
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           	psect	text57
 14462  005966                     __ptext57:
 14463                           	opt stack 0
 14464  005966                     _strcat:
 14465                           	opt stack 15
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;incstack = 0
 14469  005966  C07D  F081         	movff	strcat@to,strcat@cp
 14470  00596A  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14471  00596E  D003               	goto	l3528
 14472  005970  0100               	movlb	0	; () banked
 14473  005972  4B81               	infsnz	strcat@cp& (0+255),f,b
 14474  005974  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14475  005976                     l3528:
 14476                           
 14477                           ; BSR set to: 0
 14478  005976  C081  FFD9         	movff	strcat@cp,fsr2l
 14479  00597A  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14480  00597E  50DF               	movf	indf2,w,c
 14481  005980  B4D8               	btfsc	status,2,c
 14482  005982  D006               	goto	l3531
 14483  005984  D7F5               	goto	l3529
 14484  005986  0100               	movlb	0	; () banked
 14485  005988  4B81               	infsnz	strcat@cp& (0+255),f,b
 14486  00598A  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14487  00598C  4B7F               	infsnz	strcat@from& (0+255),f,b
 14488  00598E  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14489  005990                     l3531:
 14490                           
 14491                           ; BSR set to: 0
 14492  005990  C07F  FFF6         	movff	strcat@from,tblptrl
 14493  005994  C080  FFF7         	movff	strcat@from+1,tblptrh
 14494  005998  6AF8               	clrf	tblptru,c
 14495  00599A  C081  FFD9         	movff	strcat@cp,fsr2l
 14496  00599E  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14497  0059A2  0E0E               	movlw	(high __ramtop+-1)
 14498  0059A4  64F7               	cpfsgt	tblptrh,c
 14499  0059A6  D003               	bra	u14417
 14500  0059A8  0008               	tblrd		*
 14501  0059AA  50F5               	movf	tablat,w,c
 14502  0059AC  D005               	bra	u14410
 14503  0059AE                     u14417:
 14504  0059AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 14505  0059B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 14506  0059B6  50EF               	movf	indf0,w,c
 14507  0059B8                     u14410:
 14508  0059B8  6EDF               	movwf	indf2,c
 14509  0059BA  50DF               	movf	indf2,w,c
 14510  0059BC  B4D8               	btfsc	status,2,c
 14511  0059BE  0012               	return	
 14512  0059C0  D7E2               	goto	l3532
 14513  0059C2                     __end_of_strcat:
 14514                           	opt stack 0
 14515                           tosu	equ	0xFFF
 14516                           tosh	equ	0xFFE
 14517                           tosl	equ	0xFFD
 14518                           pclath	equ	0xFFA
 14519                           tblptru	equ	0xFF8
 14520                           tblptrh	equ	0xFF7
 14521                           tblptrl	equ	0xFF6
 14522                           tablat	equ	0xFF5
 14523                           prodh	equ	0xFF4
 14524                           prodl	equ	0xFF3
 14525                           intcon	equ	0xFF2
 14526                           intcon2	equ	0xFF1
 14527                           intcon3	equ	0xFF0
 14528                           indf0	equ	0xFEF
 14529                           postinc0	equ	0xFEE
 14530                           plusw0	equ	0xFEB
 14531                           fsr0h	equ	0xFEA
 14532                           fsr0l	equ	0xFE9
 14533                           wreg	equ	0xFE8
 14534                           indf1	equ	0xFE7
 14535                           postinc1	equ	0xFE6
 14536                           postdec1	equ	0xFE5
 14537                           fsr1h	equ	0xFE2
 14538                           fsr1l	equ	0xFE1
 14539                           indf2	equ	0xFDF
 14540                           postinc2	equ	0xFDE
 14541                           postdec2	equ	0xFDD
 14542                           plusw2	equ	0xFDB
 14543                           fsr2h	equ	0xFDA
 14544                           fsr2l	equ	0xFD9
 14545                           status	equ	0xFD8
 14546                           
 14547 ;; *************** function _sprintf *****************
 14548 ;; Defined at:
 14549 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14550 ;; Parameters:    Size  Location     Type
 14551 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14552 ;;		 -> Term_MainSm@Data(50), 
 14553 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14554 ;;		 -> STR_27(17), 
 14555 ;; Auto vars:     Size  Location     Type
 14556 ;;  tmpval          4    0        struct .
 14557 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14558 ;;		 -> STR_32(7), STR_28(12), 
 14559 ;;  ap              2   36[BANK0 ] PTR void [1]
 14560 ;;		 -> ?_sprintf(2), 
 14561 ;;  len             2    0        unsigned int 
 14562 ;;  val             2    0        unsigned int 
 14563 ;;  c               1   38[BANK0 ] char 
 14564 ;;  flag            1   35[BANK0 ] unsigned char 
 14565 ;;  prec            1    0        char 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  2   29[BANK0 ] int 
 14568 ;; Registers used:
 14569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14575 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14576 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14578 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14579 ;;Total ram usage:       12 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:   11
 14582 ;; This function calls:
 14583 ;;		Nothing
 14584 ;; This function is called by:
 14585 ;;		_Term_MainSm
 14586 ;; This function uses a non-reentrant model
 14587 ;;
 14588                           
 14589                           	psect	text58
 14590  003BCA                     __ptext58:
 14591                           	opt stack 0
 14592  003BCA                     _sprintf:
 14593                           	opt stack 15
 14594                           
 14595                           ;doprnt.c: 494: va_list ap;
 14596                           ;doprnt.c: 499: signed char c;
 14597                           ;doprnt.c: 506: signed char prec;
 14598                           ;doprnt.c: 508: unsigned char flag;
 14599                           ;doprnt.c: 523: union {
 14600                           ;doprnt.c: 524: unsigned long vd;
 14601                           ;doprnt.c: 525: double integ;
 14602                           ;doprnt.c: 526: } tmpval;
 14603                           ;doprnt.c: 528: unsigned int val;
 14604                           ;doprnt.c: 529: unsigned len;
 14605                           ;doprnt.c: 530: const char * cp;
 14606                           ;doprnt.c: 533: *ap = __va_start();
 14607                           
 14608                           ;incstack = 0
 14609  003BCA  0E81               	movlw	low (?_sprintf+4)
 14610  003BCC  0100               	movlb	0	; () banked
 14611  003BCE  6F84               	movwf	sprintf@ap& (0+255),b
 14612  003BD0  0E00               	movlw	high (?_sprintf+4)
 14613  003BD2  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14614                           
 14615                           ;doprnt.c: 536: while(c = *f++) {
 14616  003BD4  D04E               	goto	l2932
 14617  003BD6                     
 14618                           ; BSR set to: 0
 14619                           ;doprnt.c: 538: if(c != '%')
 14620                           
 14621                           ; BSR set to: 0
 14622  003BD6  0E25               	movlw	37
 14623  003BD8  1986               	xorwf	sprintf@c& (0+255),w,b
 14624  003BDA  B4D8               	btfsc	status,2,c
 14625  003BDC  D009               	goto	l2922
 14626                           
 14627                           ; BSR set to: 0
 14628                           ;doprnt.c: 540: {
 14629                           ;doprnt.c: 541: ((*sp++ = (c)));
 14630  003BDE  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14631  003BE2  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14632  003BE6  C086  FFDF         	movff	sprintf@c,indf2
 14633                           
 14634                           ; BSR set to: 0
 14635  003BEA  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14636  003BEC  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14637                           
 14638                           ;doprnt.c: 542: continue;
 14639  003BEE  D041               	goto	l2932
 14640  003BF0                     l2922:
 14641                           
 14642                           ; BSR set to: 0
 14643                           ;doprnt.c: 543: }
 14644                           ;doprnt.c: 548: flag = 0;
 14645                           
 14646                           ; BSR set to: 0
 14647  003BF0  0E00               	movlw	0
 14648  003BF2  6F83               	movwf	sprintf@flag& (0+255),b
 14649                           
 14650                           ;doprnt.c: 635: switch(c = *f++) {
 14651  003BF4  D02E               	goto	l2923
 14652  003BF6                     
 14653                           ; BSR set to: 0
 14654                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14655                           
 14656                           ; BSR set to: 0
 14657  003BF6  C084  FFD9         	movff	sprintf@ap,fsr2l
 14658  003BFA  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14659  003BFE  CFDE F087          	movff	postinc2,sprintf@cp
 14660  003C02  CFDD F088          	movff	postdec2,sprintf@cp+1
 14661                           
 14662                           ; BSR set to: 0
 14663  003C06  0E02               	movlw	2
 14664  003C08  2784               	addwf	sprintf@ap& (0+255),f,b
 14665  003C0A  0E00               	movlw	0
 14666  003C0C  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14667                           
 14668                           ; BSR set to: 0
 14669                           ;doprnt.c: 740: if(!cp)
 14670  003C0E  5187               	movf	sprintf@cp& (0+255),w,b
 14671  003C10  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14672  003C12  A4D8               	btfss	status,2,c
 14673  003C14  D014               	goto	l2928
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;doprnt.c: 741: cp = "(null)";
 14677  003C16  0ED8               	movlw	low STR_32
 14678  003C18  6F87               	movwf	sprintf@cp& (0+255),b
 14679  003C1A  0EFF               	movlw	high STR_32
 14680  003C1C  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14681                           
 14682                           ; BSR set to: 0
 14683                           ;doprnt.c: 777: while(*cp)
 14684  003C1E  D00F               	goto	l2928
 14685  003C20                     
 14686                           ; BSR set to: 0
 14687                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14688                           
 14689                           ; BSR set to: 0
 14690  003C20  C087  FFF6         	movff	sprintf@cp,tblptrl
 14691  003C24  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14692  003C28                     	if	0	;tblptru may be non-zero
 14693  003C28                     	endif
 14694  003C28                     	if	0	;tblptru may be non-zero
 14695  003C28                     	endif
 14696  003C28  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14697  003C2C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14698  003C30  0008               	tblrd		*
 14699  003C32  CFF5 FFDF          	movff	tablat,indf2
 14700                           
 14701                           ; BSR set to: 0
 14702  003C36  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14703  003C38  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14704                           
 14705                           ; BSR set to: 0
 14706  003C3A  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14707  003C3C  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14708  003C3E                     l2928:
 14709                           
 14710                           ; BSR set to: 0
 14711                           
 14712                           ; BSR set to: 0
 14713  003C3E  C087  FFF6         	movff	sprintf@cp,tblptrl
 14714  003C42  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14715  003C46                     	if	0	;tblptru may be non-zero
 14716  003C46                     	endif
 14717  003C46                     	if	0	;tblptru may be non-zero
 14718  003C46                     	endif
 14719  003C46  0008               	tblrd		*
 14720  003C48  50F5               	movf	tablat,w,c
 14721  003C4A  0900               	iorlw	0
 14722  003C4C  B4D8               	btfsc	status,2,c
 14723  003C4E  D011               	goto	l2932
 14724  003C50  D7E7               	goto	l2929
 14725  003C52                     l2923:
 14726                           
 14727                           ; BSR set to: 0
 14728                           
 14729                           ; BSR set to: 0
 14730  003C52  C07F  FFF6         	movff	sprintf@f,tblptrl
 14731  003C56  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14732  003C5A  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14733  003C5C  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14734  003C5E                     	if	0	;tblptru may be non-zero
 14735  003C5E                     	endif
 14736  003C5E                     	if	0	;tblptru may be non-zero
 14737  003C5E                     	endif
 14738  003C5E  0008               	tblrd		*
 14739  003C60  CFF5 F086          	movff	tablat,sprintf@c
 14740  003C64  5186               	movf	sprintf@c& (0+255),w,b
 14741                           
 14742                           ; Switch size 1, requested type "space"
 14743                           ; Number of cases is 2, Range of values is 0 to 115
 14744                           ; switch strategies available:
 14745                           ; Name         Instructions Cycles
 14746                           ; simple_byte            7     4 (average)
 14747                           ;	Chosen strategy is simple_byte
 14748  003C66  0A00               	xorlw	0	; case 0
 14749  003C68  B4D8               	btfsc	status,2,c
 14750  003C6A  D00F               	goto	u14470
 14751  003C6C  0A73               	xorlw	115	; case 115
 14752  003C6E  B4D8               	btfsc	status,2,c
 14753  003C70  D7C2               	goto	l2926
 14754  003C72                     l2932:
 14755                           
 14756                           ; BSR set to: 0
 14757                           
 14758                           ; BSR set to: 0
 14759                           
 14760                           ;doprnt.c: 1422: {
 14761                           
 14762                           ; BSR set to: 0
 14763  003C72  C07F  FFF6         	movff	sprintf@f,tblptrl
 14764  003C76  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14765  003C7A  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14766  003C7C  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14767  003C7E                     	if	0	;tblptru may be non-zero
 14768  003C7E                     	endif
 14769  003C7E                     	if	0	;tblptru may be non-zero
 14770  003C7E                     	endif
 14771  003C7E  0008               	tblrd		*
 14772  003C80  CFF5 F086          	movff	tablat,sprintf@c
 14773  003C84  5186               	movf	sprintf@c& (0+255),w,b
 14774  003C86  A4D8               	btfss	status,2,c
 14775  003C88  D7A6               	goto	l2921
 14776  003C8A                     u14470:
 14777                           
 14778                           ; BSR set to: 0
 14779                           ;doprnt.c: 1538: *sp = 0;
 14780                           
 14781                           ; BSR set to: 0
 14782                           
 14783                           ;doprnt.c: 1469: }
 14784                           ;doprnt.c: 1533: }
 14785                           ;doprnt.c: 1535: alldone:
 14786                           
 14787                           ; BSR set to: 0
 14788  003C8A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14789  003C8E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14790  003C92  0E00               	movlw	0
 14791  003C94  6EDF               	movwf	indf2,c
 14792  003C96  0012               	return	
 14793  003C98                     __end_of_sprintf:
 14794                           	opt stack 0
 14795                           tosu	equ	0xFFF
 14796                           tosh	equ	0xFFE
 14797                           tosl	equ	0xFFD
 14798                           pclath	equ	0xFFA
 14799                           tblptru	equ	0xFF8
 14800                           tblptrh	equ	0xFF7
 14801                           tblptrl	equ	0xFF6
 14802                           tablat	equ	0xFF5
 14803                           prodh	equ	0xFF4
 14804                           prodl	equ	0xFF3
 14805                           intcon	equ	0xFF2
 14806                           intcon2	equ	0xFF1
 14807                           intcon3	equ	0xFF0
 14808                           indf0	equ	0xFEF
 14809                           postinc0	equ	0xFEE
 14810                           plusw0	equ	0xFEB
 14811                           fsr0h	equ	0xFEA
 14812                           fsr0l	equ	0xFE9
 14813                           wreg	equ	0xFE8
 14814                           indf1	equ	0xFE7
 14815                           postinc1	equ	0xFE6
 14816                           postdec1	equ	0xFE5
 14817                           fsr1h	equ	0xFE2
 14818                           fsr1l	equ	0xFE1
 14819                           indf2	equ	0xFDF
 14820                           postinc2	equ	0xFDE
 14821                           postdec2	equ	0xFDD
 14822                           plusw2	equ	0xFDB
 14823                           fsr2h	equ	0xFDA
 14824                           fsr2l	equ	0xFD9
 14825                           status	equ	0xFD8
 14826                           
 14827 ;; *************** function _memset *****************
 14828 ;; Defined at:
 14829 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14830 ;; Parameters:    Size  Location     Type
 14831 ;;  p1              2   29[BANK0 ] PTR void 
 14832 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14833 ;;  c               2   31[BANK0 ] int 
 14834 ;;  n               2   33[BANK0 ] unsigned int 
 14835 ;; Auto vars:     Size  Location     Type
 14836 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14837 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14838 ;; Return value:  Size  Location     Type
 14839 ;;                  2   29[BANK0 ] PTR void 
 14840 ;; Registers used:
 14841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14842 ;; Tracked objects:
 14843 ;;		On entry : 0/0
 14844 ;;		On exit  : 0/0
 14845 ;;		Unchanged: 0/0
 14846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14847 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14850 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14851 ;;Total ram usage:        8 bytes
 14852 ;; Hardware stack levels used:    1
 14853 ;; Hardware stack levels required when called:   11
 14854 ;; This function calls:
 14855 ;;		Nothing
 14856 ;; This function is called by:
 14857 ;;		_USBDeviceInit
 14858 ;;		_USBStdSetCfgHandler
 14859 ;;		_Term_MainSm
 14860 ;; This function uses a non-reentrant model
 14861 ;;
 14862                           
 14863                           	psect	text59
 14864  0065A2                     __ptext59:
 14865                           	opt stack 0
 14866  0065A2                     _memset:
 14867                           	opt stack 14
 14868                           
 14869                           ; BSR set to: 0
 14870                           ;incstack = 0
 14871  0065A2  C07D  F083         	movff	memset@p1,memset@p
 14872  0065A6  C07E  F084         	movff	memset@p1+1,memset@p+1
 14873  0065AA  D009               	goto	l3402
 14874  0065AC                     l13023:
 14875  0065AC  C083  FFD9         	movff	memset@p,fsr2l
 14876  0065B0  C084  FFDA         	movff	memset@p+1,fsr2h
 14877  0065B4  C07F  FFDF         	movff	memset@c,indf2
 14878  0065B8  0100               	movlb	0	; () banked
 14879  0065BA  4B83               	infsnz	memset@p& (0+255),f,b
 14880  0065BC  2B84               	incf	(memset@p+1)& (0+255),f,b
 14881  0065BE                     l3402:
 14882                           
 14883                           ; BSR set to: 0
 14884  0065BE  0100               	movlb	0	; () banked
 14885  0065C0  0781               	decf	memset@n& (0+255),f,b
 14886  0065C2  A0D8               	btfss	status,0,c
 14887  0065C4  0782               	decf	(memset@n+1)& (0+255),f,b
 14888  0065C6  2981               	incf	memset@n& (0+255),w,b
 14889  0065C8  E1F1               	bnz	l13023
 14890  0065CA  2982               	incf	(memset@n+1)& (0+255),w,b
 14891  0065CC  B4D8               	btfsc	status,2,c
 14892  0065CE  0012               	return	
 14893  0065D0  D7ED               	goto	l3403
 14894  0065D2                     __end_of_memset:
 14895                           	opt stack 0
 14896                           tosu	equ	0xFFF
 14897                           tosh	equ	0xFFE
 14898                           tosl	equ	0xFFD
 14899                           pclath	equ	0xFFA
 14900                           tblptru	equ	0xFF8
 14901                           tblptrh	equ	0xFF7
 14902                           tblptrl	equ	0xFF6
 14903                           tablat	equ	0xFF5
 14904                           prodh	equ	0xFF4
 14905                           prodl	equ	0xFF3
 14906                           intcon	equ	0xFF2
 14907                           intcon2	equ	0xFF1
 14908                           intcon3	equ	0xFF0
 14909                           indf0	equ	0xFEF
 14910                           postinc0	equ	0xFEE
 14911                           plusw0	equ	0xFEB
 14912                           fsr0h	equ	0xFEA
 14913                           fsr0l	equ	0xFE9
 14914                           wreg	equ	0xFE8
 14915                           indf1	equ	0xFE7
 14916                           postinc1	equ	0xFE6
 14917                           postdec1	equ	0xFE5
 14918                           fsr1h	equ	0xFE2
 14919                           fsr1l	equ	0xFE1
 14920                           indf2	equ	0xFDF
 14921                           postinc2	equ	0xFDE
 14922                           postdec2	equ	0xFDD
 14923                           plusw2	equ	0xFDB
 14924                           fsr2h	equ	0xFDA
 14925                           fsr2l	equ	0xFD9
 14926                           status	equ	0xFD8
 14927                           
 14928 ;; *************** function _Terminal *****************
 14929 ;; Defined at:
 14930 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14931 ;; Parameters:    Size  Location     Type
 14932 ;;		None
 14933 ;; Auto vars:     Size  Location     Type
 14934 ;;  i               1   68[BANK0 ] unsigned char 
 14935 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14936 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14937 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14938 ;;  Index           1   70[BANK0 ] unsigned char 
 14939 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14940 ;; Return value:  Size  Location     Type
 14941 ;;                  1    wreg      void 
 14942 ;; Registers used:
 14943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14944 ;; Tracked objects:
 14945 ;;		On entry : 0/0
 14946 ;;		On exit  : 0/0
 14947 ;;		Unchanged: 0/0
 14948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14950 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14952 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14953 ;;Total ram usage:      455 bytes
 14954 ;; Hardware stack levels used:    1
 14955 ;; Hardware stack levels required when called:   15
 14956 ;; This function calls:
 14957 ;;		_I2cSlv_I2cReadMsgSts
 14958 ;;		_I2cSlv_ReceiveI2cMsg
 14959 ;;		_I2cSlv_SendI2cMsg
 14960 ;;		_OsTmr_Wait
 14961 ;;		_atoi
 14962 ;;		_getsUSBUSART
 14963 ;;		_itoa
 14964 ;;		_putUSBUSART
 14965 ;;		_strcpy
 14966 ;;		_strtol
 14967 ;;		_xtoi
 14968 ;; This function is called by:
 14969 ;;		_Term_MainSm
 14970 ;; This function uses a non-reentrant model
 14971 ;;
 14972                           
 14973                           	psect	text60
 14974  0000D0                     __ptext60:
 14975                           	opt stack 0
 14976  0000D0                     _Terminal:
 14977                           	opt stack 11
 14978                           
 14979                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14980                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14981                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14982                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14983                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14984                           ;term.c: 435: UINT8 Index;
 14985                           ;term.c: 436: static UINT8 Len[4];
 14986                           ;term.c: 437: static UINT8 PackageLen;
 14987                           ;term.c: 438: static UINT8 Addr[4];
 14988                           ;term.c: 439: static UINT8 SlaveAddr;
 14989                           ;term.c: 440: static PayloadType Payload[20u];
 14990                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;incstack = 0
 14994  0000D0  0E00               	movlw	0
 14995  0000D2  0100               	movlb	0	; () banked
 14996  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15000                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15001                           ;term.c: 445: static SwTimerType SwTimer;
 15002                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15003  0000D6  0E1F               	movlw	31
 15004  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 15005  0000DA  0012               	return	
 15006                           
 15007                           ; BSR set to: 0
 15008  0000DC  B265               	btfsc	3941,1,c	;volatile
 15009  0000DE  0012               	return	
 15010  0000E0  D278               	goto	l2405
 15011  0000E2                     
 15012                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15013                           
 15014                           ; BSR set to: 0
 15015  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15016  0000E4  0100               	movlb	0	; () banked
 15017  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15018  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15019  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15020  0000EC  0EC8               	movlw	200
 15021  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15022  0000F0  ECB3  F026         	call	_getsUSBUSART	;wreg free
 15023  0000F4  0100               	movlb	0	; () banked
 15024  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15025                           
 15026                           ; BSR set to: 0
 15027                           ;term.c: 458: if (ReceivedBytes > 0)
 15028  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15029  0000FA  B4D8               	btfsc	status,2,c
 15030  0000FC  0012               	return	
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;term.c: 459: {
 15034                           ;term.c: 461: if (EchoOption == 1u)
 15035  0000FE  0102               	movlb	2	; () banked
 15036  000100  05F1               	decf	Terminal@EchoOption& (0+255),w,b
 15037  000102  A4D8               	btfss	status,2,c
 15038  000104  D026               	goto	l2409
 15039                           
 15040                           ; BSR set to: 2
 15041                           ;term.c: 462: {
 15042                           ;term.c: 464: if((cdc_trf_state == 0))
 15043  000106  0100               	movlb	0	; () banked
 15044  000108  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15045  00010A  A4D8               	btfss	status,2,c
 15046  00010C  D022               	goto	l2409
 15047                           
 15048                           ; BSR set to: 0
 15049                           ;term.c: 465: {
 15050                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15051  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15052  000110  0D01               	mullw	1
 15053  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15054  000114  24F3               	addwf	prodl,w,c
 15055  000116  6ED9               	movwf	fsr2l,c
 15056  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15057  00011A  20F4               	addwfc	prodh,w,c
 15058  00011C  6EDA               	movwf	fsr2h,c
 15059  00011E  0E0D               	movlw	13
 15060  000120  6EDF               	movwf	indf2,c
 15061                           
 15062                           ; BSR set to: 0
 15063                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15064  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15065  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15066  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15067  000128  0E01               	movlw	1
 15068  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15069  00012C  0E00               	movlw	0
 15070  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15071  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15072  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15073  000134  6ED9               	movwf	fsr2l,c
 15074  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15075  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15076  00013A  6EDA               	movwf	fsr2h,c
 15077  00013C  0E0A               	movlw	10
 15078  00013E  6EDF               	movwf	indf2,c
 15079                           
 15080                           ; BSR set to: 0
 15081                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15082  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15083  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15084  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15085  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15086  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15087  00014A  0F02               	addlw	2
 15088  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15089  00014E  EC29  F034         	call	_putUSBUSART	;wreg free
 15090  000152                     l2409:
 15091                           
 15092                           ;term.c: 469: }
 15093                           ;term.c: 470: }
 15094                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15095                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15096                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15097  000152  0E53               	movlw	83
 15098  000154  010A               	movlb	10	; () banked
 15099  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15100  000158  A4D8               	btfss	status,2,c
 15101  00015A  D043               	goto	l2410
 15102                           
 15103                           ; BSR set to: 10
 15104  00015C  0E4F               	movlw	79
 15105  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15106  000160  A4D8               	btfss	status,2,c
 15107  000162  D03F               	goto	l2410
 15108                           
 15109                           ; BSR set to: 10
 15110  000164  0E3A               	movlw	58
 15111  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15112  000168  A4D8               	btfss	status,2,c
 15113  00016A  D03B               	goto	l2410
 15114                           
 15115                           ; BSR set to: 10
 15116                           ;term.c: 476: {
 15117                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15118  00016C  0E47               	movlw	71
 15119  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15120  000170  A4D8               	btfss	status,2,c
 15121  000172  0012               	return	
 15122                           
 15123                           ; BSR set to: 10
 15124  000174  0E3A               	movlw	58
 15125  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15126  000178  A4D8               	btfss	status,2,c
 15127  00017A  0012               	return	
 15128                           
 15129                           ; BSR set to: 10
 15130                           ;term.c: 479: {
 15131                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15132  00017C  0E44               	movlw	68
 15133  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15134  000180  A4D8               	btfss	status,2,c
 15135  000182  D015               	goto	l2412
 15136                           
 15137                           ; BSR set to: 10
 15138  000184  0E46               	movlw	70
 15139  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15140  000188  A4D8               	btfss	status,2,c
 15141  00018A  D011               	goto	l2412
 15142                           
 15143                           ; BSR set to: 10
 15144                           ;term.c: 482: {
 15145                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15146  00018C  0E41               	movlw	65
 15147  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15148  000190  A4D8               	btfss	status,2,c
 15149  000192  D004               	goto	l2413
 15150                           
 15151                           ; BSR set to: 10
 15152                           ;term.c: 484: {
 15153                           ;term.c: 485: FormatOption = 1u;
 15154  000194  0E01               	movlw	1
 15155  000196  0102               	movlb	2	; () banked
 15156  000198  6FEB               	movwf	Terminal@FormatOption& (0+255),b
 15157                           
 15158                           ;term.c: 486: }
 15159  00019A  0012               	return	
 15160  00019C                     l2413:
 15161                           
 15162                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15163                           
 15164                           ; BSR set to: 2
 15165  00019C  0E42               	movlw	66
 15166  00019E  010A               	movlb	10	; () banked
 15167  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15168  0001A2  A4D8               	btfss	status,2,c
 15169  0001A4  0012               	return	
 15170                           
 15171                           ; BSR set to: 10
 15172                           ;term.c: 488: {
 15173                           ;term.c: 489: FormatOption = 0u;
 15174  0001A6  0E00               	movlw	0
 15175  0001A8  0102               	movlb	2	; () banked
 15176  0001AA  6FEB               	movwf	Terminal@FormatOption& (0+255),b
 15177                           
 15178                           ; BSR set to: 2
 15179                           ;term.c: 490: }
 15180                           ;term.c: 491: }
 15181                           
 15182                           ; BSR set to: 2
 15183  0001AC  0012               	return	
 15184  0001AE                     l2412:
 15185                           
 15186                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15187                           
 15188                           ; BSR set to: 2
 15189  0001AE  0E45               	movlw	69
 15190  0001B0  010A               	movlb	10	; () banked
 15191  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15192  0001B4  A4D8               	btfss	status,2,c
 15193  0001B6  0012               	return	
 15194                           
 15195                           ; BSR set to: 10
 15196  0001B8  0E4D               	movlw	77
 15197  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15198  0001BC  A4D8               	btfss	status,2,c
 15199  0001BE  0012               	return	
 15200                           
 15201                           ; BSR set to: 10
 15202                           ;term.c: 494: {
 15203                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15204  0001C0  0E31               	movlw	49
 15205  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15206  0001C4  A4D8               	btfss	status,2,c
 15207  0001C6  D004               	goto	l2418
 15208                           
 15209                           ; BSR set to: 10
 15210                           ;term.c: 496: {
 15211                           ;term.c: 497: EchoOption = 1u;
 15212  0001C8  0E01               	movlw	1
 15213  0001CA  0102               	movlb	2	; () banked
 15214  0001CC  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15215                           
 15216                           ;term.c: 498: }
 15217  0001CE  0012               	return	
 15218  0001D0                     l2418:
 15219                           
 15220                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15221                           
 15222                           ; BSR set to: 2
 15223  0001D0  0E30               	movlw	48
 15224  0001D2  010A               	movlb	10	; () banked
 15225  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15226  0001D6  A4D8               	btfss	status,2,c
 15227  0001D8  0012               	return	
 15228                           
 15229                           ; BSR set to: 10
 15230                           ;term.c: 500: {
 15231                           ;term.c: 501: EchoOption = 0u;
 15232  0001DA  0E00               	movlw	0
 15233  0001DC  0102               	movlb	2	; () banked
 15234  0001DE  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15235                           
 15236                           ; BSR set to: 2
 15237                           ;term.c: 507: }
 15238                           ;term.c: 508: }
 15239                           ;term.c: 509: }
 15240                           
 15241                           ; BSR set to: 2
 15242                           
 15243                           ; BSR set to: 2
 15244                           
 15245                           ;term.c: 504: else
 15246                           ;term.c: 505: {
 15247                           
 15248                           ; BSR set to: 2
 15249                           
 15250                           ; BSR set to: 2
 15251                           ;term.c: 502: }
 15252                           ;term.c: 503: }
 15253                           
 15254                           ; BSR set to: 2
 15255  0001E0  0012               	return	
 15256  0001E2                     l2410:
 15257                           
 15258                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15259                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15260                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15261                           
 15262                           ; BSR set to: 2
 15263  0001E2  0E53               	movlw	83
 15264  0001E4  010A               	movlb	10	; () banked
 15265  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15266  0001E8  A4D8               	btfss	status,2,c
 15267  0001EA  D0D3               	goto	l2423
 15268                           
 15269                           ; BSR set to: 10
 15270  0001EC  0E42               	movlw	66
 15271  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15272  0001F0  A4D8               	btfss	status,2,c
 15273  0001F2  D0CF               	goto	l2423
 15274                           
 15275                           ; BSR set to: 10
 15276  0001F4  0E3A               	movlw	58
 15277  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15278  0001F8  A4D8               	btfss	status,2,c
 15279  0001FA  D0CB               	goto	l2423
 15280                           
 15281                           ; BSR set to: 10
 15282                           ;term.c: 513: {
 15283                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15284  0001FC  0E57               	movlw	87
 15285  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15286  000200  A4D8               	btfss	status,2,c
 15287  000202  D091               	goto	l2424
 15288                           
 15289                           ; BSR set to: 10
 15290  000204  0E3A               	movlw	58
 15291  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15292  000208  A4D8               	btfss	status,2,c
 15293  00020A  D08D               	goto	l2424
 15294                           
 15295                           ; BSR set to: 10
 15296                           ;term.c: 515: {
 15297                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15298  00020C  CA05  F3B3         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15299                           
 15300                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15301  000210  CA06  F3B4         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15302                           
 15303                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15304  000214  CA08  F3AF         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15305                           
 15306                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15307  000218  CA09  F3B0         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15308                           
 15309                           ; BSR set to: 10
 15310                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15311  00021C  0EB3               	movlw	low Terminal@Len
 15312  00021E  0100               	movlb	0	; () banked
 15313  000220  6F83               	movwf	atoi@s& (0+255),b
 15314  000222  0E03               	movlw	high Terminal@Len
 15315  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15316  000226  EC3C  F01C         	call	_atoi	;wreg free
 15317  00022A  0100               	movlb	0	; () banked
 15318  00022C  5183               	movf	?_atoi& (0+255),w,b
 15319  00022E  0102               	movlb	2	; () banked
 15320  000230  6FED               	movwf	Terminal@PackageLen& (0+255),b
 15321                           
 15322                           ; BSR set to: 2
 15323                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15324  000232  0EAF               	movlw	low Terminal@Addr
 15325  000234  0100               	movlb	0	; () banked
 15326  000236  6F83               	movwf	xtoi@s& (0+255),b
 15327  000238  0E03               	movlw	high Terminal@Addr
 15328  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15329  00023C  EC0B  F01A         	call	_xtoi	;wreg free
 15330  000240  0100               	movlb	0	; () banked
 15331  000242  5183               	movf	?_xtoi& (0+255),w,b
 15332  000244  0102               	movlb	2	; () banked
 15333  000246  6FEC               	movwf	Terminal@SlaveAddr& (0+255),b
 15334                           
 15335                           ; BSR set to: 2
 15336                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15337  000248  0E00               	movlw	0
 15338  00024A  0100               	movlb	0	; () banked
 15339  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15340  00024E  D032               	goto	l2425
 15341  000250                     
 15342                           ;term.c: 527: {
 15343                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15344                           
 15345                           ; BSR set to: 0
 15346  000250  0100               	movlb	0	; () banked
 15347  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15348  000254  0D02               	mullw	2
 15349  000256  0E0B               	movlw	11
 15350  000258  26F3               	addwf	prodl,f,c
 15351  00025A  0E00               	movlw	0
 15352  00025C  22F4               	addwfc	prodh,f,c
 15353  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15354  000260  24F3               	addwf	prodl,w,c
 15355  000262  6ED9               	movwf	fsr2l,c
 15356  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15357  000266  20F4               	addwfc	prodh,w,c
 15358  000268  6EDA               	movwf	fsr2h,c
 15359  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15360  00026C  0D04               	mullw	4
 15361  00026E  0E66               	movlw	low Terminal@Payload
 15362  000270  24F3               	addwf	prodl,w,c
 15363  000272  6EE1               	movwf	fsr1l,c
 15364  000274  0E07               	movlw	high Terminal@Payload
 15365  000276  20F4               	addwfc	prodh,w,c
 15366  000278  6EE2               	movwf	fsr1h,c
 15367  00027A  CFDF FFE7          	movff	indf2,indf1
 15368                           
 15369                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15370  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15371  000280  0D02               	mullw	2
 15372  000282  0E0C               	movlw	12
 15373  000284  26F3               	addwf	prodl,f,c
 15374  000286  0E00               	movlw	0
 15375  000288  22F4               	addwfc	prodh,f,c
 15376  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15377  00028C  24F3               	addwf	prodl,w,c
 15378  00028E  6ED9               	movwf	fsr2l,c
 15379  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15380  000292  20F4               	addwfc	prodh,w,c
 15381  000294  6EDA               	movwf	fsr2h,c
 15382  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15383  000298  0D04               	mullw	4
 15384  00029A  0E01               	movlw	1
 15385  00029C  26F3               	addwf	prodl,f,c
 15386  00029E  0E00               	movlw	0
 15387  0002A0  22F4               	addwfc	prodh,f,c
 15388  0002A2  0E66               	movlw	low Terminal@Payload
 15389  0002A4  24F3               	addwf	prodl,w,c
 15390  0002A6  6EE1               	movwf	fsr1l,c
 15391  0002A8  0E07               	movlw	high Terminal@Payload
 15392  0002AA  20F4               	addwfc	prodh,w,c
 15393  0002AC  6EE2               	movwf	fsr1h,c
 15394  0002AE  CFDF FFE7          	movff	indf2,indf1
 15395                           
 15396                           ; BSR set to: 0
 15397  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15398  0002B4                     l2425:
 15399                           
 15400                           ; BSR set to: 0
 15401                           
 15402                           ; BSR set to: 0
 15403  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15404  0002B6  0102               	movlb	2	; () banked
 15405  0002B8  5DED               	subwf	Terminal@PackageLen& (0+255),w,b
 15406  0002BA  B0D8               	btfsc	status,0,c
 15407  0002BC  D7C9               	goto	l2426
 15408                           
 15409                           ; BSR set to: 2
 15410                           ;term.c: 530: }
 15411                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15412                           
 15413                           ; BSR set to: 2
 15414  0002BE  0E00               	movlw	0
 15415  0002C0  0100               	movlb	0	; () banked
 15416  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15417  0002C4  D01F               	goto	l2428
 15418  0002C6                     
 15419                           ;term.c: 533: {
 15420                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15421                           
 15422                           ; BSR set to: 0
 15423  0002C6  0100               	movlb	0	; () banked
 15424  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15425  0002CA  0D04               	mullw	4
 15426  0002CC  0E66               	movlw	low Terminal@Payload
 15427  0002CE  24F3               	addwf	prodl,w,c
 15428  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15429  0002D2  0E07               	movlw	high Terminal@Payload
 15430  0002D4  20F4               	addwfc	prodh,w,c
 15431  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15432  0002D8  0E00               	movlw	0
 15433  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15434  0002DC  0E00               	movlw	0
 15435  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15436  0002E0  0E00               	movlw	0
 15437  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15438  0002E4  0E10               	movlw	16
 15439  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15440  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15441  0002EC  0100               	movlb	0	; () banked
 15442  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15443  0002F0  0D01               	mullw	1
 15444  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15445  0002F4  24F3               	addwf	prodl,w,c
 15446  0002F6  6ED9               	movwf	fsr2l,c
 15447  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15448  0002FA  20F4               	addwfc	prodh,w,c
 15449  0002FC  6EDA               	movwf	fsr2h,c
 15450  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15451                           
 15452                           ; BSR set to: 0
 15453  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15454  000304                     l2428:
 15455                           
 15456                           ; BSR set to: 0
 15457                           
 15458                           ; BSR set to: 0
 15459  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15460  000306  0102               	movlb	2	; () banked
 15461  000308  5DED               	subwf	Terminal@PackageLen& (0+255),w,b
 15462  00030A  B0D8               	btfsc	status,0,c
 15463  00030C  D7DC               	goto	l2429
 15464                           
 15465                           ; BSR set to: 2
 15466                           ;term.c: 539: }
 15467                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15468                           
 15469                           ; BSR set to: 2
 15470  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15471  000310  0100               	movlb	0	; () banked
 15472  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15473  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15474  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15475  000318  C2EC  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15476  00031C  C2ED  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15477  000320  EC69  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 15478                           
 15479                           ;term.c: 543: }
 15480  000324  0012               	return	
 15481  000326                     l2424:
 15482                           
 15483                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15484  000326  0E52               	movlw	82
 15485  000328  010A               	movlb	10	; () banked
 15486  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15487  00032C  A4D8               	btfss	status,2,c
 15488  00032E  0012               	return	
 15489                           
 15490                           ; BSR set to: 10
 15491  000330  0E3A               	movlw	58
 15492  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15493  000334  A4D8               	btfss	status,2,c
 15494  000336  0012               	return	
 15495                           
 15496                           ; BSR set to: 10
 15497                           ;term.c: 545: {
 15498                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15499  000338  CA05  F3B3         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15500                           
 15501                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15502  00033C  CA06  F3B4         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15503                           
 15504                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15505  000340  CA08  F3AF         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15506                           
 15507                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15508  000344  CA09  F3B0         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15509                           
 15510                           ; BSR set to: 10
 15511                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15512  000348  0EB3               	movlw	low Terminal@Len
 15513  00034A  0100               	movlb	0	; () banked
 15514  00034C  6F83               	movwf	atoi@s& (0+255),b
 15515  00034E  0E03               	movlw	high Terminal@Len
 15516  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15517  000352  EC3C  F01C         	call	_atoi	;wreg free
 15518  000356  0100               	movlb	0	; () banked
 15519  000358  5183               	movf	?_atoi& (0+255),w,b
 15520  00035A  0102               	movlb	2	; () banked
 15521  00035C  6FED               	movwf	Terminal@PackageLen& (0+255),b
 15522                           
 15523                           ; BSR set to: 2
 15524                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15525  00035E  0EAF               	movlw	low Terminal@Addr
 15526  000360  0100               	movlb	0	; () banked
 15527  000362  6F83               	movwf	xtoi@s& (0+255),b
 15528  000364  0E03               	movlw	high Terminal@Addr
 15529  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15530  000368  EC0B  F01A         	call	_xtoi	;wreg free
 15531  00036C  0100               	movlb	0	; () banked
 15532  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15533  000370  0102               	movlb	2	; () banked
 15534  000372  6FEC               	movwf	Terminal@SlaveAddr& (0+255),b
 15535                           
 15536                           ; BSR set to: 2
 15537                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15538  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15539  000376  0100               	movlb	0	; () banked
 15540  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15541  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15542  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15543  00037E  C2EC  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15544  000382  C2ED  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15545  000386  EC0A  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15546                           
 15547                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15548  00038A  0E01               	movlw	1
 15549  00038C  0102               	movlb	2	; () banked
 15550  00038E  6FEE               	movwf	Terminal@TermState& (0+255),b
 15551                           
 15552                           ; BSR set to: 2
 15553                           ;term.c: 561: }
 15554                           ;term.c: 562: }
 15555                           
 15556                           ; BSR set to: 2
 15557  000390  0012               	return	
 15558  000392                     l2423:
 15559                           
 15560                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15561                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15562                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15563                           
 15564                           ; BSR set to: 2
 15565  000392  0E54               	movlw	84
 15566  000394  010A               	movlb	10	; () banked
 15567  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15568  000398  A4D8               	btfss	status,2,c
 15569  00039A  0012               	return	
 15570                           
 15571                           ; BSR set to: 10
 15572  00039C  0E45               	movlw	69
 15573  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15574  0003A0  A4D8               	btfss	status,2,c
 15575  0003A2  0012               	return	
 15576                           
 15577                           ; BSR set to: 10
 15578  0003A4  0E4C               	movlw	76
 15579  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15580  0003A8  A4D8               	btfss	status,2,c
 15581  0003AA  0012               	return	
 15582                           
 15583                           ; BSR set to: 10
 15584                           ;term.c: 566: {
 15585                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15586  0003AC  CA03  F3B3         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15587                           
 15588                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15589  0003B0  CA04  F3B4         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15590                           
 15591                           ; BSR set to: 10
 15592                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15593  0003B4  0EB3               	movlw	low Terminal@Len
 15594  0003B6  0100               	movlb	0	; () banked
 15595  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15596  0003BA  0E03               	movlw	high Terminal@Len
 15597  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15598  0003BE  EC3C  F01C         	call	_atoi	;wreg free
 15599  0003C2  C083  F322         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15600  0003C6  C084  F323         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15601                           
 15602                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15603  0003CA  0E00               	movlw	0
 15604  0003CC  0100               	movlb	0	; () banked
 15605  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15606  0003D0  D018               	goto	l2435
 15607  0003D2                     
 15608                           ; BSR set to: 0
 15609                           ;term.c: 573: {
 15610                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15611                           
 15612                           ; BSR set to: 0
 15613  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15614  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15615  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15616  0003D8  0E05               	movlw	5
 15617  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15618  0003DC  0E00               	movlw	0
 15619  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15620  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15621  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15622  0003E4  6ED9               	movwf	fsr2l,c
 15623  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15624  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15625  0003EA  6EDA               	movwf	fsr2h,c
 15626  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15627  0003EE  0D01               	mullw	1
 15628  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15629  0003F2  24F3               	addwf	prodl,w,c
 15630  0003F4  6EE1               	movwf	fsr1l,c
 15631  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15632  0003F8  20F4               	addwfc	prodh,w,c
 15633  0003FA  6EE2               	movwf	fsr1h,c
 15634  0003FC  CFDF FFE7          	movff	indf2,indf1
 15635                           
 15636                           ; BSR set to: 0
 15637  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15638  000402                     l2435:
 15639                           
 15640                           ; BSR set to: 0
 15641                           
 15642                           ; BSR set to: 0
 15643  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15644  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15645  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15646  000408  0103               	movlb	3	; () banked
 15647  00040A  5122               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15648  00040C  0100               	movlb	0	; () banked
 15649  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15650  000410  0103               	movlb	3	; () banked
 15651  000412  5123               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15652  000414  0100               	movlb	0	; () banked
 15653  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15654  000418  B0D8               	btfsc	status,0,c
 15655  00041A  0012               	return	
 15656  00041C  D7DA               	goto	l2436
 15657  00041E                     
 15658                           ;term.c: 619: if((cdc_trf_state == 0))
 15659                           
 15660                           ; BSR set to: 0
 15661  00041E  0100               	movlb	0	; () banked
 15662  000420  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15663  000422  A4D8               	btfss	status,2,c
 15664  000424  0012               	return	
 15665                           
 15666                           ; BSR set to: 0
 15667                           ;term.c: 620: {
 15668                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15669  000426  0E53               	movlw	83
 15670  000428  0102               	movlb	2	; () banked
 15671  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15672                           
 15673                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15674  00042C  0E42               	movlw	66
 15675  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15676                           
 15677                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15678  000430  0E5B               	movlw	91
 15679  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15680                           
 15681                           ; BSR set to: 2
 15682                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15683  000434  C3AF  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15684                           
 15685                           ; BSR set to: 2
 15686                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15687  000438  C3B0  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15688                           
 15689                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15690  00043C  0E5D               	movlw	93
 15691  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15692                           
 15693                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15694  000440  0E3A               	movlw	58
 15695  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15696                           
 15697                           ; BSR set to: 2
 15698                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15699  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15700  000446  0100               	movlb	0	; () banked
 15701  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15702  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15703  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15704  00044E  0E07               	movlw	7
 15705  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15706  000452  EC29  F034         	call	_putUSBUSART	;wreg free
 15707                           
 15708                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15709  000456  0E02               	movlw	2
 15710  000458  0102               	movlb	2	; () banked
 15711  00045A  6FEE               	movwf	Terminal@TermState& (0+255),b
 15712                           
 15713                           ; BSR set to: 2
 15714                           ;term.c: 632: }
 15715                           ;term.c: 633: break;
 15716  00045C  0012               	return	
 15717  00045E                     
 15718                           ; BSR set to: 2
 15719                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15720                           
 15721                           ; BSR set to: 2
 15722  00045E  EC4B  F034         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15723  000462  06E8               	decf	wreg,f,c
 15724  000464  A4D8               	btfss	status,2,c
 15725  000466  D088               	goto	l2444
 15726                           
 15727                           ;term.c: 638: {
 15728                           ;term.c: 640: if (FormatOption == 1u)
 15729  000468  0102               	movlb	2	; () banked
 15730  00046A  05EB               	decf	Terminal@FormatOption& (0+255),w,b
 15731  00046C  A4D8               	btfss	status,2,c
 15732  00046E  D027               	goto	u14350
 15733                           
 15734                           ; BSR set to: 2
 15735                           ;term.c: 641: {
 15736                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15737  000470  0E00               	movlw	0
 15738  000472  0100               	movlb	0	; () banked
 15739  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15740  000476  D01E               	goto	l2446
 15741  000478                     
 15742                           ;term.c: 644: {
 15743                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15744                           
 15745                           ; BSR set to: 0
 15746  000478  0100               	movlb	0	; () banked
 15747  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15748  00047C  0D04               	mullw	4
 15749  00047E  0E66               	movlw	low Terminal@Payload
 15750  000480  24F3               	addwf	prodl,w,c
 15751  000482  6F93               	movwf	itoa@buf& (0+255),b
 15752  000484  0E07               	movlw	high Terminal@Payload
 15753  000486  20F4               	addwfc	prodh,w,c
 15754  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15755  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15756  00048C  0D01               	mullw	1
 15757  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15758  000490  24F3               	addwf	prodl,w,c
 15759  000492  6ED9               	movwf	fsr2l,c
 15760  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15761  000496  20F4               	addwfc	prodh,w,c
 15762  000498  6EDA               	movwf	fsr2h,c
 15763  00049A  50DF               	movf	indf2,w,c
 15764  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15765  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15766  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15767  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15768  0004A4  0E00               	movlw	0
 15769  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15770  0004A8  0E0A               	movlw	10
 15771  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15772  0004AC  ECA4  F030         	call	_itoa	;wreg free
 15773  0004B0  0100               	movlb	0	; () banked
 15774  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15775  0004B4                     l2446:
 15776                           
 15777                           ; BSR set to: 0
 15778                           
 15779                           ; BSR set to: 0
 15780  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15781  0004B6  0102               	movlb	2	; () banked
 15782  0004B8  5DED               	subwf	Terminal@PackageLen& (0+255),w,b
 15783  0004BA  B0D8               	btfsc	status,0,c
 15784  0004BC  D7DD               	goto	l2447
 15785  0004BE                     u14350:
 15786                           
 15787                           ; BSR set to: 2
 15788                           ;term.c: 646: }
 15789                           ;term.c: 647: }
 15790                           ;term.c: 650: if((cdc_trf_state == 0))
 15791                           
 15792                           ; BSR set to: 2
 15793                           
 15794                           ; BSR set to: 2
 15795  0004BE  0100               	movlb	0	; () banked
 15796  0004C0  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15797  0004C2  A4D8               	btfss	status,2,c
 15798  0004C4  0012               	return	
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;term.c: 651: {
 15802                           ;term.c: 653: if (FormatOption == 1u)
 15803  0004C6  0102               	movlb	2	; () banked
 15804  0004C8  05EB               	decf	Terminal@FormatOption& (0+255),w,b
 15805  0004CA  A4D8               	btfss	status,2,c
 15806  0004CC  D02B               	goto	l2450
 15807                           
 15808                           ; BSR set to: 2
 15809                           ;term.c: 654: {
 15810                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15811  0004CE  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15812  0004D0  0D08               	mullw	8
 15813  0004D2  0E03               	movlw	3
 15814  0004D4  26F3               	addwf	prodl,f,c
 15815  0004D6  0E00               	movlw	0
 15816  0004D8  22F4               	addwfc	prodh,f,c
 15817  0004DA  0E66               	movlw	low Terminal@Payload
 15818  0004DC  24F3               	addwf	prodl,w,c
 15819  0004DE  6ED9               	movwf	fsr2l,c
 15820  0004E0  0E07               	movlw	high Terminal@Payload
 15821  0004E2  20F4               	addwfc	prodh,w,c
 15822  0004E4  6EDA               	movwf	fsr2h,c
 15823  0004E6  0E0D               	movlw	13
 15824  0004E8  6EDF               	movwf	indf2,c
 15825                           
 15826                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15827  0004EA  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15828  0004EC  0D08               	mullw	8
 15829  0004EE  0E02               	movlw	2
 15830  0004F0  26F3               	addwf	prodl,f,c
 15831  0004F2  0E00               	movlw	0
 15832  0004F4  22F4               	addwfc	prodh,f,c
 15833  0004F6  0E66               	movlw	low Terminal@Payload
 15834  0004F8  24F3               	addwf	prodl,w,c
 15835  0004FA  6ED9               	movwf	fsr2l,c
 15836  0004FC  0E07               	movlw	high Terminal@Payload
 15837  0004FE  20F4               	addwfc	prodh,w,c
 15838  000500  6EDA               	movwf	fsr2h,c
 15839  000502  0E0A               	movlw	10
 15840  000504  6EDF               	movwf	indf2,c
 15841                           
 15842                           ; BSR set to: 2
 15843                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15844  000506  0E66               	movlw	low Terminal@Payload
 15845  000508  0100               	movlb	0	; () banked
 15846  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15847  00050C  0E07               	movlw	high Terminal@Payload
 15848  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15849  000510  0102               	movlb	2	; () banked
 15850  000512  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15851  000514  0D02               	mullw	2
 15852  000516  50F3               	movf	prodl,w,c
 15853  000518  0F04               	addlw	4
 15854  00051A  0100               	movlb	0	; () banked
 15855  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15856  00051E  EC29  F034         	call	_putUSBUSART	;wreg free
 15857                           
 15858                           ;term.c: 659: }
 15859  000522  D026               	goto	l2451
 15860  000524                     l2450:
 15861                           
 15862                           ;term.c: 660: else
 15863                           ;term.c: 661: {
 15864                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15865  000524  0102               	movlb	2	; () banked
 15866  000526  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15867  000528  0D01               	mullw	1
 15868  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15869  00052C  24F3               	addwf	prodl,w,c
 15870  00052E  6ED9               	movwf	fsr2l,c
 15871  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15872  000532  20F4               	addwfc	prodh,w,c
 15873  000534  6EDA               	movwf	fsr2h,c
 15874  000536  0E0D               	movlw	13
 15875  000538  6EDF               	movwf	indf2,c
 15876                           
 15877                           ; BSR set to: 2
 15878                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15879  00053A  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15880  00053C  0100               	movlb	0	; () banked
 15881  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15882  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15883  000542  0E01               	movlw	1
 15884  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15885  000546  0E00               	movlw	0
 15886  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15887  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15888  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15889  00054E  6ED9               	movwf	fsr2l,c
 15890  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15891  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15892  000554  6EDA               	movwf	fsr2h,c
 15893  000556  0E0A               	movlw	10
 15894  000558  6EDF               	movwf	indf2,c
 15895                           
 15896                           ; BSR set to: 0
 15897                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15898  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15899  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15900  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15901  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15902  000562  0102               	movlb	2	; () banked
 15903  000564  51ED               	movf	Terminal@PackageLen& (0+255),w,b
 15904  000566  0F02               	addlw	2
 15905  000568  0100               	movlb	0	; () banked
 15906  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15907  00056C  EC29  F034         	call	_putUSBUSART	;wreg free
 15908  000570                     l2451:
 15909                           
 15910                           ;term.c: 666: }
 15911                           ;term.c: 668: TermState = Term_GetData;
 15912  000570  0E00               	movlw	0
 15913  000572  0102               	movlb	2	; () banked
 15914  000574  6FEE               	movwf	Terminal@TermState& (0+255),b
 15915                           
 15916                           ; BSR set to: 2
 15917                           ;term.c: 669: }
 15918                           ;term.c: 670: }
 15919  000576  0012               	return	
 15920  000578                     l2444:
 15921                           
 15922                           ;term.c: 671: else
 15923                           ;term.c: 672: {
 15924                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15925                           
 15926                           ; BSR set to: 2
 15927  000578  0EDC               	movlw	low Terminal@SwTimer
 15928  00057A  0100               	movlb	0	; () banked
 15929  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15930  00057E  0E04               	movlw	high Terminal@SwTimer
 15931  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15932  000582  0EB8               	movlw	184
 15933  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15934  000586  0E0B               	movlw	11
 15935  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15936  00058A  0E00               	movlw	0
 15937  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15938  00058E  0E00               	movlw	0
 15939  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15940  000592  ECC9  F029         	call	_OsTmr_Wait	;wreg free
 15941  000596  06E8               	decf	wreg,f,c
 15942  000598  A4D8               	btfss	status,2,c
 15943  00059A  0012               	return	
 15944                           
 15945                           ;term.c: 675: {
 15946                           ;term.c: 677: if((cdc_trf_state == 0))
 15947  00059C  0100               	movlb	0	; () banked
 15948  00059E  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15949  0005A0  A4D8               	btfss	status,2,c
 15950  0005A2  0012               	return	
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;term.c: 678: {
 15954                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15955  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15956  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15957  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15958  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15959  0005AC  0E5F               	movlw	low STR_21
 15960  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15961  0005B0  0EFE               	movlw	high STR_21
 15962  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15963  0005B4  ECA0  F032         	call	_strcpy	;wreg free
 15964                           
 15965                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15966  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15967  0005BA  0100               	movlb	0	; () banked
 15968  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15969  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15970  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15971  0005C2  0E29               	movlw	41
 15972  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15973  0005C6  EC29  F034         	call	_putUSBUSART	;wreg free
 15974                           
 15975                           ;term.c: 682: TermState = Term_GetData;
 15976  0005CA  0E00               	movlw	0
 15977  0005CC  0102               	movlb	2	; () banked
 15978  0005CE  6FEE               	movwf	Terminal@TermState& (0+255),b
 15979                           
 15980                           ; BSR set to: 2
 15981                           ;term.c: 693: }
 15982                           
 15983                           ; BSR set to: 2
 15984                           ;term.c: 692: break;
 15985                           
 15986                           ;term.c: 691: default:
 15987                           
 15988                           ; BSR set to: 2
 15989                           ;term.c: 689: break;
 15990                           
 15991                           ;term.c: 688: case Term_ReadSlvUartData:
 15992                           
 15993                           ; BSR set to: 2
 15994                           ;term.c: 683: }
 15995                           ;term.c: 684: }
 15996                           ;term.c: 685: }
 15997                           ;term.c: 686: break;
 15998                           
 15999                           ; BSR set to: 2
 16000                           
 16001                           ; BSR set to: 2
 16002  0005D0  0012               	return	
 16003  0005D2                     l2405:
 16004                           
 16005                           ; BSR set to: 2
 16006  0005D2  0102               	movlb	2	; () banked
 16007  0005D4  51EE               	movf	Terminal@TermState& (0+255),w,b
 16008                           
 16009                           ; Switch size 1, requested type "space"
 16010                           ; Number of cases is 4, Range of values is 0 to 3
 16011                           ; switch strategies available:
 16012                           ; Name         Instructions Cycles
 16013                           ; simple_byte           13     7 (average)
 16014                           ;	Chosen strategy is simple_byte
 16015  0005D6  0A00               	xorlw	0	; case 0
 16016  0005D8  B4D8               	btfsc	status,2,c
 16017  0005DA  D583               	goto	l2406
 16018  0005DC  0A01               	xorlw	1	; case 1
 16019  0005DE  B4D8               	btfsc	status,2,c
 16020  0005E0  D71E               	goto	l2441
 16021  0005E2  0A03               	xorlw	3	; case 2
 16022  0005E4  B4D8               	btfsc	status,2,c
 16023  0005E6  D73B               	goto	l2443
 16024  0005E8  0A01               	xorlw	1	; case 3
 16025  0005EA  0012               	return	
 16026  0005EC                     __end_of_Terminal:
 16027                           	opt stack 0
 16028                           tosu	equ	0xFFF
 16029                           tosh	equ	0xFFE
 16030                           tosl	equ	0xFFD
 16031                           pclath	equ	0xFFA
 16032                           tblptru	equ	0xFF8
 16033                           tblptrh	equ	0xFF7
 16034                           tblptrl	equ	0xFF6
 16035                           tablat	equ	0xFF5
 16036                           prodh	equ	0xFF4
 16037                           prodl	equ	0xFF3
 16038                           intcon	equ	0xFF2
 16039                           intcon2	equ	0xFF1
 16040                           intcon3	equ	0xFF0
 16041                           indf0	equ	0xFEF
 16042                           postinc0	equ	0xFEE
 16043                           plusw0	equ	0xFEB
 16044                           fsr0h	equ	0xFEA
 16045                           fsr0l	equ	0xFE9
 16046                           wreg	equ	0xFE8
 16047                           indf1	equ	0xFE7
 16048                           postinc1	equ	0xFE6
 16049                           postdec1	equ	0xFE5
 16050                           fsr1h	equ	0xFE2
 16051                           fsr1l	equ	0xFE1
 16052                           indf2	equ	0xFDF
 16053                           postinc2	equ	0xFDE
 16054                           postdec2	equ	0xFDD
 16055                           plusw2	equ	0xFDB
 16056                           fsr2h	equ	0xFDA
 16057                           fsr2l	equ	0xFD9
 16058                           status	equ	0xFD8
 16059                           
 16060 ;; *************** function _xtoi *****************
 16061 ;; Defined at:
 16062 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16063 ;; Parameters:    Size  Location     Type
 16064 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16065 ;;		 -> Terminal@Addr(4), 
 16066 ;; Auto vars:     Size  Location     Type
 16067 ;;  val             2   40[BANK0 ] unsigned int 
 16068 ;;  c               1   42[BANK0 ] unsigned char 
 16069 ;;  sign            1   39[BANK0 ] unsigned char 
 16070 ;; Return value:  Size  Location     Type
 16071 ;;                  2   35[BANK0 ] unsigned int 
 16072 ;; Registers used:
 16073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16074 ;; Tracked objects:
 16075 ;;		On entry : 0/0
 16076 ;;		On exit  : 0/0
 16077 ;;		Unchanged: 0/0
 16078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16080 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16082 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16083 ;;Total ram usage:        8 bytes
 16084 ;; Hardware stack levels used:    1
 16085 ;; Hardware stack levels required when called:   13
 16086 ;; This function calls:
 16087 ;;		_isdigit
 16088 ;;		_isspace
 16089 ;;		_isupper
 16090 ;;		_isxdigit
 16091 ;;		_tolower
 16092 ;; This function is called by:
 16093 ;;		_Terminal
 16094 ;; This function uses a non-reentrant model
 16095 ;;
 16096                           
 16097                           	psect	text61
 16098  003416                     __ptext61:
 16099                           	opt stack 0
 16100  003416                     _xtoi:
 16101                           	opt stack 12
 16102                           
 16103                           ;incstack = 0
 16104  003416  0E00               	movlw	0
 16105  003418  0100               	movlb	0	; () banked
 16106  00341A  6F87               	movwf	xtoi@sign& (0+255),b
 16107  00341C  0E00               	movlw	0
 16108  00341E  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16109  003420  0E00               	movlw	0
 16110  003422  6F88               	movwf	xtoi@val& (0+255),b
 16111  003424  D003               	goto	l3597
 16112  003426                     
 16113                           ; BSR set to: 0
 16114  003426  0100               	movlb	0	; () banked
 16115  003428  4B83               	infsnz	xtoi@s& (0+255),f,b
 16116  00342A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16117  00342C                     l3597:
 16118                           
 16119                           ; BSR set to: 0
 16120                           
 16121                           ; BSR set to: 0
 16122  00342C  C083  FFD9         	movff	xtoi@s,fsr2l
 16123  003430  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16124  003434  50DF               	movf	indf2,w,c
 16125  003436  EC72  F033         	call	_isspace
 16126  00343A  B0D8               	btfsc	status,0,c
 16127  00343C  D7F4               	goto	l3598
 16128  00343E  C083  FFD9         	movff	xtoi@s,fsr2l
 16129  003442  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16130  003446  0E2D               	movlw	45
 16131  003448  18DE               	xorwf	postinc2,w,c
 16132  00344A  A4D8               	btfss	status,2,c
 16133  00344C  D003               	goto	l3600
 16134  00344E  0100               	movlb	0	; () banked
 16135  003450  2B87               	incf	xtoi@sign& (0+255),f,b
 16136  003452  D009               	goto	L15
 16137  003454                     l3600:
 16138                           
 16139                           ; BSR set to: 0
 16140  003454  C083  FFD9         	movff	xtoi@s,fsr2l
 16141  003458  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16142  00345C  0E2B               	movlw	43
 16143  00345E  18DE               	xorwf	postinc2,w,c
 16144  003460  A4D8               	btfss	status,2,c
 16145  003462  D028               	goto	l3603
 16146  003464  0100               	movlb	0	; () banked
 16147  003466                     L15:
 16148  003466  4B83               	infsnz	xtoi@s& (0+255),f,b
 16149  003468  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16150                           
 16151                           ; BSR set to: 0
 16152                           
 16153                           ; BSR set to: 0
 16154  00346A  D024               	goto	l3603
 16155  00346C                     
 16156                           ; BSR set to: 0
 16157  00346C  0100               	movlb	0	; () banked
 16158  00346E  518A               	movf	xtoi@c& (0+255),w,b
 16159  003470  EC18  F034         	call	_isupper
 16160  003474  A0D8               	btfss	status,0,c
 16161  003476  D006               	goto	l3605
 16162  003478  0100               	movlb	0	; () banked
 16163  00347A  518A               	movf	xtoi@c& (0+255),w,b
 16164  00347C  EC09  F035         	call	_tolower
 16165  003480  0100               	movlb	0	; () banked
 16166  003482  6F8A               	movwf	xtoi@c& (0+255),b
 16167  003484                     l3605:
 16168  003484  0100               	movlb	0	; () banked
 16169  003486  518A               	movf	xtoi@c& (0+255),w,b
 16170  003488  EC3A  F034         	call	_isdigit
 16171  00348C  A0D8               	btfss	status,0,c
 16172  00348E  D002               	goto	l3606
 16173  003490  0E30               	movlw	48
 16174  003492  D001               	goto	L14
 16175  003494                     l3606:
 16176                           
 16177                           ; BSR set to: 0
 16178  003494  0E57               	movlw	87
 16179  003496                     L14:
 16180  003496  0100               	movlb	0	; () banked
 16181  003498  5F8A               	subwf	xtoi@c& (0+255),f,b
 16182                           
 16183                           ; BSR set to: 0
 16184  00349A  3B88               	swapf	xtoi@val& (0+255),f,b
 16185  00349C  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16186  00349E  0EF0               	movlw	240
 16187  0034A0  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16188  0034A2  5188               	movf	xtoi@val& (0+255),w,b
 16189  0034A4  0B0F               	andlw	15
 16190  0034A6  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16191  0034A8  0EF0               	movlw	240
 16192  0034AA  1788               	andwf	xtoi@val& (0+255),f,b
 16193  0034AC  518A               	movf	xtoi@c& (0+255),w,b
 16194  0034AE  2788               	addwf	xtoi@val& (0+255),f,b
 16195  0034B0  0E00               	movlw	0
 16196  0034B2  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16197  0034B4                     l3603:
 16198                           
 16199                           ; BSR set to: 0
 16200  0034B4  C083  FFD9         	movff	xtoi@s,fsr2l
 16201  0034B8  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16202  0034BC  0100               	movlb	0	; () banked
 16203  0034BE  4B83               	infsnz	xtoi@s& (0+255),f,b
 16204  0034C0  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16205  0034C2  50DF               	movf	indf2,w,c
 16206  0034C4  6F8A               	movwf	xtoi@c& (0+255),b
 16207  0034C6  518A               	movf	xtoi@c& (0+255),w,b
 16208  0034C8  ECA7  F031         	call	_isxdigit
 16209  0034CC  B0D8               	btfsc	status,0,c
 16210  0034CE  D7CE               	goto	l3604
 16211  0034D0  0100               	movlb	0	; () banked
 16212  0034D2  5187               	movf	xtoi@sign& (0+255),w,b
 16213  0034D4  B4D8               	btfsc	status,2,c
 16214  0034D6  D00D               	goto	l3609
 16215                           
 16216                           ; BSR set to: 0
 16217  0034D8  C088  F085         	movff	xtoi@val,??_xtoi
 16218  0034DC  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16219  0034E0  1F85               	comf	??_xtoi& (0+255),f,b
 16220  0034E2  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16221  0034E4  4B85               	infsnz	??_xtoi& (0+255),f,b
 16222  0034E6  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16223  0034E8  C085  F083         	movff	??_xtoi,?_xtoi
 16224  0034EC  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16225  0034F0  0012               	return	
 16226  0034F2                     l3609:
 16227                           
 16228                           ; BSR set to: 0
 16229  0034F2  C088  F083         	movff	xtoi@val,?_xtoi
 16230  0034F6  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16231                           
 16232                           ; BSR set to: 0
 16233  0034FA  0012               	return		;funcret
 16234  0034FC                     __end_of_xtoi:
 16235                           	opt stack 0
 16236                           tosu	equ	0xFFF
 16237                           tosh	equ	0xFFE
 16238                           tosl	equ	0xFFD
 16239                           pclath	equ	0xFFA
 16240                           tblptru	equ	0xFF8
 16241                           tblptrh	equ	0xFF7
 16242                           tblptrl	equ	0xFF6
 16243                           tablat	equ	0xFF5
 16244                           prodh	equ	0xFF4
 16245                           prodl	equ	0xFF3
 16246                           intcon	equ	0xFF2
 16247                           intcon2	equ	0xFF1
 16248                           intcon3	equ	0xFF0
 16249                           indf0	equ	0xFEF
 16250                           postinc0	equ	0xFEE
 16251                           plusw0	equ	0xFEB
 16252                           fsr0h	equ	0xFEA
 16253                           fsr0l	equ	0xFE9
 16254                           wreg	equ	0xFE8
 16255                           indf1	equ	0xFE7
 16256                           postinc1	equ	0xFE6
 16257                           postdec1	equ	0xFE5
 16258                           fsr1h	equ	0xFE2
 16259                           fsr1l	equ	0xFE1
 16260                           indf2	equ	0xFDF
 16261                           postinc2	equ	0xFDE
 16262                           postdec2	equ	0xFDD
 16263                           plusw2	equ	0xFDB
 16264                           fsr2h	equ	0xFDA
 16265                           fsr2l	equ	0xFD9
 16266                           status	equ	0xFD8
 16267                           
 16268 ;; *************** function _tolower *****************
 16269 ;; Defined at:
 16270 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16271 ;; Parameters:    Size  Location     Type
 16272 ;;  c               1    wreg     unsigned char 
 16273 ;; Auto vars:     Size  Location     Type
 16274 ;;  c               1   29[BANK0 ] unsigned char 
 16275 ;; Return value:  Size  Location     Type
 16276 ;;                  1    wreg      unsigned char 
 16277 ;; Registers used:
 16278 ;;		wreg, status,2, status,0
 16279 ;; Tracked objects:
 16280 ;;		On entry : 0/0
 16281 ;;		On exit  : 0/0
 16282 ;;		Unchanged: 0/0
 16283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16287 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16288 ;;Total ram usage:        1 bytes
 16289 ;; Hardware stack levels used:    1
 16290 ;; Hardware stack levels required when called:   11
 16291 ;; This function calls:
 16292 ;;		Nothing
 16293 ;; This function is called by:
 16294 ;;		_xtoi
 16295 ;; This function uses a non-reentrant model
 16296 ;;
 16297                           
 16298                           	psect	text62
 16299  006A12                     __ptext62:
 16300                           	opt stack 0
 16301  006A12                     _tolower:
 16302                           	opt stack 13
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;incstack = 0
 16306                           ;tolower@c stored from wreg
 16307  006A12  0100               	movlb	0	; () banked
 16308  006A14  6F7D               	movwf	tolower@c& (0+255),b
 16309  006A16  0E5B               	movlw	91
 16310  006A18  0100               	movlb	0	; () banked
 16311  006A1A  617D               	cpfslt	tolower@c& (0+255),b
 16312  006A1C  D004               	goto	l3656
 16313                           
 16314                           ; BSR set to: 0
 16315  006A1E  0E40               	movlw	64
 16316  006A20  657D               	cpfsgt	tolower@c& (0+255),b
 16317  006A22  D001               	goto	l3656
 16318                           
 16319                           ; BSR set to: 0
 16320  006A24  8B7D               	bsf	tolower@c& (0+255),5,b
 16321  006A26                     l3656:
 16322                           
 16323                           ; BSR set to: 0
 16324                           
 16325                           ; BSR set to: 0
 16326  006A26  517D               	movf	tolower@c& (0+255),w,b
 16327  006A28  0012               	return	
 16328  006A2A                     __end_of_tolower:
 16329                           	opt stack 0
 16330                           tosu	equ	0xFFF
 16331                           tosh	equ	0xFFE
 16332                           tosl	equ	0xFFD
 16333                           pclath	equ	0xFFA
 16334                           tblptru	equ	0xFF8
 16335                           tblptrh	equ	0xFF7
 16336                           tblptrl	equ	0xFF6
 16337                           tablat	equ	0xFF5
 16338                           prodh	equ	0xFF4
 16339                           prodl	equ	0xFF3
 16340                           intcon	equ	0xFF2
 16341                           intcon2	equ	0xFF1
 16342                           intcon3	equ	0xFF0
 16343                           indf0	equ	0xFEF
 16344                           postinc0	equ	0xFEE
 16345                           plusw0	equ	0xFEB
 16346                           fsr0h	equ	0xFEA
 16347                           fsr0l	equ	0xFE9
 16348                           wreg	equ	0xFE8
 16349                           indf1	equ	0xFE7
 16350                           postinc1	equ	0xFE6
 16351                           postdec1	equ	0xFE5
 16352                           fsr1h	equ	0xFE2
 16353                           fsr1l	equ	0xFE1
 16354                           indf2	equ	0xFDF
 16355                           postinc2	equ	0xFDE
 16356                           postdec2	equ	0xFDD
 16357                           plusw2	equ	0xFDB
 16358                           fsr2h	equ	0xFDA
 16359                           fsr2l	equ	0xFD9
 16360                           status	equ	0xFD8
 16361                           
 16362 ;; *************** function _isxdigit *****************
 16363 ;; Defined at:
 16364 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16365 ;; Parameters:    Size  Location     Type
 16366 ;;  c               1    wreg     unsigned char 
 16367 ;; Auto vars:     Size  Location     Type
 16368 ;;  c               1   34[BANK0 ] unsigned char 
 16369 ;; Return value:  Size  Location     Type
 16370 ;;		None               void
 16371 ;; Registers used:
 16372 ;;		wreg, status,2, status,0, cstack
 16373 ;; Tracked objects:
 16374 ;;		On entry : 0/0
 16375 ;;		On exit  : 0/0
 16376 ;;		Unchanged: 0/0
 16377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16379 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16381 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16382 ;;Total ram usage:        3 bytes
 16383 ;; Hardware stack levels used:    1
 16384 ;; Hardware stack levels required when called:   12
 16385 ;; This function calls:
 16386 ;;		_isdigit
 16387 ;; This function is called by:
 16388 ;;		_xtoi
 16389 ;; This function uses a non-reentrant model
 16390 ;;
 16391                           
 16392                           	psect	text63
 16393  00634E                     __ptext63:
 16394                           	opt stack 0
 16395  00634E                     _isxdigit:
 16396                           	opt stack 12
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;incstack = 0
 16400                           ;isxdigit@c stored from wreg
 16401  00634E  0100               	movlb	0	; () banked
 16402  006350  6F82               	movwf	isxdigit@c& (0+255),b
 16403  006352  0E01               	movlw	1
 16404  006354  0100               	movlb	0	; () banked
 16405  006356  6F81               	movwf	_isxdigit$6717& (0+255),b
 16406                           
 16407                           ; BSR set to: 0
 16408  006358  0E67               	movlw	103
 16409  00635A  6182               	cpfslt	isxdigit@c& (0+255),b
 16410  00635C  D003               	goto	u12670
 16411                           
 16412                           ; BSR set to: 0
 16413  00635E  0E61               	movlw	97
 16414  006360  6182               	cpfslt	isxdigit@c& (0+255),b
 16415  006362  D00E               	goto	l3652
 16416  006364                     u12670:
 16417                           
 16418                           ; BSR set to: 0
 16419                           
 16420                           ; BSR set to: 0
 16421  006364  0E47               	movlw	71
 16422  006366  6182               	cpfslt	isxdigit@c& (0+255),b
 16423  006368  D003               	goto	u12690
 16424                           
 16425                           ; BSR set to: 0
 16426  00636A  0E41               	movlw	65
 16427  00636C  6182               	cpfslt	isxdigit@c& (0+255),b
 16428  00636E  D008               	goto	l3652
 16429  006370                     u12690:
 16430                           
 16431                           ; BSR set to: 0
 16432                           
 16433                           ; BSR set to: 0
 16434  006370  5182               	movf	isxdigit@c& (0+255),w,b
 16435  006372  EC3A  F034         	call	_isdigit
 16436  006376  B0D8               	btfsc	status,0,c
 16437  006378  D003               	goto	l3652
 16438  00637A  0E00               	movlw	0
 16439  00637C  0100               	movlb	0	; () banked
 16440  00637E  6F81               	movwf	_isxdigit$6717& (0+255),b
 16441  006380                     l3652:
 16442                           
 16443                           ; BSR set to: 0
 16444  006380  C081  F080         	movff	_isxdigit$6717,??_isxdigit
 16445  006384  0100               	movlb	0	; () banked
 16446  006386  3180               	rrcf	??_isxdigit& (0+255),w,b
 16447  006388  0012               	return	
 16448  00638A                     __end_of_isxdigit:
 16449                           	opt stack 0
 16450                           tosu	equ	0xFFF
 16451                           tosh	equ	0xFFE
 16452                           tosl	equ	0xFFD
 16453                           pclath	equ	0xFFA
 16454                           tblptru	equ	0xFF8
 16455                           tblptrh	equ	0xFF7
 16456                           tblptrl	equ	0xFF6
 16457                           tablat	equ	0xFF5
 16458                           prodh	equ	0xFF4
 16459                           prodl	equ	0xFF3
 16460                           intcon	equ	0xFF2
 16461                           intcon2	equ	0xFF1
 16462                           intcon3	equ	0xFF0
 16463                           indf0	equ	0xFEF
 16464                           postinc0	equ	0xFEE
 16465                           plusw0	equ	0xFEB
 16466                           fsr0h	equ	0xFEA
 16467                           fsr0l	equ	0xFE9
 16468                           wreg	equ	0xFE8
 16469                           indf1	equ	0xFE7
 16470                           postinc1	equ	0xFE6
 16471                           postdec1	equ	0xFE5
 16472                           fsr1h	equ	0xFE2
 16473                           fsr1l	equ	0xFE1
 16474                           indf2	equ	0xFDF
 16475                           postinc2	equ	0xFDE
 16476                           postdec2	equ	0xFDD
 16477                           plusw2	equ	0xFDB
 16478                           fsr2h	equ	0xFDA
 16479                           fsr2l	equ	0xFD9
 16480                           status	equ	0xFD8
 16481                           
 16482 ;; *************** function _strtol *****************
 16483 ;; Defined at:
 16484 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16485 ;; Parameters:    Size  Location     Type
 16486 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16487 ;;		 -> Terminal@Payload(80), 
 16488 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16489 ;;		 -> NULL(0), 
 16490 ;;  base            2   45[BANK0 ] int 
 16491 ;; Auto vars:     Size  Location     Type
 16492 ;;  a               4   52[BANK0 ] long 
 16493 ;;  c               1   56[BANK0 ] unsigned char 
 16494 ;;  sign            1   51[BANK0 ] unsigned char 
 16495 ;; Return value:  Size  Location     Type
 16496 ;;                  4   41[BANK0 ] long 
 16497 ;; Registers used:
 16498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16499 ;; Tracked objects:
 16500 ;;		On entry : 0/0
 16501 ;;		On exit  : 0/0
 16502 ;;		Unchanged: 0/0
 16503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16504 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16505 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;Total ram usage:       16 bytes
 16509 ;; Hardware stack levels used:    1
 16510 ;; Hardware stack levels required when called:   13
 16511 ;; This function calls:
 16512 ;;		___lmul
 16513 ;;		_isalpha
 16514 ;;		_isdigit
 16515 ;;		_isspace
 16516 ;;		_toupper
 16517 ;; This function is called by:
 16518 ;;		_Terminal
 16519 ;; This function uses a non-reentrant model
 16520 ;;
 16521                           
 16522                           	psect	text64
 16523  00181C                     __ptext64:
 16524                           	opt stack 0
 16525  00181C                     _strtol:
 16526                           	opt stack 12
 16527                           
 16528                           ; BSR set to: 0
 16529                           ;incstack = 0
 16530  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16531  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16532  001824  50DF               	movf	indf2,w,c
 16533  001826  0100               	movlb	0	; () banked
 16534  001828  6F98               	movwf	strtol@c& (0+255),b
 16535                           
 16536                           ; BSR set to: 0
 16537  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16538  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16539                           
 16540                           ; BSR set to: 0
 16541  00182E  5198               	movf	strtol@c& (0+255),w,b
 16542  001830  EC72  F033         	call	_isspace
 16543  001834  B0D8               	btfsc	status,0,c
 16544  001836  D7F2               	goto	_strtol
 16545  001838  0E00               	movlw	0
 16546  00183A  0100               	movlb	0	; () banked
 16547  00183C  6F94               	movwf	strtol@a& (0+255),b
 16548  00183E  0E00               	movlw	0
 16549  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16550  001842  0E00               	movlw	0
 16551  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16552  001846  0E00               	movlw	0
 16553  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16554  00184A  0E00               	movlw	0
 16555  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16556                           
 16557                           ; BSR set to: 0
 16558  00184E  0E2D               	movlw	45
 16559  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16560  001852  A4D8               	btfss	status,2,c
 16561  001854  D003               	goto	l3559
 16562                           
 16563                           ; BSR set to: 0
 16564  001856  0E01               	movlw	1
 16565  001858  6F93               	movwf	strtol@sign& (0+255),b
 16566  00185A  D004               	goto	u13180
 16567  00185C                     l3559:
 16568                           
 16569                           ; BSR set to: 0
 16570                           
 16571                           ; BSR set to: 0
 16572  00185C  0E2B               	movlw	43
 16573  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16574  001860  A4D8               	btfss	status,2,c
 16575  001862  D008               	goto	l3561
 16576  001864                     u13180:
 16577                           
 16578                           ; BSR set to: 0
 16579  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16580  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16581  00186C  50DF               	movf	indf2,w,c
 16582  00186E  6F98               	movwf	strtol@c& (0+255),b
 16583                           
 16584                           ; BSR set to: 0
 16585  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16586  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16587  001874                     l3561:
 16588                           
 16589                           ; BSR set to: 0
 16590                           
 16591                           ; BSR set to: 0
 16592                           
 16593                           ; BSR set to: 0
 16594  001874  0E30               	movlw	48
 16595  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16596  001878  A4D8               	btfss	status,2,c
 16597  00187A  D02E               	goto	l3569
 16598                           
 16599                           ; BSR set to: 0
 16600  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16601  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16602  001884  50DF               	movf	indf2,w,c
 16603  001886  6F98               	movwf	strtol@c& (0+255),b
 16604                           
 16605                           ; BSR set to: 0
 16606  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16607  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16608                           
 16609                           ; BSR set to: 0
 16610  00188C  518D               	movf	strtol@base& (0+255),w,b
 16611  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16612  001890  B4D8               	btfsc	status,2,c
 16613  001892  D005               	goto	u13210
 16614                           
 16615                           ; BSR set to: 0
 16616  001894  0E10               	movlw	16
 16617  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16618  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16619  00189A  A4D8               	btfss	status,2,c
 16620  00189C  D015               	goto	l3563
 16621  00189E                     u13210:
 16622                           
 16623                           ; BSR set to: 0
 16624                           
 16625                           ; BSR set to: 0
 16626  00189E  0E78               	movlw	120
 16627  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16628  0018A2  B4D8               	btfsc	status,2,c
 16629  0018A4  D004               	goto	u13230
 16630                           
 16631                           ; BSR set to: 0
 16632  0018A6  0E58               	movlw	88
 16633  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16634  0018AA  A4D8               	btfss	status,2,c
 16635  0018AC  D00D               	goto	l3563
 16636  0018AE                     u13230:
 16637                           
 16638                           ; BSR set to: 0
 16639                           
 16640                           ; BSR set to: 0
 16641  0018AE  0E00               	movlw	0
 16642  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16643  0018B2  0E10               	movlw	16
 16644  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16645                           
 16646                           ; BSR set to: 0
 16647  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16648  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16649  0018BE  50DF               	movf	indf2,w,c
 16650  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16651                           
 16652                           ; BSR set to: 0
 16653  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16654  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16655  0018C6  D008               	goto	l3569
 16656  0018C8                     l3563:
 16657                           
 16658                           ; BSR set to: 0
 16659                           
 16660                           ; BSR set to: 0
 16661  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16662  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16663  0018CC  A4D8               	btfss	status,2,c
 16664  0018CE  D004               	goto	l3569
 16665                           
 16666                           ; BSR set to: 0
 16667  0018D0  0E00               	movlw	0
 16668  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16669  0018D4  0E08               	movlw	8
 16670  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16671  0018D8                     l3569:
 16672                           
 16673                           ; BSR set to: 0
 16674                           
 16675                           ; BSR set to: 0
 16676                           
 16677                           ; BSR set to: 0
 16678                           
 16679                           ; BSR set to: 0
 16680  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16681  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16682  0018DC  A4D8               	btfss	status,2,c
 16683  0018DE  D004               	goto	l3570
 16684                           
 16685                           ; BSR set to: 0
 16686  0018E0  0E00               	movlw	0
 16687  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16688  0018E4  0E0A               	movlw	10
 16689  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16690  0018E8                     l3570:
 16691                           
 16692                           ; BSR set to: 0
 16693                           
 16694                           ; BSR set to: 0
 16695                           
 16696                           ; BSR set to: 0
 16697  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16698  0018EA  ECE9  F032         	call	_isalpha
 16699  0018EE  A0D8               	btfss	status,0,c
 16700  0018F0  D008               	goto	l3572
 16701  0018F2  0100               	movlb	0	; () banked
 16702  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16703  0018F6  EC15  F035         	call	_toupper
 16704  0018FA  0FC9               	addlw	201
 16705  0018FC  0100               	movlb	0	; () banked
 16706  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16707  001900  D009               	goto	l3575
 16708  001902                     l3572:
 16709                           
 16710                           ; BSR set to: 0
 16711  001902  0100               	movlb	0	; () banked
 16712  001904  5198               	movf	strtol@c& (0+255),w,b
 16713  001906  EC3A  F034         	call	_isdigit
 16714  00190A  A0D8               	btfss	status,0,c
 16715  00190C  D039               	goto	l3576
 16716  00190E  0E30               	movlw	48
 16717  001910  0100               	movlb	0	; () banked
 16718  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16719  001914                     l3575:
 16720                           
 16721                           ; BSR set to: 0
 16722                           
 16723                           ; BSR set to: 0
 16724                           
 16725                           ; BSR set to: 0
 16726  001914  5198               	movf	strtol@c& (0+255),w,b
 16727  001916  6F8F               	movwf	??_strtol& (0+255),b
 16728  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16729  00191A  518D               	movf	strtol@base& (0+255),w,b
 16730  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16731  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16732  001920  0A80               	xorlw	128
 16733  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16734  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16735  001926  0A80               	xorlw	128
 16736  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16737  00192A  B0D8               	btfsc	status,0,c
 16738  00192C  D029               	goto	l3576
 16739                           
 16740                           ; BSR set to: 0
 16741                           
 16742                           ; BSR set to: 0
 16743                           
 16744                           ; BSR set to: 0
 16745  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16746  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16747  001936  0E00               	movlw	0
 16748  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16749  00193A  0EFF               	movlw	-1
 16750  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16751  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16752  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16753  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16754  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16755  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16756  001950  EC0D  F02D         	call	___lmul	;wreg free
 16757  001954  0100               	movlb	0	; () banked
 16758  001956  5198               	movf	strtol@c& (0+255),w,b
 16759  001958  257D               	addwf	?___lmul& (0+255),w,b
 16760  00195A  6F94               	movwf	strtol@a& (0+255),b
 16761  00195C  0E00               	movlw	0
 16762  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16763  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16764  001962  0E00               	movlw	0
 16765  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16766  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16767  001968  0E00               	movlw	0
 16768  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16769  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16770                           
 16771                           ; BSR set to: 0
 16772  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16773  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16774  001976  50DF               	movf	indf2,w,c
 16775  001978  6F98               	movwf	strtol@c& (0+255),b
 16776                           
 16777                           ; BSR set to: 0
 16778  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16779  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16780  00197E  D7B4               	goto	l3570
 16781  001980                     l3576:
 16782                           
 16783                           ; BSR set to: 0
 16784  001980  0100               	movlb	0	; () banked
 16785  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16786  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16787  001986  B4D8               	btfsc	status,2,c
 16788  001988  D00E               	goto	l3578
 16789                           
 16790                           ; BSR set to: 0
 16791  00198A  0EFF               	movlw	255
 16792  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16793  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16794  001990  0EFF               	movlw	255
 16795  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16796  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16797  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16798  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16799  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16800  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16801  0019A6                     l3578:
 16802                           
 16803                           ; BSR set to: 0
 16804                           
 16805                           ; BSR set to: 0
 16806  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16807  0019A8  B4D8               	btfsc	status,2,c
 16808  0019AA  D01A               	goto	l3579
 16809                           
 16810                           ; BSR set to: 0
 16811  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16812  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16813  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16814  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16815  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16816  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16817  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16818  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16819  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16820  0019C6  0E00               	movlw	0
 16821  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16822  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16823  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16824  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16825  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16826  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16827  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16828                           
 16829                           ; BSR set to: 0
 16830  0019DE  0012               	return	
 16831  0019E0                     l3579:
 16832                           
 16833                           ; BSR set to: 0
 16834  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16835  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16836  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16837  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16838                           
 16839                           ; BSR set to: 0
 16840  0019F0  0012               	return		;funcret
 16841  0019F2                     __end_of_strtol:
 16842                           	opt stack 0
 16843                           tosu	equ	0xFFF
 16844                           tosh	equ	0xFFE
 16845                           tosl	equ	0xFFD
 16846                           pclath	equ	0xFFA
 16847                           tblptru	equ	0xFF8
 16848                           tblptrh	equ	0xFF7
 16849                           tblptrl	equ	0xFF6
 16850                           tablat	equ	0xFF5
 16851                           prodh	equ	0xFF4
 16852                           prodl	equ	0xFF3
 16853                           intcon	equ	0xFF2
 16854                           intcon2	equ	0xFF1
 16855                           intcon3	equ	0xFF0
 16856                           indf0	equ	0xFEF
 16857                           postinc0	equ	0xFEE
 16858                           plusw0	equ	0xFEB
 16859                           fsr0h	equ	0xFEA
 16860                           fsr0l	equ	0xFE9
 16861                           wreg	equ	0xFE8
 16862                           indf1	equ	0xFE7
 16863                           postinc1	equ	0xFE6
 16864                           postdec1	equ	0xFE5
 16865                           fsr1h	equ	0xFE2
 16866                           fsr1l	equ	0xFE1
 16867                           indf2	equ	0xFDF
 16868                           postinc2	equ	0xFDE
 16869                           postdec2	equ	0xFDD
 16870                           plusw2	equ	0xFDB
 16871                           fsr2h	equ	0xFDA
 16872                           fsr2l	equ	0xFD9
 16873                           status	equ	0xFD8
 16874                           
 16875 ;; *************** function _toupper *****************
 16876 ;; Defined at:
 16877 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16878 ;; Parameters:    Size  Location     Type
 16879 ;;  c               1    wreg     unsigned char 
 16880 ;; Auto vars:     Size  Location     Type
 16881 ;;  c               1   29[BANK0 ] unsigned char 
 16882 ;; Return value:  Size  Location     Type
 16883 ;;                  1    wreg      unsigned char 
 16884 ;; Registers used:
 16885 ;;		wreg, status,2, status,0
 16886 ;; Tracked objects:
 16887 ;;		On entry : 0/0
 16888 ;;		On exit  : 0/0
 16889 ;;		Unchanged: 0/0
 16890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16895 ;;Total ram usage:        1 bytes
 16896 ;; Hardware stack levels used:    1
 16897 ;; Hardware stack levels required when called:   11
 16898 ;; This function calls:
 16899 ;;		Nothing
 16900 ;; This function is called by:
 16901 ;;		_strtol
 16902 ;; This function uses a non-reentrant model
 16903 ;;
 16904                           
 16905                           	psect	text65
 16906  006A2A                     __ptext65:
 16907                           	opt stack 0
 16908  006A2A                     _toupper:
 16909                           	opt stack 13
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;incstack = 0
 16913                           ;toupper@c stored from wreg
 16914  006A2A  0100               	movlb	0	; () banked
 16915  006A2C  6F7D               	movwf	toupper@c& (0+255),b
 16916  006A2E  0E7B               	movlw	123
 16917  006A30  0100               	movlb	0	; () banked
 16918  006A32  617D               	cpfslt	toupper@c& (0+255),b
 16919  006A34  D004               	goto	l3583
 16920                           
 16921                           ; BSR set to: 0
 16922  006A36  0E60               	movlw	96
 16923  006A38  657D               	cpfsgt	toupper@c& (0+255),b
 16924  006A3A  D001               	goto	l3583
 16925                           
 16926                           ; BSR set to: 0
 16927  006A3C  9B7D               	bcf	toupper@c& (0+255),5,b
 16928  006A3E                     l3583:
 16929                           
 16930                           ; BSR set to: 0
 16931                           
 16932                           ; BSR set to: 0
 16933  006A3E  517D               	movf	toupper@c& (0+255),w,b
 16934  006A40  0012               	return	
 16935  006A42                     __end_of_toupper:
 16936                           	opt stack 0
 16937                           tosu	equ	0xFFF
 16938                           tosh	equ	0xFFE
 16939                           tosl	equ	0xFFD
 16940                           pclath	equ	0xFFA
 16941                           tblptru	equ	0xFF8
 16942                           tblptrh	equ	0xFF7
 16943                           tblptrl	equ	0xFF6
 16944                           tablat	equ	0xFF5
 16945                           prodh	equ	0xFF4
 16946                           prodl	equ	0xFF3
 16947                           intcon	equ	0xFF2
 16948                           intcon2	equ	0xFF1
 16949                           intcon3	equ	0xFF0
 16950                           indf0	equ	0xFEF
 16951                           postinc0	equ	0xFEE
 16952                           plusw0	equ	0xFEB
 16953                           fsr0h	equ	0xFEA
 16954                           fsr0l	equ	0xFE9
 16955                           wreg	equ	0xFE8
 16956                           indf1	equ	0xFE7
 16957                           postinc1	equ	0xFE6
 16958                           postdec1	equ	0xFE5
 16959                           fsr1h	equ	0xFE2
 16960                           fsr1l	equ	0xFE1
 16961                           indf2	equ	0xFDF
 16962                           postinc2	equ	0xFDE
 16963                           postdec2	equ	0xFDD
 16964                           plusw2	equ	0xFDB
 16965                           fsr2h	equ	0xFDA
 16966                           fsr2l	equ	0xFD9
 16967                           status	equ	0xFD8
 16968                           
 16969 ;; *************** function _isspace *****************
 16970 ;; Defined at:
 16971 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16972 ;; Parameters:    Size  Location     Type
 16973 ;;  c               1    wreg     unsigned char 
 16974 ;; Auto vars:     Size  Location     Type
 16975 ;;  c               1   31[BANK0 ] unsigned char 
 16976 ;; Return value:  Size  Location     Type
 16977 ;;		None               void
 16978 ;; Registers used:
 16979 ;;		wreg, status,2, status,0
 16980 ;; Tracked objects:
 16981 ;;		On entry : 0/0
 16982 ;;		On exit  : 0/0
 16983 ;;		Unchanged: 0/0
 16984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16988 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16989 ;;Total ram usage:        3 bytes
 16990 ;; Hardware stack levels used:    1
 16991 ;; Hardware stack levels required when called:   11
 16992 ;; This function calls:
 16993 ;;		Nothing
 16994 ;; This function is called by:
 16995 ;;		_strtol
 16996 ;;		_xtoi
 16997 ;; This function uses a non-reentrant model
 16998 ;;
 16999                           
 17000                           	psect	text66
 17001  0066E4                     __ptext66:
 17002                           	opt stack 0
 17003  0066E4                     _isspace:
 17004                           	opt stack 13
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;incstack = 0
 17008                           ;isspace@c stored from wreg
 17009  0066E4  0100               	movlb	0	; () banked
 17010  0066E6  6F7F               	movwf	isspace@c& (0+255),b
 17011  0066E8  0E01               	movlw	1
 17012  0066EA  0100               	movlb	0	; () banked
 17013  0066EC  6F7E               	movwf	_isspace$6710& (0+255),b
 17014                           
 17015                           ; BSR set to: 0
 17016  0066EE  0E20               	movlw	32
 17017  0066F0  197F               	xorwf	isspace@c& (0+255),w,b
 17018  0066F2  B4D8               	btfsc	status,2,c
 17019  0066F4  D008               	goto	l3640
 17020                           
 17021                           ; BSR set to: 0
 17022  0066F6  0E0E               	movlw	14
 17023  0066F8  617F               	cpfslt	isspace@c& (0+255),b
 17024  0066FA  D003               	goto	u12580
 17025                           
 17026                           ; BSR set to: 0
 17027  0066FC  0E09               	movlw	9
 17028  0066FE  617F               	cpfslt	isspace@c& (0+255),b
 17029  006700  D002               	goto	l3640
 17030  006702                     u12580:
 17031                           
 17032                           ; BSR set to: 0
 17033                           
 17034                           ; BSR set to: 0
 17035  006702  0E00               	movlw	0
 17036  006704  6F7E               	movwf	_isspace$6710& (0+255),b
 17037  006706                     l3640:
 17038                           
 17039                           ; BSR set to: 0
 17040                           
 17041                           ; BSR set to: 0
 17042  006706  C07E  F07D         	movff	_isspace$6710,??_isspace
 17043  00670A  317D               	rrcf	??_isspace& (0+255),w,b
 17044  00670C  0012               	return	
 17045  00670E                     __end_of_isspace:
 17046                           	opt stack 0
 17047                           tosu	equ	0xFFF
 17048                           tosh	equ	0xFFE
 17049                           tosl	equ	0xFFD
 17050                           pclath	equ	0xFFA
 17051                           tblptru	equ	0xFF8
 17052                           tblptrh	equ	0xFF7
 17053                           tblptrl	equ	0xFF6
 17054                           tablat	equ	0xFF5
 17055                           prodh	equ	0xFF4
 17056                           prodl	equ	0xFF3
 17057                           intcon	equ	0xFF2
 17058                           intcon2	equ	0xFF1
 17059                           intcon3	equ	0xFF0
 17060                           indf0	equ	0xFEF
 17061                           postinc0	equ	0xFEE
 17062                           plusw0	equ	0xFEB
 17063                           fsr0h	equ	0xFEA
 17064                           fsr0l	equ	0xFE9
 17065                           wreg	equ	0xFE8
 17066                           indf1	equ	0xFE7
 17067                           postinc1	equ	0xFE6
 17068                           postdec1	equ	0xFE5
 17069                           fsr1h	equ	0xFE2
 17070                           fsr1l	equ	0xFE1
 17071                           indf2	equ	0xFDF
 17072                           postinc2	equ	0xFDE
 17073                           postdec2	equ	0xFDD
 17074                           plusw2	equ	0xFDB
 17075                           fsr2h	equ	0xFDA
 17076                           fsr2l	equ	0xFD9
 17077                           status	equ	0xFD8
 17078                           
 17079 ;; *************** function _isalpha *****************
 17080 ;; Defined at:
 17081 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17082 ;; Parameters:    Size  Location     Type
 17083 ;;  c               1    wreg     unsigned char 
 17084 ;; Auto vars:     Size  Location     Type
 17085 ;;  c               1   34[BANK0 ] unsigned char 
 17086 ;; Return value:  Size  Location     Type
 17087 ;;		None               void
 17088 ;; Registers used:
 17089 ;;		wreg, status,2, status,0, cstack
 17090 ;; Tracked objects:
 17091 ;;		On entry : 0/0
 17092 ;;		On exit  : 0/0
 17093 ;;		Unchanged: 0/0
 17094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17098 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17099 ;;Total ram usage:        3 bytes
 17100 ;; Hardware stack levels used:    1
 17101 ;; Hardware stack levels required when called:   12
 17102 ;; This function calls:
 17103 ;;		_isupper
 17104 ;; This function is called by:
 17105 ;;		_strtol
 17106 ;; This function uses a non-reentrant model
 17107 ;;
 17108                           
 17109                           	psect	text67
 17110  0065D2                     __ptext67:
 17111                           	opt stack 0
 17112  0065D2                     _isalpha:
 17113                           	opt stack 12
 17114                           
 17115                           ; BSR set to: 0
 17116                           ;incstack = 0
 17117                           ;isalpha@c stored from wreg
 17118  0065D2  0100               	movlb	0	; () banked
 17119  0065D4  6F82               	movwf	isalpha@c& (0+255),b
 17120  0065D6  0E01               	movlw	1
 17121  0065D8  0100               	movlb	0	; () banked
 17122  0065DA  6F81               	movwf	_isalpha$6707& (0+255),b
 17123                           
 17124                           ; BSR set to: 0
 17125  0065DC  0E7B               	movlw	123
 17126  0065DE  6182               	cpfslt	isalpha@c& (0+255),b
 17127  0065E0  D003               	goto	u12600
 17128                           
 17129                           ; BSR set to: 0
 17130  0065E2  0E61               	movlw	97
 17131  0065E4  6182               	cpfslt	isalpha@c& (0+255),b
 17132  0065E6  D008               	goto	l3635
 17133  0065E8                     u12600:
 17134                           
 17135                           ; BSR set to: 0
 17136                           
 17137                           ; BSR set to: 0
 17138  0065E8  5182               	movf	isalpha@c& (0+255),w,b
 17139  0065EA  EC18  F034         	call	_isupper
 17140  0065EE  B0D8               	btfsc	status,0,c
 17141  0065F0  D003               	goto	l3635
 17142  0065F2  0E00               	movlw	0
 17143  0065F4  0100               	movlb	0	; () banked
 17144  0065F6  6F81               	movwf	_isalpha$6707& (0+255),b
 17145  0065F8                     l3635:
 17146                           
 17147                           ; BSR set to: 0
 17148  0065F8  C081  F080         	movff	_isalpha$6707,??_isalpha
 17149  0065FC  0100               	movlb	0	; () banked
 17150  0065FE  3180               	rrcf	??_isalpha& (0+255),w,b
 17151  006600  0012               	return	
 17152  006602                     __end_of_isalpha:
 17153                           	opt stack 0
 17154                           tosu	equ	0xFFF
 17155                           tosh	equ	0xFFE
 17156                           tosl	equ	0xFFD
 17157                           pclath	equ	0xFFA
 17158                           tblptru	equ	0xFF8
 17159                           tblptrh	equ	0xFF7
 17160                           tblptrl	equ	0xFF6
 17161                           tablat	equ	0xFF5
 17162                           prodh	equ	0xFF4
 17163                           prodl	equ	0xFF3
 17164                           intcon	equ	0xFF2
 17165                           intcon2	equ	0xFF1
 17166                           intcon3	equ	0xFF0
 17167                           indf0	equ	0xFEF
 17168                           postinc0	equ	0xFEE
 17169                           plusw0	equ	0xFEB
 17170                           fsr0h	equ	0xFEA
 17171                           fsr0l	equ	0xFE9
 17172                           wreg	equ	0xFE8
 17173                           indf1	equ	0xFE7
 17174                           postinc1	equ	0xFE6
 17175                           postdec1	equ	0xFE5
 17176                           fsr1h	equ	0xFE2
 17177                           fsr1l	equ	0xFE1
 17178                           indf2	equ	0xFDF
 17179                           postinc2	equ	0xFDE
 17180                           postdec2	equ	0xFDD
 17181                           plusw2	equ	0xFDB
 17182                           fsr2h	equ	0xFDA
 17183                           fsr2l	equ	0xFD9
 17184                           status	equ	0xFD8
 17185                           
 17186 ;; *************** function _isupper *****************
 17187 ;; Defined at:
 17188 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17189 ;; Parameters:    Size  Location     Type
 17190 ;;  c               1    wreg     unsigned char 
 17191 ;; Auto vars:     Size  Location     Type
 17192 ;;  c               1   31[BANK0 ] unsigned char 
 17193 ;; Return value:  Size  Location     Type
 17194 ;;		None               void
 17195 ;; Registers used:
 17196 ;;		wreg, status,2, status,0
 17197 ;; Tracked objects:
 17198 ;;		On entry : 0/0
 17199 ;;		On exit  : 0/0
 17200 ;;		Unchanged: 0/0
 17201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17203 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17205 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17206 ;;Total ram usage:        3 bytes
 17207 ;; Hardware stack levels used:    1
 17208 ;; Hardware stack levels required when called:   11
 17209 ;; This function calls:
 17210 ;;		Nothing
 17211 ;; This function is called by:
 17212 ;;		_xtoi
 17213 ;;		_isalpha
 17214 ;; This function uses a non-reentrant model
 17215 ;;
 17216                           
 17217                           	psect	text68
 17218  006830                     __ptext68:
 17219                           	opt stack 0
 17220  006830                     _isupper:
 17221                           	opt stack 13
 17222                           
 17223                           ; BSR set to: 0
 17224                           ;incstack = 0
 17225                           ;isupper@c stored from wreg
 17226  006830  0100               	movlb	0	; () banked
 17227  006832  6F7F               	movwf	isupper@c& (0+255),b
 17228  006834  0E00               	movlw	0
 17229  006836  0100               	movlb	0	; () banked
 17230  006838  6F7E               	movwf	_isupper$6713& (0+255),b
 17231                           
 17232                           ; BSR set to: 0
 17233  00683A  0E5B               	movlw	91
 17234  00683C  617F               	cpfslt	isupper@c& (0+255),b
 17235  00683E  D005               	goto	l3645
 17236                           
 17237                           ; BSR set to: 0
 17238  006840  0E40               	movlw	64
 17239  006842  657F               	cpfsgt	isupper@c& (0+255),b
 17240  006844  D002               	goto	l3645
 17241                           
 17242                           ; BSR set to: 0
 17243  006846  0E01               	movlw	1
 17244  006848  6F7E               	movwf	_isupper$6713& (0+255),b
 17245  00684A                     l3645:
 17246                           
 17247                           ; BSR set to: 0
 17248                           
 17249                           ; BSR set to: 0
 17250  00684A  C07E  F07D         	movff	_isupper$6713,??_isupper
 17251  00684E  317D               	rrcf	??_isupper& (0+255),w,b
 17252  006850  0012               	return	
 17253  006852                     __end_of_isupper:
 17254                           	opt stack 0
 17255                           tosu	equ	0xFFF
 17256                           tosh	equ	0xFFE
 17257                           tosl	equ	0xFFD
 17258                           pclath	equ	0xFFA
 17259                           tblptru	equ	0xFF8
 17260                           tblptrh	equ	0xFF7
 17261                           tblptrl	equ	0xFF6
 17262                           tablat	equ	0xFF5
 17263                           prodh	equ	0xFF4
 17264                           prodl	equ	0xFF3
 17265                           intcon	equ	0xFF2
 17266                           intcon2	equ	0xFF1
 17267                           intcon3	equ	0xFF0
 17268                           indf0	equ	0xFEF
 17269                           postinc0	equ	0xFEE
 17270                           plusw0	equ	0xFEB
 17271                           fsr0h	equ	0xFEA
 17272                           fsr0l	equ	0xFE9
 17273                           wreg	equ	0xFE8
 17274                           indf1	equ	0xFE7
 17275                           postinc1	equ	0xFE6
 17276                           postdec1	equ	0xFE5
 17277                           fsr1h	equ	0xFE2
 17278                           fsr1l	equ	0xFE1
 17279                           indf2	equ	0xFDF
 17280                           postinc2	equ	0xFDE
 17281                           postdec2	equ	0xFDD
 17282                           plusw2	equ	0xFDB
 17283                           fsr2h	equ	0xFDA
 17284                           fsr2l	equ	0xFD9
 17285                           status	equ	0xFD8
 17286                           
 17287 ;; *************** function _strcpy *****************
 17288 ;; Defined at:
 17289 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17290 ;; Parameters:    Size  Location     Type
 17291 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17292 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17293 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17294 ;;		 -> STR_23(20), STR_21(42), 
 17295 ;; Auto vars:     Size  Location     Type
 17296 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17297 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17298 ;; Return value:  Size  Location     Type
 17299 ;;                  2   29[BANK0 ] PTR unsigned char 
 17300 ;; Registers used:
 17301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17302 ;; Tracked objects:
 17303 ;;		On entry : 0/0
 17304 ;;		On exit  : 0/0
 17305 ;;		Unchanged: 0/0
 17306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17307 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17308 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17310 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17311 ;;Total ram usage:        6 bytes
 17312 ;; Hardware stack levels used:    1
 17313 ;; Hardware stack levels required when called:   11
 17314 ;; This function calls:
 17315 ;;		Nothing
 17316 ;; This function is called by:
 17317 ;;		_Terminal
 17318 ;;		_Term_MainSm
 17319 ;; This function uses a non-reentrant model
 17320 ;;
 17321                           
 17322                           	psect	text69
 17323  006540                     __ptext69:
 17324                           	opt stack 0
 17325  006540                     _strcpy:
 17326                           	opt stack 15
 17327                           
 17328                           ; BSR set to: 0
 17329                           ;incstack = 0
 17330  006540  C07D  F081         	movff	strcpy@to,strcpy@cp
 17331  006544  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17332  006548  D005               	goto	l3537
 17333  00654A  0100               	movlb	0	; () banked
 17334  00654C  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17335  00654E  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17336  006550  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17337  006552  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17338  006554                     l3537:
 17339                           
 17340                           ; BSR set to: 0
 17341  006554  C07F  FFF6         	movff	strcpy@from,tblptrl
 17342  006558  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17343  00655C                     	if	0	;tblptru may be non-zero
 17344  00655C                     	endif
 17345  00655C                     	if	0	;tblptru may be non-zero
 17346  00655C                     	endif
 17347  00655C  C081  FFD9         	movff	strcpy@cp,fsr2l
 17348  006560  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17349  006564  0008               	tblrd		*
 17350  006566  CFF5 FFDF          	movff	tablat,indf2
 17351  00656A  50DF               	movf	indf2,w,c
 17352  00656C  B4D8               	btfsc	status,2,c
 17353  00656E  0012               	return	
 17354  006570  D7EC               	goto	l3538
 17355  006572                     __end_of_strcpy:
 17356                           	opt stack 0
 17357                           tosu	equ	0xFFF
 17358                           tosh	equ	0xFFE
 17359                           tosl	equ	0xFFD
 17360                           pclath	equ	0xFFA
 17361                           tblptru	equ	0xFF8
 17362                           tblptrh	equ	0xFF7
 17363                           tblptrl	equ	0xFF6
 17364                           tablat	equ	0xFF5
 17365                           prodh	equ	0xFF4
 17366                           prodl	equ	0xFF3
 17367                           intcon	equ	0xFF2
 17368                           intcon2	equ	0xFF1
 17369                           intcon3	equ	0xFF0
 17370                           indf0	equ	0xFEF
 17371                           postinc0	equ	0xFEE
 17372                           plusw0	equ	0xFEB
 17373                           fsr0h	equ	0xFEA
 17374                           fsr0l	equ	0xFE9
 17375                           wreg	equ	0xFE8
 17376                           indf1	equ	0xFE7
 17377                           postinc1	equ	0xFE6
 17378                           postdec1	equ	0xFE5
 17379                           fsr1h	equ	0xFE2
 17380                           fsr1l	equ	0xFE1
 17381                           indf2	equ	0xFDF
 17382                           postinc2	equ	0xFDE
 17383                           postdec2	equ	0xFDD
 17384                           plusw2	equ	0xFDB
 17385                           fsr2h	equ	0xFDA
 17386                           fsr2l	equ	0xFD9
 17387                           status	equ	0xFD8
 17388                           
 17389 ;; *************** function _putUSBUSART *****************
 17390 ;; Defined at:
 17391 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17392 ;; Parameters:    Size  Location     Type
 17393 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17394 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17395 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17396 ;;		 -> RxBuffer(400), 
 17397 ;;  length          1   37[BANK0 ] unsigned char 
 17398 ;; Auto vars:     Size  Location     Type
 17399 ;;		None
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  1    wreg      void 
 17402 ;; Registers used:
 17403 ;;		wreg, status,2, status,0
 17404 ;; Tracked objects:
 17405 ;;		On entry : 0/0
 17406 ;;		On exit  : 0/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17409 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17413 ;;Total ram usage:        3 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:   11
 17416 ;; This function calls:
 17417 ;;		Nothing
 17418 ;; This function is called by:
 17419 ;;		_Terminal
 17420 ;;		_Term_MainSm
 17421 ;;		_GsmGprsTerminal
 17422 ;; This function uses a non-reentrant model
 17423 ;;
 17424                           
 17425                           	psect	text70
 17426  006852                     __ptext70:
 17427                           	opt stack 0
 17428  006852                     _putUSBUSART:
 17429                           	opt stack 15
 17430                           
 17431                           ;usb_device_cdc.c: 584: ;
 17432                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17433                           
 17434                           ;incstack = 0
 17435  006852  0100               	movlb	0	; () banked
 17436  006854  51C8               	movf	_cdc_trf_state& (0+255),w,b
 17437  006856  A4D8               	btfss	status,2,c
 17438  006858  0012               	return	
 17439                           
 17440                           ; BSR set to: 0
 17441                           ;usb_device_cdc.c: 586: {
 17442                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17443  00685A  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17444  00685E  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17445                           
 17446                           ; BSR set to: 0
 17447  006862  C085  F0C7         	movff	putUSBUSART@length,_cdc_tx_len
 17448                           
 17449                           ; BSR set to: 0
 17450  006866  0E01               	movlw	1
 17451  006868  0101               	movlb	1	; () banked
 17452  00686A  6FDD               	movwf	_cdc_mem_type& (0+255),b
 17453                           
 17454                           ; BSR set to: 1
 17455  00686C  0E01               	movlw	1
 17456  00686E  0100               	movlb	0	; () banked
 17457  006870  6FC8               	movwf	_cdc_trf_state& (0+255),b
 17458  006872  0012               	return	
 17459  006874                     __end_of_putUSBUSART:
 17460                           	opt stack 0
 17461                           tosu	equ	0xFFF
 17462                           tosh	equ	0xFFE
 17463                           tosl	equ	0xFFD
 17464                           pclath	equ	0xFFA
 17465                           tblptru	equ	0xFF8
 17466                           tblptrh	equ	0xFF7
 17467                           tblptrl	equ	0xFF6
 17468                           tablat	equ	0xFF5
 17469                           prodh	equ	0xFF4
 17470                           prodl	equ	0xFF3
 17471                           intcon	equ	0xFF2
 17472                           intcon2	equ	0xFF1
 17473                           intcon3	equ	0xFF0
 17474                           indf0	equ	0xFEF
 17475                           postinc0	equ	0xFEE
 17476                           plusw0	equ	0xFEB
 17477                           fsr0h	equ	0xFEA
 17478                           fsr0l	equ	0xFE9
 17479                           wreg	equ	0xFE8
 17480                           indf1	equ	0xFE7
 17481                           postinc1	equ	0xFE6
 17482                           postdec1	equ	0xFE5
 17483                           fsr1h	equ	0xFE2
 17484                           fsr1l	equ	0xFE1
 17485                           indf2	equ	0xFDF
 17486                           postinc2	equ	0xFDE
 17487                           postdec2	equ	0xFDD
 17488                           plusw2	equ	0xFDB
 17489                           fsr2h	equ	0xFDA
 17490                           fsr2l	equ	0xFD9
 17491                           status	equ	0xFD8
 17492                           
 17493 ;; *************** function _itoa *****************
 17494 ;; Defined at:
 17495 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17496 ;; Parameters:    Size  Location     Type
 17497 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17498 ;;		 -> Terminal@Payload(80), 
 17499 ;;  val             2   53[BANK0 ] int 
 17500 ;;  base            2   55[BANK0 ] int 
 17501 ;; Auto vars:     Size  Location     Type
 17502 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17503 ;;		 -> Terminal@Payload(80), 
 17504 ;; Return value:  Size  Location     Type
 17505 ;;                  2   51[BANK0 ] PTR unsigned char 
 17506 ;; Registers used:
 17507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17508 ;; Tracked objects:
 17509 ;;		On entry : 0/0
 17510 ;;		On exit  : 0/0
 17511 ;;		Unchanged: 0/0
 17512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17513 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17514 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17516 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17517 ;;Total ram usage:        8 bytes
 17518 ;; Hardware stack levels used:    1
 17519 ;; Hardware stack levels required when called:   13
 17520 ;; This function calls:
 17521 ;;		_utoa
 17522 ;; This function is called by:
 17523 ;;		_Terminal
 17524 ;; This function uses a non-reentrant model
 17525 ;;
 17526                           
 17527                           	psect	text71
 17528  006148                     __ptext71:
 17529                           	opt stack 0
 17530  006148                     _itoa:
 17531                           	opt stack 12
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;incstack = 0
 17535  006148  C093  F099         	movff	itoa@buf,itoa@cp
 17536  00614C  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17537  006150  0100               	movlb	0	; () banked
 17538  006152  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17539  006154  D00C               	goto	l3285
 17540                           
 17541                           ; BSR set to: 0
 17542  006156  C093  FFD9         	movff	itoa@buf,fsr2l
 17543  00615A  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17544  00615E  0E2D               	movlw	45
 17545  006160  6EDF               	movwf	indf2,c
 17546                           
 17547                           ; BSR set to: 0
 17548  006162  4B93               	infsnz	itoa@buf& (0+255),f,b
 17549  006164  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17550                           
 17551                           ; BSR set to: 0
 17552  006166  6D95               	negf	itoa@val& (0+255),b
 17553  006168  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17554  00616A  B0D8               	btfsc	status,0,c
 17555  00616C  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17556  00616E                     l3285:
 17557                           
 17558                           ; BSR set to: 0
 17559                           
 17560                           ; BSR set to: 0
 17561  00616E  C093  F08A         	movff	itoa@buf,utoa@buf
 17562  006172  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17563  006176  C095  F08C         	movff	itoa@val,utoa@val
 17564  00617A  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17565  00617E  C097  F08E         	movff	itoa@base,utoa@base
 17566  006182  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17567  006186  EC8D  F023         	call	_utoa	;wreg free
 17568  00618A  0012               	return	
 17569  00618C                     __end_of_itoa:
 17570                           	opt stack 0
 17571                           tosu	equ	0xFFF
 17572                           tosh	equ	0xFFE
 17573                           tosl	equ	0xFFD
 17574                           pclath	equ	0xFFA
 17575                           tblptru	equ	0xFF8
 17576                           tblptrh	equ	0xFF7
 17577                           tblptrl	equ	0xFF6
 17578                           tablat	equ	0xFF5
 17579                           prodh	equ	0xFF4
 17580                           prodl	equ	0xFF3
 17581                           intcon	equ	0xFF2
 17582                           intcon2	equ	0xFF1
 17583                           intcon3	equ	0xFF0
 17584                           indf0	equ	0xFEF
 17585                           postinc0	equ	0xFEE
 17586                           plusw0	equ	0xFEB
 17587                           fsr0h	equ	0xFEA
 17588                           fsr0l	equ	0xFE9
 17589                           wreg	equ	0xFE8
 17590                           indf1	equ	0xFE7
 17591                           postinc1	equ	0xFE6
 17592                           postdec1	equ	0xFE5
 17593                           fsr1h	equ	0xFE2
 17594                           fsr1l	equ	0xFE1
 17595                           indf2	equ	0xFDF
 17596                           postinc2	equ	0xFDE
 17597                           postdec2	equ	0xFDD
 17598                           plusw2	equ	0xFDB
 17599                           fsr2h	equ	0xFDA
 17600                           fsr2l	equ	0xFD9
 17601                           status	equ	0xFD8
 17602                           
 17603 ;; *************** function _utoa *****************
 17604 ;; Defined at:
 17605 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17606 ;; Parameters:    Size  Location     Type
 17607 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17608 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17609 ;;  val             2   44[BANK0 ] unsigned int 
 17610 ;;  base            2   46[BANK0 ] int 
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;  v               2   48[BANK0 ] unsigned int 
 17613 ;;  c               1   50[BANK0 ] unsigned char 
 17614 ;; Return value:  Size  Location     Type
 17615 ;;                  2   42[BANK0 ] PTR unsigned char 
 17616 ;; Registers used:
 17617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17618 ;; Tracked objects:
 17619 ;;		On entry : 0/0
 17620 ;;		On exit  : 0/0
 17621 ;;		Unchanged: 0/0
 17622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17623 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17627 ;;Total ram usage:        9 bytes
 17628 ;; Hardware stack levels used:    1
 17629 ;; Hardware stack levels required when called:   12
 17630 ;; This function calls:
 17631 ;;		___lwdiv
 17632 ;;		___lwmod
 17633 ;; This function is called by:
 17634 ;;		_Term_MainSm
 17635 ;;		_itoa
 17636 ;; This function uses a non-reentrant model
 17637 ;;
 17638                           
 17639                           	psect	text72
 17640  00471A                     __ptext72:
 17641                           	opt stack 0
 17642  00471A                     _utoa:
 17643                           	opt stack 14
 17644                           
 17645                           ;incstack = 0
 17646  00471A  C08C  F090         	movff	utoa@val,utoa@v
 17647  00471E  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17648  004722  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17649  004726  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17650  00472A  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17651  00472E  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17652  004732  EC64  F02E         	call	___lwdiv	;wreg free
 17653  004736  C083  F090         	movff	?___lwdiv,utoa@v
 17654  00473A  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17655  00473E  0100               	movlb	0	; () banked
 17656  004740  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17657  004742  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17658                           
 17659                           ; BSR set to: 0
 17660  004744  5190               	movf	utoa@v& (0+255),w,b
 17661  004746  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17662  004748  A4D8               	btfss	status,2,c
 17663  00474A  D7EB               	goto	l3289
 17664                           
 17665                           ; BSR set to: 0
 17666                           
 17667                           ; BSR set to: 0
 17668  00474C  C08A  FFD9         	movff	utoa@buf,fsr2l
 17669  004750  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17670  004754  0E00               	movlw	0
 17671  004756  6EDF               	movwf	indf2,c
 17672                           
 17673                           ; BSR set to: 0
 17674  004758  078A               	decf	utoa@buf& (0+255),f,b
 17675  00475A  A0D8               	btfss	status,0,c
 17676  00475C  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17677  00475E                     
 17678                           ; BSR set to: 0
 17679                           
 17680                           ; BSR set to: 0
 17681  00475E  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17682  004762  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17683  004766  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17684  00476A  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17685  00476E  ECC6  F030         	call	___lwmod	;wreg free
 17686  004772  0100               	movlb	0	; () banked
 17687  004774  517D               	movf	?___lwmod& (0+255),w,b
 17688  004776  6F92               	movwf	utoa@c& (0+255),b
 17689                           
 17690                           ; BSR set to: 0
 17691  004778  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17692  00477C  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17693  004780  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17694  004784  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17695  004788  EC64  F02E         	call	___lwdiv	;wreg free
 17696  00478C  C083  F08C         	movff	?___lwdiv,utoa@val
 17697  004790  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17698  004794  0E09               	movlw	9
 17699  004796  0100               	movlb	0	; () banked
 17700  004798  6592               	cpfsgt	utoa@c& (0+255),b
 17701  00479A  D002               	goto	l3292
 17702                           
 17703                           ; BSR set to: 0
 17704  00479C  0E07               	movlw	7
 17705  00479E  2792               	addwf	utoa@c& (0+255),f,b
 17706  0047A0                     l3292:
 17707                           
 17708                           ; BSR set to: 0
 17709  0047A0  0E30               	movlw	48
 17710  0047A2  2792               	addwf	utoa@c& (0+255),f,b
 17711                           
 17712                           ; BSR set to: 0
 17713  0047A4  C08A  FFD9         	movff	utoa@buf,fsr2l
 17714  0047A8  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17715  0047AC  C092  FFDF         	movff	utoa@c,indf2
 17716                           
 17717                           ; BSR set to: 0
 17718  0047B0  078A               	decf	utoa@buf& (0+255),f,b
 17719  0047B2  A0D8               	btfss	status,0,c
 17720  0047B4  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17721                           
 17722                           ; BSR set to: 0
 17723  0047B6  518C               	movf	utoa@val& (0+255),w,b
 17724  0047B8  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17725  0047BA  A4D8               	btfss	status,2,c
 17726  0047BC  D7D0               	goto	l3291
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;	Return value of _utoa is never used
 17730                           
 17731                           ; BSR set to: 0
 17732  0047BE  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17733  0047C0  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17734  0047C2  0012               	return	
 17735  0047C4                     __end_of_utoa:
 17736                           	opt stack 0
 17737                           tosu	equ	0xFFF
 17738                           tosh	equ	0xFFE
 17739                           tosl	equ	0xFFD
 17740                           pclath	equ	0xFFA
 17741                           tblptru	equ	0xFF8
 17742                           tblptrh	equ	0xFF7
 17743                           tblptrl	equ	0xFF6
 17744                           tablat	equ	0xFF5
 17745                           prodh	equ	0xFF4
 17746                           prodl	equ	0xFF3
 17747                           intcon	equ	0xFF2
 17748                           intcon2	equ	0xFF1
 17749                           intcon3	equ	0xFF0
 17750                           indf0	equ	0xFEF
 17751                           postinc0	equ	0xFEE
 17752                           plusw0	equ	0xFEB
 17753                           fsr0h	equ	0xFEA
 17754                           fsr0l	equ	0xFE9
 17755                           wreg	equ	0xFE8
 17756                           indf1	equ	0xFE7
 17757                           postinc1	equ	0xFE6
 17758                           postdec1	equ	0xFE5
 17759                           fsr1h	equ	0xFE2
 17760                           fsr1l	equ	0xFE1
 17761                           indf2	equ	0xFDF
 17762                           postinc2	equ	0xFDE
 17763                           postdec2	equ	0xFDD
 17764                           plusw2	equ	0xFDB
 17765                           fsr2h	equ	0xFDA
 17766                           fsr2l	equ	0xFD9
 17767                           status	equ	0xFD8
 17768                           
 17769 ;; *************** function ___lwmod *****************
 17770 ;; Defined at:
 17771 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17772 ;; Parameters:    Size  Location     Type
 17773 ;;  dividend        2   29[BANK0 ] unsigned int 
 17774 ;;  divisor         2   31[BANK0 ] unsigned int 
 17775 ;; Auto vars:     Size  Location     Type
 17776 ;;  counter         1   33[BANK0 ] unsigned char 
 17777 ;; Return value:  Size  Location     Type
 17778 ;;                  2   29[BANK0 ] unsigned int 
 17779 ;; Registers used:
 17780 ;;		wreg, status,2, status,0
 17781 ;; Tracked objects:
 17782 ;;		On entry : 0/0
 17783 ;;		On exit  : 0/0
 17784 ;;		Unchanged: 0/0
 17785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17789 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17790 ;;Total ram usage:        5 bytes
 17791 ;; Hardware stack levels used:    1
 17792 ;; Hardware stack levels required when called:   11
 17793 ;; This function calls:
 17794 ;;		Nothing
 17795 ;; This function is called by:
 17796 ;;		_utoa
 17797 ;; This function uses a non-reentrant model
 17798 ;;
 17799                           
 17800                           	psect	text73
 17801  00618C                     __ptext73:
 17802                           	opt stack 0
 17803  00618C                     ___lwmod:
 17804                           	opt stack 14
 17805                           
 17806                           ; BSR set to: 0
 17807                           ;incstack = 0
 17808  00618C  0100               	movlb	0	; () banked
 17809  00618E  517F               	movf	___lwmod@divisor& (0+255),w,b
 17810  006190  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17811  006192  B4D8               	btfsc	status,2,c
 17812  006194  D018               	goto	l3387
 17813                           
 17814                           ; BSR set to: 0
 17815  006196  0E01               	movlw	1
 17816  006198  6F81               	movwf	___lwmod@counter& (0+255),b
 17817  00619A  D004               	goto	l3382
 17818  00619C                     
 17819                           ; BSR set to: 0
 17820                           
 17821                           ; BSR set to: 0
 17822  00619C  90D8               	bcf	status,0,c
 17823  00619E  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17824  0061A0  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17825  0061A2  2B81               	incf	___lwmod@counter& (0+255),f,b
 17826  0061A4                     l3382:
 17827                           
 17828                           ; BSR set to: 0
 17829                           
 17830                           ; BSR set to: 0
 17831  0061A4  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17832  0061A6  D7FA               	goto	l3383
 17833  0061A8                     u12230:
 17834                           
 17835                           ; BSR set to: 0
 17836                           
 17837                           ; BSR set to: 0
 17838                           
 17839                           ; BSR set to: 0
 17840  0061A8  517F               	movf	___lwmod@divisor& (0+255),w,b
 17841  0061AA  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17842  0061AC  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17843  0061AE  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17844  0061B0  A0D8               	btfss	status,0,c
 17845  0061B2  D004               	goto	l3386
 17846                           
 17847                           ; BSR set to: 0
 17848  0061B4  517F               	movf	___lwmod@divisor& (0+255),w,b
 17849  0061B6  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17850  0061B8  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17851  0061BA  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17852  0061BC                     l3386:
 17853                           
 17854                           ; BSR set to: 0
 17855                           
 17856                           ; BSR set to: 0
 17857  0061BC  90D8               	bcf	status,0,c
 17858  0061BE  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17859  0061C0  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17860                           
 17861                           ; BSR set to: 0
 17862  0061C2  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17863  0061C4  D7F1               	goto	u12230
 17864  0061C6                     l3387:
 17865                           
 17866                           ; BSR set to: 0
 17867                           
 17868                           ; BSR set to: 0
 17869  0061C6  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17870  0061CA  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17871                           
 17872                           ; BSR set to: 0
 17873  0061CE  0012               	return		;funcret
 17874  0061D0                     __end_of___lwmod:
 17875                           	opt stack 0
 17876                           tosu	equ	0xFFF
 17877                           tosh	equ	0xFFE
 17878                           tosl	equ	0xFFD
 17879                           pclath	equ	0xFFA
 17880                           tblptru	equ	0xFF8
 17881                           tblptrh	equ	0xFF7
 17882                           tblptrl	equ	0xFF6
 17883                           tablat	equ	0xFF5
 17884                           prodh	equ	0xFF4
 17885                           prodl	equ	0xFF3
 17886                           intcon	equ	0xFF2
 17887                           intcon2	equ	0xFF1
 17888                           intcon3	equ	0xFF0
 17889                           indf0	equ	0xFEF
 17890                           postinc0	equ	0xFEE
 17891                           plusw0	equ	0xFEB
 17892                           fsr0h	equ	0xFEA
 17893                           fsr0l	equ	0xFE9
 17894                           wreg	equ	0xFE8
 17895                           indf1	equ	0xFE7
 17896                           postinc1	equ	0xFE6
 17897                           postdec1	equ	0xFE5
 17898                           fsr1h	equ	0xFE2
 17899                           fsr1l	equ	0xFE1
 17900                           indf2	equ	0xFDF
 17901                           postinc2	equ	0xFDE
 17902                           postdec2	equ	0xFDD
 17903                           plusw2	equ	0xFDB
 17904                           fsr2h	equ	0xFDA
 17905                           fsr2l	equ	0xFD9
 17906                           status	equ	0xFD8
 17907                           
 17908 ;; *************** function _getsUSBUSART *****************
 17909 ;; Defined at:
 17910 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17911 ;; Parameters:    Size  Location     Type
 17912 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17913 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17914 ;;  len             1   38[BANK0 ] unsigned char 
 17915 ;; Auto vars:     Size  Location     Type
 17916 ;;		None
 17917 ;; Return value:  Size  Location     Type
 17918 ;;                  1    wreg      unsigned char 
 17919 ;; Registers used:
 17920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17921 ;; Tracked objects:
 17922 ;;		On entry : 0/0
 17923 ;;		On exit  : 0/0
 17924 ;;		Unchanged: 0/0
 17925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17926 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17930 ;;Total ram usage:        4 bytes
 17931 ;; Hardware stack levels used:    1
 17932 ;; Hardware stack levels required when called:   12
 17933 ;; This function calls:
 17934 ;;		_USBTransferOnePacket
 17935 ;; This function is called by:
 17936 ;;		_Terminal
 17937 ;;		_GsmGprsTerminal
 17938 ;; This function uses a non-reentrant model
 17939 ;;
 17940                           
 17941                           	psect	text74
 17942  004D66                     __ptext74:
 17943                           	opt stack 0
 17944  004D66                     _getsUSBUSART:
 17945                           	opt stack 13
 17946                           
 17947                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;incstack = 0
 17951  004D66  0E00               	movlw	0
 17952  004D68  0100               	movlb	0	; () banked
 17953  004D6A  6FC9               	movwf	_cdc_rx_len& (0+255),b
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17957  004D6C  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17958  004D6E  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17959  004D70  B4D8               	btfsc	status,2,c
 17960  004D72  D006               	goto	u12960
 17961                           
 17962                           ; BSR set to: 0
 17963  004D74  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17964  004D78  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17965  004D7C  BEDF               	btfsc	indf2,7,c
 17966  004D7E  D03B               	goto	l1924
 17967  004D80                     u12960:
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;usb_device_cdc.c: 493: {
 17971                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17972                           
 17973                           ; BSR set to: 0
 17974  004D80  EE20 F001          	lfsr	2,1
 17975  004D84  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17976  004D86  26D9               	addwf	fsr2l,f,c
 17977  004D88  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17978  004D8A  22DA               	addwfc	fsr2h,f,c
 17979  004D8C  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17980  004D8E  5CDE               	subwf	postinc2,w,c
 17981  004D90  B0D8               	btfsc	status,0,c
 17982  004D92  D008               	goto	l1927
 17983                           
 17984                           ; BSR set to: 0
 17985                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17986  004D94  EE20 F001          	lfsr	2,1
 17987  004D98  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17988  004D9A  26D9               	addwf	fsr2l,f,c
 17989  004D9C  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17990  004D9E  22DA               	addwfc	fsr2h,f,c
 17991  004DA0  50DF               	movf	indf2,w,c
 17992  004DA2  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17993  004DA4                     l1927:
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17997                           
 17998                           ; BSR set to: 0
 17999  004DA4  0E00               	movlw	0
 18000  004DA6  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18001  004DA8  D013               	goto	l1928
 18002  004DAA                     
 18003                           ; BSR set to: 0
 18004                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18005                           
 18006                           ; BSR set to: 0
 18007  004DAA  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18008  004DAC  0D01               	mullw	1
 18009  004DAE  0E00               	movlw	low _cdc_data_rx
 18010  004DB0  24F3               	addwf	prodl,w,c
 18011  004DB2  6ED9               	movwf	fsr2l,c
 18012  004DB4  0E05               	movlw	high _cdc_data_rx
 18013  004DB6  20F4               	addwfc	prodh,w,c
 18014  004DB8  6EDA               	movwf	fsr2h,c
 18015  004DBA  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18016  004DBC  0D01               	mullw	1
 18017  004DBE  50F3               	movf	prodl,w,c
 18018  004DC0  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18019  004DC2  6EE1               	movwf	fsr1l,c
 18020  004DC4  50F4               	movf	prodh,w,c
 18021  004DC6  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18022  004DC8  6EE2               	movwf	fsr1h,c
 18023  004DCA  CFDF FFE7          	movff	indf2,indf1
 18024                           
 18025                           ; BSR set to: 0
 18026  004DCE  2BC9               	incf	_cdc_rx_len& (0+255),f,b
 18027  004DD0                     l1928:
 18028                           
 18029                           ; BSR set to: 0
 18030                           
 18031                           ; BSR set to: 0
 18032  004DD0  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18033  004DD2  5DC9               	subwf	_cdc_rx_len& (0+255),w,b
 18034  004DD4  A0D8               	btfss	status,0,c
 18035  004DD6  D7E9               	goto	l1929
 18036                           
 18037                           ; BSR set to: 0
 18038                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18039                           
 18040                           ; BSR set to: 0
 18041  004DD8  0E00               	movlw	0
 18042  004DDA  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18043  004DDC  0E00               	movlw	low _cdc_data_rx
 18044  004DDE  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18045  004DE0  0E05               	movlw	high _cdc_data_rx
 18046  004DE2  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18047  004DE4  0E40               	movlw	64
 18048  004DE6  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18049  004DE8  0E02               	movlw	2
 18050  004DEA  EC6C  F021         	call	_USBTransferOnePacket
 18051  004DEE  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18052  004DF2  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18053  004DF6                     l1924:
 18054                           
 18055                           ;usb_device_cdc.c: 513: }
 18056                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18057  004DF6  0100               	movlb	0	; () banked
 18058  004DF8  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18059  004DFA  0012               	return	
 18060  004DFC                     __end_of_getsUSBUSART:
 18061                           	opt stack 0
 18062                           tosu	equ	0xFFF
 18063                           tosh	equ	0xFFE
 18064                           tosl	equ	0xFFD
 18065                           pclath	equ	0xFFA
 18066                           tblptru	equ	0xFF8
 18067                           tblptrh	equ	0xFF7
 18068                           tblptrl	equ	0xFF6
 18069                           tablat	equ	0xFF5
 18070                           prodh	equ	0xFF4
 18071                           prodl	equ	0xFF3
 18072                           intcon	equ	0xFF2
 18073                           intcon2	equ	0xFF1
 18074                           intcon3	equ	0xFF0
 18075                           indf0	equ	0xFEF
 18076                           postinc0	equ	0xFEE
 18077                           plusw0	equ	0xFEB
 18078                           fsr0h	equ	0xFEA
 18079                           fsr0l	equ	0xFE9
 18080                           wreg	equ	0xFE8
 18081                           indf1	equ	0xFE7
 18082                           postinc1	equ	0xFE6
 18083                           postdec1	equ	0xFE5
 18084                           fsr1h	equ	0xFE2
 18085                           fsr1l	equ	0xFE1
 18086                           indf2	equ	0xFDF
 18087                           postinc2	equ	0xFDE
 18088                           postdec2	equ	0xFDD
 18089                           plusw2	equ	0xFDB
 18090                           fsr2h	equ	0xFDA
 18091                           fsr2l	equ	0xFD9
 18092                           status	equ	0xFD8
 18093                           
 18094 ;; *************** function _USBTransferOnePacket *****************
 18095 ;; Defined at:
 18096 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18097 ;; Parameters:    Size  Location     Type
 18098 ;;  ep              1    wreg     unsigned char 
 18099 ;;  dir             1   29[BANK0 ] unsigned char 
 18100 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18101 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18102 ;;  len             1   32[BANK0 ] unsigned char 
 18103 ;; Auto vars:     Size  Location     Type
 18104 ;;  ep              1   33[BANK0 ] unsigned char 
 18105 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18106 ;;		 -> NULL(0), BDT(48), 
 18107 ;; Return value:  Size  Location     Type
 18108 ;;                  2   29[BANK0 ] PTR void 
 18109 ;; Registers used:
 18110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18111 ;; Tracked objects:
 18112 ;;		On entry : 0/0
 18113 ;;		On exit  : 0/0
 18114 ;;		Unchanged: 0/0
 18115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18116 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18117 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18119 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18120 ;;Total ram usage:        7 bytes
 18121 ;; Hardware stack levels used:    1
 18122 ;; Hardware stack levels required when called:   11
 18123 ;; This function calls:
 18124 ;;		Nothing
 18125 ;; This function is called by:
 18126 ;;		_CDCInitEP
 18127 ;;		_getsUSBUSART
 18128 ;;		_CDCTxService
 18129 ;;		_USBCDCEventHandler
 18130 ;; This function uses a non-reentrant model
 18131 ;;
 18132                           
 18133                           	psect	text75
 18134  0042D8                     __ptext75:
 18135                           	opt stack 0
 18136  0042D8                     _USBTransferOnePacket:
 18137                           	opt stack 13
 18138                           
 18139                           ; BSR set to: 0
 18140                           ;incstack = 0
 18141                           ;USBTransferOnePacket@ep stored from wreg
 18142  0042D8  0100               	movlb	0	; () banked
 18143  0042DA  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18144                           
 18145                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18146                           ;usb_device.c: 1018: if(dir != 0)
 18147  0042DC  0100               	movlb	0	; () banked
 18148  0042DE  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18149  0042E0  B4D8               	btfsc	status,2,c
 18150  0042E2  D007               	goto	l1648
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;usb_device.c: 1019: {
 18154                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18155  0042E4  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18156  0042E6  0D02               	mullw	2
 18157  0042E8  0EB6               	movlw	low _pBDTEntryIn
 18158  0042EA  24F3               	addwf	prodl,w,c
 18159  0042EC  6ED9               	movwf	fsr2l,c
 18160  0042EE  0E00               	movlw	high _pBDTEntryIn
 18161  0042F0  D006               	goto	L16
 18162  0042F2                     l1648:
 18163                           
 18164                           ; BSR set to: 0
 18165                           ;usb_device.c: 1023: else
 18166                           ;usb_device.c: 1024: {
 18167                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18168                           
 18169                           ; BSR set to: 0
 18170  0042F2  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18171  0042F4  0D02               	mullw	2
 18172  0042F6  0E0E               	movlw	low _pBDTEntryOut
 18173  0042F8  24F3               	addwf	prodl,w,c
 18174  0042FA  6ED9               	movwf	fsr2l,c
 18175  0042FC  0E03               	movlw	high _pBDTEntryOut
 18176  0042FE                     L16:
 18177  0042FE  20F4               	addwfc	prodh,w,c
 18178  004300  6EDA               	movwf	fsr2h,c
 18179  004302  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18180  004306  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;usb_device.c: 1027: }
 18184                           ;usb_device.c: 1031: if(handle == 0)
 18185                           
 18186                           ; BSR set to: 0
 18187  00430A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18188  00430C  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18189  00430E  A4D8               	btfss	status,2,c
 18190  004310  D005               	goto	l1650
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;usb_device.c: 1032: {
 18194                           ;usb_device.c: 1033: return 0;
 18195  004312  0E00               	movlw	0
 18196  004314  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18197  004316  0E00               	movlw	0
 18198  004318  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18199                           
 18200                           ; BSR set to: 0
 18201  00431A  0012               	return	
 18202  00431C                     l1650:
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;usb_device.c: 1034: }
 18206                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18207                           
 18208                           ; BSR set to: 0
 18209  00431C  EE20 F002          	lfsr	2,2
 18210  004320  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18211  004322  26D9               	addwf	fsr2l,f,c
 18212  004324  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18213  004326  22DA               	addwfc	fsr2h,f,c
 18214  004328  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18215  00432C  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18216                           
 18217                           ;usb_device.c: 1048: handle->CNT = len;
 18218  004330  EE20 F001          	lfsr	2,1
 18219  004334  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18220  004336  26D9               	addwf	fsr2l,f,c
 18221  004338  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18222  00433A  22DA               	addwfc	fsr2h,f,c
 18223  00433C  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18224                           
 18225                           ; BSR set to: 0
 18226                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18227  004340  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18228  004344  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18229  004348  0E40               	movlw	64
 18230  00434A  16DF               	andwf	indf2,f,c
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18234  00434C  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18235  004350  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18236  004354  0E00               	movlw	0
 18237  004356  86DB               	bsf	plusw2,3,c
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18241  004358  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18242  00435C  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18243  004360  0E00               	movlw	0
 18244  004362  8EDB               	bsf	plusw2,7,c
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;usb_device.c: 1054: if(dir != 0)
 18248  004364  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18249  004366  B4D8               	btfsc	status,2,c
 18250  004368  D007               	goto	l1652
 18251                           
 18252                           ; BSR set to: 0
 18253                           ;usb_device.c: 1055: {
 18254                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18255  00436A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18256  00436C  0D02               	mullw	2
 18257  00436E  0EB6               	movlw	low _pBDTEntryIn
 18258  004370  24F3               	addwf	prodl,w,c
 18259  004372  6ED9               	movwf	fsr2l,c
 18260  004374  0E00               	movlw	high _pBDTEntryIn
 18261  004376  D006               	goto	L17
 18262  004378                     l1652:
 18263                           
 18264                           ; BSR set to: 0
 18265                           ;usb_device.c: 1059: else
 18266                           ;usb_device.c: 1060: {
 18267                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18268                           
 18269                           ; BSR set to: 0
 18270  004378  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18271  00437A  0D02               	mullw	2
 18272  00437C  0E0E               	movlw	low _pBDTEntryOut
 18273  00437E  24F3               	addwf	prodl,w,c
 18274  004380  6ED9               	movwf	fsr2l,c
 18275  004382  0E03               	movlw	high _pBDTEntryOut
 18276  004384                     L17:
 18277  004384  20F4               	addwfc	prodh,w,c
 18278  004386  6EDA               	movwf	fsr2h,c
 18279  004388  0E04               	movlw	4
 18280  00438A  1ADF               	xorwf	indf2,f,c
 18281                           
 18282                           ; BSR set to: 0
 18283                           ;usb_device.c: 1063: }
 18284                           ;usb_device.c: 1064: return (void*)handle;
 18285                           
 18286                           ; BSR set to: 0
 18287  00438C  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18288  004390  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18289  004394  0012               	return	
 18290  004396                     __end_of_USBTransferOnePacket:
 18291                           	opt stack 0
 18292                           tosu	equ	0xFFF
 18293                           tosh	equ	0xFFE
 18294                           tosl	equ	0xFFD
 18295                           pclath	equ	0xFFA
 18296                           tblptru	equ	0xFF8
 18297                           tblptrh	equ	0xFF7
 18298                           tblptrl	equ	0xFF6
 18299                           tablat	equ	0xFF5
 18300                           prodh	equ	0xFF4
 18301                           prodl	equ	0xFF3
 18302                           intcon	equ	0xFF2
 18303                           intcon2	equ	0xFF1
 18304                           intcon3	equ	0xFF0
 18305                           indf0	equ	0xFEF
 18306                           postinc0	equ	0xFEE
 18307                           plusw0	equ	0xFEB
 18308                           fsr0h	equ	0xFEA
 18309                           fsr0l	equ	0xFE9
 18310                           wreg	equ	0xFE8
 18311                           indf1	equ	0xFE7
 18312                           postinc1	equ	0xFE6
 18313                           postdec1	equ	0xFE5
 18314                           fsr1h	equ	0xFE2
 18315                           fsr1l	equ	0xFE1
 18316                           indf2	equ	0xFDF
 18317                           postinc2	equ	0xFDE
 18318                           postdec2	equ	0xFDD
 18319                           plusw2	equ	0xFDB
 18320                           fsr2h	equ	0xFDA
 18321                           fsr2l	equ	0xFD9
 18322                           status	equ	0xFD8
 18323                           
 18324 ;; *************** function _atoi *****************
 18325 ;; Defined at:
 18326 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18327 ;; Parameters:    Size  Location     Type
 18328 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18329 ;;		 -> Terminal@Len(4), 
 18330 ;; Auto vars:     Size  Location     Type
 18331 ;;  a               2   40[BANK0 ] int 
 18332 ;;  sign            1   39[BANK0 ] unsigned char 
 18333 ;; Return value:  Size  Location     Type
 18334 ;;                  2   35[BANK0 ] int 
 18335 ;; Registers used:
 18336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18337 ;; Tracked objects:
 18338 ;;		On entry : 0/0
 18339 ;;		On exit  : 0/0
 18340 ;;		Unchanged: 0/0
 18341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18343 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18345 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18346 ;;Total ram usage:        7 bytes
 18347 ;; Hardware stack levels used:    1
 18348 ;; Hardware stack levels required when called:   12
 18349 ;; This function calls:
 18350 ;;		___wmul
 18351 ;;		_isdigit
 18352 ;; This function is called by:
 18353 ;;		_Terminal
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357                           	psect	text76
 18358  003878                     __ptext76:
 18359                           	opt stack 0
 18360  003878                     _atoi:
 18361                           	opt stack 13
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;incstack = 0
 18365  003878  D003               	goto	l3098
 18366  00387A  0100               	movlb	0	; () banked
 18367  00387C  4B83               	infsnz	atoi@s& (0+255),f,b
 18368  00387E  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18369  003880                     l3098:
 18370                           
 18371                           ; BSR set to: 0
 18372  003880  C083  FFD9         	movff	atoi@s,fsr2l
 18373  003884  C084  FFDA         	movff	atoi@s+1,fsr2h
 18374  003888  0E20               	movlw	32
 18375  00388A  18DE               	xorwf	postinc2,w,c
 18376  00388C  B4D8               	btfsc	status,2,c
 18377  00388E  D7F5               	goto	l3099
 18378  003890  C083  FFD9         	movff	atoi@s,fsr2l
 18379  003894  C084  FFDA         	movff	atoi@s+1,fsr2h
 18380  003898  0E09               	movlw	9
 18381  00389A  18DE               	xorwf	postinc2,w,c
 18382  00389C  B4D8               	btfsc	status,2,c
 18383  00389E  D7ED               	goto	l3099
 18384  0038A0  0E00               	movlw	0
 18385  0038A2  0100               	movlb	0	; () banked
 18386  0038A4  6F89               	movwf	(atoi@a+1)& (0+255),b
 18387  0038A6  0E00               	movlw	0
 18388  0038A8  6F88               	movwf	atoi@a& (0+255),b
 18389  0038AA  0E00               	movlw	0
 18390  0038AC  6F87               	movwf	atoi@sign& (0+255),b
 18391                           
 18392                           ; BSR set to: 0
 18393  0038AE  C083  FFD9         	movff	atoi@s,fsr2l
 18394  0038B2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18395  0038B6  0E2D               	movlw	45
 18396  0038B8  18DE               	xorwf	postinc2,w,c
 18397  0038BA  A4D8               	btfss	status,2,c
 18398  0038BC  D002               	goto	l3101
 18399                           
 18400                           ; BSR set to: 0
 18401  0038BE  2B87               	incf	atoi@sign& (0+255),f,b
 18402  0038C0  D026               	goto	l14079
 18403  0038C2                     l3101:
 18404                           
 18405                           ; BSR set to: 0
 18406                           
 18407                           ; BSR set to: 0
 18408  0038C2  C083  FFD9         	movff	atoi@s,fsr2l
 18409  0038C6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18410  0038CA  0E2B               	movlw	43
 18411  0038CC  18DE               	xorwf	postinc2,w,c
 18412  0038CE  A4D8               	btfss	status,2,c
 18413  0038D0  D020               	goto	l3104
 18414  0038D2  D01D               	goto	l14079
 18415  0038D4                     
 18416                           ; BSR set to: 0
 18417  0038D4  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18418  0038D8  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18419  0038DC  0E00               	movlw	0
 18420  0038DE  0100               	movlb	0	; () banked
 18421  0038E0  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18422  0038E2  0E0A               	movlw	10
 18423  0038E4  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18424  0038E6  EC87  F033         	call	___wmul	;wreg free
 18425  0038EA  C083  FFD9         	movff	atoi@s,fsr2l
 18426  0038EE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18427  0038F2  50DF               	movf	indf2,w,c
 18428  0038F4  0100               	movlb	0	; () banked
 18429  0038F6  6F85               	movwf	??_atoi& (0+255),b
 18430  0038F8  6B86               	clrf	(??_atoi+1)& (0+255),b
 18431  0038FA  517D               	movf	?___wmul& (0+255),w,b
 18432  0038FC  2785               	addwf	??_atoi& (0+255),f,b
 18433  0038FE  517E               	movf	(?___wmul+1)& (0+255),w,b
 18434  003900  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18435  003902  0ED0               	movlw	208
 18436  003904  2585               	addwf	??_atoi& (0+255),w,b
 18437  003906  6F88               	movwf	atoi@a& (0+255),b
 18438  003908  0EFF               	movlw	255
 18439  00390A  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18440  00390C  6F89               	movwf	(atoi@a+1)& (0+255),b
 18441  00390E                     l14079:
 18442                           
 18443                           ; BSR set to: 0
 18444  00390E  4B83               	infsnz	atoi@s& (0+255),f,b
 18445  003910  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18446  003912                     l3104:
 18447                           
 18448                           ; BSR set to: 0
 18449                           
 18450                           ; BSR set to: 0
 18451  003912  C083  FFD9         	movff	atoi@s,fsr2l
 18452  003916  C084  FFDA         	movff	atoi@s+1,fsr2h
 18453  00391A  50DF               	movf	indf2,w,c
 18454  00391C  EC3A  F034         	call	_isdigit
 18455  003920  B0D8               	btfsc	status,0,c
 18456  003922  D7D8               	goto	l3105
 18457  003924  0100               	movlb	0	; () banked
 18458  003926  5187               	movf	atoi@sign& (0+255),w,b
 18459  003928  B4D8               	btfsc	status,2,c
 18460  00392A  D00D               	goto	l3107
 18461                           
 18462                           ; BSR set to: 0
 18463  00392C  C088  F085         	movff	atoi@a,??_atoi
 18464  003930  C089  F086         	movff	atoi@a+1,??_atoi+1
 18465  003934  1F85               	comf	??_atoi& (0+255),f,b
 18466  003936  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18467  003938  4B85               	infsnz	??_atoi& (0+255),f,b
 18468  00393A  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18469  00393C  C085  F083         	movff	??_atoi,?_atoi
 18470  003940  C086  F084         	movff	??_atoi+1,?_atoi+1
 18471  003944  0012               	return	
 18472  003946                     l3107:
 18473                           
 18474                           ; BSR set to: 0
 18475  003946  C088  F083         	movff	atoi@a,?_atoi
 18476  00394A  C089  F084         	movff	atoi@a+1,?_atoi+1
 18477                           
 18478                           ; BSR set to: 0
 18479  00394E  0012               	return		;funcret
 18480  003950                     __end_of_atoi:
 18481                           	opt stack 0
 18482                           tosu	equ	0xFFF
 18483                           tosh	equ	0xFFE
 18484                           tosl	equ	0xFFD
 18485                           pclath	equ	0xFFA
 18486                           tblptru	equ	0xFF8
 18487                           tblptrh	equ	0xFF7
 18488                           tblptrl	equ	0xFF6
 18489                           tablat	equ	0xFF5
 18490                           prodh	equ	0xFF4
 18491                           prodl	equ	0xFF3
 18492                           intcon	equ	0xFF2
 18493                           intcon2	equ	0xFF1
 18494                           intcon3	equ	0xFF0
 18495                           indf0	equ	0xFEF
 18496                           postinc0	equ	0xFEE
 18497                           plusw0	equ	0xFEB
 18498                           fsr0h	equ	0xFEA
 18499                           fsr0l	equ	0xFE9
 18500                           wreg	equ	0xFE8
 18501                           indf1	equ	0xFE7
 18502                           postinc1	equ	0xFE6
 18503                           postdec1	equ	0xFE5
 18504                           fsr1h	equ	0xFE2
 18505                           fsr1l	equ	0xFE1
 18506                           indf2	equ	0xFDF
 18507                           postinc2	equ	0xFDE
 18508                           postdec2	equ	0xFDD
 18509                           plusw2	equ	0xFDB
 18510                           fsr2h	equ	0xFDA
 18511                           fsr2l	equ	0xFD9
 18512                           status	equ	0xFD8
 18513                           
 18514 ;; *************** function _isdigit *****************
 18515 ;; Defined at:
 18516 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18517 ;; Parameters:    Size  Location     Type
 18518 ;;  c               1    wreg     unsigned char 
 18519 ;; Auto vars:     Size  Location     Type
 18520 ;;  c               1   31[BANK0 ] unsigned char 
 18521 ;; Return value:  Size  Location     Type
 18522 ;;		None               void
 18523 ;; Registers used:
 18524 ;;		wreg, status,2, status,0
 18525 ;; Tracked objects:
 18526 ;;		On entry : 0/0
 18527 ;;		On exit  : 0/0
 18528 ;;		Unchanged: 0/0
 18529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18531 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18532 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18533 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18534 ;;Total ram usage:        3 bytes
 18535 ;; Hardware stack levels used:    1
 18536 ;; Hardware stack levels required when called:   11
 18537 ;; This function calls:
 18538 ;;		Nothing
 18539 ;; This function is called by:
 18540 ;;		_atoi
 18541 ;;		_strtol
 18542 ;;		_xtoi
 18543 ;;		_isxdigit
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547                           	psect	text77
 18548  006874                     __ptext77:
 18549                           	opt stack 0
 18550  006874                     _isdigit:
 18551                           	opt stack 12
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;incstack = 0
 18555                           ;isdigit@c stored from wreg
 18556  006874  0100               	movlb	0	; () banked
 18557  006876  6F7F               	movwf	isdigit@c& (0+255),b
 18558  006878  0E00               	movlw	0
 18559  00687A  0100               	movlb	0	; () banked
 18560  00687C  6F7E               	movwf	_isdigit$6441& (0+255),b
 18561                           
 18562                           ; BSR set to: 0
 18563  00687E  0E3A               	movlw	58
 18564  006880  617F               	cpfslt	isdigit@c& (0+255),b
 18565  006882  D005               	goto	l3279
 18566                           
 18567                           ; BSR set to: 0
 18568  006884  0E2F               	movlw	47
 18569  006886  657F               	cpfsgt	isdigit@c& (0+255),b
 18570  006888  D002               	goto	l3279
 18571                           
 18572                           ; BSR set to: 0
 18573  00688A  0E01               	movlw	1
 18574  00688C  6F7E               	movwf	_isdigit$6441& (0+255),b
 18575  00688E                     l3279:
 18576                           
 18577                           ; BSR set to: 0
 18578                           
 18579                           ; BSR set to: 0
 18580  00688E  C07E  F07D         	movff	_isdigit$6441,??_isdigit
 18581  006892  317D               	rrcf	??_isdigit& (0+255),w,b
 18582  006894  0012               	return	
 18583  006896                     __end_of_isdigit:
 18584                           	opt stack 0
 18585                           tosu	equ	0xFFF
 18586                           tosh	equ	0xFFE
 18587                           tosl	equ	0xFFD
 18588                           pclath	equ	0xFFA
 18589                           tblptru	equ	0xFF8
 18590                           tblptrh	equ	0xFF7
 18591                           tblptrl	equ	0xFF6
 18592                           tablat	equ	0xFF5
 18593                           prodh	equ	0xFF4
 18594                           prodl	equ	0xFF3
 18595                           intcon	equ	0xFF2
 18596                           intcon2	equ	0xFF1
 18597                           intcon3	equ	0xFF0
 18598                           indf0	equ	0xFEF
 18599                           postinc0	equ	0xFEE
 18600                           plusw0	equ	0xFEB
 18601                           fsr0h	equ	0xFEA
 18602                           fsr0l	equ	0xFE9
 18603                           wreg	equ	0xFE8
 18604                           indf1	equ	0xFE7
 18605                           postinc1	equ	0xFE6
 18606                           postdec1	equ	0xFE5
 18607                           fsr1h	equ	0xFE2
 18608                           fsr1l	equ	0xFE1
 18609                           indf2	equ	0xFDF
 18610                           postinc2	equ	0xFDE
 18611                           postdec2	equ	0xFDD
 18612                           plusw2	equ	0xFDB
 18613                           fsr2h	equ	0xFDA
 18614                           fsr2l	equ	0xFD9
 18615                           status	equ	0xFD8
 18616                           
 18617 ;; *************** function _Rtcm_SetRtccDate *****************
 18618 ;; Defined at:
 18619 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18620 ;; Parameters:    Size  Location     Type
 18621 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18622 ;; Auto vars:     Size  Location     Type
 18623 ;;		None
 18624 ;; Return value:  Size  Location     Type
 18625 ;;                  1    wreg      void 
 18626 ;; Registers used:
 18627 ;;		wreg, status,2, status,0, cstack
 18628 ;; Tracked objects:
 18629 ;;		On entry : 0/0
 18630 ;;		On exit  : 0/0
 18631 ;;		Unchanged: 0/0
 18632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18633 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18636 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18637 ;;Total ram usage:        8 bytes
 18638 ;; Hardware stack levels used:    1
 18639 ;; Hardware stack levels required when called:   13
 18640 ;; This function calls:
 18641 ;;		_Rtcc_LockRtc
 18642 ;;		_Rtcc_SetRtccValue
 18643 ;;		_Rtcc_UnlockRtc
 18644 ;; This function is called by:
 18645 ;;		_Rtcm_MainTask
 18646 ;; This function uses a non-reentrant model
 18647 ;;
 18648                           
 18649                           	psect	text78
 18650  005BCC                     __ptext78:
 18651                           	opt stack 0
 18652  005BCC                     _Rtcm_SetRtccDate:
 18653                           	opt stack 14
 18654                           
 18655                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18656                           
 18657                           ; BSR set to: 0
 18658                           ;incstack = 0
 18659  005BCC  EC7E  F035         	call	_Rtcc_UnlockRtc	;wreg free
 18660                           
 18661                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18662  005BD0  0100               	movlb	0	; () banked
 18663  005BD2  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18664  005BD4  0F30               	addlw	48
 18665  005BD6  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18666  005BD8  0E00               	movlw	0
 18667  005BDA  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18668                           
 18669                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18670  005BDE  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18671  005BE2  0E01               	movlw	1
 18672  005BE4  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18673                           
 18674                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18675  005BE8  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18676  005BEC  0E02               	movlw	2
 18677  005BEE  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18678                           
 18679                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18680  005BF2  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18681  005BF6  0E03               	movlw	3
 18682  005BF8  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18683                           
 18684                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18685  005BFC  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18686  005C00  0E04               	movlw	4
 18687  005C02  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18688                           
 18689                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18690  005C06  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18691  005C0A  0E05               	movlw	5
 18692  005C0C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18693                           
 18694                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18695  005C10  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18696  005C14  0E06               	movlw	6
 18697  005C16  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18698                           
 18699                           ;rtcm.c: 191: Rtcc_LockRtc();
 18700  005C1A  EC86  F035         	call	_Rtcc_LockRtc	;wreg free
 18701  005C1E  0012               	return		;funcret
 18702  005C20                     __end_of_Rtcm_SetRtccDate:
 18703                           	opt stack 0
 18704                           tosu	equ	0xFFF
 18705                           tosh	equ	0xFFE
 18706                           tosl	equ	0xFFD
 18707                           pclath	equ	0xFFA
 18708                           tblptru	equ	0xFF8
 18709                           tblptrh	equ	0xFF7
 18710                           tblptrl	equ	0xFF6
 18711                           tablat	equ	0xFF5
 18712                           prodh	equ	0xFF4
 18713                           prodl	equ	0xFF3
 18714                           intcon	equ	0xFF2
 18715                           intcon2	equ	0xFF1
 18716                           intcon3	equ	0xFF0
 18717                           indf0	equ	0xFEF
 18718                           postinc0	equ	0xFEE
 18719                           plusw0	equ	0xFEB
 18720                           fsr0h	equ	0xFEA
 18721                           fsr0l	equ	0xFE9
 18722                           wreg	equ	0xFE8
 18723                           indf1	equ	0xFE7
 18724                           postinc1	equ	0xFE6
 18725                           postdec1	equ	0xFE5
 18726                           fsr1h	equ	0xFE2
 18727                           fsr1l	equ	0xFE1
 18728                           indf2	equ	0xFDF
 18729                           postinc2	equ	0xFDE
 18730                           postdec2	equ	0xFDD
 18731                           plusw2	equ	0xFDB
 18732                           fsr2h	equ	0xFDA
 18733                           fsr2l	equ	0xFD9
 18734                           status	equ	0xFD8
 18735                           
 18736 ;; *************** function _Rtcc_UnlockRtc *****************
 18737 ;; Defined at:
 18738 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18739 ;; Parameters:    Size  Location     Type
 18740 ;;		None
 18741 ;; Auto vars:     Size  Location     Type
 18742 ;;		None
 18743 ;; Return value:  Size  Location     Type
 18744 ;;                  1    wreg      void 
 18745 ;; Registers used:
 18746 ;;		None
 18747 ;; Tracked objects:
 18748 ;;		On entry : 0/0
 18749 ;;		On exit  : 0/0
 18750 ;;		Unchanged: 0/0
 18751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18756 ;;Total ram usage:        0 bytes
 18757 ;; Hardware stack levels used:    1
 18758 ;; Hardware stack levels required when called:   11
 18759 ;; This function calls:
 18760 ;;		Nothing
 18761 ;; This function is called by:
 18762 ;;		_Rtcm_MainTask
 18763 ;;		_Rtcm_SetRtccDate
 18764 ;;		_Rtcm_SetRtccAlarm
 18765 ;; This function uses a non-reentrant model
 18766 ;;
 18767                           
 18768                           	psect	text79
 18769  006AFC                     __ptext79:
 18770                           	opt stack 0
 18771  006AFC                     _Rtcc_UnlockRtc:
 18772                           	opt stack 15
 18773                           
 18774                           ;incstack = 0
 18775  006AFC  010F               	movlb	15	;# 
 18776  006AFE  0E55               	movlw	85	;# 
 18777  006B00  6EA7               	movwf	4007,c	;# 
 18778  006B02  0EAA               	movlw	170	;# 
 18779  006B04  6EA7               	movwf	4007,c	;# 
 18780                           
 18781                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18782  006B06  010F               	movlb	15	; () banked
 18783  006B08  8B3F               	bsf	63,5,b	;volatile
 18784                           
 18785                           ; BSR set to: 15
 18786  006B0A  0012               	return		;funcret
 18787  006B0C                     __end_of_Rtcc_UnlockRtc:
 18788                           	opt stack 0
 18789                           tosu	equ	0xFFF
 18790                           tosh	equ	0xFFE
 18791                           tosl	equ	0xFFD
 18792                           pclath	equ	0xFFA
 18793                           tblptru	equ	0xFF8
 18794                           tblptrh	equ	0xFF7
 18795                           tblptrl	equ	0xFF6
 18796                           tablat	equ	0xFF5
 18797                           prodh	equ	0xFF4
 18798                           prodl	equ	0xFF3
 18799                           intcon	equ	0xFF2
 18800                           intcon2	equ	0xFF1
 18801                           intcon3	equ	0xFF0
 18802                           indf0	equ	0xFEF
 18803                           postinc0	equ	0xFEE
 18804                           plusw0	equ	0xFEB
 18805                           fsr0h	equ	0xFEA
 18806                           fsr0l	equ	0xFE9
 18807                           wreg	equ	0xFE8
 18808                           indf1	equ	0xFE7
 18809                           postinc1	equ	0xFE6
 18810                           postdec1	equ	0xFE5
 18811                           fsr1h	equ	0xFE2
 18812                           fsr1l	equ	0xFE1
 18813                           indf2	equ	0xFDF
 18814                           postinc2	equ	0xFDE
 18815                           postdec2	equ	0xFDD
 18816                           plusw2	equ	0xFDB
 18817                           fsr2h	equ	0xFDA
 18818                           fsr2l	equ	0xFD9
 18819                           status	equ	0xFD8
 18820                           
 18821 ;; *************** function _Rtcc_SetRtccValue *****************
 18822 ;; Defined at:
 18823 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;  RtccPtrVal      1    wreg     enum E7757
 18826 ;;  Value           1   37[BANK0 ] unsigned char 
 18827 ;; Auto vars:     Size  Location     Type
 18828 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18829 ;; Return value:  Size  Location     Type
 18830 ;;                  1    wreg      void 
 18831 ;; Registers used:
 18832 ;;		wreg, status,2, status,0, cstack
 18833 ;; Tracked objects:
 18834 ;;		On entry : 0/0
 18835 ;;		On exit  : 0/0
 18836 ;;		Unchanged: 0/0
 18837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18838 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18840 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18841 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18842 ;;Total ram usage:        4 bytes
 18843 ;; Hardware stack levels used:    1
 18844 ;; Hardware stack levels required when called:   12
 18845 ;; This function calls:
 18846 ;;		___awdiv
 18847 ;;		___awmod
 18848 ;; This function is called by:
 18849 ;;		_Rtcm_SetRtccDate
 18850 ;; This function uses a non-reentrant model
 18851 ;;
 18852                           
 18853                           	psect	text80
 18854  0015EE                     __ptext80:
 18855                           	opt stack 0
 18856  0015EE                     _Rtcc_SetRtccValue:
 18857                           	opt stack 14
 18858                           
 18859                           ; BSR set to: 15
 18860                           ;incstack = 0
 18861                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18862  0015EE  0100               	movlb	0	; () banked
 18863  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18864                           
 18865                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18866  0015F2  D0FC               	goto	l441
 18867  0015F4                     l442:
 18868                           
 18869                           ; BSR set to: 0
 18870                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18871  0015F4  010F               	movlb	15	; () banked
 18872  0015F6  833F               	bsf	63,1,b	;volatile
 18873                           
 18874                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18875  0015F8  813F               	bsf	63,0,b	;volatile
 18876                           
 18877                           ; BSR set to: 15
 18878                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18879  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18880  0015FE  0100               	movlb	0	; () banked
 18881  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18882  001602  0E00               	movlw	0
 18883  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18884  001606  0E0A               	movlw	10
 18885  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18886  00160A  EC0A  F02A         	call	___awmod	;wreg free
 18887  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18888  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18889  001616  0E0F               	movlw	15
 18890  001618  0100               	movlb	0	; () banked
 18891  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18892  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18893  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18894  001622  0E00               	movlw	0
 18895  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18896  001626  0E0A               	movlw	10
 18897  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18898  00162A  EC44  F029         	call	___awdiv	;wreg free
 18899  00162E  0100               	movlb	0	; () banked
 18900  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18901  001632  0BF0               	andlw	240
 18902  001634  0BF0               	andlw	240
 18903  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18904  001638  6E98               	movwf	3992,c	;volatile
 18905                           
 18906                           ;rtcc_drv.c: 393: break;
 18907  00163A  0012               	return	
 18908  00163C                     l444:
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18912  00163C  010F               	movlb	15	; () banked
 18913  00163E  833F               	bsf	63,1,b	;volatile
 18914                           
 18915                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18916  001640  913F               	bcf	63,0,b	;volatile
 18917                           
 18918                           ; BSR set to: 15
 18919                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18920  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18921  001646  0100               	movlb	0	; () banked
 18922  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18923  00164A  0E00               	movlw	0
 18924  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18925  00164E  0E0A               	movlw	10
 18926  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18927  001652  EC0A  F02A         	call	___awmod	;wreg free
 18928  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18929  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18930  00165E  0E0F               	movlw	15
 18931  001660  0100               	movlb	0	; () banked
 18932  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18933  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18934  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18935  00166A  0E00               	movlw	0
 18936  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18937  00166E  0E0A               	movlw	10
 18938  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18939  001672  EC44  F029         	call	___awdiv	;wreg free
 18940  001676  0100               	movlb	0	; () banked
 18941  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18942  00167A  0BF0               	andlw	240
 18943  00167C  0BF0               	andlw	240
 18944  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18945  001680  6E99               	movwf	3993,c	;volatile
 18946                           
 18947                           ;rtcc_drv.c: 401: break;
 18948  001682  0012               	return	
 18949  001684                     l445:
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18953  001684  010F               	movlb	15	; () banked
 18954  001686  833F               	bsf	63,1,b	;volatile
 18955                           
 18956                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18957  001688  913F               	bcf	63,0,b	;volatile
 18958                           
 18959                           ; BSR set to: 15
 18960                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18961  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18962  00168E  0100               	movlb	0	; () banked
 18963  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18964  001692  0E00               	movlw	0
 18965  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18966  001696  0E0A               	movlw	10
 18967  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18968  00169A  EC0A  F02A         	call	___awmod	;wreg free
 18969  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18970  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18971  0016A6  0E0F               	movlw	15
 18972  0016A8  0100               	movlb	0	; () banked
 18973  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18974  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18975  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18976  0016B2  0E00               	movlw	0
 18977  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18978  0016B6  0E0A               	movlw	10
 18979  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18980  0016BA  EC44  F029         	call	___awdiv	;wreg free
 18981  0016BE  0100               	movlb	0	; () banked
 18982  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18983  0016C2  0BF0               	andlw	240
 18984  0016C4  0BF0               	andlw	240
 18985  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18986  0016C8  6E98               	movwf	3992,c	;volatile
 18987                           
 18988                           ;rtcc_drv.c: 409: break;
 18989  0016CA  0012               	return	
 18990  0016CC                     l446:
 18991                           
 18992                           ; BSR set to: 0
 18993                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18994  0016CC  010F               	movlb	15	; () banked
 18995  0016CE  933F               	bcf	63,1,b	;volatile
 18996                           
 18997                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18998  0016D0  813F               	bsf	63,0,b	;volatile
 18999                           
 19000                           ; BSR set to: 15
 19001                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19002  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19003  0016D6  0100               	movlb	0	; () banked
 19004  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19005  0016DA  0E00               	movlw	0
 19006  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19007  0016DE  0E0A               	movlw	10
 19008  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19009  0016E2  EC0A  F02A         	call	___awmod	;wreg free
 19010  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19011  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19012  0016EE  0E0F               	movlw	15
 19013  0016F0  0100               	movlb	0	; () banked
 19014  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19015  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19016  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19017  0016FA  0E00               	movlw	0
 19018  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19019  0016FE  0E0A               	movlw	10
 19020  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19021  001702  EC44  F029         	call	___awdiv	;wreg free
 19022  001706  0100               	movlb	0	; () banked
 19023  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19024  00170A  0BF0               	andlw	240
 19025  00170C  0BF0               	andlw	240
 19026  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19027  001710  6E99               	movwf	3993,c	;volatile
 19028                           
 19029                           ;rtcc_drv.c: 417: break;
 19030  001712  0012               	return	
 19031  001714                     l447:
 19032                           
 19033                           ; BSR set to: 0
 19034                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19035  001714  010F               	movlb	15	; () banked
 19036  001716  933F               	bcf	63,1,b	;volatile
 19037                           
 19038                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19039  001718  813F               	bsf	63,0,b	;volatile
 19040                           
 19041                           ; BSR set to: 15
 19042                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19043  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19044  00171E  0100               	movlb	0	; () banked
 19045  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19046  001722  0E00               	movlw	0
 19047  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19048  001726  0E0A               	movlw	10
 19049  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19050  00172A  EC0A  F02A         	call	___awmod	;wreg free
 19051  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19052  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19053  001736  0E0F               	movlw	15
 19054  001738  0100               	movlb	0	; () banked
 19055  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19056  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19057  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19058  001742  0E00               	movlw	0
 19059  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19060  001746  0E0A               	movlw	10
 19061  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19062  00174A  EC44  F029         	call	___awdiv	;wreg free
 19063  00174E  0100               	movlb	0	; () banked
 19064  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19065  001752  0BF0               	andlw	240
 19066  001754  0BF0               	andlw	240
 19067  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19068  001758  6E98               	movwf	3992,c	;volatile
 19069                           
 19070                           ;rtcc_drv.c: 425: break;
 19071  00175A  0012               	return	
 19072  00175C                     l448:
 19073                           
 19074                           ; BSR set to: 0
 19075                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19076  00175C  010F               	movlb	15	; () banked
 19077  00175E  933F               	bcf	63,1,b	;volatile
 19078                           
 19079                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19080  001760  913F               	bcf	63,0,b	;volatile
 19081                           
 19082                           ; BSR set to: 15
 19083                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19084  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19085  001766  0100               	movlb	0	; () banked
 19086  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19087  00176A  0E00               	movlw	0
 19088  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19089  00176E  0E0A               	movlw	10
 19090  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19091  001772  EC0A  F02A         	call	___awmod	;wreg free
 19092  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19093  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19094  00177E  0E0F               	movlw	15
 19095  001780  0100               	movlb	0	; () banked
 19096  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19097  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19098  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19099  00178A  0E00               	movlw	0
 19100  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19101  00178E  0E0A               	movlw	10
 19102  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19103  001792  EC44  F029         	call	___awdiv	;wreg free
 19104  001796  0100               	movlb	0	; () banked
 19105  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19106  00179A  0BF0               	andlw	240
 19107  00179C  0BF0               	andlw	240
 19108  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19109  0017A0  6E99               	movwf	3993,c	;volatile
 19110                           
 19111                           ;rtcc_drv.c: 433: break;
 19112  0017A2  0012               	return	
 19113  0017A4                     l449:
 19114                           
 19115                           ; BSR set to: 0
 19116                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19117  0017A4  010F               	movlb	15	; () banked
 19118  0017A6  933F               	bcf	63,1,b	;volatile
 19119                           
 19120                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19121  0017A8  913F               	bcf	63,0,b	;volatile
 19122                           
 19123                           ; BSR set to: 15
 19124                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19125  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19126  0017AE  0100               	movlb	0	; () banked
 19127  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19128  0017B2  0E00               	movlw	0
 19129  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19130  0017B6  0E0A               	movlw	10
 19131  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19132  0017BA  EC0A  F02A         	call	___awmod	;wreg free
 19133  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19134  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19135  0017C6  0E0F               	movlw	15
 19136  0017C8  0100               	movlb	0	; () banked
 19137  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19138  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19139  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19140  0017D2  0E00               	movlw	0
 19141  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19142  0017D6  0E0A               	movlw	10
 19143  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19144  0017DA  EC44  F029         	call	___awdiv	;wreg free
 19145  0017DE  0100               	movlb	0	; () banked
 19146  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19147  0017E2  0BF0               	andlw	240
 19148  0017E4  0BF0               	andlw	240
 19149  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19150  0017E8  6E98               	movwf	3992,c	;volatile
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;rtcc_drv.c: 445: }
 19154                           
 19155                           ; BSR set to: 0
 19156                           ;rtcc_drv.c: 444: break;
 19157                           
 19158                           ;rtcc_drv.c: 443: default:
 19159                           
 19160                           ;rtcc_drv.c: 441: break;
 19161  0017EA  0012               	return	
 19162  0017EC                     l441:
 19163                           
 19164                           ; BSR set to: 0
 19165  0017EC  0100               	movlb	0	; () banked
 19166  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19167                           
 19168                           ; Switch size 1, requested type "space"
 19169                           ; Number of cases is 7, Range of values is 0 to 6
 19170                           ; switch strategies available:
 19171                           ; Name         Instructions Cycles
 19172                           ; simple_byte           22    12 (average)
 19173                           ;	Chosen strategy is simple_byte
 19174  0017F0  0A00               	xorlw	0	; case 0
 19175  0017F2  B4D8               	btfsc	status,2,c
 19176  0017F4  D6FF               	goto	l442
 19177  0017F6  0A01               	xorlw	1	; case 1
 19178  0017F8  B4D8               	btfsc	status,2,c
 19179  0017FA  D720               	goto	l444
 19180  0017FC  0A03               	xorlw	3	; case 2
 19181  0017FE  B4D8               	btfsc	status,2,c
 19182  001800  D741               	goto	l445
 19183  001802  0A01               	xorlw	1	; case 3
 19184  001804  B4D8               	btfsc	status,2,c
 19185  001806  D762               	goto	l446
 19186  001808  0A07               	xorlw	7	; case 4
 19187  00180A  B4D8               	btfsc	status,2,c
 19188  00180C  D783               	goto	l447
 19189  00180E  0A01               	xorlw	1	; case 5
 19190  001810  B4D8               	btfsc	status,2,c
 19191  001812  D7A4               	goto	l448
 19192  001814  0A03               	xorlw	3	; case 6
 19193  001816  A4D8               	btfss	status,2,c
 19194  001818  0012               	return	
 19195  00181A  D7C4               	goto	l449
 19196  00181C                     __end_of_Rtcc_SetRtccValue:
 19197                           	opt stack 0
 19198                           tosu	equ	0xFFF
 19199                           tosh	equ	0xFFE
 19200                           tosl	equ	0xFFD
 19201                           pclath	equ	0xFFA
 19202                           tblptru	equ	0xFF8
 19203                           tblptrh	equ	0xFF7
 19204                           tblptrl	equ	0xFF6
 19205                           tablat	equ	0xFF5
 19206                           prodh	equ	0xFF4
 19207                           prodl	equ	0xFF3
 19208                           intcon	equ	0xFF2
 19209                           intcon2	equ	0xFF1
 19210                           intcon3	equ	0xFF0
 19211                           indf0	equ	0xFEF
 19212                           postinc0	equ	0xFEE
 19213                           plusw0	equ	0xFEB
 19214                           fsr0h	equ	0xFEA
 19215                           fsr0l	equ	0xFE9
 19216                           wreg	equ	0xFE8
 19217                           indf1	equ	0xFE7
 19218                           postinc1	equ	0xFE6
 19219                           postdec1	equ	0xFE5
 19220                           fsr1h	equ	0xFE2
 19221                           fsr1l	equ	0xFE1
 19222                           indf2	equ	0xFDF
 19223                           postinc2	equ	0xFDE
 19224                           postdec2	equ	0xFDD
 19225                           plusw2	equ	0xFDB
 19226                           fsr2h	equ	0xFDA
 19227                           fsr2l	equ	0xFD9
 19228                           status	equ	0xFD8
 19229                           
 19230 ;; *************** function ___awmod *****************
 19231 ;; Defined at:
 19232 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19233 ;; Parameters:    Size  Location     Type
 19234 ;;  dividend        2   29[BANK0 ] int 
 19235 ;;  divisor         2   31[BANK0 ] int 
 19236 ;; Auto vars:     Size  Location     Type
 19237 ;;  sign            1   34[BANK0 ] unsigned char 
 19238 ;;  counter         1   33[BANK0 ] unsigned char 
 19239 ;; Return value:  Size  Location     Type
 19240 ;;                  2   29[BANK0 ] int 
 19241 ;; Registers used:
 19242 ;;		wreg, status,2, status,0
 19243 ;; Tracked objects:
 19244 ;;		On entry : 0/0
 19245 ;;		On exit  : 0/0
 19246 ;;		Unchanged: 0/0
 19247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19248 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19252 ;;Total ram usage:        6 bytes
 19253 ;; Hardware stack levels used:    1
 19254 ;; Hardware stack levels required when called:   11
 19255 ;; This function calls:
 19256 ;;		Nothing
 19257 ;; This function is called by:
 19258 ;;		_Rtcc_SetRtccValue
 19259 ;;		_Rtcc_SetRtccAlarm
 19260 ;; This function uses a non-reentrant model
 19261 ;;
 19262                           
 19263                           	psect	text81
 19264  005414                     __ptext81:
 19265                           	opt stack 0
 19266  005414                     ___awmod:
 19267                           	opt stack 14
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;incstack = 0
 19271  005414  0E00               	movlw	0
 19272  005416  0100               	movlb	0	; () banked
 19273  005418  6F82               	movwf	___awmod@sign& (0+255),b
 19274                           
 19275                           ; BSR set to: 0
 19276  00541A  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19277  00541C  D006               	goto	l3130
 19278                           
 19279                           ; BSR set to: 0
 19280  00541E  6D7D               	negf	___awmod@dividend& (0+255),b
 19281  005420  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19282  005422  B0D8               	btfsc	status,0,c
 19283  005424  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19284                           
 19285                           ; BSR set to: 0
 19286  005426  0E01               	movlw	1
 19287  005428  6F82               	movwf	___awmod@sign& (0+255),b
 19288  00542A                     l3130:
 19289                           
 19290                           ; BSR set to: 0
 19291                           
 19292                           ; BSR set to: 0
 19293  00542A  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19294  00542C  D004               	goto	l3131
 19295                           
 19296                           ; BSR set to: 0
 19297  00542E  6D7F               	negf	___awmod@divisor& (0+255),b
 19298  005430  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19299  005432  B0D8               	btfsc	status,0,c
 19300  005434  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19301  005436                     l3131:
 19302                           
 19303                           ; BSR set to: 0
 19304                           
 19305                           ; BSR set to: 0
 19306  005436  517F               	movf	___awmod@divisor& (0+255),w,b
 19307  005438  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19308  00543A  B4D8               	btfsc	status,2,c
 19309  00543C  D018               	goto	l3138
 19310                           
 19311                           ; BSR set to: 0
 19312  00543E  0E01               	movlw	1
 19313  005440  6F81               	movwf	___awmod@counter& (0+255),b
 19314  005442  D004               	goto	l3133
 19315  005444                     
 19316                           ; BSR set to: 0
 19317                           
 19318                           ; BSR set to: 0
 19319  005444  90D8               	bcf	status,0,c
 19320  005446  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19321  005448  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19322  00544A  2B81               	incf	___awmod@counter& (0+255),f,b
 19323  00544C                     l3133:
 19324                           
 19325                           ; BSR set to: 0
 19326                           
 19327                           ; BSR set to: 0
 19328  00544C  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19329  00544E  D7FA               	goto	l3134
 19330  005450                     u13510:
 19331                           
 19332                           ; BSR set to: 0
 19333                           
 19334                           ; BSR set to: 0
 19335                           
 19336                           ; BSR set to: 0
 19337  005450  517F               	movf	___awmod@divisor& (0+255),w,b
 19338  005452  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19339  005454  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19340  005456  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19341  005458  A0D8               	btfss	status,0,c
 19342  00545A  D004               	goto	l3137
 19343                           
 19344                           ; BSR set to: 0
 19345  00545C  517F               	movf	___awmod@divisor& (0+255),w,b
 19346  00545E  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19347  005460  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19348  005462  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19349  005464                     l3137:
 19350                           
 19351                           ; BSR set to: 0
 19352                           
 19353                           ; BSR set to: 0
 19354  005464  90D8               	bcf	status,0,c
 19355  005466  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19356  005468  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19357                           
 19358                           ; BSR set to: 0
 19359  00546A  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19360  00546C  D7F1               	goto	u13510
 19361  00546E                     l3138:
 19362                           
 19363                           ; BSR set to: 0
 19364                           
 19365                           ; BSR set to: 0
 19366                           
 19367                           ; BSR set to: 0
 19368  00546E  5182               	movf	___awmod@sign& (0+255),w,b
 19369  005470  B4D8               	btfsc	status,2,c
 19370  005472  D004               	goto	l3139
 19371                           
 19372                           ; BSR set to: 0
 19373  005474  6D7D               	negf	___awmod@dividend& (0+255),b
 19374  005476  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19375  005478  B0D8               	btfsc	status,0,c
 19376  00547A  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19377  00547C                     l3139:
 19378                           
 19379                           ; BSR set to: 0
 19380                           
 19381                           ; BSR set to: 0
 19382  00547C  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19383  005480  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19384  005484  0012               	return	
 19385  005486                     __end_of___awmod:
 19386                           	opt stack 0
 19387                           tosu	equ	0xFFF
 19388                           tosh	equ	0xFFE
 19389                           tosl	equ	0xFFD
 19390                           pclath	equ	0xFFA
 19391                           tblptru	equ	0xFF8
 19392                           tblptrh	equ	0xFF7
 19393                           tblptrl	equ	0xFF6
 19394                           tablat	equ	0xFF5
 19395                           prodh	equ	0xFF4
 19396                           prodl	equ	0xFF3
 19397                           intcon	equ	0xFF2
 19398                           intcon2	equ	0xFF1
 19399                           intcon3	equ	0xFF0
 19400                           indf0	equ	0xFEF
 19401                           postinc0	equ	0xFEE
 19402                           plusw0	equ	0xFEB
 19403                           fsr0h	equ	0xFEA
 19404                           fsr0l	equ	0xFE9
 19405                           wreg	equ	0xFE8
 19406                           indf1	equ	0xFE7
 19407                           postinc1	equ	0xFE6
 19408                           postdec1	equ	0xFE5
 19409                           fsr1h	equ	0xFE2
 19410                           fsr1l	equ	0xFE1
 19411                           indf2	equ	0xFDF
 19412                           postinc2	equ	0xFDE
 19413                           postdec2	equ	0xFDD
 19414                           plusw2	equ	0xFDB
 19415                           fsr2h	equ	0xFDA
 19416                           fsr2l	equ	0xFD9
 19417                           status	equ	0xFD8
 19418                           
 19419 ;; *************** function ___awdiv *****************
 19420 ;; Defined at:
 19421 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19422 ;; Parameters:    Size  Location     Type
 19423 ;;  dividend        2   29[BANK0 ] int 
 19424 ;;  divisor         2   31[BANK0 ] int 
 19425 ;; Auto vars:     Size  Location     Type
 19426 ;;  quotient        2   35[BANK0 ] int 
 19427 ;;  sign            1   34[BANK0 ] unsigned char 
 19428 ;;  counter         1   33[BANK0 ] unsigned char 
 19429 ;; Return value:  Size  Location     Type
 19430 ;;                  2   29[BANK0 ] int 
 19431 ;; Registers used:
 19432 ;;		wreg, status,2, status,0
 19433 ;; Tracked objects:
 19434 ;;		On entry : 0/0
 19435 ;;		On exit  : 0/0
 19436 ;;		Unchanged: 0/0
 19437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19439 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19441 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19442 ;;Total ram usage:        8 bytes
 19443 ;; Hardware stack levels used:    1
 19444 ;; Hardware stack levels required when called:   11
 19445 ;; This function calls:
 19446 ;;		Nothing
 19447 ;; This function is called by:
 19448 ;;		_Rtcc_SetRtccValue
 19449 ;;		_Rtcc_SetRtccAlarm
 19450 ;; This function uses a non-reentrant model
 19451 ;;
 19452                           
 19453                           	psect	text82
 19454  005288                     __ptext82:
 19455                           	opt stack 0
 19456  005288                     ___awdiv:
 19457                           	opt stack 14
 19458                           
 19459                           ; BSR set to: 0
 19460                           ;incstack = 0
 19461  005288  0E00               	movlw	0
 19462  00528A  0100               	movlb	0	; () banked
 19463  00528C  6F82               	movwf	___awdiv@sign& (0+255),b
 19464                           
 19465                           ; BSR set to: 0
 19466  00528E  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19467  005290  D006               	goto	l3117
 19468                           
 19469                           ; BSR set to: 0
 19470  005292  6D7F               	negf	___awdiv@divisor& (0+255),b
 19471  005294  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19472  005296  B0D8               	btfsc	status,0,c
 19473  005298  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19474                           
 19475                           ; BSR set to: 0
 19476  00529A  0E01               	movlw	1
 19477  00529C  6F82               	movwf	___awdiv@sign& (0+255),b
 19478  00529E                     l3117:
 19479                           
 19480                           ; BSR set to: 0
 19481                           
 19482                           ; BSR set to: 0
 19483  00529E  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19484  0052A0  D006               	goto	l3118
 19485                           
 19486                           ; BSR set to: 0
 19487  0052A2  6D7D               	negf	___awdiv@dividend& (0+255),b
 19488  0052A4  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19489  0052A6  B0D8               	btfsc	status,0,c
 19490  0052A8  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19491                           
 19492                           ; BSR set to: 0
 19493  0052AA  0E01               	movlw	1
 19494  0052AC  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19495  0052AE                     l3118:
 19496                           
 19497                           ; BSR set to: 0
 19498                           
 19499                           ; BSR set to: 0
 19500  0052AE  0E00               	movlw	0
 19501  0052B0  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19502  0052B2  0E00               	movlw	0
 19503  0052B4  6F83               	movwf	___awdiv@quotient& (0+255),b
 19504                           
 19505                           ; BSR set to: 0
 19506  0052B6  517F               	movf	___awdiv@divisor& (0+255),w,b
 19507  0052B8  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19508  0052BA  B4D8               	btfsc	status,2,c
 19509  0052BC  D01C               	goto	l3125
 19510                           
 19511                           ; BSR set to: 0
 19512  0052BE  0E01               	movlw	1
 19513  0052C0  6F81               	movwf	___awdiv@counter& (0+255),b
 19514  0052C2  D004               	goto	l3120
 19515  0052C4                     
 19516                           ; BSR set to: 0
 19517                           
 19518                           ; BSR set to: 0
 19519  0052C4  90D8               	bcf	status,0,c
 19520  0052C6  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19521  0052C8  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19522  0052CA  2B81               	incf	___awdiv@counter& (0+255),f,b
 19523  0052CC                     l3120:
 19524                           
 19525                           ; BSR set to: 0
 19526                           
 19527                           ; BSR set to: 0
 19528  0052CC  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19529  0052CE  D7FA               	goto	l3121
 19530  0052D0                     u13450:
 19531                           
 19532                           ; BSR set to: 0
 19533                           
 19534                           ; BSR set to: 0
 19535                           
 19536                           ; BSR set to: 0
 19537  0052D0  90D8               	bcf	status,0,c
 19538  0052D2  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19539  0052D4  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19540                           
 19541                           ; BSR set to: 0
 19542  0052D6  517F               	movf	___awdiv@divisor& (0+255),w,b
 19543  0052D8  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19544  0052DA  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19545  0052DC  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19546  0052DE  A0D8               	btfss	status,0,c
 19547  0052E0  D005               	goto	l3124
 19548                           
 19549                           ; BSR set to: 0
 19550  0052E2  517F               	movf	___awdiv@divisor& (0+255),w,b
 19551  0052E4  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19552  0052E6  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19553  0052E8  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19554                           
 19555                           ; BSR set to: 0
 19556  0052EA  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19557  0052EC                     l3124:
 19558                           
 19559                           ; BSR set to: 0
 19560                           
 19561                           ; BSR set to: 0
 19562  0052EC  90D8               	bcf	status,0,c
 19563  0052EE  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19564  0052F0  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19565                           
 19566                           ; BSR set to: 0
 19567  0052F2  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19568  0052F4  D7ED               	goto	u13450
 19569  0052F6                     l3125:
 19570                           
 19571                           ; BSR set to: 0
 19572                           
 19573                           ; BSR set to: 0
 19574                           
 19575                           ; BSR set to: 0
 19576  0052F6  5182               	movf	___awdiv@sign& (0+255),w,b
 19577  0052F8  B4D8               	btfsc	status,2,c
 19578  0052FA  D004               	goto	l3126
 19579                           
 19580                           ; BSR set to: 0
 19581  0052FC  6D83               	negf	___awdiv@quotient& (0+255),b
 19582  0052FE  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19583  005300  B0D8               	btfsc	status,0,c
 19584  005302  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19585  005304                     l3126:
 19586                           
 19587                           ; BSR set to: 0
 19588                           
 19589                           ; BSR set to: 0
 19590  005304  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19591  005308  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19592  00530C  0012               	return	
 19593  00530E                     __end_of___awdiv:
 19594                           	opt stack 0
 19595                           tosu	equ	0xFFF
 19596                           tosh	equ	0xFFE
 19597                           tosl	equ	0xFFD
 19598                           pclath	equ	0xFFA
 19599                           tblptru	equ	0xFF8
 19600                           tblptrh	equ	0xFF7
 19601                           tblptrl	equ	0xFF6
 19602                           tablat	equ	0xFF5
 19603                           prodh	equ	0xFF4
 19604                           prodl	equ	0xFF3
 19605                           intcon	equ	0xFF2
 19606                           intcon2	equ	0xFF1
 19607                           intcon3	equ	0xFF0
 19608                           indf0	equ	0xFEF
 19609                           postinc0	equ	0xFEE
 19610                           plusw0	equ	0xFEB
 19611                           fsr0h	equ	0xFEA
 19612                           fsr0l	equ	0xFE9
 19613                           wreg	equ	0xFE8
 19614                           indf1	equ	0xFE7
 19615                           postinc1	equ	0xFE6
 19616                           postdec1	equ	0xFE5
 19617                           fsr1h	equ	0xFE2
 19618                           fsr1l	equ	0xFE1
 19619                           indf2	equ	0xFDF
 19620                           postinc2	equ	0xFDE
 19621                           postdec2	equ	0xFDD
 19622                           plusw2	equ	0xFDB
 19623                           fsr2h	equ	0xFDA
 19624                           fsr2l	equ	0xFD9
 19625                           status	equ	0xFD8
 19626                           
 19627 ;; *************** function _Rtcc_LockRtc *****************
 19628 ;; Defined at:
 19629 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;		None
 19632 ;; Auto vars:     Size  Location     Type
 19633 ;;		None
 19634 ;; Return value:  Size  Location     Type
 19635 ;;                  1    wreg      void 
 19636 ;; Registers used:
 19637 ;;		None
 19638 ;; Tracked objects:
 19639 ;;		On entry : 0/0
 19640 ;;		On exit  : 0/0
 19641 ;;		Unchanged: 0/0
 19642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;Total ram usage:        0 bytes
 19648 ;; Hardware stack levels used:    1
 19649 ;; Hardware stack levels required when called:   11
 19650 ;; This function calls:
 19651 ;;		Nothing
 19652 ;; This function is called by:
 19653 ;;		_Rtcm_MainTask
 19654 ;;		_Rtcm_SetRtccDate
 19655 ;;		_Rtcm_SetRtccAlarm
 19656 ;; This function uses a non-reentrant model
 19657 ;;
 19658                           
 19659                           	psect	text83
 19660  006B0C                     __ptext83:
 19661                           	opt stack 0
 19662  006B0C                     _Rtcc_LockRtc:
 19663                           	opt stack 15
 19664                           
 19665                           ; BSR set to: 0
 19666                           ;incstack = 0
 19667  006B0C  010F               	movlb	15	;# 
 19668  006B0E  0E55               	movlw	85	;# 
 19669  006B10  6EA7               	movwf	4007,c	;# 
 19670  006B12  0EAA               	movlw	170	;# 
 19671  006B14  6EA7               	movwf	4007,c	;# 
 19672                           
 19673                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19674  006B16  010F               	movlb	15	; () banked
 19675  006B18  9B3F               	bcf	63,5,b	;volatile
 19676                           
 19677                           ; BSR set to: 15
 19678  006B1A  0012               	return		;funcret
 19679  006B1C                     __end_of_Rtcc_LockRtc:
 19680                           	opt stack 0
 19681                           tosu	equ	0xFFF
 19682                           tosh	equ	0xFFE
 19683                           tosl	equ	0xFFD
 19684                           pclath	equ	0xFFA
 19685                           tblptru	equ	0xFF8
 19686                           tblptrh	equ	0xFF7
 19687                           tblptrl	equ	0xFF6
 19688                           tablat	equ	0xFF5
 19689                           prodh	equ	0xFF4
 19690                           prodl	equ	0xFF3
 19691                           intcon	equ	0xFF2
 19692                           intcon2	equ	0xFF1
 19693                           intcon3	equ	0xFF0
 19694                           indf0	equ	0xFEF
 19695                           postinc0	equ	0xFEE
 19696                           plusw0	equ	0xFEB
 19697                           fsr0h	equ	0xFEA
 19698                           fsr0l	equ	0xFE9
 19699                           wreg	equ	0xFE8
 19700                           indf1	equ	0xFE7
 19701                           postinc1	equ	0xFE6
 19702                           postdec1	equ	0xFE5
 19703                           fsr1h	equ	0xFE2
 19704                           fsr1l	equ	0xFE1
 19705                           indf2	equ	0xFDF
 19706                           postinc2	equ	0xFDE
 19707                           postdec2	equ	0xFDD
 19708                           plusw2	equ	0xFDB
 19709                           fsr2h	equ	0xFDA
 19710                           fsr2l	equ	0xFD9
 19711                           status	equ	0xFD8
 19712                           
 19713 ;; *************** function _Rtcm_GetRtccDate *****************
 19714 ;; Defined at:
 19715 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19716 ;; Parameters:    Size  Location     Type
 19717 ;;		None
 19718 ;; Auto vars:     Size  Location     Type
 19719 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19720 ;; Return value:  Size  Location     Type
 19721 ;;                  8   33[BANK0 ] struct _RtccDateType
 19722 ;; Registers used:
 19723 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19724 ;; Tracked objects:
 19725 ;;		On entry : 0/0
 19726 ;;		On exit  : 0/0
 19727 ;;		Unchanged: 0/0
 19728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19729 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19730 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19731 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19732 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19733 ;;Total ram usage:       17 bytes
 19734 ;; Hardware stack levels used:    1
 19735 ;; Hardware stack levels required when called:   12
 19736 ;; This function calls:
 19737 ;;		_Rtcc_GetRtccValue
 19738 ;; This function is called by:
 19739 ;;		_Rtcm_MainTask
 19740 ;; This function uses a non-reentrant model
 19741 ;;
 19742                           
 19743                           	psect	text84
 19744  00577C                     __ptext84:
 19745                           	opt stack 0
 19746  00577C                     _Rtcm_GetRtccDate:
 19747                           	opt stack 15
 19748                           
 19749                           ;rtcm.c: 204: RtccDateType LocalDate;
 19750                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19751                           
 19752                           ; BSR set to: 15
 19753                           ;incstack = 0
 19754  00577C  0E00               	movlw	0
 19755  00577E  EC93  F027         	call	_Rtcc_GetRtccValue
 19756  005782  0100               	movlb	0	; () banked
 19757  005784  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19758  005786  0ED0               	movlw	208
 19759  005788  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19760  00578A  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19761  00578C  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19762  00578E  0E07               	movlw	7
 19763  005790  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19764                           
 19765                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19766  005792  0E01               	movlw	1
 19767  005794  EC93  F027         	call	_Rtcc_GetRtccValue
 19768  005798  0100               	movlb	0	; () banked
 19769  00579A  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19770                           
 19771                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19772  00579C  0E02               	movlw	2
 19773  00579E  EC93  F027         	call	_Rtcc_GetRtccValue
 19774  0057A2  0100               	movlb	0	; () banked
 19775  0057A4  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19776                           
 19777                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19778  0057A6  0E03               	movlw	3
 19779  0057A8  EC93  F027         	call	_Rtcc_GetRtccValue
 19780  0057AC  0100               	movlb	0	; () banked
 19781  0057AE  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19782                           
 19783                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19784  0057B0  0E04               	movlw	4
 19785  0057B2  EC93  F027         	call	_Rtcc_GetRtccValue
 19786  0057B6  0100               	movlb	0	; () banked
 19787  0057B8  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19788                           
 19789                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19790  0057BA  0E05               	movlw	5
 19791  0057BC  EC93  F027         	call	_Rtcc_GetRtccValue
 19792  0057C0  0100               	movlb	0	; () banked
 19793  0057C2  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19794                           
 19795                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19796  0057C4  0E06               	movlw	6
 19797  0057C6  EC93  F027         	call	_Rtcc_GetRtccValue
 19798  0057CA  0100               	movlb	0	; () banked
 19799  0057CC  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19800                           
 19801                           ; BSR set to: 0
 19802                           ;rtcm.c: 216: return LocalDate;
 19803  0057CE  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19804  0057D2  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19805  0057D6  0E07               	movlw	7
 19806  0057D8                     u15931:
 19807  0057D8  CFDB FFEB          	movff	plusw2,plusw0
 19808  0057DC  06E8               	decf	wreg,f,c
 19809  0057DE  E2FC               	bc	u15931
 19810  0057E0  0012               	return	
 19811  0057E2                     __end_of_Rtcm_GetRtccDate:
 19812                           	opt stack 0
 19813                           tosu	equ	0xFFF
 19814                           tosh	equ	0xFFE
 19815                           tosl	equ	0xFFD
 19816                           pclath	equ	0xFFA
 19817                           tblptru	equ	0xFF8
 19818                           tblptrh	equ	0xFF7
 19819                           tblptrl	equ	0xFF6
 19820                           tablat	equ	0xFF5
 19821                           prodh	equ	0xFF4
 19822                           prodl	equ	0xFF3
 19823                           intcon	equ	0xFF2
 19824                           intcon2	equ	0xFF1
 19825                           intcon3	equ	0xFF0
 19826                           indf0	equ	0xFEF
 19827                           postinc0	equ	0xFEE
 19828                           plusw0	equ	0xFEB
 19829                           fsr0h	equ	0xFEA
 19830                           fsr0l	equ	0xFE9
 19831                           wreg	equ	0xFE8
 19832                           indf1	equ	0xFE7
 19833                           postinc1	equ	0xFE6
 19834                           postdec1	equ	0xFE5
 19835                           fsr1h	equ	0xFE2
 19836                           fsr1l	equ	0xFE1
 19837                           indf2	equ	0xFDF
 19838                           postinc2	equ	0xFDE
 19839                           postdec2	equ	0xFDD
 19840                           plusw2	equ	0xFDB
 19841                           fsr2h	equ	0xFDA
 19842                           fsr2l	equ	0xFD9
 19843                           status	equ	0xFD8
 19844                           
 19845 ;; *************** function _Rtcc_GetRtccValue *****************
 19846 ;; Defined at:
 19847 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19848 ;; Parameters:    Size  Location     Type
 19849 ;;  RtccPtrVal      1    wreg     enum E7757
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19852 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19853 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19854 ;; Return value:  Size  Location     Type
 19855 ;;                  1    wreg      unsigned char 
 19856 ;; Registers used:
 19857 ;;		wreg, status,2, status,0, prodl, prodh
 19858 ;; Tracked objects:
 19859 ;;		On entry : 0/0
 19860 ;;		On exit  : 0/0
 19861 ;;		Unchanged: 0/0
 19862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19864 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19866 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19867 ;;Total ram usage:        4 bytes
 19868 ;; Hardware stack levels used:    1
 19869 ;; Hardware stack levels required when called:   11
 19870 ;; This function calls:
 19871 ;;		Nothing
 19872 ;; This function is called by:
 19873 ;;		_Rtcm_GetRtccDate
 19874 ;; This function uses a non-reentrant model
 19875 ;;
 19876                           
 19877                           	psect	text85
 19878  004F26                     __ptext85:
 19879                           	opt stack 0
 19880  004F26                     _Rtcc_GetRtccValue:
 19881                           	opt stack 15
 19882                           
 19883                           ; BSR set to: 0
 19884                           ;incstack = 0
 19885                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19886  004F26  0100               	movlb	0	; () banked
 19887  004F28  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19888                           
 19889                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19890                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19891                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19892  004F2A  D02D               	goto	l416
 19893  004F2C                     l417:
 19894                           
 19895                           ; BSR set to: 0
 19896                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19897  004F2C  010F               	movlb	15	; () banked
 19898  004F2E  833F               	bsf	63,1,b	;volatile
 19899  004F30                     
 19900                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19901  004F30  813F               	bsf	63,0,b	;volatile
 19902  004F32  D01C               	goto	L18
 19903  004F34                     l419:
 19904                           
 19905                           ; BSR set to: 0
 19906                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19907  004F34  010F               	movlb	15	; () banked
 19908  004F36  833F               	bsf	63,1,b	;volatile
 19909  004F38  D01E               	goto	L19
 19910  004F3A                     l420:
 19911                           
 19912                           ; BSR set to: 0
 19913                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19914  004F3A  010F               	movlb	15	; () banked
 19915  004F3C  833F               	bsf	63,1,b	;volatile
 19916  004F3E  D021               	goto	L22
 19917  004F40                     l14511:
 19918                           
 19919                           ; BSR set to: 15
 19920                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19921  004F40  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19922  004F44  0E0F               	movlw	15
 19923  004F46  0100               	movlb	0	; () banked
 19924  004F48  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19925  004F4A  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19926  004F4C  0B0F               	andlw	15
 19927  004F4E  0B0F               	andlw	15
 19928  004F50  0D0A               	mullw	10
 19929  004F52  50F3               	movf	prodl,w,c
 19930  004F54  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19931  004F56  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19932                           
 19933                           ;rtcc_drv.c: 241: break;
 19934  004F58  D02D               	goto	l418
 19935  004F5A                     l421:
 19936                           
 19937                           ; BSR set to: 0
 19938                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19939  004F5A  010F               	movlb	15	; () banked
 19940  004F5C  933F               	bcf	63,1,b	;volatile
 19941                           
 19942                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19943  004F5E  813F               	bsf	63,0,b	;volatile
 19944                           
 19945                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19946  004F60  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19947                           
 19948                           ;rtcc_drv.c: 249: break;
 19949  004F64  D027               	goto	l418
 19950  004F66                     l422:
 19951                           
 19952                           ; BSR set to: 0
 19953                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19954  004F66  010F               	movlb	15	; () banked
 19955  004F68  933F               	bcf	63,1,b	;volatile
 19956  004F6A  D7E2               	goto	L20
 19957  004F6C                     L18:
 19958                           
 19959                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19960  004F6C  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19961  004F70  D7E7               	goto	l14511
 19962  004F72                     l423:
 19963                           
 19964                           ; BSR set to: 0
 19965                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19966  004F72  010F               	movlb	15	; () banked
 19967  004F74  933F               	bcf	63,1,b	;volatile
 19968  004F76                     L19:
 19969                           
 19970                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19971  004F76  913F               	bcf	63,0,b	;volatile
 19972                           
 19973                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19974  004F78  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19975  004F7C  D7E1               	goto	l14511
 19976  004F7E                     l424:
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19980  004F7E  010F               	movlb	15	; () banked
 19981  004F80  933F               	bcf	63,1,b	;volatile
 19982  004F82                     L22:
 19983                           
 19984                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19985  004F82  913F               	bcf	63,0,b	;volatile
 19986  004F84  D7F3               	goto	L18
 19987  004F86                     l416:
 19988                           
 19989                           ; BSR set to: 0
 19990  004F86  0100               	movlb	0	; () banked
 19991  004F88  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19992                           
 19993                           ; Switch size 1, requested type "space"
 19994                           ; Number of cases is 7, Range of values is 0 to 6
 19995                           ; switch strategies available:
 19996                           ; Name         Instructions Cycles
 19997                           ; simple_byte           22    12 (average)
 19998                           ;	Chosen strategy is simple_byte
 19999  004F8A  0A00               	xorlw	0	; case 0
 20000  004F8C  B4D8               	btfsc	status,2,c
 20001  004F8E  D7CE               	goto	l417
 20002  004F90  0A01               	xorlw	1	; case 1
 20003  004F92  B4D8               	btfsc	status,2,c
 20004  004F94  D7CF               	goto	l419
 20005  004F96  0A03               	xorlw	3	; case 2
 20006  004F98  B4D8               	btfsc	status,2,c
 20007  004F9A  D7CF               	goto	l420
 20008  004F9C  0A01               	xorlw	1	; case 3
 20009  004F9E  B4D8               	btfsc	status,2,c
 20010  004FA0  D7DC               	goto	l421
 20011  004FA2  0A07               	xorlw	7	; case 4
 20012  004FA4  B4D8               	btfsc	status,2,c
 20013  004FA6  D7DF               	goto	l422
 20014  004FA8  0A01               	xorlw	1	; case 5
 20015  004FAA  B4D8               	btfsc	status,2,c
 20016  004FAC  D7E2               	goto	l423
 20017  004FAE  0A03               	xorlw	3	; case 6
 20018  004FB0  B4D8               	btfsc	status,2,c
 20019  004FB2  D7E5               	goto	l424
 20020  004FB4                     l418:
 20021                           
 20022                           ;rtcc_drv.c: 286: return RetValue;
 20023                           
 20024                           ; BSR set to: 0
 20025  004FB4  0100               	movlb	0	; () banked
 20026  004FB6  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20027  004FB8  0012               	return	
 20028  004FBA                     __end_of_Rtcc_GetRtccValue:
 20029                           	opt stack 0
 20030                           tosu	equ	0xFFF
 20031                           tosh	equ	0xFFE
 20032                           tosl	equ	0xFFD
 20033                           pclath	equ	0xFFA
 20034                           tblptru	equ	0xFF8
 20035                           tblptrh	equ	0xFF7
 20036                           tblptrl	equ	0xFF6
 20037                           tablat	equ	0xFF5
 20038                           prodh	equ	0xFF4
 20039                           prodl	equ	0xFF3
 20040                           intcon	equ	0xFF2
 20041                           intcon2	equ	0xFF1
 20042                           intcon3	equ	0xFF0
 20043                           indf0	equ	0xFEF
 20044                           postinc0	equ	0xFEE
 20045                           plusw0	equ	0xFEB
 20046                           fsr0h	equ	0xFEA
 20047                           fsr0l	equ	0xFE9
 20048                           wreg	equ	0xFE8
 20049                           indf1	equ	0xFE7
 20050                           postinc1	equ	0xFE6
 20051                           postdec1	equ	0xFE5
 20052                           fsr1h	equ	0xFE2
 20053                           fsr1l	equ	0xFE1
 20054                           indf2	equ	0xFDF
 20055                           postinc2	equ	0xFDE
 20056                           postdec2	equ	0xFDD
 20057                           plusw2	equ	0xFDB
 20058                           fsr2h	equ	0xFDA
 20059                           fsr2l	equ	0xFD9
 20060                           status	equ	0xFD8
 20061                           
 20062 ;; *************** function _Rtcc_SetRtcStatus *****************
 20063 ;; Defined at:
 20064 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20065 ;; Parameters:    Size  Location     Type
 20066 ;;  Status          1    wreg     unsigned char 
 20067 ;; Auto vars:     Size  Location     Type
 20068 ;;  Status          1   29[BANK0 ] unsigned char 
 20069 ;; Return value:  Size  Location     Type
 20070 ;;                  1    wreg      void 
 20071 ;; Registers used:
 20072 ;;		wreg
 20073 ;; Tracked objects:
 20074 ;;		On entry : 0/0
 20075 ;;		On exit  : 0/0
 20076 ;;		Unchanged: 0/0
 20077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20081 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20082 ;;Total ram usage:        1 bytes
 20083 ;; Hardware stack levels used:    1
 20084 ;; Hardware stack levels required when called:   11
 20085 ;; This function calls:
 20086 ;;		Nothing
 20087 ;; This function is called by:
 20088 ;;		_Rtcm_MainTask
 20089 ;; This function uses a non-reentrant model
 20090 ;;
 20091                           
 20092                           	psect	text86
 20093  006A5A                     __ptext86:
 20094                           	opt stack 0
 20095  006A5A                     _Rtcc_SetRtcStatus:
 20096                           	opt stack 16
 20097                           
 20098                           ; BSR set to: 0
 20099                           ;incstack = 0
 20100                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20101  006A5A  0100               	movlb	0	; () banked
 20102  006A5C  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20103                           
 20104                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20105  006A5E  0100               	movlb	0	; () banked
 20106  006A60  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20107  006A62  D003               	bra	u14855
 20108  006A64  010F               	movlb	15	; () banked
 20109  006A66  9F3F               	bcf	63,7,b	;volatile
 20110  006A68  D002               	bra	u14856
 20111  006A6A                     u14855:
 20112  006A6A  010F               	movlb	15	; () banked
 20113  006A6C  8F3F               	bsf	63,7,b	;volatile
 20114  006A6E                     u14856:
 20115                           
 20116                           ; BSR set to: 15
 20117  006A6E  0012               	return		;funcret
 20118  006A70                     __end_of_Rtcc_SetRtcStatus:
 20119                           	opt stack 0
 20120                           tosu	equ	0xFFF
 20121                           tosh	equ	0xFFE
 20122                           tosl	equ	0xFFD
 20123                           pclath	equ	0xFFA
 20124                           tblptru	equ	0xFF8
 20125                           tblptrh	equ	0xFF7
 20126                           tblptrl	equ	0xFF6
 20127                           tablat	equ	0xFF5
 20128                           prodh	equ	0xFF4
 20129                           prodl	equ	0xFF3
 20130                           intcon	equ	0xFF2
 20131                           intcon2	equ	0xFF1
 20132                           intcon3	equ	0xFF0
 20133                           indf0	equ	0xFEF
 20134                           postinc0	equ	0xFEE
 20135                           plusw0	equ	0xFEB
 20136                           fsr0h	equ	0xFEA
 20137                           fsr0l	equ	0xFE9
 20138                           wreg	equ	0xFE8
 20139                           indf1	equ	0xFE7
 20140                           postinc1	equ	0xFE6
 20141                           postdec1	equ	0xFE5
 20142                           fsr1h	equ	0xFE2
 20143                           fsr1l	equ	0xFE1
 20144                           indf2	equ	0xFDF
 20145                           postinc2	equ	0xFDE
 20146                           postdec2	equ	0xFDD
 20147                           plusw2	equ	0xFDB
 20148                           fsr2h	equ	0xFDA
 20149                           fsr2l	equ	0xFD9
 20150                           status	equ	0xFD8
 20151                           
 20152 ;; *************** function _Rtcc_RtcConfig *****************
 20153 ;; Defined at:
 20154 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20155 ;; Parameters:    Size  Location     Type
 20156 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20157 ;;		 -> RtcConfig(4), 
 20158 ;; Auto vars:     Size  Location     Type
 20159 ;;		None
 20160 ;; Return value:  Size  Location     Type
 20161 ;;                  1    wreg      void 
 20162 ;; Registers used:
 20163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20164 ;; Tracked objects:
 20165 ;;		On entry : 0/0
 20166 ;;		On exit  : 0/0
 20167 ;;		Unchanged: 0/0
 20168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20172 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20173 ;;Total ram usage:        3 bytes
 20174 ;; Hardware stack levels used:    1
 20175 ;; Hardware stack levels required when called:   12
 20176 ;; This function calls:
 20177 ;;		_RtccIrqInit
 20178 ;; This function is called by:
 20179 ;;		_Rtcm_MainTask
 20180 ;; This function uses a non-reentrant model
 20181 ;;
 20182                           
 20183                           	psect	text87
 20184  004A5E                     __ptext87:
 20185                           	opt stack 0
 20186  004A5E                     _Rtcc_RtcConfig:
 20187                           	opt stack 15
 20188                           
 20189                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20190                           
 20191                           ; BSR set to: 15
 20192                           ;incstack = 0
 20193  004A5E  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20194  004A62  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20195  004A66  50DF               	movf	indf2,w,c
 20196  004A68  0100               	movlb	0	; () banked
 20197  004A6A  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20198  004A6C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20199  004A6E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20200  004A70  010F               	movlb	15	; () banked
 20201  004A72  513F               	movf	63,w,b	;volatile
 20202  004A74  0100               	movlb	0	; () banked
 20203  004A76  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20204  004A78  0BFB               	andlw	-5
 20205  004A7A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20206  004A7C  010F               	movlb	15	; () banked
 20207  004A7E  6F3F               	movwf	63,b	;volatile
 20208                           
 20209                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20210  004A80  0100               	movlb	0	; () banked
 20211  004A82  EE20 F001          	lfsr	2,1
 20212  004A86  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20213  004A88  26D9               	addwf	fsr2l,f,c
 20214  004A8A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20215  004A8C  22DA               	addwfc	fsr2h,f,c
 20216  004A8E  50DF               	movf	indf2,w,c
 20217  004A90  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20218  004A92  0E01               	movlw	1
 20219  004A94  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20220  004A96  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20221  004A98  010F               	movlb	15	; () banked
 20222  004A9A  513C               	movf	60,w,b	;volatile
 20223  004A9C  0100               	movlb	0	; () banked
 20224  004A9E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20225  004AA0  0BFD               	andlw	-3
 20226  004AA2  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20227  004AA4  010F               	movlb	15	; () banked
 20228  004AA6  6F3C               	movwf	60,b	;volatile
 20229                           
 20230                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20231  004AA8  0100               	movlb	0	; () banked
 20232  004AAA  EE20 F001          	lfsr	2,1
 20233  004AAE  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20234  004AB0  26D9               	addwf	fsr2l,f,c
 20235  004AB2  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20236  004AB4  22DA               	addwfc	fsr2h,f,c
 20237  004AB6  50DF               	movf	indf2,w,c
 20238  004AB8  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20239  004ABA  90D8               	bcf	status,0,c
 20240  004ABC  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20241  004ABE  0E01               	movlw	1
 20242  004AC0  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20243  004AC2  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20244  004AC4  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20245  004AC6  010F               	movlb	15	; () banked
 20246  004AC8  513C               	movf	60,w,b	;volatile
 20247  004ACA  0100               	movlb	0	; () banked
 20248  004ACC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20249  004ACE  0BFB               	andlw	-5
 20250  004AD0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20251  004AD2  010F               	movlb	15	; () banked
 20252  004AD4  6F3C               	movwf	60,b	;volatile
 20253                           
 20254                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20255  004AD6  0100               	movlb	0	; () banked
 20256  004AD8  EE20 F002          	lfsr	2,2
 20257  004ADC  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20258  004ADE  26D9               	addwf	fsr2l,f,c
 20259  004AE0  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20260  004AE2  22DA               	addwfc	fsr2h,f,c
 20261  004AE4  04DE               	decf	postinc2,w,c
 20262  004AE6  A4D8               	btfss	status,2,c
 20263  004AE8  0012               	return	
 20264                           
 20265                           ; BSR set to: 0
 20266                           ;rtcc_drv.c: 115: {
 20267                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20268  004AEA  EE20 F003          	lfsr	2,3
 20269  004AEE  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20270  004AF0  26D9               	addwf	fsr2l,f,c
 20271  004AF2  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20272  004AF4  22DA               	addwfc	fsr2h,f,c
 20273  004AF6  50DF               	movf	indf2,w,c
 20274  004AF8  EC38  F035         	call	_RtccIrqInit
 20275  004AFC  0012               	return	
 20276  004AFE                     __end_of_Rtcc_RtcConfig:
 20277                           	opt stack 0
 20278                           tosu	equ	0xFFF
 20279                           tosh	equ	0xFFE
 20280                           tosl	equ	0xFFD
 20281                           pclath	equ	0xFFA
 20282                           tblptru	equ	0xFF8
 20283                           tblptrh	equ	0xFF7
 20284                           tblptrl	equ	0xFF6
 20285                           tablat	equ	0xFF5
 20286                           prodh	equ	0xFF4
 20287                           prodl	equ	0xFF3
 20288                           intcon	equ	0xFF2
 20289                           intcon2	equ	0xFF1
 20290                           intcon3	equ	0xFF0
 20291                           indf0	equ	0xFEF
 20292                           postinc0	equ	0xFEE
 20293                           plusw0	equ	0xFEB
 20294                           fsr0h	equ	0xFEA
 20295                           fsr0l	equ	0xFE9
 20296                           wreg	equ	0xFE8
 20297                           indf1	equ	0xFE7
 20298                           postinc1	equ	0xFE6
 20299                           postdec1	equ	0xFE5
 20300                           fsr1h	equ	0xFE2
 20301                           fsr1l	equ	0xFE1
 20302                           indf2	equ	0xFDF
 20303                           postinc2	equ	0xFDE
 20304                           postdec2	equ	0xFDD
 20305                           plusw2	equ	0xFDB
 20306                           fsr2h	equ	0xFDA
 20307                           fsr2l	equ	0xFD9
 20308                           status	equ	0xFD8
 20309                           
 20310 ;; *************** function _RtccIrqInit *****************
 20311 ;; Defined at:
 20312 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20313 ;; Parameters:    Size  Location     Type
 20314 ;;  Priority        1    wreg     enum E7716
 20315 ;; Auto vars:     Size  Location     Type
 20316 ;;  Priority        1   29[BANK0 ] enum E7716
 20317 ;; Return value:  Size  Location     Type
 20318 ;;                  1    wreg      void 
 20319 ;; Registers used:
 20320 ;;		wreg
 20321 ;; Tracked objects:
 20322 ;;		On entry : 0/0
 20323 ;;		On exit  : 0/0
 20324 ;;		Unchanged: 0/0
 20325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20329 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20330 ;;Total ram usage:        1 bytes
 20331 ;; Hardware stack levels used:    1
 20332 ;; Hardware stack levels required when called:   11
 20333 ;; This function calls:
 20334 ;;		Nothing
 20335 ;; This function is called by:
 20336 ;;		_Rtcc_RtcConfig
 20337 ;; This function uses a non-reentrant model
 20338 ;;
 20339                           
 20340                           	psect	text88
 20341  006A70                     __ptext88:
 20342                           	opt stack 0
 20343  006A70                     _RtccIrqInit:
 20344                           	opt stack 15
 20345                           
 20346                           ;incstack = 0
 20347                           ;RtccIrqInit@Priority stored from wreg
 20348  006A70  0100               	movlb	0	; () banked
 20349  006A72  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20350                           
 20351                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20352  006A74  90A4               	bcf	4004,0,c	;volatile
 20353                           
 20354                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20355  006A76  0100               	movlb	0	; () banked
 20356  006A78  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20357  006A7A  D002               	bra	u13665
 20358  006A7C  90A5               	bcf	4005,0,c	;volatile
 20359  006A7E  D001               	bra	u13666
 20360  006A80                     u13665:
 20361  006A80  80A5               	bsf	4005,0,c	;volatile
 20362  006A82                     u13666:
 20363                           
 20364                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20365  006A82  80A3               	bsf	4003,0,c	;volatile
 20366  006A84  0012               	return		;funcret
 20367  006A86                     __end_of_RtccIrqInit:
 20368                           	opt stack 0
 20369                           tosu	equ	0xFFF
 20370                           tosh	equ	0xFFE
 20371                           tosl	equ	0xFFD
 20372                           pclath	equ	0xFFA
 20373                           tblptru	equ	0xFF8
 20374                           tblptrh	equ	0xFF7
 20375                           tblptrl	equ	0xFF6
 20376                           tablat	equ	0xFF5
 20377                           prodh	equ	0xFF4
 20378                           prodl	equ	0xFF3
 20379                           intcon	equ	0xFF2
 20380                           intcon2	equ	0xFF1
 20381                           intcon3	equ	0xFF0
 20382                           indf0	equ	0xFEF
 20383                           postinc0	equ	0xFEE
 20384                           plusw0	equ	0xFEB
 20385                           fsr0h	equ	0xFEA
 20386                           fsr0l	equ	0xFE9
 20387                           wreg	equ	0xFE8
 20388                           indf1	equ	0xFE7
 20389                           postinc1	equ	0xFE6
 20390                           postdec1	equ	0xFE5
 20391                           fsr1h	equ	0xFE2
 20392                           fsr1l	equ	0xFE1
 20393                           indf2	equ	0xFDF
 20394                           postinc2	equ	0xFDE
 20395                           postdec2	equ	0xFDD
 20396                           plusw2	equ	0xFDB
 20397                           fsr2h	equ	0xFDA
 20398                           fsr2l	equ	0xFD9
 20399                           status	equ	0xFD8
 20400                           
 20401 ;; *************** function _Rtcc_AlarmConfig *****************
 20402 ;; Defined at:
 20403 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20404 ;; Parameters:    Size  Location     Type
 20405 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20406 ;;		 -> AlCfg(4), 
 20407 ;; Auto vars:     Size  Location     Type
 20408 ;;		None
 20409 ;; Return value:  Size  Location     Type
 20410 ;;                  1    wreg      void 
 20411 ;; Registers used:
 20412 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20413 ;; Tracked objects:
 20414 ;;		On entry : 0/0
 20415 ;;		On exit  : 0/0
 20416 ;;		Unchanged: 0/0
 20417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20422 ;;Total ram usage:        3 bytes
 20423 ;; Hardware stack levels used:    1
 20424 ;; Hardware stack levels required when called:   11
 20425 ;; This function calls:
 20426 ;;		Nothing
 20427 ;; This function is called by:
 20428 ;;		_Rtcm_MainTask
 20429 ;; This function uses a non-reentrant model
 20430 ;;
 20431                           
 20432                           	psect	text89
 20433  005642                     __ptext89:
 20434                           	opt stack 0
 20435  005642                     _Rtcc_AlarmConfig:
 20436                           	opt stack 16
 20437                           
 20438                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20439                           
 20440                           ;incstack = 0
 20441  005642  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20442  005646  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20443  00564A  50DF               	movf	indf2,w,c
 20444  00564C  0100               	movlb	0	; () banked
 20445  00564E  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20446  005650  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20447  005652  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20448  005654  5091               	movf	3985,w,c	;volatile
 20449  005656  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20450  005658  0B7F               	andlw	-129
 20451  00565A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20452  00565C  6E91               	movwf	3985,c	;volatile
 20453                           
 20454                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20455  00565E  EE20 F001          	lfsr	2,1
 20456  005662  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20457  005664  26D9               	addwf	fsr2l,f,c
 20458  005666  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20459  005668  22DA               	addwfc	fsr2h,f,c
 20460  00566A  50DF               	movf	indf2,w,c
 20461  00566C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20462  00566E  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20463  005670  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20464  005672  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20465  005674  5091               	movf	3985,w,c	;volatile
 20466  005676  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20467  005678  0BBF               	andlw	-65
 20468  00567A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20469  00567C  6E91               	movwf	3985,c	;volatile
 20470                           
 20471                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20472  00567E  EE20 F002          	lfsr	2,2
 20473  005682  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20474  005684  26D9               	addwf	fsr2l,f,c
 20475  005686  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20476  005688  22DA               	addwfc	fsr2h,f,c
 20477  00568A  50DF               	movf	indf2,w,c
 20478  00568C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20479  00568E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20480  005690  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20481  005692  5091               	movf	3985,w,c	;volatile
 20482  005694  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20483  005696  0BC3               	andlw	-61
 20484  005698  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20485  00569A  6E91               	movwf	3985,c	;volatile
 20486                           
 20487                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20488  00569C  EE20 F003          	lfsr	2,3
 20489  0056A0  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20490  0056A2  26D9               	addwf	fsr2l,f,c
 20491  0056A4  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20492  0056A6  22DA               	addwfc	fsr2h,f,c
 20493  0056A8  50DF               	movf	indf2,w,c
 20494  0056AA  6E90               	movwf	3984,c	;volatile
 20495                           
 20496                           ; BSR set to: 0
 20497  0056AC  0012               	return		;funcret
 20498  0056AE                     __end_of_Rtcc_AlarmConfig:
 20499                           	opt stack 0
 20500                           tosu	equ	0xFFF
 20501                           tosh	equ	0xFFE
 20502                           tosl	equ	0xFFD
 20503                           pclath	equ	0xFFA
 20504                           tblptru	equ	0xFF8
 20505                           tblptrh	equ	0xFF7
 20506                           tblptrl	equ	0xFF6
 20507                           tablat	equ	0xFF5
 20508                           prodh	equ	0xFF4
 20509                           prodl	equ	0xFF3
 20510                           intcon	equ	0xFF2
 20511                           intcon2	equ	0xFF1
 20512                           intcon3	equ	0xFF0
 20513                           indf0	equ	0xFEF
 20514                           postinc0	equ	0xFEE
 20515                           plusw0	equ	0xFEB
 20516                           fsr0h	equ	0xFEA
 20517                           fsr0l	equ	0xFE9
 20518                           wreg	equ	0xFE8
 20519                           indf1	equ	0xFE7
 20520                           postinc1	equ	0xFE6
 20521                           postdec1	equ	0xFE5
 20522                           fsr1h	equ	0xFE2
 20523                           fsr1l	equ	0xFE1
 20524                           indf2	equ	0xFDF
 20525                           postinc2	equ	0xFDE
 20526                           postdec2	equ	0xFDD
 20527                           plusw2	equ	0xFDB
 20528                           fsr2h	equ	0xFDA
 20529                           fsr2l	equ	0xFD9
 20530                           status	equ	0xFD8
 20531                           
 20532 ;; *************** function _triggerCmdFsm *****************
 20533 ;; Defined at:
 20534 ;;		line 89 in file "../Source/c/04_App/app_triggerCmd.c"
 20535 ;; Parameters:    Size  Location     Type
 20536 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 20537 ;;		 -> receivedNumber(13), 
 20538 ;; Auto vars:     Size  Location     Type
 20539 ;;  searchNumber    1   10[BANK1 ] unsigned char 
 20540 ;;  masterOpResu    1    9[BANK1 ] unsigned char 
 20541 ;;  numberInMemo    1    8[BANK1 ] unsigned char 
 20542 ;;  isComplete      1    7[BANK1 ] unsigned char 
 20543 ;; Return value:  Size  Location     Type
 20544 ;;                  1    wreg      unsigned char 
 20545 ;; Registers used:
 20546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20547 ;; Tracked objects:
 20548 ;;		On entry : 0/0
 20549 ;;		On exit  : 0/0
 20550 ;;		Unchanged: 0/0
 20551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20552 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20555 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20556 ;;Total ram usage:        6 bytes
 20557 ;; Hardware stack levels used:    1
 20558 ;; Hardware stack levels required when called:   18
 20559 ;; This function calls:
 20560 ;;		_isMasterNumber
 20561 ;;		_isNumberInMemory
 20562 ;;		_secondsAppTimer
 20563 ;;		_triggerRelay
 20564 ;; This function is called by:
 20565 ;;		_MyApp_Task
 20566 ;; This function uses a non-reentrant model
 20567 ;;
 20568                           
 20569                           	psect	text90
 20570  003950                     __ptext90:
 20571                           	opt stack 0
 20572  003950                     _triggerCmdFsm:
 20573                           	opt stack 9
 20574                           
 20575                           ;app_triggerCmd.c: 91: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_MASTER;
 20576                           ;app_triggerCmd.c: 92: bool isComplete = 0;
 20577                           
 20578                           ; BSR set to: 0
 20579                           ;incstack = 0
 20580  003950  0E00               	movlw	0
 20581  003952  0101               	movlb	1	; () banked
 20582  003954  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20583                           
 20584                           ;app_triggerCmd.c: 93: uint8_t numberInMemory = 0;
 20585  003956  0E00               	movlw	0
 20586  003958  6F08               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20587                           
 20588                           ;app_triggerCmd.c: 94: uint8_t masterOpResult = OP_FAILED;
 20589  00395A  0E01               	movlw	1
 20590  00395C  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20591                           
 20592                           ;app_triggerCmd.c: 95: uint8_t searchNumber = OP_FAILED;
 20593  00395E  0E01               	movlw	1
 20594  003960  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20595                           
 20596                           ;app_triggerCmd.c: 97: switch (currentState)
 20597  003962  D04F               	goto	l2896
 20598  003964                     
 20599                           ; BSR set to: 1
 20600                           ;app_triggerCmd.c: 100: masterOpResult = isMasterNumber(receivedNumber);
 20601                           
 20602                           ; BSR set to: 1
 20603  003964  C105  F100         	movff	triggerCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 20604  003968  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 20605  00396C  ECB4  F02A         	call	_isMasterNumber	;wreg free
 20606  003970  0101               	movlb	1	; () banked
 20607  003972  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20608                           
 20609                           ; BSR set to: 1
 20610                           ;app_triggerCmd.c: 101: if (masterOpResult == OP_SUCCESS)
 20611  003974  5109               	movf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20612  003976  A4D8               	btfss	status,2,c
 20613  003978  D002               	goto	l2898
 20614  00397A                     u16230:
 20615                           
 20616                           ; BSR set to: 1
 20617                           ;app_triggerCmd.c: 102: {
 20618                           ;app_triggerCmd.c: 103: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20619  00397A  0E02               	movlw	2
 20620  00397C  D029               	goto	L26
 20621  00397E                     l2898:
 20622                           
 20623                           ; BSR set to: 1
 20624                           ;app_triggerCmd.c: 105: else if (masterOpResult == OP_FAILED)
 20625                           
 20626                           ; BSR set to: 1
 20627  00397E  0509               	decf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20628  003980  A4D8               	btfss	status,2,c
 20629  003982  D04F               	goto	l2901
 20630                           
 20631                           ; BSR set to: 1
 20632                           ;app_triggerCmd.c: 106: {
 20633                           ;app_triggerCmd.c: 107: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20634  003984  0E01               	movlw	1
 20635  003986  D024               	goto	L26
 20636  003988                     
 20637                           ; BSR set to: 1
 20638                           ;app_triggerCmd.c: 112: searchNumber = isNumberInMemory(receivedNumber, &numberInMemory)
      +                          ;
 20639                           
 20640                           ; BSR set to: 1
 20641  003988  C105  F100         	movff	triggerCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 20642  00398C  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 20643  003990  0E08               	movlw	low triggerCmdFsm@numberInMemory
 20644  003992  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 20645  003994  0E01               	movlw	high triggerCmdFsm@numberInMemory
 20646  003996  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 20647  003998  EC29  F022         	call	_isNumberInMemory	;wreg free
 20648  00399C  0101               	movlb	1	; () banked
 20649  00399E  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20650                           
 20651                           ; BSR set to: 1
 20652                           ;app_triggerCmd.c: 113: if (searchNumber == SEARCH_FSM_FOUND)
 20653  0039A0  0E03               	movlw	3
 20654  0039A2  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20655  0039A4  B4D8               	btfsc	status,2,c
 20656  0039A6  D7E9               	goto	u16230
 20657                           
 20658                           ; BSR set to: 1
 20659                           ;app_triggerCmd.c: 117: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber ==
      +                           SEARCH_FSM_ERROR)
 20660                           
 20661                           ; BSR set to: 1
 20662                           
 20663                           ;app_triggerCmd.c: 116: }
 20664                           
 20665                           ; BSR set to: 1
 20666                           ;app_triggerCmd.c: 114: {
 20667                           ;app_triggerCmd.c: 115: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20668  0039A8  0E04               	movlw	4
 20669  0039AA  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20670  0039AC  B4D8               	btfsc	status,2,c
 20671  0039AE  D004               	goto	u16270
 20672                           
 20673                           ; BSR set to: 1
 20674  0039B0  0E02               	movlw	2
 20675  0039B2  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20676  0039B4  A4D8               	btfss	status,2,c
 20677  0039B6  D035               	goto	l2901
 20678  0039B8                     u16270:
 20679                           
 20680                           ; BSR set to: 1
 20681                           ;app_triggerCmd.c: 118: {
 20682                           ;app_triggerCmd.c: 119: currentState = TRIGGER_FSM_COMPLETE;
 20683                           
 20684                           ; BSR set to: 1
 20685  0039B8  0E04               	movlw	4
 20686  0039BA  D00A               	goto	L26
 20687  0039BC                     
 20688                           ; BSR set to: 1
 20689                           ;app_triggerCmd.c: 124: triggerRelay(1);
 20690                           
 20691                           ; BSR set to: 1
 20692  0039BC  0E01               	movlw	1
 20693  0039BE  EC1C  F032         	call	_triggerRelay
 20694                           
 20695                           ;app_triggerCmd.c: 125: secondCounter = 0;
 20696  0039C2  0E00               	movlw	0
 20697  0039C4  0103               	movlb	3	; () banked
 20698  0039C6  6F21               	movwf	(_secondCounter+1)& (0+255),b
 20699  0039C8  0E00               	movlw	0
 20700  0039CA  6F20               	movwf	_secondCounter& (0+255),b
 20701                           
 20702                           ; BSR set to: 3
 20703                           ;app_triggerCmd.c: 126: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20704  0039CC  0E03               	movlw	3
 20705  0039CE  D013               	goto	L27
 20706  0039D0                     L26:
 20707  0039D0  6FD3               	movwf	triggerCmdFsm@currentState& (0+255),b
 20708                           
 20709                           ;app_triggerCmd.c: 127: break;
 20710  0039D2  D027               	goto	l2901
 20711  0039D4                     
 20712                           ; BSR set to: 1
 20713                           ;app_triggerCmd.c: 130: if (secondsAppTimer(1, secondCounter, 0))
 20714                           
 20715                           ; BSR set to: 1
 20716  0039D4  C320  F08A         	movff	_secondCounter,secondsAppTimer@counter
 20717  0039D8  C321  F08B         	movff	_secondCounter+1,secondsAppTimer@counter+1
 20718  0039DC  0E00               	movlw	0
 20719  0039DE  0100               	movlb	0	; () banked
 20720  0039E0  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20721  0039E2  0E01               	movlw	1
 20722  0039E4  ECDE  F024         	call	_secondsAppTimer
 20723  0039E8  0900               	iorlw	0
 20724  0039EA  B4D8               	btfsc	status,2,c
 20725  0039EC  D01A               	goto	l2901
 20726                           
 20727                           ;app_triggerCmd.c: 131: {
 20728                           ;app_triggerCmd.c: 132: triggerRelay(0);
 20729  0039EE  0E00               	movlw	0
 20730  0039F0  EC1C  F032         	call	_triggerRelay
 20731                           
 20732                           ;app_triggerCmd.c: 133: currentState = TRIGGER_FSM_COMPLETE;
 20733  0039F4  0E04               	movlw	4
 20734  0039F6                     L27:
 20735  0039F6  0101               	movlb	1	; () banked
 20736  0039F8  D7EB               	goto	L26
 20737  0039FA                     
 20738                           ; BSR set to: 1
 20739                           ;app_triggerCmd.c: 138: isComplete = 1;
 20740                           
 20741                           ; BSR set to: 1
 20742  0039FA  0E01               	movlw	1
 20743  0039FC  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20744                           
 20745                           ;app_triggerCmd.c: 139: currentState = TRIGGER_FSM_CHECK_MASTER;
 20746  0039FE  0E00               	movlw	0
 20747  003A00  D7E7               	goto	L26
 20748  003A02                     l2896:
 20749                           
 20750                           ; BSR set to: 1
 20751                           
 20752                           ; BSR set to: 1
 20753  003A02  51D3               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20754                           
 20755                           ; Switch size 1, requested type "space"
 20756                           ; Number of cases is 5, Range of values is 0 to 4
 20757                           ; switch strategies available:
 20758                           ; Name         Instructions Cycles
 20759                           ; simple_byte           16     9 (average)
 20760                           ;	Chosen strategy is simple_byte
 20761  003A04  0A00               	xorlw	0	; case 0
 20762  003A06  B4D8               	btfsc	status,2,c
 20763  003A08  D7AD               	goto	l2897
 20764  003A0A  0A01               	xorlw	1	; case 1
 20765  003A0C  B4D8               	btfsc	status,2,c
 20766  003A0E  D7BC               	goto	l2902
 20767  003A10  0A03               	xorlw	3	; case 2
 20768  003A12  B4D8               	btfsc	status,2,c
 20769  003A14  D7D3               	goto	l2908
 20770  003A16  0A01               	xorlw	1	; case 3
 20771  003A18  B4D8               	btfsc	status,2,c
 20772  003A1A  D7DC               	goto	l2909
 20773  003A1C  0A07               	xorlw	7	; case 4
 20774  003A1E  B4D8               	btfsc	status,2,c
 20775  003A20  D7EC               	goto	l2911
 20776  003A22                     l2901:
 20777                           
 20778                           ;app_triggerCmd.c: 145: return isComplete;
 20779                           
 20780                           ; BSR set to: 1
 20781  003A22  0101               	movlb	1	; () banked
 20782  003A24  5107               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20783  003A26  0012               	return	
 20784  003A28                     __end_of_triggerCmdFsm:
 20785                           	opt stack 0
 20786                           tosu	equ	0xFFF
 20787                           tosh	equ	0xFFE
 20788                           tosl	equ	0xFFD
 20789                           pclath	equ	0xFFA
 20790                           tblptru	equ	0xFF8
 20791                           tblptrh	equ	0xFF7
 20792                           tblptrl	equ	0xFF6
 20793                           tablat	equ	0xFF5
 20794                           prodh	equ	0xFF4
 20795                           prodl	equ	0xFF3
 20796                           intcon	equ	0xFF2
 20797                           intcon2	equ	0xFF1
 20798                           intcon3	equ	0xFF0
 20799                           indf0	equ	0xFEF
 20800                           postinc0	equ	0xFEE
 20801                           plusw0	equ	0xFEB
 20802                           fsr0h	equ	0xFEA
 20803                           fsr0l	equ	0xFE9
 20804                           wreg	equ	0xFE8
 20805                           indf1	equ	0xFE7
 20806                           postinc1	equ	0xFE6
 20807                           postdec1	equ	0xFE5
 20808                           fsr1h	equ	0xFE2
 20809                           fsr1l	equ	0xFE1
 20810                           indf2	equ	0xFDF
 20811                           postinc2	equ	0xFDE
 20812                           postdec2	equ	0xFDD
 20813                           plusw2	equ	0xFDB
 20814                           fsr2h	equ	0xFDA
 20815                           fsr2l	equ	0xFD9
 20816                           status	equ	0xFD8
 20817                           
 20818 ;; *************** function _triggerRelay *****************
 20819 ;; Defined at:
 20820 ;;		line 67 in file "../Source/c/04_App/app_triggerCmd.c"
 20821 ;; Parameters:    Size  Location     Type
 20822 ;;  isRelayOn       1    wreg     unsigned char 
 20823 ;; Auto vars:     Size  Location     Type
 20824 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 20825 ;;  res             1   37[BANK0 ] unsigned char 
 20826 ;; Return value:  Size  Location     Type
 20827 ;;                  1    wreg      unsigned char 
 20828 ;; Registers used:
 20829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20830 ;; Tracked objects:
 20831 ;;		On entry : 0/0
 20832 ;;		On exit  : 0/0
 20833 ;;		Unchanged: 0/0
 20834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20836 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20839 ;;Total ram usage:        2 bytes
 20840 ;; Hardware stack levels used:    1
 20841 ;; Hardware stack levels required when called:   13
 20842 ;; This function calls:
 20843 ;;		_I2cSlv_SendI2cMsg
 20844 ;; This function is called by:
 20845 ;;		_triggerCmdFsm
 20846 ;; This function uses a non-reentrant model
 20847 ;;
 20848                           
 20849                           	psect	text91
 20850  006438                     __ptext91:
 20851                           	opt stack 0
 20852  006438                     _triggerRelay:
 20853                           	opt stack 13
 20854                           
 20855                           ; BSR set to: 1
 20856                           ;incstack = 0
 20857                           ;triggerRelay@isRelayOn stored from wreg
 20858  006438  0100               	movlb	0	; () banked
 20859  00643A  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 20860                           
 20861                           ;app_triggerCmd.c: 69: uint8_t res = 0u;
 20862  00643C  0E00               	movlw	0
 20863  00643E  0100               	movlb	0	; () banked
 20864  006440  6F85               	movwf	triggerRelay@res& (0+255),b
 20865                           
 20866                           ; BSR set to: 0
 20867                           ;app_triggerCmd.c: 70: if (isRelayOn)
 20868  006442  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20869  006444  B4D8               	btfsc	status,2,c
 20870  006446  D002               	goto	l2889
 20871                           
 20872                           ; BSR set to: 0
 20873                           ;app_triggerCmd.c: 71: {
 20874                           ;app_triggerCmd.c: 72: relayBuffer[1] = 0x01;
 20875  006448  0E01               	movlw	1
 20876  00644A  D001               	goto	L28
 20877  00644C                     l2889:
 20878                           
 20879                           ;app_triggerCmd.c: 74: else
 20880                           ;app_triggerCmd.c: 75: {
 20881                           ;app_triggerCmd.c: 76: relayBuffer[1] = 0x00;
 20882                           
 20883                           ; BSR set to: 2
 20884  00644C  0E00               	movlw	0
 20885  00644E                     L28:
 20886  00644E  0102               	movlb	2	; () banked
 20887  006450  6FFF               	movwf	(_relayBuffer+1)& (0+255),b
 20888                           
 20889                           ; BSR set to: 2
 20890                           ;app_triggerCmd.c: 77: }
 20891                           ;app_triggerCmd.c: 78: res = I2cSlv_SendI2cMsg(relayBuffer, 1, 2);
 20892                           
 20893                           ; BSR set to: 2
 20894  006452  0EFE               	movlw	low _relayBuffer
 20895  006454  0100               	movlb	0	; () banked
 20896  006456  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 20897  006458  0E02               	movlw	high _relayBuffer
 20898  00645A  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 20899  00645C  0E01               	movlw	1
 20900  00645E  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 20901  006460  0E02               	movlw	2
 20902  006462  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 20903  006464  EC69  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 20904  006468  0100               	movlb	0	; () banked
 20905  00646A  6F85               	movwf	triggerRelay@res& (0+255),b
 20906  00646C  0012               	return	
 20907  00646E                     __end_of_triggerRelay:
 20908                           	opt stack 0
 20909                           tosu	equ	0xFFF
 20910                           tosh	equ	0xFFE
 20911                           tosl	equ	0xFFD
 20912                           pclath	equ	0xFFA
 20913                           tblptru	equ	0xFF8
 20914                           tblptrh	equ	0xFF7
 20915                           tblptrl	equ	0xFF6
 20916                           tablat	equ	0xFF5
 20917                           prodh	equ	0xFF4
 20918                           prodl	equ	0xFF3
 20919                           intcon	equ	0xFF2
 20920                           intcon2	equ	0xFF1
 20921                           intcon3	equ	0xFF0
 20922                           indf0	equ	0xFEF
 20923                           postinc0	equ	0xFEE
 20924                           plusw0	equ	0xFEB
 20925                           fsr0h	equ	0xFEA
 20926                           fsr0l	equ	0xFE9
 20927                           wreg	equ	0xFE8
 20928                           indf1	equ	0xFE7
 20929                           postinc1	equ	0xFE6
 20930                           postdec1	equ	0xFE5
 20931                           fsr1h	equ	0xFE2
 20932                           fsr1l	equ	0xFE1
 20933                           indf2	equ	0xFDF
 20934                           postinc2	equ	0xFDE
 20935                           postdec2	equ	0xFDD
 20936                           plusw2	equ	0xFDB
 20937                           fsr2h	equ	0xFDA
 20938                           fsr2l	equ	0xFD9
 20939                           status	equ	0xFD8
 20940                           
 20941 ;; *************** function _initFsm *****************
 20942 ;; Defined at:
 20943 ;;		line 225 in file "../Source/c/04_App/app_init.c"
 20944 ;; Parameters:    Size  Location     Type
 20945 ;;		None
 20946 ;; Auto vars:     Size  Location     Type
 20947 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 20948 ;; Return value:  Size  Location     Type
 20949 ;;                  1    wreg      unsigned char 
 20950 ;; Registers used:
 20951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20952 ;; Tracked objects:
 20953 ;;		On entry : 0/0
 20954 ;;		On exit  : 0/0
 20955 ;;		Unchanged: 0/0
 20956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20958 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20960 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20961 ;;Total ram usage:        1 bytes
 20962 ;; Hardware stack levels used:    1
 20963 ;; Hardware stack levels required when called:   18
 20964 ;; This function calls:
 20965 ;;		_GetCallerNumber
 20966 ;;		_Led_SetLedStatus
 20967 ;;		_initEeprom
 20968 ;;		_initGprsModem
 20969 ;;		_saveNumberInMemory
 20970 ;;		_savePreamble
 20971 ;;		_waitSetupCall
 20972 ;; This function is called by:
 20973 ;;		_MyApp_Task
 20974 ;; This function uses a non-reentrant model
 20975 ;;
 20976                           
 20977                           	psect	text92
 20978  0047C4                     __ptext92:
 20979                           	opt stack 0
 20980  0047C4                     _initFsm:
 20981                           	opt stack 9
 20982                           
 20983                           ;app_init.c: 227: static initFsmStates currentState = INIT_FSM_MODEM;
 20984                           ;app_init.c: 228: bool isInitialized = 0;
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;incstack = 0
 20988  0047C4  0E00               	movlw	0
 20989  0047C6  0101               	movlb	1	; () banked
 20990  0047C8  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20991                           
 20992                           ;app_init.c: 230: switch (currentState)
 20993  0047CA  D03D               	goto	l2696
 20994  0047CC                     
 20995                           ; BSR set to: 1
 20996                           ;app_init.c: 233: if (initGprsModem())
 20997                           
 20998                           ; BSR set to: 1
 20999  0047CC  ECDD  F027         	call	_initGprsModem	;wreg free
 21000  0047D0  0900               	iorlw	0
 21001  0047D2  B4D8               	btfsc	status,2,c
 21002  0047D4  D048               	goto	l2699
 21003                           
 21004                           ;app_init.c: 234: {
 21005                           ;app_init.c: 235: currentState = INIT_FSM_EEPROM;
 21006  0047D6  0E01               	movlw	1
 21007  0047D8  D027               	goto	L32
 21008  0047DA                     
 21009                           ; BSR set to: 1
 21010                           ;app_init.c: 240: if (initEeprom())
 21011                           
 21012                           ; BSR set to: 1
 21013  0047DA  EC27  F028         	call	_initEeprom	;wreg free
 21014  0047DE  0900               	iorlw	0
 21015  0047E0  B4D8               	btfsc	status,2,c
 21016  0047E2  D041               	goto	l2699
 21017                           
 21018                           ;app_init.c: 241: {
 21019                           ;app_init.c: 242: currentState = INIT_FSM_WAIT_CMD;
 21020  0047E4  0E02               	movlw	2
 21021  0047E6  0101               	movlb	1	; () banked
 21022  0047E8  6FD6               	movwf	initFsm@currentState& (0+255),b
 21023                           
 21024                           ;app_init.c: 243: setupCallTicks = 0;
 21025  0047EA  0E00               	movlw	0
 21026  0047EC  0103               	movlb	3	; () banked
 21027  0047EE  6FC2               	movwf	(_setupCallTicks+1)& (0+255),b
 21028  0047F0  0E00               	movlw	0
 21029  0047F2  6FC1               	movwf	_setupCallTicks& (0+255),b
 21030                           
 21031                           ; BSR set to: 3
 21032                           ;app_init.c: 244: }
 21033                           ;app_init.c: 245: break;
 21034  0047F4  D038               	goto	l2699
 21035  0047F6                     
 21036                           ;app_init.c: 248: if (isMemoryEmpty)
 21037                           
 21038                           ; BSR set to: 3
 21039  0047F6  0101               	movlb	1	; () banked
 21040  0047F8  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 21041  0047FA  B4D8               	btfsc	status,2,c
 21042  0047FC  D010               	goto	l2703
 21043                           
 21044                           ; BSR set to: 1
 21045                           ;app_init.c: 249: {
 21046                           ;app_init.c: 250: if (waitSetupCall())
 21047  0047FE  EC58  F02F         	call	_waitSetupCall	;wreg free
 21048  004802  0900               	iorlw	0
 21049  004804  B4D8               	btfsc	status,2,c
 21050  004806  D02F               	goto	l2699
 21051                           
 21052                           ;app_init.c: 251: {
 21053                           ;app_init.c: 252: saveNumberInMemory(16, GetCallerNumber());
 21054  004808  EC37  F032         	call	_GetCallerNumber	;wreg free
 21055  00480C  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 21056  004810  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 21057  004814  0E10               	movlw	16
 21058  004816  ECFC  F034         	call	_saveNumberInMemory
 21059                           
 21060                           ;app_init.c: 253: currentState = INIT_FSM_PREAMBLE;
 21061  00481A  0E03               	movlw	3
 21062  00481C  D005               	goto	L32
 21063  00481E                     l2703:
 21064                           
 21065                           ; BSR set to: 1
 21066                           ;app_init.c: 257: else
 21067                           ;app_init.c: 258: {
 21068                           ;app_init.c: 259: currentState = INIT_FSM_COMPLETE;
 21069                           
 21070                           ; BSR set to: 1
 21071  00481E  0E04               	movlw	4
 21072  004820  D004               	goto	L31
 21073  004822                     
 21074                           ; BSR set to: 1
 21075                           ;app_init.c: 264: savePreamble();
 21076                           
 21077                           ; BSR set to: 1
 21078  004822  ECEF  F034         	call	_savePreamble	;wreg free
 21079                           
 21080                           ;app_init.c: 265: currentState = INIT_FSM_COMPLETE;
 21081  004826  0E04               	movlw	4
 21082  004828                     L32:
 21083  004828  0101               	movlb	1	; () banked
 21084  00482A                     L31:
 21085  00482A  6FD6               	movwf	initFsm@currentState& (0+255),b
 21086                           
 21087                           ;app_init.c: 266: break;
 21088  00482C  D01C               	goto	l2699
 21089  00482E                     
 21090                           ; BSR set to: 1
 21091                           ;app_init.c: 269: Led_SetLedStatus(1u, LED_STS_ON);
 21092                           
 21093                           ; BSR set to: 1
 21094  00482E  0E01               	movlw	1
 21095  004830  0100               	movlb	0	; () banked
 21096  004832  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21097  004834  0E01               	movlw	1
 21098  004836  EC01  F033         	call	_Led_SetLedStatus
 21099                           
 21100                           ;app_init.c: 270: currentState = INIT_FSM_MODEM;
 21101  00483A  0E00               	movlw	0
 21102  00483C  0101               	movlb	1	; () banked
 21103  00483E  6FD6               	movwf	initFsm@currentState& (0+255),b
 21104                           
 21105                           ; BSR set to: 1
 21106                           ;app_init.c: 271: isInitialized = 1;
 21107  004840  0E01               	movlw	1
 21108  004842  6F03               	movwf	initFsm@isInitialized& (0+255),b
 21109                           
 21110                           ; BSR set to: 1
 21111                           ;app_init.c: 276: }
 21112                           
 21113                           ; BSR set to: 1
 21114                           ;app_init.c: 275: break;
 21115                           
 21116                           ;app_init.c: 274: default:
 21117                           
 21118                           ;app_init.c: 272: break;
 21119  004844  D010               	goto	l2699
 21120  004846                     l2696:
 21121                           
 21122                           ; BSR set to: 1
 21123                           
 21124                           ; BSR set to: 1
 21125  004846  51D6               	movf	initFsm@currentState& (0+255),w,b
 21126                           
 21127                           ; Switch size 1, requested type "space"
 21128                           ; Number of cases is 5, Range of values is 0 to 4
 21129                           ; switch strategies available:
 21130                           ; Name         Instructions Cycles
 21131                           ; simple_byte           16     9 (average)
 21132                           ;	Chosen strategy is simple_byte
 21133  004848  0A00               	xorlw	0	; case 0
 21134  00484A  B4D8               	btfsc	status,2,c
 21135  00484C  D7BF               	goto	l2697
 21136  00484E  0A01               	xorlw	1	; case 1
 21137  004850  B4D8               	btfsc	status,2,c
 21138  004852  D7C3               	goto	l2700
 21139  004854  0A03               	xorlw	3	; case 2
 21140  004856  B4D8               	btfsc	status,2,c
 21141  004858  D7CE               	goto	l2702
 21142  00485A  0A01               	xorlw	1	; case 3
 21143  00485C  B4D8               	btfsc	status,2,c
 21144  00485E  D7E1               	goto	l2706
 21145  004860  0A07               	xorlw	7	; case 4
 21146  004862  B4D8               	btfsc	status,2,c
 21147  004864  D7E4               	goto	l2707
 21148  004866                     l2699:
 21149                           
 21150                           ;app_init.c: 277: return isInitialized;
 21151                           
 21152                           ; BSR set to: 1
 21153  004866  0101               	movlb	1	; () banked
 21154  004868  5103               	movf	initFsm@isInitialized& (0+255),w,b
 21155  00486A  0012               	return	
 21156  00486C                     __end_of_initFsm:
 21157                           	opt stack 0
 21158                           tosu	equ	0xFFF
 21159                           tosh	equ	0xFFE
 21160                           tosl	equ	0xFFD
 21161                           pclath	equ	0xFFA
 21162                           tblptru	equ	0xFF8
 21163                           tblptrh	equ	0xFF7
 21164                           tblptrl	equ	0xFF6
 21165                           tablat	equ	0xFF5
 21166                           prodh	equ	0xFF4
 21167                           prodl	equ	0xFF3
 21168                           intcon	equ	0xFF2
 21169                           intcon2	equ	0xFF1
 21170                           intcon3	equ	0xFF0
 21171                           indf0	equ	0xFEF
 21172                           postinc0	equ	0xFEE
 21173                           plusw0	equ	0xFEB
 21174                           fsr0h	equ	0xFEA
 21175                           fsr0l	equ	0xFE9
 21176                           wreg	equ	0xFE8
 21177                           indf1	equ	0xFE7
 21178                           postinc1	equ	0xFE6
 21179                           postdec1	equ	0xFE5
 21180                           fsr1h	equ	0xFE2
 21181                           fsr1l	equ	0xFE1
 21182                           indf2	equ	0xFDF
 21183                           postinc2	equ	0xFDE
 21184                           postdec2	equ	0xFDD
 21185                           plusw2	equ	0xFDB
 21186                           fsr2h	equ	0xFDA
 21187                           fsr2l	equ	0xFD9
 21188                           status	equ	0xFD8
 21189                           
 21190 ;; *************** function _waitSetupCall *****************
 21191 ;; Defined at:
 21192 ;;		line 195 in file "../Source/c/04_App/app_init.c"
 21193 ;; Parameters:    Size  Location     Type
 21194 ;;		None
 21195 ;; Auto vars:     Size  Location     Type
 21196 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21197 ;; Return value:  Size  Location     Type
 21198 ;;                  1    wreg      unsigned char 
 21199 ;; Registers used:
 21200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21201 ;; Tracked objects:
 21202 ;;		On entry : 0/0
 21203 ;;		On exit  : 0/0
 21204 ;;		Unchanged: 0/0
 21205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21207 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21210 ;;Total ram usage:        1 bytes
 21211 ;; Hardware stack levels used:    1
 21212 ;; Hardware stack levels required when called:   15
 21213 ;; This function calls:
 21214 ;;		_Led_SetLedStatus
 21215 ;;		_getSetupCall
 21216 ;;		_secondsAppTimer
 21217 ;; This function is called by:
 21218 ;;		_initFsm
 21219 ;; This function uses a non-reentrant model
 21220 ;;
 21221                           
 21222                           	psect	text93
 21223  005EB0                     __ptext93:
 21224                           	opt stack 0
 21225  005EB0                     _waitSetupCall:
 21226                           	opt stack 11
 21227                           
 21228                           ;app_init.c: 197: bool isCallArrived = 0;
 21229                           
 21230                           ; BSR set to: 1
 21231                           ;incstack = 0
 21232  005EB0  0E00               	movlw	0
 21233  005EB2  0100               	movlb	0	; () banked
 21234  005EB4  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21235                           
 21236                           ; BSR set to: 0
 21237                           ;app_init.c: 198: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21238  005EB6  0EC1               	movlw	low _setupCallTicks
 21239  005EB8  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21240  005EBA  0E03               	movlw	high _setupCallTicks
 21241  005EBC  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21242  005EBE  0E00               	movlw	0
 21243  005EC0  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21244  005EC2  0E1E               	movlw	30
 21245  005EC4  ECDE  F024         	call	_secondsAppTimer
 21246  005EC8  0900               	iorlw	0
 21247  005ECA  A4D8               	btfss	status,2,c
 21248  005ECC  D00F               	goto	l2685
 21249                           
 21250                           ;app_init.c: 199: {
 21251                           ;app_init.c: 200: Led_SetLedStatus(1u, LED_STS_BLINK);
 21252  005ECE  0E03               	movlw	3
 21253  005ED0  0100               	movlb	0	; () banked
 21254  005ED2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21255  005ED4  0E01               	movlw	1
 21256  005ED6  EC01  F033         	call	_Led_SetLedStatus
 21257                           
 21258                           ;app_init.c: 201: if (getSetupCall())
 21259  005EDA  EC6C  F034         	call	_getSetupCall	;wreg free
 21260  005EDE  0900               	iorlw	0
 21261  005EE0  B4D8               	btfsc	status,2,c
 21262  005EE2  D00A               	goto	l2687
 21263                           
 21264                           ;app_init.c: 202: {
 21265                           ;app_init.c: 203: isCallArrived = 1;
 21266  005EE4  0E01               	movlw	1
 21267  005EE6  0100               	movlb	0	; () banked
 21268  005EE8  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21269                           
 21270                           ; BSR set to: 0
 21271                           ;app_init.c: 204: }
 21272                           ;app_init.c: 205: }
 21273  005EEA  D006               	goto	l2687
 21274  005EEC                     l2685:
 21275                           
 21276                           ;app_init.c: 206: else
 21277                           ;app_init.c: 207: {
 21278                           ;app_init.c: 208: Led_SetLedStatus(1u, LED_STS_ON);
 21279                           
 21280                           ; BSR set to: 0
 21281  005EEC  0E01               	movlw	1
 21282  005EEE  0100               	movlb	0	; () banked
 21283  005EF0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21284  005EF2  0E01               	movlw	1
 21285  005EF4  EC01  F033         	call	_Led_SetLedStatus
 21286  005EF8                     l2687:
 21287                           
 21288                           ;app_init.c: 209: }
 21289                           ;app_init.c: 210: return isCallArrived;
 21290  005EF8  0100               	movlb	0	; () banked
 21291  005EFA  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21292  005EFC  0012               	return	
 21293  005EFE                     __end_of_waitSetupCall:
 21294                           	opt stack 0
 21295                           tosu	equ	0xFFF
 21296                           tosh	equ	0xFFE
 21297                           tosl	equ	0xFFD
 21298                           pclath	equ	0xFFA
 21299                           tblptru	equ	0xFF8
 21300                           tblptrh	equ	0xFF7
 21301                           tblptrl	equ	0xFF6
 21302                           tablat	equ	0xFF5
 21303                           prodh	equ	0xFF4
 21304                           prodl	equ	0xFF3
 21305                           intcon	equ	0xFF2
 21306                           intcon2	equ	0xFF1
 21307                           intcon3	equ	0xFF0
 21308                           indf0	equ	0xFEF
 21309                           postinc0	equ	0xFEE
 21310                           plusw0	equ	0xFEB
 21311                           fsr0h	equ	0xFEA
 21312                           fsr0l	equ	0xFE9
 21313                           wreg	equ	0xFE8
 21314                           indf1	equ	0xFE7
 21315                           postinc1	equ	0xFE6
 21316                           postdec1	equ	0xFE5
 21317                           fsr1h	equ	0xFE2
 21318                           fsr1l	equ	0xFE1
 21319                           indf2	equ	0xFDF
 21320                           postinc2	equ	0xFDE
 21321                           postdec2	equ	0xFDD
 21322                           plusw2	equ	0xFDB
 21323                           fsr2h	equ	0xFDA
 21324                           fsr2l	equ	0xFD9
 21325                           status	equ	0xFD8
 21326                           
 21327 ;; *************** function _getSetupCall *****************
 21328 ;; Defined at:
 21329 ;;		line 179 in file "../Source/c/04_App/app_init.c"
 21330 ;; Parameters:    Size  Location     Type
 21331 ;;		None
 21332 ;; Auto vars:     Size  Location     Type
 21333 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21334 ;; Return value:  Size  Location     Type
 21335 ;;                  1    wreg      unsigned char 
 21336 ;; Registers used:
 21337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21338 ;; Tracked objects:
 21339 ;;		On entry : 0/0
 21340 ;;		On exit  : 0/0
 21341 ;;		Unchanged: 0/0
 21342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21346 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21347 ;;Total ram usage:        1 bytes
 21348 ;; Hardware stack levels used:    1
 21349 ;; Hardware stack levels required when called:   14
 21350 ;; This function calls:
 21351 ;;		_Mdm_HangPhoneCall
 21352 ;;		_Mdm_IsRinging
 21353 ;; This function is called by:
 21354 ;;		_waitSetupCall
 21355 ;; This function uses a non-reentrant model
 21356 ;;
 21357                           
 21358                           	psect	text94
 21359  0068D8                     __ptext94:
 21360                           	opt stack 0
 21361  0068D8                     _getSetupCall:
 21362                           	opt stack 11
 21363                           
 21364                           ;app_init.c: 181: bool isCalledReceived = 0;
 21365                           
 21366                           ; BSR set to: 0
 21367                           ;incstack = 0
 21368  0068D8  0E00               	movlw	0
 21369  0068DA  0100               	movlb	0	; () banked
 21370  0068DC  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21371                           
 21372                           ; BSR set to: 0
 21373                           ;app_init.c: 183: if (Mdm_IsRinging())
 21374  0068DE  ECD2  F033         	call	_Mdm_IsRinging	;wreg free
 21375  0068E2  0900               	iorlw	0
 21376  0068E4  B4D8               	btfsc	status,2,c
 21377  0068E6  D005               	goto	l2681
 21378                           
 21379                           ;app_init.c: 184: {
 21380                           ;app_init.c: 185: Mdm_HangPhoneCall();
 21381  0068E8  EC6C  F035         	call	_Mdm_HangPhoneCall	;wreg free
 21382                           
 21383                           ;app_init.c: 186: isCalledReceived = 1;
 21384  0068EC  0E01               	movlw	1
 21385  0068EE  0100               	movlb	0	; () banked
 21386  0068F0  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21387  0068F2                     l2681:
 21388                           
 21389                           ;app_init.c: 187: }
 21390                           ;app_init.c: 188: return isCalledReceived;
 21391                           
 21392                           ; BSR set to: 0
 21393  0068F2  0100               	movlb	0	; () banked
 21394  0068F4  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21395  0068F6  0012               	return	
 21396  0068F8                     __end_of_getSetupCall:
 21397                           	opt stack 0
 21398                           tosu	equ	0xFFF
 21399                           tosh	equ	0xFFE
 21400                           tosl	equ	0xFFD
 21401                           pclath	equ	0xFFA
 21402                           tblptru	equ	0xFF8
 21403                           tblptrh	equ	0xFF7
 21404                           tblptrl	equ	0xFF6
 21405                           tablat	equ	0xFF5
 21406                           prodh	equ	0xFF4
 21407                           prodl	equ	0xFF3
 21408                           intcon	equ	0xFF2
 21409                           intcon2	equ	0xFF1
 21410                           intcon3	equ	0xFF0
 21411                           indf0	equ	0xFEF
 21412                           postinc0	equ	0xFEE
 21413                           plusw0	equ	0xFEB
 21414                           fsr0h	equ	0xFEA
 21415                           fsr0l	equ	0xFE9
 21416                           wreg	equ	0xFE8
 21417                           indf1	equ	0xFE7
 21418                           postinc1	equ	0xFE6
 21419                           postdec1	equ	0xFE5
 21420                           fsr1h	equ	0xFE2
 21421                           fsr1l	equ	0xFE1
 21422                           indf2	equ	0xFDF
 21423                           postinc2	equ	0xFDE
 21424                           postdec2	equ	0xFDD
 21425                           plusw2	equ	0xFDB
 21426                           fsr2h	equ	0xFDA
 21427                           fsr2l	equ	0xFD9
 21428                           status	equ	0xFD8
 21429                           
 21430 ;; *************** function _savePreamble *****************
 21431 ;; Defined at:
 21432 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21433 ;; Parameters:    Size  Location     Type
 21434 ;;		None
 21435 ;; Auto vars:     Size  Location     Type
 21436 ;;		None
 21437 ;; Return value:  Size  Location     Type
 21438 ;;                  1    wreg      void 
 21439 ;; Registers used:
 21440 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21441 ;; Tracked objects:
 21442 ;;		On entry : 0/0
 21443 ;;		On exit  : 0/0
 21444 ;;		Unchanged: 0/0
 21445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21450 ;;Total ram usage:        0 bytes
 21451 ;; Hardware stack levels used:    1
 21452 ;; Hardware stack levels required when called:   14
 21453 ;; This function calls:
 21454 ;;		_Eeprom_Write
 21455 ;;		_initPreamble
 21456 ;; This function is called by:
 21457 ;;		_initFsm
 21458 ;; This function uses a non-reentrant model
 21459 ;;
 21460                           
 21461                           	psect	text95
 21462  0069DE                     __ptext95:
 21463                           	opt stack 0
 21464  0069DE                     _savePreamble:
 21465                           	opt stack 12
 21466                           
 21467                           ;app_init.c: 215: Eeprom_Write(0, initPreamble(), 4);
 21468                           
 21469                           ; BSR set to: 0
 21470                           ;incstack = 0
 21471  0069DE  ECAA  F034         	call	_initPreamble	;wreg free
 21472  0069E2  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21473  0069E6  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21474  0069EA  0E04               	movlw	4
 21475  0069EC  0100               	movlb	0	; () banked
 21476  0069EE  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21477  0069F0  0E00               	movlw	0
 21478  0069F2  EC8E  F02E         	call	_Eeprom_Write
 21479  0069F6  0012               	return		;funcret
 21480  0069F8                     __end_of_savePreamble:
 21481                           	opt stack 0
 21482                           tosu	equ	0xFFF
 21483                           tosh	equ	0xFFE
 21484                           tosl	equ	0xFFD
 21485                           pclath	equ	0xFFA
 21486                           tblptru	equ	0xFF8
 21487                           tblptrh	equ	0xFF7
 21488                           tblptrl	equ	0xFF6
 21489                           tablat	equ	0xFF5
 21490                           prodh	equ	0xFF4
 21491                           prodl	equ	0xFF3
 21492                           intcon	equ	0xFF2
 21493                           intcon2	equ	0xFF1
 21494                           intcon3	equ	0xFF0
 21495                           indf0	equ	0xFEF
 21496                           postinc0	equ	0xFEE
 21497                           plusw0	equ	0xFEB
 21498                           fsr0h	equ	0xFEA
 21499                           fsr0l	equ	0xFE9
 21500                           wreg	equ	0xFE8
 21501                           indf1	equ	0xFE7
 21502                           postinc1	equ	0xFE6
 21503                           postdec1	equ	0xFE5
 21504                           fsr1h	equ	0xFE2
 21505                           fsr1l	equ	0xFE1
 21506                           indf2	equ	0xFDF
 21507                           postinc2	equ	0xFDE
 21508                           postdec2	equ	0xFDD
 21509                           plusw2	equ	0xFDB
 21510                           fsr2h	equ	0xFDA
 21511                           fsr2l	equ	0xFD9
 21512                           status	equ	0xFD8
 21513                           
 21514 ;; *************** function _initPreamble *****************
 21515 ;; Defined at:
 21516 ;;		line 285 in file "../Source/c/04_App/app_init.c"
 21517 ;; Parameters:    Size  Location     Type
 21518 ;;		None
 21519 ;; Auto vars:     Size  Location     Type
 21520 ;;		None
 21521 ;; Return value:  Size  Location     Type
 21522 ;;                  2   29[BANK0 ] PTR unsigned char 
 21523 ;; Registers used:
 21524 ;;		wreg, status,2, status,0
 21525 ;; Tracked objects:
 21526 ;;		On entry : 0/0
 21527 ;;		On exit  : 0/0
 21528 ;;		Unchanged: 0/0
 21529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21533 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21534 ;;Total ram usage:        2 bytes
 21535 ;; Hardware stack levels used:    1
 21536 ;; Hardware stack levels required when called:   11
 21537 ;; This function calls:
 21538 ;;		Nothing
 21539 ;; This function is called by:
 21540 ;;		_savePreamble
 21541 ;; This function uses a non-reentrant model
 21542 ;;
 21543                           
 21544                           	psect	text96
 21545  006954                     __ptext96:
 21546                           	opt stack 0
 21547  006954                     _initPreamble:
 21548                           	opt stack 14
 21549                           
 21550                           ;app_init.c: 287: memoryPreamble[0] = 'U';
 21551                           
 21552                           ;incstack = 0
 21553  006954  0E55               	movlw	85
 21554  006956  0103               	movlb	3	; () banked
 21555  006958  6FAB               	movwf	_memoryPreamble& (0+255),b
 21556                           
 21557                           ;app_init.c: 288: memoryPreamble[1] = 'S';
 21558  00695A  0E53               	movlw	83
 21559  00695C  6FAC               	movwf	(_memoryPreamble+1)& (0+255),b
 21560                           
 21561                           ;app_init.c: 289: memoryPreamble[2] = 'I';
 21562  00695E  0E49               	movlw	73
 21563  006960  6FAD               	movwf	(_memoryPreamble+2)& (0+255),b
 21564                           
 21565                           ;app_init.c: 290: memoryPreamble[3] = 'M';
 21566  006962  0E4D               	movlw	77
 21567  006964  6FAE               	movwf	(_memoryPreamble+3)& (0+255),b
 21568                           
 21569                           ; BSR set to: 3
 21570                           ;app_init.c: 291: return memoryPreamble;
 21571  006966  0EAB               	movlw	low _memoryPreamble
 21572  006968  0100               	movlb	0	; () banked
 21573  00696A  6F7D               	movwf	?_initPreamble& (0+255),b
 21574  00696C  0E03               	movlw	high _memoryPreamble
 21575  00696E  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21576  006970  0012               	return	
 21577  006972                     __end_of_initPreamble:
 21578                           	opt stack 0
 21579                           tosu	equ	0xFFF
 21580                           tosh	equ	0xFFE
 21581                           tosl	equ	0xFFD
 21582                           pclath	equ	0xFFA
 21583                           tblptru	equ	0xFF8
 21584                           tblptrh	equ	0xFF7
 21585                           tblptrl	equ	0xFF6
 21586                           tablat	equ	0xFF5
 21587                           prodh	equ	0xFF4
 21588                           prodl	equ	0xFF3
 21589                           intcon	equ	0xFF2
 21590                           intcon2	equ	0xFF1
 21591                           intcon3	equ	0xFF0
 21592                           indf0	equ	0xFEF
 21593                           postinc0	equ	0xFEE
 21594                           plusw0	equ	0xFEB
 21595                           fsr0h	equ	0xFEA
 21596                           fsr0l	equ	0xFE9
 21597                           wreg	equ	0xFE8
 21598                           indf1	equ	0xFE7
 21599                           postinc1	equ	0xFE6
 21600                           postdec1	equ	0xFE5
 21601                           fsr1h	equ	0xFE2
 21602                           fsr1l	equ	0xFE1
 21603                           indf2	equ	0xFDF
 21604                           postinc2	equ	0xFDE
 21605                           postdec2	equ	0xFDD
 21606                           plusw2	equ	0xFDB
 21607                           fsr2h	equ	0xFDA
 21608                           fsr2l	equ	0xFD9
 21609                           status	equ	0xFD8
 21610                           
 21611 ;; *************** function _initGprsModem *****************
 21612 ;; Defined at:
 21613 ;;		line 86 in file "../Source/c/04_App/app_init.c"
 21614 ;; Parameters:    Size  Location     Type
 21615 ;;		None
 21616 ;; Auto vars:     Size  Location     Type
 21617 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 21618 ;; Return value:  Size  Location     Type
 21619 ;;                  1    wreg      unsigned char 
 21620 ;; Registers used:
 21621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21622 ;; Tracked objects:
 21623 ;;		On entry : 0/0
 21624 ;;		On exit  : 0/0
 21625 ;;		Unchanged: 0/0
 21626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21630 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21631 ;;Total ram usage:        1 bytes
 21632 ;; Hardware stack levels used:    1
 21633 ;; Hardware stack levels required when called:   14
 21634 ;; This function calls:
 21635 ;;		_Mdm_SetSmsFormat
 21636 ;;		_Uart_WriteConstString
 21637 ;;		_secondsAppTimer
 21638 ;; This function is called by:
 21639 ;;		_initFsm
 21640 ;; This function uses a non-reentrant model
 21641 ;;
 21642                           
 21643                           	psect	text97
 21644  004FBA                     __ptext97:
 21645                           	opt stack 0
 21646  004FBA                     _initGprsModem:
 21647                           	opt stack 12
 21648                           
 21649                           ;app_init.c: 88: static uint16_t modemCounter = 0;
 21650                           ;app_init.c: 89: static modemStates currentState = MODEM_INIT;
 21651                           ;app_init.c: 90: bool isInitialized = 0;
 21652                           
 21653                           ; BSR set to: 0
 21654                           ;incstack = 0
 21655  004FBA  0E00               	movlw	0
 21656  004FBC  0100               	movlb	0	; () banked
 21657  004FBE  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21658                           
 21659                           ;app_init.c: 92: switch(currentState)
 21660  004FC0  D035               	goto	l2653
 21661  004FC2                     
 21662                           ;app_init.c: 95: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 21663                           
 21664                           ; BSR set to: 0
 21665  004FC2  0E03               	movlw	3
 21666  004FC4  0100               	movlb	0	; () banked
 21667  004FC6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 21668  004FC8  B4D8               	btfsc	status,2,c
 21669  004FCA  D003               	goto	u14540
 21670                           
 21671                           ; BSR set to: 0
 21672  004FCC  05D1               	decf	_MdmStatus& (0+255),w,b
 21673  004FCE  A4D8               	btfss	status,2,c
 21674  004FD0  D03B               	goto	l2659
 21675  004FD2                     u14540:
 21676                           
 21677                           ; BSR set to: 0
 21678                           ;app_init.c: 96: {
 21679                           ;app_init.c: 97: if (secondsAppTimer(5, &modemCounter, 0))
 21680                           
 21681                           ; BSR set to: 0
 21682  004FD2  0EBF               	movlw	low initGprsModem@modemCounter
 21683  004FD4  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21684  004FD6  0E03               	movlw	high initGprsModem@modemCounter
 21685  004FD8  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21686  004FDA  0E00               	movlw	0
 21687  004FDC  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21688  004FDE  0E05               	movlw	5
 21689  004FE0  ECDE  F024         	call	_secondsAppTimer
 21690  004FE4  0900               	iorlw	0
 21691  004FE6  B4D8               	btfsc	status,2,c
 21692  004FE8  D02F               	goto	l2659
 21693                           
 21694                           ;app_init.c: 98: {
 21695                           ;app_init.c: 99: Mdm_SetSmsFormat(1);
 21696  004FEA  0E01               	movlw	1
 21697  004FEC  EC30  F02F         	call	_Mdm_SetSmsFormat
 21698                           
 21699                           ;app_init.c: 100: currentState = MODEM_DELETE_SMS;
 21700  004FF0  0E01               	movlw	1
 21701  004FF2  D013               	goto	L34
 21702  004FF4                     
 21703                           ; BSR set to: 1
 21704                           ;app_init.c: 106: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21705                           
 21706                           ; BSR set to: 1
 21707  004FF4  0EFA               	movlw	low STR_30
 21708  004FF6  0100               	movlb	0	; () banked
 21709  004FF8  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21710  004FFA  0EFE               	movlw	high STR_30
 21711  004FFC  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21712  004FFE  0E01               	movlw	1
 21713  005000  ECE8  F030         	call	_Uart_WriteConstString
 21714                           
 21715                           ;app_init.c: 107: currentState = MODEM_SET_CALLER_ID;
 21716  005004  0E02               	movlw	2
 21717  005006  D009               	goto	L34
 21718  005008                     
 21719                           ; BSR set to: 1
 21720                           ;app_init.c: 111: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21721                           
 21722                           ; BSR set to: 1
 21723  005008  0EAA               	movlw	low STR_31
 21724  00500A  0100               	movlb	0	; () banked
 21725  00500C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21726  00500E  0EFF               	movlw	high STR_31
 21727  005010  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21728  005012  0E01               	movlw	1
 21729  005014  ECE8  F030         	call	_Uart_WriteConstString
 21730                           
 21731                           ;app_init.c: 112: currentState = MODEM_INIT_COMPLETE;
 21732  005018  0E03               	movlw	3
 21733  00501A                     L34:
 21734  00501A  0101               	movlb	1	; () banked
 21735  00501C  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21736                           
 21737                           ;app_init.c: 113: break;
 21738  00501E  D014               	goto	l2659
 21739  005020                     
 21740                           ; BSR set to: 1
 21741                           ;app_init.c: 116: currentState = MODEM_INIT;
 21742                           
 21743                           ; BSR set to: 1
 21744  005020  0E00               	movlw	0
 21745  005022  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21746                           
 21747                           ;app_init.c: 117: isInitialized = 1;
 21748  005024  0E01               	movlw	1
 21749  005026  0100               	movlb	0	; () banked
 21750  005028  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;app_init.c: 122: }
 21754                           
 21755                           ; BSR set to: 0
 21756                           ;app_init.c: 121: break;
 21757                           
 21758                           ;app_init.c: 120: default:
 21759                           
 21760                           ;app_init.c: 118: break;
 21761  00502A  D00E               	goto	l2659
 21762  00502C                     l2653:
 21763                           
 21764                           ; BSR set to: 0
 21765                           
 21766                           ; BSR set to: 0
 21767  00502C  0101               	movlb	1	; () banked
 21768  00502E  51D8               	movf	initGprsModem@currentState& (0+255),w,b
 21769                           
 21770                           ; Switch size 1, requested type "space"
 21771                           ; Number of cases is 4, Range of values is 0 to 3
 21772                           ; switch strategies available:
 21773                           ; Name         Instructions Cycles
 21774                           ; simple_byte           13     7 (average)
 21775                           ;	Chosen strategy is simple_byte
 21776  005030  0A00               	xorlw	0	; case 0
 21777  005032  B4D8               	btfsc	status,2,c
 21778  005034  D7C6               	goto	l2654
 21779  005036  0A01               	xorlw	1	; case 1
 21780  005038  B4D8               	btfsc	status,2,c
 21781  00503A  D7DC               	goto	l2660
 21782  00503C  0A03               	xorlw	3	; case 2
 21783  00503E  B4D8               	btfsc	status,2,c
 21784  005040  D7E3               	goto	l2661
 21785  005042  0A01               	xorlw	1	; case 3
 21786  005044  B4D8               	btfsc	status,2,c
 21787  005046  D7EC               	goto	l2662
 21788  005048                     l2659:
 21789                           
 21790                           ;app_init.c: 123: return isInitialized;
 21791                           
 21792                           ; BSR set to: 1
 21793  005048  0100               	movlb	0	; () banked
 21794  00504A  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 21795  00504C  0012               	return	
 21796  00504E                     __end_of_initGprsModem:
 21797                           	opt stack 0
 21798                           tosu	equ	0xFFF
 21799                           tosh	equ	0xFFE
 21800                           tosl	equ	0xFFD
 21801                           pclath	equ	0xFFA
 21802                           tblptru	equ	0xFF8
 21803                           tblptrh	equ	0xFF7
 21804                           tblptrl	equ	0xFF6
 21805                           tablat	equ	0xFF5
 21806                           prodh	equ	0xFF4
 21807                           prodl	equ	0xFF3
 21808                           intcon	equ	0xFF2
 21809                           intcon2	equ	0xFF1
 21810                           intcon3	equ	0xFF0
 21811                           indf0	equ	0xFEF
 21812                           postinc0	equ	0xFEE
 21813                           plusw0	equ	0xFEB
 21814                           fsr0h	equ	0xFEA
 21815                           fsr0l	equ	0xFE9
 21816                           wreg	equ	0xFE8
 21817                           indf1	equ	0xFE7
 21818                           postinc1	equ	0xFE6
 21819                           postdec1	equ	0xFE5
 21820                           fsr1h	equ	0xFE2
 21821                           fsr1l	equ	0xFE1
 21822                           indf2	equ	0xFDF
 21823                           postinc2	equ	0xFDE
 21824                           postdec2	equ	0xFDD
 21825                           plusw2	equ	0xFDB
 21826                           fsr2h	equ	0xFDA
 21827                           fsr2l	equ	0xFD9
 21828                           status	equ	0xFD8
 21829                           
 21830 ;; *************** function _secondsAppTimer *****************
 21831 ;; Defined at:
 21832 ;;		line 68 in file "../Source/c/04_App/app_utils.c"
 21833 ;; Parameters:    Size  Location     Type
 21834 ;;  seconds         1    wreg     unsigned char 
 21835 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21836 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), RAM(3775), 
 21837 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21838 ;; Auto vars:     Size  Location     Type
 21839 ;;  seconds         1   47[BANK0 ] unsigned char 
 21840 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21841 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21842 ;; Return value:  Size  Location     Type
 21843 ;;                  1    wreg      unsigned char 
 21844 ;; Registers used:
 21845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21846 ;; Tracked objects:
 21847 ;;		On entry : 0/0
 21848 ;;		On exit  : 0/0
 21849 ;;		Unchanged: 0/0
 21850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21851 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21852 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21854 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21855 ;;Total ram usage:        9 bytes
 21856 ;; Hardware stack levels used:    1
 21857 ;; Hardware stack levels required when called:   12
 21858 ;; This function calls:
 21859 ;;		___lwdiv
 21860 ;;		___wmul
 21861 ;; This function is called by:
 21862 ;;		_initGprsModem
 21863 ;;		_waitSetupCall
 21864 ;;		_triggerCmdFsm
 21865 ;;		_blinkForSeconds
 21866 ;; This function uses a non-reentrant model
 21867 ;;
 21868                           
 21869                           	psect	text98
 21870  0049BC                     __ptext98:
 21871                           	opt stack 0
 21872  0049BC                     _secondsAppTimer:
 21873                           	opt stack 14
 21874                           
 21875                           ; BSR set to: 0
 21876                           ;incstack = 0
 21877                           ;secondsAppTimer@seconds stored from wreg
 21878  0049BC  0100               	movlb	0	; () banked
 21879  0049BE  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21880                           
 21881                           ;app_utils.c: 70: bool isExpired = 1;
 21882  0049C0  0E01               	movlw	1
 21883  0049C2  0100               	movlb	0	; () banked
 21884  0049C4  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21885                           
 21886                           ; BSR set to: 0
 21887                           ;app_utils.c: 71: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 21888  0049C6  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21889  0049CA  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21890  0049CC  0E03               	movlw	3
 21891  0049CE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21892  0049D0  0EE8               	movlw	232
 21893  0049D2  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21894  0049D4  EC87  F033         	call	___wmul	;wreg free
 21895  0049D8  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21896  0049DC  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21897  0049E0  0E00               	movlw	0
 21898  0049E2  0100               	movlb	0	; () banked
 21899  0049E4  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21900  0049E6  0E64               	movlw	100
 21901  0049E8  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21902  0049EA  EC64  F02E         	call	___lwdiv	;wreg free
 21903  0049EE  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21904  0049F2  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21905                           
 21906                           ;app_utils.c: 73: if (*counter < destinationTicks)
 21907  0049F6  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21908  0049FA  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21909  0049FE  0100               	movlb	0	; () banked
 21910  004A00  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21911  004A02  5CDE               	subwf	postinc2,w,c
 21912  004A04  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21913  004A06  58DE               	subwfb	postinc2,w,c
 21914  004A08  B0D8               	btfsc	status,0,c
 21915  004A0A  D009               	goto	l2731
 21916                           
 21917                           ; BSR set to: 0
 21918                           ;app_utils.c: 74: {
 21919                           ;app_utils.c: 75: *counter += 1;
 21920  004A0C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21921  004A10  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21922  004A14  2ADE               	incf	postinc2,f,c
 21923  004A16  0E00               	movlw	0
 21924  004A18  22DD               	addwfc	postdec2,f,c
 21925                           
 21926                           ; BSR set to: 0
 21927                           ;app_utils.c: 76: isExpired = 0;
 21928  004A1A  0E00               	movlw	0
 21929  004A1C  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21930  004A1E                     l2731:
 21931                           
 21932                           ; BSR set to: 0
 21933                           ;app_utils.c: 77: }
 21934                           ;app_utils.c: 78: if (*counter == destinationTicks)
 21935                           
 21936                           ; BSR set to: 0
 21937  004A1E  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21938  004A22  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21939  004A26  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21940  004A28  18DE               	xorwf	postinc2,w,c
 21941  004A2A  E117               	bnz	l14255
 21942  004A2C  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21943  004A2E  18DE               	xorwf	postinc2,w,c
 21944  004A30  A4D8               	btfss	status,2,c
 21945  004A32  D013               	goto	l2734
 21946                           
 21947                           ; BSR set to: 0
 21948                           ;app_utils.c: 79: {
 21949                           ;app_utils.c: 80: if (isCyclic)
 21950  004A34  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21951  004A36  B4D8               	btfsc	status,2,c
 21952  004A38  D008               	goto	l2733
 21953                           
 21954                           ; BSR set to: 0
 21955                           ;app_utils.c: 81: {
 21956                           ;app_utils.c: 82: *counter = 0;
 21957  004A3A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21958  004A3E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21959  004A42  0E00               	movlw	0
 21960  004A44  6EDE               	movwf	postinc2,c
 21961  004A46  0E00               	movlw	0
 21962  004A48  D007               	goto	L35
 21963  004A4A                     l2733:
 21964                           
 21965                           ; BSR set to: 0
 21966                           ;app_utils.c: 84: else
 21967                           ;app_utils.c: 85: {
 21968                           ;app_utils.c: 86: *counter = 0xFFFF;
 21969                           
 21970                           ; BSR set to: 0
 21971  004A4A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21972  004A4E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21973  004A52  0EFF               	movlw	255
 21974  004A54  6EDE               	movwf	postinc2,c
 21975  004A56  0EFF               	movlw	255
 21976  004A58                     L35:
 21977  004A58  6EDD               	movwf	postdec2,c
 21978  004A5A                     l2734:
 21979  004A5A                     l14255:
 21980                           
 21981                           ; BSR set to: 0
 21982                           ;app_utils.c: 87: }
 21983                           ;app_utils.c: 88: }
 21984                           ;app_utils.c: 89: return isExpired;
 21985  004A5A  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21986  004A5C  0012               	return	
 21987  004A5E                     __end_of_secondsAppTimer:
 21988                           	opt stack 0
 21989                           tosu	equ	0xFFF
 21990                           tosh	equ	0xFFE
 21991                           tosl	equ	0xFFD
 21992                           pclath	equ	0xFFA
 21993                           tblptru	equ	0xFF8
 21994                           tblptrh	equ	0xFF7
 21995                           tblptrl	equ	0xFF6
 21996                           tablat	equ	0xFF5
 21997                           prodh	equ	0xFF4
 21998                           prodl	equ	0xFF3
 21999                           intcon	equ	0xFF2
 22000                           intcon2	equ	0xFF1
 22001                           intcon3	equ	0xFF0
 22002                           indf0	equ	0xFEF
 22003                           postinc0	equ	0xFEE
 22004                           plusw0	equ	0xFEB
 22005                           fsr0h	equ	0xFEA
 22006                           fsr0l	equ	0xFE9
 22007                           wreg	equ	0xFE8
 22008                           indf1	equ	0xFE7
 22009                           postinc1	equ	0xFE6
 22010                           postdec1	equ	0xFE5
 22011                           fsr1h	equ	0xFE2
 22012                           fsr1l	equ	0xFE1
 22013                           indf2	equ	0xFDF
 22014                           postinc2	equ	0xFDE
 22015                           postdec2	equ	0xFDD
 22016                           plusw2	equ	0xFDB
 22017                           fsr2h	equ	0xFDA
 22018                           fsr2l	equ	0xFD9
 22019                           status	equ	0xFD8
 22020                           
 22021 ;; *************** function _Mdm_SetSmsFormat *****************
 22022 ;; Defined at:
 22023 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22024 ;; Parameters:    Size  Location     Type
 22025 ;;  TextFormat      1    wreg     unsigned char 
 22026 ;; Auto vars:     Size  Location     Type
 22027 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22028 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22029 ;;  Index           1   35[BANK0 ] unsigned char 
 22030 ;; Return value:  Size  Location     Type
 22031 ;;                  1    wreg      void 
 22032 ;; Registers used:
 22033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22034 ;; Tracked objects:
 22035 ;;		On entry : 0/0
 22036 ;;		On exit  : 0/0
 22037 ;;		Unchanged: 0/0
 22038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22040 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22042 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22043 ;;Total ram usage:       22 bytes
 22044 ;; Hardware stack levels used:    1
 22045 ;; Hardware stack levels required when called:   13
 22046 ;; This function calls:
 22047 ;;		_Uart_WriteString
 22048 ;; This function is called by:
 22049 ;;		_initGprsModem
 22050 ;; This function uses a non-reentrant model
 22051 ;;
 22052                           
 22053                           	psect	text99
 22054  005E60                     __ptext99:
 22055                           	opt stack 0
 22056  005E60                     _Mdm_SetSmsFormat:
 22057                           	opt stack 12
 22058                           
 22059                           ; BSR set to: 0
 22060                           ;incstack = 0
 22061                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22062  005E60  0100               	movlb	0	; () banked
 22063  005E62  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22064                           
 22065                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22066                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22067  005E64  0E00               	movlw	0
 22068  005E66  0100               	movlb	0	; () banked
 22069  005E68  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22070                           
 22071                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22072  005E6A  0E41               	movlw	65
 22073  005E6C  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22074                           
 22075                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22076  005E6E  0E54               	movlw	84
 22077  005E70  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22078                           
 22079                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22080  005E72  0E2B               	movlw	43
 22081  005E74  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22082                           
 22083                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22084  005E76  0E43               	movlw	67
 22085  005E78  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22086                           
 22087                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22088  005E7A  0E4D               	movlw	77
 22089  005E7C  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22090                           
 22091                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22092  005E7E  0E47               	movlw	71
 22093  005E80  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22094                           
 22095                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22096  005E82  0E46               	movlw	70
 22097  005E84  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22098                           
 22099                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22100  005E86  0E3D               	movlw	61
 22101  005E88  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22102                           
 22103                           ; BSR set to: 0
 22104                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22105  005E8A  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22106  005E8C  A4D8               	btfss	status,2,c
 22107  005E8E  D002               	goto	l1121
 22108                           
 22109                           ; BSR set to: 0
 22110                           ;mdm_gsm_gprs.c: 854: {
 22111                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22112  005E90  0E31               	movlw	49
 22113  005E92  D001               	goto	L36
 22114  005E94                     l1121:
 22115                           
 22116                           ; BSR set to: 0
 22117                           ;mdm_gsm_gprs.c: 857: else
 22118                           ;mdm_gsm_gprs.c: 858: {
 22119                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22120                           
 22121                           ; BSR set to: 0
 22122  005E94  0E30               	movlw	48
 22123  005E96                     L36:
 22124  005E96  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22125                           
 22126                           ; BSR set to: 0
 22127                           ;mdm_gsm_gprs.c: 860: }
 22128                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22129  005E98  0E0D               	movlw	13
 22130  005E9A  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22131                           
 22132                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22133  005E9C  0E00               	movlw	0
 22134  005E9E  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22135                           
 22136                           ; BSR set to: 0
 22137                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22138  005EA0  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22139  005EA2  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22140  005EA4  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22141  005EA6  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22142  005EA8  0E01               	movlw	1
 22143  005EAA  EC88  F031         	call	_Uart_WriteString
 22144  005EAE  0012               	return		;funcret
 22145  005EB0                     __end_of_Mdm_SetSmsFormat:
 22146                           	opt stack 0
 22147                           tosu	equ	0xFFF
 22148                           tosh	equ	0xFFE
 22149                           tosl	equ	0xFFD
 22150                           pclath	equ	0xFFA
 22151                           tblptru	equ	0xFF8
 22152                           tblptrh	equ	0xFF7
 22153                           tblptrl	equ	0xFF6
 22154                           tablat	equ	0xFF5
 22155                           prodh	equ	0xFF4
 22156                           prodl	equ	0xFF3
 22157                           intcon	equ	0xFF2
 22158                           intcon2	equ	0xFF1
 22159                           intcon3	equ	0xFF0
 22160                           indf0	equ	0xFEF
 22161                           postinc0	equ	0xFEE
 22162                           plusw0	equ	0xFEB
 22163                           fsr0h	equ	0xFEA
 22164                           fsr0l	equ	0xFE9
 22165                           wreg	equ	0xFE8
 22166                           indf1	equ	0xFE7
 22167                           postinc1	equ	0xFE6
 22168                           postdec1	equ	0xFE5
 22169                           fsr1h	equ	0xFE2
 22170                           fsr1l	equ	0xFE1
 22171                           indf2	equ	0xFDF
 22172                           postinc2	equ	0xFDE
 22173                           postdec2	equ	0xFDD
 22174                           plusw2	equ	0xFDB
 22175                           fsr2h	equ	0xFDA
 22176                           fsr2l	equ	0xFD9
 22177                           status	equ	0xFD8
 22178                           
 22179 ;; *************** function _initEeprom *****************
 22180 ;; Defined at:
 22181 ;;		line 130 in file "../Source/c/04_App/app_init.c"
 22182 ;; Parameters:    Size  Location     Type
 22183 ;;		None
 22184 ;; Auto vars:     Size  Location     Type
 22185 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22186 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22187 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22188 ;; Return value:  Size  Location     Type
 22189 ;;                  1    wreg      unsigned char 
 22190 ;; Registers used:
 22191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22192 ;; Tracked objects:
 22193 ;;		On entry : 0/0
 22194 ;;		On exit  : 0/0
 22195 ;;		Unchanged: 0/0
 22196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22198 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22200 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22201 ;;Total ram usage:        3 bytes
 22202 ;; Hardware stack levels used:    1
 22203 ;; Hardware stack levels required when called:   17
 22204 ;; This function calls:
 22205 ;;		_Eeprom_Read
 22206 ;; This function is called by:
 22207 ;;		_initFsm
 22208 ;; This function uses a non-reentrant model
 22209 ;;
 22210                           
 22211                           	psect	text100
 22212  00504E                     __ptext100:
 22213                           	opt stack 0
 22214  00504E                     _initEeprom:
 22215                           	opt stack 9
 22216                           
 22217                           ;app_init.c: 132: const uint8_t addressToRead = 0;
 22218                           
 22219                           ;incstack = 0
 22220  00504E  0E00               	movlw	0
 22221  005050  0101               	movlb	1	; () banked
 22222  005052  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22223                           
 22224                           ;app_init.c: 133: static eepromStates currentState = EEPROM_INIT;
 22225                           ;app_init.c: 134: EepromStsType memoryOpResult = OP_PENDING;
 22226  005054  0E02               	movlw	2
 22227  005056  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22228                           
 22229                           ;app_init.c: 135: bool isInitialized = 0;
 22230  005058  0E00               	movlw	0
 22231  00505A  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22232                           
 22233                           ;app_init.c: 137: switch (currentState)
 22234  00505C  D034               	goto	l2669
 22235  00505E                     
 22236                           ; BSR set to: 1
 22237                           ;app_init.c: 140: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22238                           
 22239                           ; BSR set to: 1
 22240  00505E  0EAB               	movlw	low _memoryPreamble
 22241  005060  0100               	movlb	0	; () banked
 22242  005062  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22243  005064  0E03               	movlw	high _memoryPreamble
 22244  005066  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22245  005068  0E04               	movlw	4
 22246  00506A  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22247  00506C  0E00               	movlw	0
 22248  00506E  EC10  F02E         	call	_Eeprom_Read
 22249  005072  0101               	movlb	1	; () banked
 22250  005074  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22251                           
 22252                           ; BSR set to: 1
 22253                           ;app_init.c: 141: if (memoryOpResult != OP_PENDING)
 22254  005076  0E02               	movlw	2
 22255  005078  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22256  00507A  B4D8               	btfsc	status,2,c
 22257  00507C  D02E               	goto	l2674
 22258                           
 22259                           ; BSR set to: 1
 22260                           ;app_init.c: 142: {
 22261                           ;app_init.c: 143: if (memoryPreamble[0] == 'U' &&
 22262                           ;app_init.c: 144: memoryPreamble[1] == 'S' &&
 22263                           ;app_init.c: 145: memoryPreamble[2] == 'I' &&
 22264                           ;app_init.c: 146: memoryPreamble[3] == 'M')
 22265  00507E  0E55               	movlw	85
 22266  005080  0103               	movlb	3	; () banked
 22267  005082  19AB               	xorwf	_memoryPreamble& (0+255),w,b
 22268  005084  A4D8               	btfss	status,2,c
 22269  005086  D00E               	goto	l2672
 22270                           
 22271                           ; BSR set to: 3
 22272  005088  0E53               	movlw	83
 22273  00508A  19AC               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22274  00508C  A4D8               	btfss	status,2,c
 22275  00508E  D00A               	goto	l2672
 22276                           
 22277                           ; BSR set to: 3
 22278  005090  0E49               	movlw	73
 22279  005092  19AD               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22280  005094  A4D8               	btfss	status,2,c
 22281  005096  D006               	goto	l2672
 22282                           
 22283                           ; BSR set to: 3
 22284  005098  0E4D               	movlw	77
 22285  00509A  19AE               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22286  00509C  A4D8               	btfss	status,2,c
 22287  00509E  D002               	goto	l2672
 22288                           
 22289                           ; BSR set to: 3
 22290                           ;app_init.c: 147: {
 22291                           ;app_init.c: 148: currentState = EEPROM_NOT_EMPTY;
 22292  0050A0  0E02               	movlw	2
 22293  0050A2  D001               	goto	L37
 22294  0050A4                     l2672:
 22295                           
 22296                           ;app_init.c: 150: else
 22297                           ;app_init.c: 151: {
 22298                           ;app_init.c: 152: currentState = EEPROM_EMPTY;
 22299                           
 22300                           ; BSR set to: 1
 22301  0050A4  0E01               	movlw	1
 22302  0050A6                     L37:
 22303  0050A6  0101               	movlb	1	; () banked
 22304  0050A8  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22305                           
 22306                           ; BSR set to: 1
 22307                           ;app_init.c: 153: }
 22308                           ;app_init.c: 154: }
 22309                           ;app_init.c: 155: break;
 22310                           
 22311                           ; BSR set to: 1
 22312  0050AA  D017               	goto	l2674
 22313  0050AC                     
 22314                           ; BSR set to: 1
 22315                           ;app_init.c: 158: currentState = EEPROM_INIT;
 22316                           
 22317                           ; BSR set to: 1
 22318  0050AC  0E00               	movlw	0
 22319  0050AE  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22320                           
 22321                           ;app_init.c: 159: isInitialized = 1;
 22322  0050B0  0E01               	movlw	1
 22323  0050B2  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22324                           
 22325                           ;app_init.c: 160: isMemoryEmpty = 1;
 22326  0050B4  0E01               	movlw	1
 22327  0050B6  D005               	goto	L38
 22328  0050B8                     
 22329                           ; BSR set to: 1
 22330                           ;app_init.c: 164: currentState = EEPROM_INIT;
 22331                           
 22332                           ; BSR set to: 1
 22333  0050B8  0E00               	movlw	0
 22334  0050BA  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22335                           
 22336                           ;app_init.c: 165: isInitialized = 1;
 22337  0050BC  0E01               	movlw	1
 22338  0050BE  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22339                           
 22340                           ;app_init.c: 166: isMemoryEmpty = 0;
 22341  0050C0  0E00               	movlw	0
 22342  0050C2                     L38:
 22343  0050C2  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22344                           
 22345                           ; BSR set to: 1
 22346                           ;app_init.c: 171: }
 22347                           
 22348                           ; BSR set to: 1
 22349                           ;app_init.c: 170: break;
 22350                           
 22351                           ;app_init.c: 169: default:
 22352                           
 22353                           ;app_init.c: 167: break;
 22354  0050C4  D00A               	goto	l2674
 22355  0050C6                     l2669:
 22356                           
 22357                           ; BSR set to: 1
 22358                           
 22359                           ; BSR set to: 1
 22360  0050C6  51D7               	movf	initEeprom@currentState& (0+255),w,b
 22361                           
 22362                           ; Switch size 1, requested type "space"
 22363                           ; Number of cases is 3, Range of values is 0 to 2
 22364                           ; switch strategies available:
 22365                           ; Name         Instructions Cycles
 22366                           ; simple_byte           10     6 (average)
 22367                           ;	Chosen strategy is simple_byte
 22368  0050C8  0A00               	xorlw	0	; case 0
 22369  0050CA  B4D8               	btfsc	status,2,c
 22370  0050CC  D7C8               	goto	l2670
 22371  0050CE  0A01               	xorlw	1	; case 1
 22372  0050D0  B4D8               	btfsc	status,2,c
 22373  0050D2  D7EC               	goto	l2675
 22374  0050D4  0A03               	xorlw	3	; case 2
 22375  0050D6  B4D8               	btfsc	status,2,c
 22376  0050D8  D7EF               	goto	l2676
 22377  0050DA                     l2674:
 22378                           
 22379                           ; BSR set to: 1
 22380                           ;app_init.c: 172: return isInitialized;
 22381                           
 22382                           ; BSR set to: 1
 22383  0050DA  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22384  0050DC  0012               	return	
 22385  0050DE                     __end_of_initEeprom:
 22386                           	opt stack 0
 22387                           tosu	equ	0xFFF
 22388                           tosh	equ	0xFFE
 22389                           tosl	equ	0xFFD
 22390                           pclath	equ	0xFFA
 22391                           tblptru	equ	0xFF8
 22392                           tblptrh	equ	0xFF7
 22393                           tblptrl	equ	0xFF6
 22394                           tablat	equ	0xFF5
 22395                           prodh	equ	0xFF4
 22396                           prodl	equ	0xFF3
 22397                           intcon	equ	0xFF2
 22398                           intcon2	equ	0xFF1
 22399                           intcon3	equ	0xFF0
 22400                           indf0	equ	0xFEF
 22401                           postinc0	equ	0xFEE
 22402                           plusw0	equ	0xFEB
 22403                           fsr0h	equ	0xFEA
 22404                           fsr0l	equ	0xFE9
 22405                           wreg	equ	0xFE8
 22406                           indf1	equ	0xFE7
 22407                           postinc1	equ	0xFE6
 22408                           postdec1	equ	0xFE5
 22409                           fsr1h	equ	0xFE2
 22410                           fsr1l	equ	0xFE1
 22411                           indf2	equ	0xFDF
 22412                           postinc2	equ	0xFDE
 22413                           postdec2	equ	0xFDD
 22414                           plusw2	equ	0xFDB
 22415                           fsr2h	equ	0xFDA
 22416                           fsr2l	equ	0xFD9
 22417                           status	equ	0xFD8
 22418                           
 22419 ;; *************** function _detectCmd *****************
 22420 ;; Defined at:
 22421 ;;		line 114 in file "../Source/c/04_App/app.c"
 22422 ;; Parameters:    Size  Location     Type
 22423 ;;		None
 22424 ;; Auto vars:     Size  Location     Type
 22425 ;;  currentState    1   53[BANK0 ] enum E9012
 22426 ;; Return value:  Size  Location     Type
 22427 ;;                  1    wreg      enum E9012
 22428 ;; Registers used:
 22429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22430 ;; Tracked objects:
 22431 ;;		On entry : 0/0
 22432 ;;		On exit  : 0/0
 22433 ;;		Unchanged: 0/0
 22434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22439 ;;Total ram usage:        1 bytes
 22440 ;; Hardware stack levels used:    1
 22441 ;; Hardware stack levels required when called:   14
 22442 ;; This function calls:
 22443 ;;		_GetCallerNumber
 22444 ;;		_GetLastInteractionNumber
 22445 ;;		_Mdm_GetSmsData
 22446 ;;		_Mdm_HangPhoneCall
 22447 ;;		_Mdm_IsRinging
 22448 ;;		_Mdm_IsSmsReceived
 22449 ;;		_Mdm_RequestSmsData
 22450 ;;		_StringCopy
 22451 ;;		_Uart_WriteConstString
 22452 ;;		_parseCommand
 22453 ;; This function is called by:
 22454 ;;		_MyApp_Task
 22455 ;; This function uses a non-reentrant model
 22456 ;;
 22457                           
 22458                           	psect	text101
 22459  004B9C                     __ptext101:
 22460                           	opt stack 0
 22461  004B9C                     _detectCmd:
 22462                           	opt stack 13
 22463                           
 22464                           ;app.c: 116: gateFsmStates currentState = GATE_WAIT_EVENT;
 22465                           
 22466                           ; BSR set to: 1
 22467                           ;incstack = 0
 22468  004B9C  0E01               	movlw	1
 22469  004B9E  0100               	movlb	0	; () banked
 22470  004BA0  6F95               	movwf	detectCmd@currentState& (0+255),b
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;app.c: 117: if (Mdm_IsSmsReceived())
 22474  004BA2  ECC0  F033         	call	_Mdm_IsSmsReceived	;wreg free
 22475  004BA6  0900               	iorlw	0
 22476  004BA8  A4D8               	btfss	status,2,c
 22477                           
 22478                           ;app.c: 118: {
 22479                           ;app.c: 119: Mdm_RequestSmsData();
 22480  004BAA  EC8E  F035         	call	_Mdm_RequestSmsData	;wreg free
 22481                           
 22482                           ;app.c: 120: }
 22483                           ;app.c: 121: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 22484  004BAE  0E8B               	movlw	low _smsText
 22485  004BB0  0100               	movlb	0	; () banked
 22486  004BB2  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 22487  004BB4  0E04               	movlw	high _smsText
 22488  004BB6  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 22489  004BB8  EC57  F02B         	call	_Mdm_GetSmsData	;wreg free
 22490  004BBC  06E8               	decf	wreg,f,c
 22491  004BBE  A4D8               	btfss	status,2,c
 22492  004BC0  D01D               	goto	l2584
 22493                           
 22494                           ;app.c: 122: {
 22495                           ;app.c: 123: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 22496  004BC2  0E2F               	movlw	low STR_29
 22497  004BC4  0100               	movlb	0	; () banked
 22498  004BC6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22499  004BC8  0EFF               	movlw	high STR_29
 22500  004BCA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22501  004BCC  0E01               	movlw	1
 22502  004BCE  ECE8  F030         	call	_Uart_WriteConstString
 22503                           
 22504                           ;app.c: 124: currentState = parseCommand();
 22505  004BD2  ECA6  F017         	call	_parseCommand	;wreg free
 22506  004BD6  0100               	movlb	0	; () banked
 22507  004BD8  6F95               	movwf	detectCmd@currentState& (0+255),b
 22508                           
 22509                           ; BSR set to: 0
 22510                           ;app.c: 125: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 22511  004BDA  ECBB  F035         	call	_GetLastInteractionNumber	;wreg free
 22512  004BDE  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 22513  004BE2  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 22514  004BE6  0EC2               	movlw	low _receivedNumber
 22515  004BE8  0100               	movlb	0	; () banked
 22516  004BEA  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22517  004BEC  0E04               	movlw	high _receivedNumber
 22518  004BEE  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22519  004BF0  0E00               	movlw	0
 22520  004BF2  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22521  004BF4  0E0D               	movlw	13
 22522  004BF6  6F89               	movwf	StringCopy@Len& (0+255),b
 22523  004BF8  EC24  F02C         	call	_StringCopy	;wreg free
 22524  004BFC                     l2584:
 22525                           
 22526                           ;app.c: 126: }
 22527                           ;app.c: 127: if (Mdm_IsRinging())
 22528  004BFC  ECD2  F033         	call	_Mdm_IsRinging	;wreg free
 22529  004C00  0900               	iorlw	0
 22530  004C02  B4D8               	btfsc	status,2,c
 22531  004C04  D016               	goto	l2585
 22532                           
 22533                           ;app.c: 128: {
 22534                           ;app.c: 129: Mdm_HangPhoneCall();
 22535  004C06  EC6C  F035         	call	_Mdm_HangPhoneCall	;wreg free
 22536                           
 22537                           ;app.c: 130: currentState = GATE_TRIGGER_CMD;
 22538  004C0A  0E04               	movlw	4
 22539  004C0C  0100               	movlb	0	; () banked
 22540  004C0E  6F95               	movwf	detectCmd@currentState& (0+255),b
 22541                           
 22542                           ; BSR set to: 0
 22543                           ;app.c: 131: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 22544  004C10  EC37  F032         	call	_GetCallerNumber	;wreg free
 22545  004C14  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 22546  004C18  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 22547  004C1C  0EC2               	movlw	low _receivedNumber
 22548  004C1E  0100               	movlb	0	; () banked
 22549  004C20  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22550  004C22  0E04               	movlw	high _receivedNumber
 22551  004C24  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22552  004C26  0E00               	movlw	0
 22553  004C28  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22554  004C2A  0E0D               	movlw	13
 22555  004C2C  6F89               	movwf	StringCopy@Len& (0+255),b
 22556  004C2E  EC24  F02C         	call	_StringCopy	;wreg free
 22557  004C32                     l2585:
 22558                           
 22559                           ;app.c: 132: }
 22560                           ;app.c: 133: return currentState;
 22561  004C32  0100               	movlb	0	; () banked
 22562  004C34  5195               	movf	detectCmd@currentState& (0+255),w,b
 22563  004C36  0012               	return	
 22564  004C38                     __end_of_detectCmd:
 22565                           	opt stack 0
 22566                           tosu	equ	0xFFF
 22567                           tosh	equ	0xFFE
 22568                           tosl	equ	0xFFD
 22569                           pclath	equ	0xFFA
 22570                           tblptru	equ	0xFF8
 22571                           tblptrh	equ	0xFF7
 22572                           tblptrl	equ	0xFF6
 22573                           tablat	equ	0xFF5
 22574                           prodh	equ	0xFF4
 22575                           prodl	equ	0xFF3
 22576                           intcon	equ	0xFF2
 22577                           intcon2	equ	0xFF1
 22578                           intcon3	equ	0xFF0
 22579                           indf0	equ	0xFEF
 22580                           postinc0	equ	0xFEE
 22581                           plusw0	equ	0xFEB
 22582                           fsr0h	equ	0xFEA
 22583                           fsr0l	equ	0xFE9
 22584                           wreg	equ	0xFE8
 22585                           indf1	equ	0xFE7
 22586                           postinc1	equ	0xFE6
 22587                           postdec1	equ	0xFE5
 22588                           fsr1h	equ	0xFE2
 22589                           fsr1l	equ	0xFE1
 22590                           indf2	equ	0xFDF
 22591                           postinc2	equ	0xFDE
 22592                           postdec2	equ	0xFDD
 22593                           plusw2	equ	0xFDB
 22594                           fsr2h	equ	0xFDA
 22595                           fsr2l	equ	0xFD9
 22596                           status	equ	0xFD8
 22597                           
 22598 ;; *************** function _parseCommand *****************
 22599 ;; Defined at:
 22600 ;;		line 74 in file "../Source/c/04_App/app.c"
 22601 ;; Parameters:    Size  Location     Type
 22602 ;;		None
 22603 ;; Auto vars:     Size  Location     Type
 22604 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 22605 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 22606 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 22607 ;;  state           1   52[BANK0 ] enum E9012
 22608 ;; Return value:  Size  Location     Type
 22609 ;;                  1    wreg      enum E9012
 22610 ;; Registers used:
 22611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22612 ;; Tracked objects:
 22613 ;;		On entry : 0/0
 22614 ;;		On exit  : 0/0
 22615 ;;		Unchanged: 0/0
 22616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22618 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22620 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22621 ;;Total ram usage:       13 bytes
 22622 ;; Hardware stack levels used:    1
 22623 ;; Hardware stack levels required when called:   12
 22624 ;; This function calls:
 22625 ;;		_StringCompare
 22626 ;;		_isNumberValid
 22627 ;; This function is called by:
 22628 ;;		_detectCmd
 22629 ;; This function uses a non-reentrant model
 22630 ;;
 22631                           
 22632                           	psect	text102
 22633  002F4C                     __ptext102:
 22634                           	opt stack 0
 22635  002F4C                     _parseCommand:
 22636                           	opt stack 14
 22637                           
 22638                           ;app.c: 76: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 22639                           
 22640                           ; BSR set to: 0
 22641                           ;incstack = 0
 22642  002F4C  0E2A               	movlw	low parseCommand@F9026
 22643  002F4E  6EF6               	movwf	tblptrl,c
 22644  002F50                     	if	1	;There is more than 1 active tblptr byte
 22645  002F50  0EFC               	movlw	high parseCommand@F9026
 22646  002F52  6EF7               	movwf	tblptrh,c
 22647  002F54                     	endif
 22648  002F54                     	if	0	;There are less than 3 active tblptr bytes
 22649  002F54                     	endif
 22650  002F54  0009               	tblrd		*+
 22651  002F56  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 22652  002F5A  0009               	tblrd		*+
 22653  002F5C  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 22654  002F60  0009               	tblrd		*+
 22655  002F62  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 22656  002F66  000A               	tblrd		*-
 22657  002F68  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 22658                           
 22659                           ;app.c: 77: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 22660  002F6C  0E26               	movlw	low parseCommand@F9028
 22661  002F6E  6EF6               	movwf	tblptrl,c
 22662  002F70                     	if	1	;There is more than 1 active tblptr byte
 22663  002F70  0EFC               	movlw	high parseCommand@F9028
 22664  002F72  6EF7               	movwf	tblptrh,c
 22665  002F74                     	endif
 22666  002F74                     	if	0	;There are less than 3 active tblptr bytes
 22667  002F74                     	endif
 22668  002F74  0009               	tblrd		*+
 22669  002F76  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 22670  002F7A  0009               	tblrd		*+
 22671  002F7C  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 22672  002F80  0009               	tblrd		*+
 22673  002F82  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 22674  002F86  000A               	tblrd		*-
 22675  002F88  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 22676                           
 22677                           ;app.c: 78: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 22678  002F8C  0E22               	movlw	low parseCommand@F9030
 22679  002F8E  6EF6               	movwf	tblptrl,c
 22680  002F90                     	if	1	;There is more than 1 active tblptr byte
 22681  002F90  0EFC               	movlw	high parseCommand@F9030
 22682  002F92  6EF7               	movwf	tblptrh,c
 22683  002F94                     	endif
 22684  002F94                     	if	0	;There are less than 3 active tblptr bytes
 22685  002F94                     	endif
 22686  002F94  0009               	tblrd		*+
 22687  002F96  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 22688  002F9A  0009               	tblrd		*+
 22689  002F9C  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 22690  002FA0  0009               	tblrd		*+
 22691  002FA2  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 22692  002FA6  000A               	tblrd		*-
 22693  002FA8  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 22694                           
 22695                           ;app.c: 79: gateFsmStates state = GATE_WAIT_EVENT;
 22696  002FAC  0E01               	movlw	1
 22697  002FAE  0100               	movlb	0	; () banked
 22698  002FB0  6F94               	movwf	parseCommand@state& (0+255),b
 22699                           
 22700                           ; BSR set to: 0
 22701                           ;app.c: 81: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 22702  002FB2  0E8B               	movlw	low _smsText
 22703  002FB4  6F7D               	movwf	StringCompare@String1& (0+255),b
 22704  002FB6  0E04               	movlw	high _smsText
 22705  002FB8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22706  002FBA  0E88               	movlw	low parseCommand@addNumberCmd
 22707  002FBC  6F7F               	movwf	StringCompare@String2& (0+255),b
 22708  002FBE  0E00               	movlw	high parseCommand@addNumberCmd
 22709  002FC0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22710  002FC2  0E00               	movlw	0
 22711  002FC4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22712  002FC6  0E04               	movlw	4
 22713  002FC8  6F81               	movwf	StringCompare@Len& (0+255),b
 22714  002FCA  ECB7  F02E         	call	_StringCompare	;wreg free
 22715  002FCE  0900               	iorlw	0
 22716  002FD0  B4D8               	btfsc	status,2,c
 22717  002FD2  D00E               	goto	l2570
 22718                           
 22719                           ;app.c: 82: {
 22720                           ;app.c: 83: if (!isNumberValid(smsText + 4))
 22721  002FD4  0E8F               	movlw	low (_smsText+4)
 22722  002FD6  0100               	movlb	0	; () banked
 22723  002FD8  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22724  002FDA  0E04               	movlw	high (_smsText+4)
 22725  002FDC  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22726  002FDE  ECF1  F02B         	call	_isNumberValid	;wreg free
 22727  002FE2  0900               	iorlw	0
 22728  002FE4  A4D8               	btfss	status,2,c
 22729  002FE6  D002               	goto	l2571
 22730  002FE8                     u14490:
 22731                           
 22732                           ;app.c: 84: {
 22733                           ;app.c: 85: state = GATE_WAIT_EVENT;
 22734  002FE8  0E01               	movlw	1
 22735  002FEA  D033               	goto	L42
 22736  002FEC                     l2571:
 22737                           
 22738                           ;app.c: 87: else
 22739                           ;app.c: 88: {
 22740                           ;app.c: 89: state = GATE_ADD_CMD;
 22741                           
 22742                           ; BSR set to: 0
 22743  002FEC  0E02               	movlw	2
 22744  002FEE  D031               	goto	L42
 22745  002FF0                     l2570:
 22746                           
 22747                           ;app.c: 92: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCmd)))
 22748                           
 22749                           ; BSR set to: 0
 22750  002FF0  0E8B               	movlw	low _smsText
 22751  002FF2  0100               	movlb	0	; () banked
 22752  002FF4  6F7D               	movwf	StringCompare@String1& (0+255),b
 22753  002FF6  0E04               	movlw	high _smsText
 22754  002FF8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22755  002FFA  0E8C               	movlw	low parseCommand@deleteNumberCmd
 22756  002FFC  6F7F               	movwf	StringCompare@String2& (0+255),b
 22757  002FFE  0E00               	movlw	high parseCommand@deleteNumberCmd
 22758  003000  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22759  003002  0E00               	movlw	0
 22760  003004  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22761  003006  0E04               	movlw	4
 22762  003008  6F81               	movwf	StringCompare@Len& (0+255),b
 22763  00300A  ECB7  F02E         	call	_StringCompare	;wreg free
 22764  00300E  0900               	iorlw	0
 22765  003010  B4D8               	btfsc	status,2,c
 22766  003012  D00C               	goto	l2574
 22767                           
 22768                           ;app.c: 93: {
 22769                           ;app.c: 94: if (!isNumberValid(smsText + 4))
 22770  003014  0E8F               	movlw	low (_smsText+4)
 22771  003016  0100               	movlb	0	; () banked
 22772  003018  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22773  00301A  0E04               	movlw	high (_smsText+4)
 22774  00301C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22775  00301E  ECF1  F02B         	call	_isNumberValid	;wreg free
 22776  003022  0900               	iorlw	0
 22777  003024  B4D8               	btfsc	status,2,c
 22778  003026  D7E0               	goto	u14490
 22779                           
 22780                           ;app.c: 98: else
 22781                           ;app.c: 99: {
 22782                           ;app.c: 100: state = GATE_DEL_CMD;
 22783                           
 22784                           ; BSR set to: 0
 22785                           
 22786                           ;app.c: 97: }
 22787                           
 22788                           ;app.c: 95: {
 22789                           ;app.c: 96: state = GATE_WAIT_EVENT;
 22790  003028  0E03               	movlw	3
 22791  00302A  D013               	goto	L42
 22792  00302C                     l2574:
 22793                           
 22794                           ;app.c: 103: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 22795                           
 22796                           ; BSR set to: 0
 22797  00302C  0E8B               	movlw	low _smsText
 22798  00302E  0100               	movlb	0	; () banked
 22799  003030  6F7D               	movwf	StringCompare@String1& (0+255),b
 22800  003032  0E04               	movlw	high _smsText
 22801  003034  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22802  003036  0E90               	movlw	low parseCommand@resetCmd
 22803  003038  6F7F               	movwf	StringCompare@String2& (0+255),b
 22804  00303A  0E00               	movlw	high parseCommand@resetCmd
 22805  00303C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22806  00303E  0E00               	movlw	0
 22807  003040  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22808  003042  0E04               	movlw	4
 22809  003044  6F81               	movwf	StringCompare@Len& (0+255),b
 22810  003046  ECB7  F02E         	call	_StringCompare	;wreg free
 22811  00304A  0900               	iorlw	0
 22812  00304C  B4D8               	btfsc	status,2,c
 22813  00304E  D003               	goto	l2578
 22814                           
 22815                           ;app.c: 104: {
 22816                           ;app.c: 105: state = GATE_RESET;
 22817  003050  0E05               	movlw	5
 22818  003052                     L42:
 22819  003052  0100               	movlb	0	; () banked
 22820  003054  6F94               	movwf	parseCommand@state& (0+255),b
 22821  003056                     l2578:
 22822                           
 22823                           ;app.c: 110: }
 22824                           ;app.c: 111: return state;
 22825                           
 22826                           ; BSR set to: 0
 22827                           
 22828                           ; BSR set to: 0
 22829                           
 22830                           ; BSR set to: 0
 22831                           
 22832                           ;app.c: 107: else
 22833                           ;app.c: 108: {
 22834                           
 22835                           ; BSR set to: 0
 22836  003056  0100               	movlb	0	; () banked
 22837  003058  5194               	movf	parseCommand@state& (0+255),w,b
 22838  00305A  0012               	return	
 22839  00305C                     __end_of_parseCommand:
 22840                           	opt stack 0
 22841                           tosu	equ	0xFFF
 22842                           tosh	equ	0xFFE
 22843                           tosl	equ	0xFFD
 22844                           pclath	equ	0xFFA
 22845                           tblptru	equ	0xFF8
 22846                           tblptrh	equ	0xFF7
 22847                           tblptrl	equ	0xFF6
 22848                           tablat	equ	0xFF5
 22849                           prodh	equ	0xFF4
 22850                           prodl	equ	0xFF3
 22851                           intcon	equ	0xFF2
 22852                           intcon2	equ	0xFF1
 22853                           intcon3	equ	0xFF0
 22854                           indf0	equ	0xFEF
 22855                           postinc0	equ	0xFEE
 22856                           plusw0	equ	0xFEB
 22857                           fsr0h	equ	0xFEA
 22858                           fsr0l	equ	0xFE9
 22859                           wreg	equ	0xFE8
 22860                           indf1	equ	0xFE7
 22861                           postinc1	equ	0xFE6
 22862                           postdec1	equ	0xFE5
 22863                           fsr1h	equ	0xFE2
 22864                           fsr1l	equ	0xFE1
 22865                           indf2	equ	0xFDF
 22866                           postinc2	equ	0xFDE
 22867                           postdec2	equ	0xFDD
 22868                           plusw2	equ	0xFDB
 22869                           fsr2h	equ	0xFDA
 22870                           fsr2l	equ	0xFD9
 22871                           status	equ	0xFD8
 22872                           
 22873 ;; *************** function _Mdm_RequestSmsData *****************
 22874 ;; Defined at:
 22875 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22876 ;; Parameters:    Size  Location     Type
 22877 ;;		None
 22878 ;; Auto vars:     Size  Location     Type
 22879 ;;		None
 22880 ;; Return value:  Size  Location     Type
 22881 ;;                  1    wreg      void 
 22882 ;; Registers used:
 22883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22884 ;; Tracked objects:
 22885 ;;		On entry : 0/0
 22886 ;;		On exit  : 0/0
 22887 ;;		Unchanged: 0/0
 22888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22893 ;;Total ram usage:        0 bytes
 22894 ;; Hardware stack levels used:    1
 22895 ;; Hardware stack levels required when called:   12
 22896 ;; This function calls:
 22897 ;;		_GenerateEvt
 22898 ;; This function is called by:
 22899 ;;		_detectCmd
 22900 ;; This function uses a non-reentrant model
 22901 ;;
 22902                           
 22903                           	psect	text103
 22904  006B1C                     __ptext103:
 22905                           	opt stack 0
 22906  006B1C                     _Mdm_RequestSmsData:
 22907                           	opt stack 14
 22908                           
 22909                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22910                           
 22911                           ; BSR set to: 0
 22912                           ;incstack = 0
 22913  006B1C  0EDB               	movlw	low _GetSmsText
 22914  006B1E  0100               	movlb	0	; () banked
 22915  006B20  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22916  006B22  0E00               	movlw	high _GetSmsText
 22917  006B24  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22918  006B26  EC21  F035         	call	_GenerateEvt	;wreg free
 22919  006B2A  0012               	return		;funcret
 22920  006B2C                     __end_of_Mdm_RequestSmsData:
 22921                           	opt stack 0
 22922                           tosu	equ	0xFFF
 22923                           tosh	equ	0xFFE
 22924                           tosl	equ	0xFFD
 22925                           pclath	equ	0xFFA
 22926                           tblptru	equ	0xFF8
 22927                           tblptrh	equ	0xFF7
 22928                           tblptrl	equ	0xFF6
 22929                           tablat	equ	0xFF5
 22930                           prodh	equ	0xFF4
 22931                           prodl	equ	0xFF3
 22932                           intcon	equ	0xFF2
 22933                           intcon2	equ	0xFF1
 22934                           intcon3	equ	0xFF0
 22935                           indf0	equ	0xFEF
 22936                           postinc0	equ	0xFEE
 22937                           plusw0	equ	0xFEB
 22938                           fsr0h	equ	0xFEA
 22939                           fsr0l	equ	0xFE9
 22940                           wreg	equ	0xFE8
 22941                           indf1	equ	0xFE7
 22942                           postinc1	equ	0xFE6
 22943                           postdec1	equ	0xFE5
 22944                           fsr1h	equ	0xFE2
 22945                           fsr1l	equ	0xFE1
 22946                           indf2	equ	0xFDF
 22947                           postinc2	equ	0xFDE
 22948                           postdec2	equ	0xFDD
 22949                           plusw2	equ	0xFDB
 22950                           fsr2h	equ	0xFDA
 22951                           fsr2l	equ	0xFD9
 22952                           status	equ	0xFD8
 22953                           
 22954 ;; *************** function _Mdm_IsSmsReceived *****************
 22955 ;; Defined at:
 22956 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22957 ;; Parameters:    Size  Location     Type
 22958 ;;		None
 22959 ;; Auto vars:     Size  Location     Type
 22960 ;;  Ret             1   33[BANK0 ] enum E8930
 22961 ;; Return value:  Size  Location     Type
 22962 ;;                  1    wreg      enum E8930
 22963 ;; Registers used:
 22964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22965 ;; Tracked objects:
 22966 ;;		On entry : 0/0
 22967 ;;		On exit  : 0/0
 22968 ;;		Unchanged: 0/0
 22969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22974 ;;Total ram usage:        1 bytes
 22975 ;; Hardware stack levels used:    1
 22976 ;; Hardware stack levels required when called:   12
 22977 ;; This function calls:
 22978 ;;		_ReceiveEvt
 22979 ;; This function is called by:
 22980 ;;		_detectCmd
 22981 ;; This function uses a non-reentrant model
 22982 ;;
 22983                           
 22984                           	psect	text104
 22985  006780                     __ptext104:
 22986                           	opt stack 0
 22987  006780                     _Mdm_IsSmsReceived:
 22988                           	opt stack 14
 22989                           
 22990                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22991                           
 22992                           ;incstack = 0
 22993  006780  0E00               	movlw	0
 22994  006782  0100               	movlb	0	; () banked
 22995  006784  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22999  006786  0EDC               	movlw	low _SmsEvent
 23000  006788  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23001  00678A  0E00               	movlw	high _SmsEvent
 23002  00678C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23003  00678E  EC30  F033         	call	_ReceiveEvt	;wreg free
 23004  006792  0900               	iorlw	0
 23005  006794  B4D8               	btfsc	status,2,c
 23006  006796  D003               	goto	l1136
 23007                           
 23008                           ;mdm_gsm_gprs.c: 947: {
 23009                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 23010  006798  0E01               	movlw	1
 23011  00679A  0100               	movlb	0	; () banked
 23012  00679C  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23013  00679E                     l1136:
 23014                           
 23015                           ;mdm_gsm_gprs.c: 949: }
 23016                           ;mdm_gsm_gprs.c: 951: return Ret;
 23017  00679E  0100               	movlb	0	; () banked
 23018  0067A0  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 23019  0067A2  0012               	return	
 23020  0067A4                     __end_of_Mdm_IsSmsReceived:
 23021                           	opt stack 0
 23022                           tosu	equ	0xFFF
 23023                           tosh	equ	0xFFE
 23024                           tosl	equ	0xFFD
 23025                           pclath	equ	0xFFA
 23026                           tblptru	equ	0xFF8
 23027                           tblptrh	equ	0xFF7
 23028                           tblptrl	equ	0xFF6
 23029                           tablat	equ	0xFF5
 23030                           prodh	equ	0xFF4
 23031                           prodl	equ	0xFF3
 23032                           intcon	equ	0xFF2
 23033                           intcon2	equ	0xFF1
 23034                           intcon3	equ	0xFF0
 23035                           indf0	equ	0xFEF
 23036                           postinc0	equ	0xFEE
 23037                           plusw0	equ	0xFEB
 23038                           fsr0h	equ	0xFEA
 23039                           fsr0l	equ	0xFE9
 23040                           wreg	equ	0xFE8
 23041                           indf1	equ	0xFE7
 23042                           postinc1	equ	0xFE6
 23043                           postdec1	equ	0xFE5
 23044                           fsr1h	equ	0xFE2
 23045                           fsr1l	equ	0xFE1
 23046                           indf2	equ	0xFDF
 23047                           postinc2	equ	0xFDE
 23048                           postdec2	equ	0xFDD
 23049                           plusw2	equ	0xFDB
 23050                           fsr2h	equ	0xFDA
 23051                           fsr2l	equ	0xFD9
 23052                           status	equ	0xFD8
 23053                           
 23054 ;; *************** function _Mdm_IsRinging *****************
 23055 ;; Defined at:
 23056 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23057 ;; Parameters:    Size  Location     Type
 23058 ;;		None
 23059 ;; Auto vars:     Size  Location     Type
 23060 ;;  Ret             1   33[BANK0 ] enum E8926
 23061 ;; Return value:  Size  Location     Type
 23062 ;;                  1    wreg      enum E8926
 23063 ;; Registers used:
 23064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23065 ;; Tracked objects:
 23066 ;;		On entry : 0/0
 23067 ;;		On exit  : 0/0
 23068 ;;		Unchanged: 0/0
 23069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23073 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23074 ;;Total ram usage:        1 bytes
 23075 ;; Hardware stack levels used:    1
 23076 ;; Hardware stack levels required when called:   12
 23077 ;; This function calls:
 23078 ;;		_ReceiveEvt
 23079 ;; This function is called by:
 23080 ;;		_detectCmd
 23081 ;;		_getSetupCall
 23082 ;; This function uses a non-reentrant model
 23083 ;;
 23084                           
 23085                           	psect	text105
 23086  0067A4                     __ptext105:
 23087                           	opt stack 0
 23088  0067A4                     _Mdm_IsRinging:
 23089                           	opt stack 12
 23090                           
 23091                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 23092                           
 23093                           ; BSR set to: 0
 23094                           ;incstack = 0
 23095  0067A4  0E00               	movlw	0
 23096  0067A6  0100               	movlb	0	; () banked
 23097  0067A8  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23098                           
 23099                           ; BSR set to: 0
 23100                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 23101  0067AA  0EDE               	movlw	low _RingEvent
 23102  0067AC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23103  0067AE  0E00               	movlw	high _RingEvent
 23104  0067B0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23105  0067B2  EC30  F033         	call	_ReceiveEvt	;wreg free
 23106  0067B6  0900               	iorlw	0
 23107  0067B8  B4D8               	btfsc	status,2,c
 23108  0067BA  D003               	goto	l1152
 23109                           
 23110                           ;mdm_gsm_gprs.c: 1030: {
 23111                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 23112  0067BC  0E01               	movlw	1
 23113  0067BE  0100               	movlb	0	; () banked
 23114  0067C0  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23115  0067C2                     l1152:
 23116                           
 23117                           ;mdm_gsm_gprs.c: 1032: }
 23118                           ;mdm_gsm_gprs.c: 1034: return Ret;
 23119  0067C2  0100               	movlb	0	; () banked
 23120  0067C4  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 23121  0067C6  0012               	return	
 23122  0067C8                     __end_of_Mdm_IsRinging:
 23123                           	opt stack 0
 23124                           tosu	equ	0xFFF
 23125                           tosh	equ	0xFFE
 23126                           tosl	equ	0xFFD
 23127                           pclath	equ	0xFFA
 23128                           tblptru	equ	0xFF8
 23129                           tblptrh	equ	0xFF7
 23130                           tblptrl	equ	0xFF6
 23131                           tablat	equ	0xFF5
 23132                           prodh	equ	0xFF4
 23133                           prodl	equ	0xFF3
 23134                           intcon	equ	0xFF2
 23135                           intcon2	equ	0xFF1
 23136                           intcon3	equ	0xFF0
 23137                           indf0	equ	0xFEF
 23138                           postinc0	equ	0xFEE
 23139                           plusw0	equ	0xFEB
 23140                           fsr0h	equ	0xFEA
 23141                           fsr0l	equ	0xFE9
 23142                           wreg	equ	0xFE8
 23143                           indf1	equ	0xFE7
 23144                           postinc1	equ	0xFE6
 23145                           postdec1	equ	0xFE5
 23146                           fsr1h	equ	0xFE2
 23147                           fsr1l	equ	0xFE1
 23148                           indf2	equ	0xFDF
 23149                           postinc2	equ	0xFDE
 23150                           postdec2	equ	0xFDD
 23151                           plusw2	equ	0xFDB
 23152                           fsr2h	equ	0xFDA
 23153                           fsr2l	equ	0xFD9
 23154                           status	equ	0xFD8
 23155                           
 23156 ;; *************** function _Mdm_HangPhoneCall *****************
 23157 ;; Defined at:
 23158 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23159 ;; Parameters:    Size  Location     Type
 23160 ;;		None
 23161 ;; Auto vars:     Size  Location     Type
 23162 ;;		None
 23163 ;; Return value:  Size  Location     Type
 23164 ;;                  1    wreg      void 
 23165 ;; Registers used:
 23166 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23167 ;; Tracked objects:
 23168 ;;		On entry : 0/0
 23169 ;;		On exit  : 0/0
 23170 ;;		Unchanged: 0/0
 23171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23176 ;;Total ram usage:        0 bytes
 23177 ;; Hardware stack levels used:    1
 23178 ;; Hardware stack levels required when called:   13
 23179 ;; This function calls:
 23180 ;;		_Uart_WriteConstString
 23181 ;; This function is called by:
 23182 ;;		_detectCmd
 23183 ;;		_getSetupCall
 23184 ;; This function uses a non-reentrant model
 23185 ;;
 23186                           
 23187                           	psect	text106
 23188  006AD8                     __ptext106:
 23189                           	opt stack 0
 23190  006AD8                     _Mdm_HangPhoneCall:
 23191                           	opt stack 11
 23192                           
 23193                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23194                           
 23195                           ; BSR set to: 0
 23196                           ;incstack = 0
 23197  006AD8  0EF0               	movlw	low STR_6
 23198  006ADA  0100               	movlb	0	; () banked
 23199  006ADC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23200  006ADE  0EFF               	movlw	high STR_6
 23201  006AE0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23202  006AE2  0E01               	movlw	1
 23203  006AE4  ECE8  F030         	call	_Uart_WriteConstString
 23204  006AE8  0012               	return		;funcret
 23205  006AEA                     __end_of_Mdm_HangPhoneCall:
 23206                           	opt stack 0
 23207                           tosu	equ	0xFFF
 23208                           tosh	equ	0xFFE
 23209                           tosl	equ	0xFFD
 23210                           pclath	equ	0xFFA
 23211                           tblptru	equ	0xFF8
 23212                           tblptrh	equ	0xFF7
 23213                           tblptrl	equ	0xFF6
 23214                           tablat	equ	0xFF5
 23215                           prodh	equ	0xFF4
 23216                           prodl	equ	0xFF3
 23217                           intcon	equ	0xFF2
 23218                           intcon2	equ	0xFF1
 23219                           intcon3	equ	0xFF0
 23220                           indf0	equ	0xFEF
 23221                           postinc0	equ	0xFEE
 23222                           plusw0	equ	0xFEB
 23223                           fsr0h	equ	0xFEA
 23224                           fsr0l	equ	0xFE9
 23225                           wreg	equ	0xFE8
 23226                           indf1	equ	0xFE7
 23227                           postinc1	equ	0xFE6
 23228                           postdec1	equ	0xFE5
 23229                           fsr1h	equ	0xFE2
 23230                           fsr1l	equ	0xFE1
 23231                           indf2	equ	0xFDF
 23232                           postinc2	equ	0xFDE
 23233                           postdec2	equ	0xFDD
 23234                           plusw2	equ	0xFDB
 23235                           fsr2h	equ	0xFDA
 23236                           fsr2l	equ	0xFD9
 23237                           status	equ	0xFD8
 23238                           
 23239 ;; *************** function _Mdm_GetSmsData *****************
 23240 ;; Defined at:
 23241 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23242 ;; Parameters:    Size  Location     Type
 23243 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23244 ;;		 -> smsText(20), 
 23245 ;; Auto vars:     Size  Location     Type
 23246 ;;  GetSmsStatus    1   49[BANK0 ] enum E8922
 23247 ;; Return value:  Size  Location     Type
 23248 ;;                  1    wreg      enum E8922
 23249 ;; Registers used:
 23250 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23251 ;; Tracked objects:
 23252 ;;		On entry : 0/0
 23253 ;;		On exit  : 0/0
 23254 ;;		Unchanged: 0/0
 23255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23256 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23259 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23260 ;;Total ram usage:        3 bytes
 23261 ;; Hardware stack levels used:    1
 23262 ;; Hardware stack levels required when called:   12
 23263 ;; This function calls:
 23264 ;;		_ReceiveEvt
 23265 ;;		_StringCopy
 23266 ;; This function is called by:
 23267 ;;		_detectCmd
 23268 ;; This function uses a non-reentrant model
 23269 ;;
 23270                           
 23271                           	psect	text107
 23272  0056AE                     __ptext107:
 23273                           	opt stack 0
 23274  0056AE                     _Mdm_GetSmsData:
 23275                           	opt stack 14
 23276                           
 23277                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23278                           
 23279                           ;incstack = 0
 23280  0056AE  0E00               	movlw	0
 23281  0056B0  0100               	movlb	0	; () banked
 23282  0056B2  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23283                           
 23284                           ; BSR set to: 0
 23285                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23286  0056B4  0EDA               	movlw	low _SmsTxtReady
 23287  0056B6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23288  0056B8  0E00               	movlw	high _SmsTxtReady
 23289  0056BA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23290  0056BC  EC30  F033         	call	_ReceiveEvt	;wreg free
 23291  0056C0  0900               	iorlw	0
 23292  0056C2  B4D8               	btfsc	status,2,c
 23293  0056C4  D025               	goto	l1129
 23294                           
 23295                           ;mdm_gsm_gprs.c: 898: {
 23296                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23297  0056C6  0E50               	movlw	low (_Mdm_SmsRx+80)
 23298  0056C8  0100               	movlb	0	; () banked
 23299  0056CA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23300  0056CC  0E07               	movlw	high (_Mdm_SmsRx+80)
 23301  0056CE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23302  0056D0  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23303  0056D4  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23304  0056D8  0E01               	movlw	1
 23305  0056DA  0107               	movlb	7	; () banked
 23306  0056DC  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23307  0056DE  0100               	movlb	0	; () banked
 23308  0056E0  6F89               	movwf	StringCopy@Len& (0+255),b
 23309  0056E2  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23310  0056E4  0E00               	movlw	0
 23311  0056E6  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23312  0056E8  EC24  F02C         	call	_StringCopy	;wreg free
 23313                           
 23314                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23315  0056EC  0E15               	movlw	low (_Mdm_SmsRx+21)
 23316  0056EE  0100               	movlb	0	; () banked
 23317  0056F0  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23318  0056F2  0E07               	movlw	high (_Mdm_SmsRx+21)
 23319  0056F4  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23320  0056F6  0ECF               	movlw	low _callerNumber
 23321  0056F8  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23322  0056FA  0E04               	movlw	high _callerNumber
 23323  0056FC  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23324  0056FE  0E00               	movlw	0
 23325  005700  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23326  005702  0E0D               	movlw	13
 23327  005704  6F89               	movwf	StringCopy@Len& (0+255),b
 23328  005706  EC24  F02C         	call	_StringCopy	;wreg free
 23329                           
 23330                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23331  00570A  0E01               	movlw	1
 23332  00570C  0100               	movlb	0	; () banked
 23333  00570E  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23334  005710                     l1129:
 23335                           
 23336                           ;mdm_gsm_gprs.c: 904: }
 23337                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23338                           
 23339                           ; BSR set to: 0
 23340  005710  0100               	movlb	0	; () banked
 23341  005712  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23342  005714  0012               	return	
 23343  005716                     __end_of_Mdm_GetSmsData:
 23344                           	opt stack 0
 23345                           tosu	equ	0xFFF
 23346                           tosh	equ	0xFFE
 23347                           tosl	equ	0xFFD
 23348                           pclath	equ	0xFFA
 23349                           tblptru	equ	0xFF8
 23350                           tblptrh	equ	0xFF7
 23351                           tblptrl	equ	0xFF6
 23352                           tablat	equ	0xFF5
 23353                           prodh	equ	0xFF4
 23354                           prodl	equ	0xFF3
 23355                           intcon	equ	0xFF2
 23356                           intcon2	equ	0xFF1
 23357                           intcon3	equ	0xFF0
 23358                           indf0	equ	0xFEF
 23359                           postinc0	equ	0xFEE
 23360                           plusw0	equ	0xFEB
 23361                           fsr0h	equ	0xFEA
 23362                           fsr0l	equ	0xFE9
 23363                           wreg	equ	0xFE8
 23364                           indf1	equ	0xFE7
 23365                           postinc1	equ	0xFE6
 23366                           postdec1	equ	0xFE5
 23367                           fsr1h	equ	0xFE2
 23368                           fsr1l	equ	0xFE1
 23369                           indf2	equ	0xFDF
 23370                           postinc2	equ	0xFDE
 23371                           postdec2	equ	0xFDD
 23372                           plusw2	equ	0xFDB
 23373                           fsr2h	equ	0xFDA
 23374                           fsr2l	equ	0xFD9
 23375                           status	equ	0xFD8
 23376                           
 23377 ;; *************** function _GetLastInteractionNumber *****************
 23378 ;; Defined at:
 23379 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23380 ;; Parameters:    Size  Location     Type
 23381 ;;		None
 23382 ;; Auto vars:     Size  Location     Type
 23383 ;;		None
 23384 ;; Return value:  Size  Location     Type
 23385 ;;                  2   29[BANK0 ] PTR unsigned char 
 23386 ;; Registers used:
 23387 ;;		wreg, status,2, status,0
 23388 ;; Tracked objects:
 23389 ;;		On entry : 0/0
 23390 ;;		On exit  : 0/0
 23391 ;;		Unchanged: 0/0
 23392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23396 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23397 ;;Total ram usage:        2 bytes
 23398 ;; Hardware stack levels used:    1
 23399 ;; Hardware stack levels required when called:   11
 23400 ;; This function calls:
 23401 ;;		Nothing
 23402 ;; This function is called by:
 23403 ;;		_detectCmd
 23404 ;; This function uses a non-reentrant model
 23405 ;;
 23406                           
 23407                           	psect	text108
 23408  006B76                     __ptext108:
 23409                           	opt stack 0
 23410  006B76                     _GetLastInteractionNumber:
 23411                           	opt stack 15
 23412                           
 23413                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23414                           
 23415                           ; BSR set to: 0
 23416                           ;incstack = 0
 23417  006B76  0ECF               	movlw	low _callerNumber
 23418  006B78  0100               	movlb	0	; () banked
 23419  006B7A  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23420  006B7C  0E04               	movlw	high _callerNumber
 23421  006B7E  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23422  006B80  0012               	return	
 23423  006B82                     __end_of_GetLastInteractionNumber:
 23424                           	opt stack 0
 23425                           tosu	equ	0xFFF
 23426                           tosh	equ	0xFFE
 23427                           tosl	equ	0xFFD
 23428                           pclath	equ	0xFFA
 23429                           tblptru	equ	0xFF8
 23430                           tblptrh	equ	0xFF7
 23431                           tblptrl	equ	0xFF6
 23432                           tablat	equ	0xFF5
 23433                           prodh	equ	0xFF4
 23434                           prodl	equ	0xFF3
 23435                           intcon	equ	0xFF2
 23436                           intcon2	equ	0xFF1
 23437                           intcon3	equ	0xFF0
 23438                           indf0	equ	0xFEF
 23439                           postinc0	equ	0xFEE
 23440                           plusw0	equ	0xFEB
 23441                           fsr0h	equ	0xFEA
 23442                           fsr0l	equ	0xFE9
 23443                           wreg	equ	0xFE8
 23444                           indf1	equ	0xFE7
 23445                           postinc1	equ	0xFE6
 23446                           postdec1	equ	0xFE5
 23447                           fsr1h	equ	0xFE2
 23448                           fsr1l	equ	0xFE1
 23449                           indf2	equ	0xFDF
 23450                           postinc2	equ	0xFDE
 23451                           postdec2	equ	0xFDD
 23452                           plusw2	equ	0xFDB
 23453                           fsr2h	equ	0xFDA
 23454                           fsr2l	equ	0xFD9
 23455                           status	equ	0xFD8
 23456                           
 23457 ;; *************** function _GetCallerNumber *****************
 23458 ;; Defined at:
 23459 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23460 ;; Parameters:    Size  Location     Type
 23461 ;;		None
 23462 ;; Auto vars:     Size  Location     Type
 23463 ;;		None
 23464 ;; Return value:  Size  Location     Type
 23465 ;;                  2   35[BANK0 ] PTR unsigned char 
 23466 ;; Registers used:
 23467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23468 ;; Tracked objects:
 23469 ;;		On entry : 0/0
 23470 ;;		On exit  : 0/0
 23471 ;;		Unchanged: 0/0
 23472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23473 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23477 ;;Total ram usage:        2 bytes
 23478 ;; Hardware stack levels used:    1
 23479 ;; Hardware stack levels required when called:   12
 23480 ;; This function calls:
 23481 ;;		_ClearBuffer
 23482 ;;		_ReceiveEvt
 23483 ;; This function is called by:
 23484 ;;		_detectCmd
 23485 ;;		_initFsm
 23486 ;; This function uses a non-reentrant model
 23487 ;;
 23488                           
 23489                           	psect	text109
 23490  00646E                     __ptext109:
 23491                           	opt stack 0
 23492  00646E                     _GetCallerNumber:
 23493                           	opt stack 14
 23494                           
 23495                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23496                           
 23497                           ; BSR set to: 0
 23498                           ;incstack = 0
 23499  00646E  0EDD               	movlw	low _ClipEvent
 23500  006470  0100               	movlb	0	; () banked
 23501  006472  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23502  006474  0E00               	movlw	high _ClipEvent
 23503  006476  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23504  006478  EC30  F033         	call	_ReceiveEvt	;wreg free
 23505  00647C  0900               	iorlw	0
 23506  00647E  A4D8               	btfss	status,2,c
 23507  006480  D00B               	goto	l1156
 23508                           
 23509                           ;mdm_gsm_gprs.c: 1040: {
 23510                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 23511  006482  0ECF               	movlw	low _callerNumber
 23512  006484  0100               	movlb	0	; () banked
 23513  006486  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23514  006488  0E04               	movlw	high _callerNumber
 23515  00648A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23516  00648C  0E00               	movlw	0
 23517  00648E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23518  006490  0E0D               	movlw	13
 23519  006492  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23520  006494  EC52  F032         	call	_ClearBuffer	;wreg free
 23521  006498                     l1156:
 23522                           
 23523                           ;mdm_gsm_gprs.c: 1042: }
 23524                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23525  006498  0ECF               	movlw	low _callerNumber
 23526  00649A  0100               	movlb	0	; () banked
 23527  00649C  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23528  00649E  0E04               	movlw	high _callerNumber
 23529  0064A0  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23530  0064A2  0012               	return	
 23531  0064A4                     __end_of_GetCallerNumber:
 23532                           	opt stack 0
 23533                           tosu	equ	0xFFF
 23534                           tosh	equ	0xFFE
 23535                           tosl	equ	0xFFD
 23536                           pclath	equ	0xFFA
 23537                           tblptru	equ	0xFF8
 23538                           tblptrh	equ	0xFF7
 23539                           tblptrl	equ	0xFF6
 23540                           tablat	equ	0xFF5
 23541                           prodh	equ	0xFF4
 23542                           prodl	equ	0xFF3
 23543                           intcon	equ	0xFF2
 23544                           intcon2	equ	0xFF1
 23545                           intcon3	equ	0xFF0
 23546                           indf0	equ	0xFEF
 23547                           postinc0	equ	0xFEE
 23548                           plusw0	equ	0xFEB
 23549                           fsr0h	equ	0xFEA
 23550                           fsr0l	equ	0xFE9
 23551                           wreg	equ	0xFE8
 23552                           indf1	equ	0xFE7
 23553                           postinc1	equ	0xFE6
 23554                           postdec1	equ	0xFE5
 23555                           fsr1h	equ	0xFE2
 23556                           fsr1l	equ	0xFE1
 23557                           indf2	equ	0xFDF
 23558                           postinc2	equ	0xFDE
 23559                           postdec2	equ	0xFDD
 23560                           plusw2	equ	0xFDB
 23561                           fsr2h	equ	0xFDA
 23562                           fsr2l	equ	0xFD9
 23563                           status	equ	0xFD8
 23564                           
 23565 ;; *************** function _delCmdFsm *****************
 23566 ;; Defined at:
 23567 ;;		line 71 in file "../Source/c/04_App/app_delCmd.c"
 23568 ;; Parameters:    Size  Location     Type
 23569 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 23570 ;;		 -> receivedNumber(13), 
 23571 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 23572 ;;		 -> smsText(20), 
 23573 ;; Auto vars:     Size  Location     Type
 23574 ;;  emptyNumber    13    9[BANK1 ] const unsigned char [13]
 23575 ;;  searchNumber    1   25[BANK1 ] unsigned char 
 23576 ;;  numberInMemo    1   24[BANK1 ] unsigned char 
 23577 ;;  masterOpResu    1   23[BANK1 ] unsigned char 
 23578 ;;  isComplete      1   22[BANK1 ] unsigned char 
 23579 ;; Return value:  Size  Location     Type
 23580 ;;                  1    wreg      unsigned char 
 23581 ;; Registers used:
 23582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23583 ;; Tracked objects:
 23584 ;;		On entry : 0/0
 23585 ;;		On exit  : 0/0
 23586 ;;		Unchanged: 0/0
 23587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23588 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23589 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23591 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23592 ;;Total ram usage:       21 bytes
 23593 ;; Hardware stack levels used:    1
 23594 ;; Hardware stack levels required when called:   18
 23595 ;; This function calls:
 23596 ;;		_isMasterNumber
 23597 ;;		_isNumberInMemory
 23598 ;;		_saveNumberInMemory
 23599 ;; This function is called by:
 23600 ;;		_MyApp_Task
 23601 ;; This function uses a non-reentrant model
 23602 ;;
 23603                           
 23604                           	psect	text110
 23605  004396                     __ptext110:
 23606                           	opt stack 0
 23607  004396                     _delCmdFsm:
 23608                           	opt stack 9
 23609                           
 23610                           ;app_delCmd.c: 73: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 23611                           
 23612                           ; BSR set to: 0
 23613                           ;incstack = 0
 23614  004396  0E0F               	movlw	low delCmdFsm@F9013
 23615  004398  6EF6               	movwf	tblptrl,c
 23616  00439A                     	if	1	;There is more than 1 active tblptr byte
 23617  00439A  0EFC               	movlw	high delCmdFsm@F9013
 23618  00439C  6EF7               	movwf	tblptrh,c
 23619  00439E                     	endif
 23620  00439E                     	if	0	;There are less than 3 active tblptr bytes
 23621  00439E                     	endif
 23622  00439E  EE21  F009         	lfsr	2,delCmdFsm@emptyNumber
 23623  0043A2  0E0C               	movlw	12
 23624  0043A4                     u16170:
 23625  0043A4  0009               	tblrd		*+
 23626  0043A6  CFF5 FFDE          	movff	tablat,postinc2
 23627  0043AA  06E8               	decf	wreg,f,c
 23628  0043AC  E2FB               	bc	u16170
 23629                           
 23630                           ;app_delCmd.c: 74: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 23631                           ;app_delCmd.c: 75: bool isComplete = 0;
 23632  0043AE  0E00               	movlw	0
 23633  0043B0  0101               	movlb	1	; () banked
 23634  0043B2  6F16               	movwf	delCmdFsm@isComplete& (0+255),b
 23635                           
 23636                           ; BSR set to: 1
 23637                           ;app_delCmd.c: 76: uint8_t numberInMemory = 0;
 23638  0043B4  0E00               	movlw	0
 23639  0043B6  6F18               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23640                           
 23641                           ; BSR set to: 1
 23642                           ;app_delCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 23643  0043B8  0E01               	movlw	1
 23644  0043BA  6F17               	movwf	delCmdFsm@masterOpResult& (0+255),b
 23645                           
 23646                           ; BSR set to: 1
 23647                           ;app_delCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 23648  0043BC  0E01               	movlw	1
 23649  0043BE  6F19               	movwf	delCmdFsm@searchNumber& (0+255),b
 23650                           
 23651                           ;app_delCmd.c: 80: switch (currentState)
 23652  0043C0  D03C               	goto	l2854
 23653  0043C2                     
 23654                           ; BSR set to: 1
 23655                           ;app_delCmd.c: 83: masterOpResult = isMasterNumber(receivedNumber);
 23656                           
 23657                           ; BSR set to: 1
 23658  0043C2  C105  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23659  0043C6  C106  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23660  0043CA  ECB4  F02A         	call	_isMasterNumber	;wreg free
 23661  0043CE  0101               	movlb	1	; () banked
 23662  0043D0  6F17               	movwf	delCmdFsm@masterOpResult& (0+255),b
 23663                           
 23664                           ; BSR set to: 1
 23665                           ;app_delCmd.c: 84: if (masterOpResult == OP_SUCCESS)
 23666  0043D2  5117               	movf	delCmdFsm@masterOpResult& (0+255),w,b
 23667  0043D4  A4D8               	btfss	status,2,c
 23668  0043D6  D002               	goto	l2856
 23669                           
 23670                           ; BSR set to: 1
 23671                           ;app_delCmd.c: 85: {
 23672                           ;app_delCmd.c: 86: currentState = DEL_FSM_REMOVE_NUMBER;
 23673  0043D8  0E01               	movlw	1
 23674  0043DA  D02D               	goto	L46
 23675  0043DC                     l2856:
 23676                           
 23677                           ; BSR set to: 1
 23678                           ;app_delCmd.c: 88: else if (masterOpResult == OP_FAILED)
 23679                           
 23680                           ; BSR set to: 1
 23681  0043DC  0517               	decf	delCmdFsm@masterOpResult& (0+255),w,b
 23682  0043DE  D024               	goto	L47
 23683  0043E0                     
 23684                           ; BSR set to: 1
 23685                           ;app_delCmd.c: 95: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 23686                           
 23687                           ; BSR set to: 1
 23688  0043E0  0E04               	movlw	4
 23689  0043E2  2507               	addwf	delCmdFsm@smsText& (0+255),w,b
 23690  0043E4  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23691  0043E6  0E00               	movlw	0
 23692  0043E8  2108               	addwfc	(delCmdFsm@smsText+1)& (0+255),w,b
 23693  0043EA  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23694  0043EC  0E18               	movlw	low delCmdFsm@numberInMemory
 23695  0043EE  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 23696  0043F0  0E01               	movlw	high delCmdFsm@numberInMemory
 23697  0043F2  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 23698  0043F4  EC29  F022         	call	_isNumberInMemory	;wreg free
 23699  0043F8  0101               	movlb	1	; () banked
 23700  0043FA  6F19               	movwf	delCmdFsm@searchNumber& (0+255),b
 23701                           
 23702                           ; BSR set to: 1
 23703                           ;app_delCmd.c: 96: if (searchNumber == SEARCH_FSM_FOUND)
 23704  0043FC  0E03               	movlw	3
 23705  0043FE  1919               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23706  004400  A4D8               	btfss	status,2,c
 23707  004402  D00C               	goto	l2861
 23708                           
 23709                           ; BSR set to: 1
 23710                           ;app_delCmd.c: 97: {
 23711                           ;app_delCmd.c: 98: saveNumberInMemory(numberInMemory, emptyNumber);
 23712  004404  0E09               	movlw	low delCmdFsm@emptyNumber
 23713  004406  0100               	movlb	0	; () banked
 23714  004408  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23715  00440A  0E01               	movlw	high delCmdFsm@emptyNumber
 23716  00440C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23717  00440E  0101               	movlb	1	; () banked
 23718  004410  5118               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23719  004412  ECFC  F034         	call	_saveNumberInMemory
 23720                           
 23721                           ;app_delCmd.c: 99: currentState = DEL_FSM_COMPLETE;
 23722  004416  0E02               	movlw	2
 23723  004418  0101               	movlb	1	; () banked
 23724  00441A  D00D               	goto	L46
 23725  00441C                     l2861:
 23726                           
 23727                           ; BSR set to: 1
 23728                           ;app_delCmd.c: 101: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber == SEA
      +                          RCH_FSM_ERROR)
 23729                           
 23730                           ; BSR set to: 1
 23731  00441C  0E04               	movlw	4
 23732  00441E  1919               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23733  004420  B4D8               	btfsc	status,2,c
 23734  004422  D004               	goto	u16220
 23735                           
 23736                           ; BSR set to: 1
 23737  004424  0E02               	movlw	2
 23738  004426  1919               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23739  004428                     L47:
 23740  004428  A4D8               	btfss	status,2,c
 23741  00442A  D011               	goto	l2859
 23742  00442C                     u16220:
 23743                           
 23744                           ; BSR set to: 1
 23745                           ;app_delCmd.c: 102: {
 23746                           ;app_delCmd.c: 103: currentState = DEL_FSM_COMPLETE;
 23747                           
 23748                           ; BSR set to: 1
 23749  00442C  0E02               	movlw	2
 23750  00442E  D003               	goto	L46
 23751  004430                     
 23752                           ; BSR set to: 1
 23753                           ;app_delCmd.c: 108: isComplete = 1;
 23754                           
 23755                           ; BSR set to: 1
 23756  004430  0E01               	movlw	1
 23757  004432  6F16               	movwf	delCmdFsm@isComplete& (0+255),b
 23758                           
 23759                           ;app_delCmd.c: 109: currentState = DEL_FSM_CHECK_MASTER;
 23760  004434  0E00               	movlw	0
 23761  004436                     L46:
 23762  004436  6FD4               	movwf	delCmdFsm@currentState& (0+255),b
 23763                           
 23764                           ; BSR set to: 1
 23765                           ;app_delCmd.c: 114: }
 23766                           
 23767                           ; BSR set to: 1
 23768                           ;app_delCmd.c: 113: break;
 23769                           
 23770                           ;app_delCmd.c: 112: default:
 23771                           
 23772                           ;app_delCmd.c: 110: break;
 23773  004438  D00A               	goto	l2859
 23774  00443A                     l2854:
 23775                           
 23776                           ; BSR set to: 1
 23777                           
 23778                           ; BSR set to: 1
 23779  00443A  51D4               	movf	delCmdFsm@currentState& (0+255),w,b
 23780                           
 23781                           ; Switch size 1, requested type "space"
 23782                           ; Number of cases is 3, Range of values is 0 to 2
 23783                           ; switch strategies available:
 23784                           ; Name         Instructions Cycles
 23785                           ; simple_byte           10     6 (average)
 23786                           ;	Chosen strategy is simple_byte
 23787  00443C  0A00               	xorlw	0	; case 0
 23788  00443E  B4D8               	btfsc	status,2,c
 23789  004440  D7C0               	goto	l2855
 23790  004442  0A01               	xorlw	1	; case 1
 23791  004444  B4D8               	btfsc	status,2,c
 23792  004446  D7CC               	goto	l2860
 23793  004448  0A03               	xorlw	3	; case 2
 23794  00444A  B4D8               	btfsc	status,2,c
 23795  00444C  D7F1               	goto	l2866
 23796  00444E                     l2859:
 23797                           
 23798                           ; BSR set to: 1
 23799                           ;app_delCmd.c: 115: return isComplete;
 23800                           
 23801                           ; BSR set to: 1
 23802  00444E  5116               	movf	delCmdFsm@isComplete& (0+255),w,b
 23803  004450  0012               	return	
 23804  004452                     __end_of_delCmdFsm:
 23805                           	opt stack 0
 23806                           tosu	equ	0xFFF
 23807                           tosh	equ	0xFFE
 23808                           tosl	equ	0xFFD
 23809                           pclath	equ	0xFFA
 23810                           tblptru	equ	0xFF8
 23811                           tblptrh	equ	0xFF7
 23812                           tblptrl	equ	0xFF6
 23813                           tablat	equ	0xFF5
 23814                           prodh	equ	0xFF4
 23815                           prodl	equ	0xFF3
 23816                           intcon	equ	0xFF2
 23817                           intcon2	equ	0xFF1
 23818                           intcon3	equ	0xFF0
 23819                           indf0	equ	0xFEF
 23820                           postinc0	equ	0xFEE
 23821                           plusw0	equ	0xFEB
 23822                           fsr0h	equ	0xFEA
 23823                           fsr0l	equ	0xFE9
 23824                           wreg	equ	0xFE8
 23825                           indf1	equ	0xFE7
 23826                           postinc1	equ	0xFE6
 23827                           postdec1	equ	0xFE5
 23828                           fsr1h	equ	0xFE2
 23829                           fsr1l	equ	0xFE1
 23830                           indf2	equ	0xFDF
 23831                           postinc2	equ	0xFDE
 23832                           postdec2	equ	0xFDD
 23833                           plusw2	equ	0xFDB
 23834                           fsr2h	equ	0xFDA
 23835                           fsr2l	equ	0xFD9
 23836                           status	equ	0xFD8
 23837                           
 23838 ;; *************** function _addCmdFsm *****************
 23839 ;; Defined at:
 23840 ;;		line 72 in file "../Source/c/04_App/app_addCmd.c"
 23841 ;; Parameters:    Size  Location     Type
 23842 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 23843 ;;		 -> receivedNumber(13), 
 23844 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 23845 ;;		 -> smsText(20), 
 23846 ;; Auto vars:     Size  Location     Type
 23847 ;;  searchNumber    1   12[BANK1 ] unsigned char 
 23848 ;;  numberInMemo    1   11[BANK1 ] unsigned char 
 23849 ;;  masterOpResu    1   10[BANK1 ] unsigned char 
 23850 ;;  isComplete      1    9[BANK1 ] unsigned char 
 23851 ;; Return value:  Size  Location     Type
 23852 ;;                  1    wreg      unsigned char 
 23853 ;; Registers used:
 23854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23855 ;; Tracked objects:
 23856 ;;		On entry : 0/0
 23857 ;;		On exit  : 0/0
 23858 ;;		Unchanged: 0/0
 23859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23860 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23861 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23863 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23864 ;;Total ram usage:        8 bytes
 23865 ;; Hardware stack levels used:    1
 23866 ;; Hardware stack levels required when called:   18
 23867 ;; This function calls:
 23868 ;;		_findEmptySpot
 23869 ;;		_isMasterNumber
 23870 ;;		_isNumberInMemory
 23871 ;;		_saveNumberInMemory
 23872 ;; This function is called by:
 23873 ;;		_MyApp_Task
 23874 ;; This function uses a non-reentrant model
 23875 ;;
 23876                           
 23877                           	psect	text111
 23878  003AFA                     __ptext111:
 23879                           	opt stack 0
 23880  003AFA                     _addCmdFsm:
 23881                           	opt stack 9
 23882                           
 23883                           ;app_addCmd.c: 74: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 23884                           ;app_addCmd.c: 75: bool isComplete = 0;
 23885                           
 23886                           ; BSR set to: 1
 23887                           ;incstack = 0
 23888  003AFA  0E00               	movlw	0
 23889  003AFC  0101               	movlb	1	; () banked
 23890  003AFE  6F09               	movwf	addCmdFsm@isComplete& (0+255),b
 23891                           
 23892                           ;app_addCmd.c: 76: uint8_t numberInMemory = 0;
 23893  003B00  0E00               	movlw	0
 23894  003B02  6F0B               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23895                           
 23896                           ;app_addCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 23897  003B04  0E01               	movlw	1
 23898  003B06  6F0A               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23899                           
 23900                           ;app_addCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 23901  003B08  0E01               	movlw	1
 23902  003B0A  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23903                           
 23904                           ;app_addCmd.c: 80: switch (currentState)
 23905  003B0C  D04F               	goto	l2815
 23906  003B0E                     
 23907                           ; BSR set to: 1
 23908                           ;app_addCmd.c: 83: masterOpResult = isMasterNumber(receivedNumber);
 23909                           
 23910                           ; BSR set to: 1
 23911  003B0E  C105  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23912  003B12  C106  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23913  003B16  ECB4  F02A         	call	_isMasterNumber	;wreg free
 23914  003B1A  0101               	movlb	1	; () banked
 23915  003B1C  6F0A               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23916                           
 23917                           ; BSR set to: 1
 23918                           ;app_addCmd.c: 84: if (masterOpResult == OP_SUCCESS)
 23919  003B1E  510A               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 23920  003B20  A4D8               	btfss	status,2,c
 23921  003B22  D002               	goto	l2817
 23922                           
 23923                           ; BSR set to: 1
 23924                           ;app_addCmd.c: 85: {
 23925                           ;app_addCmd.c: 86: currentState = ADD_FSM_CHECK_DUPLICATED;
 23926  003B24  0E01               	movlw	1
 23927  003B26  D03B               	goto	L52
 23928  003B28                     l2817:
 23929                           
 23930                           ; BSR set to: 1
 23931                           ;app_addCmd.c: 88: else if (masterOpResult == OP_FAILED)
 23932                           
 23933                           ; BSR set to: 1
 23934  003B28  050A               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 23935  003B2A  D036               	goto	L109
 23936  003B2C                     
 23937                           ; BSR set to: 1
 23938                           ;app_addCmd.c: 95: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 23939                           
 23940                           ; BSR set to: 1
 23941  003B2C  0E04               	movlw	4
 23942  003B2E  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 23943  003B30  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23944  003B32  0E00               	movlw	0
 23945  003B34  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23946  003B36  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23947  003B38  0E0B               	movlw	low addCmdFsm@numberInMemory
 23948  003B3A  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 23949  003B3C  0E01               	movlw	high addCmdFsm@numberInMemory
 23950  003B3E  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 23951  003B40  EC29  F022         	call	_isNumberInMemory	;wreg free
 23952  003B44  0101               	movlb	1	; () banked
 23953  003B46  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23954                           
 23955                           ; BSR set to: 1
 23956                           ;app_addCmd.c: 96: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 23957  003B48  0E04               	movlw	4
 23958  003B4A  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23959  003B4C  A4D8               	btfss	status,2,c
 23960  003B4E  D01E               	goto	l2828
 23961                           
 23962                           ; BSR set to: 1
 23963                           ;app_addCmd.c: 97: {
 23964                           ;app_addCmd.c: 98: currentState = ADD_FSM_SAVE_NEW;
 23965  003B50  0E02               	movlw	2
 23966  003B52  D025               	goto	L52
 23967  003B54                     
 23968                           ; BSR set to: 1
 23969                           ;app_addCmd.c: 107: searchNumber = findEmptySpot(&numberInMemory);
 23970                           
 23971                           ; BSR set to: 1
 23972  003B54  0E0B               	movlw	low addCmdFsm@numberInMemory
 23973  003B56  6F00               	movwf	findEmptySpot@positionInMemory& (0+255),b
 23974  003B58  0E01               	movlw	high addCmdFsm@numberInMemory
 23975  003B5A  6F01               	movwf	(findEmptySpot@positionInMemory+1)& (0+255),b
 23976  003B5C  ECFE  F026         	call	_findEmptySpot	;wreg free
 23977  003B60  0101               	movlb	1	; () banked
 23978  003B62  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23979                           
 23980                           ; BSR set to: 1
 23981                           ;app_addCmd.c: 108: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 23982  003B64  0E04               	movlw	4
 23983  003B66  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23984  003B68  A4D8               	btfss	status,2,c
 23985  003B6A  D010               	goto	l2828
 23986                           
 23987                           ; BSR set to: 1
 23988                           ;app_addCmd.c: 109: {
 23989                           ;app_addCmd.c: 110: saveNumberInMemory(numberInMemory, smsText + 4);
 23990  003B6C  0E04               	movlw	4
 23991  003B6E  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 23992  003B70  0100               	movlb	0	; () banked
 23993  003B72  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23994  003B74  0E00               	movlw	0
 23995  003B76  0101               	movlb	1	; () banked
 23996  003B78  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23997  003B7A  0100               	movlb	0	; () banked
 23998  003B7C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23999  003B7E  0101               	movlb	1	; () banked
 24000  003B80  510B               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 24001  003B82  ECFC  F034         	call	_saveNumberInMemory
 24002                           
 24003                           ;app_addCmd.c: 111: currentState = ADD_FSM_COMPLETE;
 24004  003B86  0E03               	movlw	3
 24005  003B88  0101               	movlb	1	; () banked
 24006  003B8A  D009               	goto	L52
 24007  003B8C                     l2828:
 24008                           
 24009                           ; BSR set to: 1
 24010                           ;app_addCmd.c: 113: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_
      +                          FSM_ERROR)
 24011                           
 24012                           ; BSR set to: 1
 24013  003B8C  0E03               	movlw	3
 24014  003B8E  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24015  003B90  B4D8               	btfsc	status,2,c
 24016  003B92  D004               	goto	u16160
 24017                           
 24018                           ; BSR set to: 1
 24019  003B94  0E02               	movlw	2
 24020  003B96  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24021  003B98                     L109:
 24022  003B98  A4D8               	btfss	status,2,c
 24023  003B9A  D015               	goto	l2820
 24024  003B9C                     u16160:
 24025                           
 24026                           ; BSR set to: 1
 24027                           ;app_addCmd.c: 114: {
 24028                           ;app_addCmd.c: 115: currentState = ADD_FSM_COMPLETE;
 24029                           
 24030                           ; BSR set to: 1
 24031  003B9C  0E03               	movlw	3
 24032  003B9E                     L52:
 24033  003B9E  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 24034                           
 24035                           ; BSR set to: 1
 24036                           ;app_addCmd.c: 116: }
 24037                           ;app_addCmd.c: 117: break;
 24038                           
 24039                           ; BSR set to: 1
 24040  003BA0  D012               	goto	l2820
 24041  003BA2                     
 24042                           ; BSR set to: 1
 24043                           ;app_addCmd.c: 120: currentState = ADD_FSM_CHECK_MASTER;
 24044                           
 24045                           ; BSR set to: 1
 24046  003BA2  0E00               	movlw	0
 24047  003BA4  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 24048                           
 24049                           ;app_addCmd.c: 121: isComplete = 1;
 24050  003BA6  0E01               	movlw	1
 24051  003BA8  6F09               	movwf	addCmdFsm@isComplete& (0+255),b
 24052                           
 24053                           ; BSR set to: 1
 24054                           ;app_addCmd.c: 126: }
 24055                           
 24056                           ; BSR set to: 1
 24057                           ;app_addCmd.c: 125: break;
 24058                           
 24059                           ;app_addCmd.c: 124: default:
 24060                           
 24061                           ;app_addCmd.c: 122: break;
 24062  003BAA  D00D               	goto	l2820
 24063  003BAC                     l2815:
 24064                           
 24065                           ; BSR set to: 1
 24066                           
 24067                           ; BSR set to: 1
 24068  003BAC  51D5               	movf	addCmdFsm@currentState& (0+255),w,b
 24069                           
 24070                           ; Switch size 1, requested type "space"
 24071                           ; Number of cases is 4, Range of values is 0 to 3
 24072                           ; switch strategies available:
 24073                           ; Name         Instructions Cycles
 24074                           ; simple_byte           13     7 (average)
 24075                           ;	Chosen strategy is simple_byte
 24076  003BAE  0A00               	xorlw	0	; case 0
 24077  003BB0  B4D8               	btfsc	status,2,c
 24078  003BB2  D7AD               	goto	l2816
 24079  003BB4  0A01               	xorlw	1	; case 1
 24080  003BB6  B4D8               	btfsc	status,2,c
 24081  003BB8  D7B9               	goto	l2821
 24082  003BBA  0A03               	xorlw	3	; case 2
 24083  003BBC  B4D8               	btfsc	status,2,c
 24084  003BBE  D7CA               	goto	l2827
 24085  003BC0  0A01               	xorlw	1	; case 3
 24086  003BC2  B4D8               	btfsc	status,2,c
 24087  003BC4  D7EE               	goto	l2833
 24088  003BC6                     l2820:
 24089                           
 24090                           ; BSR set to: 1
 24091                           ;app_addCmd.c: 127: return isComplete;
 24092                           
 24093                           ; BSR set to: 1
 24094  003BC6  5109               	movf	addCmdFsm@isComplete& (0+255),w,b
 24095  003BC8  0012               	return	
 24096  003BCA                     __end_of_addCmdFsm:
 24097                           	opt stack 0
 24098                           tosu	equ	0xFFF
 24099                           tosh	equ	0xFFE
 24100                           tosl	equ	0xFFD
 24101                           pclath	equ	0xFFA
 24102                           tblptru	equ	0xFF8
 24103                           tblptrh	equ	0xFF7
 24104                           tblptrl	equ	0xFF6
 24105                           tablat	equ	0xFF5
 24106                           prodh	equ	0xFF4
 24107                           prodl	equ	0xFF3
 24108                           intcon	equ	0xFF2
 24109                           intcon2	equ	0xFF1
 24110                           intcon3	equ	0xFF0
 24111                           indf0	equ	0xFEF
 24112                           postinc0	equ	0xFEE
 24113                           plusw0	equ	0xFEB
 24114                           fsr0h	equ	0xFEA
 24115                           fsr0l	equ	0xFE9
 24116                           wreg	equ	0xFE8
 24117                           indf1	equ	0xFE7
 24118                           postinc1	equ	0xFE6
 24119                           postdec1	equ	0xFE5
 24120                           fsr1h	equ	0xFE2
 24121                           fsr1l	equ	0xFE1
 24122                           indf2	equ	0xFDF
 24123                           postinc2	equ	0xFDE
 24124                           postdec2	equ	0xFDD
 24125                           plusw2	equ	0xFDB
 24126                           fsr2h	equ	0xFDA
 24127                           fsr2l	equ	0xFD9
 24128                           status	equ	0xFD8
 24129                           
 24130 ;; *************** function _saveNumberInMemory *****************
 24131 ;; Defined at:
 24132 ;;		line 117 in file "../Source/c/04_App/app_utils.c"
 24133 ;; Parameters:    Size  Location     Type
 24134 ;;  address         1    wreg     unsigned char 
 24135 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 24136 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), callerNumber(13), 
 24137 ;; Auto vars:     Size  Location     Type
 24138 ;;  address         1   56[BANK0 ] unsigned char 
 24139 ;; Return value:  Size  Location     Type
 24140 ;;                  1    wreg      void 
 24141 ;; Registers used:
 24142 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24143 ;; Tracked objects:
 24144 ;;		On entry : 0/0
 24145 ;;		On exit  : 0/0
 24146 ;;		Unchanged: 0/0
 24147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24151 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24152 ;;Total ram usage:        3 bytes
 24153 ;; Hardware stack levels used:    1
 24154 ;; Hardware stack levels required when called:   14
 24155 ;; This function calls:
 24156 ;;		_Eeprom_Write
 24157 ;; This function is called by:
 24158 ;;		_initFsm
 24159 ;;		_addCmdFsm
 24160 ;;		_delCmdFsm
 24161 ;; This function uses a non-reentrant model
 24162 ;;
 24163                           
 24164                           	psect	text112
 24165  0069F8                     __ptext112:
 24166                           	opt stack 0
 24167  0069F8                     _saveNumberInMemory:
 24168                           	opt stack 12
 24169                           
 24170                           ; BSR set to: 1
 24171                           ;incstack = 0
 24172                           ;saveNumberInMemory@address stored from wreg
 24173  0069F8  0100               	movlb	0	; () banked
 24174  0069FA  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 24175                           
 24176                           ;app_utils.c: 119: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 24177  0069FC  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 24178  006A00  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 24179  006A04  0E0D               	movlw	13
 24180  006A06  0100               	movlb	0	; () banked
 24181  006A08  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 24182  006A0A  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 24183  006A0C  EC8E  F02E         	call	_Eeprom_Write
 24184  006A10  0012               	return		;funcret
 24185  006A12                     __end_of_saveNumberInMemory:
 24186                           	opt stack 0
 24187                           tosu	equ	0xFFF
 24188                           tosh	equ	0xFFE
 24189                           tosl	equ	0xFFD
 24190                           pclath	equ	0xFFA
 24191                           tblptru	equ	0xFF8
 24192                           tblptrh	equ	0xFF7
 24193                           tblptrl	equ	0xFF6
 24194                           tablat	equ	0xFF5
 24195                           prodh	equ	0xFF4
 24196                           prodl	equ	0xFF3
 24197                           intcon	equ	0xFF2
 24198                           intcon2	equ	0xFF1
 24199                           intcon3	equ	0xFF0
 24200                           indf0	equ	0xFEF
 24201                           postinc0	equ	0xFEE
 24202                           plusw0	equ	0xFEB
 24203                           fsr0h	equ	0xFEA
 24204                           fsr0l	equ	0xFE9
 24205                           wreg	equ	0xFE8
 24206                           indf1	equ	0xFE7
 24207                           postinc1	equ	0xFE6
 24208                           postdec1	equ	0xFE5
 24209                           fsr1h	equ	0xFE2
 24210                           fsr1l	equ	0xFE1
 24211                           indf2	equ	0xFDF
 24212                           postinc2	equ	0xFDE
 24213                           postdec2	equ	0xFDD
 24214                           plusw2	equ	0xFDB
 24215                           fsr2h	equ	0xFDA
 24216                           fsr2l	equ	0xFD9
 24217                           status	equ	0xFD8
 24218                           
 24219 ;; *************** function _Eeprom_Write *****************
 24220 ;; Defined at:
 24221 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24222 ;; Parameters:    Size  Location     Type
 24223 ;;  MemoryAddres    1    wreg     unsigned char 
 24224 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 24225 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), callerNumber(13), 
 24226 ;;  DataLength      1   49[BANK0 ] unsigned char 
 24227 ;; Auto vars:     Size  Location     Type
 24228 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 24229 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 24230 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 24231 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 24232 ;; Return value:  Size  Location     Type
 24233 ;;                  1    wreg      unsigned char 
 24234 ;; Registers used:
 24235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24236 ;; Tracked objects:
 24237 ;;		On entry : 0/0
 24238 ;;		On exit  : 0/0
 24239 ;;		Unchanged: 0/0
 24240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24241 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24242 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24244 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24245 ;;Total ram usage:        7 bytes
 24246 ;; Hardware stack levels used:    1
 24247 ;; Hardware stack levels required when called:   13
 24248 ;; This function calls:
 24249 ;;		_I2cSlv_SendI2cMsg
 24250 ;;		_StringCopy
 24251 ;; This function is called by:
 24252 ;;		_savePreamble
 24253 ;;		_saveNumberInMemory
 24254 ;; This function uses a non-reentrant model
 24255 ;;
 24256                           
 24257                           	psect	text113
 24258  005D1C                     __ptext113:
 24259                           	opt stack 0
 24260  005D1C                     _Eeprom_Write:
 24261                           	opt stack 12
 24262                           
 24263                           ;incstack = 0
 24264                           ;Eeprom_Write@MemoryAddress stored from wreg
 24265  005D1C  0100               	movlb	0	; () banked
 24266  005D1E  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 24267                           
 24268                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 24269  005D20  0E50               	movlw	80
 24270  005D22  0100               	movlb	0	; () banked
 24271  005D24  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 24272                           
 24273                           ; BSR set to: 0
 24274                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 24275  005D26  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 24276  005D28  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 24277                           
 24278                           ; BSR set to: 0
 24279                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 24280  005D2A  0E00               	movlw	0
 24281  005D2C  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24282                           
 24283                           ; BSR set to: 0
 24284                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 24285  005D2E  0E10               	movlw	16
 24286  005D30  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 24287  005D32  0012               	return	
 24288                           
 24289                           ; BSR set to: 0
 24290                           ;eeprom_if.c: 85: {
 24291                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 24292  005D34  C093  F4B3         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 24293                           
 24294                           ; BSR set to: 0
 24295                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 24296  005D38  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 24297  005D3C  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 24298  005D40  0EB4               	movlw	low (_EepromBuffer+1)
 24299  005D42  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24300  005D44  0E04               	movlw	high (_EepromBuffer+1)
 24301  005D46  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24302  005D48  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 24303  005D4C  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24304  005D4E  EC24  F02C         	call	_StringCopy	;wreg free
 24305                           
 24306                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 24307  005D52  0EB3               	movlw	low _EepromBuffer
 24308  005D54  0100               	movlb	0	; () banked
 24309  005D56  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 24310  005D58  0E04               	movlw	high _EepromBuffer
 24311  005D5A  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 24312  005D5C  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 24313  005D60  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 24314  005D64  EC69  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 24315  005D68  0100               	movlb	0	; () banked
 24316  005D6A  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24317                           
 24318                           ; BSR set to: 0
 24319  005D6C  0012               	return	
 24320  005D6E                     __end_of_Eeprom_Write:
 24321                           	opt stack 0
 24322                           tosu	equ	0xFFF
 24323                           tosh	equ	0xFFE
 24324                           tosl	equ	0xFFD
 24325                           pclath	equ	0xFFA
 24326                           tblptru	equ	0xFF8
 24327                           tblptrh	equ	0xFF7
 24328                           tblptrl	equ	0xFF6
 24329                           tablat	equ	0xFF5
 24330                           prodh	equ	0xFF4
 24331                           prodl	equ	0xFF3
 24332                           intcon	equ	0xFF2
 24333                           intcon2	equ	0xFF1
 24334                           intcon3	equ	0xFF0
 24335                           indf0	equ	0xFEF
 24336                           postinc0	equ	0xFEE
 24337                           plusw0	equ	0xFEB
 24338                           fsr0h	equ	0xFEA
 24339                           fsr0l	equ	0xFE9
 24340                           wreg	equ	0xFE8
 24341                           indf1	equ	0xFE7
 24342                           postinc1	equ	0xFE6
 24343                           postdec1	equ	0xFE5
 24344                           fsr1h	equ	0xFE2
 24345                           fsr1l	equ	0xFE1
 24346                           indf2	equ	0xFDF
 24347                           postinc2	equ	0xFDE
 24348                           postdec2	equ	0xFDD
 24349                           plusw2	equ	0xFDB
 24350                           fsr2h	equ	0xFDA
 24351                           fsr2l	equ	0xFD9
 24352                           status	equ	0xFD8
 24353                           
 24354 ;; *************** function _isNumberInMemory *****************
 24355 ;; Defined at:
 24356 ;;		line 144 in file "../Source/c/04_App/app_utils.c"
 24357 ;; Parameters:    Size  Location     Type
 24358 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24359 ;;		 -> receivedNumber(13), smsText(20), 
 24360 ;;  positionInMe    2    2[BANK1 ] PTR unsigned char 
 24361 ;;		 -> triggerCmdFsm@numberInMemory(1), delCmdFsm@numberInMemory(1), addCmdFsm@numberInMemory(1), 
 24362 ;; Auto vars:     Size  Location     Type
 24363 ;;  memoryOpResu    1    4[BANK1 ] enum E8246
 24364 ;; Return value:  Size  Location     Type
 24365 ;;                  1    wreg      enum E8973
 24366 ;; Registers used:
 24367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24368 ;; Tracked objects:
 24369 ;;		On entry : 0/0
 24370 ;;		On exit  : 0/0
 24371 ;;		Unchanged: 0/0
 24372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24373 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24374 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24376 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24377 ;;Total ram usage:        5 bytes
 24378 ;; Hardware stack levels used:    1
 24379 ;; Hardware stack levels required when called:   17
 24380 ;; This function calls:
 24381 ;;		_Eeprom_Read
 24382 ;;		_StringCompare
 24383 ;;		_isNumberValid
 24384 ;; This function is called by:
 24385 ;;		_addCmdFsm
 24386 ;;		_delCmdFsm
 24387 ;;		_triggerCmdFsm
 24388 ;; This function uses a non-reentrant model
 24389 ;;
 24390                           
 24391                           	psect	text114
 24392  004452                     __ptext114:
 24393                           	opt stack 0
 24394  004452                     _isNumberInMemory:
 24395                           	opt stack 9
 24396                           
 24397                           ;app_utils.c: 146: static searchFsmStates currentState = SEARCH_FSM_START;
 24398                           ;app_utils.c: 147: static uint8_t currentPosition = 32;
 24399                           ;app_utils.c: 148: EepromStsType memoryOpResult = OP_PENDING;
 24400                           
 24401                           ; BSR set to: 0
 24402                           ;incstack = 0
 24403  004452  0E02               	movlw	2
 24404  004454  0101               	movlb	1	; () banked
 24405  004456  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24406                           
 24407                           ; BSR set to: 1
 24408                           ;app_utils.c: 150: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24409  004458  0E01               	movlw	1
 24410  00445A  0100               	movlb	0	; () banked
 24411  00445C  65C5               	cpfsgt	isNumberInMemory@currentState& (0+255),b
 24412  00445E  D004               	goto	l2758
 24413                           
 24414                           ; BSR set to: 0
 24415                           ;app_utils.c: 151: {
 24416                           ;app_utils.c: 152: currentState = SEARCH_FSM_START;
 24417  004460  0E00               	movlw	0
 24418  004462  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24419                           
 24420                           ;app_utils.c: 153: currentPosition = 32;
 24421  004464  0E20               	movlw	32
 24422  004466  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 24423  004468                     l2758:
 24424                           
 24425                           ; BSR set to: 0
 24426                           ;app_utils.c: 154: }
 24427                           ;app_utils.c: 155: if (currentPosition >= (32 + (16 * 10)))
 24428                           
 24429                           ; BSR set to: 0
 24430  004468  0EBF               	movlw	191
 24431  00446A  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 24432  00446C  D045               	goto	l2760
 24433                           
 24434                           ; BSR set to: 0
 24435                           ;app_utils.c: 156: {
 24436                           ;app_utils.c: 157: currentState = SEARCH_FSM_NOT_FOUND;
 24437  00446E  0E04               	movlw	4
 24438  004470  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24439                           
 24440                           ; BSR set to: 0
 24441                           ;app_utils.c: 158: }
 24442                           ;app_utils.c: 160: switch (currentState)
 24443  004472  D042               	goto	l2760
 24444  004474                     
 24445                           ; BSR set to: 0
 24446                           ;app_utils.c: 163: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24447                           
 24448                           ; BSR set to: 0
 24449  004474  0E3D               	movlw	low _readBuffer
 24450  004476  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24451  004478  0E03               	movlw	high _readBuffer
 24452  00447A  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24453  00447C  0E0D               	movlw	13
 24454  00447E  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24455  004480  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 24456  004482  EC10  F02E         	call	_Eeprom_Read
 24457  004486  0101               	movlb	1	; () banked
 24458  004488  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24459                           
 24460                           ; BSR set to: 1
 24461                           ;app_utils.c: 164: if (memoryOpResult == OP_FAILED)
 24462  00448A  0504               	decf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24463  00448C  A4D8               	btfss	status,2,c
 24464  00448E  D002               	goto	l2762
 24465                           
 24466                           ; BSR set to: 1
 24467                           ;app_utils.c: 165: {
 24468                           ;app_utils.c: 166: currentState = SEARCH_FSM_ERROR;
 24469  004490  0E02               	movlw	2
 24470  004492  D005               	goto	L54
 24471  004494                     l2762:
 24472                           
 24473                           ;app_utils.c: 168: else if (memoryOpResult == OP_SUCCESS)
 24474                           
 24475                           ; BSR set to: 0
 24476  004494  0101               	movlb	1	; () banked
 24477  004496  5104               	movf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24478  004498  A4D8               	btfss	status,2,c
 24479  00449A  D035               	goto	l2765
 24480                           
 24481                           ; BSR set to: 1
 24482                           ;app_utils.c: 169: {
 24483                           ;app_utils.c: 170: currentState = SEARCH_FSM_CHECK_NUMBER;
 24484  00449C  0E01               	movlw	1
 24485  00449E                     L54:
 24486  00449E  0100               	movlb	0	; () banked
 24487  0044A0  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24488                           
 24489                           ; BSR set to: 0
 24490                           ;app_utils.c: 171: }
 24491                           ;app_utils.c: 172: break;
 24492                           
 24493                           ; BSR set to: 0
 24494  0044A2  D031               	goto	l2765
 24495  0044A4                     
 24496                           ; BSR set to: 0
 24497                           ;app_utils.c: 175: currentState = SEARCH_FSM_START;
 24498                           
 24499                           ; BSR set to: 0
 24500  0044A4  0E00               	movlw	0
 24501  0044A6  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24502                           
 24503                           ; BSR set to: 0
 24504                           ;app_utils.c: 176: if (isNumberValid(readBuffer))
 24505  0044A8  0E3D               	movlw	low _readBuffer
 24506  0044AA  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24507  0044AC  0E03               	movlw	high _readBuffer
 24508  0044AE  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24509  0044B0  ECF1  F02B         	call	_isNumberValid	;wreg free
 24510  0044B4  0900               	iorlw	0
 24511  0044B6  B4D8               	btfsc	status,2,c
 24512  0044B8  D01B               	goto	l2768
 24513                           
 24514                           ;app_utils.c: 177: {
 24515                           ;app_utils.c: 178: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24516  0044BA  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 24517  0044BE  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 24518  0044C2  0E3D               	movlw	low _readBuffer
 24519  0044C4  0100               	movlb	0	; () banked
 24520  0044C6  6F7F               	movwf	StringCompare@String2& (0+255),b
 24521  0044C8  0E03               	movlw	high _readBuffer
 24522  0044CA  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24523  0044CC  0E00               	movlw	0
 24524  0044CE  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24525  0044D0  0E0D               	movlw	13
 24526  0044D2  6F81               	movwf	StringCompare@Len& (0+255),b
 24527  0044D4  ECB7  F02E         	call	_StringCompare	;wreg free
 24528  0044D8  0900               	iorlw	0
 24529  0044DA  B4D8               	btfsc	status,2,c
 24530  0044DC  D009               	goto	l2768
 24531                           
 24532                           ;app_utils.c: 179: {
 24533                           ;app_utils.c: 180: *positionInMemory = currentPosition;
 24534  0044DE  C102  FFD9         	movff	isNumberInMemory@positionInMemory,fsr2l
 24535  0044E2  C103  FFDA         	movff	isNumberInMemory@positionInMemory+1,fsr2h
 24536  0044E6  C0E2  FFDF         	movff	isNumberInMemory@currentPosition,indf2
 24537                           
 24538                           ;app_utils.c: 181: currentState = SEARCH_FSM_FOUND;
 24539  0044EA  0E03               	movlw	3
 24540  0044EC  0100               	movlb	0	; () banked
 24541  0044EE  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24542  0044F0                     l2768:
 24543                           
 24544                           ;app_utils.c: 186: }
 24545                           ;app_utils.c: 187: }
 24546                           ;app_utils.c: 188: currentPosition += 16;
 24547                           
 24548                           ; BSR set to: 0
 24549                           
 24550                           ; BSR set to: 0
 24551                           
 24552                           ;app_utils.c: 183: else
 24553                           ;app_utils.c: 184: {
 24554                           
 24555                           ; BSR set to: 0
 24556  0044F0  0E10               	movlw	16
 24557  0044F2  0100               	movlb	0	; () banked
 24558  0044F4  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 24559                           
 24560                           ; BSR set to: 0
 24561                           ;app_utils.c: 193: }
 24562                           
 24563                           ; BSR set to: 0
 24564                           ;app_utils.c: 192: break;
 24565                           
 24566                           ;app_utils.c: 191: default:
 24567                           
 24568                           ;app_utils.c: 189: break;
 24569  0044F6  D007               	goto	l2765
 24570  0044F8                     l2760:
 24571                           
 24572                           ; BSR set to: 0
 24573                           
 24574                           ; BSR set to: 0
 24575  0044F8  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24576                           
 24577                           ; Switch size 1, requested type "space"
 24578                           ; Number of cases is 2, Range of values is 0 to 1
 24579                           ; switch strategies available:
 24580                           ; Name         Instructions Cycles
 24581                           ; simple_byte            7     4 (average)
 24582                           ;	Chosen strategy is simple_byte
 24583  0044FA  0A00               	xorlw	0	; case 0
 24584  0044FC  B4D8               	btfsc	status,2,c
 24585  0044FE  D7BA               	goto	l2761
 24586  004500  0A01               	xorlw	1	; case 1
 24587  004502  B4D8               	btfsc	status,2,c
 24588  004504  D7CF               	goto	l2766
 24589  004506                     l2765:
 24590                           
 24591                           ;app_utils.c: 194: return currentState;
 24592                           
 24593                           ; BSR set to: 0
 24594  004506  0100               	movlb	0	; () banked
 24595  004508  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24596  00450A  0012               	return	
 24597  00450C                     __end_of_isNumberInMemory:
 24598                           	opt stack 0
 24599                           tosu	equ	0xFFF
 24600                           tosh	equ	0xFFE
 24601                           tosl	equ	0xFFD
 24602                           pclath	equ	0xFFA
 24603                           tblptru	equ	0xFF8
 24604                           tblptrh	equ	0xFF7
 24605                           tblptrl	equ	0xFF6
 24606                           tablat	equ	0xFF5
 24607                           prodh	equ	0xFF4
 24608                           prodl	equ	0xFF3
 24609                           intcon	equ	0xFF2
 24610                           intcon2	equ	0xFF1
 24611                           intcon3	equ	0xFF0
 24612                           indf0	equ	0xFEF
 24613                           postinc0	equ	0xFEE
 24614                           plusw0	equ	0xFEB
 24615                           fsr0h	equ	0xFEA
 24616                           fsr0l	equ	0xFE9
 24617                           wreg	equ	0xFE8
 24618                           indf1	equ	0xFE7
 24619                           postinc1	equ	0xFE6
 24620                           postdec1	equ	0xFE5
 24621                           fsr1h	equ	0xFE2
 24622                           fsr1l	equ	0xFE1
 24623                           indf2	equ	0xFDF
 24624                           postinc2	equ	0xFDE
 24625                           postdec2	equ	0xFDD
 24626                           plusw2	equ	0xFDB
 24627                           fsr2h	equ	0xFDA
 24628                           fsr2l	equ	0xFD9
 24629                           status	equ	0xFD8
 24630                           
 24631 ;; *************** function _isMasterNumber *****************
 24632 ;; Defined at:
 24633 ;;		line 232 in file "../Source/c/04_App/app_utils.c"
 24634 ;; Parameters:    Size  Location     Type
 24635 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24636 ;;		 -> receivedNumber(13), 
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 24639 ;; Return value:  Size  Location     Type
 24640 ;;                  1    wreg      unsigned char 
 24641 ;; Registers used:
 24642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24643 ;; Tracked objects:
 24644 ;;		On entry : 0/0
 24645 ;;		On exit  : 0/0
 24646 ;;		Unchanged: 0/0
 24647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24648 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24649 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24651 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24652 ;;Total ram usage:        3 bytes
 24653 ;; Hardware stack levels used:    1
 24654 ;; Hardware stack levels required when called:   17
 24655 ;; This function calls:
 24656 ;;		_Eeprom_Read
 24657 ;;		_StringCompare
 24658 ;;		_isNumberValid
 24659 ;; This function is called by:
 24660 ;;		_addCmdFsm
 24661 ;;		_delCmdFsm
 24662 ;;		_triggerCmdFsm
 24663 ;; This function uses a non-reentrant model
 24664 ;;
 24665                           
 24666                           	psect	text115
 24667  005568                     __ptext115:
 24668                           	opt stack 0
 24669  005568                     _isMasterNumber:
 24670                           	opt stack 9
 24671                           
 24672                           ;app_utils.c: 234: EepromStsType memoryOpResult = OP_PENDING;
 24673                           
 24674                           ; BSR set to: 0
 24675                           ;incstack = 0
 24676  005568  0E02               	movlw	2
 24677  00556A  0101               	movlb	1	; () banked
 24678  00556C  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24679                           
 24680                           ; BSR set to: 1
 24681                           ;app_utils.c: 236: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 24682  00556E  0E3D               	movlw	low _readBuffer
 24683  005570  0100               	movlb	0	; () banked
 24684  005572  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24685  005574  0E03               	movlw	high _readBuffer
 24686  005576  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24687  005578  0E0D               	movlw	13
 24688  00557A  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24689  00557C  0E10               	movlw	16
 24690  00557E  EC10  F02E         	call	_Eeprom_Read
 24691  005582  0101               	movlb	1	; () banked
 24692  005584  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24693                           
 24694                           ; BSR set to: 1
 24695                           ;app_utils.c: 237: if (memoryOpResult != OP_PENDING)
 24696  005586  0E02               	movlw	2
 24697  005588  1902               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 24698  00558A  B4D8               	btfsc	status,2,c
 24699  00558C  D021               	goto	l2776
 24700                           
 24701                           ; BSR set to: 1
 24702                           ;app_utils.c: 238: {
 24703                           ;app_utils.c: 239: memoryOpResult = OP_FAILED;
 24704  00558E  0E01               	movlw	1
 24705  005590  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24706                           
 24707                           ; BSR set to: 1
 24708                           ;app_utils.c: 240: if (isNumberValid(readBuffer))
 24709  005592  0E3D               	movlw	low _readBuffer
 24710  005594  0100               	movlb	0	; () banked
 24711  005596  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24712  005598  0E03               	movlw	high _readBuffer
 24713  00559A  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24714  00559C  ECF1  F02B         	call	_isNumberValid	;wreg free
 24715  0055A0  0900               	iorlw	0
 24716  0055A2  B4D8               	btfsc	status,2,c
 24717  0055A4  D015               	goto	l2776
 24718                           
 24719                           ;app_utils.c: 241: {
 24720                           ;app_utils.c: 242: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24721  0055A6  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 24722  0055AA  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 24723  0055AE  0E3D               	movlw	low _readBuffer
 24724  0055B0  0100               	movlb	0	; () banked
 24725  0055B2  6F7F               	movwf	StringCompare@String2& (0+255),b
 24726  0055B4  0E03               	movlw	high _readBuffer
 24727  0055B6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24728  0055B8  0E00               	movlw	0
 24729  0055BA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24730  0055BC  0E0D               	movlw	13
 24731  0055BE  6F81               	movwf	StringCompare@Len& (0+255),b
 24732  0055C0  ECB7  F02E         	call	_StringCompare	;wreg free
 24733  0055C4  0900               	iorlw	0
 24734  0055C6  B4D8               	btfsc	status,2,c
 24735  0055C8  D003               	goto	l2776
 24736                           
 24737                           ;app_utils.c: 243: {
 24738                           ;app_utils.c: 244: memoryOpResult = OP_SUCCESS;
 24739  0055CA  0E00               	movlw	0
 24740  0055CC  0101               	movlb	1	; () banked
 24741  0055CE  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24742  0055D0                     l2776:
 24743                           
 24744                           ;app_utils.c: 245: }
 24745                           ;app_utils.c: 246: }
 24746                           ;app_utils.c: 247: }
 24747                           ;app_utils.c: 248: return memoryOpResult;
 24748                           
 24749                           ; BSR set to: 1
 24750                           
 24751                           ; BSR set to: 1
 24752  0055D0  0101               	movlb	1	; () banked
 24753  0055D2  5102               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 24754  0055D4  0012               	return	
 24755  0055D6                     __end_of_isMasterNumber:
 24756                           	opt stack 0
 24757                           tosu	equ	0xFFF
 24758                           tosh	equ	0xFFE
 24759                           tosl	equ	0xFFD
 24760                           pclath	equ	0xFFA
 24761                           tblptru	equ	0xFF8
 24762                           tblptrh	equ	0xFF7
 24763                           tblptrl	equ	0xFF6
 24764                           tablat	equ	0xFF5
 24765                           prodh	equ	0xFF4
 24766                           prodl	equ	0xFF3
 24767                           intcon	equ	0xFF2
 24768                           intcon2	equ	0xFF1
 24769                           intcon3	equ	0xFF0
 24770                           indf0	equ	0xFEF
 24771                           postinc0	equ	0xFEE
 24772                           plusw0	equ	0xFEB
 24773                           fsr0h	equ	0xFEA
 24774                           fsr0l	equ	0xFE9
 24775                           wreg	equ	0xFE8
 24776                           indf1	equ	0xFE7
 24777                           postinc1	equ	0xFE6
 24778                           postdec1	equ	0xFE5
 24779                           fsr1h	equ	0xFE2
 24780                           fsr1l	equ	0xFE1
 24781                           indf2	equ	0xFDF
 24782                           postinc2	equ	0xFDE
 24783                           postdec2	equ	0xFDD
 24784                           plusw2	equ	0xFDB
 24785                           fsr2h	equ	0xFDA
 24786                           fsr2l	equ	0xFD9
 24787                           status	equ	0xFD8
 24788                           
 24789 ;; *************** function _findEmptySpot *****************
 24790 ;; Defined at:
 24791 ;;		line 282 in file "../Source/c/04_App/app_utils.c"
 24792 ;; Parameters:    Size  Location     Type
 24793 ;;  positionInMe    2    0[BANK1 ] PTR unsigned char 
 24794 ;;		 -> addCmdFsm@numberInMemory(1), 
 24795 ;; Auto vars:     Size  Location     Type
 24796 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 24797 ;; Return value:  Size  Location     Type
 24798 ;;                  1    wreg      enum E8973
 24799 ;; Registers used:
 24800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24801 ;; Tracked objects:
 24802 ;;		On entry : 0/0
 24803 ;;		On exit  : 0/0
 24804 ;;		Unchanged: 0/0
 24805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24806 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24807 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24809 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24810 ;;Total ram usage:        3 bytes
 24811 ;; Hardware stack levels used:    1
 24812 ;; Hardware stack levels required when called:   17
 24813 ;; This function calls:
 24814 ;;		_Eeprom_Read
 24815 ;;		_isNumberValid
 24816 ;; This function is called by:
 24817 ;;		_addCmdFsm
 24818 ;; This function uses a non-reentrant model
 24819 ;;
 24820                           
 24821                           	psect	text116
 24822  004DFC                     __ptext116:
 24823                           	opt stack 0
 24824  004DFC                     _findEmptySpot:
 24825                           	opt stack 9
 24826                           
 24827                           ;app_utils.c: 284: static searchFsmStates currentState = SEARCH_FSM_START;
 24828                           ;app_utils.c: 285: static uint8_t currentPosition = 32;
 24829                           ;app_utils.c: 286: EepromStsType memoryOpResult = OP_PENDING;
 24830                           
 24831                           ; BSR set to: 1
 24832                           ;incstack = 0
 24833  004DFC  0E02               	movlw	2
 24834  004DFE  0101               	movlb	1	; () banked
 24835  004E00  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24836                           
 24837                           ; BSR set to: 1
 24838                           ;app_utils.c: 288: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24839  004E02  0E01               	movlw	1
 24840  004E04  0100               	movlb	0	; () banked
 24841  004E06  65C4               	cpfsgt	findEmptySpot@currentState& (0+255),b
 24842  004E08  D004               	goto	l2784
 24843                           
 24844                           ; BSR set to: 0
 24845                           ;app_utils.c: 289: {
 24846                           ;app_utils.c: 290: currentState = SEARCH_FSM_START;
 24847  004E0A  0E00               	movlw	0
 24848  004E0C  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24849                           
 24850                           ;app_utils.c: 291: currentPosition = 32;
 24851  004E0E  0E20               	movlw	32
 24852  004E10  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 24853  004E12                     l2784:
 24854                           
 24855                           ; BSR set to: 0
 24856                           ;app_utils.c: 292: }
 24857                           ;app_utils.c: 293: if (currentPosition >= (32 + (16 * 10)))
 24858                           
 24859                           ; BSR set to: 0
 24860  004E12  0EBF               	movlw	191
 24861  004E14  65E1               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 24862  004E16  D033               	goto	l2786
 24863                           
 24864                           ; BSR set to: 0
 24865                           ;app_utils.c: 294: {
 24866                           ;app_utils.c: 295: currentState = SEARCH_FSM_NOT_FOUND;
 24867  004E18  0E04               	movlw	4
 24868  004E1A  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24869                           
 24870                           ; BSR set to: 0
 24871                           ;app_utils.c: 296: }
 24872                           ;app_utils.c: 298: switch (currentState)
 24873  004E1C  D030               	goto	l2786
 24874  004E1E                     
 24875                           ; BSR set to: 0
 24876                           ;app_utils.c: 301: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24877                           
 24878                           ; BSR set to: 0
 24879  004E1E  0E3D               	movlw	low _readBuffer
 24880  004E20  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24881  004E22  0E03               	movlw	high _readBuffer
 24882  004E24  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24883  004E26  0E0D               	movlw	13
 24884  004E28  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24885  004E2A  51E1               	movf	findEmptySpot@currentPosition& (0+255),w,b
 24886  004E2C  EC10  F02E         	call	_Eeprom_Read
 24887  004E30  0101               	movlb	1	; () banked
 24888  004E32  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24889                           
 24890                           ; BSR set to: 1
 24891                           ;app_utils.c: 302: if (memoryOpResult == OP_FAILED)
 24892  004E34  0502               	decf	findEmptySpot@memoryOpResult& (0+255),w,b
 24893  004E36  A4D8               	btfss	status,2,c
 24894  004E38  D002               	goto	l2788
 24895                           
 24896                           ; BSR set to: 1
 24897                           ;app_utils.c: 303: {
 24898                           ;app_utils.c: 304: currentState = SEARCH_FSM_ERROR;
 24899  004E3A  0E02               	movlw	2
 24900  004E3C  D005               	goto	L55
 24901  004E3E                     l2788:
 24902                           
 24903                           ;app_utils.c: 306: else if (memoryOpResult == OP_SUCCESS)
 24904                           
 24905                           ; BSR set to: 0
 24906  004E3E  0101               	movlb	1	; () banked
 24907  004E40  5102               	movf	findEmptySpot@memoryOpResult& (0+255),w,b
 24908  004E42  A4D8               	btfss	status,2,c
 24909  004E44  D023               	goto	l2791
 24910                           
 24911                           ; BSR set to: 1
 24912                           ;app_utils.c: 307: {
 24913                           ;app_utils.c: 308: currentState = SEARCH_FSM_CHECK_NUMBER;
 24914  004E46  0E01               	movlw	1
 24915  004E48                     L55:
 24916  004E48  0100               	movlb	0	; () banked
 24917  004E4A  D00D               	goto	L56
 24918  004E4C                     
 24919                           ; BSR set to: 0
 24920                           ;app_utils.c: 313: if (isNumberValid(readBuffer))
 24921                           
 24922                           ; BSR set to: 0
 24923  004E4C  0E3D               	movlw	low _readBuffer
 24924  004E4E  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24925  004E50  0E03               	movlw	high _readBuffer
 24926  004E52  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24927  004E54  ECF1  F02B         	call	_isNumberValid	;wreg free
 24928  004E58  0900               	iorlw	0
 24929  004E5A  B4D8               	btfsc	status,2,c
 24930  004E5C  D006               	goto	l2793
 24931                           
 24932                           ;app_utils.c: 314: {
 24933                           ;app_utils.c: 315: currentPosition += 16;
 24934  004E5E  0E10               	movlw	16
 24935  004E60  0100               	movlb	0	; () banked
 24936  004E62  27E1               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 24937                           
 24938                           ; BSR set to: 0
 24939                           ;app_utils.c: 316: currentState = SEARCH_FSM_START;
 24940  004E64  0E00               	movlw	0
 24941  004E66                     L56:
 24942  004E66  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24943                           
 24944                           ;app_utils.c: 317: }
 24945  004E68  D011               	goto	l2791
 24946  004E6A                     l2793:
 24947                           
 24948                           ;app_utils.c: 318: else
 24949                           ;app_utils.c: 319: {
 24950                           ;app_utils.c: 320: currentState = SEARCH_FSM_NOT_FOUND;
 24951                           
 24952                           ; BSR set to: 0
 24953  004E6A  0E04               	movlw	4
 24954  004E6C  0100               	movlb	0	; () banked
 24955  004E6E  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24956                           
 24957                           ; BSR set to: 0
 24958                           ;app_utils.c: 321: *positionInMemory = currentPosition;
 24959  004E70  C100  FFD9         	movff	findEmptySpot@positionInMemory,fsr2l
 24960  004E74  C101  FFDA         	movff	findEmptySpot@positionInMemory+1,fsr2h
 24961  004E78  C0E1  FFDF         	movff	findEmptySpot@currentPosition,indf2
 24962                           
 24963                           ; BSR set to: 0
 24964                           ;app_utils.c: 327: }
 24965                           
 24966                           ; BSR set to: 0
 24967                           ;app_utils.c: 326: break;
 24968                           
 24969                           ;app_utils.c: 325: default:
 24970                           
 24971                           ; BSR set to: 0
 24972                           ;app_utils.c: 322: }
 24973                           ;app_utils.c: 323: break;
 24974  004E7C  D007               	goto	l2791
 24975  004E7E                     l2786:
 24976                           
 24977                           ; BSR set to: 0
 24978                           
 24979                           ; BSR set to: 0
 24980  004E7E  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 24981                           
 24982                           ; Switch size 1, requested type "space"
 24983                           ; Number of cases is 2, Range of values is 0 to 1
 24984                           ; switch strategies available:
 24985                           ; Name         Instructions Cycles
 24986                           ; simple_byte            7     4 (average)
 24987                           ;	Chosen strategy is simple_byte
 24988  004E80  0A00               	xorlw	0	; case 0
 24989  004E82  B4D8               	btfsc	status,2,c
 24990  004E84  D7CC               	goto	l2787
 24991  004E86  0A01               	xorlw	1	; case 1
 24992  004E88  B4D8               	btfsc	status,2,c
 24993  004E8A  D7E0               	goto	l2792
 24994  004E8C                     l2791:
 24995                           
 24996                           ;app_utils.c: 328: return currentState;
 24997                           
 24998                           ; BSR set to: 0
 24999  004E8C  0100               	movlb	0	; () banked
 25000  004E8E  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 25001  004E90  0012               	return	
 25002  004E92                     __end_of_findEmptySpot:
 25003                           	opt stack 0
 25004                           tosu	equ	0xFFF
 25005                           tosh	equ	0xFFE
 25006                           tosl	equ	0xFFD
 25007                           pclath	equ	0xFFA
 25008                           tblptru	equ	0xFF8
 25009                           tblptrh	equ	0xFF7
 25010                           tblptrl	equ	0xFF6
 25011                           tablat	equ	0xFF5
 25012                           prodh	equ	0xFF4
 25013                           prodl	equ	0xFF3
 25014                           intcon	equ	0xFF2
 25015                           intcon2	equ	0xFF1
 25016                           intcon3	equ	0xFF0
 25017                           indf0	equ	0xFEF
 25018                           postinc0	equ	0xFEE
 25019                           plusw0	equ	0xFEB
 25020                           fsr0h	equ	0xFEA
 25021                           fsr0l	equ	0xFE9
 25022                           wreg	equ	0xFE8
 25023                           indf1	equ	0xFE7
 25024                           postinc1	equ	0xFE6
 25025                           postdec1	equ	0xFE5
 25026                           fsr1h	equ	0xFE2
 25027                           fsr1l	equ	0xFE1
 25028                           indf2	equ	0xFDF
 25029                           postinc2	equ	0xFDE
 25030                           postdec2	equ	0xFDD
 25031                           plusw2	equ	0xFDB
 25032                           fsr2h	equ	0xFDA
 25033                           fsr2l	equ	0xFD9
 25034                           status	equ	0xFD8
 25035                           
 25036 ;; *************** function _isNumberValid *****************
 25037 ;; Defined at:
 25038 ;;		line 122 in file "../Source/c/04_App/app_utils.c"
 25039 ;; Parameters:    Size  Location     Type
 25040 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 25041 ;;		 -> readBuffer(13), smsText(20), 
 25042 ;; Auto vars:     Size  Location     Type
 25043 ;;  i               1   33[BANK0 ] unsigned char 
 25044 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 25045 ;; Return value:  Size  Location     Type
 25046 ;;                  1    wreg      unsigned char 
 25047 ;; Registers used:
 25048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25049 ;; Tracked objects:
 25050 ;;		On entry : 0/0
 25051 ;;		On exit  : 0/0
 25052 ;;		Unchanged: 0/0
 25053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25057 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25058 ;;Total ram usage:        5 bytes
 25059 ;; Hardware stack levels used:    1
 25060 ;; Hardware stack levels required when called:   11
 25061 ;; This function calls:
 25062 ;;		Nothing
 25063 ;; This function is called by:
 25064 ;;		_parseCommand
 25065 ;;		_isNumberInMemory
 25066 ;;		_isMasterNumber
 25067 ;;		_findEmptySpot
 25068 ;; This function uses a non-reentrant model
 25069 ;;
 25070                           
 25071                           	psect	text117
 25072  0057E2                     __ptext117:
 25073                           	opt stack 0
 25074  0057E2                     _isNumberValid:
 25075                           	opt stack 14
 25076                           
 25077                           ;app_utils.c: 124: bool isNumberOk = 0;
 25078                           
 25079                           ; BSR set to: 0
 25080                           ;incstack = 0
 25081  0057E2  0E00               	movlw	0
 25082  0057E4  0100               	movlb	0	; () banked
 25083  0057E6  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25084                           
 25085                           ;app_utils.c: 125: uint8_t i = 0;
 25086  0057E8  0E00               	movlw	0
 25087  0057EA  6F81               	movwf	isNumberValid@i& (0+255),b
 25088                           
 25089                           ; BSR set to: 0
 25090                           ;app_utils.c: 126: if (phoneNumber[0] == '+')
 25091  0057EC  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 25092  0057F0  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 25093  0057F4  0E2B               	movlw	43
 25094  0057F6  18DE               	xorwf	postinc2,w,c
 25095  0057F8  A4D8               	btfss	status,2,c
 25096  0057FA  D024               	goto	u13370
 25097                           
 25098                           ; BSR set to: 0
 25099                           ;app_utils.c: 127: {
 25100                           ;app_utils.c: 128: for (i = 1; i < ((UINT8)(13)); i++)
 25101  0057FC  0E01               	movlw	1
 25102  0057FE  6F81               	movwf	isNumberValid@i& (0+255),b
 25103  005800                     l14217:
 25104                           
 25105                           ; BSR set to: 0
 25106  005800  0E0C               	movlw	12
 25107  005802  6581               	cpfsgt	isNumberValid@i& (0+255),b
 25108  005804  D001               	goto	l2747
 25109  005806  D01E               	goto	u13370
 25110  005808                     l2747:
 25111                           
 25112                           ; BSR set to: 0
 25113                           ;app_utils.c: 129: {
 25114                           ;app_utils.c: 130: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 25115                           
 25116                           ; BSR set to: 0
 25117  005808  5181               	movf	isNumberValid@i& (0+255),w,b
 25118  00580A  0D01               	mullw	1
 25119  00580C  50F3               	movf	prodl,w,c
 25120  00580E  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 25121  005810  6ED9               	movwf	fsr2l,c
 25122  005812  50F4               	movf	prodh,w,c
 25123  005814  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 25124  005816  6EDA               	movwf	fsr2h,c
 25125  005818  0E2F               	movlw	47
 25126  00581A  64DF               	cpfsgt	indf2,c
 25127  00581C  D00E               	goto	l2749
 25128                           
 25129                           ; BSR set to: 0
 25130  00581E  5181               	movf	isNumberValid@i& (0+255),w,b
 25131  005820  0D01               	mullw	1
 25132  005822  50F3               	movf	prodl,w,c
 25133  005824  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 25134  005826  6ED9               	movwf	fsr2l,c
 25135  005828  50F4               	movf	prodh,w,c
 25136  00582A  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 25137  00582C  6EDA               	movwf	fsr2h,c
 25138  00582E  0E3A               	movlw	58
 25139  005830  60DF               	cpfslt	indf2,c
 25140  005832  D003               	goto	l2749
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;app_utils.c: 131: {
 25144                           ;app_utils.c: 132: isNumberOk = 1;
 25145  005834  0E01               	movlw	1
 25146  005836  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25147                           
 25148                           ;app_utils.c: 133: }
 25149  005838  D003               	goto	l2750
 25150  00583A                     l2749:
 25151                           
 25152                           ; BSR set to: 0
 25153                           ;app_utils.c: 134: else
 25154                           ;app_utils.c: 135: {
 25155                           ;app_utils.c: 136: isNumberOk = 0;
 25156                           
 25157                           ; BSR set to: 0
 25158  00583A  0E00               	movlw	0
 25159  00583C  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25160                           
 25161                           ;app_utils.c: 137: break;
 25162  00583E  D002               	goto	u13370
 25163  005840                     l2750:
 25164                           
 25165                           ; BSR set to: 0
 25166                           
 25167                           ; BSR set to: 0
 25168  005840  2B81               	incf	isNumberValid@i& (0+255),f,b
 25169  005842  D7DE               	goto	l14217
 25170  005844                     u13370:
 25171                           
 25172                           ; BSR set to: 0
 25173                           ;app_utils.c: 138: }
 25174                           ;app_utils.c: 139: }
 25175                           ;app_utils.c: 140: }
 25176                           ;app_utils.c: 141: return isNumberOk;
 25177                           
 25178                           ; BSR set to: 0
 25179                           
 25180                           ; BSR set to: 0
 25181  005844  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 25182  005846  0012               	return	
 25183  005848                     __end_of_isNumberValid:
 25184                           	opt stack 0
 25185                           tosu	equ	0xFFF
 25186                           tosh	equ	0xFFE
 25187                           tosl	equ	0xFFD
 25188                           pclath	equ	0xFFA
 25189                           tblptru	equ	0xFF8
 25190                           tblptrh	equ	0xFF7
 25191                           tblptrl	equ	0xFF6
 25192                           tablat	equ	0xFF5
 25193                           prodh	equ	0xFF4
 25194                           prodl	equ	0xFF3
 25195                           intcon	equ	0xFF2
 25196                           intcon2	equ	0xFF1
 25197                           intcon3	equ	0xFF0
 25198                           indf0	equ	0xFEF
 25199                           postinc0	equ	0xFEE
 25200                           plusw0	equ	0xFEB
 25201                           fsr0h	equ	0xFEA
 25202                           fsr0l	equ	0xFE9
 25203                           wreg	equ	0xFE8
 25204                           indf1	equ	0xFE7
 25205                           postinc1	equ	0xFE6
 25206                           postdec1	equ	0xFE5
 25207                           fsr1h	equ	0xFE2
 25208                           fsr1l	equ	0xFE1
 25209                           indf2	equ	0xFDF
 25210                           postinc2	equ	0xFDE
 25211                           postdec2	equ	0xFDD
 25212                           plusw2	equ	0xFDB
 25213                           fsr2h	equ	0xFDA
 25214                           fsr2l	equ	0xFD9
 25215                           status	equ	0xFD8
 25216                           
 25217 ;; *************** function _Eeprom_Read *****************
 25218 ;; Defined at:
 25219 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25220 ;; Parameters:    Size  Location     Type
 25221 ;;  MemoryAddres    1    wreg     unsigned char 
 25222 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 25223 ;;		 -> readBuffer(13), memoryPreamble(4), 
 25224 ;;  DataLength      1   75[BANK0 ] unsigned char 
 25225 ;; Auto vars:     Size  Location     Type
 25226 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 25227 ;;  QuerySts        1   79[BANK0 ] enum E8932
 25228 ;;  ReadSts         1   78[BANK0 ] enum E8958
 25229 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 25230 ;; Return value:  Size  Location     Type
 25231 ;;                  1    wreg      enum E8958
 25232 ;; Registers used:
 25233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25234 ;; Tracked objects:
 25235 ;;		On entry : 0/0
 25236 ;;		On exit  : 0/0
 25237 ;;		Unchanged: 0/0
 25238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25239 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25240 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25242 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25243 ;;Total ram usage:        7 bytes
 25244 ;; Hardware stack levels used:    1
 25245 ;; Hardware stack levels required when called:   16
 25246 ;; This function calls:
 25247 ;;		_I2cSlv_QueryI2cData
 25248 ;; This function is called by:
 25249 ;;		_initEeprom
 25250 ;;		_isNumberInMemory
 25251 ;;		_isMasterNumber
 25252 ;;		_findEmptySpot
 25253 ;; This function uses a non-reentrant model
 25254 ;;
 25255                           
 25256                           	psect	text118
 25257  005C20                     __ptext118:
 25258                           	opt stack 0
 25259  005C20                     _Eeprom_Read:
 25260                           	opt stack 9
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;incstack = 0
 25264                           ;Eeprom_Read@MemoryAddress stored from wreg
 25265  005C20  0100               	movlb	0	; () banked
 25266  005C22  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 25267                           
 25268                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 25269  005C24  0E50               	movlw	80
 25270  005C26  0100               	movlb	0	; () banked
 25271  005C28  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 25272                           
 25273                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 25274  005C2A  0E00               	movlw	0
 25275  005C2C  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25276                           
 25277                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 25278  005C2E  0E02               	movlw	2
 25279  005C30  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25280                           
 25281                           ; BSR set to: 0
 25282                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 25283  005C32  C0AC  F1FB         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 25284                           
 25285                           ; BSR set to: 0
 25286                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 25287  005C36  0EFB               	movlw	low _ReadAddress
 25288  005C38  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 25289  005C3A  0E01               	movlw	high _ReadAddress
 25290  005C3C  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 25291  005C3E  0E01               	movlw	1
 25292  005C40  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 25293  005C42  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 25294  005C46  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 25295  005C4A  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 25296  005C4E  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 25297  005C52  EC14  F01D         	call	_I2cSlv_QueryI2cData	;wreg free
 25298  005C56  0100               	movlb	0	; () banked
 25299  005C58  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25300                           
 25301                           ; BSR set to: 0
 25302                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 25303  005C5A  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 25304  005C5C  A4D8               	btfss	status,2,c
 25305  005C5E  D002               	goto	l2037
 25306                           
 25307                           ; BSR set to: 0
 25308                           ;eeprom_if.c: 114: {
 25309                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 25310  005C60  0E00               	movlw	0
 25311  005C62  D005               	goto	L57
 25312  005C64                     l2037:
 25313                           
 25314                           ; BSR set to: 0
 25315                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 25316                           
 25317                           ; BSR set to: 0
 25318  005C64  0E02               	movlw	2
 25319  005C66  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 25320  005C68  A4D8               	btfss	status,2,c
 25321  005C6A  D002               	goto	l2039
 25322                           
 25323                           ; BSR set to: 0
 25324                           ;eeprom_if.c: 118: {
 25325                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 25326  005C6C  0E01               	movlw	1
 25327  005C6E                     L57:
 25328  005C6E  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25329  005C70                     l2039:
 25330                           
 25331                           ; BSR set to: 0
 25332                           ;eeprom_if.c: 120: }
 25333                           ;eeprom_if.c: 121: return ReadSts;
 25334                           
 25335                           ; BSR set to: 0
 25336  005C70  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 25337  005C72  0012               	return	
 25338  005C74                     __end_of_Eeprom_Read:
 25339                           	opt stack 0
 25340                           tosu	equ	0xFFF
 25341                           tosh	equ	0xFFE
 25342                           tosl	equ	0xFFD
 25343                           pclath	equ	0xFFA
 25344                           tblptru	equ	0xFF8
 25345                           tblptrh	equ	0xFF7
 25346                           tblptrl	equ	0xFF6
 25347                           tablat	equ	0xFF5
 25348                           prodh	equ	0xFF4
 25349                           prodl	equ	0xFF3
 25350                           intcon	equ	0xFF2
 25351                           intcon2	equ	0xFF1
 25352                           intcon3	equ	0xFF0
 25353                           indf0	equ	0xFEF
 25354                           postinc0	equ	0xFEE
 25355                           plusw0	equ	0xFEB
 25356                           fsr0h	equ	0xFEA
 25357                           fsr0l	equ	0xFE9
 25358                           wreg	equ	0xFE8
 25359                           indf1	equ	0xFE7
 25360                           postinc1	equ	0xFE6
 25361                           postdec1	equ	0xFE5
 25362                           fsr1h	equ	0xFE2
 25363                           fsr1l	equ	0xFE1
 25364                           indf2	equ	0xFDF
 25365                           postinc2	equ	0xFDE
 25366                           postdec2	equ	0xFDD
 25367                           plusw2	equ	0xFDB
 25368                           fsr2h	equ	0xFDA
 25369                           fsr2l	equ	0xFD9
 25370                           status	equ	0xFD8
 25371                           
 25372 ;; *************** function _I2cSlv_QueryI2cData *****************
 25373 ;; Defined at:
 25374 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25375 ;; Parameters:    Size  Location     Type
 25376 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 25377 ;;		 -> ReadAddress(1), 
 25378 ;;  TxLen           1   68[BANK0 ] unsigned char 
 25379 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 25380 ;;		 -> readBuffer(13), memoryPreamble(4), 
 25381 ;;  RxLen           1   71[BANK0 ] unsigned char 
 25382 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 25383 ;; Auto vars:     Size  Location     Type
 25384 ;;		None
 25385 ;; Return value:  Size  Location     Type
 25386 ;;                  1    wreg      enum E8947
 25387 ;; Registers used:
 25388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25389 ;; Tracked objects:
 25390 ;;		On entry : 0/0
 25391 ;;		On exit  : 0/0
 25392 ;;		Unchanged: 0/0
 25393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25394 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25397 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25398 ;;Total ram usage:        7 bytes
 25399 ;; Hardware stack levels used:    1
 25400 ;; Hardware stack levels required when called:   15
 25401 ;; This function calls:
 25402 ;;		_I2cSlv_I2cReadMsgSts
 25403 ;;		_I2cSlv_ReceiveI2cMsg
 25404 ;;		_I2cSlv_SendI2cMsg
 25405 ;;		_OsTmr_GetTimerStatus
 25406 ;;		_OsTmr_StartTimer
 25407 ;;		_OsTmr_Wait
 25408 ;; This function is called by:
 25409 ;;		_Eeprom_Read
 25410 ;; This function uses a non-reentrant model
 25411 ;;
 25412                           
 25413                           	psect	text119
 25414  003A28                     __ptext119:
 25415                           	opt stack 0
 25416  003A28                     _I2cSlv_QueryI2cData:
 25417                           	opt stack 9
 25418                           
 25419                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 25420                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 25421                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 25422                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 25423                           ;i2c_slv.c: 388: switch(I2cOpState)
 25424                           
 25425                           ; BSR set to: 0
 25426                           ;incstack = 0
 25427  003A28  D05B               	goto	l1440
 25428  003A2A                     
 25429                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 25430  003A2A  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 25431  003A2E  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 25432  003A32  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 25433  003A36  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 25434  003A3A  EC69  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 25435                           
 25436                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 25437  003A3E  0E01               	movlw	1
 25438  003A40  0101               	movlb	1	; () banked
 25439  003A42  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25440                           
 25441                           ; BSR set to: 1
 25442                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 25443  003A44  0E00               	movlw	0
 25444  003A46  D04A               	goto	L61
 25445  003A48                     
 25446                           ; BSR set to: 1
 25447                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 25448                           
 25449                           ; BSR set to: 1
 25450  003A48  0EE7               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 25451  003A4A  0100               	movlb	0	; () banked
 25452  003A4C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 25453  003A4E  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 25454  003A50  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 25455  003A52  0EF4               	movlw	244
 25456  003A54  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 25457  003A56  0E01               	movlw	1
 25458  003A58  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 25459  003A5A  0E00               	movlw	0
 25460  003A5C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 25461  003A5E  0E00               	movlw	0
 25462  003A60  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 25463  003A62  ECC9  F029         	call	_OsTmr_Wait	;wreg free
 25464  003A66  06E8               	decf	wreg,f,c
 25465  003A68  A4D8               	btfss	status,2,c
 25466  003A6A  D036               	goto	l1448
 25467                           
 25468                           ;i2c_slv.c: 402: {
 25469                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 25470  003A6C  0E4A               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25471  003A6E  0100               	movlb	0	; () banked
 25472  003A70  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25473  003A72  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25474  003A74  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25475  003A76  0EC4               	movlw	196
 25476  003A78  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25477  003A7A  0E09               	movlw	9
 25478  003A7C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25479  003A7E  0E00               	movlw	0
 25480  003A80  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25481  003A82  0E00               	movlw	0
 25482  003A84  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25483  003A86  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 25484                           
 25485                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 25486  003A8A  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 25487  003A8E  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 25488  003A92  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 25489  003A96  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 25490  003A9A  EC0A  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 25491                           
 25492                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 25493  003A9E  0E02               	movlw	2
 25494  003AA0  0101               	movlb	1	; () banked
 25495  003AA2  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25496  003AA4  D019               	goto	l1448
 25497  003AA6                     
 25498                           ; BSR set to: 1
 25499                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 25500                           
 25501                           ; BSR set to: 1
 25502  003AA6  EC4B  F034         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 25503  003AAA  06E8               	decf	wreg,f,c
 25504  003AAC  A4D8               	btfss	status,2,c
 25505  003AAE  D005               	goto	l1446
 25506                           
 25507                           ;i2c_slv.c: 414: {
 25508                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 25509  003AB0  0E00               	movlw	0
 25510  003AB2  0101               	movlb	1	; () banked
 25511  003AB4  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25512                           
 25513                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 25514  003AB6  0E01               	movlw	1
 25515  003AB8  D011               	goto	L61
 25516  003ABA                     l1446:
 25517                           
 25518                           ;i2c_slv.c: 420: else
 25519                           ;i2c_slv.c: 421: {
 25520                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 25521                           
 25522                           ; BSR set to: 1
 25523  003ABA  0E4A               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25524  003ABC  0100               	movlb	0	; () banked
 25525  003ABE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25526  003AC0  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25527  003AC2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25528  003AC4  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 25529  003AC8  06E8               	decf	wreg,f,c
 25530  003ACA  A4D8               	btfss	status,2,c
 25531  003ACC  D005               	goto	l1448
 25532                           
 25533                           ;i2c_slv.c: 423: {
 25534                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 25535  003ACE  0E00               	movlw	0
 25536  003AD0  0101               	movlb	1	; () banked
 25537  003AD2  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25538                           
 25539                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 25540  003AD4  0E02               	movlw	2
 25541  003AD6  D002               	goto	L61
 25542  003AD8                     l1448:
 25543                           
 25544                           ;i2c_slv.c: 429: else
 25545                           ;i2c_slv.c: 430: {
 25546                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 25547                           
 25548                           ; BSR set to: 1
 25549  003AD8  0E00               	movlw	0
 25550  003ADA  0101               	movlb	1	; () banked
 25551  003ADC                     L61:
 25552  003ADC  6FE2               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 25553                           
 25554                           ; BSR set to: 1
 25555                           ;i2c_slv.c: 439: }
 25556                           
 25557                           ; BSR set to: 1
 25558                           ;i2c_slv.c: 438: break;
 25559                           
 25560                           ;i2c_slv.c: 437: default:
 25561                           
 25562                           ; BSR set to: 1
 25563                           ;i2c_slv.c: 433: }
 25564                           ;i2c_slv.c: 434: }
 25565                           ;i2c_slv.c: 435: break;
 25566                           
 25567                           ; BSR set to: 1
 25568  003ADE  D00B               	goto	l1442
 25569  003AE0                     l1440:
 25570                           
 25571                           ; BSR set to: 1
 25572  003AE0  0101               	movlb	1	; () banked
 25573  003AE2  51E3               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 25574                           
 25575                           ; Switch size 1, requested type "space"
 25576                           ; Number of cases is 3, Range of values is 0 to 2
 25577                           ; switch strategies available:
 25578                           ; Name         Instructions Cycles
 25579                           ; simple_byte           10     6 (average)
 25580                           ;	Chosen strategy is simple_byte
 25581  003AE4  0A00               	xorlw	0	; case 0
 25582  003AE6  B4D8               	btfsc	status,2,c
 25583  003AE8  D7A0               	goto	l1441
 25584  003AEA  0A01               	xorlw	1	; case 1
 25585  003AEC  B4D8               	btfsc	status,2,c
 25586  003AEE  D7AC               	goto	l1443
 25587  003AF0  0A03               	xorlw	3	; case 2
 25588  003AF2  B4D8               	btfsc	status,2,c
 25589  003AF4  D7D8               	goto	l1445
 25590  003AF6                     l1442:
 25591                           
 25592                           ; BSR set to: 1
 25593                           ;i2c_slv.c: 441: return Ret;
 25594                           
 25595                           ; BSR set to: 1
 25596  003AF6  51E2               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 25597  003AF8  0012               	return	
 25598  003AFA                     __end_of_I2cSlv_QueryI2cData:
 25599                           	opt stack 0
 25600                           tosu	equ	0xFFF
 25601                           tosh	equ	0xFFE
 25602                           tosl	equ	0xFFD
 25603                           pclath	equ	0xFFA
 25604                           tblptru	equ	0xFF8
 25605                           tblptrh	equ	0xFF7
 25606                           tblptrl	equ	0xFF6
 25607                           tablat	equ	0xFF5
 25608                           prodh	equ	0xFF4
 25609                           prodl	equ	0xFF3
 25610                           intcon	equ	0xFF2
 25611                           intcon2	equ	0xFF1
 25612                           intcon3	equ	0xFF0
 25613                           indf0	equ	0xFEF
 25614                           postinc0	equ	0xFEE
 25615                           plusw0	equ	0xFEB
 25616                           fsr0h	equ	0xFEA
 25617                           fsr0l	equ	0xFE9
 25618                           wreg	equ	0xFE8
 25619                           indf1	equ	0xFE7
 25620                           postinc1	equ	0xFE6
 25621                           postdec1	equ	0xFE5
 25622                           fsr1h	equ	0xFE2
 25623                           fsr1l	equ	0xFE1
 25624                           indf2	equ	0xFDF
 25625                           postinc2	equ	0xFDE
 25626                           postdec2	equ	0xFDD
 25627                           plusw2	equ	0xFDB
 25628                           fsr2h	equ	0xFDA
 25629                           fsr2l	equ	0xFD9
 25630                           status	equ	0xFD8
 25631                           
 25632 ;; *************** function _OsTmr_Wait *****************
 25633 ;; Defined at:
 25634 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 25635 ;; Parameters:    Size  Location     Type
 25636 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 25637 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 25638 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 25639 ;; Auto vars:     Size  Location     Type
 25640 ;;  Ret             1   65[BANK0 ] enum E7749
 25641 ;; Return value:  Size  Location     Type
 25642 ;;                  1    wreg      enum E7749
 25643 ;; Registers used:
 25644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25645 ;; Tracked objects:
 25646 ;;		On entry : 0/0
 25647 ;;		On exit  : 0/0
 25648 ;;		Unchanged: 0/0
 25649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25650 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25653 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25654 ;;Total ram usage:        7 bytes
 25655 ;; Hardware stack levels used:    1
 25656 ;; Hardware stack levels required when called:   14
 25657 ;; This function calls:
 25658 ;;		_OsTmr_GetTimerStatus
 25659 ;;		_OsTmr_StartTimer
 25660 ;; This function is called by:
 25661 ;;		_I2cSlv_QueryI2cData
 25662 ;;		_Terminal
 25663 ;; This function uses a non-reentrant model
 25664 ;;
 25665                           
 25666                           	psect	text120
 25667  005392                     __ptext120:
 25668                           	opt stack 0
 25669  005392                     _OsTmr_Wait:
 25670                           	opt stack 11
 25671                           
 25672                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 25673                           
 25674                           ; BSR set to: 1
 25675                           ;incstack = 0
 25676  005392  0E00               	movlw	0
 25677  005394  0100               	movlb	0	; () banked
 25678  005396  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25679                           
 25680                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 25681  005398  D02D               	goto	l855
 25682  00539A                     
 25683                           ; BSR set to: 0
 25684                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 25685                           
 25686                           ; BSR set to: 0
 25687  00539A  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 25688  00539E  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 25689  0053A2  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 25690  0053A6  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 25691  0053AA  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 25692  0053AE  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 25693  0053B2  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 25694                           
 25695                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 25696  0053B6  0100               	movlb	0	; () banked
 25697  0053B8  EE20 F00A          	lfsr	2,10
 25698  0053BC  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25699  0053BE  26D9               	addwf	fsr2l,f,c
 25700  0053C0  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25701  0053C2  22DA               	addwfc	fsr2h,f,c
 25702  0053C4  0E01               	movlw	1
 25703  0053C6  6EDF               	movwf	indf2,c
 25704                           
 25705                           ;os_timers.c: 165: break;
 25706  0053C8  D022               	goto	l857
 25707  0053CA                     
 25708                           ; BSR set to: 0
 25709                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 25710                           
 25711                           ; BSR set to: 0
 25712  0053CA  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 25713  0053CE  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 25714  0053D2  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 25715  0053D6  06E8               	decf	wreg,f,c
 25716  0053D8  A4D8               	btfss	status,2,c
 25717  0053DA  D019               	goto	l857
 25718                           
 25719                           ;os_timers.c: 170: {
 25720                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 25721  0053DC  0100               	movlb	0	; () banked
 25722  0053DE  EE20 F00A          	lfsr	2,10
 25723  0053E2  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25724  0053E4  26D9               	addwf	fsr2l,f,c
 25725  0053E6  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25726  0053E8  22DA               	addwfc	fsr2h,f,c
 25727  0053EA  0E00               	movlw	0
 25728  0053EC  6EDF               	movwf	indf2,c
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;os_timers.c: 174: Ret = DelayExpired;
 25732  0053EE  0E01               	movlw	1
 25733  0053F0  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25734                           
 25735                           ; BSR set to: 0
 25736                           ;os_timers.c: 180: }
 25737                           
 25738                           ; BSR set to: 0
 25739                           ;os_timers.c: 179: break;
 25740                           
 25741                           ;os_timers.c: 178: default:
 25742                           
 25743                           ; BSR set to: 0
 25744                           ;os_timers.c: 175: }
 25745                           ;os_timers.c: 176: break;
 25746  0053F2  D00D               	goto	l857
 25747  0053F4                     l855:
 25748                           
 25749                           ; BSR set to: 0
 25750                           
 25751                           ; BSR set to: 0
 25752  0053F4  EE20 F00A          	lfsr	2,10
 25753  0053F8  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25754  0053FA  26D9               	addwf	fsr2l,f,c
 25755  0053FC  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25756  0053FE  22DA               	addwfc	fsr2h,f,c
 25757  005400  50DF               	movf	indf2,w,c
 25758                           
 25759                           ; Switch size 1, requested type "space"
 25760                           ; Number of cases is 2, Range of values is 0 to 1
 25761                           ; switch strategies available:
 25762                           ; Name         Instructions Cycles
 25763                           ; simple_byte            7     4 (average)
 25764                           ;	Chosen strategy is simple_byte
 25765  005402  0A00               	xorlw	0	; case 0
 25766  005404  B4D8               	btfsc	status,2,c
 25767  005406  D7C9               	goto	l856
 25768  005408  0A01               	xorlw	1	; case 1
 25769  00540A  B4D8               	btfsc	status,2,c
 25770  00540C  D7DE               	goto	l858
 25771  00540E                     l857:
 25772                           
 25773                           ;os_timers.c: 182: return Ret;
 25774                           
 25775                           ; BSR set to: 0
 25776  00540E  0100               	movlb	0	; () banked
 25777  005410  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 25778  005412  0012               	return	
 25779  005414                     __end_of_OsTmr_Wait:
 25780                           	opt stack 0
 25781                           tosu	equ	0xFFF
 25782                           tosh	equ	0xFFE
 25783                           tosl	equ	0xFFD
 25784                           pclath	equ	0xFFA
 25785                           tblptru	equ	0xFF8
 25786                           tblptrh	equ	0xFF7
 25787                           tblptrl	equ	0xFF6
 25788                           tablat	equ	0xFF5
 25789                           prodh	equ	0xFF4
 25790                           prodl	equ	0xFF3
 25791                           intcon	equ	0xFF2
 25792                           intcon2	equ	0xFF1
 25793                           intcon3	equ	0xFF0
 25794                           indf0	equ	0xFEF
 25795                           postinc0	equ	0xFEE
 25796                           plusw0	equ	0xFEB
 25797                           fsr0h	equ	0xFEA
 25798                           fsr0l	equ	0xFE9
 25799                           wreg	equ	0xFE8
 25800                           indf1	equ	0xFE7
 25801                           postinc1	equ	0xFE6
 25802                           postdec1	equ	0xFE5
 25803                           fsr1h	equ	0xFE2
 25804                           fsr1l	equ	0xFE1
 25805                           indf2	equ	0xFDF
 25806                           postinc2	equ	0xFDE
 25807                           postdec2	equ	0xFDD
 25808                           plusw2	equ	0xFDB
 25809                           fsr2h	equ	0xFDA
 25810                           fsr2l	equ	0xFD9
 25811                           status	equ	0xFD8
 25812                           
 25813 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 25814 ;; Defined at:
 25815 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25816 ;; Parameters:    Size  Location     Type
 25817 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 25818 ;;		 -> readBuffer(13), memoryPreamble(4), Terminal@TermRxBuffer(50), 
 25819 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 25820 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 25821 ;; Auto vars:     Size  Location     Type
 25822 ;;  RxSts           1   36[BANK0 ] unsigned char 
 25823 ;; Return value:  Size  Location     Type
 25824 ;;                  1    wreg      unsigned char 
 25825 ;; Registers used:
 25826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25827 ;; Tracked objects:
 25828 ;;		On entry : 0/0
 25829 ;;		On exit  : 0/0
 25830 ;;		Unchanged: 0/0
 25831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25836 ;;Total ram usage:        5 bytes
 25837 ;; Hardware stack levels used:    1
 25838 ;; Hardware stack levels required when called:   12
 25839 ;; This function calls:
 25840 ;;		_GenerateEvt
 25841 ;; This function is called by:
 25842 ;;		_I2cSlv_QueryI2cData
 25843 ;;		_Terminal
 25844 ;; This function uses a non-reentrant model
 25845 ;;
 25846                           
 25847                           	psect	text121
 25848  006214                     __ptext121:
 25849                           	opt stack 0
 25850  006214                     _I2cSlv_ReceiveI2cMsg:
 25851                           	opt stack 13
 25852                           
 25853                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 25854                           
 25855                           ; BSR set to: 0
 25856                           ;incstack = 0
 25857  006214  0E00               	movlw	0
 25858  006216  0100               	movlb	0	; () banked
 25859  006218  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25860                           
 25861                           ; BSR set to: 0
 25862                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 25863  00621A  0E02               	movlw	2
 25864  00621C  19CF               	xorwf	_I2cComSts& (0+255),w,b
 25865  00621E  B4D8               	btfsc	status,2,c
 25866  006220  D016               	goto	l1417
 25867                           
 25868                           ; BSR set to: 0
 25869                           ;i2c_slv.c: 294: {
 25870                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 25871  006222  C082  F39B         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 25872                           
 25873                           ; BSR set to: 0
 25874                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 25875  006226  0E01               	movlw	1
 25876  006228  0103               	movlb	3	; () banked
 25877  00622A  6F9C               	movwf	(_I2cRxPacket+1)& (0+255),b
 25878                           
 25879                           ; BSR set to: 3
 25880                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 25881  00622C  C083  F39F         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 25882                           
 25883                           ; BSR set to: 3
 25884                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 25885  006230  C080  F39D         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 25886  006234  C081  F39E         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 25887                           
 25888                           ; BSR set to: 3
 25889                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 25890  006238  0E39               	movlw	low _I2cReadDataEvt
 25891  00623A  0100               	movlb	0	; () banked
 25892  00623C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25893  00623E  0E00               	movlw	high _I2cReadDataEvt
 25894  006240  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25895  006242  EC21  F035         	call	_GenerateEvt	;wreg free
 25896                           
 25897                           ;i2c_slv.c: 304: RxSts = 1u;
 25898  006246  0E01               	movlw	1
 25899  006248  0100               	movlb	0	; () banked
 25900  00624A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25901                           
 25902                           ;i2c_slv.c: 305: }
 25903  00624C  0012               	return	
 25904  00624E                     l1417:
 25905                           
 25906                           ; BSR set to: 0
 25907                           ;i2c_slv.c: 306: else
 25908                           ;i2c_slv.c: 307: {
 25909                           ;i2c_slv.c: 309: RxSts = 0u;
 25910                           
 25911                           ; BSR set to: 0
 25912  00624E  0E00               	movlw	0
 25913  006250  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25914                           
 25915                           ; BSR set to: 0
 25916  006252  0012               	return	
 25917  006254                     __end_of_I2cSlv_ReceiveI2cMsg:
 25918                           	opt stack 0
 25919                           tosu	equ	0xFFF
 25920                           tosh	equ	0xFFE
 25921                           tosl	equ	0xFFD
 25922                           pclath	equ	0xFFA
 25923                           tblptru	equ	0xFF8
 25924                           tblptrh	equ	0xFF7
 25925                           tblptrl	equ	0xFF6
 25926                           tablat	equ	0xFF5
 25927                           prodh	equ	0xFF4
 25928                           prodl	equ	0xFF3
 25929                           intcon	equ	0xFF2
 25930                           intcon2	equ	0xFF1
 25931                           intcon3	equ	0xFF0
 25932                           indf0	equ	0xFEF
 25933                           postinc0	equ	0xFEE
 25934                           plusw0	equ	0xFEB
 25935                           fsr0h	equ	0xFEA
 25936                           fsr0l	equ	0xFE9
 25937                           wreg	equ	0xFE8
 25938                           indf1	equ	0xFE7
 25939                           postinc1	equ	0xFE6
 25940                           postdec1	equ	0xFE5
 25941                           fsr1h	equ	0xFE2
 25942                           fsr1l	equ	0xFE1
 25943                           indf2	equ	0xFDF
 25944                           postinc2	equ	0xFDE
 25945                           postdec2	equ	0xFDD
 25946                           plusw2	equ	0xFDB
 25947                           fsr2h	equ	0xFDA
 25948                           fsr2l	equ	0xFD9
 25949                           status	equ	0xFD8
 25950                           
 25951 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 25952 ;; Defined at:
 25953 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25954 ;; Parameters:    Size  Location     Type
 25955 ;;		None
 25956 ;; Auto vars:     Size  Location     Type
 25957 ;;  Result          1   33[BANK0 ] enum E8935
 25958 ;; Return value:  Size  Location     Type
 25959 ;;                  1    wreg      enum E8935
 25960 ;; Registers used:
 25961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25962 ;; Tracked objects:
 25963 ;;		On entry : 0/0
 25964 ;;		On exit  : 0/0
 25965 ;;		Unchanged: 0/0
 25966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25968 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25971 ;;Total ram usage:        1 bytes
 25972 ;; Hardware stack levels used:    1
 25973 ;; Hardware stack levels required when called:   12
 25974 ;; This function calls:
 25975 ;;		_ReceiveEvt
 25976 ;; This function is called by:
 25977 ;;		_I2cSlv_QueryI2cData
 25978 ;;		_Terminal
 25979 ;; This function uses a non-reentrant model
 25980 ;;
 25981                           
 25982                           	psect	text122
 25983  006896                     __ptext122:
 25984                           	opt stack 0
 25985  006896                     _I2cSlv_I2cReadMsgSts:
 25986                           	opt stack 13
 25987                           
 25988                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 25989                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 25990                           
 25991                           ; BSR set to: 0
 25992                           ;incstack = 0
 25993  006896  0EA0               	movlw	low (_I2cRxPacket+5)
 25994  006898  0100               	movlb	0	; () banked
 25995  00689A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25996  00689C  0E03               	movlw	high (_I2cRxPacket+5)
 25997  00689E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25998  0068A0  EC30  F033         	call	_ReceiveEvt	;wreg free
 25999  0068A4  0900               	iorlw	0
 26000  0068A6  B4D8               	btfsc	status,2,c
 26001  0068A8  D002               	goto	l1422
 26002                           
 26003                           ;i2c_slv.c: 331: {
 26004                           ;i2c_slv.c: 332: Result = MessageReceived;
 26005  0068AA  0E01               	movlw	1
 26006  0068AC  D001               	goto	L62
 26007  0068AE                     l1422:
 26008                           
 26009                           ;i2c_slv.c: 334: else
 26010                           ;i2c_slv.c: 335: {
 26011                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 26012                           
 26013                           ; BSR set to: 0
 26014  0068AE  0E00               	movlw	0
 26015  0068B0                     L62:
 26016  0068B0  0100               	movlb	0	; () banked
 26017  0068B2  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 26018                           
 26019                           ; BSR set to: 0
 26020                           ;i2c_slv.c: 337: }
 26021                           ;i2c_slv.c: 339: return Result;
 26022  0068B4  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 26023  0068B6  0012               	return	
 26024  0068B8                     __end_of_I2cSlv_I2cReadMsgSts:
 26025                           	opt stack 0
 26026                           tosu	equ	0xFFF
 26027                           tosh	equ	0xFFE
 26028                           tosl	equ	0xFFD
 26029                           pclath	equ	0xFFA
 26030                           tblptru	equ	0xFF8
 26031                           tblptrh	equ	0xFF7
 26032                           tblptrl	equ	0xFF6
 26033                           tablat	equ	0xFF5
 26034                           prodh	equ	0xFF4
 26035                           prodl	equ	0xFF3
 26036                           intcon	equ	0xFF2
 26037                           intcon2	equ	0xFF1
 26038                           intcon3	equ	0xFF0
 26039                           indf0	equ	0xFEF
 26040                           postinc0	equ	0xFEE
 26041                           plusw0	equ	0xFEB
 26042                           fsr0h	equ	0xFEA
 26043                           fsr0l	equ	0xFE9
 26044                           wreg	equ	0xFE8
 26045                           indf1	equ	0xFE7
 26046                           postinc1	equ	0xFE6
 26047                           postdec1	equ	0xFE5
 26048                           fsr1h	equ	0xFE2
 26049                           fsr1l	equ	0xFE1
 26050                           indf2	equ	0xFDF
 26051                           postinc2	equ	0xFDE
 26052                           postdec2	equ	0xFDD
 26053                           plusw2	equ	0xFDB
 26054                           fsr2h	equ	0xFDA
 26055                           fsr2l	equ	0xFD9
 26056                           status	equ	0xFD8
 26057                           
 26058 ;; *************** function _Led_SetLedBlinkTime *****************
 26059 ;; Defined at:
 26060 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 26061 ;; Parameters:    Size  Location     Type
 26062 ;;  Led             1    wreg     unsigned char 
 26063 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 26064 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 26065 ;; Auto vars:     Size  Location     Type
 26066 ;;  Led             1   33[BANK0 ] unsigned char 
 26067 ;; Return value:  Size  Location     Type
 26068 ;;                  1    wreg      void 
 26069 ;; Registers used:
 26070 ;;		wreg, status,2, status,0
 26071 ;; Tracked objects:
 26072 ;;		On entry : 0/0
 26073 ;;		On exit  : 0/0
 26074 ;;		Unchanged: 0/0
 26075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26079 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26080 ;;Total ram usage:        5 bytes
 26081 ;; Hardware stack levels used:    1
 26082 ;; Hardware stack levels required when called:   11
 26083 ;; This function calls:
 26084 ;;		Nothing
 26085 ;; This function is called by:
 26086 ;;		_MyApp_Task
 26087 ;; This function uses a non-reentrant model
 26088 ;;
 26089                           
 26090                           	psect	text123
 26091  005C74                     __ptext123:
 26092                           	opt stack 0
 26093  005C74                     _Led_SetLedBlinkTime:
 26094                           	opt stack 16
 26095                           
 26096                           ; BSR set to: 0
 26097                           ;incstack = 0
 26098                           ;Led_SetLedBlinkTime@Led stored from wreg
 26099  005C74  0100               	movlb	0	; () banked
 26100  005C76  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 26101                           
 26102                           ;led.c: 374: switch (Led)
 26103  005C78  D01B               	goto	l2151
 26104  005C7A                     l2152:
 26105                           
 26106                           ; BSR set to: 0
 26107                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 26108  005C7A  C07D  F375         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 26109  005C7E  C07E  F376         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 26110                           
 26111                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 26112  005C82  C07F  F377         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 26113  005C86  C080  F378         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 26114                           
 26115                           ;led.c: 379: break;
 26116  005C8A  0012               	return	
 26117  005C8C                     l2154:
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 26121  005C8C  C07D  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 26122  005C90  C07E  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 26123                           
 26124                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 26125  005C94  C07F  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 26126  005C98  C080  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 26127                           
 26128                           ;led.c: 384: break;
 26129  005C9C  0012               	return	
 26130  005C9E                     l2155:
 26131                           
 26132                           ; BSR set to: 0
 26133                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 26134  005C9E  C07D  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 26135  005CA2  C07E  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 26136                           
 26137                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 26138  005CA6  C07F  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 26139  005CAA  C080  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 26140                           
 26141                           ; BSR set to: 0
 26142                           ;led.c: 393: }
 26143                           
 26144                           ; BSR set to: 0
 26145                           ;led.c: 392: break;
 26146                           
 26147                           ;led.c: 391: default:
 26148                           
 26149                           ;led.c: 389: break;
 26150  005CAE  0012               	return	
 26151  005CB0                     l2151:
 26152                           
 26153                           ; BSR set to: 0
 26154  005CB0  0100               	movlb	0	; () banked
 26155  005CB2  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 26156                           
 26157                           ; Switch size 1, requested type "space"
 26158                           ; Number of cases is 3, Range of values is 1 to 3
 26159                           ; switch strategies available:
 26160                           ; Name         Instructions Cycles
 26161                           ; simple_byte           10     6 (average)
 26162                           ;	Chosen strategy is simple_byte
 26163  005CB4  0A01               	xorlw	1	; case 1
 26164  005CB6  B4D8               	btfsc	status,2,c
 26165  005CB8  D7E0               	goto	l2152
 26166  005CBA  0A03               	xorlw	3	; case 2
 26167  005CBC  B4D8               	btfsc	status,2,c
 26168  005CBE  D7E6               	goto	l2154
 26169  005CC0  0A01               	xorlw	1	; case 3
 26170  005CC2  A4D8               	btfss	status,2,c
 26171  005CC4  0012               	return	
 26172  005CC6  D7EB               	goto	l2155
 26173  005CC8                     __end_of_Led_SetLedBlinkTime:
 26174                           	opt stack 0
 26175                           tosu	equ	0xFFF
 26176                           tosh	equ	0xFFE
 26177                           tosl	equ	0xFFD
 26178                           pclath	equ	0xFFA
 26179                           tblptru	equ	0xFF8
 26180                           tblptrh	equ	0xFF7
 26181                           tblptrl	equ	0xFF6
 26182                           tablat	equ	0xFF5
 26183                           prodh	equ	0xFF4
 26184                           prodl	equ	0xFF3
 26185                           intcon	equ	0xFF2
 26186                           intcon2	equ	0xFF1
 26187                           intcon3	equ	0xFF0
 26188                           indf0	equ	0xFEF
 26189                           postinc0	equ	0xFEE
 26190                           plusw0	equ	0xFEB
 26191                           fsr0h	equ	0xFEA
 26192                           fsr0l	equ	0xFE9
 26193                           wreg	equ	0xFE8
 26194                           indf1	equ	0xFE7
 26195                           postinc1	equ	0xFE6
 26196                           postdec1	equ	0xFE5
 26197                           fsr1h	equ	0xFE2
 26198                           fsr1l	equ	0xFE1
 26199                           indf2	equ	0xFDF
 26200                           postinc2	equ	0xFDE
 26201                           postdec2	equ	0xFDD
 26202                           plusw2	equ	0xFDB
 26203                           fsr2h	equ	0xFDA
 26204                           fsr2l	equ	0xFD9
 26205                           status	equ	0xFD8
 26206                           
 26207 ;; *************** function _Eeprom_Reset *****************
 26208 ;; Defined at:
 26209 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 26210 ;; Parameters:    Size  Location     Type
 26211 ;;		None
 26212 ;; Auto vars:     Size  Location     Type
 26213 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 26214 ;; Return value:  Size  Location     Type
 26215 ;;                  1    wreg      unsigned char 
 26216 ;; Registers used:
 26217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26218 ;; Tracked objects:
 26219 ;;		On entry : 0/0
 26220 ;;		On exit  : 0/0
 26221 ;;		Unchanged: 0/0
 26222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26226 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26227 ;;Total ram usage:        1 bytes
 26228 ;; Hardware stack levels used:    1
 26229 ;; Hardware stack levels required when called:   13
 26230 ;; This function calls:
 26231 ;;		_ClearBuffer
 26232 ;;		_I2cSlv_SendI2cMsg
 26233 ;; This function is called by:
 26234 ;;		_MyApp_Task
 26235 ;; This function uses a non-reentrant model
 26236 ;;
 26237                           
 26238                           	psect	text124
 26239  005B22                     __ptext124:
 26240                           	opt stack 0
 26241  005B22                     _Eeprom_Reset:
 26242                           	opt stack 14
 26243                           
 26244                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 26245                           
 26246                           ; BSR set to: 0
 26247                           ;incstack = 0
 26248  005B22  0E50               	movlw	80
 26249  005B24  0100               	movlb	0	; () banked
 26250  005B26  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 26251                           
 26252                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 26253                           ;eeprom_if.c: 136: if (memoryAddress == 0)
 26254  005B28  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26255  005B2A  A4D8               	btfss	status,2,c
 26256  005B2C  D00A               	goto	l2045
 26257                           
 26258                           ; BSR set to: 0
 26259                           ;eeprom_if.c: 137: {
 26260                           ;eeprom_if.c: 138: ClearBuffer(EepromBuffer, 15);
 26261  005B2E  0EB3               	movlw	low _EepromBuffer
 26262  005B30  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26263  005B32  0E04               	movlw	high _EepromBuffer
 26264  005B34  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26265  005B36  0E00               	movlw	0
 26266  005B38  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26267  005B3A  0E0F               	movlw	15
 26268  005B3C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26269  005B3E  EC52  F032         	call	_ClearBuffer	;wreg free
 26270  005B42                     l2045:
 26271                           
 26272                           ;eeprom_if.c: 139: }
 26273                           ;eeprom_if.c: 141: EepromBuffer[0] = memoryAddress;
 26274  005B42  C0C6  F4B3         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 26275                           
 26276                           ;eeprom_if.c: 142: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 26277  005B46  0EB3               	movlw	low _EepromBuffer
 26278  005B48  0100               	movlb	0	; () banked
 26279  005B4A  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 26280  005B4C  0E04               	movlw	high _EepromBuffer
 26281  005B4E  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 26282  005B50  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 26283  005B54  0E0F               	movlw	15
 26284  005B56  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 26285  005B58  EC69  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 26286                           
 26287                           ;eeprom_if.c: 144: memoryAddress += 16;
 26288  005B5C  0E10               	movlw	16
 26289  005B5E  0100               	movlb	0	; () banked
 26290  005B60  27C6               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 26291                           
 26292                           ; BSR set to: 0
 26293                           ;eeprom_if.c: 145: if (memoryAddress >= 224)
 26294  005B62  0EDF               	movlw	223
 26295  005B64  65C6               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 26296  005B66  D006               	goto	l2046
 26297                           
 26298                           ; BSR set to: 0
 26299                           ;eeprom_if.c: 146: {
 26300                           ;eeprom_if.c: 147: EepromBuffer[0] = 0;
 26301  005B68  0E00               	movlw	0
 26302  005B6A  0104               	movlb	4	; () banked
 26303  005B6C  6FB3               	movwf	_EepromBuffer& (0+255),b
 26304                           
 26305                           ;eeprom_if.c: 148: memoryAddress = 0;
 26306  005B6E  0E00               	movlw	0
 26307  005B70  0100               	movlb	0	; () banked
 26308  005B72  6FC6               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 26309  005B74                     l2046:
 26310                           
 26311                           ; BSR set to: 0
 26312                           ;eeprom_if.c: 149: }
 26313                           ;eeprom_if.c: 150: return memoryAddress;
 26314  005B74  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26315  005B76  0012               	return	
 26316  005B78                     __end_of_Eeprom_Reset:
 26317                           	opt stack 0
 26318                           tosu	equ	0xFFF
 26319                           tosh	equ	0xFFE
 26320                           tosl	equ	0xFFD
 26321                           pclath	equ	0xFFA
 26322                           tblptru	equ	0xFF8
 26323                           tblptrh	equ	0xFF7
 26324                           tblptrl	equ	0xFF6
 26325                           tablat	equ	0xFF5
 26326                           prodh	equ	0xFF4
 26327                           prodl	equ	0xFF3
 26328                           intcon	equ	0xFF2
 26329                           intcon2	equ	0xFF1
 26330                           intcon3	equ	0xFF0
 26331                           indf0	equ	0xFEF
 26332                           postinc0	equ	0xFEE
 26333                           plusw0	equ	0xFEB
 26334                           fsr0h	equ	0xFEA
 26335                           fsr0l	equ	0xFE9
 26336                           wreg	equ	0xFE8
 26337                           indf1	equ	0xFE7
 26338                           postinc1	equ	0xFE6
 26339                           postdec1	equ	0xFE5
 26340                           fsr1h	equ	0xFE2
 26341                           fsr1l	equ	0xFE1
 26342                           indf2	equ	0xFDF
 26343                           postinc2	equ	0xFDE
 26344                           postdec2	equ	0xFDD
 26345                           plusw2	equ	0xFDB
 26346                           fsr2h	equ	0xFDA
 26347                           fsr2l	equ	0xFD9
 26348                           status	equ	0xFD8
 26349                           
 26350 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26351 ;; Defined at:
 26352 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26353 ;; Parameters:    Size  Location     Type
 26354 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26355 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26356 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26357 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26358 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26359 ;; Auto vars:     Size  Location     Type
 26360 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26361 ;; Return value:  Size  Location     Type
 26362 ;;                  1    wreg      unsigned char 
 26363 ;; Registers used:
 26364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26365 ;; Tracked objects:
 26366 ;;		On entry : 0/0
 26367 ;;		On exit  : 0/0
 26368 ;;		Unchanged: 0/0
 26369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26370 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26374 ;;Total ram usage:        5 bytes
 26375 ;; Hardware stack levels used:    1
 26376 ;; Hardware stack levels required when called:   12
 26377 ;; This function calls:
 26378 ;;		_GenerateEvt
 26379 ;; This function is called by:
 26380 ;;		_I2cSlv_QueryI2cData
 26381 ;;		_Eeprom_Write
 26382 ;;		_Eeprom_Reset
 26383 ;;		_Terminal
 26384 ;;		_triggerRelay
 26385 ;; This function uses a non-reentrant model
 26386 ;;
 26387                           
 26388                           	psect	text125
 26389  0062D2                     __ptext125:
 26390                           	opt stack 0
 26391  0062D2                     _I2cSlv_SendI2cMsg:
 26392                           	opt stack 13
 26393                           
 26394                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26395                           
 26396                           ; BSR set to: 0
 26397                           ;incstack = 0
 26398  0062D2  0E00               	movlw	0
 26399  0062D4  0100               	movlb	0	; () banked
 26400  0062D6  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26401                           
 26402                           ; BSR set to: 0
 26403                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26404  0062D8  05CF               	decf	_I2cComSts& (0+255),w,b
 26405  0062DA  B4D8               	btfsc	status,2,c
 26406  0062DC  D015               	goto	l1412
 26407                           
 26408                           ; BSR set to: 0
 26409                           ;i2c_slv.c: 257: {
 26410                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26411  0062DE  C082  F3A1         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26412                           
 26413                           ; BSR set to: 0
 26414                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26415  0062E2  0E00               	movlw	0
 26416  0062E4  0103               	movlb	3	; () banked
 26417  0062E6  6FA2               	movwf	(_I2cTxPacket+1)& (0+255),b
 26418                           
 26419                           ; BSR set to: 3
 26420                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26421  0062E8  C083  F3A5         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26422                           
 26423                           ; BSR set to: 3
 26424                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26425  0062EC  C080  F3A3         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26426  0062F0  C081  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26427                           
 26428                           ; BSR set to: 3
 26429                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26430  0062F4  0ED7               	movlw	low _I2cWriteDataEvt
 26431  0062F6  0100               	movlb	0	; () banked
 26432  0062F8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26433  0062FA  0E00               	movlw	high _I2cWriteDataEvt
 26434  0062FC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26435  0062FE  EC21  F035         	call	_GenerateEvt	;wreg free
 26436                           
 26437                           ;i2c_slv.c: 267: TxSts = 1u;
 26438  006302  0E01               	movlw	1
 26439  006304  0100               	movlb	0	; () banked
 26440  006306  D001               	goto	L63
 26441  006308                     l1412:
 26442                           
 26443                           ; BSR set to: 0
 26444                           ;i2c_slv.c: 269: else
 26445                           ;i2c_slv.c: 270: {
 26446                           ;i2c_slv.c: 272: TxSts = 0u;
 26447                           
 26448                           ; BSR set to: 0
 26449  006308  0E00               	movlw	0
 26450  00630A                     L63:
 26451  00630A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26452                           
 26453                           ; BSR set to: 0
 26454                           ;i2c_slv.c: 273: }
 26455                           ;i2c_slv.c: 275: return TxSts;
 26456  00630C  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26457  00630E  0012               	return	
 26458  006310                     __end_of_I2cSlv_SendI2cMsg:
 26459                           	opt stack 0
 26460                           tosu	equ	0xFFF
 26461                           tosh	equ	0xFFE
 26462                           tosl	equ	0xFFD
 26463                           pclath	equ	0xFFA
 26464                           tblptru	equ	0xFF8
 26465                           tblptrh	equ	0xFF7
 26466                           tblptrl	equ	0xFF6
 26467                           tablat	equ	0xFF5
 26468                           prodh	equ	0xFF4
 26469                           prodl	equ	0xFF3
 26470                           intcon	equ	0xFF2
 26471                           intcon2	equ	0xFF1
 26472                           intcon3	equ	0xFF0
 26473                           indf0	equ	0xFEF
 26474                           postinc0	equ	0xFEE
 26475                           plusw0	equ	0xFEB
 26476                           fsr0h	equ	0xFEA
 26477                           fsr0l	equ	0xFE9
 26478                           wreg	equ	0xFE8
 26479                           indf1	equ	0xFE7
 26480                           postinc1	equ	0xFE6
 26481                           postdec1	equ	0xFE5
 26482                           fsr1h	equ	0xFE2
 26483                           fsr1l	equ	0xFE1
 26484                           indf2	equ	0xFDF
 26485                           postinc2	equ	0xFDE
 26486                           postdec2	equ	0xFDD
 26487                           plusw2	equ	0xFDB
 26488                           fsr2h	equ	0xFDA
 26489                           fsr2l	equ	0xFD9
 26490                           status	equ	0xFD8
 26491                           
 26492 ;; *************** function _UartSetConfig *****************
 26493 ;; Defined at:
 26494 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26495 ;; Parameters:    Size  Location     Type
 26496 ;;		None
 26497 ;; Auto vars:     Size  Location     Type
 26498 ;;		None
 26499 ;; Return value:  Size  Location     Type
 26500 ;;                  1    wreg      void 
 26501 ;; Registers used:
 26502 ;;		wreg, status,2
 26503 ;; Tracked objects:
 26504 ;;		On entry : 0/0
 26505 ;;		On exit  : 0/0
 26506 ;;		Unchanged: 0/0
 26507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26512 ;;Total ram usage:        0 bytes
 26513 ;; Hardware stack levels used:    1
 26514 ;; Hardware stack levels required when called:   11
 26515 ;; This function calls:
 26516 ;;		Nothing
 26517 ;; This function is called by:
 26518 ;;		_Mdm_MainTask
 26519 ;; This function uses a non-reentrant model
 26520 ;;
 26521                           
 26522                           	psect	text126
 26523  0059C2                     __ptext126:
 26524                           	opt stack 0
 26525  0059C2                     _UartSetConfig:
 26526                           	opt stack 16
 26527                           
 26528                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 26529                           
 26530                           ; BSR set to: 0
 26531                           ;incstack = 0
 26532  0059C2  0E01               	movlw	1
 26533  0059C4  0103               	movlb	3	; () banked
 26534  0059C6  6F28               	movwf	_UartConfig& (0+255),b
 26535                           
 26536                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 26537  0059C8  0E00               	movlw	0
 26538  0059CA  6F29               	movwf	(_UartConfig+1)& (0+255),b
 26539                           
 26540                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 26541  0059CC  0E00               	movlw	0
 26542  0059CE  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 26543                           
 26544                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 26545  0059D0  0E00               	movlw	0
 26546  0059D2  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 26547                           
 26548                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 26549  0059D4  0E00               	movlw	0
 26550  0059D6  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 26551                           
 26552                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 26553  0059D8  0E00               	movlw	0
 26554  0059DA  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 26555                           
 26556                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 26557  0059DC  0E01               	movlw	1
 26558  0059DE  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 26559                           
 26560                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 26561  0059E0  0E01               	movlw	1
 26562  0059E2  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 26563                           
 26564                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 26565  0059E4  0E00               	movlw	0
 26566  0059E6  6F30               	movwf	(_UartConfig+8)& (0+255),b
 26567                           
 26568                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 26569  0059E8  0E00               	movlw	0
 26570  0059EA  6F31               	movwf	(_UartConfig+9)& (0+255),b
 26571                           
 26572                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 26573  0059EC  0E00               	movlw	0
 26574  0059EE  6F32               	movwf	(_UartConfig+10)& (0+255),b
 26575                           
 26576                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26577  0059F0  0E00               	movlw	0
 26578  0059F2  6F33               	movwf	(_UartConfig+11)& (0+255),b
 26579                           
 26580                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26581  0059F4  0E01               	movlw	1
 26582  0059F6  6F34               	movwf	(_UartConfig+12)& (0+255),b
 26583                           
 26584                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 26585  0059F8  0E00               	movlw	0
 26586  0059FA  6F35               	movwf	(_UartConfig+13)& (0+255),b
 26587  0059FC  0E6C               	movlw	108
 26588  0059FE  6F36               	movwf	(_UartConfig+14)& (0+255),b
 26589  005A00  0EDC               	movlw	220
 26590  005A02  6F37               	movwf	(_UartConfig+15)& (0+255),b
 26591  005A04  0E02               	movlw	2
 26592  005A06  6F38               	movwf	(_UartConfig+16)& (0+255),b
 26593                           
 26594                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26595  005A08  0E80               	movlw	128
 26596  005A0A  6F39               	movwf	(_UartConfig+17)& (0+255),b
 26597  005A0C  0E25               	movlw	37
 26598  005A0E  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 26599  005A10  0E00               	movlw	0
 26600  005A12  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 26601  005A14  0E00               	movlw	0
 26602  005A16  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 26603                           
 26604                           ; BSR set to: 3
 26605  005A18  0012               	return		;funcret
 26606  005A1A                     __end_of_UartSetConfig:
 26607                           	opt stack 0
 26608                           tosu	equ	0xFFF
 26609                           tosh	equ	0xFFE
 26610                           tosl	equ	0xFFD
 26611                           pclath	equ	0xFFA
 26612                           tblptru	equ	0xFF8
 26613                           tblptrh	equ	0xFF7
 26614                           tblptrl	equ	0xFF6
 26615                           tablat	equ	0xFF5
 26616                           prodh	equ	0xFF4
 26617                           prodl	equ	0xFF3
 26618                           intcon	equ	0xFF2
 26619                           intcon2	equ	0xFF1
 26620                           intcon3	equ	0xFF0
 26621                           indf0	equ	0xFEF
 26622                           postinc0	equ	0xFEE
 26623                           plusw0	equ	0xFEB
 26624                           fsr0h	equ	0xFEA
 26625                           fsr0l	equ	0xFE9
 26626                           wreg	equ	0xFE8
 26627                           indf1	equ	0xFE7
 26628                           postinc1	equ	0xFE6
 26629                           postdec1	equ	0xFE5
 26630                           fsr1h	equ	0xFE2
 26631                           fsr1l	equ	0xFE1
 26632                           indf2	equ	0xFDF
 26633                           postinc2	equ	0xFDE
 26634                           postdec2	equ	0xFDD
 26635                           plusw2	equ	0xFDB
 26636                           fsr2h	equ	0xFDA
 26637                           fsr2l	equ	0xFD9
 26638                           status	equ	0xFD8
 26639                           
 26640 ;; *************** function _TurnOnModem *****************
 26641 ;; Defined at:
 26642 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26643 ;; Parameters:    Size  Location     Type
 26644 ;;		None
 26645 ;; Auto vars:     Size  Location     Type
 26646 ;;		None
 26647 ;; Return value:  Size  Location     Type
 26648 ;;                  1    wreg      void 
 26649 ;; Registers used:
 26650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26651 ;; Tracked objects:
 26652 ;;		On entry : 0/0
 26653 ;;		On exit  : 0/0
 26654 ;;		Unchanged: 0/0
 26655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26660 ;;Total ram usage:        0 bytes
 26661 ;; Hardware stack levels used:    1
 26662 ;; Hardware stack levels required when called:   12
 26663 ;; This function calls:
 26664 ;;		_GenerateEvt
 26665 ;; This function is called by:
 26666 ;;		_Mdm_MainTask
 26667 ;; This function uses a non-reentrant model
 26668 ;;
 26669                           
 26670                           	psect	text127
 26671  005FE6                     __ptext127:
 26672                           	opt stack 0
 26673  005FE6                     _TurnOnModem:
 26674                           	opt stack 15
 26675                           
 26676                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 26677                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 26678                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 26679                           
 26680                           ; BSR set to: 3
 26681                           ;incstack = 0
 26682  005FE6  D01B               	goto	l1009
 26683  005FE8                     
 26684                           ;mdm_gsm_gprs.c: 385: Counter++;
 26685  005FE8  0102               	movlb	2	; () banked
 26686  005FEA  4BD8               	infsnz	TurnOnModem@Counter& (0+255),f,b
 26687  005FEC  2BD9               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 26688                           
 26689                           ; BSR set to: 2
 26690                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 26691  005FEE  0EB8               	movlw	184
 26692  005FF0  5DD8               	subwf	TurnOnModem@Counter& (0+255),w,b
 26693  005FF2  0E0B               	movlw	11
 26694  005FF4  59D9               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 26695  005FF6  A0D8               	btfss	status,0,c
 26696  005FF8  0012               	return	
 26697                           
 26698                           ; BSR set to: 2
 26699                           ;mdm_gsm_gprs.c: 388: {
 26700                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 26701  005FFA  0E01               	movlw	1
 26702  005FFC  0101               	movlb	1	; () banked
 26703  005FFE  6FF2               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26704                           
 26705                           ; BSR set to: 1
 26706                           ;mdm_gsm_gprs.c: 391: }
 26707                           ;mdm_gsm_gprs.c: 392: break;
 26708  006000  0012               	return	
 26709  006002                     
 26710                           ; BSR set to: 1
 26711                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 26712                           
 26713                           ; BSR set to: 1
 26714  006002  0EE0               	movlw	low _MdmOnOffPulseRequest
 26715  006004  0100               	movlb	0	; () banked
 26716  006006  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26717  006008  0E00               	movlw	high _MdmOnOffPulseRequest
 26718  00600A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26719  00600C  EC21  F035         	call	_GenerateEvt	;wreg free
 26720                           
 26721                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 26722  006010  0E01               	movlw	1
 26723  006012  0100               	movlb	0	; () banked
 26724  006014  6FD1               	movwf	_MdmStatus& (0+255),b
 26725                           
 26726                           ; BSR set to: 0
 26727                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 26728  006016  0E02               	movlw	2
 26729  006018  0101               	movlb	1	; () banked
 26730  00601A  6FF2               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26731                           
 26732                           ; BSR set to: 1
 26733                           ;mdm_gsm_gprs.c: 408: }
 26734                           
 26735                           ; BSR set to: 1
 26736                           ;mdm_gsm_gprs.c: 407: break;
 26737                           
 26738                           ;mdm_gsm_gprs.c: 406: default:
 26739                           
 26740                           ; BSR set to: 1
 26741                           ;mdm_gsm_gprs.c: 404: break;
 26742                           
 26743                           ;mdm_gsm_gprs.c: 403: case Stop:
 26744                           
 26745                           ;mdm_gsm_gprs.c: 401: break;
 26746  00601C  0012               	return	
 26747  00601E                     l1009:
 26748                           
 26749                           ; BSR set to: 1
 26750  00601E  0101               	movlb	1	; () banked
 26751  006020  51F2               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 26752                           
 26753                           ; Switch size 1, requested type "space"
 26754                           ; Number of cases is 3, Range of values is 0 to 2
 26755                           ; switch strategies available:
 26756                           ; Name         Instructions Cycles
 26757                           ; simple_byte           10     6 (average)
 26758                           ;	Chosen strategy is simple_byte
 26759  006022  0A00               	xorlw	0	; case 0
 26760  006024  B4D8               	btfsc	status,2,c
 26761  006026  D7E0               	goto	l1010
 26762  006028  0A01               	xorlw	1	; case 1
 26763  00602A  B4D8               	btfsc	status,2,c
 26764  00602C  D7EA               	goto	l1013
 26765  00602E  0A03               	xorlw	3	; case 2
 26766  006030  0012               	return	
 26767  006032                     __end_of_TurnOnModem:
 26768                           	opt stack 0
 26769                           tosu	equ	0xFFF
 26770                           tosh	equ	0xFFE
 26771                           tosl	equ	0xFFD
 26772                           pclath	equ	0xFFA
 26773                           tblptru	equ	0xFF8
 26774                           tblptrh	equ	0xFF7
 26775                           tblptrl	equ	0xFF6
 26776                           tablat	equ	0xFF5
 26777                           prodh	equ	0xFF4
 26778                           prodl	equ	0xFF3
 26779                           intcon	equ	0xFF2
 26780                           intcon2	equ	0xFF1
 26781                           intcon3	equ	0xFF0
 26782                           indf0	equ	0xFEF
 26783                           postinc0	equ	0xFEE
 26784                           plusw0	equ	0xFEB
 26785                           fsr0h	equ	0xFEA
 26786                           fsr0l	equ	0xFE9
 26787                           wreg	equ	0xFE8
 26788                           indf1	equ	0xFE7
 26789                           postinc1	equ	0xFE6
 26790                           postdec1	equ	0xFE5
 26791                           fsr1h	equ	0xFE2
 26792                           fsr1l	equ	0xFE1
 26793                           indf2	equ	0xFDF
 26794                           postinc2	equ	0xFDE
 26795                           postdec2	equ	0xFDD
 26796                           plusw2	equ	0xFDB
 26797                           fsr2h	equ	0xFDA
 26798                           fsr2l	equ	0xFD9
 26799                           status	equ	0xFD8
 26800                           
 26801 ;; *************** function _SendSmsSm *****************
 26802 ;; Defined at:
 26803 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26804 ;; Parameters:    Size  Location     Type
 26805 ;;		None
 26806 ;; Auto vars:     Size  Location     Type
 26807 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26808 ;; Return value:  Size  Location     Type
 26809 ;;                  1    wreg      void 
 26810 ;; Registers used:
 26811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26812 ;; Tracked objects:
 26813 ;;		On entry : 0/0
 26814 ;;		On exit  : 0/0
 26815 ;;		Unchanged: 0/0
 26816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26818 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26820 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26821 ;;Total ram usage:       52 bytes
 26822 ;; Hardware stack levels used:    1
 26823 ;; Hardware stack levels required when called:   14
 26824 ;; This function calls:
 26825 ;;		_OsTmr_GetTimerStatus
 26826 ;;		_OsTmr_StartTimer
 26827 ;;		_ReceiveEvt
 26828 ;;		_StringCopy
 26829 ;;		_Uart_WriteStringLen
 26830 ;; This function is called by:
 26831 ;;		_Mdm_MainTask
 26832 ;; This function uses a non-reentrant model
 26833 ;;
 26834                           
 26835                           	psect	text128
 26836  0019F2                     __ptext128:
 26837                           	opt stack 0
 26838  0019F2                     _SendSmsSm:
 26839                           	opt stack 13
 26840                           
 26841                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 26842                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 26843                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 26844                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 26845                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 26846                           
 26847                           ;incstack = 0
 26848  0019F2  0E03               	movlw	3
 26849  0019F4  0100               	movlb	0	; () banked
 26850  0019F6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 26851  0019F8  A4D8               	btfss	status,2,c
 26852  0019FA  0012               	return	
 26853  0019FC  D0C1               	goto	l1091
 26854  0019FE                     
 26855                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 26856                           
 26857                           ; BSR set to: 0
 26858  0019FE  0EDF               	movlw	low _SendSmsEvent
 26859  001A00  0100               	movlb	0	; () banked
 26860  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26861  001A04  0E00               	movlw	high _SendSmsEvent
 26862  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26863  001A08  EC30  F033         	call	_ReceiveEvt	;wreg free
 26864  001A0C  0900               	iorlw	0
 26865  001A0E  B4D8               	btfsc	status,2,c
 26866  001A10  0012               	return	
 26867                           
 26868                           ;mdm_gsm_gprs.c: 671: {
 26869                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 26870  001A12  0E01               	movlw	1
 26871  001A14  0101               	movlb	1	; () banked
 26872  001A16  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26873                           
 26874                           ; BSR set to: 1
 26875                           ;mdm_gsm_gprs.c: 674: }
 26876                           ;mdm_gsm_gprs.c: 675: break;
 26877  001A18  0012               	return	
 26878  001A1A                     
 26879                           ; BSR set to: 1
 26880                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 26881                           
 26882                           ; BSR set to: 1
 26883  001A1A  0ECE               	movlw	low STR_5
 26884  001A1C  0100               	movlb	0	; () banked
 26885  001A1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26886  001A20  0EFF               	movlw	high STR_5
 26887  001A22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26888  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 26889  001A26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26890  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 26891  001A2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26892  001A2C  0E00               	movlw	0
 26893  001A2E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26894  001A30  0E09               	movlw	9
 26895  001A32  6F89               	movwf	StringCopy@Len& (0+255),b
 26896  001A34  EC24  F02C         	call	_StringCopy	;wreg free
 26897                           
 26898                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 26899  001A38  0E9F               	movlw	low _PhoneNumber
 26900  001A3A  0100               	movlb	0	; () banked
 26901  001A3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26902  001A3E  0E04               	movlw	high _PhoneNumber
 26903  001A40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26904  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 26905  001A44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26906  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 26907  001A48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26908  001A4A  C0D2  F089         	movff	_PhoneNumbLen,StringCopy@Len
 26909  001A4E  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26910  001A50  EC24  F02C         	call	_StringCopy	;wreg free
 26911                           
 26912                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 26913  001A54  0100               	movlb	0	; () banked
 26914  001A56  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26915  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26916  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26917  001A5C  0E09               	movlw	9
 26918  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26919  001A60  0E00               	movlw	0
 26920  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26921  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 26922  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26923  001A68  6ED9               	movwf	fsr2l,c
 26924  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 26925  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26926  001A6E  6EDA               	movwf	fsr2h,c
 26927  001A70  0E22               	movlw	34
 26928  001A72  6EDF               	movwf	indf2,c
 26929                           
 26930                           ; BSR set to: 0
 26931                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 26932  001A74  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26933  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26934  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26935  001A7A  0E0A               	movlw	10
 26936  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26937  001A7E  0E00               	movlw	0
 26938  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26939  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 26940  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26941  001A86  6ED9               	movwf	fsr2l,c
 26942  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 26943  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26944  001A8C  6EDA               	movwf	fsr2h,c
 26945  001A8E  0E0D               	movlw	13
 26946  001A90  6EDF               	movwf	indf2,c
 26947                           
 26948                           ; BSR set to: 0
 26949                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 26950  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 26951  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26952  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 26953  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26954  001A9A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26955  001A9C  0F0B               	addlw	11
 26956  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26957  001AA0  0E01               	movlw	1
 26958  001AA2  EC2A  F031         	call	_Uart_WriteStringLen
 26959                           
 26960                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 26961  001AA6  0EE7               	movlw	low SendSmsSm@SwTimer
 26962  001AA8  0100               	movlb	0	; () banked
 26963  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26964  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 26965  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26966  001AB0  0EC4               	movlw	196
 26967  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26968  001AB4  0E09               	movlw	9
 26969  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26970  001AB8  0E00               	movlw	0
 26971  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26972  001ABC  0E00               	movlw	0
 26973  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26974  001AC0  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 26975                           
 26976                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 26977  001AC4  0E05               	movlw	5
 26978  001AC6  0101               	movlb	1	; () banked
 26979  001AC8  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26980                           
 26981                           ; BSR set to: 1
 26982                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 26983  001ACA  0E02               	movlw	2
 26984  001ACC  6FED               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 26985                           
 26986                           ;mdm_gsm_gprs.c: 691: break;
 26987  001ACE  0012               	return	
 26988  001AD0                     
 26989                           ; BSR set to: 1
 26990                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 26991                           
 26992                           ; BSR set to: 1
 26993  001AD0  0E0A               	movlw	10
 26994  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 26995                           
 26996                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 26997  001AD4  0E0D               	movlw	13
 26998  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 26999                           
 27000                           ; BSR set to: 1
 27001                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 27002  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 27003  001ADA  0100               	movlb	0	; () banked
 27004  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27005  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 27006  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27007  001AE2  0E02               	movlw	2
 27008  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27009  001AE6  0E01               	movlw	1
 27010  001AE8  EC2A  F031         	call	_Uart_WriteStringLen
 27011                           
 27012                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 27013  001AEC  0E03               	movlw	3
 27014  001AEE  0101               	movlb	1	; () banked
 27015  001AF0  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27016                           
 27017                           ;mdm_gsm_gprs.c: 701: break;
 27018  001AF2  0012               	return	
 27019  001AF4                     
 27020                           ; BSR set to: 1
 27021                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 27022                           
 27023                           ; BSR set to: 1
 27024  001AF4  0E3C               	movlw	low _NewStringReceived
 27025  001AF6  0100               	movlb	0	; () banked
 27026  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27027  001AFA  0E00               	movlw	high _NewStringReceived
 27028  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27029  001AFE  EC30  F033         	call	_ReceiveEvt	;wreg free
 27030  001B02  0900               	iorlw	0
 27031  001B04  B4D8               	btfsc	status,2,c
 27032  001B06  0012               	return	
 27033                           
 27034                           ;mdm_gsm_gprs.c: 706: {
 27035                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 27036  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 27037  001B0C  0A3E               	xorlw	62
 27038  001B0E  A4D8               	btfss	status,2,c
 27039  001B10  0012               	return	
 27040                           
 27041                           ;mdm_gsm_gprs.c: 709: {
 27042                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 27043  001B12  0E04               	movlw	4
 27044  001B14  0101               	movlb	1	; () banked
 27045  001B16  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27046                           
 27047                           ; BSR set to: 1
 27048                           ;mdm_gsm_gprs.c: 712: }
 27049                           ;mdm_gsm_gprs.c: 713: }
 27050                           ;mdm_gsm_gprs.c: 714: break;
 27051                           
 27052                           ; BSR set to: 1
 27053  001B18  0012               	return	
 27054  001B1A                     
 27055                           ; BSR set to: 1
 27056                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 27057                           
 27058                           ; BSR set to: 1
 27059  001B1A  0E72               	movlw	low _MessageText
 27060  001B1C  0100               	movlb	0	; () banked
 27061  001B1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27062  001B20  0E05               	movlw	high _MessageText
 27063  001B22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27064  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 27065  001B26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27066  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 27067  001B2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27068  001B2C  C0D3  F089         	movff	_SmsLen,StringCopy@Len
 27069  001B30  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27070  001B32  EC24  F02C         	call	_StringCopy	;wreg free
 27071                           
 27072                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 27073  001B36  0100               	movlb	0	; () banked
 27074  001B38  51D3               	movf	_SmsLen& (0+255),w,b
 27075  001B3A  0D01               	mullw	1
 27076  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 27077  001B3E  24F3               	addwf	prodl,w,c
 27078  001B40  6ED9               	movwf	fsr2l,c
 27079  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 27080  001B44  20F4               	addwfc	prodh,w,c
 27081  001B46  6EDA               	movwf	fsr2h,c
 27082  001B48  0E1A               	movlw	26
 27083  001B4A  6EDF               	movwf	indf2,c
 27084                           
 27085                           ; BSR set to: 0
 27086                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 27087  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 27088  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27089  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 27090  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27091  001B54  29D3               	incf	_SmsLen& (0+255),w,b
 27092  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27093  001B58  0E01               	movlw	1
 27094  001B5A  EC2A  F031         	call	_Uart_WriteStringLen
 27095                           
 27096                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 27097  001B5E  0E00               	movlw	0
 27098  001B60  0101               	movlb	1	; () banked
 27099  001B62  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27100                           
 27101                           ;mdm_gsm_gprs.c: 725: break;
 27102  001B64  0012               	return	
 27103  001B66                     
 27104                           ; BSR set to: 1
 27105                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 27106                           
 27107                           ; BSR set to: 1
 27108  001B66  0EE7               	movlw	low SendSmsSm@SwTimer
 27109  001B68  0100               	movlb	0	; () banked
 27110  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27111  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 27112  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27113  001B70  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 27114  001B74  06E8               	decf	wreg,f,c
 27115  001B76  A4D8               	btfss	status,2,c
 27116  001B78  0012               	return	
 27117                           
 27118                           ;mdm_gsm_gprs.c: 730: {
 27119                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 27120  001B7A  C1ED  F1EE         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 27121                           
 27122                           ;mdm_gsm_gprs.c: 738: }
 27123                           
 27124                           ;mdm_gsm_gprs.c: 737: break;
 27125                           
 27126                           ;mdm_gsm_gprs.c: 736: default:
 27127                           
 27128                           ;mdm_gsm_gprs.c: 733: }
 27129                           ;mdm_gsm_gprs.c: 734: break;
 27130  001B7E  0012               	return	
 27131  001B80                     l1091:
 27132  001B80  0101               	movlb	1	; () banked
 27133  001B82  51EE               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 27134                           
 27135                           ; Switch size 1, requested type "space"
 27136                           ; Number of cases is 6, Range of values is 0 to 5
 27137                           ; switch strategies available:
 27138                           ; Name         Instructions Cycles
 27139                           ; simple_byte           19    10 (average)
 27140                           ;	Chosen strategy is simple_byte
 27141  001B84  0A00               	xorlw	0	; case 0
 27142  001B86  B4D8               	btfsc	status,2,c
 27143  001B88  D73A               	goto	l1092
 27144  001B8A  0A01               	xorlw	1	; case 1
 27145  001B8C  B4D8               	btfsc	status,2,c
 27146  001B8E  D745               	goto	l1095
 27147  001B90  0A03               	xorlw	3	; case 2
 27148  001B92  B4D8               	btfsc	status,2,c
 27149  001B94  D79D               	goto	l1096
 27150  001B96  0A01               	xorlw	1	; case 3
 27151  001B98  B4D8               	btfsc	status,2,c
 27152  001B9A  D7AC               	goto	l1097
 27153  001B9C  0A07               	xorlw	7	; case 4
 27154  001B9E  B4D8               	btfsc	status,2,c
 27155  001BA0  D7BC               	goto	l1100
 27156  001BA2  0A01               	xorlw	1	; case 5
 27157  001BA4  A4D8               	btfss	status,2,c
 27158                           
 27159                           ; BSR set to: 1
 27160  001BA6  0012               	return	
 27161  001BA8  D7DE               	goto	l1101
 27162  001BAA                     __end_of_SendSmsSm:
 27163                           	opt stack 0
 27164                           tosu	equ	0xFFF
 27165                           tosh	equ	0xFFE
 27166                           tosl	equ	0xFFD
 27167                           pclath	equ	0xFFA
 27168                           tblptru	equ	0xFF8
 27169                           tblptrh	equ	0xFF7
 27170                           tblptrl	equ	0xFF6
 27171                           tablat	equ	0xFF5
 27172                           prodh	equ	0xFF4
 27173                           prodl	equ	0xFF3
 27174                           intcon	equ	0xFF2
 27175                           intcon2	equ	0xFF1
 27176                           intcon3	equ	0xFF0
 27177                           indf0	equ	0xFEF
 27178                           postinc0	equ	0xFEE
 27179                           plusw0	equ	0xFEB
 27180                           fsr0h	equ	0xFEA
 27181                           fsr0l	equ	0xFE9
 27182                           wreg	equ	0xFE8
 27183                           indf1	equ	0xFE7
 27184                           postinc1	equ	0xFE6
 27185                           postdec1	equ	0xFE5
 27186                           fsr1h	equ	0xFE2
 27187                           fsr1l	equ	0xFE1
 27188                           indf2	equ	0xFDF
 27189                           postinc2	equ	0xFDE
 27190                           postdec2	equ	0xFDD
 27191                           plusw2	equ	0xFDB
 27192                           fsr2h	equ	0xFDA
 27193                           fsr2l	equ	0xFD9
 27194                           status	equ	0xFD8
 27195                           
 27196 ;; *************** function _Uart_WriteStringLen *****************
 27197 ;; Defined at:
 27198 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27199 ;; Parameters:    Size  Location     Type
 27200 ;;  Module          1    wreg     unsigned char 
 27201 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27202 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 27203 ;;  Len             1   34[BANK0 ] unsigned char 
 27204 ;; Auto vars:     Size  Location     Type
 27205 ;;  Module          1   36[BANK0 ] unsigned char 
 27206 ;;  Index           1   35[BANK0 ] unsigned char 
 27207 ;; Return value:  Size  Location     Type
 27208 ;;                  1    wreg      void 
 27209 ;; Registers used:
 27210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27211 ;; Tracked objects:
 27212 ;;		On entry : 0/0
 27213 ;;		On exit  : 0/0
 27214 ;;		Unchanged: 0/0
 27215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27216 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27217 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27219 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27220 ;;Total ram usage:        5 bytes
 27221 ;; Hardware stack levels used:    1
 27222 ;; Hardware stack levels required when called:   12
 27223 ;; This function calls:
 27224 ;;		_UartTxBufferStatus
 27225 ;;		_UartWriteByte
 27226 ;; This function is called by:
 27227 ;;		_SendSmsSm
 27228 ;;		_GsmGprsTerminal
 27229 ;; This function uses a non-reentrant model
 27230 ;;
 27231                           
 27232                           	psect	text129
 27233  006254                     __ptext129:
 27234                           	opt stack 0
 27235  006254                     _Uart_WriteStringLen:
 27236                           	opt stack 14
 27237                           
 27238                           ;incstack = 0
 27239                           ;Uart_WriteStringLen@Module stored from wreg
 27240  006254  0100               	movlb	0	; () banked
 27241  006256  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 27242                           
 27243                           ;uart_drv.c: 544: UINT8 Index;
 27244                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 27245  006258  0E00               	movlw	0
 27246  00625A  0100               	movlb	0	; () banked
 27247  00625C  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 27248  00625E  D015               	goto	l715
 27249  006260                     
 27250                           ; BSR set to: 0
 27251                           ;uart_drv.c: 547: {
 27252                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 27253                           
 27254                           ; BSR set to: 0
 27255  006260  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 27256  006264  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 27257  006268  50DF               	movf	indf2,w,c
 27258  00626A  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27259  00626C  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27260  00626E  EC7C  F034         	call	_UartWriteByte
 27261                           
 27262                           ;uart_drv.c: 551: StringToWrite++;
 27263  006272  0100               	movlb	0	; () banked
 27264  006274  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 27265  006276  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 27266  006278                     
 27267                           ; BSR set to: 0
 27268                           
 27269                           ; BSR set to: 0
 27270  006278  0100               	movlb	0	; () banked
 27271  00627A  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27272  00627C  EC7F  F02F         	call	_UartTxBufferStatus
 27273  006280  06E8               	decf	wreg,f,c
 27274  006282  B4D8               	btfsc	status,2,c
 27275  006284  D7F9               	goto	l718
 27276  006286  0100               	movlb	0	; () banked
 27277  006288  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 27278  00628A                     l715:
 27279                           
 27280                           ; BSR set to: 0
 27281                           
 27282                           ; BSR set to: 0
 27283  00628A  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 27284  00628C  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 27285  00628E  B0D8               	btfsc	status,0,c
 27286  006290  0012               	return	
 27287  006292  D7E6               	goto	l716
 27288  006294                     __end_of_Uart_WriteStringLen:
 27289                           	opt stack 0
 27290                           tosu	equ	0xFFF
 27291                           tosh	equ	0xFFE
 27292                           tosl	equ	0xFFD
 27293                           pclath	equ	0xFFA
 27294                           tblptru	equ	0xFF8
 27295                           tblptrh	equ	0xFF7
 27296                           tblptrl	equ	0xFF6
 27297                           tablat	equ	0xFF5
 27298                           prodh	equ	0xFF4
 27299                           prodl	equ	0xFF3
 27300                           intcon	equ	0xFF2
 27301                           intcon2	equ	0xFF1
 27302                           intcon3	equ	0xFF0
 27303                           indf0	equ	0xFEF
 27304                           postinc0	equ	0xFEE
 27305                           plusw0	equ	0xFEB
 27306                           fsr0h	equ	0xFEA
 27307                           fsr0l	equ	0xFE9
 27308                           wreg	equ	0xFE8
 27309                           indf1	equ	0xFE7
 27310                           postinc1	equ	0xFE6
 27311                           postdec1	equ	0xFE5
 27312                           fsr1h	equ	0xFE2
 27313                           fsr1l	equ	0xFE1
 27314                           indf2	equ	0xFDF
 27315                           postinc2	equ	0xFDE
 27316                           postdec2	equ	0xFDD
 27317                           plusw2	equ	0xFDB
 27318                           fsr2h	equ	0xFDA
 27319                           fsr2l	equ	0xFD9
 27320                           status	equ	0xFD8
 27321                           
 27322 ;; *************** function _ModemEvtParser *****************
 27323 ;; Defined at:
 27324 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27325 ;; Parameters:    Size  Location     Type
 27326 ;;		None
 27327 ;; Auto vars:     Size  Location     Type
 27328 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 27329 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 27330 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 27331 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 27332 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 27333 ;;  Match           1   71[BANK0 ] unsigned char 
 27334 ;; Return value:  Size  Location     Type
 27335 ;;                  1    wreg      void 
 27336 ;; Registers used:
 27337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27338 ;; Tracked objects:
 27339 ;;		On entry : 0/0
 27340 ;;		On exit  : 0/0
 27341 ;;		Unchanged: 0/0
 27342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27344 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27346 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27347 ;;Total ram usage:       26 bytes
 27348 ;; Hardware stack levels used:    1
 27349 ;; Hardware stack levels required when called:   12
 27350 ;; This function calls:
 27351 ;;		_GenerateEvt
 27352 ;;		_ReceiveEvt
 27353 ;;		_StringCompare
 27354 ;;		_StringCopy
 27355 ;;		_Uart_ClearRxBuffer
 27356 ;; This function is called by:
 27357 ;;		_Mdm_MainTask
 27358 ;; This function uses a non-reentrant model
 27359 ;;
 27360                           
 27361                           	psect	text130
 27362  001D30                     __ptext130:
 27363                           	opt stack 0
 27364  001D30                     _ModemEvtParser:
 27365                           	opt stack 15
 27366                           
 27367                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 27368                           
 27369                           ; BSR set to: 0
 27370                           ;incstack = 0
 27371  001D30  C3CD  F0A3         	movff	ModemEvtParser@F9110,ModemEvtParser@RingString
 27372  001D34  C3CE  F0A4         	movff	ModemEvtParser@F9110+1,ModemEvtParser@RingString+1
 27373  001D38  C3CF  F0A5         	movff	ModemEvtParser@F9110+2,ModemEvtParser@RingString+2
 27374  001D3C  C3D0  F0A6         	movff	ModemEvtParser@F9110+3,ModemEvtParser@RingString+3
 27375                           
 27376                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 27377  001D40  EE23  F0C8         	lfsr	2,ModemEvtParser@F9112
 27378  001D44  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 27379  001D48  0E04               	movlw	4
 27380  001D4A                     u14981:
 27381  001D4A  CFDB FFE3          	movff	plusw2,plusw1
 27382  001D4E  06E8               	decf	wreg,f,c
 27383  001D50  E2FC               	bc	u14981
 27384                           
 27385                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 27386  001D52  EE23  F0C3         	lfsr	2,ModemEvtParser@F9114
 27387  001D56  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 27388  001D5A  0E04               	movlw	4
 27389  001D5C                     u14991:
 27390  001D5C  CFDB FFE3          	movff	plusw2,plusw1
 27391  001D60  06E8               	decf	wreg,f,c
 27392  001D62  E2FC               	bc	u14991
 27393                           
 27394                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 27395  001D64  EE24  F0F2         	lfsr	2,ModemEvtParser@F9116
 27396  001D68  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 27397  001D6C  0E09               	movlw	9
 27398  001D6E                     u15001:
 27399  001D6E  CFDB FFE3          	movff	plusw2,plusw1
 27400  001D72  06E8               	decf	wreg,f,c
 27401  001D74  E2FC               	bc	u15001
 27402                           
 27403                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 27404  001D76  0E00               	movlw	0
 27405  001D78  0100               	movlb	0	; () banked
 27406  001D7A  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27407                           
 27408                           ; BSR set to: 0
 27409                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 27410  001D7C  0E00               	movlw	0
 27411  001D7E  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27412                           
 27413                           ; BSR set to: 0
 27414                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 27415  001D80  0E3B               	movlw	low _NewMdmEvtParserRequest
 27416  001D82  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27417  001D84  0E00               	movlw	high _NewMdmEvtParserRequest
 27418  001D86  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27419  001D88  EC30  F033         	call	_ReceiveEvt	;wreg free
 27420  001D8C  0900               	iorlw	0
 27421  001D8E  B4D8               	btfsc	status,2,c
 27422  001D90  0012               	return	
 27423                           
 27424                           ;mdm_gsm_gprs.c: 510: {
 27425                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 27426  001D92  0E00               	movlw	0
 27427  001D94  0100               	movlb	0	; () banked
 27428  001D96  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27429  001D98                     l15531:
 27430                           
 27431                           ; BSR set to: 0
 27432  001D98  0E03               	movlw	3
 27433  001D9A  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 27434  001D9C  D074               	goto	l1052
 27435  001D9E  D083               	goto	u15070
 27436  001DA0                     
 27437                           ; BSR set to: 0
 27438                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 27439                           
 27440                           ; BSR set to: 0
 27441  001DA0  0EA3               	movlw	low ModemEvtParser@RingString
 27442  001DA2  6F7D               	movwf	StringCompare@String1& (0+255),b
 27443  001DA4  0E00               	movlw	high ModemEvtParser@RingString
 27444  001DA6  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27445  001DA8  0E58               	movlw	low _RxBuffer
 27446  001DAA  6F7F               	movwf	StringCompare@String2& (0+255),b
 27447  001DAC  0E0C               	movlw	high _RxBuffer
 27448  001DAE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27449  001DB0  0E00               	movlw	0
 27450  001DB2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27451  001DB4  0E04               	movlw	4
 27452  001DB6  6F81               	movwf	StringCompare@Len& (0+255),b
 27453  001DB8  ECB7  F02E         	call	_StringCompare	;wreg free
 27454  001DBC  0900               	iorlw	0
 27455  001DBE  B4D8               	btfsc	status,2,c
 27456  001DC0  D06F               	goto	l1055
 27457                           
 27458                           ;mdm_gsm_gprs.c: 518: {
 27459                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 27460  001DC2  0EDE               	movlw	low _RingEvent
 27461  001DC4  0100               	movlb	0	; () banked
 27462  001DC6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27463  001DC8  0E00               	movlw	high _RingEvent
 27464  001DCA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27465  001DCC  EC21  F035         	call	_GenerateEvt	;wreg free
 27466  001DD0  D040               	goto	l15553
 27467  001DD2                     
 27468                           ; BSR set to: 0
 27469                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 27470                           
 27471                           ; BSR set to: 0
 27472  001DD2  0E99               	movlw	low ModemEvtParser@ClipString
 27473  001DD4  6F7D               	movwf	StringCompare@String1& (0+255),b
 27474  001DD6  0E00               	movlw	high ModemEvtParser@ClipString
 27475  001DD8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27476  001DDA  0E58               	movlw	low _RxBuffer
 27477  001DDC  6F7F               	movwf	StringCompare@String2& (0+255),b
 27478  001DDE  0E0C               	movlw	high _RxBuffer
 27479  001DE0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27480  001DE2  0E00               	movlw	0
 27481  001DE4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27482  001DE6  0E05               	movlw	5
 27483  001DE8  6F81               	movwf	StringCompare@Len& (0+255),b
 27484  001DEA  ECB7  F02E         	call	_StringCompare	;wreg free
 27485  001DEE  0900               	iorlw	0
 27486  001DF0  B4D8               	btfsc	status,2,c
 27487  001DF2  D056               	goto	l1055
 27488                           
 27489                           ;mdm_gsm_gprs.c: 529: {
 27490                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 27491  001DF4  0E60               	movlw	low (_RxBuffer+8)
 27492  001DF6  0100               	movlb	0	; () banked
 27493  001DF8  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27494  001DFA  0E0C               	movlw	high (_RxBuffer+8)
 27495  001DFC  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27496  001DFE  0ECF               	movlw	low _callerNumber
 27497  001E00  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27498  001E02  0E04               	movlw	high _callerNumber
 27499  001E04  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27500  001E06  0E00               	movlw	0
 27501  001E08  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27502  001E0A  0E0D               	movlw	13
 27503  001E0C  6F89               	movwf	StringCopy@Len& (0+255),b
 27504  001E0E  EC24  F02C         	call	_StringCopy	;wreg free
 27505                           
 27506                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 27507  001E12  0EDD               	movlw	low _ClipEvent
 27508  001E14  0100               	movlb	0	; () banked
 27509  001E16  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27510  001E18  0E00               	movlw	high _ClipEvent
 27511  001E1A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27512  001E1C  EC21  F035         	call	_GenerateEvt	;wreg free
 27513  001E20  D018               	goto	l15553
 27514  001E22                     
 27515                           ; BSR set to: 0
 27516                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 27517                           
 27518                           ; BSR set to: 0
 27519  001E22  0E9E               	movlw	low ModemEvtParser@SmsString
 27520  001E24  6F7D               	movwf	StringCompare@String1& (0+255),b
 27521  001E26  0E00               	movlw	high ModemEvtParser@SmsString
 27522  001E28  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27523  001E2A  0E58               	movlw	low _RxBuffer
 27524  001E2C  6F7F               	movwf	StringCompare@String2& (0+255),b
 27525  001E2E  0E0C               	movlw	high _RxBuffer
 27526  001E30  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27527  001E32  0E00               	movlw	0
 27528  001E34  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27529  001E36  0E05               	movlw	5
 27530  001E38  6F81               	movwf	StringCompare@Len& (0+255),b
 27531  001E3A  ECB7  F02E         	call	_StringCompare	;wreg free
 27532  001E3E  0900               	iorlw	0
 27533  001E40  B4D8               	btfsc	status,2,c
 27534  001E42  D02E               	goto	l1055
 27535                           
 27536                           ;mdm_gsm_gprs.c: 541: {
 27537                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 27538  001E44  0EDC               	movlw	low _SmsEvent
 27539  001E46  0100               	movlb	0	; () banked
 27540  001E48  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27541  001E4A  0E00               	movlw	high _SmsEvent
 27542  001E4C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27543  001E4E  EC21  F035         	call	_GenerateEvt	;wreg free
 27544  001E52                     l15553:
 27545                           
 27546                           ;mdm_gsm_gprs.c: 545: Match = 1;
 27547  001E52  0E01               	movlw	1
 27548  001E54  0100               	movlb	0	; () banked
 27549  001E56  D015               	goto	L64
 27550  001E58                     
 27551                           ; BSR set to: 0
 27552                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 27553                           
 27554                           ; BSR set to: 0
 27555  001E58  0E8F               	movlw	low ModemEvtParser@CallReadyString
 27556  001E5A  6F7D               	movwf	StringCompare@String1& (0+255),b
 27557  001E5C  0E00               	movlw	high ModemEvtParser@CallReadyString
 27558  001E5E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27559  001E60  0E58               	movlw	low _RxBuffer
 27560  001E62  6F7F               	movwf	StringCompare@String2& (0+255),b
 27561  001E64  0E0C               	movlw	high _RxBuffer
 27562  001E66  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27563  001E68  0E00               	movlw	0
 27564  001E6A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27565  001E6C  0E0A               	movlw	10
 27566  001E6E  6F81               	movwf	StringCompare@Len& (0+255),b
 27567  001E70  ECB7  F02E         	call	_StringCompare	;wreg free
 27568  001E74  0900               	iorlw	0
 27569  001E76  B4D8               	btfsc	status,2,c
 27570  001E78  D013               	goto	l1055
 27571                           
 27572                           ;mdm_gsm_gprs.c: 552: {
 27573                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 27574  001E7A  0E02               	movlw	2
 27575  001E7C  0100               	movlb	0	; () banked
 27576  001E7E  6FD1               	movwf	_MdmStatus& (0+255),b
 27577                           
 27578                           ;mdm_gsm_gprs.c: 556: Match = 1;
 27579  001E80  0E01               	movlw	1
 27580  001E82                     L64:
 27581  001E82  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27582                           
 27583                           ; BSR set to: 0
 27584                           ;mdm_gsm_gprs.c: 562: }
 27585                           
 27586                           ; BSR set to: 0
 27587                           ;mdm_gsm_gprs.c: 561: break;
 27588                           
 27589                           ;mdm_gsm_gprs.c: 560: default:
 27590                           
 27591                           ; BSR set to: 0
 27592                           ;mdm_gsm_gprs.c: 557: }
 27593                           ;mdm_gsm_gprs.c: 558: break;
 27594  001E84  D00D               	goto	l1055
 27595  001E86                     l1052:
 27596                           
 27597                           ; BSR set to: 0
 27598                           
 27599                           ; BSR set to: 0
 27600  001E86  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 27601                           
 27602                           ; Switch size 1, requested type "space"
 27603                           ; Number of cases is 4, Range of values is 0 to 3
 27604                           ; switch strategies available:
 27605                           ; Name         Instructions Cycles
 27606                           ; simple_byte           13     7 (average)
 27607                           ;	Chosen strategy is simple_byte
 27608  001E88  0A00               	xorlw	0	; case 0
 27609  001E8A  B4D8               	btfsc	status,2,c
 27610  001E8C  D789               	goto	l1053
 27611  001E8E  0A01               	xorlw	1	; case 1
 27612  001E90  B4D8               	btfsc	status,2,c
 27613  001E92  D7C7               	goto	l1058
 27614  001E94  0A03               	xorlw	3	; case 2
 27615  001E96  B4D8               	btfsc	status,2,c
 27616  001E98  D7DF               	goto	l1060
 27617  001E9A  0A01               	xorlw	1	; case 3
 27618  001E9C  B4D8               	btfsc	status,2,c
 27619  001E9E  D799               	goto	l1056
 27620  001EA0                     l1055:
 27621                           
 27622                           ; BSR set to: 0
 27623  001EA0  0100               	movlb	0	; () banked
 27624  001EA2  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 27625  001EA4  D779               	goto	l15531
 27626  001EA6                     u15070:
 27627                           
 27628                           ; BSR set to: 0
 27629                           ;mdm_gsm_gprs.c: 563: }
 27630                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 27631                           
 27632                           ; BSR set to: 0
 27633  001EA6  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 27634  001EA8  A4D8               	btfss	status,2,c
 27635  001EAA  0012               	return	
 27636                           
 27637                           ; BSR set to: 0
 27638                           ;mdm_gsm_gprs.c: 567: {
 27639                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 27640  001EAC  EC6D  F032         	call	_Uart_ClearRxBuffer	;wreg free
 27641  001EB0  0012               	return	
 27642  001EB2                     __end_of_ModemEvtParser:
 27643                           	opt stack 0
 27644                           tosu	equ	0xFFF
 27645                           tosh	equ	0xFFE
 27646                           tosl	equ	0xFFD
 27647                           pclath	equ	0xFFA
 27648                           tblptru	equ	0xFF8
 27649                           tblptrh	equ	0xFF7
 27650                           tblptrl	equ	0xFF6
 27651                           tablat	equ	0xFF5
 27652                           prodh	equ	0xFF4
 27653                           prodl	equ	0xFF3
 27654                           intcon	equ	0xFF2
 27655                           intcon2	equ	0xFF1
 27656                           intcon3	equ	0xFF0
 27657                           indf0	equ	0xFEF
 27658                           postinc0	equ	0xFEE
 27659                           plusw0	equ	0xFEB
 27660                           fsr0h	equ	0xFEA
 27661                           fsr0l	equ	0xFE9
 27662                           wreg	equ	0xFE8
 27663                           indf1	equ	0xFE7
 27664                           postinc1	equ	0xFE6
 27665                           postdec1	equ	0xFE5
 27666                           plusw1	equ	0xFE3
 27667                           fsr1h	equ	0xFE2
 27668                           fsr1l	equ	0xFE1
 27669                           indf2	equ	0xFDF
 27670                           postinc2	equ	0xFDE
 27671                           postdec2	equ	0xFDD
 27672                           plusw2	equ	0xFDB
 27673                           fsr2h	equ	0xFDA
 27674                           fsr2l	equ	0xFD9
 27675                           status	equ	0xFD8
 27676                           
 27677 ;; *************** function _Uart_ClearRxBuffer *****************
 27678 ;; Defined at:
 27679 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27680 ;; Parameters:    Size  Location     Type
 27681 ;;		None
 27682 ;; Auto vars:     Size  Location     Type
 27683 ;;  Index           2   29[BANK0 ] unsigned short 
 27684 ;; Return value:  Size  Location     Type
 27685 ;;                  1    wreg      void 
 27686 ;; Registers used:
 27687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27688 ;; Tracked objects:
 27689 ;;		On entry : 0/0
 27690 ;;		On exit  : 0/0
 27691 ;;		Unchanged: 0/0
 27692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27694 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27696 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27697 ;;Total ram usage:        2 bytes
 27698 ;; Hardware stack levels used:    1
 27699 ;; Hardware stack levels required when called:   11
 27700 ;; This function calls:
 27701 ;;		Nothing
 27702 ;; This function is called by:
 27703 ;;		_ModemEvtParser
 27704 ;; This function uses a non-reentrant model
 27705 ;;
 27706                           
 27707                           	psect	text131
 27708  0064DA                     __ptext131:
 27709                           	opt stack 0
 27710  0064DA                     _Uart_ClearRxBuffer:
 27711                           	opt stack 15
 27712                           
 27713                           ;uart_drv.c: 567: UINT16 Index = 0;
 27714                           
 27715                           ;incstack = 0
 27716  0064DA  0E00               	movlw	0
 27717  0064DC  0100               	movlb	0	; () banked
 27718  0064DE  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27719  0064E0  0E00               	movlw	0
 27720  0064E2  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27721                           
 27722                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 27723  0064E4  0E00               	movlw	0
 27724  0064E6  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27725  0064E8  0E00               	movlw	0
 27726  0064EA  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27727  0064EC                     l14637:
 27728                           
 27729                           ; BSR set to: 0
 27730  0064EC  0E90               	movlw	144
 27731  0064EE  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27732  0064F0  0E01               	movlw	1
 27733  0064F2  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27734  0064F4  B0D8               	btfsc	status,0,c
 27735  0064F6  0012               	return	
 27736                           
 27737                           ; BSR set to: 0
 27738                           ;uart_drv.c: 571: {
 27739                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 27740                           
 27741                           ; BSR set to: 0
 27742                           
 27743                           ; BSR set to: 0
 27744  0064F8  0E58               	movlw	low _RxBuffer
 27745  0064FA  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27746  0064FC  6ED9               	movwf	fsr2l,c
 27747  0064FE  0E0C               	movlw	high _RxBuffer
 27748  006500  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27749  006502  6EDA               	movwf	fsr2h,c
 27750  006504  0E00               	movlw	0
 27751  006506  6EDF               	movwf	indf2,c
 27752                           
 27753                           ; BSR set to: 0
 27754  006508  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 27755  00650A  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 27756  00650C  D7EF               	goto	l14637
 27757  00650E                     __end_of_Uart_ClearRxBuffer:
 27758                           	opt stack 0
 27759                           tosu	equ	0xFFF
 27760                           tosh	equ	0xFFE
 27761                           tosl	equ	0xFFD
 27762                           pclath	equ	0xFFA
 27763                           tblptru	equ	0xFF8
 27764                           tblptrh	equ	0xFF7
 27765                           tblptrl	equ	0xFF6
 27766                           tablat	equ	0xFF5
 27767                           prodh	equ	0xFF4
 27768                           prodl	equ	0xFF3
 27769                           intcon	equ	0xFF2
 27770                           intcon2	equ	0xFF1
 27771                           intcon3	equ	0xFF0
 27772                           indf0	equ	0xFEF
 27773                           postinc0	equ	0xFEE
 27774                           plusw0	equ	0xFEB
 27775                           fsr0h	equ	0xFEA
 27776                           fsr0l	equ	0xFE9
 27777                           wreg	equ	0xFE8
 27778                           indf1	equ	0xFE7
 27779                           postinc1	equ	0xFE6
 27780                           postdec1	equ	0xFE5
 27781                           plusw1	equ	0xFE3
 27782                           fsr1h	equ	0xFE2
 27783                           fsr1l	equ	0xFE1
 27784                           indf2	equ	0xFDF
 27785                           postinc2	equ	0xFDE
 27786                           postdec2	equ	0xFDD
 27787                           plusw2	equ	0xFDB
 27788                           fsr2h	equ	0xFDA
 27789                           fsr2l	equ	0xFD9
 27790                           status	equ	0xFD8
 27791                           
 27792 ;; *************** function _StringCompare *****************
 27793 ;; Defined at:
 27794 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27795 ;; Parameters:    Size  Location     Type
 27796 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 27797 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 27798 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 27799 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 27800 ;;		 -> readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNumberCmd(4), parseCommand@addNumberCmd(4), 
 27801 ;;		 -> RxBuffer(400), 
 27802 ;;  Len             2   33[BANK0 ] unsigned short 
 27803 ;; Auto vars:     Size  Location     Type
 27804 ;;  Index           2   38[BANK0 ] unsigned short 
 27805 ;;  Result          1   37[BANK0 ] unsigned char 
 27806 ;; Return value:  Size  Location     Type
 27807 ;;                  1    wreg      unsigned char 
 27808 ;; Registers used:
 27809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27810 ;; Tracked objects:
 27811 ;;		On entry : 0/0
 27812 ;;		On exit  : 0/0
 27813 ;;		Unchanged: 0/0
 27814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27815 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27816 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27817 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27818 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27819 ;;Total ram usage:       11 bytes
 27820 ;; Hardware stack levels used:    1
 27821 ;; Hardware stack levels required when called:   11
 27822 ;; This function calls:
 27823 ;;		Nothing
 27824 ;; This function is called by:
 27825 ;;		_ModemEvtParser
 27826 ;;		_parseCommand
 27827 ;;		_isNumberInMemory
 27828 ;;		_isMasterNumber
 27829 ;; This function uses a non-reentrant model
 27830 ;;
 27831                           
 27832                           	psect	text132
 27833  005D6E                     __ptext132:
 27834                           	opt stack 0
 27835  005D6E                     _StringCompare:
 27836                           	opt stack 14
 27837                           
 27838                           ;sf.c: 77: UINT16 Index = 0;
 27839                           
 27840                           ; BSR set to: 0
 27841                           ;incstack = 0
 27842  005D6E  0E00               	movlw	0
 27843  005D70  0100               	movlb	0	; () banked
 27844  005D72  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27845  005D74  0E00               	movlw	0
 27846  005D76  6F86               	movwf	StringCompare@Index& (0+255),b
 27847                           
 27848                           ;sf.c: 78: UINT8 Result = 1;
 27849  005D78  0E01               	movlw	1
 27850  005D7A  6F85               	movwf	StringCompare@Result& (0+255),b
 27851                           
 27852                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 27853  005D7C  0E00               	movlw	0
 27854  005D7E  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27855  005D80  0E00               	movlw	0
 27856  005D82  6F86               	movwf	StringCompare@Index& (0+255),b
 27857  005D84  D015               	goto	l2249
 27858  005D86                     
 27859                           ; BSR set to: 0
 27860                           ;sf.c: 82: {
 27861                           ;sf.c: 83: if (String1[Index] != String2[Index])
 27862                           
 27863                           ; BSR set to: 0
 27864  005D86  5186               	movf	StringCompare@Index& (0+255),w,b
 27865  005D88  257F               	addwf	StringCompare@String2& (0+255),w,b
 27866  005D8A  6ED9               	movwf	fsr2l,c
 27867  005D8C  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27868  005D8E  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 27869  005D90  6EDA               	movwf	fsr2h,c
 27870  005D92  5186               	movf	StringCompare@Index& (0+255),w,b
 27871  005D94  257D               	addwf	StringCompare@String1& (0+255),w,b
 27872  005D96  6EE1               	movwf	fsr1l,c
 27873  005D98  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27874  005D9A  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 27875  005D9C  6EE2               	movwf	fsr1h,c
 27876  005D9E  50DE               	movf	postinc2,w,c
 27877  005DA0  18E6               	xorwf	postinc1,w,c
 27878  005DA2  B4D8               	btfsc	status,2,c
 27879  005DA4  D003               	goto	l2251
 27880                           
 27881                           ; BSR set to: 0
 27882                           ;sf.c: 84: {
 27883                           ;sf.c: 85: Result = 0;
 27884  005DA6  0E00               	movlw	0
 27885  005DA8  6F85               	movwf	StringCompare@Result& (0+255),b
 27886                           
 27887                           ;sf.c: 86: break;
 27888  005DAA  D008               	goto	u12830
 27889  005DAC                     l2251:
 27890                           
 27891                           ; BSR set to: 0
 27892                           
 27893                           ; BSR set to: 0
 27894  005DAC  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 27895  005DAE  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 27896  005DB0                     l2249:
 27897                           
 27898                           ; BSR set to: 0
 27899                           
 27900                           ; BSR set to: 0
 27901  005DB0  5181               	movf	StringCompare@Len& (0+255),w,b
 27902  005DB2  5D86               	subwf	StringCompare@Index& (0+255),w,b
 27903  005DB4  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 27904  005DB6  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 27905  005DB8  A0D8               	btfss	status,0,c
 27906  005DBA  D7E5               	goto	l2250
 27907  005DBC                     u12830:
 27908                           
 27909                           ; BSR set to: 0
 27910                           ;sf.c: 87: }
 27911                           ;sf.c: 88: }
 27912                           ;sf.c: 91: return Result;
 27913                           
 27914                           ; BSR set to: 0
 27915  005DBC  5185               	movf	StringCompare@Result& (0+255),w,b
 27916  005DBE  0012               	return	
 27917  005DC0                     __end_of_StringCompare:
 27918                           	opt stack 0
 27919                           tosu	equ	0xFFF
 27920                           tosh	equ	0xFFE
 27921                           tosl	equ	0xFFD
 27922                           pclath	equ	0xFFA
 27923                           tblptru	equ	0xFF8
 27924                           tblptrh	equ	0xFF7
 27925                           tblptrl	equ	0xFF6
 27926                           tablat	equ	0xFF5
 27927                           prodh	equ	0xFF4
 27928                           prodl	equ	0xFF3
 27929                           intcon	equ	0xFF2
 27930                           intcon2	equ	0xFF1
 27931                           intcon3	equ	0xFF0
 27932                           indf0	equ	0xFEF
 27933                           postinc0	equ	0xFEE
 27934                           plusw0	equ	0xFEB
 27935                           fsr0h	equ	0xFEA
 27936                           fsr0l	equ	0xFE9
 27937                           wreg	equ	0xFE8
 27938                           indf1	equ	0xFE7
 27939                           postinc1	equ	0xFE6
 27940                           postdec1	equ	0xFE5
 27941                           plusw1	equ	0xFE3
 27942                           fsr1h	equ	0xFE2
 27943                           fsr1l	equ	0xFE1
 27944                           indf2	equ	0xFDF
 27945                           postinc2	equ	0xFDE
 27946                           postdec2	equ	0xFDD
 27947                           plusw2	equ	0xFDB
 27948                           fsr2h	equ	0xFDA
 27949                           fsr2l	equ	0xFD9
 27950                           status	equ	0xFD8
 27951                           
 27952 ;; *************** function _GetSmsSm *****************
 27953 ;; Defined at:
 27954 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27955 ;; Parameters:    Size  Location     Type
 27956 ;;		None
 27957 ;; Auto vars:     Size  Location     Type
 27958 ;;		None
 27959 ;; Return value:  Size  Location     Type
 27960 ;;                  1    wreg      void 
 27961 ;; Registers used:
 27962 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27963 ;; Tracked objects:
 27964 ;;		On entry : 0/0
 27965 ;;		On exit  : 0/0
 27966 ;;		Unchanged: 0/0
 27967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27972 ;;Total ram usage:        0 bytes
 27973 ;; Hardware stack levels used:    1
 27974 ;; Hardware stack levels required when called:   13
 27975 ;; This function calls:
 27976 ;;		_ClearBuffer
 27977 ;;		_GenerateEvt
 27978 ;;		_ReceiveEvt
 27979 ;;		_StringCopy
 27980 ;;		_Uart_WriteConstString
 27981 ;; This function is called by:
 27982 ;;		_Mdm_MainTask
 27983 ;; This function uses a non-reentrant model
 27984 ;;
 27985                           
 27986                           	psect	text133
 27987  002AA2                     __ptext133:
 27988                           	opt stack 0
 27989  002AA2                     _GetSmsSm:
 27990                           	opt stack 14
 27991                           
 27992                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 27993                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 27994                           
 27995                           ; BSR set to: 0
 27996                           ;incstack = 0
 27997  002AA2  0E03               	movlw	3
 27998  002AA4  0100               	movlb	0	; () banked
 27999  002AA6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28000  002AA8  A4D8               	btfss	status,2,c
 28001  002AAA  0012               	return	
 28002  002AAC  D084               	goto	l1070
 28003  002AAE                     
 28004                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 28005                           
 28006                           ; BSR set to: 0
 28007  002AAE  0EDB               	movlw	low _GetSmsText
 28008  002AB0  0100               	movlb	0	; () banked
 28009  002AB2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28010  002AB4  0E00               	movlw	high _GetSmsText
 28011  002AB6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28012  002AB8  EC30  F033         	call	_ReceiveEvt	;wreg free
 28013  002ABC  0900               	iorlw	0
 28014  002ABE  B4D8               	btfsc	status,2,c
 28015  002AC0  0012               	return	
 28016                           
 28017                           ;mdm_gsm_gprs.c: 596: {
 28018                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 28019  002AC2  0E01               	movlw	1
 28020  002AC4  0101               	movlb	1	; () banked
 28021  002AC6  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28022                           
 28023                           ; BSR set to: 1
 28024                           ;mdm_gsm_gprs.c: 599: }
 28025                           ;mdm_gsm_gprs.c: 600: break;
 28026  002AC8  0012               	return	
 28027  002ACA                     
 28028                           ; BSR set to: 1
 28029                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 28030                           
 28031                           ; BSR set to: 1
 28032  002ACA  0EC2               	movlw	low STR_4
 28033  002ACC  0100               	movlb	0	; () banked
 28034  002ACE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28035  002AD0  0EFF               	movlw	high STR_4
 28036  002AD2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28037  002AD4  0E01               	movlw	1
 28038  002AD6  ECE8  F030         	call	_Uart_WriteConstString
 28039                           
 28040                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 28041  002ADA  0E02               	movlw	2
 28042  002ADC  0101               	movlb	1	; () banked
 28043  002ADE  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28044                           
 28045                           ;mdm_gsm_gprs.c: 607: break;
 28046  002AE0  0012               	return	
 28047  002AE2                     
 28048                           ; BSR set to: 1
 28049                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 28050                           
 28051                           ; BSR set to: 1
 28052  002AE2  0E3C               	movlw	low _NewStringReceived
 28053  002AE4  0100               	movlb	0	; () banked
 28054  002AE6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28055  002AE8  0E00               	movlw	high _NewStringReceived
 28056  002AEA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28057  002AEC  EC30  F033         	call	_ReceiveEvt	;wreg free
 28058  002AF0  0900               	iorlw	0
 28059  002AF2  B4D8               	btfsc	status,2,c
 28060  002AF4  0012               	return	
 28061                           
 28062                           ;mdm_gsm_gprs.c: 612: {
 28063                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 28064  002AF6  CC58  FFE8         	movff	_RxBuffer,wreg
 28065  002AFA  0A2B               	xorlw	43
 28066  002AFC  A4D8               	btfss	status,2,c
 28067  002AFE  0012               	return	
 28068  002B00  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28069  002B04  0A43               	xorlw	67
 28070  002B06  A4D8               	btfss	status,2,c
 28071  002B08  0012               	return	
 28072  002B0A  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28073  002B0E  0A4D               	xorlw	77
 28074  002B10  A4D8               	btfss	status,2,c
 28075  002B12  0012               	return	
 28076                           
 28077                           ;mdm_gsm_gprs.c: 614: {
 28078                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 28079  002B14  0E00               	movlw	low _Mdm_SmsRx
 28080  002B16  0100               	movlb	0	; () banked
 28081  002B18  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28082  002B1A  0E07               	movlw	high _Mdm_SmsRx
 28083  002B1C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28084  002B1E  0E00               	movlw	0
 28085  002B20  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28086  002B22  0E50               	movlw	80
 28087  002B24  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28088  002B26  EC52  F032         	call	_ClearBuffer	;wreg free
 28089                           
 28090                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 28091  002B2A  0E58               	movlw	low _RxBuffer
 28092  002B2C  0100               	movlb	0	; () banked
 28093  002B2E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28094  002B30  0E0C               	movlw	high _RxBuffer
 28095  002B32  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28096  002B34  0E00               	movlw	low _Mdm_SmsRx
 28097  002B36  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28098  002B38  0E07               	movlw	high _Mdm_SmsRx
 28099  002B3A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28100  002B3C  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28101  002B40  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28102  002B44  EC24  F02C         	call	_StringCopy	;wreg free
 28103                           
 28104                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 28105  002B48  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 28106                           
 28107                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 28108  002B4C  0E03               	movlw	3
 28109  002B4E  0101               	movlb	1	; () banked
 28110  002B50  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28111                           
 28112                           ; BSR set to: 1
 28113                           ;mdm_gsm_gprs.c: 622: }
 28114                           ;mdm_gsm_gprs.c: 623: }
 28115                           ;mdm_gsm_gprs.c: 624: break;
 28116                           
 28117                           ; BSR set to: 1
 28118  002B52  0012               	return	
 28119  002B54                     
 28120                           ; BSR set to: 1
 28121                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 28122                           
 28123                           ; BSR set to: 1
 28124  002B54  0E3C               	movlw	low _NewStringReceived
 28125  002B56  0100               	movlb	0	; () banked
 28126  002B58  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28127  002B5A  0E00               	movlw	high _NewStringReceived
 28128  002B5C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28129  002B5E  EC30  F033         	call	_ReceiveEvt	;wreg free
 28130  002B62  0900               	iorlw	0
 28131  002B64  B4D8               	btfsc	status,2,c
 28132  002B66  0012               	return	
 28133                           
 28134                           ;mdm_gsm_gprs.c: 629: {
 28135                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 28136  002B68  0E50               	movlw	low (_Mdm_SmsRx+80)
 28137  002B6A  0100               	movlb	0	; () banked
 28138  002B6C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28139  002B6E  0E07               	movlw	high (_Mdm_SmsRx+80)
 28140  002B70  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28141  002B72  0E00               	movlw	0
 28142  002B74  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28143  002B76  0E14               	movlw	20
 28144  002B78  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28145  002B7A  EC52  F032         	call	_ClearBuffer	;wreg free
 28146                           
 28147                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 28148  002B7E  0E58               	movlw	low _RxBuffer
 28149  002B80  0100               	movlb	0	; () banked
 28150  002B82  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28151  002B84  0E0C               	movlw	high _RxBuffer
 28152  002B86  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28153  002B88  0E50               	movlw	low (_Mdm_SmsRx+80)
 28154  002B8A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28155  002B8C  0E07               	movlw	high (_Mdm_SmsRx+80)
 28156  002B8E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28157  002B90  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28158  002B94  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28159  002B98  EC24  F02C         	call	_StringCopy	;wreg free
 28160                           
 28161                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 28162  002B9C  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 28163                           
 28164                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 28165  002BA0  0E00               	movlw	0
 28166  002BA2  0101               	movlb	1	; () banked
 28167  002BA4  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28168                           
 28169                           ; BSR set to: 1
 28170                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 28171  002BA6  0EDA               	movlw	low _SmsTxtReady
 28172  002BA8  0100               	movlb	0	; () banked
 28173  002BAA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28174  002BAC  0E00               	movlw	high _SmsTxtReady
 28175  002BAE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28176  002BB0  EC21  F035         	call	_GenerateEvt	;wreg free
 28177                           
 28178                           ;mdm_gsm_gprs.c: 644: }
 28179                           
 28180                           ;mdm_gsm_gprs.c: 643: break;
 28181                           
 28182                           ;mdm_gsm_gprs.c: 642: default:
 28183                           
 28184                           ;mdm_gsm_gprs.c: 639: }
 28185                           ;mdm_gsm_gprs.c: 640: break;
 28186  002BB4  0012               	return	
 28187  002BB6                     l1070:
 28188  002BB6  0101               	movlb	1	; () banked
 28189  002BB8  51EF               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 28190                           
 28191                           ; Switch size 1, requested type "space"
 28192                           ; Number of cases is 4, Range of values is 0 to 3
 28193                           ; switch strategies available:
 28194                           ; Name         Instructions Cycles
 28195                           ; simple_byte           13     7 (average)
 28196                           ;	Chosen strategy is simple_byte
 28197  002BBA  0A00               	xorlw	0	; case 0
 28198  002BBC  B4D8               	btfsc	status,2,c
 28199  002BBE  D777               	goto	l1071
 28200  002BC0  0A01               	xorlw	1	; case 1
 28201  002BC2  B4D8               	btfsc	status,2,c
 28202  002BC4  D782               	goto	l1074
 28203  002BC6  0A03               	xorlw	3	; case 2
 28204  002BC8  B4D8               	btfsc	status,2,c
 28205  002BCA  D78B               	goto	l1075
 28206  002BCC  0A01               	xorlw	1	; case 3
 28207  002BCE  A4D8               	btfss	status,2,c
 28208                           
 28209                           ; BSR set to: 1
 28210  002BD0  0012               	return	
 28211  002BD2  D7C0               	goto	l1078
 28212  002BD4                     __end_of_GetSmsSm:
 28213                           	opt stack 0
 28214                           tosu	equ	0xFFF
 28215                           tosh	equ	0xFFE
 28216                           tosl	equ	0xFFD
 28217                           pclath	equ	0xFFA
 28218                           tblptru	equ	0xFF8
 28219                           tblptrh	equ	0xFF7
 28220                           tblptrl	equ	0xFF6
 28221                           tablat	equ	0xFF5
 28222                           prodh	equ	0xFF4
 28223                           prodl	equ	0xFF3
 28224                           intcon	equ	0xFF2
 28225                           intcon2	equ	0xFF1
 28226                           intcon3	equ	0xFF0
 28227                           indf0	equ	0xFEF
 28228                           postinc0	equ	0xFEE
 28229                           plusw0	equ	0xFEB
 28230                           fsr0h	equ	0xFEA
 28231                           fsr0l	equ	0xFE9
 28232                           wreg	equ	0xFE8
 28233                           indf1	equ	0xFE7
 28234                           postinc1	equ	0xFE6
 28235                           postdec1	equ	0xFE5
 28236                           plusw1	equ	0xFE3
 28237                           fsr1h	equ	0xFE2
 28238                           fsr1l	equ	0xFE1
 28239                           indf2	equ	0xFDF
 28240                           postinc2	equ	0xFDE
 28241                           postdec2	equ	0xFDD
 28242                           plusw2	equ	0xFDB
 28243                           fsr2h	equ	0xFDA
 28244                           fsr2l	equ	0xFD9
 28245                           status	equ	0xFD8
 28246                           
 28247 ;; *************** function _ConfigureModem *****************
 28248 ;; Defined at:
 28249 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28250 ;; Parameters:    Size  Location     Type
 28251 ;;		None
 28252 ;; Auto vars:     Size  Location     Type
 28253 ;;		None
 28254 ;; Return value:  Size  Location     Type
 28255 ;;                  1    wreg      void 
 28256 ;; Registers used:
 28257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28258 ;; Tracked objects:
 28259 ;;		On entry : 0/0
 28260 ;;		On exit  : 0/0
 28261 ;;		Unchanged: 0/0
 28262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28267 ;;Total ram usage:        0 bytes
 28268 ;; Hardware stack levels used:    1
 28269 ;; Hardware stack levels required when called:   14
 28270 ;; This function calls:
 28271 ;;		_GenerateEvt
 28272 ;;		_UartSetConfigLow
 28273 ;;		_Uart_InitUartModule
 28274 ;;		_Uart_WriteConstString
 28275 ;; This function is called by:
 28276 ;;		_Mdm_MainTask
 28277 ;; This function uses a non-reentrant model
 28278 ;;
 28279                           
 28280                           	psect	text134
 28281  0036C4                     __ptext134:
 28282                           	opt stack 0
 28283  0036C4                     _ConfigureModem:
 28284                           	opt stack 13
 28285                           
 28286                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 28287                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 28288                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 28289                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 28290                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 28291                           
 28292                           ;incstack = 0
 28293  0036C4  D05A               	goto	l1027
 28294  0036C6                     
 28295                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 28296  0036C6  0E02               	movlw	2
 28297  0036C8  0100               	movlb	0	; () banked
 28298  0036CA  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28299  0036CC  A4D8               	btfss	status,2,c
 28300  0036CE  0012               	return	
 28301                           
 28302                           ; BSR set to: 0
 28303                           ;mdm_gsm_gprs.c: 431: {
 28304                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 28305  0036D0  0E01               	movlw	1
 28306  0036D2  0101               	movlb	1	; () banked
 28307  0036D4  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28308                           
 28309                           ; BSR set to: 1
 28310                           ;mdm_gsm_gprs.c: 434: }
 28311                           ;mdm_gsm_gprs.c: 435: break;
 28312  0036D6  0012               	return	
 28313  0036D8                     
 28314                           ; BSR set to: 1
 28315                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 28316                           
 28317                           ; BSR set to: 1
 28318  0036D8  0E75               	movlw	low STR_2
 28319  0036DA  0100               	movlb	0	; () banked
 28320  0036DC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28321  0036DE  0EFF               	movlw	high STR_2
 28322  0036E0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28323  0036E2  0E01               	movlw	1
 28324  0036E4  ECE8  F030         	call	_Uart_WriteConstString
 28325                           
 28326                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 28327  0036E8  EC39  F02D         	call	_UartSetConfigLow	;wreg free
 28328                           
 28329                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 28330  0036EC  0E28               	movlw	low _UartConfig
 28331  0036EE  0100               	movlb	0	; () banked
 28332  0036F0  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 28333  0036F2  0E03               	movlw	high _UartConfig
 28334  0036F4  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 28335  0036F6  0E01               	movlw	1
 28336  0036F8  EC5E  F005         	call	_Uart_InitUartModule
 28337                           
 28338                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28339  0036FC  0E03               	movlw	3
 28340  0036FE  0102               	movlb	2	; () banked
 28341  003700  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28342  003702  0EE8               	movlw	232
 28343  003704  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28344                           
 28345                           ; BSR set to: 2
 28346                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 28347  003706  0E02               	movlw	2
 28348  003708  0101               	movlb	1	; () banked
 28349  00370A  6FF0               	movwf	ConfigureModem@NextState& (0+255),b
 28350                           
 28351                           ; BSR set to: 1
 28352                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 28353  00370C  0E04               	movlw	4
 28354  00370E  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28355                           
 28356                           ;mdm_gsm_gprs.c: 449: break;
 28357  003710  0012               	return	
 28358  003712                     
 28359                           ; BSR set to: 1
 28360                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 28361                           
 28362                           ; BSR set to: 1
 28363  003712  0EDF               	movlw	low STR_3
 28364  003714  0100               	movlb	0	; () banked
 28365  003716  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28366  003718  0EFF               	movlw	high STR_3
 28367  00371A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28368  00371C  0E01               	movlw	1
 28369  00371E  ECE8  F030         	call	_Uart_WriteConstString
 28370                           
 28371                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28372  003722  0E03               	movlw	3
 28373  003724  0102               	movlb	2	; () banked
 28374  003726  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28375  003728  0EE8               	movlw	232
 28376  00372A  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28377                           
 28378                           ; BSR set to: 2
 28379                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 28380  00372C  0E05               	movlw	5
 28381  00372E  0101               	movlb	1	; () banked
 28382  003730  6FF0               	movwf	ConfigureModem@NextState& (0+255),b
 28383                           
 28384                           ; BSR set to: 1
 28385                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 28386  003732  0E04               	movlw	4
 28387  003734  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28388                           
 28389                           ;mdm_gsm_gprs.c: 459: break;
 28390  003736  0012               	return	
 28391  003738                     
 28392                           ; BSR set to: 1
 28393                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 28394                           
 28395                           ; BSR set to: 1
 28396  003738  0103               	movlb	3	; () banked
 28397  00373A  4B26               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 28398  00373C  2B27               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 28399                           
 28400                           ; BSR set to: 3
 28401                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 28402  00373E  0102               	movlb	2	; () banked
 28403  003740  51D6               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 28404  003742  0103               	movlb	3	; () banked
 28405  003744  5D26               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 28406  003746  0102               	movlb	2	; () banked
 28407  003748  51D7               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 28408  00374A  0103               	movlb	3	; () banked
 28409  00374C  5927               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 28410  00374E  A0D8               	btfss	status,0,c
 28411  003750  0012               	return	
 28412                           
 28413                           ; BSR set to: 3
 28414                           ;mdm_gsm_gprs.c: 466: {
 28415                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 28416  003752  0E00               	movlw	0
 28417  003754  6F27               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 28418  003756  0E00               	movlw	0
 28419  003758  6F26               	movwf	ConfigureModem@DelayCounter& (0+255),b
 28420                           
 28421                           ; BSR set to: 3
 28422                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 28423  00375A  C1F0  F1F1         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 28424                           
 28425                           ; BSR set to: 3
 28426                           ;mdm_gsm_gprs.c: 471: }
 28427                           ;mdm_gsm_gprs.c: 472: break;
 28428  00375E  0012               	return	
 28429  003760                     
 28430                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 28431                           
 28432                           ; BSR set to: 3
 28433  003760  0E03               	movlw	3
 28434  003762  0100               	movlb	0	; () banked
 28435  003764  6FD1               	movwf	_MdmStatus& (0+255),b
 28436                           
 28437                           ; BSR set to: 0
 28438                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 28439  003766  0EFD               	movlw	low _MdmStsReady
 28440  003768  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28441  00376A  0E01               	movlw	high _MdmStsReady
 28442  00376C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28443  00376E  EC21  F035         	call	_GenerateEvt	;wreg free
 28444                           
 28445                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 28446  003772  0E06               	movlw	6
 28447  003774  0101               	movlb	1	; () banked
 28448  003776  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28449                           
 28450                           ; BSR set to: 1
 28451                           ;mdm_gsm_gprs.c: 488: }
 28452                           
 28453                           ; BSR set to: 1
 28454                           ;mdm_gsm_gprs.c: 487: break;
 28455                           
 28456                           ;mdm_gsm_gprs.c: 486: default:
 28457                           
 28458                           ; BSR set to: 1
 28459                           ;mdm_gsm_gprs.c: 484: break;
 28460                           
 28461                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 28462                           
 28463                           ;mdm_gsm_gprs.c: 481: break;
 28464  003778  0012               	return	
 28465  00377A                     l1027:
 28466                           
 28467                           ; BSR set to: 1
 28468  00377A  0101               	movlb	1	; () banked
 28469  00377C  51F1               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 28470                           
 28471                           ; Switch size 1, requested type "space"
 28472                           ; Number of cases is 6, Range of values is 0 to 6
 28473                           ; switch strategies available:
 28474                           ; Name         Instructions Cycles
 28475                           ; simple_byte           19    10 (average)
 28476                           ;	Chosen strategy is simple_byte
 28477  00377E  0A00               	xorlw	0	; case 0
 28478  003780  B4D8               	btfsc	status,2,c
 28479  003782  D7A1               	goto	l1028
 28480  003784  0A01               	xorlw	1	; case 1
 28481  003786  B4D8               	btfsc	status,2,c
 28482  003788  D7A7               	goto	l1031
 28483  00378A  0A03               	xorlw	3	; case 2
 28484  00378C  B4D8               	btfsc	status,2,c
 28485  00378E  D7C1               	goto	l1032
 28486  003790  0A06               	xorlw	6	; case 4
 28487  003792  B4D8               	btfsc	status,2,c
 28488  003794  D7D1               	goto	l1033
 28489  003796  0A01               	xorlw	1	; case 5
 28490  003798  B4D8               	btfsc	status,2,c
 28491  00379A  D7E2               	goto	l1035
 28492  00379C  0A03               	xorlw	3	; case 6
 28493  00379E  0012               	return	
 28494  0037A0                     __end_of_ConfigureModem:
 28495                           	opt stack 0
 28496                           tosu	equ	0xFFF
 28497                           tosh	equ	0xFFE
 28498                           tosl	equ	0xFFD
 28499                           pclath	equ	0xFFA
 28500                           tblptru	equ	0xFF8
 28501                           tblptrh	equ	0xFF7
 28502                           tblptrl	equ	0xFF6
 28503                           tablat	equ	0xFF5
 28504                           prodh	equ	0xFF4
 28505                           prodl	equ	0xFF3
 28506                           intcon	equ	0xFF2
 28507                           intcon2	equ	0xFF1
 28508                           intcon3	equ	0xFF0
 28509                           indf0	equ	0xFEF
 28510                           postinc0	equ	0xFEE
 28511                           plusw0	equ	0xFEB
 28512                           fsr0h	equ	0xFEA
 28513                           fsr0l	equ	0xFE9
 28514                           wreg	equ	0xFE8
 28515                           indf1	equ	0xFE7
 28516                           postinc1	equ	0xFE6
 28517                           postdec1	equ	0xFE5
 28518                           plusw1	equ	0xFE3
 28519                           fsr1h	equ	0xFE2
 28520                           fsr1l	equ	0xFE1
 28521                           indf2	equ	0xFDF
 28522                           postinc2	equ	0xFDE
 28523                           postdec2	equ	0xFDD
 28524                           plusw2	equ	0xFDB
 28525                           fsr2h	equ	0xFDA
 28526                           fsr2l	equ	0xFD9
 28527                           status	equ	0xFD8
 28528                           
 28529 ;; *************** function _Uart_InitUartModule *****************
 28530 ;; Defined at:
 28531 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28532 ;; Parameters:    Size  Location     Type
 28533 ;;  Module          1    wreg     unsigned char 
 28534 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 28535 ;;		 -> UartConfig(21), 
 28536 ;; Auto vars:     Size  Location     Type
 28537 ;;  Module          1   65[BANK0 ] unsigned char 
 28538 ;; Return value:  Size  Location     Type
 28539 ;;                  1    wreg      void 
 28540 ;; Registers used:
 28541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28542 ;; Tracked objects:
 28543 ;;		On entry : 0/0
 28544 ;;		On exit  : 0/0
 28545 ;;		Unchanged: 0/0
 28546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28547 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28550 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28551 ;;Total ram usage:        5 bytes
 28552 ;; Hardware stack levels used:    1
 28553 ;; Hardware stack levels required when called:   13
 28554 ;; This function calls:
 28555 ;;		_SetUartBaudRate
 28556 ;; This function is called by:
 28557 ;;		_ConfigureModem
 28558 ;;		_Mdm_MainTask
 28559 ;; This function uses a non-reentrant model
 28560 ;;
 28561                           
 28562                           	psect	text135
 28563  000ABC                     __ptext135:
 28564                           	opt stack 0
 28565  000ABC                     _Uart_InitUartModule:
 28566                           	opt stack 14
 28567                           
 28568                           ;incstack = 0
 28569                           ;Uart_InitUartModule@Module stored from wreg
 28570  000ABC  0100               	movlb	0	; () banked
 28571  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 28572                           
 28573                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 28574  000AC0  0100               	movlb	0	; () banked
 28575  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 28576  000AC4  A4D8               	btfss	status,2,c
 28577  000AC6  D0BE               	goto	l668
 28578                           
 28579                           ; BSR set to: 0
 28580                           ;uart_drv.c: 291: {
 28581                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 28582  000AC8  9C94               	bcf	3988,6,c	;volatile
 28583                           
 28584                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 28585  000ACA  8E94               	bsf	3988,7,c	;volatile
 28586                           
 28587                           ; BSR set to: 0
 28588                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 28589  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28590  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28591  000AD4  0E01               	movlw	1
 28592  000AD6  ECB5  F014         	call	_SetUartBaudRate
 28593                           
 28594                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 28595  000ADA  0E00               	movlw	0
 28596  000ADC  6EAD               	movwf	4013,c	;volatile
 28597                           
 28598                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28599  000ADE  0100               	movlb	0	; () banked
 28600  000AE0  EE20 F004          	lfsr	2,4
 28601  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28602  000AE6  26D9               	addwf	fsr2l,f,c
 28603  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28604  000AEA  22DA               	addwfc	fsr2h,f,c
 28605  000AEC  50DF               	movf	indf2,w,c
 28606  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28607  000AF0  0E06               	movlw	6
 28608  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28609  000AF4                     u13685:
 28610  000AF4  90D8               	bcf	status,0,c
 28611  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28612  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28613  000AFA  D7FC               	goto	u13685
 28614  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28615  000AFE  12AD               	iorwf	4013,f,c	;volatile
 28616                           
 28617                           ; BSR set to: 0
 28618                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28619  000B00  EE20 F006          	lfsr	2,6
 28620  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28621  000B06  26D9               	addwf	fsr2l,f,c
 28622  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28623  000B0A  22DA               	addwfc	fsr2h,f,c
 28624  000B0C  50DF               	movf	indf2,w,c
 28625  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28626  000B10  0E05               	movlw	5
 28627  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28628  000B14                     u13695:
 28629  000B14  90D8               	bcf	status,0,c
 28630  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28631  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28632  000B1A  D7FC               	goto	u13695
 28633  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28634  000B1E  12AD               	iorwf	4013,f,c	;volatile
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 28638  000B20  EE20 F001          	lfsr	2,1
 28639  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28640  000B26  26D9               	addwf	fsr2l,f,c
 28641  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28642  000B2A  22DA               	addwfc	fsr2h,f,c
 28643  000B2C  50DF               	movf	indf2,w,c
 28644  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28645  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28646  000B32  0BF0               	andlw	240
 28647  000B34  12AD               	iorwf	4013,f,c	;volatile
 28648                           
 28649                           ; BSR set to: 0
 28650                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28651  000B36  EE20 F008          	lfsr	2,8
 28652  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28653  000B3C  26D9               	addwf	fsr2l,f,c
 28654  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28655  000B40  22DA               	addwfc	fsr2h,f,c
 28656  000B42  50DF               	movf	indf2,w,c
 28657  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28658  000B46  90D8               	bcf	status,0,c
 28659  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28660  000B4A  90D8               	bcf	status,0,c
 28661  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28662  000B4E  90D8               	bcf	status,0,c
 28663  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28664  000B52  12AD               	iorwf	4013,f,c	;volatile
 28665                           
 28666                           ; BSR set to: 0
 28667                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28668  000B54  EE20 F003          	lfsr	2,3
 28669  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28670  000B5A  26D9               	addwf	fsr2l,f,c
 28671  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28672  000B5E  22DA               	addwfc	fsr2h,f,c
 28673  000B60  50DF               	movf	indf2,w,c
 28674  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28675  000B64  90D8               	bcf	status,0,c
 28676  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28677  000B68  90D8               	bcf	status,0,c
 28678  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28679  000B6C  12AD               	iorwf	4013,f,c	;volatile
 28680                           
 28681                           ; BSR set to: 0
 28682                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 28683  000B6E  0E00               	movlw	0
 28684  000B70  6EAC               	movwf	4012,c	;volatile
 28685                           
 28686                           ; BSR set to: 0
 28687                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28688  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28689  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28690  000B7A  50DF               	movf	indf2,w,c
 28691  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28692  000B7E  0E00               	movlw	0
 28693  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28694  000B82  0E80               	movlw	128
 28695  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28696  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28697  000B88  12AC               	iorwf	4012,f,c	;volatile
 28698                           
 28699                           ; BSR set to: 0
 28700                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28701  000B8A  EE20 F005          	lfsr	2,5
 28702  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28703  000B90  26D9               	addwf	fsr2l,f,c
 28704  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28705  000B94  22DA               	addwfc	fsr2h,f,c
 28706  000B96  50DF               	movf	indf2,w,c
 28707  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28708  000B9A  0E06               	movlw	6
 28709  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28710  000B9E                     u13705:
 28711  000B9E  90D8               	bcf	status,0,c
 28712  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28713  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28714  000BA4  D7FC               	goto	u13705
 28715  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28716  000BA8  12AC               	iorwf	4012,f,c	;volatile
 28717                           
 28718                           ; BSR set to: 0
 28719                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28720  000BAA  EE20 F007          	lfsr	2,7
 28721  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28722  000BB0  26D9               	addwf	fsr2l,f,c
 28723  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28724  000BB4  22DA               	addwfc	fsr2h,f,c
 28725  000BB6  50DF               	movf	indf2,w,c
 28726  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28727  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28728  000BBC  0BF0               	andlw	240
 28729  000BBE  12AC               	iorwf	4012,f,c	;volatile
 28730                           
 28731                           ; BSR set to: 0
 28732                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 28733  000BC0  0E00               	movlw	0
 28734  000BC2  6E7E               	movwf	3966,c	;volatile
 28735                           
 28736                           ; BSR set to: 0
 28737                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28738  000BC4  EE20 F002          	lfsr	2,2
 28739  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28740  000BCA  26D9               	addwf	fsr2l,f,c
 28741  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28742  000BCE  22DA               	addwfc	fsr2h,f,c
 28743  000BD0  50DF               	movf	indf2,w,c
 28744  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28745  000BD4  90D8               	bcf	status,0,c
 28746  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28747  000BD8  90D8               	bcf	status,0,c
 28748  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28749  000BDC  90D8               	bcf	status,0,c
 28750  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28751  000BE0  127E               	iorwf	3966,f,c	;volatile
 28752                           
 28753                           ; BSR set to: 0
 28754                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28755  000BE2  EE20 F00A          	lfsr	2,10
 28756  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28757  000BE8  26D9               	addwf	fsr2l,f,c
 28758  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28759  000BEC  22DA               	addwfc	fsr2h,f,c
 28760  000BEE  50DF               	movf	indf2,w,c
 28761  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28762  000BF2  90D8               	bcf	status,0,c
 28763  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28764  000BF6  127E               	iorwf	3966,f,c	;volatile
 28765                           
 28766                           ; BSR set to: 0
 28767                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28768  000BF8  EE20 F009          	lfsr	2,9
 28769  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28770  000BFE  26D9               	addwf	fsr2l,f,c
 28771  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28772  000C02  22DA               	addwfc	fsr2h,f,c
 28773  000C04  50DF               	movf	indf2,w,c
 28774  000C06  127E               	iorwf	3966,f,c	;volatile
 28775                           
 28776                           ; BSR set to: 0
 28777                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 28778  000C08  EE20 F00B          	lfsr	2,11
 28779  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28780  000C0E  26D9               	addwf	fsr2l,f,c
 28781  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28782  000C12  22DA               	addwfc	fsr2h,f,c
 28783  000C14  50DF               	movf	indf2,w,c
 28784  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28785  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28786  000C1A  509D               	movf	3997,w,c	;volatile
 28787  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28788  000C1E  0BEF               	andlw	-17
 28789  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28790  000C22  6E9D               	movwf	3997,c	;volatile
 28791                           
 28792                           ; BSR set to: 0
 28793                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 28794  000C24  EE20 F00C          	lfsr	2,12
 28795  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28796  000C2A  26D9               	addwf	fsr2l,f,c
 28797  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28798  000C2E  22DA               	addwfc	fsr2h,f,c
 28799  000C30  50DF               	movf	indf2,w,c
 28800  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28801  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28802  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28803  000C38  509D               	movf	3997,w,c	;volatile
 28804  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28805  000C3C  0BDF               	andlw	-33
 28806  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28807  000C40  6E9D               	movwf	3997,c	;volatile
 28808                           
 28809                           ;uart_drv.c: 326: }
 28810  000C42  0012               	return	
 28811  000C44                     l668:
 28812                           
 28813                           ; BSR set to: 0
 28814                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 28815                           
 28816                           ; BSR set to: 0
 28817  000C44  0E02               	movlw	2
 28818  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 28819  000C48  A4D8               	btfss	status,2,c
 28820  000C4A  0012               	return	
 28821                           
 28822                           ; BSR set to: 0
 28823                           ;uart_drv.c: 328: {
 28824                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 28825  000C4C  9094               	bcf	3988,0,c	;volatile
 28826                           
 28827                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 28828  000C4E  8294               	bsf	3988,1,c	;volatile
 28829                           
 28830                           ; BSR set to: 0
 28831                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 28832  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28833  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28834  000C58  0E02               	movlw	2
 28835  000C5A  ECB5  F014         	call	_SetUartBaudRate
 28836                           
 28837                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 28838  000C5E  0E00               	movlw	0
 28839  000C60  6EA8               	movwf	4008,c	;volatile
 28840                           
 28841                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28842  000C62  0100               	movlb	0	; () banked
 28843  000C64  EE20 F004          	lfsr	2,4
 28844  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28845  000C6A  26D9               	addwf	fsr2l,f,c
 28846  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28847  000C6E  22DA               	addwfc	fsr2h,f,c
 28848  000C70  50DF               	movf	indf2,w,c
 28849  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28850  000C74  0E06               	movlw	6
 28851  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28852  000C78                     u13725:
 28853  000C78  90D8               	bcf	status,0,c
 28854  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28855  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28856  000C7E  D7FC               	goto	u13725
 28857  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28858  000C82  12A8               	iorwf	4008,f,c	;volatile
 28859                           
 28860                           ; BSR set to: 0
 28861                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28862  000C84  EE20 F006          	lfsr	2,6
 28863  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28864  000C8A  26D9               	addwf	fsr2l,f,c
 28865  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28866  000C8E  22DA               	addwfc	fsr2h,f,c
 28867  000C90  50DF               	movf	indf2,w,c
 28868  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28869  000C94  0E05               	movlw	5
 28870  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28871  000C98                     u13735:
 28872  000C98  90D8               	bcf	status,0,c
 28873  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28874  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28875  000C9E  D7FC               	goto	u13735
 28876  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28877  000CA2  12A8               	iorwf	4008,f,c	;volatile
 28878                           
 28879                           ; BSR set to: 0
 28880                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 28881  000CA4  EE20 F001          	lfsr	2,1
 28882  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28883  000CAA  26D9               	addwf	fsr2l,f,c
 28884  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28885  000CAE  22DA               	addwfc	fsr2h,f,c
 28886  000CB0  50DF               	movf	indf2,w,c
 28887  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28888  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28889  000CB6  0BF0               	andlw	240
 28890  000CB8  12A8               	iorwf	4008,f,c	;volatile
 28891                           
 28892                           ; BSR set to: 0
 28893                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28894  000CBA  EE20 F008          	lfsr	2,8
 28895  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28896  000CC0  26D9               	addwf	fsr2l,f,c
 28897  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28898  000CC4  22DA               	addwfc	fsr2h,f,c
 28899  000CC6  50DF               	movf	indf2,w,c
 28900  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28901  000CCA  90D8               	bcf	status,0,c
 28902  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28903  000CCE  90D8               	bcf	status,0,c
 28904  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28905  000CD2  90D8               	bcf	status,0,c
 28906  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28907  000CD6  12A8               	iorwf	4008,f,c	;volatile
 28908                           
 28909                           ; BSR set to: 0
 28910                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28911  000CD8  EE20 F003          	lfsr	2,3
 28912  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28913  000CDE  26D9               	addwf	fsr2l,f,c
 28914  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28915  000CE2  22DA               	addwfc	fsr2h,f,c
 28916  000CE4  50DF               	movf	indf2,w,c
 28917  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28918  000CE8  90D8               	bcf	status,0,c
 28919  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28920  000CEC  90D8               	bcf	status,0,c
 28921  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28922  000CF0  12A8               	iorwf	4008,f,c	;volatile
 28923                           
 28924                           ; BSR set to: 0
 28925                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 28926  000CF2  0E00               	movlw	0
 28927  000CF4  6E9C               	movwf	3996,c	;volatile
 28928                           
 28929                           ; BSR set to: 0
 28930                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28931  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28932  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28933  000CFE  50DF               	movf	indf2,w,c
 28934  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28935  000D02  0E00               	movlw	0
 28936  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28937  000D06  0E80               	movlw	128
 28938  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28939  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28940  000D0C  129C               	iorwf	3996,f,c	;volatile
 28941                           
 28942                           ; BSR set to: 0
 28943                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28944  000D0E  EE20 F005          	lfsr	2,5
 28945  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28946  000D14  26D9               	addwf	fsr2l,f,c
 28947  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28948  000D18  22DA               	addwfc	fsr2h,f,c
 28949  000D1A  50DF               	movf	indf2,w,c
 28950  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28951  000D1E  0E06               	movlw	6
 28952  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28953  000D22                     u13745:
 28954  000D22  90D8               	bcf	status,0,c
 28955  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28956  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28957  000D28  D7FC               	goto	u13745
 28958  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28959  000D2C  129C               	iorwf	3996,f,c	;volatile
 28960                           
 28961                           ; BSR set to: 0
 28962                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28963  000D2E  EE20 F007          	lfsr	2,7
 28964  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28965  000D34  26D9               	addwf	fsr2l,f,c
 28966  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28967  000D38  22DA               	addwfc	fsr2h,f,c
 28968  000D3A  50DF               	movf	indf2,w,c
 28969  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28970  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28971  000D40  0BF0               	andlw	240
 28972  000D42  129C               	iorwf	3996,f,c	;volatile
 28973                           
 28974                           ; BSR set to: 0
 28975                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 28976  000D44  0E00               	movlw	0
 28977  000D46  6E7C               	movwf	3964,c	;volatile
 28978                           
 28979                           ; BSR set to: 0
 28980                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28981  000D48  EE20 F002          	lfsr	2,2
 28982  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28983  000D4E  26D9               	addwf	fsr2l,f,c
 28984  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28985  000D52  22DA               	addwfc	fsr2h,f,c
 28986  000D54  50DF               	movf	indf2,w,c
 28987  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28988  000D58  90D8               	bcf	status,0,c
 28989  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28990  000D5C  90D8               	bcf	status,0,c
 28991  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28992  000D60  90D8               	bcf	status,0,c
 28993  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28994  000D64  127C               	iorwf	3964,f,c	;volatile
 28995                           
 28996                           ; BSR set to: 0
 28997                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28998  000D66  EE20 F00A          	lfsr	2,10
 28999  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29000  000D6C  26D9               	addwf	fsr2l,f,c
 29001  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29002  000D70  22DA               	addwfc	fsr2h,f,c
 29003  000D72  50DF               	movf	indf2,w,c
 29004  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29005  000D76  90D8               	bcf	status,0,c
 29006  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29007  000D7A  127C               	iorwf	3964,f,c	;volatile
 29008                           
 29009                           ; BSR set to: 0
 29010                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29011  000D7C  EE20 F009          	lfsr	2,9
 29012  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29013  000D82  26D9               	addwf	fsr2l,f,c
 29014  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29015  000D86  22DA               	addwfc	fsr2h,f,c
 29016  000D88  50DF               	movf	indf2,w,c
 29017  000D8A  127C               	iorwf	3964,f,c	;volatile
 29018                           
 29019                           ; BSR set to: 0
 29020                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 29021  000D8C  EE20 F00B          	lfsr	2,11
 29022  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29023  000D92  26D9               	addwf	fsr2l,f,c
 29024  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29025  000D96  22DA               	addwfc	fsr2h,f,c
 29026  000D98  50DF               	movf	indf2,w,c
 29027  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29028  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29029  000D9E  50A3               	movf	4003,w,c	;volatile
 29030  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29031  000DA2  0BEF               	andlw	-17
 29032  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29033  000DA6  6EA3               	movwf	4003,c	;volatile
 29034                           
 29035                           ; BSR set to: 0
 29036                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 29037  000DA8  EE20 F00C          	lfsr	2,12
 29038  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29039  000DAE  26D9               	addwf	fsr2l,f,c
 29040  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29041  000DB2  22DA               	addwfc	fsr2h,f,c
 29042  000DB4  50DF               	movf	indf2,w,c
 29043  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29044  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29045  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29046  000DBC  50A3               	movf	4003,w,c	;volatile
 29047  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29048  000DC0  0BDF               	andlw	-33
 29049  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29050  000DC4  6EA3               	movwf	4003,c	;volatile
 29051                           
 29052                           ; BSR set to: 0
 29053  000DC6  0012               	return	
 29054  000DC8                     __end_of_Uart_InitUartModule:
 29055                           	opt stack 0
 29056                           tosu	equ	0xFFF
 29057                           tosh	equ	0xFFE
 29058                           tosl	equ	0xFFD
 29059                           pclath	equ	0xFFA
 29060                           tblptru	equ	0xFF8
 29061                           tblptrh	equ	0xFF7
 29062                           tblptrl	equ	0xFF6
 29063                           tablat	equ	0xFF5
 29064                           prodh	equ	0xFF4
 29065                           prodl	equ	0xFF3
 29066                           intcon	equ	0xFF2
 29067                           intcon2	equ	0xFF1
 29068                           intcon3	equ	0xFF0
 29069                           indf0	equ	0xFEF
 29070                           postinc0	equ	0xFEE
 29071                           plusw0	equ	0xFEB
 29072                           fsr0h	equ	0xFEA
 29073                           fsr0l	equ	0xFE9
 29074                           wreg	equ	0xFE8
 29075                           indf1	equ	0xFE7
 29076                           postinc1	equ	0xFE6
 29077                           postdec1	equ	0xFE5
 29078                           plusw1	equ	0xFE3
 29079                           fsr1h	equ	0xFE2
 29080                           fsr1l	equ	0xFE1
 29081                           indf2	equ	0xFDF
 29082                           postinc2	equ	0xFDE
 29083                           postdec2	equ	0xFDD
 29084                           plusw2	equ	0xFDB
 29085                           fsr2h	equ	0xFDA
 29086                           fsr2l	equ	0xFD9
 29087                           status	equ	0xFD8
 29088                           
 29089 ;; *************** function _SetUartBaudRate *****************
 29090 ;; Defined at:
 29091 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29092 ;; Parameters:    Size  Location     Type
 29093 ;;  Module          1    wreg     unsigned char 
 29094 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 29095 ;;		 -> UartConfig(21), 
 29096 ;; Auto vars:     Size  Location     Type
 29097 ;;  Module          1   57[BANK0 ] unsigned char 
 29098 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 29099 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 29100 ;; Return value:  Size  Location     Type
 29101 ;;                  1    wreg      void 
 29102 ;; Registers used:
 29103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29104 ;; Tracked objects:
 29105 ;;		On entry : 0/0
 29106 ;;		On exit  : 0/0
 29107 ;;		Unchanged: 0/0
 29108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29110 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29112 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29113 ;;Total ram usage:        7 bytes
 29114 ;; Hardware stack levels used:    1
 29115 ;; Hardware stack levels required when called:   12
 29116 ;; This function calls:
 29117 ;;		___lldiv
 29118 ;;		___lmul
 29119 ;; This function is called by:
 29120 ;;		_Uart_InitUartModule
 29121 ;; This function uses a non-reentrant model
 29122 ;;
 29123                           
 29124                           	psect	text136
 29125  00296A                     __ptext136:
 29126                           	opt stack 0
 29127  00296A                     _SetUartBaudRate:
 29128                           	opt stack 14
 29129                           
 29130                           ; BSR set to: 0
 29131                           ;incstack = 0
 29132                           ;SetUartBaudRate@Module stored from wreg
 29133  00296A  0100               	movlb	0	; () banked
 29134  00296C  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 29135                           
 29136                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 29137  00296E  0E00               	movlw	0
 29138  002970  0100               	movlb	0	; () banked
 29139  002972  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29140  002974  0E00               	movlw	0
 29141  002976  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29142                           
 29143                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 29144  002978  0E00               	movlw	0
 29145  00297A  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29146                           
 29147                           ; BSR set to: 0
 29148                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 29149  00297C  EE20 F002          	lfsr	2,2
 29150  002980  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29151  002982  26D9               	addwf	fsr2l,f,c
 29152  002984  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29153  002986  22DA               	addwfc	fsr2h,f,c
 29154  002988  50DF               	movf	indf2,w,c
 29155  00298A  A4D8               	btfss	status,2,c
 29156  00298C  D00B               	goto	l625
 29157                           
 29158                           ; BSR set to: 0
 29159  00298E  EE20 F002          	lfsr	2,2
 29160  002992  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29161  002994  26D9               	addwf	fsr2l,f,c
 29162  002996  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29163  002998  22DA               	addwfc	fsr2h,f,c
 29164  00299A  50DF               	movf	indf2,w,c
 29165  00299C  A4D8               	btfss	status,2,c
 29166  00299E  D002               	goto	l625
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;uart_drv.c: 128: {
 29170                           ;uart_drv.c: 129: DivisionFactor = 64;
 29171  0029A0  0E40               	movlw	64
 29172  0029A2  D039               	goto	L66
 29173  0029A4                     l625:
 29174                           
 29175                           ; BSR set to: 0
 29176                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 29177                           
 29178                           ; BSR set to: 0
 29179  0029A4  EE20 F002          	lfsr	2,2
 29180  0029A8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29181  0029AA  26D9               	addwf	fsr2l,f,c
 29182  0029AC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29183  0029AE  22DA               	addwfc	fsr2h,f,c
 29184  0029B0  04DE               	decf	postinc2,w,c
 29185  0029B2  A4D8               	btfss	status,2,c
 29186  0029B4  D009               	goto	l627
 29187                           
 29188                           ; BSR set to: 0
 29189  0029B6  EE20 F002          	lfsr	2,2
 29190  0029BA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29191  0029BC  26D9               	addwf	fsr2l,f,c
 29192  0029BE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29193  0029C0  22DA               	addwfc	fsr2h,f,c
 29194  0029C2  50DF               	movf	indf2,w,c
 29195  0029C4  B4D8               	btfsc	status,2,c
 29196  0029C6  D012               	goto	u12770
 29197  0029C8                     l627:
 29198                           
 29199                           ; BSR set to: 0
 29200                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29201                           
 29202                           ; BSR set to: 0
 29203  0029C8  EE20 F002          	lfsr	2,2
 29204  0029CC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29205  0029CE  26D9               	addwf	fsr2l,f,c
 29206  0029D0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29207  0029D2  22DA               	addwfc	fsr2h,f,c
 29208  0029D4  50DF               	movf	indf2,w,c
 29209  0029D6  A4D8               	btfss	status,2,c
 29210  0029D8  D00B               	goto	l629
 29211                           
 29212                           ; BSR set to: 0
 29213  0029DA  EE20 F002          	lfsr	2,2
 29214  0029DE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29215  0029E0  26D9               	addwf	fsr2l,f,c
 29216  0029E2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29217  0029E4  22DA               	addwfc	fsr2h,f,c
 29218  0029E6  04DE               	decf	postinc2,w,c
 29219  0029E8  A4D8               	btfss	status,2,c
 29220  0029EA  D002               	goto	l629
 29221  0029EC                     u12770:
 29222                           
 29223                           ; BSR set to: 0
 29224                           ;uart_drv.c: 136: {
 29225                           ;uart_drv.c: 137: DivisionFactor = 16;
 29226  0029EC  0E10               	movlw	16
 29227  0029EE  D013               	goto	L66
 29228  0029F0                     l629:
 29229                           
 29230                           ; BSR set to: 0
 29231                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29232                           
 29233                           ; BSR set to: 0
 29234  0029F0  EE20 F002          	lfsr	2,2
 29235  0029F4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29236  0029F6  26D9               	addwf	fsr2l,f,c
 29237  0029F8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29238  0029FA  22DA               	addwfc	fsr2h,f,c
 29239  0029FC  04DE               	decf	postinc2,w,c
 29240  0029FE  A4D8               	btfss	status,2,c
 29241  002A00  D00B               	goto	l631
 29242                           
 29243                           ; BSR set to: 0
 29244  002A02  EE20 F002          	lfsr	2,2
 29245  002A06  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29246  002A08  26D9               	addwf	fsr2l,f,c
 29247  002A0A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29248  002A0C  22DA               	addwfc	fsr2h,f,c
 29249  002A0E  04DE               	decf	postinc2,w,c
 29250  002A10  A4D8               	btfss	status,2,c
 29251  002A12  D002               	goto	l631
 29252                           
 29253                           ; BSR set to: 0
 29254                           ;uart_drv.c: 140: {
 29255                           ;uart_drv.c: 141: DivisionFactor = 4;
 29256  002A14  0E04               	movlw	4
 29257  002A16                     L66:
 29258  002A16  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29259  002A18                     l631:
 29260                           
 29261                           ; BSR set to: 0
 29262                           ;uart_drv.c: 146: }
 29263                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 29264                           
 29265                           ; BSR set to: 0
 29266                           
 29267                           ; BSR set to: 0
 29268                           
 29269                           ; BSR set to: 0
 29270                           
 29271                           ; BSR set to: 0
 29272                           
 29273                           ;uart_drv.c: 143: else
 29274                           ;uart_drv.c: 144: {
 29275                           
 29276                           ; BSR set to: 0
 29277  002A18  EE20 F00D          	lfsr	2,13
 29278  002A1C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29279  002A1E  26D9               	addwf	fsr2l,f,c
 29280  002A20  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29281  002A22  22DA               	addwfc	fsr2h,f,c
 29282  002A24  CFDE F089          	movff	postinc2,___lldiv@dividend
 29283  002A28  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 29284  002A2C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 29285  002A30  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 29286  002A34  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 29287  002A36  6F7D               	movwf	___lmul@multiplier& (0+255),b
 29288  002A38  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 29289  002A3A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 29290  002A3C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 29291  002A3E  EE20 F011          	lfsr	2,17
 29292  002A42  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29293  002A44  26D9               	addwf	fsr2l,f,c
 29294  002A46  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29295  002A48  22DA               	addwfc	fsr2h,f,c
 29296  002A4A  CFDE F081          	movff	postinc2,___lmul@multiplicand
 29297  002A4E  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 29298  002A52  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 29299  002A56  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 29300  002A5A  EC0D  F02D         	call	___lmul	;wreg free
 29301  002A5E  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 29302  002A62  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 29303  002A66  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 29304  002A6A  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 29305  002A6E  EC87  F029         	call	___lldiv	;wreg free
 29306  002A72  0EFF               	movlw	255
 29307  002A74  0100               	movlb	0	; () banked
 29308  002A76  2589               	addwf	?___lldiv& (0+255),w,b
 29309  002A78  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29310  002A7A  0EFF               	movlw	255
 29311  002A7C  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 29312  002A7E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 29316  002A80  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 29317  002A82  A4D8               	btfss	status,2,c
 29318  002A84  D005               	goto	l633
 29319                           
 29320                           ; BSR set to: 0
 29321                           ;uart_drv.c: 152: {
 29322                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29323  002A86  0E00               	movlw	0
 29324  002A88  6E7F               	movwf	3967,c	;volatile
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29328  002A8A  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 29329                           
 29330                           ;uart_drv.c: 156: }
 29331  002A8E  0012               	return	
 29332  002A90                     l633:
 29333                           
 29334                           ; BSR set to: 0
 29335                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 29336                           
 29337                           ; BSR set to: 0
 29338  002A90  0E02               	movlw	2
 29339  002A92  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 29340  002A94  A4D8               	btfss	status,2,c
 29341  002A96  0012               	return	
 29342                           
 29343                           ; BSR set to: 0
 29344                           ;uart_drv.c: 158: {
 29345                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29346  002A98  0E00               	movlw	0
 29347  002A9A  6E7D               	movwf	3965,c	;volatile
 29348                           
 29349                           ; BSR set to: 0
 29350                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29351  002A9C  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 29352                           
 29353                           ; BSR set to: 0
 29354  002AA0  0012               	return	
 29355  002AA2                     __end_of_SetUartBaudRate:
 29356                           	opt stack 0
 29357                           tosu	equ	0xFFF
 29358                           tosh	equ	0xFFE
 29359                           tosl	equ	0xFFD
 29360                           pclath	equ	0xFFA
 29361                           tblptru	equ	0xFF8
 29362                           tblptrh	equ	0xFF7
 29363                           tblptrl	equ	0xFF6
 29364                           tablat	equ	0xFF5
 29365                           prodh	equ	0xFF4
 29366                           prodl	equ	0xFF3
 29367                           intcon	equ	0xFF2
 29368                           intcon2	equ	0xFF1
 29369                           intcon3	equ	0xFF0
 29370                           indf0	equ	0xFEF
 29371                           postinc0	equ	0xFEE
 29372                           plusw0	equ	0xFEB
 29373                           fsr0h	equ	0xFEA
 29374                           fsr0l	equ	0xFE9
 29375                           wreg	equ	0xFE8
 29376                           indf1	equ	0xFE7
 29377                           postinc1	equ	0xFE6
 29378                           postdec1	equ	0xFE5
 29379                           plusw1	equ	0xFE3
 29380                           fsr1h	equ	0xFE2
 29381                           fsr1l	equ	0xFE1
 29382                           indf2	equ	0xFDF
 29383                           postinc2	equ	0xFDE
 29384                           postdec2	equ	0xFDD
 29385                           plusw2	equ	0xFDB
 29386                           fsr2h	equ	0xFDA
 29387                           fsr2l	equ	0xFD9
 29388                           status	equ	0xFD8
 29389                           
 29390 ;; *************** function ___lmul *****************
 29391 ;; Defined at:
 29392 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 29393 ;; Parameters:    Size  Location     Type
 29394 ;;  multiplier      4   29[BANK0 ] unsigned long 
 29395 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 29396 ;; Auto vars:     Size  Location     Type
 29397 ;;  product         4   37[BANK0 ] unsigned long 
 29398 ;; Return value:  Size  Location     Type
 29399 ;;                  4   29[BANK0 ] unsigned long 
 29400 ;; Registers used:
 29401 ;;		wreg, status,2, status,0
 29402 ;; Tracked objects:
 29403 ;;		On entry : 0/0
 29404 ;;		On exit  : 0/0
 29405 ;;		Unchanged: 0/0
 29406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29407 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29408 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29410 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29411 ;;Total ram usage:       12 bytes
 29412 ;; Hardware stack levels used:    1
 29413 ;; Hardware stack levels required when called:   11
 29414 ;; This function calls:
 29415 ;;		Nothing
 29416 ;; This function is called by:
 29417 ;;		_Tmr_TmrBPrSet
 29418 ;;		_SetUartBaudRate
 29419 ;;		_strtol
 29420 ;; This function uses a non-reentrant model
 29421 ;;
 29422                           
 29423                           	psect	text137
 29424  005A1A                     __ptext137:
 29425                           	opt stack 0
 29426  005A1A                     ___lmul:
 29427                           	opt stack 15
 29428                           
 29429                           ; BSR set to: 0
 29430                           ;incstack = 0
 29431  005A1A  0E00               	movlw	0
 29432  005A1C  0100               	movlb	0	; () banked
 29433  005A1E  6F85               	movwf	___lmul@product& (0+255),b
 29434  005A20  0E00               	movlw	0
 29435  005A22  6F86               	movwf	(___lmul@product+1)& (0+255),b
 29436  005A24  0E00               	movlw	0
 29437  005A26  6F87               	movwf	(___lmul@product+2)& (0+255),b
 29438  005A28  0E00               	movlw	0
 29439  005A2A  6F88               	movwf	(___lmul@product+3)& (0+255),b
 29440  005A2C                     
 29441                           ; BSR set to: 0
 29442                           
 29443                           ; BSR set to: 0
 29444  005A2C  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 29445  005A2E  D008               	goto	l2947
 29446                           
 29447                           ; BSR set to: 0
 29448  005A30  5181               	movf	___lmul@multiplicand& (0+255),w,b
 29449  005A32  2785               	addwf	___lmul@product& (0+255),f,b
 29450  005A34  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29451  005A36  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 29452  005A38  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29453  005A3A  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 29454  005A3C  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29455  005A3E  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 29456  005A40                     l2947:
 29457                           
 29458                           ; BSR set to: 0
 29459                           
 29460                           ; BSR set to: 0
 29461  005A40  90D8               	bcf	status,0,c
 29462  005A42  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 29463  005A44  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29464  005A46  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29465  005A48  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29466                           
 29467                           ; BSR set to: 0
 29468  005A4A  90D8               	bcf	status,0,c
 29469  005A4C  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29470  005A4E  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29471  005A50  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29472  005A52  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 29473  005A54  517D               	movf	___lmul@multiplier& (0+255),w,b
 29474  005A56  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29475  005A58  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29476  005A5A  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29477  005A5C  A4D8               	btfss	status,2,c
 29478  005A5E  D7E6               	goto	l2946
 29479                           
 29480                           ; BSR set to: 0
 29481  005A60  C085  F07D         	movff	___lmul@product,?___lmul
 29482  005A64  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 29483  005A68  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 29484  005A6C  C088  F080         	movff	___lmul@product+3,?___lmul+3
 29485                           
 29486                           ; BSR set to: 0
 29487  005A70  0012               	return		;funcret
 29488  005A72                     __end_of___lmul:
 29489                           	opt stack 0
 29490                           tosu	equ	0xFFF
 29491                           tosh	equ	0xFFE
 29492                           tosl	equ	0xFFD
 29493                           pclath	equ	0xFFA
 29494                           tblptru	equ	0xFF8
 29495                           tblptrh	equ	0xFF7
 29496                           tblptrl	equ	0xFF6
 29497                           tablat	equ	0xFF5
 29498                           prodh	equ	0xFF4
 29499                           prodl	equ	0xFF3
 29500                           intcon	equ	0xFF2
 29501                           intcon2	equ	0xFF1
 29502                           intcon3	equ	0xFF0
 29503                           indf0	equ	0xFEF
 29504                           postinc0	equ	0xFEE
 29505                           plusw0	equ	0xFEB
 29506                           fsr0h	equ	0xFEA
 29507                           fsr0l	equ	0xFE9
 29508                           wreg	equ	0xFE8
 29509                           indf1	equ	0xFE7
 29510                           postinc1	equ	0xFE6
 29511                           postdec1	equ	0xFE5
 29512                           plusw1	equ	0xFE3
 29513                           fsr1h	equ	0xFE2
 29514                           fsr1l	equ	0xFE1
 29515                           indf2	equ	0xFDF
 29516                           postinc2	equ	0xFDE
 29517                           postdec2	equ	0xFDD
 29518                           plusw2	equ	0xFDB
 29519                           fsr2h	equ	0xFDA
 29520                           fsr2l	equ	0xFD9
 29521                           status	equ	0xFD8
 29522                           
 29523 ;; *************** function _UartSetConfigLow *****************
 29524 ;; Defined at:
 29525 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29526 ;; Parameters:    Size  Location     Type
 29527 ;;		None
 29528 ;; Auto vars:     Size  Location     Type
 29529 ;;		None
 29530 ;; Return value:  Size  Location     Type
 29531 ;;                  1    wreg      void 
 29532 ;; Registers used:
 29533 ;;		wreg, status,2
 29534 ;; Tracked objects:
 29535 ;;		On entry : 0/0
 29536 ;;		On exit  : 0/0
 29537 ;;		Unchanged: 0/0
 29538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29543 ;;Total ram usage:        0 bytes
 29544 ;; Hardware stack levels used:    1
 29545 ;; Hardware stack levels required when called:   11
 29546 ;; This function calls:
 29547 ;;		Nothing
 29548 ;; This function is called by:
 29549 ;;		_ConfigureModem
 29550 ;; This function uses a non-reentrant model
 29551 ;;
 29552                           
 29553                           	psect	text138
 29554  005A72                     __ptext138:
 29555                           	opt stack 0
 29556  005A72                     _UartSetConfigLow:
 29557                           	opt stack 15
 29558                           
 29559                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 29560                           
 29561                           ; BSR set to: 0
 29562                           ;incstack = 0
 29563  005A72  0E01               	movlw	1
 29564  005A74  0103               	movlb	3	; () banked
 29565  005A76  6F28               	movwf	_UartConfig& (0+255),b
 29566                           
 29567                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 29568  005A78  0E00               	movlw	0
 29569  005A7A  6F29               	movwf	(_UartConfig+1)& (0+255),b
 29570                           
 29571                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 29572  005A7C  0E00               	movlw	0
 29573  005A7E  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 29574                           
 29575                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 29576  005A80  0E00               	movlw	0
 29577  005A82  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 29578                           
 29579                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 29580  005A84  0E00               	movlw	0
 29581  005A86  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 29582                           
 29583                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 29584  005A88  0E00               	movlw	0
 29585  005A8A  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 29586                           
 29587                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 29588  005A8C  0E01               	movlw	1
 29589  005A8E  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 29590                           
 29591                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 29592  005A90  0E01               	movlw	1
 29593  005A92  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 29594                           
 29595                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 29596  005A94  0E00               	movlw	0
 29597  005A96  6F30               	movwf	(_UartConfig+8)& (0+255),b
 29598                           
 29599                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 29600  005A98  0E00               	movlw	0
 29601  005A9A  6F31               	movwf	(_UartConfig+9)& (0+255),b
 29602                           
 29603                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 29604  005A9C  0E00               	movlw	0
 29605  005A9E  6F32               	movwf	(_UartConfig+10)& (0+255),b
 29606                           
 29607                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 29608  005AA0  0E00               	movlw	0
 29609  005AA2  6F33               	movwf	(_UartConfig+11)& (0+255),b
 29610                           
 29611                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 29612  005AA4  0E01               	movlw	1
 29613  005AA6  6F34               	movwf	(_UartConfig+12)& (0+255),b
 29614                           
 29615                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 29616  005AA8  0E00               	movlw	0
 29617  005AAA  6F35               	movwf	(_UartConfig+13)& (0+255),b
 29618  005AAC  0E6C               	movlw	108
 29619  005AAE  6F36               	movwf	(_UartConfig+14)& (0+255),b
 29620  005AB0  0EDC               	movlw	220
 29621  005AB2  6F37               	movwf	(_UartConfig+15)& (0+255),b
 29622  005AB4  0E02               	movlw	2
 29623  005AB6  6F38               	movwf	(_UartConfig+16)& (0+255),b
 29624                           
 29625                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 29626  005AB8  0E80               	movlw	128
 29627  005ABA  6F39               	movwf	(_UartConfig+17)& (0+255),b
 29628  005ABC  0E25               	movlw	37
 29629  005ABE  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 29630  005AC0  0E00               	movlw	0
 29631  005AC2  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 29632  005AC4  0E00               	movlw	0
 29633  005AC6  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 29634                           
 29635                           ; BSR set to: 3
 29636  005AC8  0012               	return		;funcret
 29637  005ACA                     __end_of_UartSetConfigLow:
 29638                           	opt stack 0
 29639                           tosu	equ	0xFFF
 29640                           tosh	equ	0xFFE
 29641                           tosl	equ	0xFFD
 29642                           pclath	equ	0xFFA
 29643                           tblptru	equ	0xFF8
 29644                           tblptrh	equ	0xFF7
 29645                           tblptrl	equ	0xFF6
 29646                           tablat	equ	0xFF5
 29647                           prodh	equ	0xFF4
 29648                           prodl	equ	0xFF3
 29649                           intcon	equ	0xFF2
 29650                           intcon2	equ	0xFF1
 29651                           intcon3	equ	0xFF0
 29652                           indf0	equ	0xFEF
 29653                           postinc0	equ	0xFEE
 29654                           plusw0	equ	0xFEB
 29655                           fsr0h	equ	0xFEA
 29656                           fsr0l	equ	0xFE9
 29657                           wreg	equ	0xFE8
 29658                           indf1	equ	0xFE7
 29659                           postinc1	equ	0xFE6
 29660                           postdec1	equ	0xFE5
 29661                           plusw1	equ	0xFE3
 29662                           fsr1h	equ	0xFE2
 29663                           fsr1l	equ	0xFE1
 29664                           indf2	equ	0xFDF
 29665                           postinc2	equ	0xFDE
 29666                           postdec2	equ	0xFDD
 29667                           plusw2	equ	0xFDB
 29668                           fsr2h	equ	0xFDA
 29669                           fsr2l	equ	0xFD9
 29670                           status	equ	0xFD8
 29671                           
 29672 ;; *************** function _CheckModem *****************
 29673 ;; Defined at:
 29674 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29675 ;; Parameters:    Size  Location     Type
 29676 ;;		None
 29677 ;; Auto vars:     Size  Location     Type
 29678 ;;		None
 29679 ;; Return value:  Size  Location     Type
 29680 ;;                  1    wreg      void 
 29681 ;; Registers used:
 29682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29683 ;; Tracked objects:
 29684 ;;		On entry : 0/0
 29685 ;;		On exit  : 0/0
 29686 ;;		Unchanged: 0/0
 29687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29692 ;;Total ram usage:        0 bytes
 29693 ;; Hardware stack levels used:    1
 29694 ;; Hardware stack levels required when called:   14
 29695 ;; This function calls:
 29696 ;;		_GenerateEvt
 29697 ;;		_OsTmr_GetTimerStatus
 29698 ;;		_OsTmr_StartTimer
 29699 ;;		_ReceiveEvt
 29700 ;;		_Uart_WriteConstString
 29701 ;; This function is called by:
 29702 ;;		_Mdm_MainTask
 29703 ;; This function uses a non-reentrant model
 29704 ;;
 29705                           
 29706                           	psect	text139
 29707  002020                     __ptext139:
 29708                           	opt stack 0
 29709  002020                     _CheckModem:
 29710                           	opt stack 13
 29711                           
 29712                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 29713                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 29714                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 29715                           
 29716                           ; BSR set to: 3
 29717                           ;incstack = 0
 29718  002020  D09C               	goto	l982
 29719  002022                     
 29720                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 29721  002022  0EF2               	movlw	low CheckModem@Timeout
 29722  002024  0100               	movlb	0	; () banked
 29723  002026  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29724  002028  0E03               	movlw	high CheckModem@Timeout
 29725  00202A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29726  00202C  0ED0               	movlw	208
 29727  00202E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29728  002030  0E07               	movlw	7
 29729  002032  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29730  002034  0E00               	movlw	0
 29731  002036  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29732  002038  0E00               	movlw	0
 29733  00203A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29734  00203C  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 29735                           
 29736                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 29737  002040  0E01               	movlw	1
 29738  002042  0101               	movlb	1	; () banked
 29739  002044  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29740                           
 29741                           ;mdm_gsm_gprs.c: 295: break;
 29742  002046  0012               	return	
 29743  002048                     
 29744                           ; BSR set to: 1
 29745                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29746                           
 29747                           ; BSR set to: 1
 29748  002048  0EF2               	movlw	low CheckModem@Timeout
 29749  00204A  0100               	movlb	0	; () banked
 29750  00204C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29751  00204E  0E03               	movlw	high CheckModem@Timeout
 29752  002050  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29753  002052  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 29754  002056  06E8               	decf	wreg,f,c
 29755  002058  A4D8               	btfss	status,2,c
 29756  00205A  0012               	return	
 29757                           
 29758                           ;mdm_gsm_gprs.c: 300: {
 29759                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 29760  00205C  0E02               	movlw	2
 29761  00205E  0101               	movlb	1	; () banked
 29762  002060  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29763                           
 29764                           ; BSR set to: 1
 29765                           ;mdm_gsm_gprs.c: 303: }
 29766                           ;mdm_gsm_gprs.c: 304: break;
 29767  002062  0012               	return	
 29768  002064                     
 29769                           ; BSR set to: 1
 29770                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 29771                           
 29772                           ; BSR set to: 1
 29773  002064  0EE6               	movlw	low STR_1
 29774  002066  0100               	movlb	0	; () banked
 29775  002068  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29776  00206A  0EFF               	movlw	high STR_1
 29777  00206C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29778  00206E  0E01               	movlw	1
 29779  002070  ECE8  F030         	call	_Uart_WriteConstString
 29780                           
 29781                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 29782  002074  0EF2               	movlw	low CheckModem@Timeout
 29783  002076  0100               	movlb	0	; () banked
 29784  002078  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29785  00207A  0E03               	movlw	high CheckModem@Timeout
 29786  00207C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29787  00207E  0ED0               	movlw	208
 29788  002080  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29789  002082  0E07               	movlw	7
 29790  002084  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29791  002086  0E00               	movlw	0
 29792  002088  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29793  00208A  0E00               	movlw	0
 29794  00208C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29795  00208E  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 29796                           
 29797                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 29798  002092  0E03               	movlw	3
 29799  002094  0101               	movlb	1	; () banked
 29800  002096  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29801                           
 29802                           ;mdm_gsm_gprs.c: 313: break;
 29803  002098  0012               	return	
 29804  00209A                     
 29805                           ; BSR set to: 1
 29806                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 29807                           
 29808                           ; BSR set to: 1
 29809  00209A  0E3C               	movlw	low _NewStringReceived
 29810  00209C  0100               	movlb	0	; () banked
 29811  00209E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29812  0020A0  0E00               	movlw	high _NewStringReceived
 29813  0020A2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29814  0020A4  EC30  F033         	call	_ReceiveEvt	;wreg free
 29815  0020A8  0900               	iorlw	0
 29816  0020AA  B4D8               	btfsc	status,2,c
 29817  0020AC  D030               	goto	l989
 29818                           
 29819                           ;mdm_gsm_gprs.c: 318: {
 29820                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 29821  0020AE  CC58  FFE8         	movff	_RxBuffer,wreg
 29822  0020B2  0A4F               	xorlw	79
 29823  0020B4  A4D8               	btfss	status,2,c
 29824  0020B6  D005               	goto	u14900
 29825  0020B8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29826  0020BC  0A4B               	xorlw	75
 29827  0020BE  B4D8               	btfsc	status,2,c
 29828  0020C0  D00A               	goto	u14920
 29829  0020C2                     u14900:
 29830  0020C2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29831  0020C6  0A4F               	xorlw	79
 29832  0020C8  A4D8               	btfss	status,2,c
 29833  0020CA  0012               	return	
 29834  0020CC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 29835  0020D0  0A4B               	xorlw	75
 29836  0020D2  A4D8               	btfss	status,2,c
 29837  0020D4  0012               	return	
 29838  0020D6                     u14920:
 29839                           
 29840                           ;mdm_gsm_gprs.c: 321: {
 29841                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 29842  0020D6  0E02               	movlw	2
 29843  0020D8  0100               	movlb	0	; () banked
 29844  0020DA  6FD1               	movwf	_MdmStatus& (0+255),b
 29845                           
 29846                           ; BSR set to: 0
 29847                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 29848  0020DC  0EE0               	movlw	low _MdmOnOffPulseRequest
 29849  0020DE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29850  0020E0  0E00               	movlw	high _MdmOnOffPulseRequest
 29851  0020E2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29852  0020E4  EC21  F035         	call	_GenerateEvt	;wreg free
 29853                           
 29854                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 29855  0020E8  0EF2               	movlw	low CheckModem@Timeout
 29856  0020EA  0100               	movlb	0	; () banked
 29857  0020EC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29858  0020EE  0E03               	movlw	high CheckModem@Timeout
 29859  0020F0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29860  0020F2  0EE8               	movlw	232
 29861  0020F4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29862  0020F6  0E03               	movlw	3
 29863  0020F8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29864  0020FA  0E00               	movlw	0
 29865  0020FC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29866  0020FE  0E00               	movlw	0
 29867  002100  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29868  002102  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 29869                           
 29870                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 29871  002106  0E04               	movlw	4
 29872  002108  0101               	movlb	1	; () banked
 29873  00210A  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29874                           
 29875                           ; BSR set to: 1
 29876                           ;mdm_gsm_gprs.c: 329: }
 29877                           ;mdm_gsm_gprs.c: 330: }
 29878  00210C  0012               	return	
 29879  00210E                     l989:
 29880                           
 29881                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29882                           
 29883                           ; BSR set to: 1
 29884  00210E  0EF2               	movlw	low CheckModem@Timeout
 29885  002110  0100               	movlb	0	; () banked
 29886  002112  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29887  002114  0E03               	movlw	high CheckModem@Timeout
 29888  002116  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29889  002118  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 29890  00211C  06E8               	decf	wreg,f,c
 29891  00211E  A4D8               	btfss	status,2,c
 29892  002120  0012               	return	
 29893                           
 29894                           ;mdm_gsm_gprs.c: 332: {
 29895                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 29896  002122  0E00               	movlw	0
 29897  002124  0100               	movlb	0	; () banked
 29898  002126  6FD1               	movwf	_MdmStatus& (0+255),b
 29899                           
 29900                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 29901  002128  0E01               	movlw	1
 29902  00212A  6E2B               	movwf	_ComChecCompleted,c
 29903                           
 29904                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 29905  00212C  0E05               	movlw	5
 29906  00212E  0101               	movlb	1	; () banked
 29907  002130  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29908                           
 29909                           ; BSR set to: 1
 29910                           ;mdm_gsm_gprs.c: 343: }
 29911                           ;mdm_gsm_gprs.c: 344: break;
 29912                           
 29913                           ; BSR set to: 1
 29914                           
 29915                           ;mdm_gsm_gprs.c: 340: else
 29916                           ;mdm_gsm_gprs.c: 341: {
 29917                           
 29918                           ; BSR set to: 1
 29919                           
 29920                           ;mdm_gsm_gprs.c: 339: }
 29921  002132  0012               	return	
 29922  002134                     
 29923                           ; BSR set to: 1
 29924                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29925                           
 29926                           ; BSR set to: 1
 29927  002134  0EF2               	movlw	low CheckModem@Timeout
 29928  002136  0100               	movlb	0	; () banked
 29929  002138  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29930  00213A  0E03               	movlw	high CheckModem@Timeout
 29931  00213C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29932  00213E  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 29933  002142  06E8               	decf	wreg,f,c
 29934  002144  A4D8               	btfss	status,2,c
 29935  002146  0012               	return	
 29936                           
 29937                           ;mdm_gsm_gprs.c: 349: {
 29938                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 29939  002148  0E00               	movlw	0
 29940  00214A  0100               	movlb	0	; () banked
 29941  00214C  6FD1               	movwf	_MdmStatus& (0+255),b
 29942                           
 29943                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 29944  00214E  0E01               	movlw	1
 29945  002150  6E2B               	movwf	_ComChecCompleted,c
 29946                           
 29947                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 29948  002152  0E05               	movlw	5
 29949  002154  0101               	movlb	1	; () banked
 29950  002156  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29951                           
 29952                           ; BSR set to: 1
 29953                           ;mdm_gsm_gprs.c: 365: }
 29954                           
 29955                           ; BSR set to: 1
 29956                           ;mdm_gsm_gprs.c: 364: break;
 29957                           
 29958                           ;mdm_gsm_gprs.c: 363: default:
 29959                           
 29960                           ; BSR set to: 1
 29961                           ;mdm_gsm_gprs.c: 361: break;
 29962                           
 29963                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 29964                           
 29965                           ; BSR set to: 1
 29966                           ;mdm_gsm_gprs.c: 356: }
 29967                           ;mdm_gsm_gprs.c: 357: break;
 29968  002158  0012               	return	
 29969  00215A                     l982:
 29970                           
 29971                           ; BSR set to: 1
 29972  00215A  0101               	movlb	1	; () banked
 29973  00215C  51F3               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 29974                           
 29975                           ; Switch size 1, requested type "space"
 29976                           ; Number of cases is 6, Range of values is 0 to 5
 29977                           ; switch strategies available:
 29978                           ; Name         Instructions Cycles
 29979                           ; simple_byte           19    10 (average)
 29980                           ;	Chosen strategy is simple_byte
 29981  00215E  0A00               	xorlw	0	; case 0
 29982  002160  B4D8               	btfsc	status,2,c
 29983  002162  D75F               	goto	l983
 29984  002164  0A01               	xorlw	1	; case 1
 29985  002166  B4D8               	btfsc	status,2,c
 29986  002168  D76F               	goto	l985
 29987  00216A  0A03               	xorlw	3	; case 2
 29988  00216C  B4D8               	btfsc	status,2,c
 29989  00216E  D77A               	goto	l987
 29990  002170  0A01               	xorlw	1	; case 3
 29991  002172  B4D8               	btfsc	status,2,c
 29992  002174  D792               	goto	l988
 29993  002176  0A07               	xorlw	7	; case 4
 29994  002178  B4D8               	btfsc	status,2,c
 29995  00217A  D7DC               	goto	l998
 29996  00217C  0A01               	xorlw	1	; case 5
 29997  00217E  0012               	return	
 29998  002180                     __end_of_CheckModem:
 29999                           	opt stack 0
 30000                           tosu	equ	0xFFF
 30001                           tosh	equ	0xFFE
 30002                           tosl	equ	0xFFD
 30003                           pclath	equ	0xFFA
 30004                           tblptru	equ	0xFF8
 30005                           tblptrh	equ	0xFF7
 30006                           tblptrl	equ	0xFF6
 30007                           tablat	equ	0xFF5
 30008                           prodh	equ	0xFF4
 30009                           prodl	equ	0xFF3
 30010                           intcon	equ	0xFF2
 30011                           intcon2	equ	0xFF1
 30012                           intcon3	equ	0xFF0
 30013                           indf0	equ	0xFEF
 30014                           postinc0	equ	0xFEE
 30015                           plusw0	equ	0xFEB
 30016                           fsr0h	equ	0xFEA
 30017                           fsr0l	equ	0xFE9
 30018                           wreg	equ	0xFE8
 30019                           indf1	equ	0xFE7
 30020                           postinc1	equ	0xFE6
 30021                           postdec1	equ	0xFE5
 30022                           plusw1	equ	0xFE3
 30023                           fsr1h	equ	0xFE2
 30024                           fsr1l	equ	0xFE1
 30025                           indf2	equ	0xFDF
 30026                           postinc2	equ	0xFDE
 30027                           postdec2	equ	0xFDD
 30028                           plusw2	equ	0xFDB
 30029                           fsr2h	equ	0xFDA
 30030                           fsr2l	equ	0xFD9
 30031                           status	equ	0xFD8
 30032                           
 30033 ;; *************** function _MdmCntSm *****************
 30034 ;; Defined at:
 30035 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30036 ;; Parameters:    Size  Location     Type
 30037 ;;		None
 30038 ;; Auto vars:     Size  Location     Type
 30039 ;;		None
 30040 ;; Return value:  Size  Location     Type
 30041 ;;                  1    wreg      void 
 30042 ;; Registers used:
 30043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30044 ;; Tracked objects:
 30045 ;;		On entry : 0/0
 30046 ;;		On exit  : 0/0
 30047 ;;		Unchanged: 0/0
 30048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30053 ;;Total ram usage:        0 bytes
 30054 ;; Hardware stack levels used:    1
 30055 ;; Hardware stack levels required when called:   12
 30056 ;; This function calls:
 30057 ;;		_InitModemInterface
 30058 ;;		_ReceiveEvt
 30059 ;; This function is called by:
 30060 ;;		_Mdm_DrvMainFn
 30061 ;; This function uses a non-reentrant model
 30062 ;;
 30063                           
 30064                           	psect	text140
 30065  00486C                     __ptext140:
 30066                           	opt stack 0
 30067  00486C                     _MdmCntSm:
 30068                           	opt stack 15
 30069                           
 30070                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 30071                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 30072                           ;mdm_drv.c: 204: switch (MdmCntState)
 30073                           
 30074                           ;incstack = 0
 30075  00486C  D045               	goto	l315
 30076  00486E                     
 30077                           ;mdm_drv.c: 208: InitModemInterface();
 30078  00486E  ECDF  F035         	call	_InitModemInterface	;wreg free
 30079                           
 30080                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 30081  004872  0E01               	movlw	1
 30082  004874  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30083                           
 30084                           ;mdm_drv.c: 211: break;
 30085  004876  0012               	return	
 30086  004878                     
 30087                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 30088  004878  0EE0               	movlw	low _MdmOnOffPulseRequest
 30089  00487A  0100               	movlb	0	; () banked
 30090  00487C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30091  00487E  0E00               	movlw	high _MdmOnOffPulseRequest
 30092  004880  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30093  004882  EC30  F033         	call	_ReceiveEvt	;wreg free
 30094  004886  0900               	iorlw	0
 30095  004888  B4D8               	btfsc	status,2,c
 30096  00488A  D009               	goto	l319
 30097                           
 30098                           ;mdm_drv.c: 216: {
 30099                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 30100  00488C  0E02               	movlw	2
 30101  00488E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30102                           
 30103                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 30104  004890  8284               	bsf	3972,1,c	;volatile
 30105                           
 30106                           ;mdm_drv.c: 222: Counter = 0;
 30107  004892  0E00               	movlw	0
 30108  004894  0102               	movlb	2	; () banked
 30109  004896  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30110  004898  0E00               	movlw	0
 30111  00489A  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 30112                           
 30113                           ;mdm_drv.c: 223: }
 30114  00489C  0012               	return	
 30115  00489E                     l319:
 30116                           
 30117                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 30118                           
 30119                           ; BSR set to: 2
 30120  00489E  0E3D               	movlw	low _MdmResetRequest
 30121  0048A0  0100               	movlb	0	; () banked
 30122  0048A2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30123  0048A4  0E00               	movlw	high _MdmResetRequest
 30124  0048A6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30125  0048A8  EC30  F033         	call	_ReceiveEvt	;wreg free
 30126  0048AC  0900               	iorlw	0
 30127  0048AE  B4D8               	btfsc	status,2,c
 30128  0048B0  0012               	return	
 30129                           
 30130                           ;mdm_drv.c: 225: {
 30131                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 30132  0048B2  0E03               	movlw	3
 30133  0048B4  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30134                           
 30135                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 30136  0048B6  8084               	bsf	3972,0,c	;volatile
 30137                           
 30138                           ;mdm_drv.c: 231: Counter = 0;
 30139  0048B8  0E00               	movlw	0
 30140  0048BA  0102               	movlb	2	; () banked
 30141  0048BC  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30142  0048BE  0E00               	movlw	0
 30143  0048C0  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 30144                           
 30145                           ; BSR set to: 2
 30146                           ;mdm_drv.c: 236: }
 30147                           ;mdm_drv.c: 237: break;
 30148                           
 30149                           ; BSR set to: 2
 30150                           
 30151                           ;mdm_drv.c: 233: else
 30152                           ;mdm_drv.c: 234: {
 30153                           
 30154                           ; BSR set to: 2
 30155                           
 30156                           ;mdm_drv.c: 232: }
 30157  0048C2  0012               	return	
 30158  0048C4                     
 30159                           ;mdm_drv.c: 241: Counter++;
 30160                           
 30161                           ; BSR set to: 2
 30162  0048C4  0102               	movlb	2	; () banked
 30163  0048C6  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30164  0048C8  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30165                           
 30166                           ; BSR set to: 2
 30167                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 30168  0048CA  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30169  0048CC  E104               	bnz	u14820
 30170  0048CE  0E96               	movlw	150
 30171  0048D0  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 30172  0048D2  A0D8               	btfss	status,0,c
 30173  0048D4  0012               	return	
 30174  0048D6                     u14820:
 30175                           
 30176                           ; BSR set to: 2
 30177                           ;mdm_drv.c: 244: {
 30178                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 30179  0048D6  9284               	bcf	3972,1,c	;volatile
 30180                           
 30181                           ; BSR set to: 2
 30182                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 30183  0048D8  0E01               	movlw	1
 30184  0048DA  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30185                           
 30186                           ; BSR set to: 2
 30187                           ;mdm_drv.c: 249: }
 30188                           ;mdm_drv.c: 250: break;
 30189  0048DC  0012               	return	
 30190  0048DE                     
 30191                           ;mdm_drv.c: 254: Counter++;
 30192                           
 30193                           ; BSR set to: 2
 30194  0048DE  0102               	movlb	2	; () banked
 30195  0048E0  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30196  0048E2  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30197                           
 30198                           ; BSR set to: 2
 30199                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 30200  0048E4  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30201  0048E6  E104               	bnz	u14830
 30202  0048E8  0E0A               	movlw	10
 30203  0048EA  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 30204  0048EC  A0D8               	btfss	status,0,c
 30205  0048EE  0012               	return	
 30206  0048F0                     u14830:
 30207                           
 30208                           ; BSR set to: 2
 30209                           ;mdm_drv.c: 257: {
 30210                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 30211  0048F0  9084               	bcf	3972,0,c	;volatile
 30212                           
 30213                           ; BSR set to: 2
 30214                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 30215  0048F2  0E01               	movlw	1
 30216  0048F4  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30217                           
 30218                           ; BSR set to: 2
 30219                           ;mdm_drv.c: 267: }
 30220                           
 30221                           ; BSR set to: 2
 30222                           ;mdm_drv.c: 266: break;
 30223                           
 30224                           ;mdm_drv.c: 265: default:
 30225                           
 30226                           ; BSR set to: 2
 30227                           ;mdm_drv.c: 262: }
 30228                           ;mdm_drv.c: 263: break;
 30229  0048F6  0012               	return	
 30230  0048F8                     l315:
 30231                           
 30232                           ; BSR set to: 2
 30233  0048F8  502E               	movf	MdmCntSm@MdmCntState,w,c
 30234                           
 30235                           ; Switch size 1, requested type "space"
 30236                           ; Number of cases is 4, Range of values is 0 to 3
 30237                           ; switch strategies available:
 30238                           ; Name         Instructions Cycles
 30239                           ; simple_byte           13     7 (average)
 30240                           ;	Chosen strategy is simple_byte
 30241  0048FA  0A00               	xorlw	0	; case 0
 30242  0048FC  B4D8               	btfsc	status,2,c
 30243  0048FE  D7B7               	goto	l316
 30244  004900  0A01               	xorlw	1	; case 1
 30245  004902  B4D8               	btfsc	status,2,c
 30246  004904  D7B9               	goto	l318
 30247  004906  0A03               	xorlw	3	; case 2
 30248  004908  B4D8               	btfsc	status,2,c
 30249  00490A  D7DC               	goto	l323
 30250  00490C  0A01               	xorlw	1	; case 3
 30251  00490E  A4D8               	btfss	status,2,c
 30252  004910  0012               	return	
 30253  004912  D7E5               	goto	l325
 30254  004914                     __end_of_MdmCntSm:
 30255                           	opt stack 0
 30256                           tosu	equ	0xFFF
 30257                           tosh	equ	0xFFE
 30258                           tosl	equ	0xFFD
 30259                           pclath	equ	0xFFA
 30260                           tblptru	equ	0xFF8
 30261                           tblptrh	equ	0xFF7
 30262                           tblptrl	equ	0xFF6
 30263                           tablat	equ	0xFF5
 30264                           prodh	equ	0xFF4
 30265                           prodl	equ	0xFF3
 30266                           intcon	equ	0xFF2
 30267                           intcon2	equ	0xFF1
 30268                           intcon3	equ	0xFF0
 30269                           indf0	equ	0xFEF
 30270                           postinc0	equ	0xFEE
 30271                           plusw0	equ	0xFEB
 30272                           fsr0h	equ	0xFEA
 30273                           fsr0l	equ	0xFE9
 30274                           wreg	equ	0xFE8
 30275                           indf1	equ	0xFE7
 30276                           postinc1	equ	0xFE6
 30277                           postdec1	equ	0xFE5
 30278                           plusw1	equ	0xFE3
 30279                           fsr1h	equ	0xFE2
 30280                           fsr1l	equ	0xFE1
 30281                           indf2	equ	0xFDF
 30282                           postinc2	equ	0xFDE
 30283                           postdec2	equ	0xFDD
 30284                           plusw2	equ	0xFDB
 30285                           fsr2h	equ	0xFDA
 30286                           fsr2l	equ	0xFD9
 30287                           status	equ	0xFD8
 30288                           
 30289 ;; *************** function _InitModemInterface *****************
 30290 ;; Defined at:
 30291 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30292 ;; Parameters:    Size  Location     Type
 30293 ;;		None
 30294 ;; Auto vars:     Size  Location     Type
 30295 ;;		None
 30296 ;; Return value:  Size  Location     Type
 30297 ;;                  1    wreg      void 
 30298 ;; Registers used:
 30299 ;;		None
 30300 ;; Tracked objects:
 30301 ;;		On entry : 0/0
 30302 ;;		On exit  : 0/0
 30303 ;;		Unchanged: 0/0
 30304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30309 ;;Total ram usage:        0 bytes
 30310 ;; Hardware stack levels used:    1
 30311 ;; Hardware stack levels required when called:   11
 30312 ;; This function calls:
 30313 ;;		Nothing
 30314 ;; This function is called by:
 30315 ;;		_MdmCntSm
 30316 ;; This function uses a non-reentrant model
 30317 ;;
 30318                           
 30319                           	psect	text141
 30320  006BBE                     __ptext141:
 30321                           	opt stack 0
 30322  006BBE                     _InitModemInterface:
 30323                           	opt stack 15
 30324                           
 30325                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 30326                           
 30327                           ;incstack = 0
 30328  006BBE  9096               	bcf	3990,0,c	;volatile
 30329                           
 30330                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 30331  006BC0  9296               	bcf	3990,1,c	;volatile
 30332                           
 30333                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 30334  006BC2  8496               	bsf	3990,2,c	;volatile
 30335  006BC4  0012               	return		;funcret
 30336  006BC6                     __end_of_InitModemInterface:
 30337                           	opt stack 0
 30338                           tosu	equ	0xFFF
 30339                           tosh	equ	0xFFE
 30340                           tosl	equ	0xFFD
 30341                           pclath	equ	0xFFA
 30342                           tblptru	equ	0xFF8
 30343                           tblptrh	equ	0xFF7
 30344                           tblptrl	equ	0xFF6
 30345                           tablat	equ	0xFF5
 30346                           prodh	equ	0xFF4
 30347                           prodl	equ	0xFF3
 30348                           intcon	equ	0xFF2
 30349                           intcon2	equ	0xFF1
 30350                           intcon3	equ	0xFF0
 30351                           indf0	equ	0xFEF
 30352                           postinc0	equ	0xFEE
 30353                           plusw0	equ	0xFEB
 30354                           fsr0h	equ	0xFEA
 30355                           fsr0l	equ	0xFE9
 30356                           wreg	equ	0xFE8
 30357                           indf1	equ	0xFE7
 30358                           postinc1	equ	0xFE6
 30359                           postdec1	equ	0xFE5
 30360                           plusw1	equ	0xFE3
 30361                           fsr1h	equ	0xFE2
 30362                           fsr1l	equ	0xFE1
 30363                           indf2	equ	0xFDF
 30364                           postinc2	equ	0xFDE
 30365                           postdec2	equ	0xFDD
 30366                           plusw2	equ	0xFDB
 30367                           fsr2h	equ	0xFDA
 30368                           fsr2l	equ	0xFD9
 30369                           status	equ	0xFD8
 30370                           
 30371 ;; *************** function _InitGprsNetwork *****************
 30372 ;; Defined at:
 30373 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30374 ;; Parameters:    Size  Location     Type
 30375 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 30376 ;;		 -> NULL(0), 
 30377 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 30378 ;; Auto vars:     Size  Location     Type
 30379 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 30380 ;;  Index           1   50[BANK1 ] unsigned char 
 30381 ;; Return value:  Size  Location     Type
 30382 ;;                  1    wreg      enum E8925
 30383 ;; Registers used:
 30384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30385 ;; Tracked objects:
 30386 ;;		On entry : 0/0
 30387 ;;		On exit  : 0/0
 30388 ;;		Unchanged: 0/0
 30389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30390 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30391 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30393 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30394 ;;Total ram usage:       56 bytes
 30395 ;; Hardware stack levels used:    1
 30396 ;; Hardware stack levels required when called:   14
 30397 ;; This function calls:
 30398 ;;		_ClearBuffer
 30399 ;;		_OsTmr_GetTimerStatus
 30400 ;;		_OsTmr_StartTimer
 30401 ;;		_ReceiveEvt
 30402 ;;		_StringCopy
 30403 ;;		_Uart_WriteConstString
 30404 ;;		_Uart_WriteString
 30405 ;; This function is called by:
 30406 ;;		_MdmHttp_MainTask
 30407 ;; This function uses a non-reentrant model
 30408 ;;
 30409                           
 30410                           	psect	text142
 30411  000DC8                     __ptext142:
 30412                           	opt stack 0
 30413  000DC8                     _InitGprsNetwork:
 30414                           	opt stack 13
 30415                           
 30416                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 30417                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 30418                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 30419                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 30420                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 30421                           
 30422                           ;incstack = 0
 30423  000DC8  0E00               	movlw	0
 30424  000DCA  0101               	movlb	1	; () banked
 30425  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30426                           
 30427                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 30428  000DCE  D154               	goto	l1219
 30429  000DD0                     
 30430                           ; BSR set to: 1
 30431                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 30432                           
 30433                           ; BSR set to: 1
 30434  000DD0  0ED9               	movlw	low _InitNetwork
 30435  000DD2  0100               	movlb	0	; () banked
 30436  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30437  000DD6  0E00               	movlw	high _InitNetwork
 30438  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30439  000DDA  EC30  F033         	call	_ReceiveEvt	;wreg free
 30440  000DDE  0900               	iorlw	0
 30441  000DE0  B4D8               	btfsc	status,2,c
 30442  000DE2  D166               	goto	l1222
 30443                           
 30444                           ;mdm_gsm_gprs_http.c: 137: {
 30445                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 30446  000DE4  0E01               	movlw	1
 30447  000DE6  D141               	goto	L106
 30448  000DE8                     
 30449                           ; BSR set to: 1
 30450                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 30451                           
 30452                           ; BSR set to: 1
 30453  000DE8  0E89               	movlw	low STR_8
 30454  000DEA  0100               	movlb	0	; () banked
 30455  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30456  000DEE  0EFE               	movlw	high STR_8
 30457  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30458  000DF2  0E01               	movlw	1
 30459  000DF4  ECE8  F030         	call	_Uart_WriteConstString
 30460                           
 30461                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 30462  000DF8  0E07               	movlw	7
 30463  000DFA  0101               	movlb	1	; () banked
 30464  000DFC  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30465                           
 30466                           ; BSR set to: 1
 30467                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 30468  000DFE  0E02               	movlw	2
 30469  000E00  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30470                           
 30471                           ; BSR set to: 1
 30472                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 30473  000E02  0EF3               	movlw	low _ConnTimeout
 30474  000E04  0100               	movlb	0	; () banked
 30475  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30476  000E08  0E02               	movlw	high _ConnTimeout
 30477  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30478  000E0C  0E20               	movlw	32
 30479  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30480  000E10  0E4E               	movlw	78
 30481  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30482  000E14  0E00               	movlw	0
 30483  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30484  000E18  0E00               	movlw	0
 30485  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30486  000E1C  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 30487  000E20  D0C7               	goto	l15723
 30488  000E22                     
 30489                           ; BSR set to: 1
 30490                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 30491                           
 30492                           ; BSR set to: 1
 30493  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 30494  000E24  0100               	movlb	0	; () banked
 30495  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30496  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 30497  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30498  000E2C  0E00               	movlw	0
 30499  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30500  000E30  0E32               	movlw	50
 30501  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30502  000E34  EC52  F032         	call	_ClearBuffer	;wreg free
 30503                           
 30504                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 30505  000E38  0EBD               	movlw	low STR_9
 30506  000E3A  0100               	movlb	0	; () banked
 30507  000E3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30508  000E3E  0EFE               	movlw	high STR_9
 30509  000E40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30510  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 30511  000E44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30512  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 30513  000E48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30514  000E4A  0E00               	movlw	0
 30515  000E4C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30516  000E4E  0E14               	movlw	20
 30517  000E50  6F89               	movwf	StringCopy@Len& (0+255),b
 30518  000E52  EC24  F02C         	call	_StringCopy	;wreg free
 30519                           
 30520                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 30521  000E56  0E00               	movlw	0
 30522  000E58  0101               	movlb	1	; () banked
 30523  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30524  000E5C  D01C               	goto	l1225
 30525  000E5E                     
 30526                           ; BSR set to: 1
 30527                           ;mdm_gsm_gprs_http.c: 161: {
 30528                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 30529                           
 30530                           ; BSR set to: 1
 30531  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30532  000E60  0D01               	mullw	1
 30533  000E62  50F3               	movf	prodl,w,c
 30534  000E64  0100               	movlb	0	; () banked
 30535  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 30536  000E68  6ED9               	movwf	fsr2l,c
 30537  000E6A  50F4               	movf	prodh,w,c
 30538  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 30539  000E6E  6EDA               	movwf	fsr2h,c
 30540  000E70  0101               	movlb	1	; () banked
 30541  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30542  000E74  0100               	movlb	0	; () banked
 30543  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30544  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30545  000E7A  0E14               	movlw	20
 30546  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30547  000E7E  0E00               	movlw	0
 30548  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30549  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 30550  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30551  000E86  6EE1               	movwf	fsr1l,c
 30552  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 30553  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30554  000E8C  6EE2               	movwf	fsr1h,c
 30555  000E8E  CFDF FFE7          	movff	indf2,indf1
 30556                           
 30557                           ; BSR set to: 0
 30558  000E92  0101               	movlb	1	; () banked
 30559  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 30560  000E96                     l1225:
 30561                           
 30562                           ; BSR set to: 1
 30563                           
 30564                           ; BSR set to: 1
 30565  000E96  0100               	movlb	0	; () banked
 30566  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 30567  000E9A  0101               	movlb	1	; () banked
 30568  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 30569  000E9E  A0D8               	btfss	status,0,c
 30570  000EA0  D7DE               	goto	l1226
 30571                           
 30572                           ; BSR set to: 1
 30573                           ;mdm_gsm_gprs_http.c: 163: }
 30574                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 30575                           
 30576                           ; BSR set to: 1
 30577  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30578  000EA4  0100               	movlb	0	; () banked
 30579  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30580  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30581  000EAA  0E14               	movlw	20
 30582  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30583  000EAE  0E00               	movlw	0
 30584  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30585  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 30586  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30587  000EB6  6ED9               	movwf	fsr2l,c
 30588  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 30589  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30590  000EBC  6EDA               	movwf	fsr2h,c
 30591  000EBE  0E22               	movlw	34
 30592  000EC0  6EDF               	movwf	indf2,c
 30593                           
 30594                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 30595  000EC2  0101               	movlb	1	; () banked
 30596  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30597  000EC6  0100               	movlb	0	; () banked
 30598  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30599  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30600  000ECC  0E15               	movlw	21
 30601  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30602  000ED0  0E00               	movlw	0
 30603  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30604  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 30605  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30606  000ED8  6ED9               	movwf	fsr2l,c
 30607  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 30608  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30609  000EDE  6EDA               	movwf	fsr2h,c
 30610  000EE0  0E0D               	movlw	13
 30611  000EE2  6EDF               	movwf	indf2,c
 30612                           
 30613                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 30614  000EE4  0101               	movlb	1	; () banked
 30615  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30616  000EE8  0100               	movlb	0	; () banked
 30617  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30618  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30619  000EEE  0E16               	movlw	22
 30620  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30621  000EF2  0E00               	movlw	0
 30622  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30623  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 30624  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30625  000EFA  6ED9               	movwf	fsr2l,c
 30626  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 30627  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30628  000F00  6EDA               	movwf	fsr2h,c
 30629  000F02  0E00               	movlw	0
 30630  000F04  6EDF               	movwf	indf2,c
 30631                           
 30632                           ; BSR set to: 0
 30633                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 30634  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 30635  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30636  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 30637  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30638  000F0E  0E01               	movlw	1
 30639  000F10  EC88  F031         	call	_Uart_WriteString
 30640                           
 30641                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 30642  000F14  0E07               	movlw	7
 30643  000F16  0101               	movlb	1	; () banked
 30644  000F18  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30645                           
 30646                           ; BSR set to: 1
 30647                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 30648  000F1A  0E03               	movlw	3
 30649  000F1C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30650                           
 30651                           ; BSR set to: 1
 30652                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 30653  000F1E  0EF3               	movlw	low _ConnTimeout
 30654  000F20  0100               	movlb	0	; () banked
 30655  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30656  000F24  0E02               	movlw	high _ConnTimeout
 30657  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30658  000F28  0E20               	movlw	32
 30659  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30660  000F2C  0E4E               	movlw	78
 30661  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30662  000F30  0E00               	movlw	0
 30663  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30664  000F34  0E00               	movlw	0
 30665  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30666  000F38  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 30667  000F3C  D039               	goto	l15723
 30668  000F3E                     
 30669                           ; BSR set to: 1
 30670                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 30671                           
 30672                           ; BSR set to: 1
 30673  000F3E  0E4B               	movlw	low STR_10
 30674  000F40  0100               	movlb	0	; () banked
 30675  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30676  000F44  0EFF               	movlw	high STR_10
 30677  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30678  000F48  0E01               	movlw	1
 30679  000F4A  ECE8  F030         	call	_Uart_WriteConstString
 30680                           
 30681                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 30682  000F4E  0E07               	movlw	7
 30683  000F50  0101               	movlb	1	; () banked
 30684  000F52  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30685                           
 30686                           ; BSR set to: 1
 30687                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 30688  000F54  0E05               	movlw	5
 30689  000F56  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30690                           
 30691                           ; BSR set to: 1
 30692                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 30693  000F58  0EF3               	movlw	low _ConnTimeout
 30694  000F5A  0100               	movlb	0	; () banked
 30695  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30696  000F5E  0E02               	movlw	high _ConnTimeout
 30697  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30698  000F62  0E20               	movlw	32
 30699  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30700  000F66  0E4E               	movlw	78
 30701  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30702  000F6A  0E00               	movlw	0
 30703  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30704  000F6E  0E00               	movlw	0
 30705  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30706  000F72  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 30707  000F76  D01C               	goto	l15723
 30708  000F78                     
 30709                           ; BSR set to: 1
 30710                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 30711                           
 30712                           ; BSR set to: 1
 30713  000F78  0E59               	movlw	low STR_11
 30714  000F7A  0100               	movlb	0	; () banked
 30715  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30716  000F7E  0EFF               	movlw	high STR_11
 30717  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30718  000F82  0E01               	movlw	1
 30719  000F84  ECE8  F030         	call	_Uart_WriteConstString
 30720                           
 30721                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 30722  000F88  0E08               	movlw	8
 30723  000F8A  0101               	movlb	1	; () banked
 30724  000F8C  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30725                           
 30726                           ; BSR set to: 1
 30727                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 30728  000F8E  0E05               	movlw	5
 30729  000F90  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30730                           
 30731                           ; BSR set to: 1
 30732                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 30733  000F92  0EF3               	movlw	low _ConnTimeout
 30734  000F94  0100               	movlb	0	; () banked
 30735  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30736  000F98  0E02               	movlw	high _ConnTimeout
 30737  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30738  000F9C  0E20               	movlw	32
 30739  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30740  000FA0  0E4E               	movlw	78
 30741  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30742  000FA4  0E00               	movlw	0
 30743  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30744  000FA8  0E00               	movlw	0
 30745  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30746  000FAC  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 30747  000FB0                     l15723:
 30748                           
 30749                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 30750  000FB0  0E01               	movlw	1
 30751  000FB2  0101               	movlb	1	; () banked
 30752  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30753                           
 30754                           ;mdm_gsm_gprs_http.c: 201: break;
 30755  000FB6  D07C               	goto	l1222
 30756  000FB8                     
 30757                           ; BSR set to: 1
 30758                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 30759                           
 30760                           ; BSR set to: 1
 30761  000FB8  0E02               	movlw	2
 30762  000FBA  D05A               	goto	L105
 30763  000FBC                     
 30764                           ; BSR set to: 1
 30765                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 30766                           
 30767                           ; BSR set to: 1
 30768  000FBC  0E3C               	movlw	low _NewStringReceived
 30769  000FBE  0100               	movlb	0	; () banked
 30770  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30771  000FC2  0E00               	movlw	high _NewStringReceived
 30772  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30773  000FC6  EC30  F033         	call	_ReceiveEvt	;wreg free
 30774  000FCA  0900               	iorlw	0
 30775  000FCC  B4D8               	btfsc	status,2,c
 30776  000FCE  D018               	goto	l1232
 30777                           
 30778                           ;mdm_gsm_gprs_http.c: 212: {
 30779                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30780  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 30781  000FD4  0A4F               	xorlw	79
 30782  000FD6  A4D8               	btfss	status,2,c
 30783  000FD8  D06B               	goto	l1222
 30784  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30785  000FDE  0A4B               	xorlw	75
 30786  000FE0  A4D8               	btfss	status,2,c
 30787  000FE2  D066               	goto	l1222
 30788                           
 30789                           ;mdm_gsm_gprs_http.c: 215: {
 30790                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 30791  000FE4  C02A  F1E8         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30792                           
 30793                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 30794  000FE8  0E58               	movlw	low _RxBuffer
 30795  000FEA  0100               	movlb	0	; () banked
 30796  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30797  000FEE  0E0C               	movlw	high _RxBuffer
 30798  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30799  000FF2  0E01               	movlw	1
 30800  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30801  000FF6  0E90               	movlw	144
 30802  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30803  000FFA  EC52  F032         	call	_ClearBuffer	;wreg free
 30804                           
 30805                           ;mdm_gsm_gprs_http.c: 220: }
 30806                           ;mdm_gsm_gprs_http.c: 221: }
 30807  000FFE  D058               	goto	l1222
 30808  001000                     l1232:
 30809                           
 30810                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30811  001000  0EF3               	movlw	low _ConnTimeout
 30812  001002  0100               	movlb	0	; () banked
 30813  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30814  001006  0E02               	movlw	high _ConnTimeout
 30815  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30816  00100A  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30817  00100E  D029               	goto	L70
 30818  001010                     
 30819                           ; BSR set to: 1
 30820                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 30821                           
 30822                           ; BSR set to: 1
 30823  001010  0E3C               	movlw	low _NewStringReceived
 30824  001012  0100               	movlb	0	; () banked
 30825  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30826  001016  0E00               	movlw	high _NewStringReceived
 30827  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30828  00101A  EC30  F033         	call	_ReceiveEvt	;wreg free
 30829  00101E  0900               	iorlw	0
 30830  001020  B4D8               	btfsc	status,2,c
 30831  001022  D018               	goto	l1237
 30832                           
 30833                           ;mdm_gsm_gprs_http.c: 232: {
 30834                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 30835  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 30836  001028  0A2B               	xorlw	43
 30837  00102A  A4D8               	btfss	status,2,c
 30838  00102C  D041               	goto	l1222
 30839  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30840  001032  0A53               	xorlw	83
 30841  001034  A4D8               	btfss	status,2,c
 30842  001036  D03C               	goto	l1222
 30843                           
 30844                           ;mdm_gsm_gprs_http.c: 235: {
 30845                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 30846  001038  C02A  F1E8         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30847                           
 30848                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 30849  00103C  0E58               	movlw	low _RxBuffer
 30850  00103E  0100               	movlb	0	; () banked
 30851  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30852  001042  0E0C               	movlw	high _RxBuffer
 30853  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30854  001046  0E01               	movlw	1
 30855  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30856  00104A  0E90               	movlw	144
 30857  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30858  00104E  EC52  F032         	call	_ClearBuffer	;wreg free
 30859                           
 30860                           ;mdm_gsm_gprs_http.c: 240: }
 30861                           ;mdm_gsm_gprs_http.c: 241: }
 30862  001052  D02E               	goto	l1222
 30863  001054                     l1237:
 30864                           
 30865                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30866  001054  0EF3               	movlw	low _ConnTimeout
 30867  001056  0100               	movlb	0	; () banked
 30868  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30869  00105A  0E02               	movlw	high _ConnTimeout
 30870  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30871  00105E  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30872  001062                     L70:
 30873  001062  06E8               	decf	wreg,f,c
 30874  001064  A4D8               	btfss	status,2,c
 30875  001066  D024               	goto	l1222
 30876                           
 30877                           ;mdm_gsm_gprs_http.c: 243: {
 30878                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 30879  001068  0E06               	movlw	6
 30880  00106A                     L106:
 30881  00106A  0101               	movlb	1	; () banked
 30882  00106C  D003               	goto	L69
 30883  00106E                     
 30884                           ; BSR set to: 1
 30885                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 30886                           
 30887                           ; BSR set to: 1
 30888  00106E  0E03               	movlw	3
 30889  001070                     L105:
 30890  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30891                           
 30892                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 30893  001072  0E00               	movlw	0
 30894  001074                     L69:
 30895  001074  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30896                           
 30897                           ; BSR set to: 1
 30898                           ;mdm_gsm_gprs_http.c: 257: }
 30899                           
 30900                           ; BSR set to: 1
 30901                           ;mdm_gsm_gprs_http.c: 256: break;
 30902                           
 30903                           ;mdm_gsm_gprs_http.c: 255: default:
 30904                           
 30905                           ;mdm_gsm_gprs_http.c: 253: break;
 30906  001076  D01C               	goto	l1222
 30907  001078                     l1219:
 30908                           
 30909                           ; BSR set to: 1
 30910                           
 30911                           ; BSR set to: 1
 30912  001078  51E8               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 30913                           
 30914                           ; Switch size 1, requested type "space"
 30915                           ; Number of cases is 9, Range of values is 0 to 8
 30916                           ; switch strategies available:
 30917                           ; Name         Instructions Cycles
 30918                           ; simple_byte           28    15 (average)
 30919                           ;	Chosen strategy is simple_byte
 30920  00107A  0A00               	xorlw	0	; case 0
 30921  00107C  B4D8               	btfsc	status,2,c
 30922  00107E  D6A8               	goto	l1220
 30923  001080  0A01               	xorlw	1	; case 1
 30924  001082  B4D8               	btfsc	status,2,c
 30925  001084  D6B1               	goto	l1223
 30926  001086  0A03               	xorlw	3	; case 2
 30927  001088  B4D8               	btfsc	status,2,c
 30928  00108A  D6CB               	goto	l1224
 30929  00108C  0A01               	xorlw	1	; case 3
 30930  00108E  B4D8               	btfsc	status,2,c
 30931  001090  D756               	goto	l1228
 30932  001092  0A07               	xorlw	7	; case 4
 30933  001094  B4D8               	btfsc	status,2,c
 30934  001096  D770               	goto	l1229
 30935  001098  0A01               	xorlw	1	; case 5
 30936  00109A  B4D8               	btfsc	status,2,c
 30937  00109C  D78D               	goto	l1230
 30938  00109E  0A03               	xorlw	3	; case 6
 30939  0010A0  B4D8               	btfsc	status,2,c
 30940  0010A2  D7E5               	goto	l1241
 30941  0010A4  0A01               	xorlw	1	; case 7
 30942  0010A6  B4D8               	btfsc	status,2,c
 30943  0010A8  D789               	goto	l1231
 30944  0010AA  0A0F               	xorlw	15	; case 8
 30945  0010AC  B4D8               	btfsc	status,2,c
 30946  0010AE  D7B0               	goto	l1236
 30947  0010B0                     l1222:
 30948                           
 30949                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 30950                           
 30951                           ; BSR set to: 1
 30952  0010B0  0101               	movlb	1	; () banked
 30953  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 30954  0010B4  0012               	return	
 30955  0010B6                     __end_of_InitGprsNetwork:
 30956                           	opt stack 0
 30957                           tosu	equ	0xFFF
 30958                           tosh	equ	0xFFE
 30959                           tosl	equ	0xFFD
 30960                           pclath	equ	0xFFA
 30961                           tblptru	equ	0xFF8
 30962                           tblptrh	equ	0xFF7
 30963                           tblptrl	equ	0xFF6
 30964                           tablat	equ	0xFF5
 30965                           prodh	equ	0xFF4
 30966                           prodl	equ	0xFF3
 30967                           intcon	equ	0xFF2
 30968                           intcon2	equ	0xFF1
 30969                           intcon3	equ	0xFF0
 30970                           indf0	equ	0xFEF
 30971                           postinc0	equ	0xFEE
 30972                           plusw0	equ	0xFEB
 30973                           fsr0h	equ	0xFEA
 30974                           fsr0l	equ	0xFE9
 30975                           wreg	equ	0xFE8
 30976                           indf1	equ	0xFE7
 30977                           postinc1	equ	0xFE6
 30978                           postdec1	equ	0xFE5
 30979                           plusw1	equ	0xFE3
 30980                           fsr1h	equ	0xFE2
 30981                           fsr1l	equ	0xFE1
 30982                           indf2	equ	0xFDF
 30983                           postinc2	equ	0xFDE
 30984                           postdec2	equ	0xFDD
 30985                           plusw2	equ	0xFDB
 30986                           fsr2h	equ	0xFDA
 30987                           fsr2l	equ	0xFD9
 30988                           status	equ	0xFD8
 30989                           
 30990 ;; *************** function _HttpGetMethod *****************
 30991 ;; Defined at:
 30992 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30993 ;; Parameters:    Size  Location     Type
 30994 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 30995 ;;		 -> HttpGetDataLocal(5), 
 30996 ;; Auto vars:     Size  Location     Type
 30997 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 30998 ;;  Index           1  200[BANK1 ] unsigned char 
 30999 ;; Return value:  Size  Location     Type
 31000 ;;                  1    wreg      enum E8925
 31001 ;; Registers used:
 31002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31003 ;; Tracked objects:
 31004 ;;		On entry : 0/0
 31005 ;;		On exit  : 0/0
 31006 ;;		Unchanged: 0/0
 31007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31009 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31010 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31011 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31012 ;;Total ram usage:      207 bytes
 31013 ;; Hardware stack levels used:    1
 31014 ;; Hardware stack levels required when called:   14
 31015 ;; This function calls:
 31016 ;;		_ClearBuffer
 31017 ;;		_OsTmr_GetTimerStatus
 31018 ;;		_OsTmr_StartTimer
 31019 ;;		_ReceiveEvt
 31020 ;;		_StringCopy
 31021 ;;		_Uart_WriteConstString
 31022 ;;		_Uart_WriteString
 31023 ;; This function is called by:
 31024 ;;		_MdmHttp_MainTask
 31025 ;; This function uses a non-reentrant model
 31026 ;;
 31027                           
 31028                           	psect	text143
 31029  0005EC                     __ptext143:
 31030                           	opt stack 0
 31031  0005EC                     _HttpGetMethod:
 31032                           	opt stack 13
 31033                           
 31034                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 31035                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 31036                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 31037                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 31038                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 31039                           
 31040                           ; BSR set to: 1
 31041                           ;incstack = 0
 31042  0005EC  0E00               	movlw	0
 31043  0005EE  0101               	movlb	1	; () banked
 31044  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31045                           
 31046                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 31047  0005F2  D230               	goto	l1252
 31048  0005F4                     
 31049                           ; BSR set to: 1
 31050                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 31051                           
 31052                           ; BSR set to: 1
 31053  0005F4  0ED8               	movlw	low _GetMethod
 31054  0005F6  0100               	movlb	0	; () banked
 31055  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31056  0005FA  0E00               	movlw	high _GetMethod
 31057  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31058  0005FE  EC30  F033         	call	_ReceiveEvt	;wreg free
 31059  000602  0900               	iorlw	0
 31060  000604  B4D8               	btfsc	status,2,c
 31061  000606  D257               	goto	l1255
 31062                           
 31063                           ;mdm_gsm_gprs_http.c: 284: {
 31064                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 31065  000608  0E01               	movlw	1
 31066  00060A  D18C               	goto	L72
 31067  00060C                     
 31068                           ; BSR set to: 1
 31069                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 31070                           
 31071                           ; BSR set to: 1
 31072  00060C  0E9D               	movlw	low STR_12
 31073  00060E  0100               	movlb	0	; () banked
 31074  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31075  000612  0EFF               	movlw	high STR_12
 31076  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31077  000616  0E01               	movlw	1
 31078  000618  ECE8  F030         	call	_Uart_WriteConstString
 31079                           
 31080                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 31081  00061C  0E0A               	movlw	10
 31082  00061E  0101               	movlb	1	; () banked
 31083  000620  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31084                           
 31085                           ; BSR set to: 1
 31086                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 31087  000622  0E02               	movlw	2
 31088  000624  0100               	movlb	0	; () banked
 31089  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31090                           
 31091                           ; BSR set to: 0
 31092                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 31093  000628  0EF3               	movlw	low _ConnTimeout
 31094  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31095  00062C  0E02               	movlw	high _ConnTimeout
 31096  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31097  000630  0E20               	movlw	32
 31098  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31099  000634  0E4E               	movlw	78
 31100  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31101  000638  0E00               	movlw	0
 31102  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31103  00063C  0E00               	movlw	0
 31104  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31105  000640  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31106  000644  D1AF               	goto	l15889
 31107  000646                     
 31108                           ; BSR set to: 1
 31109                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 31110                           
 31111                           ; BSR set to: 1
 31112  000646  0E67               	movlw	low STR_13
 31113  000648  0100               	movlb	0	; () banked
 31114  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31115  00064C  0EFF               	movlw	high STR_13
 31116  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31117  000650  0E01               	movlw	1
 31118  000652  ECE8  F030         	call	_Uart_WriteConstString
 31119                           
 31120                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 31121  000656  0E0A               	movlw	10
 31122  000658  0101               	movlb	1	; () banked
 31123  00065A  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31124                           
 31125                           ; BSR set to: 1
 31126                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 31127  00065C  0E03               	movlw	3
 31128  00065E  0100               	movlb	0	; () banked
 31129  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31130                           
 31131                           ; BSR set to: 0
 31132                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 31133  000662  0EF3               	movlw	low _ConnTimeout
 31134  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31135  000666  0E02               	movlw	high _ConnTimeout
 31136  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31137  00066A  0E20               	movlw	32
 31138  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31139  00066E  0E4E               	movlw	78
 31140  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31141  000672  0E00               	movlw	0
 31142  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31143  000676  0E00               	movlw	0
 31144  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31145  00067A  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31146  00067E  D192               	goto	l15889
 31147  000680                     
 31148                           ; BSR set to: 1
 31149                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 31150                           
 31151                           ; BSR set to: 1
 31152  000680  0EA8               	movlw	low STR_14
 31153  000682  0100               	movlb	0	; () banked
 31154  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31155  000686  0EFE               	movlw	high STR_14
 31156  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31157  00068A  0E01               	movlw	1
 31158  00068C  ECE8  F030         	call	_Uart_WriteConstString
 31159                           
 31160                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 31161  000690  0E0A               	movlw	10
 31162  000692  0101               	movlb	1	; () banked
 31163  000694  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31164                           
 31165                           ; BSR set to: 1
 31166                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 31167  000696  0E04               	movlw	4
 31168  000698  0100               	movlb	0	; () banked
 31169  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31170                           
 31171                           ; BSR set to: 0
 31172                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 31173  00069C  0EF3               	movlw	low _ConnTimeout
 31174  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31175  0006A0  0E02               	movlw	high _ConnTimeout
 31176  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31177  0006A4  0E20               	movlw	32
 31178  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31179  0006A8  0E4E               	movlw	78
 31180  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31181  0006AC  0E00               	movlw	0
 31182  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31183  0006B0  0E00               	movlw	0
 31184  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31185  0006B4  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31186  0006B8  D175               	goto	l15889
 31187  0006BA                     
 31188                           ; BSR set to: 1
 31189                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 31190                           
 31191                           ; BSR set to: 1
 31192  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31193  0006BC  0100               	movlb	0	; () banked
 31194  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31195  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 31196  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31197  0006C4  0E00               	movlw	0
 31198  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31199  0006C8  0EC8               	movlw	200
 31200  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31201  0006CC  EC52  F032         	call	_ClearBuffer	;wreg free
 31202                           
 31203                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 31204  0006D0  0EE6               	movlw	low STR_15
 31205  0006D2  0100               	movlb	0	; () banked
 31206  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31207  0006D6  0EFE               	movlw	high STR_15
 31208  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31209  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 31210  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31211  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 31212  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31213  0006E2  0E00               	movlw	0
 31214  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31215  0006E6  0E13               	movlw	19
 31216  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 31217  0006EA  EC24  F02C         	call	_StringCopy	;wreg free
 31218                           
 31219                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 31220  0006EE  0E00               	movlw	0
 31221  0006F0  0101               	movlb	1	; () banked
 31222  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31223  0006F4  D024               	goto	l1260
 31224  0006F6                     
 31225                           ; BSR set to: 1
 31226                           ;mdm_gsm_gprs_http.c: 332: {
 31227                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 31228                           
 31229                           ; BSR set to: 1
 31230  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31231  0006F8  0D01               	mullw	1
 31232  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 31233  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 31234  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 31235  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 31236  00070A  50F3               	movf	prodl,w,c
 31237  00070C  0100               	movlb	0	; () banked
 31238  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31239  000710  6ED9               	movwf	fsr2l,c
 31240  000712  50F4               	movf	prodh,w,c
 31241  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31242  000716  6EDA               	movwf	fsr2h,c
 31243  000718  0101               	movlb	1	; () banked
 31244  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31245  00071C  0100               	movlb	0	; () banked
 31246  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 31247  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 31248  000722  0E13               	movlw	19
 31249  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 31250  000726  0E00               	movlw	0
 31251  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 31252  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 31253  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 31254  00072E  6EE1               	movwf	fsr1l,c
 31255  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 31256  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 31257  000734  6EE2               	movwf	fsr1h,c
 31258  000736  CFDF FFE7          	movff	indf2,indf1
 31259                           
 31260                           ; BSR set to: 0
 31261  00073A  0101               	movlb	1	; () banked
 31262  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 31263  00073E                     l1260:
 31264                           
 31265                           ; BSR set to: 1
 31266                           
 31267                           ; BSR set to: 1
 31268  00073E  0100               	movlb	0	; () banked
 31269  000740  EE20 F002          	lfsr	2,2
 31270  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31271  000746  26D9               	addwf	fsr2l,f,c
 31272  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31273  00074A  22DA               	addwfc	fsr2h,f,c
 31274  00074C  50DE               	movf	postinc2,w,c
 31275  00074E  0101               	movlb	1	; () banked
 31276  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 31277  000752  A0D8               	btfss	status,0,c
 31278  000754  D7D0               	goto	l1261
 31279                           
 31280                           ; BSR set to: 1
 31281                           ;mdm_gsm_gprs_http.c: 334: }
 31282                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 31283                           
 31284                           ; BSR set to: 1
 31285  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31286  000758  0100               	movlb	0	; () banked
 31287  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31288  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31289  00075E  0E13               	movlw	19
 31290  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31291  000762  0E00               	movlw	0
 31292  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31293  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 31294  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31295  00076A  6ED9               	movwf	fsr2l,c
 31296  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 31297  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31298  000770  6EDA               	movwf	fsr2h,c
 31299  000772  0E22               	movlw	34
 31300  000774  6EDF               	movwf	indf2,c
 31301                           
 31302                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 31303  000776  0101               	movlb	1	; () banked
 31304  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31305  00077A  0100               	movlb	0	; () banked
 31306  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31307  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31308  000780  0E14               	movlw	20
 31309  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31310  000784  0E00               	movlw	0
 31311  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31312  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 31313  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31314  00078C  6ED9               	movwf	fsr2l,c
 31315  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 31316  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31317  000792  6EDA               	movwf	fsr2h,c
 31318  000794  0E0D               	movlw	13
 31319  000796  6EDF               	movwf	indf2,c
 31320                           
 31321                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 31322  000798  0101               	movlb	1	; () banked
 31323  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31324  00079C  0100               	movlb	0	; () banked
 31325  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31326  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31327  0007A2  0E15               	movlw	21
 31328  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31329  0007A6  0E00               	movlw	0
 31330  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31331  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 31332  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31333  0007AE  6ED9               	movwf	fsr2l,c
 31334  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 31335  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31336  0007B4  6EDA               	movwf	fsr2h,c
 31337  0007B6  0E00               	movlw	0
 31338  0007B8  6EDF               	movwf	indf2,c
 31339                           
 31340                           ; BSR set to: 0
 31341                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 31342  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31343  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 31344  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 31345  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 31346  0007C2  0E01               	movlw	1
 31347  0007C4  EC88  F031         	call	_Uart_WriteString
 31348                           
 31349                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 31350  0007C8  0E0A               	movlw	10
 31351  0007CA  0101               	movlb	1	; () banked
 31352  0007CC  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31353                           
 31354                           ; BSR set to: 1
 31355                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 31356  0007CE  0E05               	movlw	5
 31357  0007D0  0100               	movlb	0	; () banked
 31358  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31359                           
 31360                           ; BSR set to: 0
 31361                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 31362  0007D4  0EF3               	movlw	low _ConnTimeout
 31363  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31364  0007D8  0E02               	movlw	high _ConnTimeout
 31365  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31366  0007DC  0E20               	movlw	32
 31367  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31368  0007E0  0E4E               	movlw	78
 31369  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31370  0007E4  0E00               	movlw	0
 31371  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31372  0007E8  0E00               	movlw	0
 31373  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31374  0007EC  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31375  0007F0  D0D9               	goto	l15889
 31376  0007F2                     
 31377                           ; BSR set to: 1
 31378                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 31379                           
 31380                           ; BSR set to: 1
 31381  0007F2  0E1E               	movlw	low STR_16
 31382  0007F4  0100               	movlb	0	; () banked
 31383  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31384  0007F8  0EFF               	movlw	high STR_16
 31385  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31386  0007FC  0E01               	movlw	1
 31387  0007FE  ECE8  F030         	call	_Uart_WriteConstString
 31388                           
 31389                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 31390  000802  0E0A               	movlw	10
 31391  000804  0101               	movlb	1	; () banked
 31392  000806  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31393                           
 31394                           ; BSR set to: 1
 31395                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 31396  000808  0E06               	movlw	6
 31397  00080A  0100               	movlb	0	; () banked
 31398  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31399                           
 31400                           ; BSR set to: 0
 31401                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 31402  00080E  0EF3               	movlw	low _ConnTimeout
 31403  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31404  000812  0E02               	movlw	high _ConnTimeout
 31405  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31406  000816  0E20               	movlw	32
 31407  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31408  00081A  0E4E               	movlw	78
 31409  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31410  00081E  0E00               	movlw	0
 31411  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31412  000822  0E00               	movlw	0
 31413  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31414  000826  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31415                           
 31416                           ;mdm_gsm_gprs_http.c: 358: break;
 31417  00082A  D145               	goto	l1255
 31418  00082C                     
 31419                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 31420  00082C  0E07               	movlw	7
 31421  00082E  0101               	movlb	1	; () banked
 31422  000830  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31423                           
 31424                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 31425  000832  0E09               	movlw	9
 31426  000834  0100               	movlb	0	; () banked
 31427  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31428                           
 31429                           ; BSR set to: 0
 31430                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 31431  000838  0EF3               	movlw	low _ConnTimeout
 31432  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31433  00083C  0E02               	movlw	high _ConnTimeout
 31434  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31435  000840  0E20               	movlw	32
 31436  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31437  000844  0E4E               	movlw	78
 31438  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31439  000848  0E00               	movlw	0
 31440  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31441  00084C  0E00               	movlw	0
 31442  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31443  000850  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31444                           
 31445                           ;mdm_gsm_gprs_http.c: 371: break;
 31446  000854  D130               	goto	l1255
 31447  000856                     
 31448                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 31449  000856  0E83               	movlw	low STR_17
 31450  000858  0100               	movlb	0	; () banked
 31451  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31452  00085C  0EFF               	movlw	high STR_17
 31453  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31454  000860  0E01               	movlw	1
 31455  000862  ECE8  F030         	call	_Uart_WriteConstString
 31456                           
 31457                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 31458  000866  0E0D               	movlw	13
 31459  000868  0101               	movlb	1	; () banked
 31460  00086A  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31461                           
 31462                           ; BSR set to: 1
 31463                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 31464  00086C  0E09               	movlw	9
 31465  00086E  0100               	movlb	0	; () banked
 31466  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31467                           
 31468                           ; BSR set to: 0
 31469                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 31470  000872  0EF3               	movlw	low _ConnTimeout
 31471  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31472  000876  0E02               	movlw	high _ConnTimeout
 31473  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31474  00087A  0E20               	movlw	32
 31475  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31476  00087E  0E4E               	movlw	78
 31477  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31478  000882  0E00               	movlw	0
 31479  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31480  000886  0E00               	movlw	0
 31481  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31482  00088A  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31483  00088E  D08A               	goto	l15889
 31484  000890                     
 31485                           ; BSR set to: 1
 31486                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 31487                           
 31488                           ; BSR set to: 1
 31489  000890  0E90               	movlw	low STR_18
 31490  000892  0100               	movlb	0	; () banked
 31491  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31492  000896  0EFF               	movlw	high STR_18
 31493  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31494  00089A  0E01               	movlw	1
 31495  00089C  ECE8  F030         	call	_Uart_WriteConstString
 31496                           
 31497                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 31498  0008A0  0E0A               	movlw	10
 31499  0008A2  0101               	movlb	1	; () banked
 31500  0008A4  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31501                           
 31502                           ; BSR set to: 1
 31503                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 31504  0008A6  0E0E               	movlw	14
 31505  0008A8  0100               	movlb	0	; () banked
 31506  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31507                           
 31508                           ; BSR set to: 0
 31509                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 31510  0008AC  0EF3               	movlw	low _ConnTimeout
 31511  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31512  0008B0  0E02               	movlw	high _ConnTimeout
 31513  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31514  0008B4  0E20               	movlw	32
 31515  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31516  0008B8  0E4E               	movlw	78
 31517  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31518  0008BC  0E00               	movlw	0
 31519  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31520  0008C0  0E00               	movlw	0
 31521  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31522  0008C4  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31523  0008C8  D06D               	goto	l15889
 31524  0008CA                     
 31525                           ; BSR set to: 1
 31526                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 31527                           
 31528                           ; BSR set to: 1
 31529  0008CA  0E3C               	movlw	low _NewStringReceived
 31530  0008CC  0100               	movlb	0	; () banked
 31531  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31532  0008D0  0E00               	movlw	high _NewStringReceived
 31533  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31534  0008D4  EC30  F033         	call	_ReceiveEvt	;wreg free
 31535  0008D8  0900               	iorlw	0
 31536  0008DA  B4D8               	btfsc	status,2,c
 31537  0008DC  D018               	goto	l1268
 31538                           
 31539                           ;mdm_gsm_gprs_http.c: 400: {
 31540                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31541  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 31542  0008E2  0A4F               	xorlw	79
 31543  0008E4  A4D8               	btfss	status,2,c
 31544  0008E6  D0E7               	goto	l1255
 31545  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31546  0008EC  0A4B               	xorlw	75
 31547  0008EE  A4D8               	btfss	status,2,c
 31548  0008F0  D0E2               	goto	l1255
 31549                           
 31550                           ;mdm_gsm_gprs_http.c: 403: {
 31551                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 31552  0008F2  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31553                           
 31554                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 31555  0008F6  0E58               	movlw	low _RxBuffer
 31556  0008F8  0100               	movlb	0	; () banked
 31557  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31558  0008FC  0E0C               	movlw	high _RxBuffer
 31559  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31560  000900  0E01               	movlw	1
 31561  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31562  000904  0E90               	movlw	144
 31563  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31564  000908  EC52  F032         	call	_ClearBuffer	;wreg free
 31565                           
 31566                           ;mdm_gsm_gprs_http.c: 408: }
 31567                           ;mdm_gsm_gprs_http.c: 409: }
 31568  00090C  D0D4               	goto	l1255
 31569  00090E                     l1268:
 31570                           
 31571                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31572  00090E  0EF3               	movlw	low _ConnTimeout
 31573  000910  0100               	movlb	0	; () banked
 31574  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31575  000914  0E02               	movlw	high _ConnTimeout
 31576  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31577  000918  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31578  00091C                     L73:
 31579  00091C  06E8               	decf	wreg,f,c
 31580  00091E  A4D8               	btfss	status,2,c
 31581  000920  D0CA               	goto	l1255
 31582                           
 31583                           ;mdm_gsm_gprs_http.c: 411: {
 31584                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 31585  000922  0E0F               	movlw	15
 31586  000924                     L72:
 31587  000924  0101               	movlb	1	; () banked
 31588  000926  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31589                           
 31590                           ; BSR set to: 1
 31591                           ;mdm_gsm_gprs_http.c: 414: }
 31592                           ;mdm_gsm_gprs_http.c: 415: break;
 31593                           
 31594                           ; BSR set to: 1
 31595  000928  D0C6               	goto	l1255
 31596  00092A                     
 31597                           ; BSR set to: 1
 31598                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 31599                           
 31600                           ; BSR set to: 1
 31601  00092A  0E3C               	movlw	low _NewStringReceived
 31602  00092C  0100               	movlb	0	; () banked
 31603  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31604  000930  0E00               	movlw	high _NewStringReceived
 31605  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31606  000934  EC30  F033         	call	_ReceiveEvt	;wreg free
 31607  000938  0900               	iorlw	0
 31608  00093A  B4D8               	btfsc	status,2,c
 31609  00093C  D018               	goto	l1273
 31610                           
 31611                           ;mdm_gsm_gprs_http.c: 420: {
 31612                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31613  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 31614  000942  0A2B               	xorlw	43
 31615  000944  A4D8               	btfss	status,2,c
 31616  000946  D0B7               	goto	l1255
 31617  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31618  00094C  0A48               	xorlw	72
 31619  00094E  A4D8               	btfss	status,2,c
 31620  000950  D0B2               	goto	l1255
 31621                           
 31622                           ;mdm_gsm_gprs_http.c: 423: {
 31623                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 31624  000952  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31625                           
 31626                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 31627  000956  0E58               	movlw	low _RxBuffer
 31628  000958  0100               	movlb	0	; () banked
 31629  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31630  00095C  0E0C               	movlw	high _RxBuffer
 31631  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31632  000960  0E01               	movlw	1
 31633  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31634  000964  0E90               	movlw	144
 31635  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31636  000968  EC52  F032         	call	_ClearBuffer	;wreg free
 31637                           
 31638                           ;mdm_gsm_gprs_http.c: 428: }
 31639                           ;mdm_gsm_gprs_http.c: 429: }
 31640  00096C  D0A4               	goto	l1255
 31641  00096E                     l1273:
 31642                           
 31643                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31644  00096E  0EF3               	movlw	low _ConnTimeout
 31645  000970  0100               	movlb	0	; () banked
 31646  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31647  000974  0E02               	movlw	high _ConnTimeout
 31648  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31649  000978  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31650  00097C  D7CF               	goto	L73
 31651  00097E                     
 31652                           ; BSR set to: 1
 31653                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 31654                           
 31655                           ; BSR set to: 1
 31656  00097E  0E0C               	movlw	12
 31657  000980  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31658                           
 31659                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 31660  000982  0E05               	movlw	5
 31661  000984  0100               	movlb	0	; () banked
 31662  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31663                           
 31664                           ; BSR set to: 0
 31665                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 31666  000988  0EDC               	movlw	low _ConnWait
 31667  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31668  00098C  0E03               	movlw	high _ConnWait
 31669  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31670  000990  0EE8               	movlw	232
 31671  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31672  000994  0E03               	movlw	3
 31673  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31674  000998  0E00               	movlw	0
 31675  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31676  00099C  0E00               	movlw	0
 31677  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31678  0009A0  EC84  F02C         	call	_OsTmr_StartTimer	;wreg free
 31679  0009A4                     l15889:
 31680                           
 31681                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 31682  0009A4  0E01               	movlw	1
 31683  0009A6  0101               	movlb	1	; () banked
 31684  0009A8  D053               	goto	L75
 31685  0009AA                     
 31686                           ; BSR set to: 1
 31687                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 31688                           
 31689                           ; BSR set to: 1
 31690  0009AA  0EDC               	movlw	low _ConnWait
 31691  0009AC  0100               	movlb	0	; () banked
 31692  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31693  0009B0  0E03               	movlw	high _ConnWait
 31694  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31695  0009B4  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31696  0009B8  06E8               	decf	wreg,f,c
 31697  0009BA  A4D8               	btfss	status,2,c
 31698  0009BC  D07C               	goto	l1255
 31699                           
 31700                           ;mdm_gsm_gprs_http.c: 450: {
 31701                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 31702  0009BE  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31703                           
 31704                           ;mdm_gsm_gprs_http.c: 453: }
 31705                           ;mdm_gsm_gprs_http.c: 454: break;
 31706  0009C2  D079               	goto	l1255
 31707  0009C4                     
 31708                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 31709  0009C4  0E3C               	movlw	low _NewStringReceived
 31710  0009C6  0100               	movlb	0	; () banked
 31711  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31712  0009CA  0E00               	movlw	high _NewStringReceived
 31713  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31714  0009CE  EC30  F033         	call	_ReceiveEvt	;wreg free
 31715  0009D2  0900               	iorlw	0
 31716  0009D4  B4D8               	btfsc	status,2,c
 31717  0009D6  D02D               	goto	l1281
 31718                           
 31719                           ;mdm_gsm_gprs_http.c: 459: {
 31720                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31721  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 31722  0009DC  0A2B               	xorlw	43
 31723  0009DE  A4D8               	btfss	status,2,c
 31724  0009E0  D06A               	goto	l1255
 31725  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31726  0009E6  0A48               	xorlw	72
 31727  0009E8  A4D8               	btfss	status,2,c
 31728  0009EA  D065               	goto	l1255
 31729                           
 31730                           ;mdm_gsm_gprs_http.c: 462: {
 31731                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 31732  0009EC  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31733                           
 31734                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 31735  0009F0  0E58               	movlw	low _RxBuffer
 31736  0009F2  0100               	movlb	0	; () banked
 31737  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31738  0009F6  0E0C               	movlw	high _RxBuffer
 31739  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31740  0009FA  EE20 F003          	lfsr	2,3
 31741  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31742  000A00  26D9               	addwf	fsr2l,f,c
 31743  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31744  000A04  22DA               	addwfc	fsr2h,f,c
 31745  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 31746  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 31747  000A0E  0E01               	movlw	1
 31748  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31749  000A12  0E90               	movlw	144
 31750  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 31751  000A16  EC24  F02C         	call	_StringCopy	;wreg free
 31752                           
 31753                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 31754  000A1A  0E58               	movlw	low _RxBuffer
 31755  000A1C  0100               	movlb	0	; () banked
 31756  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31757  000A20  0E0C               	movlw	high _RxBuffer
 31758  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31759  000A24  0E01               	movlw	1
 31760  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31761  000A28  0E90               	movlw	144
 31762  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31763  000A2C  EC52  F032         	call	_ClearBuffer	;wreg free
 31764                           
 31765                           ;mdm_gsm_gprs_http.c: 469: }
 31766                           ;mdm_gsm_gprs_http.c: 470: }
 31767  000A30  D042               	goto	l1255
 31768  000A32                     l1281:
 31769                           
 31770                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31771  000A32  0EF3               	movlw	low _ConnTimeout
 31772  000A34  0100               	movlb	0	; () banked
 31773  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31774  000A38  0E02               	movlw	high _ConnTimeout
 31775  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31776  000A3C  EC6F  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31777  000A40  D76D               	goto	L73
 31778  000A42                     
 31779                           ; BSR set to: 1
 31780                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 31781                           
 31782                           ; BSR set to: 1
 31783  000A42  0E00               	movlw	0
 31784  000A44  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31785                           
 31786                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 31787  000A46  0E02               	movlw	2
 31788  000A48  D003               	goto	L75
 31789  000A4A                     
 31790                           ; BSR set to: 1
 31791                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 31792                           
 31793                           ; BSR set to: 1
 31794  000A4A  0E00               	movlw	0
 31795  000A4C  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31796                           
 31797                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 31798  000A4E  0E03               	movlw	3
 31799  000A50                     L75:
 31800  000A50  6FE6               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 31801                           
 31802                           ; BSR set to: 1
 31803                           ;mdm_gsm_gprs_http.c: 494: }
 31804                           
 31805                           ; BSR set to: 1
 31806                           ;mdm_gsm_gprs_http.c: 493: break;
 31807                           
 31808                           ;mdm_gsm_gprs_http.c: 492: default:
 31809                           
 31810                           ;mdm_gsm_gprs_http.c: 490: break;
 31811  000A52  D031               	goto	l1255
 31812  000A54                     l1252:
 31813                           
 31814                           ; BSR set to: 1
 31815                           
 31816                           ; BSR set to: 1
 31817  000A54  51E7               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 31818                           
 31819                           ; Switch size 1, requested type "space"
 31820                           ; Number of cases is 16, Range of values is 0 to 15
 31821                           ; switch strategies available:
 31822                           ; Name         Instructions Cycles
 31823                           ; simple_byte           49    25 (average)
 31824                           ;	Chosen strategy is simple_byte
 31825  000A56  0A00               	xorlw	0	; case 0
 31826  000A58  B4D8               	btfsc	status,2,c
 31827  000A5A  D5CC               	goto	l1253
 31828  000A5C  0A01               	xorlw	1	; case 1
 31829  000A5E  B4D8               	btfsc	status,2,c
 31830  000A60  D5D5               	goto	l1256
 31831  000A62  0A03               	xorlw	3	; case 2
 31832  000A64  B4D8               	btfsc	status,2,c
 31833  000A66  D5EF               	goto	l1257
 31834  000A68  0A01               	xorlw	1	; case 3
 31835  000A6A  B4D8               	btfsc	status,2,c
 31836  000A6C  D609               	goto	l1258
 31837  000A6E  0A07               	xorlw	7	; case 4
 31838  000A70  B4D8               	btfsc	status,2,c
 31839  000A72  D623               	goto	l1259
 31840  000A74  0A01               	xorlw	1	; case 5
 31841  000A76  B4D8               	btfsc	status,2,c
 31842  000A78  D6BC               	goto	l1263
 31843  000A7A  0A03               	xorlw	3	; case 6
 31844  000A7C  B4D8               	btfsc	status,2,c
 31845  000A7E  D6D6               	goto	l1264
 31846  000A80  0A01               	xorlw	1	; case 7
 31847  000A82  B4D8               	btfsc	status,2,c
 31848  000A84  D752               	goto	l1272
 31849  000A86  0A0F               	xorlw	15	; case 8
 31850  000A88  B4D8               	btfsc	status,2,c
 31851  000A8A  D6E5               	goto	l1265
 31852  000A8C  0A01               	xorlw	1	; case 9
 31853  000A8E  B4D8               	btfsc	status,2,c
 31854  000A90  D6FF               	goto	l1266
 31855  000A92  0A03               	xorlw	3	; case 10
 31856  000A94  B4D8               	btfsc	status,2,c
 31857  000A96  D719               	goto	l1267
 31858  000A98  0A01               	xorlw	1	; case 11
 31859  000A9A  B4D8               	btfsc	status,2,c
 31860  000A9C  D770               	goto	l1277
 31861  000A9E  0A07               	xorlw	7	; case 12
 31862  000AA0  B4D8               	btfsc	status,2,c
 31863  000AA2  D783               	goto	l1278
 31864  000AA4  0A01               	xorlw	1	; case 13
 31865  000AA6  B4D8               	btfsc	status,2,c
 31866  000AA8  D78D               	goto	l1280
 31867  000AAA  0A03               	xorlw	3	; case 14
 31868  000AAC  B4D8               	btfsc	status,2,c
 31869  000AAE  D7C9               	goto	l1285
 31870  000AB0  0A01               	xorlw	1	; case 15
 31871  000AB2  B4D8               	btfsc	status,2,c
 31872  000AB4  D7CA               	goto	l1286
 31873  000AB6                     l1255:
 31874                           
 31875                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 31876                           
 31877                           ; BSR set to: 1
 31878  000AB6  0101               	movlb	1	; () banked
 31879  000AB8  51E6               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 31880  000ABA  0012               	return	
 31881  000ABC                     __end_of_HttpGetMethod:
 31882                           	opt stack 0
 31883                           tosu	equ	0xFFF
 31884                           tosh	equ	0xFFE
 31885                           tosl	equ	0xFFD
 31886                           pclath	equ	0xFFA
 31887                           tblptru	equ	0xFF8
 31888                           tblptrh	equ	0xFF7
 31889                           tblptrl	equ	0xFF6
 31890                           tablat	equ	0xFF5
 31891                           prodh	equ	0xFF4
 31892                           prodl	equ	0xFF3
 31893                           intcon	equ	0xFF2
 31894                           intcon2	equ	0xFF1
 31895                           intcon3	equ	0xFF0
 31896                           indf0	equ	0xFEF
 31897                           postinc0	equ	0xFEE
 31898                           plusw0	equ	0xFEB
 31899                           fsr0h	equ	0xFEA
 31900                           fsr0l	equ	0xFE9
 31901                           wreg	equ	0xFE8
 31902                           indf1	equ	0xFE7
 31903                           postinc1	equ	0xFE6
 31904                           postdec1	equ	0xFE5
 31905                           plusw1	equ	0xFE3
 31906                           fsr1h	equ	0xFE2
 31907                           fsr1l	equ	0xFE1
 31908                           indf2	equ	0xFDF
 31909                           postinc2	equ	0xFDE
 31910                           postdec2	equ	0xFDD
 31911                           plusw2	equ	0xFDB
 31912                           fsr2h	equ	0xFDA
 31913                           fsr2l	equ	0xFD9
 31914                           status	equ	0xFD8
 31915                           
 31916 ;; *************** function _Uart_WriteString *****************
 31917 ;; Defined at:
 31918 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31919 ;; Parameters:    Size  Location     Type
 31920 ;;  Module          1    wreg     unsigned char 
 31921 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 31922 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 31923 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 31924 ;; Auto vars:     Size  Location     Type
 31925 ;;  Module          1   34[BANK0 ] unsigned char 
 31926 ;; Return value:  Size  Location     Type
 31927 ;;                  1    wreg      void 
 31928 ;; Registers used:
 31929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31930 ;; Tracked objects:
 31931 ;;		On entry : 0/0
 31932 ;;		On exit  : 0/0
 31933 ;;		Unchanged: 0/0
 31934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31938 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31939 ;;Total ram usage:        3 bytes
 31940 ;; Hardware stack levels used:    1
 31941 ;; Hardware stack levels required when called:   12
 31942 ;; This function calls:
 31943 ;;		_UartTxBufferStatus
 31944 ;;		_UartWriteByte
 31945 ;; This function is called by:
 31946 ;;		_Mdm_SetSmsFormat
 31947 ;;		_InitGprsNetwork
 31948 ;;		_HttpGetMethod
 31949 ;;		_Mdm_PinUnlock
 31950 ;;		_Mdm_MakePhoneCall
 31951 ;; This function uses a non-reentrant model
 31952 ;;
 31953                           
 31954                           	psect	text144
 31955  006310                     __ptext144:
 31956                           	opt stack 0
 31957  006310                     _Uart_WriteString:
 31958                           	opt stack 12
 31959                           
 31960                           ; BSR set to: 1
 31961                           ;incstack = 0
 31962                           ;Uart_WriteString@Module stored from wreg
 31963  006310  0100               	movlb	0	; () banked
 31964  006312  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 31965                           
 31966                           ;uart_drv.c: 521: while (*StringToWrite)
 31967  006314  D014               	goto	u12270
 31968  006316                     
 31969                           ;uart_drv.c: 522: {
 31970                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 31971  006316  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31972  00631A  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31973  00631E  50DF               	movf	indf2,w,c
 31974  006320  0100               	movlb	0	; () banked
 31975  006322  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 31976  006324  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31977  006326  EC7C  F034         	call	_UartWriteByte
 31978                           
 31979                           ;uart_drv.c: 526: StringToWrite++;
 31980  00632A  0100               	movlb	0	; () banked
 31981  00632C  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 31982  00632E  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 31983  006330                     
 31984                           ; BSR set to: 0
 31985                           
 31986                           ; BSR set to: 0
 31987  006330  0100               	movlb	0	; () banked
 31988  006332  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31989  006334  EC7F  F02F         	call	_UartTxBufferStatus
 31990  006338  06E8               	decf	wreg,f,c
 31991  00633A  B4D8               	btfsc	status,2,c
 31992  00633C  D7F9               	goto	l709
 31993  00633E                     u12270:
 31994  00633E  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31995  006342  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31996  006346  50DF               	movf	indf2,w,c
 31997  006348  B4D8               	btfsc	status,2,c
 31998  00634A  0012               	return	
 31999  00634C  D7E4               	goto	l707
 32000  00634E                     __end_of_Uart_WriteString:
 32001                           	opt stack 0
 32002                           tosu	equ	0xFFF
 32003                           tosh	equ	0xFFE
 32004                           tosl	equ	0xFFD
 32005                           pclath	equ	0xFFA
 32006                           tblptru	equ	0xFF8
 32007                           tblptrh	equ	0xFF7
 32008                           tblptrl	equ	0xFF6
 32009                           tablat	equ	0xFF5
 32010                           prodh	equ	0xFF4
 32011                           prodl	equ	0xFF3
 32012                           intcon	equ	0xFF2
 32013                           intcon2	equ	0xFF1
 32014                           intcon3	equ	0xFF0
 32015                           indf0	equ	0xFEF
 32016                           postinc0	equ	0xFEE
 32017                           plusw0	equ	0xFEB
 32018                           fsr0h	equ	0xFEA
 32019                           fsr0l	equ	0xFE9
 32020                           wreg	equ	0xFE8
 32021                           indf1	equ	0xFE7
 32022                           postinc1	equ	0xFE6
 32023                           postdec1	equ	0xFE5
 32024                           plusw1	equ	0xFE3
 32025                           fsr1h	equ	0xFE2
 32026                           fsr1l	equ	0xFE1
 32027                           indf2	equ	0xFDF
 32028                           postinc2	equ	0xFDE
 32029                           postdec2	equ	0xFDD
 32030                           plusw2	equ	0xFDB
 32031                           fsr2h	equ	0xFDA
 32032                           fsr2l	equ	0xFD9
 32033                           status	equ	0xFD8
 32034                           
 32035 ;; *************** function _Uart_WriteConstString *****************
 32036 ;; Defined at:
 32037 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32038 ;; Parameters:    Size  Location     Type
 32039 ;;  Module          1    wreg     unsigned char 
 32040 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 32041 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 32042 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 32043 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 32044 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 32045 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 32046 ;; Auto vars:     Size  Location     Type
 32047 ;;  Module          1   34[BANK0 ] unsigned char 
 32048 ;; Return value:  Size  Location     Type
 32049 ;;                  1    wreg      void 
 32050 ;; Registers used:
 32051 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32052 ;; Tracked objects:
 32053 ;;		On entry : 0/0
 32054 ;;		On exit  : 0/0
 32055 ;;		Unchanged: 0/0
 32056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32060 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32061 ;;Total ram usage:        3 bytes
 32062 ;; Hardware stack levels used:    1
 32063 ;; Hardware stack levels required when called:   12
 32064 ;; This function calls:
 32065 ;;		_UartTxBufferStatus
 32066 ;;		_UartWriteByte
 32067 ;; This function is called by:
 32068 ;;		_CheckModem
 32069 ;;		_ConfigureModem
 32070 ;;		_GetSmsSm
 32071 ;;		_Mdm_HangPhoneCall
 32072 ;;		_InitGprsNetwork
 32073 ;;		_HttpGetMethod
 32074 ;;		_detectCmd
 32075 ;;		_initGprsModem
 32076 ;;		_Mdm_GetPhoneCall
 32077 ;;		_MdmHttp_SetSsl
 32078 ;; This function uses a non-reentrant model
 32079 ;;
 32080                           
 32081                           	psect	text145
 32082  0061D0                     __ptext145:
 32083                           	opt stack 0
 32084  0061D0                     _Uart_WriteConstString:
 32085                           	opt stack 11
 32086                           
 32087                           ;incstack = 0
 32088                           ;Uart_WriteConstString@Module stored from wreg
 32089  0061D0  0100               	movlb	0	; () banked
 32090  0061D2  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 32091                           
 32092                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 32093  0061D4  D015               	goto	u11730
 32094  0061D6                     
 32095                           ;uart_drv.c: 500: {
 32096                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 32097  0061D6  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32098  0061DA  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32099  0061DE                     	if	0	;tblptru may be non-zero
 32100  0061DE                     	endif
 32101  0061DE                     	if	0	;tblptru may be non-zero
 32102  0061DE                     	endif
 32103  0061DE  0008               	tblrd		*
 32104  0061E0  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 32105  0061E4  0100               	movlb	0	; () banked
 32106  0061E6  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32107  0061E8  EC7C  F034         	call	_UartWriteByte
 32108                           
 32109                           ;uart_drv.c: 504: ConstStringToWrite++;
 32110  0061EC  0100               	movlb	0	; () banked
 32111  0061EE  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 32112  0061F0  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 32113  0061F2                     
 32114                           ; BSR set to: 0
 32115                           
 32116                           ; BSR set to: 0
 32117  0061F2  0100               	movlb	0	; () banked
 32118  0061F4  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32119  0061F6  EC7F  F02F         	call	_UartTxBufferStatus
 32120  0061FA  06E8               	decf	wreg,f,c
 32121  0061FC  B4D8               	btfsc	status,2,c
 32122  0061FE  D7F9               	goto	l700
 32123  006200                     u11730:
 32124  006200  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32125  006204  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32126  006208                     	if	0	;tblptru may be non-zero
 32127  006208                     	endif
 32128  006208                     	if	0	;tblptru may be non-zero
 32129  006208                     	endif
 32130  006208  0008               	tblrd		*
 32131  00620A  50F5               	movf	tablat,w,c
 32132  00620C  0900               	iorlw	0
 32133  00620E  B4D8               	btfsc	status,2,c
 32134  006210  0012               	return	
 32135  006212  D7E1               	goto	l698
 32136  006214                     __end_of_Uart_WriteConstString:
 32137                           	opt stack 0
 32138                           tosu	equ	0xFFF
 32139                           tosh	equ	0xFFE
 32140                           tosl	equ	0xFFD
 32141                           pclath	equ	0xFFA
 32142                           tblptru	equ	0xFF8
 32143                           tblptrh	equ	0xFF7
 32144                           tblptrl	equ	0xFF6
 32145                           tablat	equ	0xFF5
 32146                           prodh	equ	0xFF4
 32147                           prodl	equ	0xFF3
 32148                           intcon	equ	0xFF2
 32149                           intcon2	equ	0xFF1
 32150                           intcon3	equ	0xFF0
 32151                           indf0	equ	0xFEF
 32152                           postinc0	equ	0xFEE
 32153                           plusw0	equ	0xFEB
 32154                           fsr0h	equ	0xFEA
 32155                           fsr0l	equ	0xFE9
 32156                           wreg	equ	0xFE8
 32157                           indf1	equ	0xFE7
 32158                           postinc1	equ	0xFE6
 32159                           postdec1	equ	0xFE5
 32160                           plusw1	equ	0xFE3
 32161                           fsr1h	equ	0xFE2
 32162                           fsr1l	equ	0xFE1
 32163                           indf2	equ	0xFDF
 32164                           postinc2	equ	0xFDE
 32165                           postdec2	equ	0xFDD
 32166                           plusw2	equ	0xFDB
 32167                           fsr2h	equ	0xFDA
 32168                           fsr2l	equ	0xFD9
 32169                           status	equ	0xFD8
 32170                           
 32171 ;; *************** function _UartWriteByte *****************
 32172 ;; Defined at:
 32173 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32174 ;; Parameters:    Size  Location     Type
 32175 ;;  Module          1    wreg     unsigned char 
 32176 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 32177 ;; Auto vars:     Size  Location     Type
 32178 ;;  Module          1   30[BANK0 ] unsigned char 
 32179 ;; Return value:  Size  Location     Type
 32180 ;;                  1    wreg      void 
 32181 ;; Registers used:
 32182 ;;		wreg, status,2, status,0
 32183 ;; Tracked objects:
 32184 ;;		On entry : 0/0
 32185 ;;		On exit  : 0/0
 32186 ;;		Unchanged: 0/0
 32187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32188 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32192 ;;Total ram usage:        2 bytes
 32193 ;; Hardware stack levels used:    1
 32194 ;; Hardware stack levels required when called:   11
 32195 ;; This function calls:
 32196 ;;		Nothing
 32197 ;; This function is called by:
 32198 ;;		_Uart_WriteConstString
 32199 ;;		_Uart_WriteString
 32200 ;;		_Uart_WriteStringLen
 32201 ;; This function uses a non-reentrant model
 32202 ;;
 32203                           
 32204                           	psect	text146
 32205  0068F8                     __ptext146:
 32206                           	opt stack 0
 32207  0068F8                     _UartWriteByte:
 32208                           	opt stack 11
 32209                           
 32210                           ;incstack = 0
 32211                           ;UartWriteByte@Module stored from wreg
 32212  0068F8  0100               	movlb	0	; () banked
 32213  0068FA  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 32214                           
 32215                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 32216  0068FC  0100               	movlb	0	; () banked
 32217  0068FE  057E               	decf	UartWriteByte@Module& (0+255),w,b
 32218  006900  A4D8               	btfss	status,2,c
 32219  006902  D003               	goto	l639
 32220                           
 32221                           ; BSR set to: 0
 32222                           ;uart_drv.c: 176: {
 32223                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 32224  006904  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 32225                           
 32226                           ;uart_drv.c: 179: }
 32227  006908  0012               	return	
 32228  00690A                     l639:
 32229                           
 32230                           ; BSR set to: 0
 32231                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 32232                           
 32233                           ; BSR set to: 0
 32234  00690A  0E02               	movlw	2
 32235  00690C  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 32236  00690E  A4D8               	btfss	status,2,c
 32237  006910  0012               	return	
 32238                           
 32239                           ; BSR set to: 0
 32240                           ;uart_drv.c: 181: {
 32241                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 32242  006912  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 32243                           
 32244                           ; BSR set to: 0
 32245  006916  0012               	return	
 32246  006918                     __end_of_UartWriteByte:
 32247                           	opt stack 0
 32248                           tosu	equ	0xFFF
 32249                           tosh	equ	0xFFE
 32250                           tosl	equ	0xFFD
 32251                           pclath	equ	0xFFA
 32252                           tblptru	equ	0xFF8
 32253                           tblptrh	equ	0xFF7
 32254                           tblptrl	equ	0xFF6
 32255                           tablat	equ	0xFF5
 32256                           prodh	equ	0xFF4
 32257                           prodl	equ	0xFF3
 32258                           intcon	equ	0xFF2
 32259                           intcon2	equ	0xFF1
 32260                           intcon3	equ	0xFF0
 32261                           indf0	equ	0xFEF
 32262                           postinc0	equ	0xFEE
 32263                           plusw0	equ	0xFEB
 32264                           fsr0h	equ	0xFEA
 32265                           fsr0l	equ	0xFE9
 32266                           wreg	equ	0xFE8
 32267                           indf1	equ	0xFE7
 32268                           postinc1	equ	0xFE6
 32269                           postdec1	equ	0xFE5
 32270                           plusw1	equ	0xFE3
 32271                           fsr1h	equ	0xFE2
 32272                           fsr1l	equ	0xFE1
 32273                           indf2	equ	0xFDF
 32274                           postinc2	equ	0xFDE
 32275                           postdec2	equ	0xFDD
 32276                           plusw2	equ	0xFDB
 32277                           fsr2h	equ	0xFDA
 32278                           fsr2l	equ	0xFD9
 32279                           status	equ	0xFD8
 32280                           
 32281 ;; *************** function _UartTxBufferStatus *****************
 32282 ;; Defined at:
 32283 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32284 ;; Parameters:    Size  Location     Type
 32285 ;;  Module          1    wreg     unsigned char 
 32286 ;; Auto vars:     Size  Location     Type
 32287 ;;  Module          1   30[BANK0 ] unsigned char 
 32288 ;;  TxBufferStat    1   31[BANK0 ] enum E9037
 32289 ;; Return value:  Size  Location     Type
 32290 ;;                  1    wreg      enum E9037
 32291 ;; Registers used:
 32292 ;;		wreg, status,2, status,0
 32293 ;; Tracked objects:
 32294 ;;		On entry : 0/0
 32295 ;;		On exit  : 0/0
 32296 ;;		Unchanged: 0/0
 32297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32299 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32301 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32302 ;;Total ram usage:        3 bytes
 32303 ;; Hardware stack levels used:    1
 32304 ;; Hardware stack levels required when called:   11
 32305 ;; This function calls:
 32306 ;;		Nothing
 32307 ;; This function is called by:
 32308 ;;		_Uart_WriteConstString
 32309 ;;		_Uart_WriteString
 32310 ;;		_Uart_WriteStringLen
 32311 ;; This function uses a non-reentrant model
 32312 ;;
 32313                           
 32314                           	psect	text147
 32315  005EFE                     __ptext147:
 32316                           	opt stack 0
 32317  005EFE                     _UartTxBufferStatus:
 32318                           	opt stack 11
 32319                           
 32320                           ; BSR set to: 0
 32321                           ;incstack = 0
 32322                           ;UartTxBufferStatus@Module stored from wreg
 32323  005EFE  0100               	movlb	0	; () banked
 32324  005F00  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 32325                           
 32326                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 32327  005F02  0E00               	movlw	0
 32328  005F04  0100               	movlb	0	; () banked
 32329  005F06  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32330                           
 32331                           ; BSR set to: 0
 32332                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 32333  005F08  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 32334  005F0A  A4D8               	btfss	status,2,c
 32335  005F0C  D00B               	goto	l651
 32336                           
 32337                           ; BSR set to: 0
 32338                           ;uart_drv.c: 228: {
 32339                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32340  005F0E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32341  005F12  90D8               	bcf	status,0,c
 32342  005F14  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32343  005F16  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 32344  005F18  D002               	goto	l652
 32345  005F1A                     u11570:
 32346                           
 32347                           ; BSR set to: 0
 32348                           ;uart_drv.c: 231: {
 32349                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 32350  005F1A  0E01               	movlw	1
 32351  005F1C  D014               	goto	L78
 32352  005F1E                     l652:
 32353                           
 32354                           ; BSR set to: 0
 32355                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32356                           
 32357                           ; BSR set to: 0
 32358  005F1E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32359  005F22  D00C               	goto	L107
 32360  005F24                     l651:
 32361                           
 32362                           ; BSR set to: 0
 32363                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 32364                           
 32365                           ; BSR set to: 0
 32366  005F24  0E02               	movlw	2
 32367  005F26  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 32368  005F28  A4D8               	btfss	status,2,c
 32369  005F2A  D00E               	goto	l660
 32370                           
 32371                           ; BSR set to: 0
 32372                           ;uart_drv.c: 244: {
 32373                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32374  005F2C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32375  005F30  90D8               	bcf	status,0,c
 32376  005F32  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32377  005F34  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32378  005F36  D7F1               	goto	u11570
 32379                           
 32380                           ; BSR set to: 0
 32381                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32382                           
 32383                           ; BSR set to: 0
 32384                           
 32385                           ;uart_drv.c: 249: }
 32386                           
 32387                           ; BSR set to: 0
 32388                           ;uart_drv.c: 247: {
 32389                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 32390  005F38  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32391  005F3C                     L107:
 32392  005F3C  90D8               	bcf	status,0,c
 32393  005F3E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32394  005F40  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32395  005F42  D002               	goto	l660
 32396                           
 32397                           ; BSR set to: 0
 32398                           ;uart_drv.c: 251: {
 32399                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 32400  005F44  0E02               	movlw	2
 32401  005F46                     L78:
 32402  005F46  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32403  005F48                     l660:
 32404                           
 32405                           ; BSR set to: 0
 32406                           ;uart_drv.c: 257: }
 32407                           ;uart_drv.c: 258: }
 32408                           ;uart_drv.c: 260: return TxBufferStatus;
 32409                           
 32410                           ; BSR set to: 0
 32411                           
 32412                           ; BSR set to: 0
 32413                           
 32414                           ; BSR set to: 0
 32415                           
 32416                           ; BSR set to: 0
 32417                           
 32418                           ;uart_drv.c: 254: else
 32419                           ;uart_drv.c: 255: {
 32420                           
 32421                           ; BSR set to: 0
 32422  005F48  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 32423  005F4A  0012               	return	
 32424  005F4C                     __end_of_UartTxBufferStatus:
 32425                           	opt stack 0
 32426                           tosu	equ	0xFFF
 32427                           tosh	equ	0xFFE
 32428                           tosl	equ	0xFFD
 32429                           pclath	equ	0xFFA
 32430                           tblptru	equ	0xFF8
 32431                           tblptrh	equ	0xFF7
 32432                           tblptrl	equ	0xFF6
 32433                           tablat	equ	0xFF5
 32434                           prodh	equ	0xFF4
 32435                           prodl	equ	0xFF3
 32436                           intcon	equ	0xFF2
 32437                           intcon2	equ	0xFF1
 32438                           intcon3	equ	0xFF0
 32439                           indf0	equ	0xFEF
 32440                           postinc0	equ	0xFEE
 32441                           plusw0	equ	0xFEB
 32442                           fsr0h	equ	0xFEA
 32443                           fsr0l	equ	0xFE9
 32444                           wreg	equ	0xFE8
 32445                           indf1	equ	0xFE7
 32446                           postinc1	equ	0xFE6
 32447                           postdec1	equ	0xFE5
 32448                           plusw1	equ	0xFE3
 32449                           fsr1h	equ	0xFE2
 32450                           fsr1l	equ	0xFE1
 32451                           indf2	equ	0xFDF
 32452                           postinc2	equ	0xFDE
 32453                           postdec2	equ	0xFDD
 32454                           plusw2	equ	0xFDB
 32455                           fsr2h	equ	0xFDA
 32456                           fsr2l	equ	0xFD9
 32457                           status	equ	0xFD8
 32458                           
 32459 ;; *************** function _StringCopy *****************
 32460 ;; Defined at:
 32461 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32462 ;; Parameters:    Size  Location     Type
 32463 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 32464 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), STR_15(20), 
 32465 ;;		 -> STR_9(21), MessageText(50), PhoneNumber(20), STR_5(10), 
 32466 ;;		 -> Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32467 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 32468 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 32469 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 32470 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 32471 ;;  Len             2   41[BANK0 ] unsigned short 
 32472 ;; Auto vars:     Size  Location     Type
 32473 ;;  Index           2   45[BANK0 ] unsigned short 
 32474 ;; Return value:  Size  Location     Type
 32475 ;;                  1    wreg      void 
 32476 ;; Registers used:
 32477 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32478 ;; Tracked objects:
 32479 ;;		On entry : 0/0
 32480 ;;		On exit  : 0/0
 32481 ;;		Unchanged: 0/0
 32482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32483 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32485 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32486 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32487 ;;Total ram usage:       10 bytes
 32488 ;; Hardware stack levels used:    1
 32489 ;; Hardware stack levels required when called:   11
 32490 ;; This function calls:
 32491 ;;		Nothing
 32492 ;; This function is called by:
 32493 ;;		_ModemEvtParser
 32494 ;;		_GetSmsSm
 32495 ;;		_SendSmsSm
 32496 ;;		_Mdm_GetSmsData
 32497 ;;		_InitGprsNetwork
 32498 ;;		_HttpGetMethod
 32499 ;;		_Eeprom_Write
 32500 ;;		_detectCmd
 32501 ;;		_Mdm_SendSmsData
 32502 ;; This function uses a non-reentrant model
 32503 ;;
 32504                           
 32505                           	psect	text148
 32506  005848                     __ptext148:
 32507                           	opt stack 0
 32508  005848                     _StringCopy:
 32509                           	opt stack 13
 32510                           
 32511                           ;sf.c: 106: UINT16 Index = 0;
 32512                           
 32513                           ; BSR set to: 0
 32514                           ;incstack = 0
 32515  005848  0E00               	movlw	0
 32516  00584A  0100               	movlb	0	; () banked
 32517  00584C  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32518  00584E  0E00               	movlw	0
 32519  005850  6F8D               	movwf	StringCopy@Index& (0+255),b
 32520                           
 32521                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 32522  005852  0E00               	movlw	0
 32523  005854  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32524  005856  0E00               	movlw	0
 32525  005858  6F8D               	movwf	StringCopy@Index& (0+255),b
 32526  00585A  D020               	goto	l2256
 32527  00585C                     
 32528                           ; BSR set to: 0
 32529                           ;sf.c: 110: {
 32530                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 32531                           
 32532                           ; BSR set to: 0
 32533  00585C  518D               	movf	StringCopy@Index& (0+255),w,b
 32534  00585E  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 32535  005860  6F8B               	movwf	??_StringCopy& (0+255),b
 32536  005862  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32537  005864  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 32538  005866  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 32539  005868  C08B  FFF6         	movff	??_StringCopy,tblptrl
 32540  00586C  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 32541  005870  6AF8               	clrf	tblptru,c
 32542  005872  518D               	movf	StringCopy@Index& (0+255),w,b
 32543  005874  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 32544  005876  6ED9               	movwf	fsr2l,c
 32545  005878  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32546  00587A  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 32547  00587C  6EDA               	movwf	fsr2h,c
 32548  00587E  0E0E               	movlw	(high __ramtop+-1)
 32549  005880  64F7               	cpfsgt	tblptrh,c
 32550  005882  D003               	bra	u12297
 32551  005884  0008               	tblrd		*
 32552  005886  50F5               	movf	tablat,w,c
 32553  005888  D005               	bra	u12290
 32554  00588A                     u12297:
 32555  00588A  CFF6 FFE9          	movff	tblptrl,fsr0l
 32556  00588E  CFF7 FFEA          	movff	tblptrh,fsr0h
 32557  005892  50EF               	movf	indf0,w,c
 32558  005894                     u12290:
 32559  005894  6EDF               	movwf	indf2,c
 32560  005896  0100               	movlb	0	; () banked
 32561  005898  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 32562  00589A  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 32563  00589C                     l2256:
 32564                           
 32565                           ; BSR set to: 0
 32566                           
 32567                           ; BSR set to: 0
 32568  00589C  5189               	movf	StringCopy@Len& (0+255),w,b
 32569  00589E  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 32570  0058A0  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 32571  0058A2  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 32572  0058A4  B0D8               	btfsc	status,0,c
 32573  0058A6  0012               	return	
 32574  0058A8  D7D9               	goto	l2257
 32575  0058AA                     __end_of_StringCopy:
 32576                           	opt stack 0
 32577                           tosu	equ	0xFFF
 32578                           tosh	equ	0xFFE
 32579                           tosl	equ	0xFFD
 32580                           pclath	equ	0xFFA
 32581                           tblptru	equ	0xFF8
 32582                           tblptrh	equ	0xFF7
 32583                           tblptrl	equ	0xFF6
 32584                           tablat	equ	0xFF5
 32585                           prodh	equ	0xFF4
 32586                           prodl	equ	0xFF3
 32587                           intcon	equ	0xFF2
 32588                           intcon2	equ	0xFF1
 32589                           intcon3	equ	0xFF0
 32590                           indf0	equ	0xFEF
 32591                           postinc0	equ	0xFEE
 32592                           plusw0	equ	0xFEB
 32593                           fsr0h	equ	0xFEA
 32594                           fsr0l	equ	0xFE9
 32595                           wreg	equ	0xFE8
 32596                           indf1	equ	0xFE7
 32597                           postinc1	equ	0xFE6
 32598                           postdec1	equ	0xFE5
 32599                           plusw1	equ	0xFE3
 32600                           fsr1h	equ	0xFE2
 32601                           fsr1l	equ	0xFE1
 32602                           indf2	equ	0xFDF
 32603                           postinc2	equ	0xFDE
 32604                           postdec2	equ	0xFDD
 32605                           plusw2	equ	0xFDB
 32606                           fsr2h	equ	0xFDA
 32607                           fsr2l	equ	0xFD9
 32608                           status	equ	0xFD8
 32609                           
 32610 ;; *************** function _OsTmr_StartTimer *****************
 32611 ;; Defined at:
 32612 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32613 ;; Parameters:    Size  Location     Type
 32614 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 32615 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32616 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32617 ;;  Timeout         4   35[BANK0 ] unsigned long 
 32618 ;; Auto vars:     Size  Location     Type
 32619 ;;		None
 32620 ;; Return value:  Size  Location     Type
 32621 ;;                  1    wreg      void 
 32622 ;; Registers used:
 32623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32624 ;; Tracked objects:
 32625 ;;		On entry : 0/0
 32626 ;;		On exit  : 0/0
 32627 ;;		Unchanged: 0/0
 32628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32629 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32632 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32633 ;;Total ram usage:        6 bytes
 32634 ;; Hardware stack levels used:    1
 32635 ;; Hardware stack levels required when called:   12
 32636 ;; This function calls:
 32637 ;;		_GetOsTickCounter
 32638 ;; This function is called by:
 32639 ;;		_OsTmr_Wait
 32640 ;;		_CheckModem
 32641 ;;		_SendSmsSm
 32642 ;;		_InitGprsNetwork
 32643 ;;		_HttpGetMethod
 32644 ;;		_I2cSlv_QueryI2cData
 32645 ;;		_Term_MainSm
 32646 ;; This function uses a non-reentrant model
 32647 ;;
 32648                           
 32649                           	psect	text149
 32650  005908                     __ptext149:
 32651                           	opt stack 0
 32652  005908                     _OsTmr_StartTimer:
 32653                           	opt stack 12
 32654                           
 32655                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 32656                           
 32657                           ; BSR set to: 0
 32658                           ;incstack = 0
 32659  005908  0100               	movlb	0	; () banked
 32660  00590A  EE20 F001          	lfsr	2,1
 32661  00590E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32662  005910  26D9               	addwf	fsr2l,f,c
 32663  005912  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32664  005914  22DA               	addwfc	fsr2h,f,c
 32665  005916  0E00               	movlw	0
 32666  005918  6EDF               	movwf	indf2,c
 32667                           
 32668                           ; BSR set to: 0
 32669                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 32670  00591A  EC75  F035         	call	_GetOsTickCounter	;wreg free
 32671  00591E  0100               	movlb	0	; () banked
 32672  005920  EE20 F002          	lfsr	2,2
 32673  005924  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32674  005926  26D9               	addwf	fsr2l,f,c
 32675  005928  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32676  00592A  22DA               	addwfc	fsr2h,f,c
 32677  00592C  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 32678  005930  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 32679  005934  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 32680  005938  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 32681                           
 32682                           ; BSR set to: 0
 32683                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 32684  00593C  EE20 F006          	lfsr	2,6
 32685  005940  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32686  005942  26D9               	addwf	fsr2l,f,c
 32687  005944  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32688  005946  22DA               	addwfc	fsr2h,f,c
 32689  005948  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 32690  00594C  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 32691  005950  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 32692  005954  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 32693                           
 32694                           ; BSR set to: 0
 32695                           ;os_timers.c: 127: Timer->Enabled = 1u;
 32696  005958  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 32697  00595C  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 32698  005960  0E01               	movlw	1
 32699  005962  6EDF               	movwf	indf2,c
 32700                           
 32701                           ; BSR set to: 0
 32702  005964  0012               	return		;funcret
 32703  005966                     __end_of_OsTmr_StartTimer:
 32704                           	opt stack 0
 32705                           tosu	equ	0xFFF
 32706                           tosh	equ	0xFFE
 32707                           tosl	equ	0xFFD
 32708                           pclath	equ	0xFFA
 32709                           tblptru	equ	0xFF8
 32710                           tblptrh	equ	0xFF7
 32711                           tblptrl	equ	0xFF6
 32712                           tablat	equ	0xFF5
 32713                           prodh	equ	0xFF4
 32714                           prodl	equ	0xFF3
 32715                           intcon	equ	0xFF2
 32716                           intcon2	equ	0xFF1
 32717                           intcon3	equ	0xFF0
 32718                           indf0	equ	0xFEF
 32719                           postinc0	equ	0xFEE
 32720                           plusw0	equ	0xFEB
 32721                           fsr0h	equ	0xFEA
 32722                           fsr0l	equ	0xFE9
 32723                           wreg	equ	0xFE8
 32724                           indf1	equ	0xFE7
 32725                           postinc1	equ	0xFE6
 32726                           postdec1	equ	0xFE5
 32727                           plusw1	equ	0xFE3
 32728                           fsr1h	equ	0xFE2
 32729                           fsr1l	equ	0xFE1
 32730                           indf2	equ	0xFDF
 32731                           postinc2	equ	0xFDE
 32732                           postdec2	equ	0xFDD
 32733                           plusw2	equ	0xFDB
 32734                           fsr2h	equ	0xFDA
 32735                           fsr2l	equ	0xFD9
 32736                           status	equ	0xFD8
 32737                           
 32738 ;; *************** function _OsTmr_GetTimerStatus *****************
 32739 ;; Defined at:
 32740 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32741 ;; Parameters:    Size  Location     Type
 32742 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 32743 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32744 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32745 ;; Auto vars:     Size  Location     Type
 32746 ;;		None
 32747 ;; Return value:  Size  Location     Type
 32748 ;;                  1    wreg      enum E7740
 32749 ;; Registers used:
 32750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32751 ;; Tracked objects:
 32752 ;;		On entry : 0/0
 32753 ;;		On exit  : 0/0
 32754 ;;		Unchanged: 0/0
 32755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32758 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32759 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32760 ;;Total ram usage:        6 bytes
 32761 ;; Hardware stack levels used:    1
 32762 ;; Hardware stack levels required when called:   13
 32763 ;; This function calls:
 32764 ;;		_GetElapsedTime
 32765 ;; This function is called by:
 32766 ;;		_OsTmr_Wait
 32767 ;;		_CheckModem
 32768 ;;		_SendSmsSm
 32769 ;;		_InitGprsNetwork
 32770 ;;		_HttpGetMethod
 32771 ;;		_I2cSlv_QueryI2cData
 32772 ;;		_Term_MainSm
 32773 ;; This function uses a non-reentrant model
 32774 ;;
 32775                           
 32776                           	psect	text150
 32777  0050DE                     __ptext150:
 32778                           	opt stack 0
 32779  0050DE                     _OsTmr_GetTimerStatus:
 32780                           	opt stack 11
 32781                           
 32782                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 32783                           
 32784                           ; BSR set to: 0
 32785                           ;incstack = 0
 32786  0050DE  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32787  0050E2  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32788  0050E6  04DE               	decf	postinc2,w,c
 32789  0050E8  A4D8               	btfss	status,2,c
 32790  0050EA  D030               	goto	l864
 32791                           
 32792                           ;os_timers.c: 197: {
 32793                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 32794  0050EC  0100               	movlb	0	; () banked
 32795  0050EE  EE20 F006          	lfsr	2,6
 32796  0050F2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32797  0050F4  26D9               	addwf	fsr2l,f,c
 32798  0050F6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32799  0050F8  22DA               	addwfc	fsr2h,f,c
 32800  0050FA  EE10 F002          	lfsr	1,2
 32801  0050FE  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32802  005100  26E1               	addwf	fsr1l,f,c
 32803  005102  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32804  005104  22E2               	addwfc	fsr1h,f,c
 32805  005106  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 32806  00510A  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 32807  00510E  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 32808  005112  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 32809  005116  ECE1  F01F         	call	_GetElapsedTime	;wreg free
 32810  00511A  50DE               	movf	postinc2,w,c
 32811  00511C  0100               	movlb	0	; () banked
 32812  00511E  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 32813  005120  50DE               	movf	postinc2,w,c
 32814  005122  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 32815  005124  50DE               	movf	postinc2,w,c
 32816  005126  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 32817  005128  50DE               	movf	postinc2,w,c
 32818  00512A  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 32819  00512C  A0D8               	btfss	status,0,c
 32820  00512E  D017               	goto	l867
 32821                           
 32822                           ; BSR set to: 0
 32823                           ;os_timers.c: 200: {
 32824                           ;os_timers.c: 202: Timer->Enabled = 0u;
 32825  005130  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32826  005134  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32827  005138  0E00               	movlw	0
 32828  00513A  6EDF               	movwf	indf2,c
 32829                           
 32830                           ; BSR set to: 0
 32831                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 32832  00513C  EE20 F001          	lfsr	2,1
 32833  005140  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32834  005142  26D9               	addwf	fsr2l,f,c
 32835  005144  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32836  005146  22DA               	addwfc	fsr2h,f,c
 32837  005148  0E01               	movlw	1
 32838  00514A  D008               	goto	L108
 32839  00514C                     l864:
 32840                           
 32841                           ;os_timers.c: 211: else
 32842                           ;os_timers.c: 212: {
 32843                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 32844                           
 32845                           ; BSR set to: 0
 32846  00514C  0100               	movlb	0	; () banked
 32847  00514E  EE20 F001          	lfsr	2,1
 32848  005152  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32849  005154  26D9               	addwf	fsr2l,f,c
 32850  005156  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32851  005158  22DA               	addwfc	fsr2h,f,c
 32852  00515A  0E02               	movlw	2
 32853  00515C                     L108:
 32854  00515C  6EDF               	movwf	indf2,c
 32855  00515E                     l867:
 32856                           
 32857                           ; BSR set to: 0
 32858                           ;os_timers.c: 215: }
 32859                           ;os_timers.c: 218: return Timer->Status;
 32860  00515E  EE20 F001          	lfsr	2,1
 32861  005162  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32862  005164  26D9               	addwf	fsr2l,f,c
 32863  005166  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32864  005168  22DA               	addwfc	fsr2h,f,c
 32865  00516A  50DF               	movf	indf2,w,c
 32866  00516C  0012               	return	
 32867  00516E                     __end_of_OsTmr_GetTimerStatus:
 32868                           	opt stack 0
 32869                           tosu	equ	0xFFF
 32870                           tosh	equ	0xFFE
 32871                           tosl	equ	0xFFD
 32872                           pclath	equ	0xFFA
 32873                           tblptru	equ	0xFF8
 32874                           tblptrh	equ	0xFF7
 32875                           tblptrl	equ	0xFF6
 32876                           tablat	equ	0xFF5
 32877                           prodh	equ	0xFF4
 32878                           prodl	equ	0xFF3
 32879                           intcon	equ	0xFF2
 32880                           intcon2	equ	0xFF1
 32881                           intcon3	equ	0xFF0
 32882                           indf0	equ	0xFEF
 32883                           postinc0	equ	0xFEE
 32884                           plusw0	equ	0xFEB
 32885                           fsr0h	equ	0xFEA
 32886                           fsr0l	equ	0xFE9
 32887                           wreg	equ	0xFE8
 32888                           indf1	equ	0xFE7
 32889                           postinc1	equ	0xFE6
 32890                           postdec1	equ	0xFE5
 32891                           plusw1	equ	0xFE3
 32892                           fsr1h	equ	0xFE2
 32893                           fsr1l	equ	0xFE1
 32894                           indf2	equ	0xFDF
 32895                           postinc2	equ	0xFDE
 32896                           postdec2	equ	0xFDD
 32897                           plusw2	equ	0xFDB
 32898                           fsr2h	equ	0xFDA
 32899                           fsr2l	equ	0xFD9
 32900                           status	equ	0xFD8
 32901                           
 32902 ;; *************** function _GetElapsedTime *****************
 32903 ;; Defined at:
 32904 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32905 ;; Parameters:    Size  Location     Type
 32906 ;;  StartTime       4   33[BANK0 ] unsigned long 
 32907 ;; Auto vars:     Size  Location     Type
 32908 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 32909 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 32910 ;; Return value:  Size  Location     Type
 32911 ;;                  4   33[BANK0 ] unsigned long 
 32912 ;; Registers used:
 32913 ;;		wreg, status,2, status,0, cstack
 32914 ;; Tracked objects:
 32915 ;;		On entry : 0/0
 32916 ;;		On exit  : 0/0
 32917 ;;		Unchanged: 0/0
 32918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32919 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32920 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32921 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32922 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32923 ;;Total ram usage:       20 bytes
 32924 ;; Hardware stack levels used:    1
 32925 ;; Hardware stack levels required when called:   12
 32926 ;; This function calls:
 32927 ;;		_GetOsTickCounter
 32928 ;; This function is called by:
 32929 ;;		_OsTmr_GetTimerStatus
 32930 ;;		_OsTmr_GetRemainingTime
 32931 ;; This function uses a non-reentrant model
 32932 ;;
 32933                           
 32934                           	psect	text151
 32935  003FC2                     __ptext151:
 32936                           	opt stack 0
 32937  003FC2                     _GetElapsedTime:
 32938                           	opt stack 11
 32939                           
 32940                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 32941                           ;os_timers.c: 87: UINT32 TimeValue;
 32942                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 32943                           
 32944                           ; BSR set to: 0
 32945                           ;incstack = 0
 32946  003FC2  EC75  F035         	call	_GetOsTickCounter	;wreg free
 32947  003FC6  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 32948  003FCA  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 32949  003FCE  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 32950  003FD2  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 32951                           
 32952                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 32953  003FD6  0100               	movlb	0	; () banked
 32954  003FD8  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 32955  003FDA  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32956  003FDC  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 32957  003FDE  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32958  003FE0  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 32959  003FE2  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32960  003FE4  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 32961  003FE6  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32962  003FE8  A0D8               	btfss	status,0,c
 32963  003FEA  D01D               	goto	l844
 32964                           
 32965                           ; BSR set to: 0
 32966                           ;os_timers.c: 94: {
 32967                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 32968  003FEC  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32969  003FF0  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32970  003FF4  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32971  003FF8  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32972  003FFC  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32973  003FFE  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32974  004000  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32975  004002  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32976  004004  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32977  004006  0E00               	movlw	0
 32978  004008  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32979  00400A  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32980  00400C  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32981  00400E  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32982  004010  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32983  004012  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32984  004014  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32985  004016  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32986  004018  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32987  00401A  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32988  00401C  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32989  00401E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32990  004020  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32991  004022  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32992  004024  D028               	goto	L79
 32993  004026                     l844:
 32994                           
 32995                           ; BSR set to: 0
 32996                           ;os_timers.c: 97: else
 32997                           ;os_timers.c: 98: {
 32998                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 32999                           
 33000                           ; BSR set to: 0
 33001  004026  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33002  00402A  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33003  00402E  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33004  004032  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33005  004036  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33006  004038  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33007  00403A  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33008  00403C  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33009  00403E  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33010  004040  0E00               	movlw	0
 33011  004042  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33012  004044  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33013  004046  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33014  004048  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33015  00404A  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33016  00404C  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 33017  00404E  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33018  004050  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33019  004052  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 33020  004054  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33021  004056  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33022  004058  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 33023  00405A  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33024  00405C  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33025  00405E  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 33026  004060  0EFF               	movlw	255
 33027  004062  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 33028  004064  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33029  004066  0EFF               	movlw	255
 33030  004068  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 33031  00406A  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33032  00406C  0EFF               	movlw	255
 33033  00406E  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 33034  004070  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33035  004072  0EFF               	movlw	255
 33036  004074  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 33037  004076                     L79:
 33038  004076  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 33039                           
 33040                           ; BSR set to: 0
 33041                           ;os_timers.c: 100: }
 33042                           ;os_timers.c: 102: return TimeValue;
 33043                           
 33044                           ; BSR set to: 0
 33045  004078  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 33046  00407C  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 33047  004080  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 33048  004084  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 33049  004088  0012               	return	
 33050  00408A                     __end_of_GetElapsedTime:
 33051                           	opt stack 0
 33052                           tosu	equ	0xFFF
 33053                           tosh	equ	0xFFE
 33054                           tosl	equ	0xFFD
 33055                           pclath	equ	0xFFA
 33056                           tblptru	equ	0xFF8
 33057                           tblptrh	equ	0xFF7
 33058                           tblptrl	equ	0xFF6
 33059                           tablat	equ	0xFF5
 33060                           prodh	equ	0xFF4
 33061                           prodl	equ	0xFF3
 33062                           intcon	equ	0xFF2
 33063                           intcon2	equ	0xFF1
 33064                           intcon3	equ	0xFF0
 33065                           indf0	equ	0xFEF
 33066                           postinc0	equ	0xFEE
 33067                           plusw0	equ	0xFEB
 33068                           fsr0h	equ	0xFEA
 33069                           fsr0l	equ	0xFE9
 33070                           wreg	equ	0xFE8
 33071                           indf1	equ	0xFE7
 33072                           postinc1	equ	0xFE6
 33073                           postdec1	equ	0xFE5
 33074                           plusw1	equ	0xFE3
 33075                           fsr1h	equ	0xFE2
 33076                           fsr1l	equ	0xFE1
 33077                           indf2	equ	0xFDF
 33078                           postinc2	equ	0xFDE
 33079                           postdec2	equ	0xFDD
 33080                           plusw2	equ	0xFDB
 33081                           fsr2h	equ	0xFDA
 33082                           fsr2l	equ	0xFD9
 33083                           status	equ	0xFD8
 33084                           
 33085 ;; *************** function _GetOsTickCounter *****************
 33086 ;; Defined at:
 33087 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33088 ;; Parameters:    Size  Location     Type
 33089 ;;		None
 33090 ;; Auto vars:     Size  Location     Type
 33091 ;;		None
 33092 ;; Return value:  Size  Location     Type
 33093 ;;                  4   29[BANK0 ] unsigned long 
 33094 ;; Registers used:
 33095 ;;		None
 33096 ;; Tracked objects:
 33097 ;;		On entry : 0/0
 33098 ;;		On exit  : 0/0
 33099 ;;		Unchanged: 0/0
 33100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33104 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33105 ;;Total ram usage:        4 bytes
 33106 ;; Hardware stack levels used:    1
 33107 ;; Hardware stack levels required when called:   11
 33108 ;; This function calls:
 33109 ;;		Nothing
 33110 ;; This function is called by:
 33111 ;;		_GetElapsedTime
 33112 ;;		_OsTmr_StartTimer
 33113 ;;		_OsTmr_GetElapsedTime
 33114 ;; This function uses a non-reentrant model
 33115 ;;
 33116                           
 33117                           	psect	text152
 33118  006AEA                     __ptext152:
 33119                           	opt stack 0
 33120  006AEA                     _GetOsTickCounter:
 33121                           	opt stack 12
 33122                           
 33123                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 33124                           
 33125                           ; BSR set to: 0
 33126                           ;incstack = 0
 33127  006AEA  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 33128  006AEE  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 33129  006AF2  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 33130  006AF6  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 33131  006AFA  0012               	return		;funcret
 33132  006AFC                     __end_of_GetOsTickCounter:
 33133                           	opt stack 0
 33134                           tosu	equ	0xFFF
 33135                           tosh	equ	0xFFE
 33136                           tosl	equ	0xFFD
 33137                           pclath	equ	0xFFA
 33138                           tblptru	equ	0xFF8
 33139                           tblptrh	equ	0xFF7
 33140                           tblptrl	equ	0xFF6
 33141                           tablat	equ	0xFF5
 33142                           prodh	equ	0xFF4
 33143                           prodl	equ	0xFF3
 33144                           intcon	equ	0xFF2
 33145                           intcon2	equ	0xFF1
 33146                           intcon3	equ	0xFF0
 33147                           indf0	equ	0xFEF
 33148                           postinc0	equ	0xFEE
 33149                           plusw0	equ	0xFEB
 33150                           fsr0h	equ	0xFEA
 33151                           fsr0l	equ	0xFE9
 33152                           wreg	equ	0xFE8
 33153                           indf1	equ	0xFE7
 33154                           postinc1	equ	0xFE6
 33155                           postdec1	equ	0xFE5
 33156                           plusw1	equ	0xFE3
 33157                           fsr1h	equ	0xFE2
 33158                           fsr1l	equ	0xFE1
 33159                           indf2	equ	0xFDF
 33160                           postinc2	equ	0xFDE
 33161                           postdec2	equ	0xFDD
 33162                           plusw2	equ	0xFDB
 33163                           fsr2h	equ	0xFDA
 33164                           fsr2l	equ	0xFD9
 33165                           status	equ	0xFD8
 33166                           
 33167 ;; *************** function _ClearBuffer *****************
 33168 ;; Defined at:
 33169 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 33170 ;; Parameters:    Size  Location     Type
 33171 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 33172 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 33173 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 33174 ;;  Len             2   31[BANK0 ] unsigned short 
 33175 ;; Auto vars:     Size  Location     Type
 33176 ;;  Index           2   33[BANK0 ] unsigned short 
 33177 ;; Return value:  Size  Location     Type
 33178 ;;                  1    wreg      void 
 33179 ;; Registers used:
 33180 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33181 ;; Tracked objects:
 33182 ;;		On entry : 0/0
 33183 ;;		On exit  : 0/0
 33184 ;;		Unchanged: 0/0
 33185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33186 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33187 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33189 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33190 ;;Total ram usage:        6 bytes
 33191 ;; Hardware stack levels used:    1
 33192 ;; Hardware stack levels required when called:   11
 33193 ;; This function calls:
 33194 ;;		Nothing
 33195 ;; This function is called by:
 33196 ;;		_GetSmsSm
 33197 ;;		_GetCallerNumber
 33198 ;;		_InitGprsNetwork
 33199 ;;		_HttpGetMethod
 33200 ;;		_Eeprom_Reset
 33201 ;;		_GsmGprsTerminal
 33202 ;; This function uses a non-reentrant model
 33203 ;;
 33204                           
 33205                           	psect	text153
 33206  0064A4                     __ptext153:
 33207                           	opt stack 0
 33208  0064A4                     _ClearBuffer:
 33209                           	opt stack 14
 33210                           
 33211                           ;sf.c: 126: UINT16 Index = 0;
 33212                           
 33213                           ;incstack = 0
 33214  0064A4  0E00               	movlw	0
 33215  0064A6  0100               	movlb	0	; () banked
 33216  0064A8  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33217  0064AA  0E00               	movlw	0
 33218  0064AC  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33219                           
 33220                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 33221  0064AE  0E00               	movlw	0
 33222  0064B0  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33223  0064B2  0E00               	movlw	0
 33224  0064B4  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33225  0064B6  D00A               	goto	l2262
 33226  0064B8                     
 33227                           ; BSR set to: 0
 33228                           ;sf.c: 130: {
 33229                           ;sf.c: 131: *(Buffer + Index) = 0;
 33230                           
 33231                           ; BSR set to: 0
 33232  0064B8  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33233  0064BA  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 33234  0064BC  6ED9               	movwf	fsr2l,c
 33235  0064BE  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33236  0064C0  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 33237  0064C2  6EDA               	movwf	fsr2h,c
 33238  0064C4  0E00               	movlw	0
 33239  0064C6  6EDF               	movwf	indf2,c
 33240                           
 33241                           ; BSR set to: 0
 33242  0064C8  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 33243  0064CA  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 33244  0064CC                     l2262:
 33245                           
 33246                           ; BSR set to: 0
 33247                           
 33248                           ; BSR set to: 0
 33249  0064CC  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33250  0064CE  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 33251  0064D0  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33252  0064D2  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 33253  0064D4  A0D8               	btfss	status,0,c
 33254  0064D6  0012               	return	
 33255  0064D8  D7EF               	goto	l2263
 33256  0064DA                     __end_of_ClearBuffer:
 33257                           	opt stack 0
 33258                           tosu	equ	0xFFF
 33259                           tosh	equ	0xFFE
 33260                           tosl	equ	0xFFD
 33261                           pclath	equ	0xFFA
 33262                           tblptru	equ	0xFF8
 33263                           tblptrh	equ	0xFF7
 33264                           tblptrl	equ	0xFF6
 33265                           tablat	equ	0xFF5
 33266                           prodh	equ	0xFF4
 33267                           prodl	equ	0xFF3
 33268                           intcon	equ	0xFF2
 33269                           intcon2	equ	0xFF1
 33270                           intcon3	equ	0xFF0
 33271                           indf0	equ	0xFEF
 33272                           postinc0	equ	0xFEE
 33273                           plusw0	equ	0xFEB
 33274                           fsr0h	equ	0xFEA
 33275                           fsr0l	equ	0xFE9
 33276                           wreg	equ	0xFE8
 33277                           indf1	equ	0xFE7
 33278                           postinc1	equ	0xFE6
 33279                           postdec1	equ	0xFE5
 33280                           plusw1	equ	0xFE3
 33281                           fsr1h	equ	0xFE2
 33282                           fsr1l	equ	0xFE1
 33283                           indf2	equ	0xFDF
 33284                           postinc2	equ	0xFDE
 33285                           postdec2	equ	0xFDD
 33286                           plusw2	equ	0xFDB
 33287                           fsr2h	equ	0xFDA
 33288                           fsr2l	equ	0xFD9
 33289                           status	equ	0xFD8
 33290                           
 33291 ;; *************** function _LedStateMachine *****************
 33292 ;; Defined at:
 33293 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33294 ;; Parameters:    Size  Location     Type
 33295 ;;  Led             1    wreg     unsigned char 
 33296 ;;  LedSts          2   47[BANK0 ] PTR enum E8954
 33297 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 33298 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 33299 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 33300 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 33301 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33302 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 33303 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33304 ;; Auto vars:     Size  Location     Type
 33305 ;;  Led             1   57[BANK0 ] unsigned char 
 33306 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 33307 ;; Return value:  Size  Location     Type
 33308 ;;                  1    wreg      unsigned char 
 33309 ;; Registers used:
 33310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33311 ;; Tracked objects:
 33312 ;;		On entry : 0/0
 33313 ;;		On exit  : 0/0
 33314 ;;		Unchanged: 0/0
 33315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33316 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33319 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33320 ;;Total ram usage:       11 bytes
 33321 ;; Hardware stack levels used:    1
 33322 ;; Hardware stack levels required when called:   13
 33323 ;; This function calls:
 33324 ;;		_LedBlinkStateMachine
 33325 ;;		_LedPulseStateMachine
 33326 ;;		_Led_SetLedStatus
 33327 ;; This function is called by:
 33328 ;;		_Led_MainTask
 33329 ;; This function uses a non-reentrant model
 33330 ;;
 33331                           
 33332                           	psect	text154
 33333  004914                     __ptext154:
 33334                           	opt stack 0
 33335  004914                     _LedStateMachine:
 33336                           	opt stack 14
 33337                           
 33338                           ; BSR set to: 0
 33339                           ;incstack = 0
 33340                           ;LedStateMachine@Led stored from wreg
 33341  004914  0100               	movlb	0	; () banked
 33342  004916  6F99               	movwf	LedStateMachine@Led& (0+255),b
 33343                           
 33344                           ;led.c: 238: UINT8 LedOutSts = 0u;
 33345  004918  0E00               	movlw	0
 33346  00491A  0100               	movlb	0	; () banked
 33347  00491C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33348                           
 33349                           ;led.c: 241: switch (*LedSts)
 33350  00491E  D037               	goto	l2121
 33351  004920                     
 33352                           ; BSR set to: 0
 33353                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 33354                           
 33355                           ; BSR set to: 0
 33356  004920  0E00               	movlw	0
 33357  004922  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33358                           
 33359                           ; BSR set to: 0
 33360                           ;led.c: 246: *LedOut = ((UINT8)(0));
 33361  004924  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33362  004928  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33363  00492C  0E00               	movlw	0
 33364  00492E  D007               	goto	L80
 33365  004930                     
 33366                           ; BSR set to: 0
 33367                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 33368                           
 33369                           ; BSR set to: 0
 33370  004930  0E01               	movlw	1
 33371  004932  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33372                           
 33373                           ; BSR set to: 0
 33374                           ;led.c: 252: *LedOut = ((UINT8)(1));
 33375  004934  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33376  004938  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33377  00493C  0E01               	movlw	1
 33378  00493E                     L80:
 33379  00493E  6EDF               	movwf	indf2,c
 33380                           
 33381                           ;led.c: 253: break;
 33382  004940  D03A               	goto	l2123
 33383  004942                     
 33384                           ; BSR set to: 0
 33385                           ;led.c: 257: if (*LedOut == 1)
 33386                           
 33387                           ; BSR set to: 0
 33388  004942  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33389  004946  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33390  00494A  04DE               	decf	postinc2,w,c
 33391  00494C  A4D8               	btfss	status,2,c
 33392  00494E  D006               	goto	l2126
 33393                           
 33394                           ; BSR set to: 0
 33395                           ;led.c: 258: {
 33396                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 33397  004950  0E00               	movlw	0
 33398  004952  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33399  004954  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33400  004956  EC01  F033         	call	_Led_SetLedStatus
 33401                           
 33402                           ;led.c: 261: }
 33403  00495A  D02D               	goto	l2123
 33404  00495C                     l2126:
 33405                           
 33406                           ;led.c: 262: else
 33407                           ;led.c: 263: {
 33408                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 33409  00495C  0E01               	movlw	1
 33410  00495E  0100               	movlb	0	; () banked
 33411  004960  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33412  004962  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33413  004964  EC01  F033         	call	_Led_SetLedStatus
 33414                           
 33415                           ;led.c: 266: }
 33416                           ;led.c: 267: break;
 33417  004968  D026               	goto	l2123
 33418  00496A                     
 33419                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 33420  00496A  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 33421  00496E  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 33422  004972  EC6E  F013         	call	_LedBlinkStateMachine	;wreg free
 33423  004976  D008               	goto	L81
 33424  004978                     
 33425                           ; BSR set to: 0
 33426                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 33427                           
 33428                           ; BSR set to: 0
 33429  004978  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 33430  00497C  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 33431  004980  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 33432  004984  EC24  F019         	call	_LedPulseStateMachine	;wreg free
 33433  004988                     L81:
 33434  004988  0100               	movlb	0	; () banked
 33435  00498A  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33436                           
 33437                           ; BSR set to: 0
 33438                           ;led.c: 281: }
 33439                           
 33440                           ; BSR set to: 0
 33441                           ;led.c: 280: break;
 33442                           
 33443                           ;led.c: 279: default:
 33444                           
 33445                           ;led.c: 277: break;
 33446  00498C  D014               	goto	l2123
 33447  00498E                     l2121:
 33448                           
 33449                           ; BSR set to: 0
 33450                           
 33451                           ; BSR set to: 0
 33452  00498E  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 33453  004992  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 33454  004996  50DF               	movf	indf2,w,c
 33455                           
 33456                           ; Switch size 1, requested type "space"
 33457                           ; Number of cases is 5, Range of values is 0 to 4
 33458                           ; switch strategies available:
 33459                           ; Name         Instructions Cycles
 33460                           ; simple_byte           16     9 (average)
 33461                           ;	Chosen strategy is simple_byte
 33462  004998  0A00               	xorlw	0	; case 0
 33463  00499A  B4D8               	btfsc	status,2,c
 33464  00499C  D7C1               	goto	l2122
 33465  00499E  0A01               	xorlw	1	; case 1
 33466  0049A0  B4D8               	btfsc	status,2,c
 33467  0049A2  D7C6               	goto	l2124
 33468  0049A4  0A03               	xorlw	3	; case 2
 33469  0049A6  B4D8               	btfsc	status,2,c
 33470  0049A8  D7CC               	goto	l2125
 33471  0049AA  0A01               	xorlw	1	; case 3
 33472  0049AC  B4D8               	btfsc	status,2,c
 33473  0049AE  D7DD               	goto	l2128
 33474  0049B0  0A07               	xorlw	7	; case 4
 33475  0049B2  B4D8               	btfsc	status,2,c
 33476  0049B4  D7E1               	goto	l2129
 33477  0049B6                     l2123:
 33478                           
 33479                           ;led.c: 283: return LedOutSts;
 33480                           
 33481                           ; BSR set to: 0
 33482  0049B6  0100               	movlb	0	; () banked
 33483  0049B8  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 33484  0049BA  0012               	return	
 33485  0049BC                     __end_of_LedStateMachine:
 33486                           	opt stack 0
 33487                           tosu	equ	0xFFF
 33488                           tosh	equ	0xFFE
 33489                           tosl	equ	0xFFD
 33490                           pclath	equ	0xFFA
 33491                           tblptru	equ	0xFF8
 33492                           tblptrh	equ	0xFF7
 33493                           tblptrl	equ	0xFF6
 33494                           tablat	equ	0xFF5
 33495                           prodh	equ	0xFF4
 33496                           prodl	equ	0xFF3
 33497                           intcon	equ	0xFF2
 33498                           intcon2	equ	0xFF1
 33499                           intcon3	equ	0xFF0
 33500                           indf0	equ	0xFEF
 33501                           postinc0	equ	0xFEE
 33502                           plusw0	equ	0xFEB
 33503                           fsr0h	equ	0xFEA
 33504                           fsr0l	equ	0xFE9
 33505                           wreg	equ	0xFE8
 33506                           indf1	equ	0xFE7
 33507                           postinc1	equ	0xFE6
 33508                           postdec1	equ	0xFE5
 33509                           plusw1	equ	0xFE3
 33510                           fsr1h	equ	0xFE2
 33511                           fsr1l	equ	0xFE1
 33512                           indf2	equ	0xFDF
 33513                           postinc2	equ	0xFDE
 33514                           postdec2	equ	0xFDD
 33515                           plusw2	equ	0xFDB
 33516                           fsr2h	equ	0xFDA
 33517                           fsr2l	equ	0xFD9
 33518                           status	equ	0xFD8
 33519                           
 33520 ;; *************** function _LedPulseStateMachine *****************
 33521 ;; Defined at:
 33522 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33523 ;; Parameters:    Size  Location     Type
 33524 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 33525 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33526 ;;  Led             1   44[BANK0 ] unsigned char 
 33527 ;; Auto vars:     Size  Location     Type
 33528 ;;		None
 33529 ;; Return value:  Size  Location     Type
 33530 ;;                  1    wreg      unsigned char 
 33531 ;; Registers used:
 33532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33533 ;; Tracked objects:
 33534 ;;		On entry : 0/0
 33535 ;;		On exit  : 0/0
 33536 ;;		Unchanged: 0/0
 33537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33538 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33541 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33542 ;;Total ram usage:        5 bytes
 33543 ;; Hardware stack levels used:    1
 33544 ;; Hardware stack levels required when called:   12
 33545 ;; This function calls:
 33546 ;;		_Led_SetLedStatus
 33547 ;;		___lwdiv
 33548 ;; This function is called by:
 33549 ;;		_LedStateMachine
 33550 ;; This function uses a non-reentrant model
 33551 ;;
 33552                           
 33553                           	psect	text155
 33554  003248                     __ptext155:
 33555                           	opt stack 0
 33556  003248                     _LedPulseStateMachine:
 33557                           	opt stack 14
 33558                           
 33559                           ;led.c: 185: switch (LedPulse->LedPulseState)
 33560                           
 33561                           ; BSR set to: 0
 33562                           ;incstack = 0
 33563  003248  D05C               	goto	l2111
 33564  00324A                     
 33565                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 33566  00324A  0100               	movlb	0	; () banked
 33567  00324C  EE20 F001          	lfsr	2,1
 33568  003250  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33569  003252  26D9               	addwf	fsr2l,f,c
 33570  003254  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33571  003256  22DA               	addwfc	fsr2h,f,c
 33572  003258  0E01               	movlw	1
 33573  00325A  6EDF               	movwf	indf2,c
 33574                           
 33575                           ; BSR set to: 0
 33576                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 33577  00325C  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33578  003260  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33579  003264  0E01               	movlw	1
 33580  003266  D036               	goto	L82
 33581  003268                     
 33582                           ;led.c: 196: LedPulse->LedPulseCounter++;
 33583                           
 33584                           ; BSR set to: 0
 33585  003268  0100               	movlb	0	; () banked
 33586  00326A  EE20 F002          	lfsr	2,2
 33587  00326E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33588  003270  26D9               	addwf	fsr2l,f,c
 33589  003272  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33590  003274  22DA               	addwfc	fsr2h,f,c
 33591  003276  2ADE               	incf	postinc2,f,c
 33592  003278  0E00               	movlw	0
 33593  00327A  22DD               	addwfc	postdec2,f,c
 33594                           
 33595                           ; BSR set to: 0
 33596                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 33597  00327C  EE20 F004          	lfsr	2,4
 33598  003280  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33599  003282  26D9               	addwf	fsr2l,f,c
 33600  003284  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33601  003286  22DA               	addwfc	fsr2h,f,c
 33602  003288  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33603  00328C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33604  003290  0E00               	movlw	0
 33605  003292  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33606  003294  0E32               	movlw	50
 33607  003296  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33608  003298  EC64  F02E         	call	___lwdiv	;wreg free
 33609  00329C  0100               	movlb	0	; () banked
 33610  00329E  EE20 F002          	lfsr	2,2
 33611  0032A2  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33612  0032A4  26D9               	addwf	fsr2l,f,c
 33613  0032A6  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33614  0032A8  22DA               	addwfc	fsr2h,f,c
 33615  0032AA  5183               	movf	?___lwdiv& (0+255),w,b
 33616  0032AC  5CDE               	subwf	postinc2,w,c
 33617  0032AE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33618  0032B0  58DE               	subwfb	postinc2,w,c
 33619  0032B2  A0D8               	btfss	status,0,c
 33620  0032B4  D034               	goto	l2113
 33621                           
 33622                           ; BSR set to: 0
 33623                           ;led.c: 199: {
 33624                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 33625  0032B6  EE20 F002          	lfsr	2,2
 33626  0032BA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33627  0032BC  26D9               	addwf	fsr2l,f,c
 33628  0032BE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33629  0032C0  22DA               	addwfc	fsr2h,f,c
 33630  0032C2  0E00               	movlw	0
 33631  0032C4  6EDE               	movwf	postinc2,c
 33632  0032C6  0E00               	movlw	0
 33633  0032C8  6EDD               	movwf	postdec2,c
 33634                           
 33635                           ; BSR set to: 0
 33636                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 33637  0032CA  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33638  0032CE  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33639  0032D2  0E02               	movlw	2
 33640  0032D4                     L82:
 33641  0032D4  6EDF               	movwf	indf2,c
 33642                           
 33643                           ; BSR set to: 0
 33644                           ;led.c: 204: }
 33645                           ;led.c: 205: break;
 33646  0032D6  D023               	goto	l2113
 33647  0032D8                     
 33648                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 33649                           
 33650                           ; BSR set to: 0
 33651  0032D8  0100               	movlb	0	; () banked
 33652  0032DA  EE20 F001          	lfsr	2,1
 33653  0032DE  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33654  0032E0  26D9               	addwf	fsr2l,f,c
 33655  0032E2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33656  0032E4  22DA               	addwfc	fsr2h,f,c
 33657  0032E6  0E00               	movlw	0
 33658  0032E8  6EDF               	movwf	indf2,c
 33659                           
 33660                           ; BSR set to: 0
 33661                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 33662  0032EA  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33663  0032EE  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33664  0032F2  0E00               	movlw	0
 33665  0032F4  6EDF               	movwf	indf2,c
 33666                           
 33667                           ; BSR set to: 0
 33668                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 33669  0032F6  0E00               	movlw	0
 33670  0032F8  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33671  0032FA  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 33672  0032FC  EC01  F033         	call	_Led_SetLedStatus
 33673                           
 33674                           ;led.c: 218: }
 33675                           
 33676                           ;led.c: 217: break;
 33677                           
 33678                           ;led.c: 216: default:
 33679                           
 33680                           ;led.c: 214: break;
 33681  003300  D00E               	goto	l2113
 33682  003302                     l2111:
 33683  003302  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33684  003306  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33685  00330A  50DF               	movf	indf2,w,c
 33686                           
 33687                           ; Switch size 1, requested type "space"
 33688                           ; Number of cases is 3, Range of values is 0 to 2
 33689                           ; switch strategies available:
 33690                           ; Name         Instructions Cycles
 33691                           ; simple_byte           10     6 (average)
 33692                           ;	Chosen strategy is simple_byte
 33693  00330C  0A00               	xorlw	0	; case 0
 33694  00330E  B4D8               	btfsc	status,2,c
 33695  003310  D79C               	goto	l2112
 33696  003312  0A01               	xorlw	1	; case 1
 33697  003314  B4D8               	btfsc	status,2,c
 33698  003316  D7A8               	goto	l2114
 33699  003318  0A03               	xorlw	3	; case 2
 33700  00331A  B4D8               	btfsc	status,2,c
 33701  00331C  D7DD               	goto	l2116
 33702  00331E                     l2113:
 33703                           
 33704                           ;led.c: 221: return (LedPulse->LedOutState);
 33705  00331E  0100               	movlb	0	; () banked
 33706  003320  EE20 F001          	lfsr	2,1
 33707  003324  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33708  003326  26D9               	addwf	fsr2l,f,c
 33709  003328  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33710  00332A  22DA               	addwfc	fsr2h,f,c
 33711  00332C  50DF               	movf	indf2,w,c
 33712  00332E  0012               	return	
 33713  003330                     __end_of_LedPulseStateMachine:
 33714                           	opt stack 0
 33715                           tosu	equ	0xFFF
 33716                           tosh	equ	0xFFE
 33717                           tosl	equ	0xFFD
 33718                           pclath	equ	0xFFA
 33719                           tblptru	equ	0xFF8
 33720                           tblptrh	equ	0xFF7
 33721                           tblptrl	equ	0xFF6
 33722                           tablat	equ	0xFF5
 33723                           prodh	equ	0xFF4
 33724                           prodl	equ	0xFF3
 33725                           intcon	equ	0xFF2
 33726                           intcon2	equ	0xFF1
 33727                           intcon3	equ	0xFF0
 33728                           indf0	equ	0xFEF
 33729                           postinc0	equ	0xFEE
 33730                           plusw0	equ	0xFEB
 33731                           fsr0h	equ	0xFEA
 33732                           fsr0l	equ	0xFE9
 33733                           wreg	equ	0xFE8
 33734                           indf1	equ	0xFE7
 33735                           postinc1	equ	0xFE6
 33736                           postdec1	equ	0xFE5
 33737                           plusw1	equ	0xFE3
 33738                           fsr1h	equ	0xFE2
 33739                           fsr1l	equ	0xFE1
 33740                           indf2	equ	0xFDF
 33741                           postinc2	equ	0xFDE
 33742                           postdec2	equ	0xFDD
 33743                           plusw2	equ	0xFDB
 33744                           fsr2h	equ	0xFDA
 33745                           fsr2l	equ	0xFD9
 33746                           status	equ	0xFD8
 33747                           
 33748 ;; *************** function _Led_SetLedStatus *****************
 33749 ;; Defined at:
 33750 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33751 ;; Parameters:    Size  Location     Type
 33752 ;;  Led             1    wreg     unsigned char 
 33753 ;;  LedSts          1   29[BANK0 ] enum E8954
 33754 ;; Auto vars:     Size  Location     Type
 33755 ;;  Led             1   30[BANK0 ] unsigned char 
 33756 ;; Return value:  Size  Location     Type
 33757 ;;                  1    wreg      void 
 33758 ;; Registers used:
 33759 ;;		wreg, status,2, status,0
 33760 ;; Tracked objects:
 33761 ;;		On entry : 0/0
 33762 ;;		On exit  : 0/0
 33763 ;;		Unchanged: 0/0
 33764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33765 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33766 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33768 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33769 ;;Total ram usage:        2 bytes
 33770 ;; Hardware stack levels used:    1
 33771 ;; Hardware stack levels required when called:   11
 33772 ;; This function calls:
 33773 ;;		Nothing
 33774 ;; This function is called by:
 33775 ;;		_LedPulseStateMachine
 33776 ;;		_LedStateMachine
 33777 ;;		_waitSetupCall
 33778 ;;		_initFsm
 33779 ;;		_blinkForSeconds
 33780 ;; This function uses a non-reentrant model
 33781 ;;
 33782                           
 33783                           	psect	text156
 33784  006602                     __ptext156:
 33785                           	opt stack 0
 33786  006602                     _Led_SetLedStatus:
 33787                           	opt stack 14
 33788                           
 33789                           ; BSR set to: 0
 33790                           ;incstack = 0
 33791                           ;Led_SetLedStatus@Led stored from wreg
 33792  006602  0100               	movlb	0	; () banked
 33793  006604  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 33794                           
 33795                           ;led.c: 341: switch (Led)
 33796  006606  D009               	goto	l2142
 33797  006608                     l2143:
 33798                           
 33799                           ; BSR set to: 0
 33800                           ;led.c: 344: Led1Sts = LedSts;
 33801  006608  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 33802                           
 33803                           ;led.c: 345: break;
 33804  00660C  0012               	return	
 33805  00660E                     l2145:
 33806                           
 33807                           ; BSR set to: 0
 33808                           ;led.c: 348: Led2Sts = LedSts;
 33809  00660E  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 33810                           
 33811                           ;led.c: 349: break;
 33812  006612  0012               	return	
 33813  006614                     l2146:
 33814                           
 33815                           ; BSR set to: 0
 33816                           ;led.c: 352: Led3Sts = LedSts;
 33817  006614  C07D  F1F6         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 33818                           
 33819                           ; BSR set to: 0
 33820                           ;led.c: 357: }
 33821                           
 33822                           ; BSR set to: 0
 33823                           ;led.c: 356: break;
 33824                           
 33825                           ;led.c: 355: default:
 33826                           
 33827                           ;led.c: 353: break;
 33828  006618  0012               	return	
 33829  00661A                     l2142:
 33830                           
 33831                           ; BSR set to: 0
 33832  00661A  0100               	movlb	0	; () banked
 33833  00661C  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 33834                           
 33835                           ; Switch size 1, requested type "space"
 33836                           ; Number of cases is 3, Range of values is 1 to 3
 33837                           ; switch strategies available:
 33838                           ; Name         Instructions Cycles
 33839                           ; simple_byte           10     6 (average)
 33840                           ;	Chosen strategy is simple_byte
 33841  00661E  0A01               	xorlw	1	; case 1
 33842  006620  B4D8               	btfsc	status,2,c
 33843  006622  D7F2               	goto	l2143
 33844  006624  0A03               	xorlw	3	; case 2
 33845  006626  B4D8               	btfsc	status,2,c
 33846  006628  D7F2               	goto	l2145
 33847  00662A  0A01               	xorlw	1	; case 3
 33848  00662C  A4D8               	btfss	status,2,c
 33849  00662E  0012               	return	
 33850  006630  D7F1               	goto	l2146
 33851  006632                     __end_of_Led_SetLedStatus:
 33852                           	opt stack 0
 33853                           tosu	equ	0xFFF
 33854                           tosh	equ	0xFFE
 33855                           tosl	equ	0xFFD
 33856                           pclath	equ	0xFFA
 33857                           tblptru	equ	0xFF8
 33858                           tblptrh	equ	0xFF7
 33859                           tblptrl	equ	0xFF6
 33860                           tablat	equ	0xFF5
 33861                           prodh	equ	0xFF4
 33862                           prodl	equ	0xFF3
 33863                           intcon	equ	0xFF2
 33864                           intcon2	equ	0xFF1
 33865                           intcon3	equ	0xFF0
 33866                           indf0	equ	0xFEF
 33867                           postinc0	equ	0xFEE
 33868                           plusw0	equ	0xFEB
 33869                           fsr0h	equ	0xFEA
 33870                           fsr0l	equ	0xFE9
 33871                           wreg	equ	0xFE8
 33872                           indf1	equ	0xFE7
 33873                           postinc1	equ	0xFE6
 33874                           postdec1	equ	0xFE5
 33875                           plusw1	equ	0xFE3
 33876                           fsr1h	equ	0xFE2
 33877                           fsr1l	equ	0xFE1
 33878                           indf2	equ	0xFDF
 33879                           postinc2	equ	0xFDE
 33880                           postdec2	equ	0xFDD
 33881                           plusw2	equ	0xFDB
 33882                           fsr2h	equ	0xFDA
 33883                           fsr2l	equ	0xFD9
 33884                           status	equ	0xFD8
 33885                           
 33886 ;; *************** function _LedBlinkStateMachine *****************
 33887 ;; Defined at:
 33888 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33889 ;; Parameters:    Size  Location     Type
 33890 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 33891 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33892 ;; Auto vars:     Size  Location     Type
 33893 ;;		None
 33894 ;; Return value:  Size  Location     Type
 33895 ;;                  1    wreg      unsigned char 
 33896 ;; Registers used:
 33897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33898 ;; Tracked objects:
 33899 ;;		On entry : 0/0
 33900 ;;		On exit  : 0/0
 33901 ;;		Unchanged: 0/0
 33902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33905 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33906 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33907 ;;Total ram usage:        4 bytes
 33908 ;; Hardware stack levels used:    1
 33909 ;; Hardware stack levels required when called:   12
 33910 ;; This function calls:
 33911 ;;		___lwdiv
 33912 ;; This function is called by:
 33913 ;;		_LedStateMachine
 33914 ;; This function uses a non-reentrant model
 33915 ;;
 33916                           
 33917                           	psect	text157
 33918  0026DC                     __ptext157:
 33919                           	opt stack 0
 33920  0026DC                     _LedBlinkStateMachine:
 33921                           	opt stack 14
 33922                           
 33923                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 33924                           
 33925                           ; BSR set to: 0
 33926                           ;incstack = 0
 33927  0026DC  D08F               	goto	l2098
 33928  0026DE                     
 33929                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 33930  0026DE  0100               	movlb	0	; () banked
 33931  0026E0  EE20 F008          	lfsr	2,8
 33932  0026E4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33933  0026E6  26D9               	addwf	fsr2l,f,c
 33934  0026E8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33935  0026EA  22DA               	addwfc	fsr2h,f,c
 33936  0026EC  EE10 F001          	lfsr	1,1
 33937  0026F0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33938  0026F2  26E1               	addwf	fsr1l,f,c
 33939  0026F4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33940  0026F6  22E2               	addwfc	fsr1h,f,c
 33941  0026F8  CFDF FFE7          	movff	indf2,indf1
 33942                           
 33943                           ; BSR set to: 0
 33944                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 33945  0026FC  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33946  002700  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33947  002704  D040               	goto	L83
 33948  002706                     
 33949                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 33950                           
 33951                           ; BSR set to: 0
 33952  002706  0100               	movlb	0	; () banked
 33953  002708  EE20 F002          	lfsr	2,2
 33954  00270C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33955  00270E  26D9               	addwf	fsr2l,f,c
 33956  002710  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33957  002712  22DA               	addwfc	fsr2h,f,c
 33958  002714  2ADE               	incf	postinc2,f,c
 33959  002716  0E00               	movlw	0
 33960  002718  22DD               	addwfc	postdec2,f,c
 33961                           
 33962                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 33963  00271A  EE20 F001          	lfsr	2,1
 33964  00271E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33965  002720  26D9               	addwf	fsr2l,f,c
 33966  002722  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33967  002724  22DA               	addwfc	fsr2h,f,c
 33968  002726  50DF               	movf	indf2,w,c
 33969  002728  A4D8               	btfss	status,2,c
 33970  00272A  D02F               	goto	l2102
 33971                           
 33972                           ; BSR set to: 0
 33973                           ;led.c: 142: {
 33974                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 33975  00272C  EE20 F006          	lfsr	2,6
 33976  002730  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33977  002732  26D9               	addwf	fsr2l,f,c
 33978  002734  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33979  002736  22DA               	addwfc	fsr2h,f,c
 33980  002738  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33981  00273C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33982  002740  0E00               	movlw	0
 33983  002742  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33984  002744  0E32               	movlw	50
 33985  002746  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33986  002748  EC64  F02E         	call	___lwdiv	;wreg free
 33987  00274C  0100               	movlb	0	; () banked
 33988  00274E  EE20 F002          	lfsr	2,2
 33989  002752  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33990  002754  26D9               	addwf	fsr2l,f,c
 33991  002756  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33992  002758  22DA               	addwfc	fsr2h,f,c
 33993  00275A  5183               	movf	?___lwdiv& (0+255),w,b
 33994  00275C  5CDE               	subwf	postinc2,w,c
 33995  00275E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33996  002760  58DE               	subwfb	postinc2,w,c
 33997  002762  A0D8               	btfss	status,0,c
 33998  002764  D056               	goto	l2100
 33999                           
 34000                           ; BSR set to: 0
 34001                           ;led.c: 145: {
 34002                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 34003  002766  EE20 F002          	lfsr	2,2
 34004  00276A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34005  00276C  26D9               	addwf	fsr2l,f,c
 34006  00276E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34007  002770  22DA               	addwfc	fsr2h,f,c
 34008  002772  0E00               	movlw	0
 34009  002774  6EDE               	movwf	postinc2,c
 34010  002776  0E00               	movlw	0
 34011  002778  6EDD               	movwf	postdec2,c
 34012                           
 34013                           ;led.c: 149: LedBlink->LedOutState = OnState;
 34014  00277A  EE20 F001          	lfsr	2,1
 34015  00277E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34016  002780  26D9               	addwf	fsr2l,f,c
 34017  002782  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34018  002784  22DA               	addwfc	fsr2h,f,c
 34019  002786                     L83:
 34020  002786  0E01               	movlw	1
 34021  002788  D037               	goto	L84
 34022  00278A                     l2102:
 34023                           
 34024                           ; BSR set to: 0
 34025                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 34026                           
 34027                           ; BSR set to: 0
 34028  00278A  EE20 F001          	lfsr	2,1
 34029  00278E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34030  002790  26D9               	addwf	fsr2l,f,c
 34031  002792  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34032  002794  22DA               	addwfc	fsr2h,f,c
 34033  002796  04DE               	decf	postinc2,w,c
 34034  002798  A4D8               	btfss	status,2,c
 34035  00279A  D03B               	goto	l2100
 34036                           
 34037                           ; BSR set to: 0
 34038                           ;led.c: 153: {
 34039                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 34040  00279C  EE20 F004          	lfsr	2,4
 34041  0027A0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34042  0027A2  26D9               	addwf	fsr2l,f,c
 34043  0027A4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34044  0027A6  22DA               	addwfc	fsr2h,f,c
 34045  0027A8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34046  0027AC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34047  0027B0  0E00               	movlw	0
 34048  0027B2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34049  0027B4  0E32               	movlw	50
 34050  0027B6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34051  0027B8  EC64  F02E         	call	___lwdiv	;wreg free
 34052  0027BC  0100               	movlb	0	; () banked
 34053  0027BE  EE20 F002          	lfsr	2,2
 34054  0027C2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34055  0027C4  26D9               	addwf	fsr2l,f,c
 34056  0027C6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34057  0027C8  22DA               	addwfc	fsr2h,f,c
 34058  0027CA  5183               	movf	?___lwdiv& (0+255),w,b
 34059  0027CC  5CDE               	subwf	postinc2,w,c
 34060  0027CE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34061  0027D0  58DE               	subwfb	postinc2,w,c
 34062  0027D2  A0D8               	btfss	status,0,c
 34063  0027D4  D01E               	goto	l2100
 34064                           
 34065                           ; BSR set to: 0
 34066                           ;led.c: 156: {
 34067                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 34068  0027D6  EE20 F002          	lfsr	2,2
 34069  0027DA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34070  0027DC  26D9               	addwf	fsr2l,f,c
 34071  0027DE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34072  0027E0  22DA               	addwfc	fsr2h,f,c
 34073  0027E2  0E00               	movlw	0
 34074  0027E4  6EDE               	movwf	postinc2,c
 34075  0027E6  0E00               	movlw	0
 34076  0027E8  6EDD               	movwf	postdec2,c
 34077                           
 34078                           ;led.c: 160: LedBlink->LedOutState = OffState;
 34079  0027EA  EE20 F001          	lfsr	2,1
 34080  0027EE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34081  0027F0  26D9               	addwf	fsr2l,f,c
 34082  0027F2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34083  0027F4  22DA               	addwfc	fsr2h,f,c
 34084  0027F6  0E00               	movlw	0
 34085  0027F8                     L84:
 34086  0027F8  6EDF               	movwf	indf2,c
 34087                           
 34088                           ; BSR set to: 0
 34089                           ;led.c: 167: }
 34090                           
 34091                           ; BSR set to: 0
 34092                           ;led.c: 166: break;
 34093                           
 34094                           ;led.c: 165: default:
 34095                           
 34096                           ; BSR set to: 0
 34097                           ;led.c: 161: }
 34098                           ;led.c: 162: }
 34099                           ;led.c: 163: break;
 34100                           
 34101                           ; BSR set to: 0
 34102                           
 34103                           ; BSR set to: 0
 34104  0027FA  D00B               	goto	l2100
 34105  0027FC                     l2098:
 34106                           
 34107                           ; BSR set to: 0
 34108  0027FC  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34109  002800  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34110  002804  50DF               	movf	indf2,w,c
 34111                           
 34112                           ; Switch size 1, requested type "space"
 34113                           ; Number of cases is 2, Range of values is 0 to 1
 34114                           ; switch strategies available:
 34115                           ; Name         Instructions Cycles
 34116                           ; simple_byte            7     4 (average)
 34117                           ;	Chosen strategy is simple_byte
 34118  002806  0A00               	xorlw	0	; case 0
 34119  002808  B4D8               	btfsc	status,2,c
 34120  00280A  D769               	goto	l2099
 34121  00280C  0A01               	xorlw	1	; case 1
 34122  00280E  B4D8               	btfsc	status,2,c
 34123  002810  D77A               	goto	l2101
 34124  002812                     l2100:
 34125                           
 34126                           ;led.c: 170: return (LedBlink->LedOutState);
 34127  002812  0100               	movlb	0	; () banked
 34128  002814  EE20 F001          	lfsr	2,1
 34129  002818  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34130  00281A  26D9               	addwf	fsr2l,f,c
 34131  00281C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34132  00281E  22DA               	addwfc	fsr2h,f,c
 34133  002820  50DF               	movf	indf2,w,c
 34134  002822  0012               	return	
 34135  002824                     __end_of_LedBlinkStateMachine:
 34136                           	opt stack 0
 34137                           tosu	equ	0xFFF
 34138                           tosh	equ	0xFFE
 34139                           tosl	equ	0xFFD
 34140                           pclath	equ	0xFFA
 34141                           tblptru	equ	0xFF8
 34142                           tblptrh	equ	0xFF7
 34143                           tblptrl	equ	0xFF6
 34144                           tablat	equ	0xFF5
 34145                           prodh	equ	0xFF4
 34146                           prodl	equ	0xFF3
 34147                           intcon	equ	0xFF2
 34148                           intcon2	equ	0xFF1
 34149                           intcon3	equ	0xFF0
 34150                           indf0	equ	0xFEF
 34151                           postinc0	equ	0xFEE
 34152                           plusw0	equ	0xFEB
 34153                           fsr0h	equ	0xFEA
 34154                           fsr0l	equ	0xFE9
 34155                           wreg	equ	0xFE8
 34156                           indf1	equ	0xFE7
 34157                           postinc1	equ	0xFE6
 34158                           postdec1	equ	0xFE5
 34159                           plusw1	equ	0xFE3
 34160                           fsr1h	equ	0xFE2
 34161                           fsr1l	equ	0xFE1
 34162                           indf2	equ	0xFDF
 34163                           postinc2	equ	0xFDE
 34164                           postdec2	equ	0xFDD
 34165                           plusw2	equ	0xFDB
 34166                           fsr2h	equ	0xFDA
 34167                           fsr2l	equ	0xFD9
 34168                           status	equ	0xFD8
 34169                           
 34170 ;; *************** function ___lwdiv *****************
 34171 ;; Defined at:
 34172 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 34173 ;; Parameters:    Size  Location     Type
 34174 ;;  dividend        2   35[BANK0 ] unsigned int 
 34175 ;;  divisor         2   37[BANK0 ] unsigned int 
 34176 ;; Auto vars:     Size  Location     Type
 34177 ;;  quotient        2   40[BANK0 ] unsigned int 
 34178 ;;  counter         1   39[BANK0 ] unsigned char 
 34179 ;; Return value:  Size  Location     Type
 34180 ;;                  2   35[BANK0 ] unsigned int 
 34181 ;; Registers used:
 34182 ;;		wreg, status,2, status,0
 34183 ;; Tracked objects:
 34184 ;;		On entry : 0/0
 34185 ;;		On exit  : 0/0
 34186 ;;		Unchanged: 0/0
 34187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34188 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34189 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34191 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34192 ;;Total ram usage:        7 bytes
 34193 ;; Hardware stack levels used:    1
 34194 ;; Hardware stack levels required when called:   11
 34195 ;; This function calls:
 34196 ;;		Nothing
 34197 ;; This function is called by:
 34198 ;;		_LedBlinkStateMachine
 34199 ;;		_LedPulseStateMachine
 34200 ;;		_secondsAppTimer
 34201 ;;		_utoa
 34202 ;; This function uses a non-reentrant model
 34203 ;;
 34204                           
 34205                           	psect	text158
 34206  005CC8                     __ptext158:
 34207                           	opt stack 0
 34208  005CC8                     ___lwdiv:
 34209                           	opt stack 14
 34210                           
 34211                           ; BSR set to: 0
 34212                           ;incstack = 0
 34213  005CC8  0E00               	movlw	0
 34214  005CCA  0100               	movlb	0	; () banked
 34215  005CCC  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 34216  005CCE  0E00               	movlw	0
 34217  005CD0  6F88               	movwf	___lwdiv@quotient& (0+255),b
 34218                           
 34219                           ; BSR set to: 0
 34220  005CD2  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34221  005CD4  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 34222  005CD6  B4D8               	btfsc	status,2,c
 34223  005CD8  D01C               	goto	l3377
 34224                           
 34225                           ; BSR set to: 0
 34226  005CDA  0E01               	movlw	1
 34227  005CDC  6F87               	movwf	___lwdiv@counter& (0+255),b
 34228  005CDE  D004               	goto	l3372
 34229  005CE0                     
 34230                           ; BSR set to: 0
 34231                           
 34232                           ; BSR set to: 0
 34233  005CE0  90D8               	bcf	status,0,c
 34234  005CE2  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 34235  005CE4  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 34236  005CE6  2B87               	incf	___lwdiv@counter& (0+255),f,b
 34237  005CE8                     l3372:
 34238                           
 34239                           ; BSR set to: 0
 34240                           
 34241                           ; BSR set to: 0
 34242  005CE8  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 34243  005CEA  D7FA               	goto	l3373
 34244  005CEC                     u12200:
 34245                           
 34246                           ; BSR set to: 0
 34247                           
 34248                           ; BSR set to: 0
 34249                           
 34250                           ; BSR set to: 0
 34251  005CEC  90D8               	bcf	status,0,c
 34252  005CEE  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 34253  005CF0  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 34254                           
 34255                           ; BSR set to: 0
 34256  005CF2  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34257  005CF4  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 34258  005CF6  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34259  005CF8  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 34260  005CFA  A0D8               	btfss	status,0,c
 34261  005CFC  D005               	goto	l3376
 34262                           
 34263                           ; BSR set to: 0
 34264  005CFE  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34265  005D00  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 34266  005D02  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34267  005D04  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 34268                           
 34269                           ; BSR set to: 0
 34270  005D06  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 34271  005D08                     l3376:
 34272                           
 34273                           ; BSR set to: 0
 34274                           
 34275                           ; BSR set to: 0
 34276  005D08  90D8               	bcf	status,0,c
 34277  005D0A  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 34278  005D0C  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 34279                           
 34280                           ; BSR set to: 0
 34281  005D0E  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 34282  005D10  D7ED               	goto	u12200
 34283  005D12                     l3377:
 34284                           
 34285                           ; BSR set to: 0
 34286                           
 34287                           ; BSR set to: 0
 34288  005D12  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 34289  005D16  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 34290                           
 34291                           ; BSR set to: 0
 34292  005D1A  0012               	return		;funcret
 34293  005D1C                     __end_of___lwdiv:
 34294                           	opt stack 0
 34295                           tosu	equ	0xFFF
 34296                           tosh	equ	0xFFE
 34297                           tosl	equ	0xFFD
 34298                           pclath	equ	0xFFA
 34299                           tblptru	equ	0xFF8
 34300                           tblptrh	equ	0xFF7
 34301                           tblptrl	equ	0xFF6
 34302                           tablat	equ	0xFF5
 34303                           prodh	equ	0xFF4
 34304                           prodl	equ	0xFF3
 34305                           intcon	equ	0xFF2
 34306                           intcon2	equ	0xFF1
 34307                           intcon3	equ	0xFF0
 34308                           indf0	equ	0xFEF
 34309                           postinc0	equ	0xFEE
 34310                           plusw0	equ	0xFEB
 34311                           fsr0h	equ	0xFEA
 34312                           fsr0l	equ	0xFE9
 34313                           wreg	equ	0xFE8
 34314                           indf1	equ	0xFE7
 34315                           postinc1	equ	0xFE6
 34316                           postdec1	equ	0xFE5
 34317                           plusw1	equ	0xFE3
 34318                           fsr1h	equ	0xFE2
 34319                           fsr1l	equ	0xFE1
 34320                           indf2	equ	0xFDF
 34321                           postinc2	equ	0xFDE
 34322                           postdec2	equ	0xFDD
 34323                           plusw2	equ	0xFDB
 34324                           fsr2h	equ	0xFDA
 34325                           fsr2l	equ	0xFD9
 34326                           status	equ	0xFD8
 34327                           
 34328 ;; *************** function _OsAlrm_SetOsAlarm *****************
 34329 ;; Defined at:
 34330 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34331 ;; Parameters:    Size  Location     Type
 34332 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 34333 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 34334 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 34335 ;;		 -> I2cDummyTx(1), 
 34336 ;; Auto vars:     Size  Location     Type
 34337 ;;		None
 34338 ;; Return value:  Size  Location     Type
 34339 ;;                  1    wreg      void 
 34340 ;; Registers used:
 34341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34342 ;; Tracked objects:
 34343 ;;		On entry : 0/0
 34344 ;;		On exit  : 0/0
 34345 ;;		Unchanged: 0/0
 34346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34350 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34351 ;;Total ram usage:        8 bytes
 34352 ;; Hardware stack levels used:    1
 34353 ;; Hardware stack levels required when called:   12
 34354 ;; This function calls:
 34355 ;;		___wmul
 34356 ;; This function is called by:
 34357 ;;		_I2cSlv_MainTask
 34358 ;; This function uses a non-reentrant model
 34359 ;;
 34360                           
 34361                           	psect	text159
 34362  00408A                     __ptext159:
 34363                           	opt stack 0
 34364  00408A                     _OsAlrm_SetOsAlarm:
 34365                           	opt stack 15
 34366                           
 34367                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 34368                           
 34369                           ; BSR set to: 0
 34370                           ;incstack = 0
 34371  00408A  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34372  00408E  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34373  004092  0E00               	movlw	0
 34374  004094  0100               	movlb	0	; () banked
 34375  004096  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34376  004098  0E0B               	movlw	11
 34377  00409A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34378  00409C  EC87  F033         	call	___wmul	;wreg free
 34379  0040A0  0E00               	movlw	low _OsAlarms
 34380  0040A2  0100               	movlb	0	; () banked
 34381  0040A4  257D               	addwf	?___wmul& (0+255),w,b
 34382  0040A6  6ED9               	movwf	fsr2l,c
 34383  0040A8  0E06               	movlw	high _OsAlarms
 34384  0040AA  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34385  0040AC  6EDA               	movwf	fsr2h,c
 34386  0040AE  0E01               	movlw	1
 34387  0040B0  6EDF               	movwf	indf2,c
 34388                           
 34389                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 34390  0040B2  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34391  0040B6  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34392  0040BA  0E00               	movlw	0
 34393  0040BC  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34394  0040BE  0E0B               	movlw	11
 34395  0040C0  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34396  0040C2  EC87  F033         	call	___wmul	;wreg free
 34397  0040C6  0E01               	movlw	1
 34398  0040C8  0100               	movlb	0	; () banked
 34399  0040CA  277D               	addwf	?___wmul& (0+255),f,b
 34400  0040CC  0E00               	movlw	0
 34401  0040CE  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34402  0040D0  0E00               	movlw	low _OsAlarms
 34403  0040D2  257D               	addwf	?___wmul& (0+255),w,b
 34404  0040D4  6ED9               	movwf	fsr2l,c
 34405  0040D6  0E06               	movlw	high _OsAlarms
 34406  0040D8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34407  0040DA  6EDA               	movwf	fsr2h,c
 34408  0040DC  6ADE               	clrf	postinc2,c
 34409  0040DE  6ADE               	clrf	postinc2,c
 34410  0040E0  6ADE               	clrf	postinc2,c
 34411  0040E2  6ADD               	clrf	postdec2,c
 34412                           
 34413                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 34414  0040E4  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34415  0040E8  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34416  0040EC  0E00               	movlw	0
 34417  0040EE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34418  0040F0  0E0B               	movlw	11
 34419  0040F2  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34420  0040F4  EC87  F033         	call	___wmul	;wreg free
 34421  0040F8  0E05               	movlw	5
 34422  0040FA  0100               	movlb	0	; () banked
 34423  0040FC  277D               	addwf	?___wmul& (0+255),f,b
 34424  0040FE  0E00               	movlw	0
 34425  004100  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34426  004102  0E00               	movlw	low _OsAlarms
 34427  004104  257D               	addwf	?___wmul& (0+255),w,b
 34428  004106  6ED9               	movwf	fsr2l,c
 34429  004108  0E06               	movlw	high _OsAlarms
 34430  00410A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34431  00410C  6EDA               	movwf	fsr2h,c
 34432  00410E  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 34433  004112  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 34434  004116  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 34435  00411A  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 34436                           
 34437                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 34438  00411E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34439  004122  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34440  004126  0E00               	movlw	0
 34441  004128  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34442  00412A  0E0B               	movlw	11
 34443  00412C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34444  00412E  EC87  F033         	call	___wmul	;wreg free
 34445  004132  0E09               	movlw	9
 34446  004134  0100               	movlb	0	; () banked
 34447  004136  277D               	addwf	?___wmul& (0+255),f,b
 34448  004138  0E00               	movlw	0
 34449  00413A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34450  00413C  0E00               	movlw	low _OsAlarms
 34451  00413E  257D               	addwf	?___wmul& (0+255),w,b
 34452  004140  6ED9               	movwf	fsr2l,c
 34453  004142  0E06               	movlw	high _OsAlarms
 34454  004144  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34455  004146  6EDA               	movwf	fsr2h,c
 34456  004148  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 34457  00414C  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 34458                           
 34459                           ; BSR set to: 0
 34460  004150  0012               	return		;funcret
 34461  004152                     __end_of_OsAlrm_SetOsAlarm:
 34462                           	opt stack 0
 34463                           tosu	equ	0xFFF
 34464                           tosh	equ	0xFFE
 34465                           tosl	equ	0xFFD
 34466                           pclath	equ	0xFFA
 34467                           tblptru	equ	0xFF8
 34468                           tblptrh	equ	0xFF7
 34469                           tblptrl	equ	0xFF6
 34470                           tablat	equ	0xFF5
 34471                           prodh	equ	0xFF4
 34472                           prodl	equ	0xFF3
 34473                           intcon	equ	0xFF2
 34474                           intcon2	equ	0xFF1
 34475                           intcon3	equ	0xFF0
 34476                           indf0	equ	0xFEF
 34477                           postinc0	equ	0xFEE
 34478                           plusw0	equ	0xFEB
 34479                           fsr0h	equ	0xFEA
 34480                           fsr0l	equ	0xFE9
 34481                           wreg	equ	0xFE8
 34482                           indf1	equ	0xFE7
 34483                           postinc1	equ	0xFE6
 34484                           postdec1	equ	0xFE5
 34485                           plusw1	equ	0xFE3
 34486                           fsr1h	equ	0xFE2
 34487                           fsr1l	equ	0xFE1
 34488                           indf2	equ	0xFDF
 34489                           postinc2	equ	0xFDE
 34490                           postdec2	equ	0xFDD
 34491                           plusw2	equ	0xFDB
 34492                           fsr2h	equ	0xFDA
 34493                           fsr2l	equ	0xFD9
 34494                           status	equ	0xFD8
 34495                           
 34496 ;; *************** function ___wmul *****************
 34497 ;; Defined at:
 34498 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34499 ;; Parameters:    Size  Location     Type
 34500 ;;  multiplier      2   29[BANK0 ] unsigned int 
 34501 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 34502 ;; Auto vars:     Size  Location     Type
 34503 ;;  product         2   33[BANK0 ] unsigned int 
 34504 ;; Return value:  Size  Location     Type
 34505 ;;                  2   29[BANK0 ] unsigned int 
 34506 ;; Registers used:
 34507 ;;		wreg, status,2, status,0, prodl, prodh
 34508 ;; Tracked objects:
 34509 ;;		On entry : 0/0
 34510 ;;		On exit  : 0/0
 34511 ;;		Unchanged: 0/0
 34512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34513 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34514 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34517 ;;Total ram usage:        6 bytes
 34518 ;; Hardware stack levels used:    1
 34519 ;; Hardware stack levels required when called:   11
 34520 ;; This function calls:
 34521 ;;		Nothing
 34522 ;; This function is called by:
 34523 ;;		_OsAlrm_SetOsAlarm
 34524 ;;		_secondsAppTimer
 34525 ;;		_atoi
 34526 ;; This function uses a non-reentrant model
 34527 ;;
 34528                           
 34529                           	psect	text160
 34530  00670E                     __ptext160:
 34531                           	opt stack 0
 34532  00670E                     ___wmul:
 34533                           	opt stack 13
 34534                           
 34535                           ; BSR set to: 0
 34536                           ;incstack = 0
 34537  00670E  0100               	movlb	0	; () banked
 34538  006710  517D               	movf	___wmul@multiplier& (0+255),w,b
 34539  006712  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34540  006714  CFF3 F081          	movff	prodl,___wmul@product
 34541  006718  CFF4 F082          	movff	prodh,___wmul@product+1
 34542  00671C  517D               	movf	___wmul@multiplier& (0+255),w,b
 34543  00671E  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34544  006720  50F3               	movf	prodl,w,c
 34545  006722  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34546  006724  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34547  006726  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34548  006728  50F3               	movf	prodl,w,c
 34549  00672A  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34550                           
 34551                           ; BSR set to: 0
 34552  00672C  C081  F07D         	movff	___wmul@product,?___wmul
 34553  006730  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 34554  006734  0012               	return	
 34555  006736                     __end_of___wmul:
 34556                           	opt stack 0
 34557                           tosu	equ	0xFFF
 34558                           tosh	equ	0xFFE
 34559                           tosl	equ	0xFFD
 34560                           pclath	equ	0xFFA
 34561                           tblptru	equ	0xFF8
 34562                           tblptrh	equ	0xFF7
 34563                           tblptrl	equ	0xFF6
 34564                           tablat	equ	0xFF5
 34565                           prodh	equ	0xFF4
 34566                           prodl	equ	0xFF3
 34567                           intcon	equ	0xFF2
 34568                           intcon2	equ	0xFF1
 34569                           intcon3	equ	0xFF0
 34570                           indf0	equ	0xFEF
 34571                           postinc0	equ	0xFEE
 34572                           plusw0	equ	0xFEB
 34573                           fsr0h	equ	0xFEA
 34574                           fsr0l	equ	0xFE9
 34575                           wreg	equ	0xFE8
 34576                           indf1	equ	0xFE7
 34577                           postinc1	equ	0xFE6
 34578                           postdec1	equ	0xFE5
 34579                           plusw1	equ	0xFE3
 34580                           fsr1h	equ	0xFE2
 34581                           fsr1l	equ	0xFE1
 34582                           indf2	equ	0xFDF
 34583                           postinc2	equ	0xFDE
 34584                           postdec2	equ	0xFDD
 34585                           plusw2	equ	0xFDB
 34586                           fsr2h	equ	0xFDA
 34587                           fsr2l	equ	0xFD9
 34588                           status	equ	0xFD8
 34589                           
 34590 ;; *************** function _I2c_InitI2cModule *****************
 34591 ;; Defined at:
 34592 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34593 ;; Parameters:    Size  Location     Type
 34594 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 34595 ;;		 -> I2cConfig(10), 
 34596 ;; Auto vars:     Size  Location     Type
 34597 ;;		None
 34598 ;; Return value:  Size  Location     Type
 34599 ;;                  1    wreg      void 
 34600 ;; Registers used:
 34601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34602 ;; Tracked objects:
 34603 ;;		On entry : 0/0
 34604 ;;		On exit  : 0/0
 34605 ;;		Unchanged: 0/0
 34606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34607 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34610 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34611 ;;Total ram usage:        4 bytes
 34612 ;; Hardware stack levels used:    1
 34613 ;; Hardware stack levels required when called:   13
 34614 ;; This function calls:
 34615 ;;		_SetBaudRate
 34616 ;; This function is called by:
 34617 ;;		_I2cSlv_MainTask
 34618 ;; This function uses a non-reentrant model
 34619 ;;
 34620                           
 34621                           	psect	text161
 34622  005486                     __ptext161:
 34623                           	opt stack 0
 34624  005486                     _I2c_InitI2cModule:
 34625                           	opt stack 14
 34626                           
 34627                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 34628                           
 34629                           ; BSR set to: 0
 34630                           ;incstack = 0
 34631  005486  8295               	bsf	3989,1,c	;volatile
 34632                           
 34633                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 34634  005488  8095               	bsf	3989,0,c	;volatile
 34635                           
 34636                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 34637  00548A  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 34638  00548E  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 34639  005492  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 34640  005496  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 34641  00549A  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 34642  00549E  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 34643  0054A2  0100               	movlb	0	; () banked
 34644  0054A4  EE20 F004          	lfsr	2,4
 34645  0054A8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34646  0054AA  26D9               	addwf	fsr2l,f,c
 34647  0054AC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34648  0054AE  22DA               	addwfc	fsr2h,f,c
 34649  0054B0  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 34650  0054B4  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 34651  0054B8  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 34652  0054BC  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 34653  0054C0  ECA6  F02F         	call	_SetBaudRate	;wreg free
 34654                           
 34655                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 34656  0054C4  0100               	movlb	0	; () banked
 34657  0054C6  EE20 F008          	lfsr	2,8
 34658  0054CA  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34659  0054CC  26D9               	addwf	fsr2l,f,c
 34660  0054CE  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34661  0054D0  22DA               	addwfc	fsr2h,f,c
 34662  0054D2  50DF               	movf	indf2,w,c
 34663  0054D4  1272               	iorwf	3954,f,c	;volatile
 34664                           
 34665                           ; BSR set to: 0
 34666                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 34667  0054D6  EE20 F009          	lfsr	2,9
 34668  0054DA  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34669  0054DC  26D9               	addwf	fsr2l,f,c
 34670  0054DE  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34671  0054E0  22DA               	addwfc	fsr2h,f,c
 34672  0054E2  50DF               	movf	indf2,w,c
 34673  0054E4  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 34674  0054E6  0E05               	movlw	5
 34675  0054E8  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 34676  0054EA                     u14785:
 34677  0054EA  90D8               	bcf	status,0,c
 34678  0054EC  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 34679  0054EE  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 34680  0054F0  D7FC               	goto	u14785
 34681  0054F2  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 34682  0054F4  1272               	iorwf	3954,f,c	;volatile
 34683                           
 34684                           ; BSR set to: 0
 34685  0054F6  0012               	return		;funcret
 34686  0054F8                     __end_of_I2c_InitI2cModule:
 34687                           	opt stack 0
 34688                           tosu	equ	0xFFF
 34689                           tosh	equ	0xFFE
 34690                           tosl	equ	0xFFD
 34691                           pclath	equ	0xFFA
 34692                           tblptru	equ	0xFF8
 34693                           tblptrh	equ	0xFF7
 34694                           tblptrl	equ	0xFF6
 34695                           tablat	equ	0xFF5
 34696                           prodh	equ	0xFF4
 34697                           prodl	equ	0xFF3
 34698                           intcon	equ	0xFF2
 34699                           intcon2	equ	0xFF1
 34700                           intcon3	equ	0xFF0
 34701                           indf0	equ	0xFEF
 34702                           postinc0	equ	0xFEE
 34703                           plusw0	equ	0xFEB
 34704                           fsr0h	equ	0xFEA
 34705                           fsr0l	equ	0xFE9
 34706                           wreg	equ	0xFE8
 34707                           indf1	equ	0xFE7
 34708                           postinc1	equ	0xFE6
 34709                           postdec1	equ	0xFE5
 34710                           plusw1	equ	0xFE3
 34711                           fsr1h	equ	0xFE2
 34712                           fsr1l	equ	0xFE1
 34713                           indf2	equ	0xFDF
 34714                           postinc2	equ	0xFDE
 34715                           postdec2	equ	0xFDD
 34716                           plusw2	equ	0xFDB
 34717                           fsr2h	equ	0xFDA
 34718                           fsr2l	equ	0xFD9
 34719                           status	equ	0xFD8
 34720                           
 34721 ;; *************** function _SetBaudRate *****************
 34722 ;; Defined at:
 34723 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34724 ;; Parameters:    Size  Location     Type
 34725 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 34726 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 34727 ;; Auto vars:     Size  Location     Type
 34728 ;;		None
 34729 ;; Return value:  Size  Location     Type
 34730 ;;                  1    wreg      void 
 34731 ;; Registers used:
 34732 ;;		wreg, status,2, status,0, cstack
 34733 ;; Tracked objects:
 34734 ;;		On entry : 0/0
 34735 ;;		On exit  : 0/0
 34736 ;;		Unchanged: 0/0
 34737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34740 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34741 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34742 ;;Total ram usage:       12 bytes
 34743 ;; Hardware stack levels used:    1
 34744 ;; Hardware stack levels required when called:   12
 34745 ;; This function calls:
 34746 ;;		___lldiv
 34747 ;; This function is called by:
 34748 ;;		_I2c_InitI2cModule
 34749 ;; This function uses a non-reentrant model
 34750 ;;
 34751                           
 34752                           	psect	text162
 34753  005F4C                     __ptext162:
 34754                           	opt stack 0
 34755  005F4C                     _SetBaudRate:
 34756                           	opt stack 14
 34757                           
 34758                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 34759                           
 34760                           ; BSR set to: 0
 34761                           ;incstack = 0
 34762  005F4C  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 34763  005F50  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 34764  005F54  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 34765  005F58  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 34766  005F5C  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 34767  005F60  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 34768  005F64  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 34769  005F68  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 34770  005F6C  0E02               	movlw	2
 34771  005F6E                     u13545:
 34772  005F6E  90D8               	bcf	status,0,c
 34773  005F70  0100               	movlb	0	; () banked
 34774  005F72  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 34775  005F74  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 34776  005F76  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 34777  005F78  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 34778  005F7A  2EE8               	decfsz	wreg,f,c
 34779  005F7C  D7F8               	goto	u13545
 34780  005F7E  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 34781  005F82  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 34782  005F86  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 34783  005F8A  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 34784  005F8E  EC87  F029         	call	___lldiv	;wreg free
 34785  005F92  0100               	movlb	0	; () banked
 34786  005F94  0589               	decf	?___lldiv& (0+255),w,b
 34787  005F96  6E74               	movwf	3956,c	;volatile
 34788                           
 34789                           ; BSR set to: 0
 34790  005F98  0012               	return		;funcret
 34791  005F9A                     __end_of_SetBaudRate:
 34792                           	opt stack 0
 34793                           tosu	equ	0xFFF
 34794                           tosh	equ	0xFFE
 34795                           tosl	equ	0xFFD
 34796                           pclath	equ	0xFFA
 34797                           tblptru	equ	0xFF8
 34798                           tblptrh	equ	0xFF7
 34799                           tblptrl	equ	0xFF6
 34800                           tablat	equ	0xFF5
 34801                           prodh	equ	0xFF4
 34802                           prodl	equ	0xFF3
 34803                           intcon	equ	0xFF2
 34804                           intcon2	equ	0xFF1
 34805                           intcon3	equ	0xFF0
 34806                           indf0	equ	0xFEF
 34807                           postinc0	equ	0xFEE
 34808                           plusw0	equ	0xFEB
 34809                           fsr0h	equ	0xFEA
 34810                           fsr0l	equ	0xFE9
 34811                           wreg	equ	0xFE8
 34812                           indf1	equ	0xFE7
 34813                           postinc1	equ	0xFE6
 34814                           postdec1	equ	0xFE5
 34815                           plusw1	equ	0xFE3
 34816                           fsr1h	equ	0xFE2
 34817                           fsr1l	equ	0xFE1
 34818                           indf2	equ	0xFDF
 34819                           postinc2	equ	0xFDE
 34820                           postdec2	equ	0xFDD
 34821                           plusw2	equ	0xFDB
 34822                           fsr2h	equ	0xFDA
 34823                           fsr2l	equ	0xFD9
 34824                           status	equ	0xFD8
 34825                           
 34826 ;; *************** function ___lldiv *****************
 34827 ;; Defined at:
 34828 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 34829 ;; Parameters:    Size  Location     Type
 34830 ;;  dividend        4   41[BANK0 ] unsigned long 
 34831 ;;  divisor         4   45[BANK0 ] unsigned long 
 34832 ;; Auto vars:     Size  Location     Type
 34833 ;;  quotient        4   49[BANK0 ] unsigned long 
 34834 ;;  counter         1   53[BANK0 ] unsigned char 
 34835 ;; Return value:  Size  Location     Type
 34836 ;;                  4   41[BANK0 ] unsigned long 
 34837 ;; Registers used:
 34838 ;;		wreg, status,2, status,0
 34839 ;; Tracked objects:
 34840 ;;		On entry : 0/0
 34841 ;;		On exit  : 0/0
 34842 ;;		Unchanged: 0/0
 34843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34844 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34845 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34847 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34848 ;;Total ram usage:       13 bytes
 34849 ;; Hardware stack levels used:    1
 34850 ;; Hardware stack levels required when called:   11
 34851 ;; This function calls:
 34852 ;;		Nothing
 34853 ;; This function is called by:
 34854 ;;		_SetBaudRate
 34855 ;;		_Tmr_TmrBPrSet
 34856 ;;		_SetUartBaudRate
 34857 ;; This function uses a non-reentrant model
 34858 ;;
 34859                           
 34860                           	psect	text163
 34861  00530E                     __ptext163:
 34862                           	opt stack 0
 34863  00530E                     ___lldiv:
 34864                           	opt stack 15
 34865                           
 34866                           ; BSR set to: 0
 34867                           ;incstack = 0
 34868  00530E  0E00               	movlw	0
 34869  005310  0100               	movlb	0	; () banked
 34870  005312  6F91               	movwf	___lldiv@quotient& (0+255),b
 34871  005314  0E00               	movlw	0
 34872  005316  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 34873  005318  0E00               	movlw	0
 34874  00531A  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 34875  00531C  0E00               	movlw	0
 34876  00531E  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 34877                           
 34878                           ; BSR set to: 0
 34879  005320  518D               	movf	___lldiv@divisor& (0+255),w,b
 34880  005322  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34881  005324  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34882  005326  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34883  005328  B4D8               	btfsc	status,2,c
 34884  00532A  D02A               	goto	l3324
 34885                           
 34886                           ; BSR set to: 0
 34887  00532C  0E01               	movlw	1
 34888  00532E  6F95               	movwf	___lldiv@counter& (0+255),b
 34889  005330  D006               	goto	l3319
 34890  005332                     
 34891                           ; BSR set to: 0
 34892                           
 34893                           ; BSR set to: 0
 34894  005332  90D8               	bcf	status,0,c
 34895  005334  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 34896  005336  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34897  005338  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34898  00533A  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34899  00533C  2B95               	incf	___lldiv@counter& (0+255),f,b
 34900  00533E                     l3319:
 34901                           
 34902                           ; BSR set to: 0
 34903                           
 34904                           ; BSR set to: 0
 34905  00533E  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34906  005340  D7F8               	goto	l3320
 34907  005342                     u12540:
 34908                           
 34909                           ; BSR set to: 0
 34910                           
 34911                           ; BSR set to: 0
 34912                           
 34913                           ; BSR set to: 0
 34914  005342  90D8               	bcf	status,0,c
 34915  005344  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 34916  005346  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34917  005348  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34918  00534A  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34919                           
 34920                           ; BSR set to: 0
 34921  00534C  518D               	movf	___lldiv@divisor& (0+255),w,b
 34922  00534E  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 34923  005350  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34924  005352  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34925  005354  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34926  005356  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34927  005358  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34928  00535A  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34929  00535C  A0D8               	btfss	status,0,c
 34930  00535E  D009               	goto	l3323
 34931                           
 34932                           ; BSR set to: 0
 34933  005360  518D               	movf	___lldiv@divisor& (0+255),w,b
 34934  005362  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 34935  005364  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34936  005366  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34937  005368  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34938  00536A  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34939  00536C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34940  00536E  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34941                           
 34942                           ; BSR set to: 0
 34943  005370  8191               	bsf	___lldiv@quotient& (0+255),0,b
 34944  005372                     l3323:
 34945                           
 34946                           ; BSR set to: 0
 34947                           
 34948                           ; BSR set to: 0
 34949  005372  90D8               	bcf	status,0,c
 34950  005374  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34951  005376  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34952  005378  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34953  00537A  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 34954                           
 34955                           ; BSR set to: 0
 34956  00537C  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 34957  00537E  D7E1               	goto	u12540
 34958  005380                     l3324:
 34959                           
 34960                           ; BSR set to: 0
 34961                           
 34962                           ; BSR set to: 0
 34963  005380  C091  F089         	movff	___lldiv@quotient,?___lldiv
 34964  005384  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 34965  005388  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 34966  00538C  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 34967                           
 34968                           ; BSR set to: 0
 34969  005390  0012               	return		;funcret
 34970  005392                     __end_of___lldiv:
 34971                           	opt stack 0
 34972                           tosu	equ	0xFFF
 34973                           tosh	equ	0xFFE
 34974                           tosl	equ	0xFFD
 34975                           pclath	equ	0xFFA
 34976                           tblptru	equ	0xFF8
 34977                           tblptrh	equ	0xFF7
 34978                           tblptrl	equ	0xFF6
 34979                           tablat	equ	0xFF5
 34980                           prodh	equ	0xFF4
 34981                           prodl	equ	0xFF3
 34982                           intcon	equ	0xFF2
 34983                           intcon2	equ	0xFF1
 34984                           intcon3	equ	0xFF0
 34985                           indf0	equ	0xFEF
 34986                           postinc0	equ	0xFEE
 34987                           plusw0	equ	0xFEB
 34988                           fsr0h	equ	0xFEA
 34989                           fsr0l	equ	0xFE9
 34990                           wreg	equ	0xFE8
 34991                           indf1	equ	0xFE7
 34992                           postinc1	equ	0xFE6
 34993                           postdec1	equ	0xFE5
 34994                           plusw1	equ	0xFE3
 34995                           fsr1h	equ	0xFE2
 34996                           fsr1l	equ	0xFE1
 34997                           indf2	equ	0xFDF
 34998                           postinc2	equ	0xFDE
 34999                           postdec2	equ	0xFDD
 35000                           plusw2	equ	0xFDB
 35001                           fsr2h	equ	0xFDA
 35002                           fsr2l	equ	0xFD9
 35003                           status	equ	0xFD8
 35004                           
 35005 ;; *************** function _I2cSetConfig *****************
 35006 ;; Defined at:
 35007 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35008 ;; Parameters:    Size  Location     Type
 35009 ;;		None
 35010 ;; Auto vars:     Size  Location     Type
 35011 ;;		None
 35012 ;; Return value:  Size  Location     Type
 35013 ;;                  1    wreg      void 
 35014 ;; Registers used:
 35015 ;;		wreg, status,2
 35016 ;; Tracked objects:
 35017 ;;		On entry : 0/0
 35018 ;;		On exit  : 0/0
 35019 ;;		Unchanged: 0/0
 35020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35025 ;;Total ram usage:        0 bytes
 35026 ;; Hardware stack levels used:    1
 35027 ;; Hardware stack levels required when called:   11
 35028 ;; This function calls:
 35029 ;;		Nothing
 35030 ;; This function is called by:
 35031 ;;		_I2cSlv_MainTask
 35032 ;; This function uses a non-reentrant model
 35033 ;;
 35034                           
 35035                           	psect	text164
 35036  00668E                     __ptext164:
 35037                           	opt stack 0
 35038  00668E                     _I2cSetConfig:
 35039                           	opt stack 16
 35040                           
 35041                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 35042                           
 35043                           ; BSR set to: 0
 35044                           ;incstack = 0
 35045  00668E  0E80               	movlw	128
 35046  006690  0103               	movlb	3	; () banked
 35047  006692  6F55               	movwf	_I2cConfig& (0+255),b
 35048  006694  0E1A               	movlw	26
 35049  006696  6F56               	movwf	(_I2cConfig+1)& (0+255),b
 35050  006698  0E06               	movlw	6
 35051  00669A  6F57               	movwf	(_I2cConfig+2)& (0+255),b
 35052  00669C  0E00               	movlw	0
 35053  00669E  6F58               	movwf	(_I2cConfig+3)& (0+255),b
 35054                           
 35055                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 35056  0066A0  0E00               	movlw	0
 35057  0066A2  6F59               	movwf	(_I2cConfig+4)& (0+255),b
 35058  0066A4  0E6C               	movlw	108
 35059  0066A6  6F5A               	movwf	(_I2cConfig+5)& (0+255),b
 35060  0066A8  0EDC               	movlw	220
 35061  0066AA  6F5B               	movwf	(_I2cConfig+6)& (0+255),b
 35062  0066AC  0E02               	movlw	2
 35063  0066AE  6F5C               	movwf	(_I2cConfig+7)& (0+255),b
 35064                           
 35065                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 35066  0066B0  0E08               	movlw	8
 35067  0066B2  6F5D               	movwf	(_I2cConfig+8)& (0+255),b
 35068                           
 35069                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 35070  0066B4  0E01               	movlw	1
 35071  0066B6  6F5E               	movwf	(_I2cConfig+9)& (0+255),b
 35072                           
 35073                           ; BSR set to: 3
 35074  0066B8  0012               	return		;funcret
 35075  0066BA                     __end_of_I2cSetConfig:
 35076                           	opt stack 0
 35077                           tosu	equ	0xFFF
 35078                           tosh	equ	0xFFE
 35079                           tosl	equ	0xFFD
 35080                           pclath	equ	0xFFA
 35081                           tblptru	equ	0xFF8
 35082                           tblptrh	equ	0xFF7
 35083                           tblptrl	equ	0xFF6
 35084                           tablat	equ	0xFF5
 35085                           prodh	equ	0xFF4
 35086                           prodl	equ	0xFF3
 35087                           intcon	equ	0xFF2
 35088                           intcon2	equ	0xFF1
 35089                           intcon3	equ	0xFF0
 35090                           indf0	equ	0xFEF
 35091                           postinc0	equ	0xFEE
 35092                           plusw0	equ	0xFEB
 35093                           fsr0h	equ	0xFEA
 35094                           fsr0l	equ	0xFE9
 35095                           wreg	equ	0xFE8
 35096                           indf1	equ	0xFE7
 35097                           postinc1	equ	0xFE6
 35098                           postdec1	equ	0xFE5
 35099                           plusw1	equ	0xFE3
 35100                           fsr1h	equ	0xFE2
 35101                           fsr1l	equ	0xFE1
 35102                           indf2	equ	0xFDF
 35103                           postinc2	equ	0xFDE
 35104                           postdec2	equ	0xFDD
 35105                           plusw2	equ	0xFDB
 35106                           fsr2h	equ	0xFDA
 35107                           fsr2l	equ	0xFD9
 35108                           status	equ	0xFD8
 35109                           
 35110 ;; *************** function _I2cSendMsgSm *****************
 35111 ;; Defined at:
 35112 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35113 ;; Parameters:    Size  Location     Type
 35114 ;;		None
 35115 ;; Auto vars:     Size  Location     Type
 35116 ;;		None
 35117 ;; Return value:  Size  Location     Type
 35118 ;;                  1    wreg      void 
 35119 ;; Registers used:
 35120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35121 ;; Tracked objects:
 35122 ;;		On entry : 0/0
 35123 ;;		On exit  : 0/0
 35124 ;;		Unchanged: 0/0
 35125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35130 ;;Total ram usage:        0 bytes
 35131 ;; Hardware stack levels used:    1
 35132 ;; Hardware stack levels required when called:   13
 35133 ;; This function calls:
 35134 ;;		_I2c_ReadData
 35135 ;;		_I2c_WriteData
 35136 ;;		_ReceiveEvt
 35137 ;; This function is called by:
 35138 ;;		_I2cSlv_MainTask
 35139 ;; This function uses a non-reentrant model
 35140 ;;
 35141                           
 35142                           	psect	text165
 35143  004152                     __ptext165:
 35144                           	opt stack 0
 35145  004152                     _I2cSendMsgSm:
 35146                           	opt stack 14
 35147                           
 35148                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 35149                           ;i2c_slv.c: 122: switch(I2cComState)
 35150                           
 35151                           ; BSR set to: 3
 35152                           ;incstack = 0
 35153  004152  D04F               	goto	l1382
 35154  004154                     
 35155                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 35156  004154  0ED7               	movlw	low _I2cWriteDataEvt
 35157  004156  0100               	movlb	0	; () banked
 35158  004158  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35159  00415A  0E00               	movlw	high _I2cWriteDataEvt
 35160  00415C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35161  00415E  EC30  F033         	call	_ReceiveEvt	;wreg free
 35162  004162  0900               	iorlw	0
 35163  004164  B4D8               	btfsc	status,2,c
 35164  004166  D007               	goto	l1384
 35165                           
 35166                           ;i2c_slv.c: 127: {
 35167                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 35168  004168  0E01               	movlw	1
 35169  00416A  0101               	movlb	1	; () banked
 35170  00416C  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35171                           
 35172                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 35173  00416E  0E01               	movlw	1
 35174  004170  0100               	movlb	0	; () banked
 35175  004172  6FCF               	movwf	_I2cComSts& (0+255),b
 35176                           
 35177                           ;i2c_slv.c: 132: }
 35178  004174  0012               	return	
 35179  004176                     l1384:
 35180                           
 35181                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 35182                           
 35183                           ; BSR set to: 0
 35184  004176  0E39               	movlw	low _I2cReadDataEvt
 35185  004178  0100               	movlb	0	; () banked
 35186  00417A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35187  00417C  0E00               	movlw	high _I2cReadDataEvt
 35188  00417E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35189  004180  EC30  F033         	call	_ReceiveEvt	;wreg free
 35190  004184  0900               	iorlw	0
 35191  004186  B4D8               	btfsc	status,2,c
 35192  004188  D007               	goto	l1386
 35193                           
 35194                           ;i2c_slv.c: 134: {
 35195                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 35196  00418A  0E02               	movlw	2
 35197  00418C  0101               	movlb	1	; () banked
 35198  00418E  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35199                           
 35200                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 35201  004190  0E02               	movlw	2
 35202  004192  0100               	movlb	0	; () banked
 35203  004194  6FCF               	movwf	_I2cComSts& (0+255),b
 35204                           
 35205                           ;i2c_slv.c: 139: }
 35206  004196  0012               	return	
 35207  004198                     l1386:
 35208                           
 35209                           ;i2c_slv.c: 140: else
 35210                           ;i2c_slv.c: 141: {
 35211                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 35212                           
 35213                           ; BSR set to: 0
 35214  004198  0E00               	movlw	0
 35215  00419A  0100               	movlb	0	; () banked
 35216  00419C  6FCF               	movwf	_I2cComSts& (0+255),b
 35217                           
 35218                           ; BSR set to: 0
 35219                           ;i2c_slv.c: 144: }
 35220                           ;i2c_slv.c: 145: break;
 35221                           
 35222                           ; BSR set to: 0
 35223  00419E  0012               	return	
 35224  0041A0                     
 35225                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 35226                           
 35227                           ; BSR set to: 0
 35228  0041A0  0EA1               	movlw	low _I2cTxPacket
 35229  0041A2  0100               	movlb	0	; () banked
 35230  0041A4  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 35231  0041A6  0E03               	movlw	high _I2cTxPacket
 35232  0041A8  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 35233  0041AA  EC59  F00F         	call	_I2c_WriteData	;wreg free
 35234  0041AE  0900               	iorlw	0
 35235  0041B0  B4D8               	btfsc	status,2,c
 35236  0041B2  0012               	return	
 35237                           
 35238                           ;i2c_slv.c: 150: {
 35239                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 35240  0041B4  0E03               	movlw	3
 35241  0041B6  0101               	movlb	1	; () banked
 35242  0041B8  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35243                           
 35244                           ; BSR set to: 1
 35245                           ;i2c_slv.c: 153: }
 35246                           ;i2c_slv.c: 154: break;
 35247  0041BA  0012               	return	
 35248  0041BC                     
 35249                           ; BSR set to: 1
 35250                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 35251                           
 35252                           ; BSR set to: 1
 35253  0041BC  0E9B               	movlw	low _I2cRxPacket
 35254  0041BE  0100               	movlb	0	; () banked
 35255  0041C0  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 35256  0041C2  0E03               	movlw	high _I2cRxPacket
 35257  0041C4  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 35258  0041C6  ECC0  F010         	call	_I2c_ReadData	;wreg free
 35259  0041CA  0900               	iorlw	0
 35260  0041CC  B4D8               	btfsc	status,2,c
 35261  0041CE  0012               	return	
 35262                           
 35263                           ;i2c_slv.c: 159: {
 35264                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 35265  0041D0  0E04               	movlw	4
 35266  0041D2  0101               	movlb	1	; () banked
 35267  0041D4  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35268                           
 35269                           ; BSR set to: 1
 35270                           ;i2c_slv.c: 162: }
 35271                           ;i2c_slv.c: 164: break;
 35272  0041D6  0012               	return	
 35273  0041D8                     
 35274                           ; BSR set to: 1
 35275                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 35276                           
 35277                           ; BSR set to: 1
 35278  0041D8  0E00               	movlw	0
 35279  0041DA  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35280                           
 35281                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 35282  0041DC  0E00               	movlw	0
 35283  0041DE  0100               	movlb	0	; () banked
 35284  0041E0  6FCF               	movwf	_I2cComSts& (0+255),b
 35285                           
 35286                           ;i2c_slv.c: 171: break;
 35287  0041E2  0012               	return	
 35288  0041E4                     
 35289                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 35290                           
 35291                           ; BSR set to: 0
 35292  0041E4  0E00               	movlw	0
 35293  0041E6  0101               	movlb	1	; () banked
 35294  0041E8  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35295                           
 35296                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 35297  0041EA  0E00               	movlw	0
 35298  0041EC  0100               	movlb	0	; () banked
 35299  0041EE  6FCF               	movwf	_I2cComSts& (0+255),b
 35300                           
 35301                           ; BSR set to: 0
 35302                           ;i2c_slv.c: 182: }
 35303                           
 35304                           ; BSR set to: 0
 35305                           ;i2c_slv.c: 181: break;
 35306                           
 35307                           ;i2c_slv.c: 180: default:
 35308                           
 35309                           ;i2c_slv.c: 178: break;
 35310  0041F0  0012               	return	
 35311  0041F2                     l1382:
 35312                           
 35313                           ; BSR set to: 0
 35314  0041F2  0101               	movlb	1	; () banked
 35315  0041F4  51E4               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 35316                           
 35317                           ; Switch size 1, requested type "space"
 35318                           ; Number of cases is 5, Range of values is 0 to 4
 35319                           ; switch strategies available:
 35320                           ; Name         Instructions Cycles
 35321                           ; simple_byte           16     9 (average)
 35322                           ;	Chosen strategy is simple_byte
 35323  0041F6  0A00               	xorlw	0	; case 0
 35324  0041F8  B4D8               	btfsc	status,2,c
 35325  0041FA  D7AC               	goto	l1383
 35326  0041FC  0A01               	xorlw	1	; case 1
 35327  0041FE  B4D8               	btfsc	status,2,c
 35328  004200  D7CF               	goto	l1389
 35329  004202  0A03               	xorlw	3	; case 2
 35330  004204  B4D8               	btfsc	status,2,c
 35331  004206  D7DA               	goto	l1391
 35332  004208  0A01               	xorlw	1	; case 3
 35333  00420A  B4D8               	btfsc	status,2,c
 35334  00420C  D7E5               	goto	l1393
 35335  00420E  0A07               	xorlw	7	; case 4
 35336  004210  A4D8               	btfss	status,2,c
 35337  004212  0012               	return	
 35338  004214  D7E7               	goto	l1394
 35339  004216                     __end_of_I2cSendMsgSm:
 35340                           	opt stack 0
 35341                           tosu	equ	0xFFF
 35342                           tosh	equ	0xFFE
 35343                           tosl	equ	0xFFD
 35344                           pclath	equ	0xFFA
 35345                           tblptru	equ	0xFF8
 35346                           tblptrh	equ	0xFF7
 35347                           tblptrl	equ	0xFF6
 35348                           tablat	equ	0xFF5
 35349                           prodh	equ	0xFF4
 35350                           prodl	equ	0xFF3
 35351                           intcon	equ	0xFF2
 35352                           intcon2	equ	0xFF1
 35353                           intcon3	equ	0xFF0
 35354                           indf0	equ	0xFEF
 35355                           postinc0	equ	0xFEE
 35356                           plusw0	equ	0xFEB
 35357                           fsr0h	equ	0xFEA
 35358                           fsr0l	equ	0xFE9
 35359                           wreg	equ	0xFE8
 35360                           indf1	equ	0xFE7
 35361                           postinc1	equ	0xFE6
 35362                           postdec1	equ	0xFE5
 35363                           plusw1	equ	0xFE3
 35364                           fsr1h	equ	0xFE2
 35365                           fsr1l	equ	0xFE1
 35366                           indf2	equ	0xFDF
 35367                           postinc2	equ	0xFDE
 35368                           postdec2	equ	0xFDD
 35369                           plusw2	equ	0xFDB
 35370                           fsr2h	equ	0xFDA
 35371                           fsr2l	equ	0xFD9
 35372                           status	equ	0xFD8
 35373                           
 35374 ;; *************** function _ReceiveEvt *****************
 35375 ;; Defined at:
 35376 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35377 ;; Parameters:    Size  Location     Type
 35378 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35379 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 35380 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 35381 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 35382 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 35383 ;;		 -> ActivateRiDetection(1), 
 35384 ;; Auto vars:     Size  Location     Type
 35385 ;;  EventStatus     1   32[BANK0 ] enum E7727
 35386 ;; Return value:  Size  Location     Type
 35387 ;;                  1    wreg      enum E7699
 35388 ;; Registers used:
 35389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35390 ;; Tracked objects:
 35391 ;;		On entry : 0/0
 35392 ;;		On exit  : 0/0
 35393 ;;		Unchanged: 0/0
 35394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35397 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35398 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35399 ;;Total ram usage:        4 bytes
 35400 ;; Hardware stack levels used:    1
 35401 ;; Hardware stack levels required when called:   11
 35402 ;; This function calls:
 35403 ;;		Nothing
 35404 ;; This function is called by:
 35405 ;;		_MdmCntSm
 35406 ;;		_CheckModem
 35407 ;;		_ModemEvtParser
 35408 ;;		_GetSmsSm
 35409 ;;		_SendSmsSm
 35410 ;;		_Mdm_GetSmsData
 35411 ;;		_Mdm_IsSmsReceived
 35412 ;;		_Mdm_IsRinging
 35413 ;;		_GetCallerNumber
 35414 ;;		_InitGprsNetwork
 35415 ;;		_HttpGetMethod
 35416 ;;		_I2cSendMsgSm
 35417 ;;		_I2cSlv_I2cReadMsgSts
 35418 ;;		_RiSm
 35419 ;;		_GsmGprsTerminal
 35420 ;; This function uses a non-reentrant model
 35421 ;;
 35422                           
 35423                           	psect	text166
 35424  006660                     __ptext166:
 35425                           	opt stack 0
 35426  006660                     _ReceiveEvt:
 35427                           	opt stack 13
 35428                           
 35429                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 35430                           
 35431                           ;incstack = 0
 35432  006660  0E00               	movlw	0
 35433  006662  0100               	movlb	0	; () banked
 35434  006664  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35435                           
 35436                           ; BSR set to: 0
 35437                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 35438  006666  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35439  00666A  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35440  00666E  0E02               	movlw	2
 35441  006670  18DE               	xorwf	postinc2,w,c
 35442  006672  A4D8               	btfss	status,2,c
 35443  006674  D008               	goto	l832
 35444                           
 35445                           ; BSR set to: 0
 35446                           ;os_ser.c: 106: {
 35447                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 35448  006676  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35449  00667A  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35450  00667E  0E01               	movlw	1
 35451  006680  6EDF               	movwf	indf2,c
 35452                           
 35453                           ; BSR set to: 0
 35454                           ;os_ser.c: 110: EventStatus = EventReceived;
 35455  006682  0E01               	movlw	1
 35456  006684  D001               	goto	L85
 35457  006686                     l832:
 35458                           
 35459                           ; BSR set to: 0
 35460                           ;os_ser.c: 112: else
 35461                           ;os_ser.c: 113: {
 35462                           ;os_ser.c: 115: EventStatus = EventIdle;
 35463                           
 35464                           ; BSR set to: 0
 35465  006686  0E00               	movlw	0
 35466  006688                     L85:
 35467  006688  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35468                           
 35469                           ; BSR set to: 0
 35470                           ;os_ser.c: 116: }
 35471                           ;os_ser.c: 119: return(EventStatus);
 35472  00668A  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 35473  00668C  0012               	return	
 35474  00668E                     __end_of_ReceiveEvt:
 35475                           	opt stack 0
 35476                           tosu	equ	0xFFF
 35477                           tosh	equ	0xFFE
 35478                           tosl	equ	0xFFD
 35479                           pclath	equ	0xFFA
 35480                           tblptru	equ	0xFF8
 35481                           tblptrh	equ	0xFF7
 35482                           tblptrl	equ	0xFF6
 35483                           tablat	equ	0xFF5
 35484                           prodh	equ	0xFF4
 35485                           prodl	equ	0xFF3
 35486                           intcon	equ	0xFF2
 35487                           intcon2	equ	0xFF1
 35488                           intcon3	equ	0xFF0
 35489                           indf0	equ	0xFEF
 35490                           postinc0	equ	0xFEE
 35491                           plusw0	equ	0xFEB
 35492                           fsr0h	equ	0xFEA
 35493                           fsr0l	equ	0xFE9
 35494                           wreg	equ	0xFE8
 35495                           indf1	equ	0xFE7
 35496                           postinc1	equ	0xFE6
 35497                           postdec1	equ	0xFE5
 35498                           plusw1	equ	0xFE3
 35499                           fsr1h	equ	0xFE2
 35500                           fsr1l	equ	0xFE1
 35501                           indf2	equ	0xFDF
 35502                           postinc2	equ	0xFDE
 35503                           postdec2	equ	0xFDD
 35504                           plusw2	equ	0xFDB
 35505                           fsr2h	equ	0xFDA
 35506                           fsr2l	equ	0xFD9
 35507                           status	equ	0xFD8
 35508                           
 35509 ;; *************** function _I2c_WriteData *****************
 35510 ;; Defined at:
 35511 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35512 ;; Parameters:    Size  Location     Type
 35513 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 35514 ;;		 -> I2cTxPacket(5), 
 35515 ;; Auto vars:     Size  Location     Type
 35516 ;;		None
 35517 ;; Return value:  Size  Location     Type
 35518 ;;                  1    wreg      enum E7740
 35519 ;; Registers used:
 35520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35521 ;; Tracked objects:
 35522 ;;		On entry : 0/0
 35523 ;;		On exit  : 0/0
 35524 ;;		Unchanged: 0/0
 35525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35529 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35530 ;;Total ram usage:        4 bytes
 35531 ;; Hardware stack levels used:    1
 35532 ;; Hardware stack levels required when called:   12
 35533 ;; This function calls:
 35534 ;;		_CheckAckStatus
 35535 ;;		_CheckTxStatus
 35536 ;;		_StartCondition
 35537 ;;		_StopCondition
 35538 ;;		_WriteByte
 35539 ;; This function is called by:
 35540 ;;		_I2cSendMsgSm
 35541 ;; This function uses a non-reentrant model
 35542 ;;
 35543                           
 35544                           	psect	text167
 35545  001EB2                     __ptext167:
 35546                           	opt stack 0
 35547  001EB2                     _I2c_WriteData:
 35548                           	opt stack 14
 35549                           
 35550                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 35551                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 35552                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 35553                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 35554                           ;i2c_drv.c: 260: switch (I2cWriteState)
 35555                           
 35556                           ; BSR set to: 0
 35557                           ;incstack = 0
 35558  001EB2  D095               	goto	l160
 35559  001EB4                     
 35560                           ;i2c_drv.c: 264: StartCondition();
 35561  001EB4  ECED  F035         	call	_StartCondition	;wreg free
 35562                           
 35563                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 35564  001EB8  0E00               	movlw	0
 35565  001EBA  6E35               	movwf	I2c_WriteData@WriteStatus,c
 35566                           
 35567                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 35568  001EBC  0E01               	movlw	1
 35569  001EBE  D084               	goto	L92
 35570  001EC0                     
 35571                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 35572  001EC0  0100               	movlb	0	; () banked
 35573  001EC2  EE20 F001          	lfsr	2,1
 35574  001EC6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35575  001EC8  26D9               	addwf	fsr2l,f,c
 35576  001ECA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35577  001ECC  22DA               	addwfc	fsr2h,f,c
 35578  001ECE  50DF               	movf	indf2,w,c
 35579  001ED0  6F80               	movwf	??_I2c_WriteData& (0+255),b
 35580  001ED2  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35581  001ED6  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35582  001EDA  50DF               	movf	indf2,w,c
 35583  001EDC  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 35584  001EDE  90D8               	bcf	status,0,c
 35585  001EE0  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 35586  001EE2  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 35587  001EE4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35588  001EE8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35589  001EEC  6EDF               	movwf	indf2,c
 35590                           
 35591                           ; BSR set to: 0
 35592                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 35593  001EEE  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35594  001EF2  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35595  001EF6  50DF               	movf	indf2,w,c
 35596  001EF8  ECCB  F035         	call	_WriteByte
 35597                           
 35598                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 35599  001EFC  0E02               	movlw	2
 35600  001EFE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35601  001F00                     
 35602                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 35603  001F00  ECD5  F035         	call	_CheckTxStatus	;wreg free
 35604  001F04  0900               	iorlw	0
 35605  001F06  A4D8               	btfss	status,2,c
 35606  001F08  D089               	goto	l162
 35607                           
 35608                           ;i2c_drv.c: 282: {
 35609                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 35610  001F0A  0E03               	movlw	3
 35611  001F0C  D01A               	goto	L94
 35612  001F0E                     
 35613                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 35614  001F0E  0100               	movlb	0	; () banked
 35615  001F10  EE20 F002          	lfsr	2,2
 35616  001F14  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35617  001F16  26D9               	addwf	fsr2l,f,c
 35618  001F18  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35619  001F1A  22DA               	addwfc	fsr2h,f,c
 35620  001F1C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 35621  001F20  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 35622  001F24  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 35623  001F28  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 35624  001F2C  50DF               	movf	indf2,w,c
 35625  001F2E  ECCB  F035         	call	_WriteByte
 35626                           
 35627                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 35628  001F32  0E04               	movlw	4
 35629  001F34  D049               	goto	L92
 35630  001F36                     
 35631                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 35632  001F36  ECD5  F035         	call	_CheckTxStatus	;wreg free
 35633  001F3A  0900               	iorlw	0
 35634  001F3C  A4D8               	btfss	status,2,c
 35635  001F3E  D06E               	goto	l162
 35636                           
 35637                           ;i2c_drv.c: 300: {
 35638                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 35639  001F40  0E05               	movlw	5
 35640  001F42                     L94:
 35641  001F42  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35642                           
 35643                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 35644  001F44  0E08               	movlw	8
 35645  001F46  D040               	goto	L92
 35646  001F48                     
 35647                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 35648  001F48  0100               	movlb	0	; () banked
 35649  001F4A  EE20 F004          	lfsr	2,4
 35650  001F4E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35651  001F50  26D9               	addwf	fsr2l,f,c
 35652  001F52  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35653  001F54  22DA               	addwfc	fsr2h,f,c
 35654  001F56  50DF               	movf	indf2,w,c
 35655  001F58  B4D8               	btfsc	status,2,c
 35656  001F5A  D010               	goto	l170
 35657                           
 35658                           ; BSR set to: 0
 35659                           ;i2c_drv.c: 310: {
 35660                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 35661  001F5C  EE20 F004          	lfsr	2,4
 35662  001F60  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35663  001F62  26D9               	addwf	fsr2l,f,c
 35664  001F64  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35665  001F66  22DA               	addwfc	fsr2h,f,c
 35666  001F68  06DF               	decf	indf2,f,c
 35667                           
 35668                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 35669  001F6A  EE20 F002          	lfsr	2,2
 35670  001F6E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35671  001F70  26D9               	addwf	fsr2l,f,c
 35672  001F72  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35673  001F74  22DA               	addwfc	fsr2h,f,c
 35674  001F76  2ADE               	incf	postinc2,f,c
 35675  001F78  0E00               	movlw	0
 35676  001F7A  22DD               	addwfc	postdec2,f,c
 35677  001F7C                     l170:
 35678                           
 35679                           ; BSR set to: 0
 35680                           ;i2c_drv.c: 315: }
 35681                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 35682  001F7C  EE20 F004          	lfsr	2,4
 35683  001F80  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35684  001F82  26D9               	addwf	fsr2l,f,c
 35685  001F84  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35686  001F86  22DA               	addwfc	fsr2h,f,c
 35687  001F88  50DF               	movf	indf2,w,c
 35688  001F8A  A4D8               	btfss	status,2,c
 35689  001F8C  D002               	goto	l171
 35690                           
 35691                           ; BSR set to: 0
 35692                           ;i2c_drv.c: 319: {
 35693                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 35694  001F8E  0E06               	movlw	6
 35695  001F90  D01B               	goto	L92
 35696  001F92                     l171:
 35697                           
 35698                           ; BSR set to: 0
 35699                           ;i2c_drv.c: 323: else
 35700                           ;i2c_drv.c: 324: {
 35701                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 35702                           
 35703                           ; BSR set to: 0
 35704  001F92  0E03               	movlw	3
 35705  001F94  D019               	goto	L92
 35706  001F96                     
 35707                           ;i2c_drv.c: 332: StopCondition();
 35708                           
 35709                           ; BSR set to: 0
 35710  001F96  ECEB  F035         	call	_StopCondition	;wreg free
 35711                           
 35712                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 35713  001F9A  0E07               	movlw	7
 35714  001F9C  D015               	goto	L92
 35715  001F9E                     
 35716                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 35717  001F9E  0E00               	movlw	0
 35718  001FA0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35719                           
 35720                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 35721  001FA2  0E00               	movlw	0
 35722  001FA4  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35723                           
 35724                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 35725  001FA6  0E02               	movlw	2
 35726  001FA8  D018               	goto	L93
 35727  001FAA                     
 35728                           ;i2c_drv.c: 347: TentativeCounter++;
 35729  001FAA  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 35730                           
 35731                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 35732  001FAC  ECDA  F035         	call	_CheckAckStatus	;wreg free
 35733  001FB0  0900               	iorlw	0
 35734  001FB2  A4D8               	btfss	status,2,c
 35735  001FB4  D005               	goto	l176
 35736                           
 35737                           ;i2c_drv.c: 350: {
 35738                           ;i2c_drv.c: 352: TentativeCounter = 0;
 35739  001FB6  0E00               	movlw	0
 35740  001FB8  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 35741                           
 35742                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 35743  001FBA  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 35744                           
 35745                           ;i2c_drv.c: 355: }
 35746  001FBE  D02E               	goto	l162
 35747  001FC0                     l176:
 35748                           
 35749                           ;i2c_drv.c: 356: else
 35750                           ;i2c_drv.c: 357: {
 35751                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 35752  001FC0  0E02               	movlw	2
 35753  001FC2  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 35754  001FC4  D02B               	goto	l162
 35755                           
 35756                           ;i2c_drv.c: 360: {
 35757                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 35758  001FC6  0E09               	movlw	9
 35759  001FC8                     L92:
 35760  001FC8  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35761                           
 35762                           ;i2c_drv.c: 363: }
 35763                           ;i2c_drv.c: 364: }
 35764                           ;i2c_drv.c: 365: break;
 35765  001FCA  D028               	goto	l162
 35766  001FCC                     
 35767                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 35768  001FCC  0E00               	movlw	0
 35769  001FCE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35770                           
 35771                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 35772  001FD0  0E00               	movlw	0
 35773  001FD2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35774                           
 35775                           ;i2c_drv.c: 372: TentativeCounter = 0;
 35776  001FD4  0E00               	movlw	0
 35777  001FD6  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 35778                           
 35779                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 35780  001FD8  0E01               	movlw	1
 35781  001FDA                     L93:
 35782  001FDA  6E35               	movwf	I2c_WriteData@WriteStatus,c
 35783                           
 35784                           ;i2c_drv.c: 379: }
 35785                           
 35786                           ;i2c_drv.c: 378: break;
 35787                           
 35788                           ;i2c_drv.c: 377: default:
 35789                           
 35790                           ;i2c_drv.c: 375: break;
 35791  001FDC  D01F               	goto	l162
 35792  001FDE                     l160:
 35793  001FDE  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 35794                           
 35795                           ; Switch size 1, requested type "space"
 35796                           ; Number of cases is 10, Range of values is 0 to 9
 35797                           ; switch strategies available:
 35798                           ; Name         Instructions Cycles
 35799                           ; simple_byte           31    16 (average)
 35800                           ;	Chosen strategy is simple_byte
 35801  001FE0  0A00               	xorlw	0	; case 0
 35802  001FE2  B4D8               	btfsc	status,2,c
 35803  001FE4  D767               	goto	l161
 35804  001FE6  0A01               	xorlw	1	; case 1
 35805  001FE8  B4D8               	btfsc	status,2,c
 35806  001FEA  D76A               	goto	l163
 35807  001FEC  0A03               	xorlw	3	; case 2
 35808  001FEE  B4D8               	btfsc	status,2,c
 35809  001FF0  D787               	goto	l164
 35810  001FF2  0A01               	xorlw	1	; case 3
 35811  001FF4  B4D8               	btfsc	status,2,c
 35812  001FF6  D78B               	goto	l166
 35813  001FF8  0A07               	xorlw	7	; case 4
 35814  001FFA  B4D8               	btfsc	status,2,c
 35815  001FFC  D79C               	goto	l167
 35816  001FFE  0A01               	xorlw	1	; case 5
 35817  002000  B4D8               	btfsc	status,2,c
 35818  002002  D7A2               	goto	l169
 35819  002004  0A03               	xorlw	3	; case 6
 35820  002006  B4D8               	btfsc	status,2,c
 35821  002008  D7C6               	goto	l173
 35822  00200A  0A01               	xorlw	1	; case 7
 35823  00200C  B4D8               	btfsc	status,2,c
 35824  00200E  D7C7               	goto	l174
 35825  002010  0A0F               	xorlw	15	; case 8
 35826  002012  B4D8               	btfsc	status,2,c
 35827  002014  D7CA               	goto	l175
 35828  002016  0A01               	xorlw	1	; case 9
 35829  002018  B4D8               	btfsc	status,2,c
 35830  00201A  D7D8               	goto	l179
 35831  00201C                     l162:
 35832                           
 35833                           ;i2c_drv.c: 382: return WriteStatus;
 35834  00201C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 35835  00201E  0012               	return	
 35836  002020                     __end_of_I2c_WriteData:
 35837                           	opt stack 0
 35838                           tosu	equ	0xFFF
 35839                           tosh	equ	0xFFE
 35840                           tosl	equ	0xFFD
 35841                           pclath	equ	0xFFA
 35842                           tblptru	equ	0xFF8
 35843                           tblptrh	equ	0xFF7
 35844                           tblptrl	equ	0xFF6
 35845                           tablat	equ	0xFF5
 35846                           prodh	equ	0xFF4
 35847                           prodl	equ	0xFF3
 35848                           intcon	equ	0xFF2
 35849                           intcon2	equ	0xFF1
 35850                           intcon3	equ	0xFF0
 35851                           indf0	equ	0xFEF
 35852                           postinc0	equ	0xFEE
 35853                           plusw0	equ	0xFEB
 35854                           fsr0h	equ	0xFEA
 35855                           fsr0l	equ	0xFE9
 35856                           wreg	equ	0xFE8
 35857                           indf1	equ	0xFE7
 35858                           postinc1	equ	0xFE6
 35859                           postdec1	equ	0xFE5
 35860                           plusw1	equ	0xFE3
 35861                           fsr1h	equ	0xFE2
 35862                           fsr1l	equ	0xFE1
 35863                           indf2	equ	0xFDF
 35864                           postinc2	equ	0xFDE
 35865                           postdec2	equ	0xFDD
 35866                           plusw2	equ	0xFDB
 35867                           fsr2h	equ	0xFDA
 35868                           fsr2l	equ	0xFD9
 35869                           status	equ	0xFD8
 35870                           
 35871 ;; *************** function _I2c_ReadData *****************
 35872 ;; Defined at:
 35873 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35874 ;; Parameters:    Size  Location     Type
 35875 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 35876 ;;		 -> I2cRxPacket(6), 
 35877 ;; Auto vars:     Size  Location     Type
 35878 ;;		None
 35879 ;; Return value:  Size  Location     Type
 35880 ;;                  1    wreg      enum E7787
 35881 ;; Registers used:
 35882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35883 ;; Tracked objects:
 35884 ;;		On entry : 0/0
 35885 ;;		On exit  : 0/0
 35886 ;;		Unchanged: 0/0
 35887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35890 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35891 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35892 ;;Total ram usage:        4 bytes
 35893 ;; Hardware stack levels used:    1
 35894 ;; Hardware stack levels required when called:   12
 35895 ;; This function calls:
 35896 ;;		_CheckAckStatus
 35897 ;;		_CheckTxStatus
 35898 ;;		_EnableReceiver
 35899 ;;		_GenerateEvt
 35900 ;;		_ReadByte
 35901 ;;		_SetAckStatus
 35902 ;;		_StartCondition
 35903 ;;		_StopCondition
 35904 ;;		_WriteByte
 35905 ;; This function is called by:
 35906 ;;		_I2cSendMsgSm
 35907 ;; This function uses a non-reentrant model
 35908 ;;
 35909                           
 35910                           	psect	text168
 35911  002180                     __ptext168:
 35912                           	opt stack 0
 35913  002180                     _I2c_ReadData:
 35914                           	opt stack 14
 35915                           
 35916                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 35917                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 35918                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 35919                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 35920                           ;i2c_drv.c: 402: switch (I2cReadState)
 35921                           
 35922                           ;incstack = 0
 35923  002180  D090               	goto	l192
 35924  002182                     
 35925                           ;i2c_drv.c: 406: StartCondition();
 35926  002182  ECED  F035         	call	_StartCondition	;wreg free
 35927                           
 35928                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 35929  002186  0E00               	movlw	0
 35930  002188  6E31               	movwf	I2c_ReadData@ReadStatus,c
 35931                           
 35932                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 35933  00218A  0E01               	movlw	1
 35934  00218C  D083               	goto	L102
 35935  00218E                     
 35936                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 35937  00218E  0100               	movlb	0	; () banked
 35938  002190  EE20 F001          	lfsr	2,1
 35939  002194  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35940  002196  26D9               	addwf	fsr2l,f,c
 35941  002198  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35942  00219A  22DA               	addwfc	fsr2h,f,c
 35943  00219C  50DF               	movf	indf2,w,c
 35944  00219E  6F82               	movwf	??_I2c_ReadData& (0+255),b
 35945  0021A0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35946  0021A4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35947  0021A8  50DF               	movf	indf2,w,c
 35948  0021AA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 35949  0021AC  90D8               	bcf	status,0,c
 35950  0021AE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 35951  0021B0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 35952  0021B2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35953  0021B6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35954  0021BA  6EDF               	movwf	indf2,c
 35955                           
 35956                           ; BSR set to: 0
 35957                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 35958  0021BC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35959  0021C0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35960  0021C4  50DF               	movf	indf2,w,c
 35961  0021C6  ECCB  F035         	call	_WriteByte
 35962                           
 35963                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 35964  0021CA  0E02               	movlw	2
 35965  0021CC  D063               	goto	L102
 35966  0021CE                     
 35967                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 35968  0021CE  ECD5  F035         	call	_CheckTxStatus	;wreg free
 35969  0021D2  0900               	iorlw	0
 35970  0021D4  A4D8               	btfss	status,2,c
 35971  0021D6  D081               	goto	l194
 35972                           
 35973                           ;i2c_drv.c: 425: {
 35974                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 35975  0021D8  0E03               	movlw	3
 35976  0021DA  D05C               	goto	L102
 35977  0021DC                     
 35978                           ;i2c_drv.c: 433: TentativeCounter++;
 35979  0021DC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 35980                           
 35981                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 35982  0021DE  ECDA  F035         	call	_CheckAckStatus	;wreg free
 35983  0021E2  0900               	iorlw	0
 35984  0021E4  A4D8               	btfss	status,2,c
 35985  0021E6  D004               	goto	l199
 35986                           
 35987                           ;i2c_drv.c: 436: {
 35988                           ;i2c_drv.c: 438: TentativeCounter = 0;
 35989  0021E8  0E00               	movlw	0
 35990  0021EA  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 35991  0021EC                     
 35992                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 35993  0021EC  0E04               	movlw	4
 35994  0021EE  D052               	goto	L102
 35995  0021F0                     l199:
 35996                           
 35997                           ;i2c_drv.c: 442: else
 35998                           ;i2c_drv.c: 443: {
 35999                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 36000  0021F0  0E02               	movlw	2
 36001  0021F2  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 36002  0021F4  D072               	goto	l194
 36003                           
 36004                           ;i2c_drv.c: 446: {
 36005                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 36006  0021F6  0E08               	movlw	8
 36007  0021F8  D04D               	goto	L102
 36008  0021FA                     
 36009                           ;i2c_drv.c: 455: EnableReceiver();
 36010  0021FA  ECEF  F035         	call	_EnableReceiver	;wreg free
 36011                           
 36012                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 36013  0021FE  0E05               	movlw	5
 36014  002200  D049               	goto	L102
 36015  002202                     
 36016                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 36017  002202  ECD5  F035         	call	_CheckTxStatus	;wreg free
 36018  002206  0900               	iorlw	0
 36019  002208  A4D8               	btfss	status,2,c
 36020  00220A  D067               	goto	l194
 36021                           
 36022                           ;i2c_drv.c: 463: {
 36023                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 36024  00220C  0100               	movlb	0	; () banked
 36025  00220E  EE20 F002          	lfsr	2,2
 36026  002212  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36027  002214  26D9               	addwf	fsr2l,f,c
 36028  002216  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36029  002218  22DA               	addwfc	fsr2h,f,c
 36030  00221A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 36031  00221E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 36032  002222  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 36033  002226  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 36034  00222A  ECD0  F035         	call	_ReadByte	;wreg free
 36035  00222E  6EDF               	movwf	indf2,c
 36036                           
 36037                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 36038  002230  0100               	movlb	0	; () banked
 36039  002232  EE20 F002          	lfsr	2,2
 36040  002236  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36041  002238  26D9               	addwf	fsr2l,f,c
 36042  00223A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36043  00223C  22DA               	addwfc	fsr2h,f,c
 36044  00223E  2ADE               	incf	postinc2,f,c
 36045  002240  0E00               	movlw	0
 36046  002242  22DD               	addwfc	postdec2,f,c
 36047                           
 36048                           ; BSR set to: 0
 36049                           ;i2c_drv.c: 469: DataCounter++;
 36050  002244  2A33               	incf	I2c_ReadData@DataCounter,f,c
 36051                           
 36052                           ; BSR set to: 0
 36053                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 36054  002246  0E06               	movlw	6
 36055  002248  D025               	goto	L102
 36056  00224A                     
 36057                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 36058                           
 36059                           ; BSR set to: 0
 36060  00224A  0100               	movlb	0	; () banked
 36061  00224C  EE20 F004          	lfsr	2,4
 36062  002250  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36063  002252  26D9               	addwf	fsr2l,f,c
 36064  002254  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36065  002256  22DA               	addwfc	fsr2h,f,c
 36066  002258  50DE               	movf	postinc2,w,c
 36067  00225A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 36068  00225C  A0D8               	btfss	status,0,c
 36069  00225E  D008               	goto	l206
 36070                           
 36071                           ; BSR set to: 0
 36072                           ;i2c_drv.c: 478: {
 36073                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 36074  002260  0E01               	movlw	1
 36075  002262  EC59  F035         	call	_SetAckStatus
 36076                           
 36077                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 36078  002266  0E07               	movlw	7
 36079  002268  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36080                           
 36081                           ;i2c_drv.c: 484: DataCounter = 0;
 36082  00226A  0E00               	movlw	0
 36083  00226C  6E33               	movwf	I2c_ReadData@DataCounter,c
 36084                           
 36085                           ;i2c_drv.c: 485: }
 36086  00226E  D035               	goto	l194
 36087  002270                     l206:
 36088                           
 36089                           ;i2c_drv.c: 486: else
 36090                           ;i2c_drv.c: 487: {
 36091                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 36092  002270  0E00               	movlw	0
 36093  002272  EC59  F035         	call	_SetAckStatus
 36094  002276  D7BA               	goto	L103
 36095  002278                     
 36096                           ;i2c_drv.c: 497: StopCondition();
 36097  002278  ECEB  F035         	call	_StopCondition	;wreg free
 36098                           
 36099                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 36100  00227C  0E02               	movlw	2
 36101  00227E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36102                           
 36103                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 36104  002280  0E05               	movlw	5
 36105  002282  0100               	movlb	0	; () banked
 36106  002284  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 36107  002286  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 36108  002288  0E00               	movlw	0
 36109  00228A  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36110  00228C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 36111  00228E  EC21  F035         	call	_GenerateEvt	;wreg free
 36112                           
 36113                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 36114  002292  0E00               	movlw	0
 36115  002294                     L102:
 36116  002294  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36117                           
 36118                           ;i2c_drv.c: 504: break;
 36119  002296  D021               	goto	l194
 36120  002298                     
 36121                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 36122  002298  0E00               	movlw	0
 36123  00229A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36124                           
 36125                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 36126  00229C  0E01               	movlw	1
 36127  00229E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36128                           
 36129                           ;i2c_drv.c: 515: }
 36130                           
 36131                           ;i2c_drv.c: 514: break;
 36132                           
 36133                           ;i2c_drv.c: 513: default:
 36134                           
 36135                           ;i2c_drv.c: 511: break;
 36136  0022A0  D01C               	goto	l194
 36137  0022A2                     l192:
 36138  0022A2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 36139                           
 36140                           ; Switch size 1, requested type "space"
 36141                           ; Number of cases is 9, Range of values is 0 to 8
 36142                           ; switch strategies available:
 36143                           ; Name         Instructions Cycles
 36144                           ; simple_byte           28    15 (average)
 36145                           ;	Chosen strategy is simple_byte
 36146  0022A4  0A00               	xorlw	0	; case 0
 36147  0022A6  B4D8               	btfsc	status,2,c
 36148  0022A8  D76C               	goto	l193
 36149  0022AA  0A01               	xorlw	1	; case 1
 36150  0022AC  B4D8               	btfsc	status,2,c
 36151  0022AE  D76F               	goto	l195
 36152  0022B0  0A03               	xorlw	3	; case 2
 36153  0022B2  B4D8               	btfsc	status,2,c
 36154  0022B4  D78C               	goto	l196
 36155  0022B6  0A01               	xorlw	1	; case 3
 36156  0022B8  B4D8               	btfsc	status,2,c
 36157  0022BA  D790               	goto	l198
 36158  0022BC  0A07               	xorlw	7	; case 4
 36159  0022BE  B4D8               	btfsc	status,2,c
 36160  0022C0  D79C               	goto	l202
 36161  0022C2  0A01               	xorlw	1	; case 5
 36162  0022C4  B4D8               	btfsc	status,2,c
 36163  0022C6  D79D               	goto	l203
 36164  0022C8  0A03               	xorlw	3	; case 6
 36165  0022CA  B4D8               	btfsc	status,2,c
 36166  0022CC  D7BE               	goto	l205
 36167  0022CE  0A01               	xorlw	1	; case 7
 36168  0022D0  B4D8               	btfsc	status,2,c
 36169  0022D2  D7D2               	goto	l208
 36170  0022D4  0A0F               	xorlw	15	; case 8
 36171  0022D6  B4D8               	btfsc	status,2,c
 36172  0022D8  D7DF               	goto	l209
 36173  0022DA                     l194:
 36174                           
 36175                           ;i2c_drv.c: 518: return ReadStatus;
 36176  0022DA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 36177  0022DC  0012               	return	
 36178  0022DE                     __end_of_I2c_ReadData:
 36179                           	opt stack 0
 36180                           tosu	equ	0xFFF
 36181                           tosh	equ	0xFFE
 36182                           tosl	equ	0xFFD
 36183                           pclath	equ	0xFFA
 36184                           tblptru	equ	0xFF8
 36185                           tblptrh	equ	0xFF7
 36186                           tblptrl	equ	0xFF6
 36187                           tablat	equ	0xFF5
 36188                           prodh	equ	0xFF4
 36189                           prodl	equ	0xFF3
 36190                           intcon	equ	0xFF2
 36191                           intcon2	equ	0xFF1
 36192                           intcon3	equ	0xFF0
 36193                           indf0	equ	0xFEF
 36194                           postinc0	equ	0xFEE
 36195                           plusw0	equ	0xFEB
 36196                           fsr0h	equ	0xFEA
 36197                           fsr0l	equ	0xFE9
 36198                           wreg	equ	0xFE8
 36199                           indf1	equ	0xFE7
 36200                           postinc1	equ	0xFE6
 36201                           postdec1	equ	0xFE5
 36202                           plusw1	equ	0xFE3
 36203                           fsr1h	equ	0xFE2
 36204                           fsr1l	equ	0xFE1
 36205                           indf2	equ	0xFDF
 36206                           postinc2	equ	0xFDE
 36207                           postdec2	equ	0xFDD
 36208                           plusw2	equ	0xFDB
 36209                           fsr2h	equ	0xFDA
 36210                           fsr2l	equ	0xFD9
 36211                           status	equ	0xFD8
 36212                           
 36213 ;; *************** function _WriteByte *****************
 36214 ;; Defined at:
 36215 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36216 ;; Parameters:    Size  Location     Type
 36217 ;;  Byte            1    wreg     unsigned char 
 36218 ;; Auto vars:     Size  Location     Type
 36219 ;;  Byte            1   29[BANK0 ] unsigned char 
 36220 ;; Return value:  Size  Location     Type
 36221 ;;                  1    wreg      void 
 36222 ;; Registers used:
 36223 ;;		wreg
 36224 ;; Tracked objects:
 36225 ;;		On entry : 0/0
 36226 ;;		On exit  : 0/0
 36227 ;;		Unchanged: 0/0
 36228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36232 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36233 ;;Total ram usage:        1 bytes
 36234 ;; Hardware stack levels used:    1
 36235 ;; Hardware stack levels required when called:   11
 36236 ;; This function calls:
 36237 ;;		Nothing
 36238 ;; This function is called by:
 36239 ;;		_I2c_WriteData
 36240 ;;		_I2c_ReadData
 36241 ;; This function uses a non-reentrant model
 36242 ;;
 36243                           
 36244                           	psect	text169
 36245  006B96                     __ptext169:
 36246                           	opt stack 0
 36247  006B96                     _WriteByte:
 36248                           	opt stack 14
 36249                           
 36250                           ;incstack = 0
 36251                           ;WriteByte@Byte stored from wreg
 36252  006B96  0100               	movlb	0	; () banked
 36253  006B98  6F7D               	movwf	WriteByte@Byte& (0+255),b
 36254                           
 36255                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 36256  006B9A  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 36257  006B9E  0012               	return		;funcret
 36258  006BA0                     __end_of_WriteByte:
 36259                           	opt stack 0
 36260                           tosu	equ	0xFFF
 36261                           tosh	equ	0xFFE
 36262                           tosl	equ	0xFFD
 36263                           pclath	equ	0xFFA
 36264                           tblptru	equ	0xFF8
 36265                           tblptrh	equ	0xFF7
 36266                           tblptrl	equ	0xFF6
 36267                           tablat	equ	0xFF5
 36268                           prodh	equ	0xFF4
 36269                           prodl	equ	0xFF3
 36270                           intcon	equ	0xFF2
 36271                           intcon2	equ	0xFF1
 36272                           intcon3	equ	0xFF0
 36273                           indf0	equ	0xFEF
 36274                           postinc0	equ	0xFEE
 36275                           plusw0	equ	0xFEB
 36276                           fsr0h	equ	0xFEA
 36277                           fsr0l	equ	0xFE9
 36278                           wreg	equ	0xFE8
 36279                           indf1	equ	0xFE7
 36280                           postinc1	equ	0xFE6
 36281                           postdec1	equ	0xFE5
 36282                           plusw1	equ	0xFE3
 36283                           fsr1h	equ	0xFE2
 36284                           fsr1l	equ	0xFE1
 36285                           indf2	equ	0xFDF
 36286                           postinc2	equ	0xFDE
 36287                           postdec2	equ	0xFDD
 36288                           plusw2	equ	0xFDB
 36289                           fsr2h	equ	0xFDA
 36290                           fsr2l	equ	0xFD9
 36291                           status	equ	0xFD8
 36292                           
 36293 ;; *************** function _StopCondition *****************
 36294 ;; Defined at:
 36295 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36296 ;; Parameters:    Size  Location     Type
 36297 ;;		None
 36298 ;; Auto vars:     Size  Location     Type
 36299 ;;		None
 36300 ;; Return value:  Size  Location     Type
 36301 ;;                  1    wreg      void 
 36302 ;; Registers used:
 36303 ;;		status,2, status,0
 36304 ;; Tracked objects:
 36305 ;;		On entry : 0/0
 36306 ;;		On exit  : 0/0
 36307 ;;		Unchanged: 0/0
 36308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36313 ;;Total ram usage:        0 bytes
 36314 ;; Hardware stack levels used:    1
 36315 ;; Hardware stack levels required when called:   11
 36316 ;; This function calls:
 36317 ;;		Nothing
 36318 ;; This function is called by:
 36319 ;;		_I2c_WriteData
 36320 ;;		_I2c_ReadData
 36321 ;; This function uses a non-reentrant model
 36322 ;;
 36323                           
 36324                           	psect	text170
 36325  006BD6                     __ptext170:
 36326                           	opt stack 0
 36327  006BD6                     _StopCondition:
 36328                           	opt stack 14
 36329                           
 36330                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 36331                           
 36332                           ;incstack = 0
 36333  006BD6  8471               	bsf	3953,2,c	;volatile
 36334  006BD8  0012               	return		;funcret
 36335  006BDA                     __end_of_StopCondition:
 36336                           	opt stack 0
 36337                           tosu	equ	0xFFF
 36338                           tosh	equ	0xFFE
 36339                           tosl	equ	0xFFD
 36340                           pclath	equ	0xFFA
 36341                           tblptru	equ	0xFF8
 36342                           tblptrh	equ	0xFF7
 36343                           tblptrl	equ	0xFF6
 36344                           tablat	equ	0xFF5
 36345                           prodh	equ	0xFF4
 36346                           prodl	equ	0xFF3
 36347                           intcon	equ	0xFF2
 36348                           intcon2	equ	0xFF1
 36349                           intcon3	equ	0xFF0
 36350                           indf0	equ	0xFEF
 36351                           postinc0	equ	0xFEE
 36352                           plusw0	equ	0xFEB
 36353                           fsr0h	equ	0xFEA
 36354                           fsr0l	equ	0xFE9
 36355                           wreg	equ	0xFE8
 36356                           indf1	equ	0xFE7
 36357                           postinc1	equ	0xFE6
 36358                           postdec1	equ	0xFE5
 36359                           plusw1	equ	0xFE3
 36360                           fsr1h	equ	0xFE2
 36361                           fsr1l	equ	0xFE1
 36362                           indf2	equ	0xFDF
 36363                           postinc2	equ	0xFDE
 36364                           postdec2	equ	0xFDD
 36365                           plusw2	equ	0xFDB
 36366                           fsr2h	equ	0xFDA
 36367                           fsr2l	equ	0xFD9
 36368                           status	equ	0xFD8
 36369                           
 36370 ;; *************** function _StartCondition *****************
 36371 ;; Defined at:
 36372 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36373 ;; Parameters:    Size  Location     Type
 36374 ;;		None
 36375 ;; Auto vars:     Size  Location     Type
 36376 ;;		None
 36377 ;; Return value:  Size  Location     Type
 36378 ;;                  1    wreg      void 
 36379 ;; Registers used:
 36380 ;;		status,2, status,0
 36381 ;; Tracked objects:
 36382 ;;		On entry : 0/0
 36383 ;;		On exit  : 0/0
 36384 ;;		Unchanged: 0/0
 36385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36390 ;;Total ram usage:        0 bytes
 36391 ;; Hardware stack levels used:    1
 36392 ;; Hardware stack levels required when called:   11
 36393 ;; This function calls:
 36394 ;;		Nothing
 36395 ;; This function is called by:
 36396 ;;		_I2c_WriteData
 36397 ;;		_I2c_ReadData
 36398 ;; This function uses a non-reentrant model
 36399 ;;
 36400                           
 36401                           	psect	text171
 36402  006BDA                     __ptext171:
 36403                           	opt stack 0
 36404  006BDA                     _StartCondition:
 36405                           	opt stack 14
 36406                           
 36407                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 36408                           
 36409                           ;incstack = 0
 36410  006BDA  8071               	bsf	3953,0,c	;volatile
 36411  006BDC  0012               	return		;funcret
 36412  006BDE                     __end_of_StartCondition:
 36413                           	opt stack 0
 36414                           tosu	equ	0xFFF
 36415                           tosh	equ	0xFFE
 36416                           tosl	equ	0xFFD
 36417                           pclath	equ	0xFFA
 36418                           tblptru	equ	0xFF8
 36419                           tblptrh	equ	0xFF7
 36420                           tblptrl	equ	0xFF6
 36421                           tablat	equ	0xFF5
 36422                           prodh	equ	0xFF4
 36423                           prodl	equ	0xFF3
 36424                           intcon	equ	0xFF2
 36425                           intcon2	equ	0xFF1
 36426                           intcon3	equ	0xFF0
 36427                           indf0	equ	0xFEF
 36428                           postinc0	equ	0xFEE
 36429                           plusw0	equ	0xFEB
 36430                           fsr0h	equ	0xFEA
 36431                           fsr0l	equ	0xFE9
 36432                           wreg	equ	0xFE8
 36433                           indf1	equ	0xFE7
 36434                           postinc1	equ	0xFE6
 36435                           postdec1	equ	0xFE5
 36436                           plusw1	equ	0xFE3
 36437                           fsr1h	equ	0xFE2
 36438                           fsr1l	equ	0xFE1
 36439                           indf2	equ	0xFDF
 36440                           postinc2	equ	0xFDE
 36441                           postdec2	equ	0xFDD
 36442                           plusw2	equ	0xFDB
 36443                           fsr2h	equ	0xFDA
 36444                           fsr2l	equ	0xFD9
 36445                           status	equ	0xFD8
 36446                           
 36447 ;; *************** function _SetAckStatus *****************
 36448 ;; Defined at:
 36449 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36450 ;; Parameters:    Size  Location     Type
 36451 ;;  AckSts          1    wreg     unsigned char 
 36452 ;; Auto vars:     Size  Location     Type
 36453 ;;  AckSts          1   29[BANK0 ] unsigned char 
 36454 ;; Return value:  Size  Location     Type
 36455 ;;                  1    wreg      void 
 36456 ;; Registers used:
 36457 ;;		wreg
 36458 ;; Tracked objects:
 36459 ;;		On entry : 0/0
 36460 ;;		On exit  : 0/0
 36461 ;;		Unchanged: 0/0
 36462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36466 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36467 ;;Total ram usage:        1 bytes
 36468 ;; Hardware stack levels used:    1
 36469 ;; Hardware stack levels required when called:   11
 36470 ;; This function calls:
 36471 ;;		Nothing
 36472 ;; This function is called by:
 36473 ;;		_I2c_ReadData
 36474 ;; This function uses a non-reentrant model
 36475 ;;
 36476                           
 36477                           	psect	text172
 36478  006AB2                     __ptext172:
 36479                           	opt stack 0
 36480  006AB2                     _SetAckStatus:
 36481                           	opt stack 14
 36482                           
 36483                           ;incstack = 0
 36484                           ;SetAckStatus@AckSts stored from wreg
 36485  006AB2  0100               	movlb	0	; () banked
 36486  006AB4  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 36487                           
 36488                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 36489  006AB6  0100               	movlb	0	; () banked
 36490  006AB8  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 36491  006ABA  D002               	bra	u12715
 36492  006ABC  9A71               	bcf	3953,5,c	;volatile
 36493  006ABE  D001               	bra	u12716
 36494  006AC0                     u12715:
 36495  006AC0  8A71               	bsf	3953,5,c	;volatile
 36496  006AC2                     u12716:
 36497                           
 36498                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 36499  006AC2  8871               	bsf	3953,4,c	;volatile
 36500  006AC4  0012               	return		;funcret
 36501  006AC6                     __end_of_SetAckStatus:
 36502                           	opt stack 0
 36503                           tosu	equ	0xFFF
 36504                           tosh	equ	0xFFE
 36505                           tosl	equ	0xFFD
 36506                           pclath	equ	0xFFA
 36507                           tblptru	equ	0xFF8
 36508                           tblptrh	equ	0xFF7
 36509                           tblptrl	equ	0xFF6
 36510                           tablat	equ	0xFF5
 36511                           prodh	equ	0xFF4
 36512                           prodl	equ	0xFF3
 36513                           intcon	equ	0xFF2
 36514                           intcon2	equ	0xFF1
 36515                           intcon3	equ	0xFF0
 36516                           indf0	equ	0xFEF
 36517                           postinc0	equ	0xFEE
 36518                           plusw0	equ	0xFEB
 36519                           fsr0h	equ	0xFEA
 36520                           fsr0l	equ	0xFE9
 36521                           wreg	equ	0xFE8
 36522                           indf1	equ	0xFE7
 36523                           postinc1	equ	0xFE6
 36524                           postdec1	equ	0xFE5
 36525                           plusw1	equ	0xFE3
 36526                           fsr1h	equ	0xFE2
 36527                           fsr1l	equ	0xFE1
 36528                           indf2	equ	0xFDF
 36529                           postinc2	equ	0xFDE
 36530                           postdec2	equ	0xFDD
 36531                           plusw2	equ	0xFDB
 36532                           fsr2h	equ	0xFDA
 36533                           fsr2l	equ	0xFD9
 36534                           status	equ	0xFD8
 36535                           
 36536 ;; *************** function _ReadByte *****************
 36537 ;; Defined at:
 36538 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36539 ;; Parameters:    Size  Location     Type
 36540 ;;		None
 36541 ;; Auto vars:     Size  Location     Type
 36542 ;;  Byte            1   29[BANK0 ] unsigned char 
 36543 ;; Return value:  Size  Location     Type
 36544 ;;                  1    wreg      unsigned char 
 36545 ;; Registers used:
 36546 ;;		wreg, status,2
 36547 ;; Tracked objects:
 36548 ;;		On entry : 0/0
 36549 ;;		On exit  : 0/0
 36550 ;;		Unchanged: 0/0
 36551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36556 ;;Total ram usage:        1 bytes
 36557 ;; Hardware stack levels used:    1
 36558 ;; Hardware stack levels required when called:   11
 36559 ;; This function calls:
 36560 ;;		Nothing
 36561 ;; This function is called by:
 36562 ;;		_I2c_ReadData
 36563 ;; This function uses a non-reentrant model
 36564 ;;
 36565                           
 36566                           	psect	text173
 36567  006BA0                     __ptext173:
 36568                           	opt stack 0
 36569  006BA0                     _ReadByte:
 36570                           	opt stack 14
 36571                           
 36572                           ;i2c_drv.c: 207: UINT8 Byte;
 36573                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 36574                           
 36575                           ;incstack = 0
 36576  006BA0  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 36577                           
 36578                           ;i2c_drv.c: 213: return Byte;
 36579  006BA4  0100               	movlb	0	; () banked
 36580  006BA6  517D               	movf	ReadByte@Byte& (0+255),w,b
 36581  006BA8  0012               	return	
 36582  006BAA                     __end_of_ReadByte:
 36583                           	opt stack 0
 36584                           tosu	equ	0xFFF
 36585                           tosh	equ	0xFFE
 36586                           tosl	equ	0xFFD
 36587                           pclath	equ	0xFFA
 36588                           tblptru	equ	0xFF8
 36589                           tblptrh	equ	0xFF7
 36590                           tblptrl	equ	0xFF6
 36591                           tablat	equ	0xFF5
 36592                           prodh	equ	0xFF4
 36593                           prodl	equ	0xFF3
 36594                           intcon	equ	0xFF2
 36595                           intcon2	equ	0xFF1
 36596                           intcon3	equ	0xFF0
 36597                           indf0	equ	0xFEF
 36598                           postinc0	equ	0xFEE
 36599                           plusw0	equ	0xFEB
 36600                           fsr0h	equ	0xFEA
 36601                           fsr0l	equ	0xFE9
 36602                           wreg	equ	0xFE8
 36603                           indf1	equ	0xFE7
 36604                           postinc1	equ	0xFE6
 36605                           postdec1	equ	0xFE5
 36606                           plusw1	equ	0xFE3
 36607                           fsr1h	equ	0xFE2
 36608                           fsr1l	equ	0xFE1
 36609                           indf2	equ	0xFDF
 36610                           postinc2	equ	0xFDE
 36611                           postdec2	equ	0xFDD
 36612                           plusw2	equ	0xFDB
 36613                           fsr2h	equ	0xFDA
 36614                           fsr2l	equ	0xFD9
 36615                           status	equ	0xFD8
 36616                           
 36617 ;; *************** function _GenerateEvt *****************
 36618 ;; Defined at:
 36619 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36620 ;; Parameters:    Size  Location     Type
 36621 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36622 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36623 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36624 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36625 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36626 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36627 ;; Auto vars:     Size  Location     Type
 36628 ;;  EventStatus     1   31[BANK0 ] enum E7727
 36629 ;; Return value:  Size  Location     Type
 36630 ;;                  1    wreg      enum E7699
 36631 ;; Registers used:
 36632 ;;		wreg, fsr2l, fsr2h, status,2
 36633 ;; Tracked objects:
 36634 ;;		On entry : 0/0
 36635 ;;		On exit  : 0/0
 36636 ;;		Unchanged: 0/0
 36637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36641 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36642 ;;Total ram usage:        3 bytes
 36643 ;; Hardware stack levels used:    1
 36644 ;; Hardware stack levels required when called:   11
 36645 ;; This function calls:
 36646 ;;		Nothing
 36647 ;; This function is called by:
 36648 ;;		_I2c_ReadData
 36649 ;;		_CheckModem
 36650 ;;		_TurnOnModem
 36651 ;;		_ConfigureModem
 36652 ;;		_ModemEvtParser
 36653 ;;		_GetSmsSm
 36654 ;;		_Mdm_RequestSmsData
 36655 ;;		_I2cSlv_SendI2cMsg
 36656 ;;		_I2cSlv_ReceiveI2cMsg
 36657 ;;		_RiSm
 36658 ;;		_Mdm_SendSmsData
 36659 ;;		_MdmHttp_InitGprsNetwork
 36660 ;;		_MdmHttp_GetMethod
 36661 ;;		_Alarm
 36662 ;; This function uses a non-reentrant model
 36663 ;;
 36664                           
 36665                           	psect	text174
 36666  006A42                     __ptext174:
 36667                           	opt stack 0
 36668  006A42                     _GenerateEvt:
 36669                           	opt stack 13
 36670                           
 36671                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36672                           
 36673                           ; BSR set to: 0
 36674                           ;incstack = 0
 36675  006A42  0E00               	movlw	0
 36676  006A44  0100               	movlb	0	; () banked
 36677  006A46  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36678                           
 36679                           ; BSR set to: 0
 36680                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36681  006A48  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 36682  006A4C  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 36683  006A50  0E02               	movlw	2
 36684  006A52  6EDF               	movwf	indf2,c
 36685                           
 36686                           ; BSR set to: 0
 36687                           ;os_ser.c: 83: EventStatus = EventSent;
 36688  006A54  0E02               	movlw	2
 36689  006A56  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36690  006A58  0012               	return	
 36691  006A5A                     __end_of_GenerateEvt:
 36692                           	opt stack 0
 36693                           tosu	equ	0xFFF
 36694                           tosh	equ	0xFFE
 36695                           tosl	equ	0xFFD
 36696                           pclath	equ	0xFFA
 36697                           tblptru	equ	0xFF8
 36698                           tblptrh	equ	0xFF7
 36699                           tblptrl	equ	0xFF6
 36700                           tablat	equ	0xFF5
 36701                           prodh	equ	0xFF4
 36702                           prodl	equ	0xFF3
 36703                           intcon	equ	0xFF2
 36704                           intcon2	equ	0xFF1
 36705                           intcon3	equ	0xFF0
 36706                           indf0	equ	0xFEF
 36707                           postinc0	equ	0xFEE
 36708                           plusw0	equ	0xFEB
 36709                           fsr0h	equ	0xFEA
 36710                           fsr0l	equ	0xFE9
 36711                           wreg	equ	0xFE8
 36712                           indf1	equ	0xFE7
 36713                           postinc1	equ	0xFE6
 36714                           postdec1	equ	0xFE5
 36715                           plusw1	equ	0xFE3
 36716                           fsr1h	equ	0xFE2
 36717                           fsr1l	equ	0xFE1
 36718                           indf2	equ	0xFDF
 36719                           postinc2	equ	0xFDE
 36720                           postdec2	equ	0xFDD
 36721                           plusw2	equ	0xFDB
 36722                           fsr2h	equ	0xFDA
 36723                           fsr2l	equ	0xFD9
 36724                           status	equ	0xFD8
 36725                           
 36726 ;; *************** function _EnableReceiver *****************
 36727 ;; Defined at:
 36728 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36729 ;; Parameters:    Size  Location     Type
 36730 ;;		None
 36731 ;; Auto vars:     Size  Location     Type
 36732 ;;		None
 36733 ;; Return value:  Size  Location     Type
 36734 ;;                  1    wreg      void 
 36735 ;; Registers used:
 36736 ;;		status,2, status,0
 36737 ;; Tracked objects:
 36738 ;;		On entry : 0/0
 36739 ;;		On exit  : 0/0
 36740 ;;		Unchanged: 0/0
 36741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36746 ;;Total ram usage:        0 bytes
 36747 ;; Hardware stack levels used:    1
 36748 ;; Hardware stack levels required when called:   11
 36749 ;; This function calls:
 36750 ;;		Nothing
 36751 ;; This function is called by:
 36752 ;;		_I2c_ReadData
 36753 ;; This function uses a non-reentrant model
 36754 ;;
 36755                           
 36756                           	psect	text175
 36757  006BDE                     __ptext175:
 36758                           	opt stack 0
 36759  006BDE                     _EnableReceiver:
 36760                           	opt stack 14
 36761                           
 36762                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 36763                           
 36764                           ; BSR set to: 0
 36765                           ;incstack = 0
 36766  006BDE  8671               	bsf	3953,3,c	;volatile
 36767  006BE0  0012               	return		;funcret
 36768  006BE2                     __end_of_EnableReceiver:
 36769                           	opt stack 0
 36770                           tosu	equ	0xFFF
 36771                           tosh	equ	0xFFE
 36772                           tosl	equ	0xFFD
 36773                           pclath	equ	0xFFA
 36774                           tblptru	equ	0xFF8
 36775                           tblptrh	equ	0xFF7
 36776                           tblptrl	equ	0xFF6
 36777                           tablat	equ	0xFF5
 36778                           prodh	equ	0xFF4
 36779                           prodl	equ	0xFF3
 36780                           intcon	equ	0xFF2
 36781                           intcon2	equ	0xFF1
 36782                           intcon3	equ	0xFF0
 36783                           indf0	equ	0xFEF
 36784                           postinc0	equ	0xFEE
 36785                           plusw0	equ	0xFEB
 36786                           fsr0h	equ	0xFEA
 36787                           fsr0l	equ	0xFE9
 36788                           wreg	equ	0xFE8
 36789                           indf1	equ	0xFE7
 36790                           postinc1	equ	0xFE6
 36791                           postdec1	equ	0xFE5
 36792                           plusw1	equ	0xFE3
 36793                           fsr1h	equ	0xFE2
 36794                           fsr1l	equ	0xFE1
 36795                           indf2	equ	0xFDF
 36796                           postinc2	equ	0xFDE
 36797                           postdec2	equ	0xFDD
 36798                           plusw2	equ	0xFDB
 36799                           fsr2h	equ	0xFDA
 36800                           fsr2l	equ	0xFD9
 36801                           status	equ	0xFD8
 36802                           
 36803 ;; *************** function _CheckTxStatus *****************
 36804 ;; Defined at:
 36805 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36806 ;; Parameters:    Size  Location     Type
 36807 ;;		None
 36808 ;; Auto vars:     Size  Location     Type
 36809 ;;		None
 36810 ;; Return value:  Size  Location     Type
 36811 ;;                  1    wreg      unsigned char 
 36812 ;; Registers used:
 36813 ;;		wreg, status,2, status,0
 36814 ;; Tracked objects:
 36815 ;;		On entry : 0/0
 36816 ;;		On exit  : 0/0
 36817 ;;		Unchanged: 0/0
 36818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36823 ;;Total ram usage:        0 bytes
 36824 ;; Hardware stack levels used:    1
 36825 ;; Hardware stack levels required when called:   11
 36826 ;; This function calls:
 36827 ;;		Nothing
 36828 ;; This function is called by:
 36829 ;;		_I2c_WriteData
 36830 ;;		_I2c_ReadData
 36831 ;; This function uses a non-reentrant model
 36832 ;;
 36833                           
 36834                           	psect	text176
 36835  006BAA                     __ptext176:
 36836                           	opt stack 0
 36837  006BAA                     _CheckTxStatus:
 36838                           	opt stack 14
 36839                           
 36840                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 36841                           
 36842                           ;incstack = 0
 36843  006BAA  4073               	rrncf	3955,w,c	;volatile
 36844  006BAC  42E8               	rrncf	wreg,f,c
 36845  006BAE  0B3F               	andlw	63
 36846  006BB0  0B01               	andlw	1
 36847  006BB2  0012               	return	
 36848  006BB4                     __end_of_CheckTxStatus:
 36849                           	opt stack 0
 36850                           tosu	equ	0xFFF
 36851                           tosh	equ	0xFFE
 36852                           tosl	equ	0xFFD
 36853                           pclath	equ	0xFFA
 36854                           tblptru	equ	0xFF8
 36855                           tblptrh	equ	0xFF7
 36856                           tblptrl	equ	0xFF6
 36857                           tablat	equ	0xFF5
 36858                           prodh	equ	0xFF4
 36859                           prodl	equ	0xFF3
 36860                           intcon	equ	0xFF2
 36861                           intcon2	equ	0xFF1
 36862                           intcon3	equ	0xFF0
 36863                           indf0	equ	0xFEF
 36864                           postinc0	equ	0xFEE
 36865                           plusw0	equ	0xFEB
 36866                           fsr0h	equ	0xFEA
 36867                           fsr0l	equ	0xFE9
 36868                           wreg	equ	0xFE8
 36869                           indf1	equ	0xFE7
 36870                           postinc1	equ	0xFE6
 36871                           postdec1	equ	0xFE5
 36872                           plusw1	equ	0xFE3
 36873                           fsr1h	equ	0xFE2
 36874                           fsr1l	equ	0xFE1
 36875                           indf2	equ	0xFDF
 36876                           postinc2	equ	0xFDE
 36877                           postdec2	equ	0xFDD
 36878                           plusw2	equ	0xFDB
 36879                           fsr2h	equ	0xFDA
 36880                           fsr2l	equ	0xFD9
 36881                           status	equ	0xFD8
 36882                           
 36883 ;; *************** function _CheckAckStatus *****************
 36884 ;; Defined at:
 36885 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36886 ;; Parameters:    Size  Location     Type
 36887 ;;		None
 36888 ;; Auto vars:     Size  Location     Type
 36889 ;;		None
 36890 ;; Return value:  Size  Location     Type
 36891 ;;                  1    wreg      unsigned char 
 36892 ;; Registers used:
 36893 ;;		wreg, status,2, status,0
 36894 ;; Tracked objects:
 36895 ;;		On entry : 0/0
 36896 ;;		On exit  : 0/0
 36897 ;;		Unchanged: 0/0
 36898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36903 ;;Total ram usage:        0 bytes
 36904 ;; Hardware stack levels used:    1
 36905 ;; Hardware stack levels required when called:   11
 36906 ;; This function calls:
 36907 ;;		Nothing
 36908 ;; This function is called by:
 36909 ;;		_I2c_WriteData
 36910 ;;		_I2c_ReadData
 36911 ;; This function uses a non-reentrant model
 36912 ;;
 36913                           
 36914                           	psect	text177
 36915  006BB4                     __ptext177:
 36916                           	opt stack 0
 36917  006BB4                     _CheckAckStatus:
 36918                           	opt stack 14
 36919                           
 36920                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 36921                           
 36922                           ;incstack = 0
 36923  006BB4  4471               	rlncf	3953,w,c	;volatile
 36924  006BB6  46E8               	rlncf	wreg,f,c
 36925  006BB8  0B03               	andlw	3
 36926  006BBA  0B01               	andlw	1
 36927  006BBC  0012               	return	
 36928  006BBE                     __end_of_CheckAckStatus:
 36929                           	opt stack 0
 36930                           tosu	equ	0xFFF
 36931                           tosh	equ	0xFFE
 36932                           tosl	equ	0xFFD
 36933                           pclath	equ	0xFFA
 36934                           tblptru	equ	0xFF8
 36935                           tblptrh	equ	0xFF7
 36936                           tblptrl	equ	0xFF6
 36937                           tablat	equ	0xFF5
 36938                           prodh	equ	0xFF4
 36939                           prodl	equ	0xFF3
 36940                           intcon	equ	0xFF2
 36941                           intcon2	equ	0xFF1
 36942                           intcon3	equ	0xFF0
 36943                           indf0	equ	0xFEF
 36944                           postinc0	equ	0xFEE
 36945                           plusw0	equ	0xFEB
 36946                           fsr0h	equ	0xFEA
 36947                           fsr0l	equ	0xFE9
 36948                           wreg	equ	0xFE8
 36949                           indf1	equ	0xFE7
 36950                           postinc1	equ	0xFE6
 36951                           postdec1	equ	0xFE5
 36952                           plusw1	equ	0xFE3
 36953                           fsr1h	equ	0xFE2
 36954                           fsr1l	equ	0xFE1
 36955                           indf2	equ	0xFDF
 36956                           postinc2	equ	0xFDE
 36957                           postdec2	equ	0xFDD
 36958                           plusw2	equ	0xFDB
 36959                           fsr2h	equ	0xFDA
 36960                           fsr2l	equ	0xFD9
 36961                           status	equ	0xFD8
 36962                           
 36963 ;; *************** function _LowPriorityIsr *****************
 36964 ;; Defined at:
 36965 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36966 ;; Parameters:    Size  Location     Type
 36967 ;;		None
 36968 ;; Auto vars:     Size  Location     Type
 36969 ;;		None
 36970 ;; Return value:  Size  Location     Type
 36971 ;;                  1    wreg      void 
 36972 ;; Registers used:
 36973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36974 ;; Tracked objects:
 36975 ;;		On entry : 0/0
 36976 ;;		On exit  : 0/0
 36977 ;;		Unchanged: 0/0
 36978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36981 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36982 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36983 ;;Total ram usage:       21 bytes
 36984 ;; Hardware stack levels used:    1
 36985 ;; Hardware stack levels required when called:   10
 36986 ;; This function calls:
 36987 ;;		_Tmr_Tmr2Isr
 36988 ;; This function is called by:
 36989 ;;		Interrupt level 1
 36990 ;; This function uses a non-reentrant model
 36991 ;;
 36992                           
 36993                           	psect	intcodelo
 36994  000018                     __pintcodelo:
 36995                           	opt stack 0
 36996  000018                     _LowPriorityIsr:
 36997                           	opt stack 8
 36998                           
 36999                           ;incstack = 0
 37000  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 37001  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 37002  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 37003  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 37004  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 37005  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 37006  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 37007  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 37008  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 37009  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 37010  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 37011  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 37012  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 37013  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 37014  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 37015  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 37016  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 37017  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 37018  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 37019  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 37020  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 37021  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 37022                           
 37023                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 37024  00006E  B29E               	btfsc	3998,1,c	;volatile
 37025                           
 37026                           ;irq.c: 259: {
 37027                           ;irq.c: 261: Tmr_Tmr2Isr();
 37028  000070  ECE4  F033         	call	_Tmr_Tmr2Isr	;wreg free
 37029  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 37030  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 37031  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 37032  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 37033  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 37034  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 37035  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 37036  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 37037  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 37038  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 37039  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 37040  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 37041  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 37042  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 37043  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 37044  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 37045  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 37046  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 37047  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 37048  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 37049  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 37050  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 37051  0000CA  0010               	retfie	
 37052  0000CC                     __end_of_LowPriorityIsr:
 37053                           	opt stack 0
 37054                           tosu	equ	0xFFF
 37055                           tosh	equ	0xFFE
 37056                           tosl	equ	0xFFD
 37057                           pclatu	equ	0xFFB
 37058                           pclath	equ	0xFFA
 37059                           tblptru	equ	0xFF8
 37060                           tblptrh	equ	0xFF7
 37061                           tblptrl	equ	0xFF6
 37062                           tablat	equ	0xFF5
 37063                           prodh	equ	0xFF4
 37064                           prodl	equ	0xFF3
 37065                           intcon	equ	0xFF2
 37066                           intcon2	equ	0xFF1
 37067                           intcon3	equ	0xFF0
 37068                           indf0	equ	0xFEF
 37069                           postinc0	equ	0xFEE
 37070                           plusw0	equ	0xFEB
 37071                           fsr0h	equ	0xFEA
 37072                           fsr0l	equ	0xFE9
 37073                           wreg	equ	0xFE8
 37074                           indf1	equ	0xFE7
 37075                           postinc1	equ	0xFE6
 37076                           postdec1	equ	0xFE5
 37077                           plusw1	equ	0xFE3
 37078                           fsr1h	equ	0xFE2
 37079                           fsr1l	equ	0xFE1
 37080                           bsr	equ	0xFE0
 37081                           indf2	equ	0xFDF
 37082                           postinc2	equ	0xFDE
 37083                           postdec2	equ	0xFDD
 37084                           plusw2	equ	0xFDB
 37085                           fsr2h	equ	0xFDA
 37086                           fsr2l	equ	0xFD9
 37087                           status	equ	0xFD8
 37088                           
 37089 ;; *************** function _Tmr_Tmr2Isr *****************
 37090 ;; Defined at:
 37091 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 37092 ;; Parameters:    Size  Location     Type
 37093 ;;		None
 37094 ;; Auto vars:     Size  Location     Type
 37095 ;;		None
 37096 ;; Return value:  Size  Location     Type
 37097 ;;                  1    wreg      void 
 37098 ;; Registers used:
 37099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37100 ;; Tracked objects:
 37101 ;;		On entry : 0/0
 37102 ;;		On exit  : 0/0
 37103 ;;		Unchanged: 0/0
 37104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37109 ;;Total ram usage:        0 bytes
 37110 ;; Hardware stack levels used:    1
 37111 ;; Hardware stack levels required when called:    9
 37112 ;; This function calls:
 37113 ;;		Absolute function
 37114 ;;		_Sch_SchmIntService
 37115 ;; This function is called by:
 37116 ;;		_LowPriorityIsr
 37117 ;; This function uses a non-reentrant model
 37118 ;;
 37119                           
 37120                           	psect	text179
 37121  0067C8                     __ptext179:
 37122                           	opt stack 0
 37123  0067C8                     _Tmr_Tmr2Isr:
 37124                           	opt stack 8
 37125                           
 37126                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 37127                           
 37128                           ;incstack = 0
 37129  0067C8  929E               	bcf	3998,1,c	;volatile
 37130                           
 37131                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 37132  0067CA  0102               	movlb	2	; () banked
 37133  0067CC  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 37134  0067CE  11E9               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37135  0067D0  B4D8               	btfsc	status,2,c
 37136  0067D2  0012               	return	
 37137                           
 37138                           ; BSR set to: 2
 37139                           ;tmr_drv.c: 315: {
 37140                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 37141  0067D4  D801               	call	i1u1656_28
 37142  0067D6  0012               	return	
 37143  0067D8                     i1u1656_28:
 37144  0067D8  0005               	push	
 37145  0067DA  6EFA               	movwf	pclath,c
 37146  0067DC  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 37147  0067DE  6EFD               	movwf	tosl,c
 37148  0067E0  51E9               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37149  0067E2  6EFE               	movwf	tosh,c
 37150  0067E4  50F8               	movf	tblptru,w,c
 37151  0067E6  6EFF               	movwf	tosu,c
 37152  0067E8  50FA               	movf	pclath,w,c
 37153  0067EA  0012               	return		;indir
 37154  0067EC                     __end_of_Tmr_Tmr2Isr:
 37155                           	opt stack 0
 37156                           tosu	equ	0xFFF
 37157                           tosh	equ	0xFFE
 37158                           tosl	equ	0xFFD
 37159                           pclatu	equ	0xFFB
 37160                           pclath	equ	0xFFA
 37161                           tblptru	equ	0xFF8
 37162                           tblptrh	equ	0xFF7
 37163                           tblptrl	equ	0xFF6
 37164                           tablat	equ	0xFF5
 37165                           prodh	equ	0xFF4
 37166                           prodl	equ	0xFF3
 37167                           intcon	equ	0xFF2
 37168                           intcon2	equ	0xFF1
 37169                           intcon3	equ	0xFF0
 37170                           indf0	equ	0xFEF
 37171                           postinc0	equ	0xFEE
 37172                           plusw0	equ	0xFEB
 37173                           fsr0h	equ	0xFEA
 37174                           fsr0l	equ	0xFE9
 37175                           wreg	equ	0xFE8
 37176                           indf1	equ	0xFE7
 37177                           postinc1	equ	0xFE6
 37178                           postdec1	equ	0xFE5
 37179                           plusw1	equ	0xFE3
 37180                           fsr1h	equ	0xFE2
 37181                           fsr1l	equ	0xFE1
 37182                           bsr	equ	0xFE0
 37183                           indf2	equ	0xFDF
 37184                           postinc2	equ	0xFDE
 37185                           postdec2	equ	0xFDD
 37186                           plusw2	equ	0xFDB
 37187                           fsr2h	equ	0xFDA
 37188                           fsr2l	equ	0xFD9
 37189                           status	equ	0xFD8
 37190                           
 37191 ;; *************** function _Sch_SchmIntService *****************
 37192 ;; Defined at:
 37193 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37194 ;; Parameters:    Size  Location     Type
 37195 ;;		None
 37196 ;; Auto vars:     Size  Location     Type
 37197 ;;		None
 37198 ;; Return value:  Size  Location     Type
 37199 ;;                  1    wreg      void 
 37200 ;; Registers used:
 37201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37202 ;; Tracked objects:
 37203 ;;		On entry : 0/0
 37204 ;;		On exit  : 0/0
 37205 ;;		Unchanged: 0/0
 37206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37211 ;;Total ram usage:        0 bytes
 37212 ;; Hardware stack levels used:    1
 37213 ;; Hardware stack levels required when called:    8
 37214 ;; This function calls:
 37215 ;;		_OsAlrm_ProcessOsAlarms
 37216 ;;		_UpdateOsCounters
 37217 ;;		_UpdateSchFlag
 37218 ;; This function is called by:
 37219 ;;		_SystemInit
 37220 ;;		_Tmr_Tmr2Isr
 37221 ;; This function uses a non-reentrant model
 37222 ;;
 37223                           
 37224                           	psect	text180
 37225  006B5C                     __ptext180:
 37226                           	opt stack 0
 37227  006B5C                     _Sch_SchmIntService:
 37228                           	opt stack 8
 37229                           
 37230                           ;os_sched.c: 217: UpdateSchFlag();
 37231                           
 37232                           ;incstack = 0
 37233  006B5C  ECB9  F034         	call	_UpdateSchFlag	;wreg free
 37234                           
 37235                           ;os_sched.c: 219: UpdateOsCounters();
 37236  006B60  EC96  F035         	call	_UpdateOsCounters	;wreg free
 37237                           
 37238                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 37239  006B64  EC1A  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 37240  006B68  0012               	return		;funcret
 37241  006B6A                     __end_of_Sch_SchmIntService:
 37242                           	opt stack 0
 37243                           tosu	equ	0xFFF
 37244                           tosh	equ	0xFFE
 37245                           tosl	equ	0xFFD
 37246                           pclatu	equ	0xFFB
 37247                           pclath	equ	0xFFA
 37248                           tblptru	equ	0xFF8
 37249                           tblptrh	equ	0xFF7
 37250                           tblptrl	equ	0xFF6
 37251                           tablat	equ	0xFF5
 37252                           prodh	equ	0xFF4
 37253                           prodl	equ	0xFF3
 37254                           intcon	equ	0xFF2
 37255                           intcon2	equ	0xFF1
 37256                           intcon3	equ	0xFF0
 37257                           indf0	equ	0xFEF
 37258                           postinc0	equ	0xFEE
 37259                           plusw0	equ	0xFEB
 37260                           fsr0h	equ	0xFEA
 37261                           fsr0l	equ	0xFE9
 37262                           wreg	equ	0xFE8
 37263                           indf1	equ	0xFE7
 37264                           postinc1	equ	0xFE6
 37265                           postdec1	equ	0xFE5
 37266                           plusw1	equ	0xFE3
 37267                           fsr1h	equ	0xFE2
 37268                           fsr1l	equ	0xFE1
 37269                           bsr	equ	0xFE0
 37270                           indf2	equ	0xFDF
 37271                           postinc2	equ	0xFDE
 37272                           postdec2	equ	0xFDD
 37273                           plusw2	equ	0xFDB
 37274                           fsr2h	equ	0xFDA
 37275                           fsr2l	equ	0xFD9
 37276                           status	equ	0xFD8
 37277                           
 37278 ;; *************** function _UpdateSchFlag *****************
 37279 ;; Defined at:
 37280 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37281 ;; Parameters:    Size  Location     Type
 37282 ;;		None
 37283 ;; Auto vars:     Size  Location     Type
 37284 ;;		None
 37285 ;; Return value:  Size  Location     Type
 37286 ;;                  1    wreg      void 
 37287 ;; Registers used:
 37288 ;;		wreg, status,2, status,0
 37289 ;; Tracked objects:
 37290 ;;		On entry : 0/0
 37291 ;;		On exit  : 0/0
 37292 ;;		Unchanged: 0/0
 37293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37298 ;;Total ram usage:        0 bytes
 37299 ;; Hardware stack levels used:    1
 37300 ;; Hardware stack levels required when called:    4
 37301 ;; This function calls:
 37302 ;;		Nothing
 37303 ;; This function is called by:
 37304 ;;		_Sch_SchmIntService
 37305 ;; This function uses a non-reentrant model
 37306 ;;
 37307                           
 37308                           	psect	text181
 37309  006972                     __ptext181:
 37310                           	opt stack 0
 37311  006972                     _UpdateSchFlag:
 37312                           	opt stack 11
 37313                           
 37314                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 37315                           ;os_sched.c: 138: InterruptCounter++;
 37316                           
 37317                           ;incstack = 0
 37318  006972  0102               	movlb	2	; () banked
 37319  006974  4BDA               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 37320  006976  2BDB               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 37321                           
 37322                           ; BSR set to: 2
 37323                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 37324  006978  51DA               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 37325  00697A  11DB               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 37326  00697C  B4D8               	btfsc	status,2,c
 37327  00697E  0012               	return	
 37328                           
 37329                           ; BSR set to: 2
 37330                           ;os_sched.c: 141: {
 37331                           ;os_sched.c: 143: InterruptCounter = 0;
 37332  006980  0E00               	movlw	0
 37333  006982  6FDB               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 37334  006984  0E00               	movlw	0
 37335  006986  6FDA               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 37336                           
 37337                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 37338  006988  0E00               	movlw	0
 37339  00698A  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
 37340  00698C  0012               	return	
 37341  00698E                     __end_of_UpdateSchFlag:
 37342                           	opt stack 0
 37343                           tosu	equ	0xFFF
 37344                           tosh	equ	0xFFE
 37345                           tosl	equ	0xFFD
 37346                           pclatu	equ	0xFFB
 37347                           pclath	equ	0xFFA
 37348                           tblptru	equ	0xFF8
 37349                           tblptrh	equ	0xFF7
 37350                           tblptrl	equ	0xFF6
 37351                           tablat	equ	0xFF5
 37352                           prodh	equ	0xFF4
 37353                           prodl	equ	0xFF3
 37354                           intcon	equ	0xFF2
 37355                           intcon2	equ	0xFF1
 37356                           intcon3	equ	0xFF0
 37357                           indf0	equ	0xFEF
 37358                           postinc0	equ	0xFEE
 37359                           plusw0	equ	0xFEB
 37360                           fsr0h	equ	0xFEA
 37361                           fsr0l	equ	0xFE9
 37362                           wreg	equ	0xFE8
 37363                           indf1	equ	0xFE7
 37364                           postinc1	equ	0xFE6
 37365                           postdec1	equ	0xFE5
 37366                           plusw1	equ	0xFE3
 37367                           fsr1h	equ	0xFE2
 37368                           fsr1l	equ	0xFE1
 37369                           bsr	equ	0xFE0
 37370                           indf2	equ	0xFDF
 37371                           postinc2	equ	0xFDE
 37372                           postdec2	equ	0xFDD
 37373                           plusw2	equ	0xFDB
 37374                           fsr2h	equ	0xFDA
 37375                           fsr2l	equ	0xFD9
 37376                           status	equ	0xFD8
 37377                           
 37378 ;; *************** function _UpdateOsCounters *****************
 37379 ;; Defined at:
 37380 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37381 ;; Parameters:    Size  Location     Type
 37382 ;;		None
 37383 ;; Auto vars:     Size  Location     Type
 37384 ;;		None
 37385 ;; Return value:  Size  Location     Type
 37386 ;;                  1    wreg      void 
 37387 ;; Registers used:
 37388 ;;		wreg, status,2, status,0
 37389 ;; Tracked objects:
 37390 ;;		On entry : 0/0
 37391 ;;		On exit  : 0/0
 37392 ;;		Unchanged: 0/0
 37393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37398 ;;Total ram usage:        0 bytes
 37399 ;; Hardware stack levels used:    1
 37400 ;; Hardware stack levels required when called:    4
 37401 ;; This function calls:
 37402 ;;		Nothing
 37403 ;; This function is called by:
 37404 ;;		_Sch_SchmIntService
 37405 ;; This function uses a non-reentrant model
 37406 ;;
 37407                           
 37408                           	psect	text182
 37409  006B2C                     __ptext182:
 37410                           	opt stack 0
 37411  006B2C                     _UpdateOsCounters:
 37412                           	opt stack 11
 37413                           
 37414                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 37415                           
 37416                           ; BSR set to: 2
 37417                           ;incstack = 0
 37418  006B2C  0E01               	movlw	1
 37419  006B2E  0103               	movlb	3	; () banked
 37420  006B30  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 37421  006B32  0E00               	movlw	0
 37422  006B34  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 37423  006B36  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 37424  006B38  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 37425                           
 37426                           ; BSR set to: 3
 37427  006B3A  0012               	return		;funcret
 37428  006B3C                     __end_of_UpdateOsCounters:
 37429                           	opt stack 0
 37430                           tosu	equ	0xFFF
 37431                           tosh	equ	0xFFE
 37432                           tosl	equ	0xFFD
 37433                           pclatu	equ	0xFFB
 37434                           pclath	equ	0xFFA
 37435                           tblptru	equ	0xFF8
 37436                           tblptrh	equ	0xFF7
 37437                           tblptrl	equ	0xFF6
 37438                           tablat	equ	0xFF5
 37439                           prodh	equ	0xFF4
 37440                           prodl	equ	0xFF3
 37441                           intcon	equ	0xFF2
 37442                           intcon2	equ	0xFF1
 37443                           intcon3	equ	0xFF0
 37444                           indf0	equ	0xFEF
 37445                           postinc0	equ	0xFEE
 37446                           plusw0	equ	0xFEB
 37447                           fsr0h	equ	0xFEA
 37448                           fsr0l	equ	0xFE9
 37449                           wreg	equ	0xFE8
 37450                           indf1	equ	0xFE7
 37451                           postinc1	equ	0xFE6
 37452                           postdec1	equ	0xFE5
 37453                           plusw1	equ	0xFE3
 37454                           fsr1h	equ	0xFE2
 37455                           fsr1l	equ	0xFE1
 37456                           bsr	equ	0xFE0
 37457                           indf2	equ	0xFDF
 37458                           postinc2	equ	0xFDE
 37459                           postdec2	equ	0xFDD
 37460                           plusw2	equ	0xFDB
 37461                           fsr2h	equ	0xFDA
 37462                           fsr2l	equ	0xFD9
 37463                           status	equ	0xFD8
 37464                           
 37465 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 37466 ;; Defined at:
 37467 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37468 ;; Parameters:    Size  Location     Type
 37469 ;;		None
 37470 ;; Auto vars:     Size  Location     Type
 37471 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 37472 ;; Return value:  Size  Location     Type
 37473 ;;                  1    wreg      void 
 37474 ;; Registers used:
 37475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37476 ;; Tracked objects:
 37477 ;;		On entry : 0/0
 37478 ;;		On exit  : 0/0
 37479 ;;		Unchanged: 0/0
 37480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37482 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37483 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37484 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37485 ;;Total ram usage:       10 bytes
 37486 ;; Hardware stack levels used:    1
 37487 ;; Hardware stack levels required when called:    7
 37488 ;; This function calls:
 37489 ;;		_I2cDummyTx
 37490 ;;		_OsAlrm_ClearOsAlarm
 37491 ;;		i1___wmul
 37492 ;; This function is called by:
 37493 ;;		_Sch_SchmIntService
 37494 ;; This function uses a non-reentrant model
 37495 ;;
 37496                           
 37497                           	psect	text183
 37498  002434                     __ptext183:
 37499                           	opt stack 0
 37500  002434                     _OsAlrm_ProcessOsAlarms:
 37501                           	opt stack 8
 37502                           
 37503                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 37504                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 37505                           
 37506                           ; BSR set to: 3
 37507                           ;incstack = 0
 37508  002434  0E00               	movlw	0
 37509  002436  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 37510  002438  0E00               	movlw	0
 37511  00243A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 37512  00243C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37513  00243E  E105               	bnz	i1u1631_20
 37514  002440  0E14               	movlw	20
 37515  002442  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37516  002444  B0D8               	btfsc	status,0,c
 37517  002446  0012               	return	
 37518  002448  D001               	goto	i1l742
 37519  00244A                     i1u1631_20:
 37520  00244A  0012               	return	
 37521  00244C                     i1l742:
 37522                           
 37523                           ;os_alarms.c: 121: {
 37524                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 37525  00244C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37526  002450  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37527  002454  0E00               	movlw	0
 37528  002456  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37529  002458  0E0B               	movlw	11
 37530  00245A  6E1B               	movwf	i1___wmul@multiplicand,c
 37531  00245C  EC9B  F033         	call	i1___wmul	;wreg free
 37532  002460  0E00               	movlw	low _OsAlarms
 37533  002462  2419               	addwf	?i1___wmul,w,c
 37534  002464  6ED9               	movwf	fsr2l,c
 37535  002466  0E06               	movlw	high _OsAlarms
 37536  002468  201A               	addwfc	?i1___wmul+1,w,c
 37537  00246A  6EDA               	movwf	fsr2h,c
 37538  00246C  04DE               	decf	postinc2,w,c
 37539  00246E  A4D8               	btfss	status,2,c
 37540  002470  D086               	goto	i1u1635_29
 37541                           
 37542                           ;os_alarms.c: 124: {
 37543                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 37544  002472  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37545  002476  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37546  00247A  0E00               	movlw	0
 37547  00247C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37548  00247E  0E0B               	movlw	11
 37549  002480  6E1B               	movwf	i1___wmul@multiplicand,c
 37550  002482  EC9B  F033         	call	i1___wmul	;wreg free
 37551  002486  0E01               	movlw	1
 37552  002488  2619               	addwf	?i1___wmul,f,c
 37553  00248A  0E00               	movlw	0
 37554  00248C  221A               	addwfc	?i1___wmul+1,f,c
 37555  00248E  0E00               	movlw	low _OsAlarms
 37556  002490  2419               	addwf	?i1___wmul,w,c
 37557  002492  6ED9               	movwf	fsr2l,c
 37558  002494  0E06               	movlw	high _OsAlarms
 37559  002496  201A               	addwfc	?i1___wmul+1,w,c
 37560  002498  6EDA               	movwf	fsr2h,c
 37561  00249A  2ADE               	incf	postinc2,f,c
 37562  00249C  0E00               	movlw	0
 37563  00249E  22DE               	addwfc	postinc2,f,c
 37564  0024A0  22DE               	addwfc	postinc2,f,c
 37565  0024A2  22DE               	addwfc	postinc2,f,c
 37566                           
 37567                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 37568  0024A4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37569  0024A8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37570  0024AC  0E00               	movlw	0
 37571  0024AE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37572  0024B0  0E0B               	movlw	11
 37573  0024B2  6E1B               	movwf	i1___wmul@multiplicand,c
 37574  0024B4  EC9B  F033         	call	i1___wmul	;wreg free
 37575  0024B8  0E05               	movlw	5
 37576  0024BA  2619               	addwf	?i1___wmul,f,c
 37577  0024BC  0E00               	movlw	0
 37578  0024BE  221A               	addwfc	?i1___wmul+1,f,c
 37579  0024C0  0E00               	movlw	low _OsAlarms
 37580  0024C2  2419               	addwf	?i1___wmul,w,c
 37581  0024C4  6ED9               	movwf	fsr2l,c
 37582  0024C6  0E06               	movlw	high _OsAlarms
 37583  0024C8  201A               	addwfc	?i1___wmul+1,w,c
 37584  0024CA  6EDA               	movwf	fsr2h,c
 37585  0024CC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37586  0024D0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37587  0024D4  0E00               	movlw	0
 37588  0024D6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37589  0024D8  0E0B               	movlw	11
 37590  0024DA  6E1B               	movwf	i1___wmul@multiplicand,c
 37591  0024DC  EC9B  F033         	call	i1___wmul	;wreg free
 37592  0024E0  0E01               	movlw	1
 37593  0024E2  2619               	addwf	?i1___wmul,f,c
 37594  0024E4  0E00               	movlw	0
 37595  0024E6  221A               	addwfc	?i1___wmul+1,f,c
 37596  0024E8  0E00               	movlw	low _OsAlarms
 37597  0024EA  2419               	addwf	?i1___wmul,w,c
 37598  0024EC  6EE1               	movwf	fsr1l,c
 37599  0024EE  0E06               	movlw	high _OsAlarms
 37600  0024F0  201A               	addwfc	?i1___wmul+1,w,c
 37601  0024F2  6EE2               	movwf	fsr1h,c
 37602  0024F4  50DE               	movf	postinc2,w,c
 37603  0024F6  5CE6               	subwf	postinc1,w,c
 37604  0024F8  50DE               	movf	postinc2,w,c
 37605  0024FA  58E6               	subwfb	postinc1,w,c
 37606  0024FC  50DE               	movf	postinc2,w,c
 37607  0024FE  58E6               	subwfb	postinc1,w,c
 37608  002500  50DE               	movf	postinc2,w,c
 37609  002502  58E6               	subwfb	postinc1,w,c
 37610  002504  A0D8               	btfss	status,0,c
 37611  002506  D03B               	goto	i1u1635_29
 37612                           
 37613                           ;os_alarms.c: 129: {
 37614                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 37615  002508  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37616  00250A  EC65  F02D         	call	_OsAlrm_ClearOsAlarm
 37617                           
 37618                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 37619  00250E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37620  002512  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37621  002516  0E00               	movlw	0
 37622  002518  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37623  00251A  0E0B               	movlw	11
 37624  00251C  6E1B               	movwf	i1___wmul@multiplicand,c
 37625  00251E  EC9B  F033         	call	i1___wmul	;wreg free
 37626  002522  0E09               	movlw	9
 37627  002524  2619               	addwf	?i1___wmul,f,c
 37628  002526  0E00               	movlw	0
 37629  002528  221A               	addwfc	?i1___wmul+1,f,c
 37630  00252A  0E00               	movlw	low _OsAlarms
 37631  00252C  2419               	addwf	?i1___wmul,w,c
 37632  00252E  6ED9               	movwf	fsr2l,c
 37633  002530  0E06               	movlw	high _OsAlarms
 37634  002532  201A               	addwfc	?i1___wmul+1,w,c
 37635  002534  6EDA               	movwf	fsr2h,c
 37636  002536  50DE               	movf	postinc2,w,c
 37637  002538  10DE               	iorwf	postinc2,w,c
 37638  00253A  B4D8               	btfsc	status,2,c
 37639  00253C  D020               	goto	i1u1635_29
 37640                           
 37641                           ;os_alarms.c: 134: {
 37642                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 37643  00253E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37644  002542  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37645  002546  0E00               	movlw	0
 37646  002548  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37647  00254A  0E0B               	movlw	11
 37648  00254C  6E1B               	movwf	i1___wmul@multiplicand,c
 37649  00254E  EC9B  F033         	call	i1___wmul	;wreg free
 37650  002552  0E09               	movlw	9
 37651  002554  2619               	addwf	?i1___wmul,f,c
 37652  002556  0E00               	movlw	0
 37653  002558  221A               	addwfc	?i1___wmul+1,f,c
 37654  00255A  0E00               	movlw	low _OsAlarms
 37655  00255C  2419               	addwf	?i1___wmul,w,c
 37656  00255E  6ED9               	movwf	fsr2l,c
 37657  002560  0E06               	movlw	high _OsAlarms
 37658  002562  201A               	addwfc	?i1___wmul+1,w,c
 37659  002564  6EDA               	movwf	fsr2h,c
 37660  002566  D801               	call	i1u1635_28
 37661  002568  D00A               	goto	i1u1635_29
 37662  00256A                     i1u1635_28:
 37663  00256A  0005               	push	
 37664  00256C  6EFA               	movwf	pclath,c
 37665  00256E  50DE               	movf	postinc2,w,c
 37666  002570  6EFD               	movwf	tosl,c
 37667  002572  50DE               	movf	postinc2,w,c
 37668  002574  6EFE               	movwf	tosh,c
 37669  002576  50F8               	movf	tblptru,w,c
 37670  002578  6EFF               	movwf	tosu,c
 37671  00257A  50FA               	movf	pclath,w,c
 37672  00257C  0012               	return		;indir
 37673  00257E                     i1u1635_29:
 37674  00257E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 37675  002580  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 37676  002582  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37677  002584  E101               	bnz	i1l747
 37678  002586  D75C               	goto	L104
 37679  002588                     i1l747:
 37680  002588  0012               	return		;funcret
 37681  00258A                     __end_of_OsAlrm_ProcessOsAlarms:
 37682                           	opt stack 0
 37683                           tosu	equ	0xFFF
 37684                           tosh	equ	0xFFE
 37685                           tosl	equ	0xFFD
 37686                           pclatu	equ	0xFFB
 37687                           pclath	equ	0xFFA
 37688                           tblptru	equ	0xFF8
 37689                           tblptrh	equ	0xFF7
 37690                           tblptrl	equ	0xFF6
 37691                           tablat	equ	0xFF5
 37692                           prodh	equ	0xFF4
 37693                           prodl	equ	0xFF3
 37694                           intcon	equ	0xFF2
 37695                           intcon2	equ	0xFF1
 37696                           intcon3	equ	0xFF0
 37697                           indf0	equ	0xFEF
 37698                           postinc0	equ	0xFEE
 37699                           plusw0	equ	0xFEB
 37700                           fsr0h	equ	0xFEA
 37701                           fsr0l	equ	0xFE9
 37702                           wreg	equ	0xFE8
 37703                           indf1	equ	0xFE7
 37704                           postinc1	equ	0xFE6
 37705                           postdec1	equ	0xFE5
 37706                           plusw1	equ	0xFE3
 37707                           fsr1h	equ	0xFE2
 37708                           fsr1l	equ	0xFE1
 37709                           bsr	equ	0xFE0
 37710                           indf2	equ	0xFDF
 37711                           postinc2	equ	0xFDE
 37712                           postdec2	equ	0xFDD
 37713                           plusw2	equ	0xFDB
 37714                           fsr2h	equ	0xFDA
 37715                           fsr2l	equ	0xFD9
 37716                           status	equ	0xFD8
 37717                           
 37718 ;; *************** function i1___wmul *****************
 37719 ;; Defined at:
 37720 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 37721 ;; Parameters:    Size  Location     Type
 37722 ;;  multiplier      2   24[COMRAM] unsigned int 
 37723 ;;  multiplicand    2   26[COMRAM] unsigned int 
 37724 ;; Auto vars:     Size  Location     Type
 37725 ;;  __wmul          2   28[COMRAM] unsigned int 
 37726 ;; Return value:  Size  Location     Type
 37727 ;;                  2   24[COMRAM] unsigned int 
 37728 ;; Registers used:
 37729 ;;		wreg, status,2, status,0, prodl, prodh
 37730 ;; Tracked objects:
 37731 ;;		On entry : 0/0
 37732 ;;		On exit  : 0/0
 37733 ;;		Unchanged: 0/0
 37734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37738 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37739 ;;Total ram usage:        6 bytes
 37740 ;; Hardware stack levels used:    1
 37741 ;; Hardware stack levels required when called:    4
 37742 ;; This function calls:
 37743 ;;		Nothing
 37744 ;; This function is called by:
 37745 ;;		_OsAlrm_ProcessOsAlarms
 37746 ;; This function uses a non-reentrant model
 37747 ;;
 37748                           
 37749                           	psect	text184
 37750  006736                     __ptext184:
 37751                           	opt stack 0
 37752  006736                     i1___wmul:
 37753                           	opt stack 10
 37754                           
 37755                           ;incstack = 0
 37756  006736  5019               	movf	i1___wmul@multiplier,w,c
 37757  006738  021B               	mulwf	i1___wmul@multiplicand,c
 37758  00673A  CFF3 F01D          	movff	prodl,i1___wmul@product
 37759  00673E  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 37760  006742  5019               	movf	i1___wmul@multiplier,w,c
 37761  006744  021C               	mulwf	i1___wmul@multiplicand+1,c
 37762  006746  50F3               	movf	prodl,w,c
 37763  006748  261E               	addwf	i1___wmul@product+1,f,c
 37764  00674A  501A               	movf	i1___wmul@multiplier+1,w,c
 37765  00674C  021B               	mulwf	i1___wmul@multiplicand,c
 37766  00674E  50F3               	movf	prodl,w,c
 37767  006750  261E               	addwf	i1___wmul@product+1,f,c
 37768  006752  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 37769  006756  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 37770  00675A  0012               	return	
 37771  00675C                     __end_ofi1___wmul:
 37772                           	opt stack 0
 37773                           tosu	equ	0xFFF
 37774                           tosh	equ	0xFFE
 37775                           tosl	equ	0xFFD
 37776                           pclatu	equ	0xFFB
 37777                           pclath	equ	0xFFA
 37778                           tblptru	equ	0xFF8
 37779                           tblptrh	equ	0xFF7
 37780                           tblptrl	equ	0xFF6
 37781                           tablat	equ	0xFF5
 37782                           prodh	equ	0xFF4
 37783                           prodl	equ	0xFF3
 37784                           intcon	equ	0xFF2
 37785                           intcon2	equ	0xFF1
 37786                           intcon3	equ	0xFF0
 37787                           indf0	equ	0xFEF
 37788                           postinc0	equ	0xFEE
 37789                           plusw0	equ	0xFEB
 37790                           fsr0h	equ	0xFEA
 37791                           fsr0l	equ	0xFE9
 37792                           wreg	equ	0xFE8
 37793                           indf1	equ	0xFE7
 37794                           postinc1	equ	0xFE6
 37795                           postdec1	equ	0xFE5
 37796                           plusw1	equ	0xFE3
 37797                           fsr1h	equ	0xFE2
 37798                           fsr1l	equ	0xFE1
 37799                           bsr	equ	0xFE0
 37800                           indf2	equ	0xFDF
 37801                           postinc2	equ	0xFDE
 37802                           postdec2	equ	0xFDD
 37803                           plusw2	equ	0xFDB
 37804                           fsr2h	equ	0xFDA
 37805                           fsr2l	equ	0xFD9
 37806                           status	equ	0xFD8
 37807                           
 37808 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 37809 ;; Defined at:
 37810 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37811 ;; Parameters:    Size  Location     Type
 37812 ;;  OsAlarmId       1    wreg     unsigned char 
 37813 ;; Auto vars:     Size  Location     Type
 37814 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 37815 ;; Return value:  Size  Location     Type
 37816 ;;                  1    wreg      void 
 37817 ;; Registers used:
 37818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37819 ;; Tracked objects:
 37820 ;;		On entry : 0/0
 37821 ;;		On exit  : 0/0
 37822 ;;		Unchanged: 0/0
 37823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37828 ;;Total ram usage:        1 bytes
 37829 ;; Hardware stack levels used:    1
 37830 ;; Hardware stack levels required when called:    4
 37831 ;; This function calls:
 37832 ;;		Nothing
 37833 ;; This function is called by:
 37834 ;;		_OsAlrm_ProcessOsAlarms
 37835 ;; This function uses a non-reentrant model
 37836 ;;
 37837                           
 37838                           	psect	text185
 37839  005ACA                     __ptext185:
 37840                           	opt stack 0
 37841  005ACA                     _OsAlrm_ClearOsAlarm:
 37842                           	opt stack 10
 37843                           
 37844                           ;incstack = 0
 37845                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 37846  005ACA  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 37847                           
 37848                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 37849  005ACC  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37850  005ACE  0D0B               	mullw	11
 37851  005AD0  0E00               	movlw	low _OsAlarms
 37852  005AD2  24F3               	addwf	prodl,w,c
 37853  005AD4  6ED9               	movwf	fsr2l,c
 37854  005AD6  0E06               	movlw	high _OsAlarms
 37855  005AD8  20F4               	addwfc	prodh,w,c
 37856  005ADA  6EDA               	movwf	fsr2h,c
 37857  005ADC  0E00               	movlw	0
 37858  005ADE  6EDF               	movwf	indf2,c
 37859                           
 37860                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 37861  005AE0  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37862  005AE2  0D0B               	mullw	11
 37863  005AE4  0E01               	movlw	1
 37864  005AE6  26F3               	addwf	prodl,f,c
 37865  005AE8  0E00               	movlw	0
 37866  005AEA  22F4               	addwfc	prodh,f,c
 37867  005AEC  0E00               	movlw	low _OsAlarms
 37868  005AEE  24F3               	addwf	prodl,w,c
 37869  005AF0  6ED9               	movwf	fsr2l,c
 37870  005AF2  0E06               	movlw	high _OsAlarms
 37871  005AF4  20F4               	addwfc	prodh,w,c
 37872  005AF6  6EDA               	movwf	fsr2h,c
 37873  005AF8  6ADE               	clrf	postinc2,c
 37874  005AFA  6ADE               	clrf	postinc2,c
 37875  005AFC  6ADE               	clrf	postinc2,c
 37876  005AFE  6ADD               	clrf	postdec2,c
 37877                           
 37878                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 37879  005B00  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37880  005B02  0D0B               	mullw	11
 37881  005B04  0E05               	movlw	5
 37882  005B06  26F3               	addwf	prodl,f,c
 37883  005B08  0E00               	movlw	0
 37884  005B0A  22F4               	addwfc	prodh,f,c
 37885  005B0C  0E00               	movlw	low _OsAlarms
 37886  005B0E  24F3               	addwf	prodl,w,c
 37887  005B10  6ED9               	movwf	fsr2l,c
 37888  005B12  0E06               	movlw	high _OsAlarms
 37889  005B14  20F4               	addwfc	prodh,w,c
 37890  005B16  6EDA               	movwf	fsr2h,c
 37891  005B18  6ADE               	clrf	postinc2,c
 37892  005B1A  6ADE               	clrf	postinc2,c
 37893  005B1C  6ADE               	clrf	postinc2,c
 37894  005B1E  6ADD               	clrf	postdec2,c
 37895  005B20  0012               	return		;funcret
 37896  005B22                     __end_of_OsAlrm_ClearOsAlarm:
 37897                           	opt stack 0
 37898                           tosu	equ	0xFFF
 37899                           tosh	equ	0xFFE
 37900                           tosl	equ	0xFFD
 37901                           pclatu	equ	0xFFB
 37902                           pclath	equ	0xFFA
 37903                           tblptru	equ	0xFF8
 37904                           tblptrh	equ	0xFF7
 37905                           tblptrl	equ	0xFF6
 37906                           tablat	equ	0xFF5
 37907                           prodh	equ	0xFF4
 37908                           prodl	equ	0xFF3
 37909                           intcon	equ	0xFF2
 37910                           intcon2	equ	0xFF1
 37911                           intcon3	equ	0xFF0
 37912                           indf0	equ	0xFEF
 37913                           postinc0	equ	0xFEE
 37914                           plusw0	equ	0xFEB
 37915                           fsr0h	equ	0xFEA
 37916                           fsr0l	equ	0xFE9
 37917                           wreg	equ	0xFE8
 37918                           indf1	equ	0xFE7
 37919                           postinc1	equ	0xFE6
 37920                           postdec1	equ	0xFE5
 37921                           plusw1	equ	0xFE3
 37922                           fsr1h	equ	0xFE2
 37923                           fsr1l	equ	0xFE1
 37924                           bsr	equ	0xFE0
 37925                           indf2	equ	0xFDF
 37926                           postinc2	equ	0xFDE
 37927                           postdec2	equ	0xFDD
 37928                           plusw2	equ	0xFDB
 37929                           fsr2h	equ	0xFDA
 37930                           fsr2l	equ	0xFD9
 37931                           status	equ	0xFD8
 37932                           
 37933 ;; *************** function _I2cDummyTx *****************
 37934 ;; Defined at:
 37935 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37936 ;; Parameters:    Size  Location     Type
 37937 ;;		None
 37938 ;; Auto vars:     Size  Location     Type
 37939 ;;		None
 37940 ;; Return value:  Size  Location     Type
 37941 ;;                  1    wreg      void 
 37942 ;; Registers used:
 37943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37944 ;; Tracked objects:
 37945 ;;		On entry : 0/0
 37946 ;;		On exit  : 0/0
 37947 ;;		Unchanged: 0/0
 37948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37953 ;;Total ram usage:        0 bytes
 37954 ;; Hardware stack levels used:    1
 37955 ;; Hardware stack levels required when called:    6
 37956 ;; This function calls:
 37957 ;;		i1_I2cSlv_SendI2cMsg
 37958 ;; This function is called by:
 37959 ;;		_I2cSlv_MainTask
 37960 ;;		_OsAlrm_ProcessOsAlarms
 37961 ;; This function uses a non-reentrant model
 37962 ;;
 37963                           
 37964                           	psect	text186
 37965  00698E                     __ptext186:
 37966                           	opt stack 0
 37967  00698E                     _I2cDummyTx:
 37968                           	opt stack 8
 37969                           
 37970                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 37971                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 37972                           
 37973                           ;incstack = 0
 37974  00698E  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 37975  006990  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 37976  006992  0E01               	movlw	high I2cDummyTx@DummyBuffer
 37977  006994  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 37978  006996  0E00               	movlw	0
 37979  006998  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 37980  00699A  0E01               	movlw	1
 37981  00699C  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 37982  00699E  ECFF  F031         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 37983                           
 37984                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 37985  0069A2  0E01               	movlw	1
 37986  0069A4  0101               	movlb	1	; () banked
 37987  0069A6  6FE5               	movwf	_I2cBusStatus& (0+255),b
 37988                           
 37989                           ; BSR set to: 1
 37990  0069A8  0012               	return		;funcret
 37991  0069AA                     __end_of_I2cDummyTx:
 37992                           	opt stack 0
 37993                           tosu	equ	0xFFF
 37994                           tosh	equ	0xFFE
 37995                           tosl	equ	0xFFD
 37996                           pclatu	equ	0xFFB
 37997                           pclath	equ	0xFFA
 37998                           tblptru	equ	0xFF8
 37999                           tblptrh	equ	0xFF7
 38000                           tblptrl	equ	0xFF6
 38001                           tablat	equ	0xFF5
 38002                           prodh	equ	0xFF4
 38003                           prodl	equ	0xFF3
 38004                           intcon	equ	0xFF2
 38005                           intcon2	equ	0xFF1
 38006                           intcon3	equ	0xFF0
 38007                           indf0	equ	0xFEF
 38008                           postinc0	equ	0xFEE
 38009                           plusw0	equ	0xFEB
 38010                           fsr0h	equ	0xFEA
 38011                           fsr0l	equ	0xFE9
 38012                           wreg	equ	0xFE8
 38013                           indf1	equ	0xFE7
 38014                           postinc1	equ	0xFE6
 38015                           postdec1	equ	0xFE5
 38016                           plusw1	equ	0xFE3
 38017                           fsr1h	equ	0xFE2
 38018                           fsr1l	equ	0xFE1
 38019                           bsr	equ	0xFE0
 38020                           indf2	equ	0xFDF
 38021                           postinc2	equ	0xFDE
 38022                           postdec2	equ	0xFDD
 38023                           plusw2	equ	0xFDB
 38024                           fsr2h	equ	0xFDA
 38025                           fsr2l	equ	0xFD9
 38026                           status	equ	0xFD8
 38027                           
 38028 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 38029 ;; Defined at:
 38030 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38031 ;; Parameters:    Size  Location     Type
 38032 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 38033 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 38034 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 38035 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 38036 ;;  DataLenght      1   30[COMRAM] unsigned char 
 38037 ;; Auto vars:     Size  Location     Type
 38038 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 38039 ;; Return value:  Size  Location     Type
 38040 ;;                  1    wreg      unsigned char 
 38041 ;; Registers used:
 38042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38043 ;; Tracked objects:
 38044 ;;		On entry : 0/0
 38045 ;;		On exit  : 0/0
 38046 ;;		Unchanged: 0/0
 38047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38051 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38052 ;;Total ram usage:        5 bytes
 38053 ;; Hardware stack levels used:    1
 38054 ;; Hardware stack levels required when called:    5
 38055 ;; This function calls:
 38056 ;;		i1_GenerateEvt
 38057 ;; This function is called by:
 38058 ;;		_I2cDummyTx
 38059 ;; This function uses a non-reentrant model
 38060 ;;
 38061                           
 38062                           	psect	text187
 38063  0063FE                     __ptext187:
 38064                           	opt stack 0
 38065  0063FE                     i1_I2cSlv_SendI2cMsg:
 38066                           	opt stack 8
 38067                           
 38068                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 38069                           
 38070                           ; BSR set to: 1
 38071                           ;incstack = 0
 38072  0063FE  0E00               	movlw	0
 38073  006400  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38074                           
 38075                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 38076  006402  0100               	movlb	0	; () banked
 38077  006404  05CF               	decf	_I2cComSts& (0+255),w,b
 38078  006406  B4D8               	btfsc	status,2,c
 38079  006408  D014               	goto	i1l1412
 38080                           
 38081                           ; BSR set to: 0
 38082                           ;i2c_slv.c: 257: {
 38083                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 38084  00640A  C01E  F3A1         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 38085                           
 38086                           ; BSR set to: 0
 38087                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 38088  00640E  0E00               	movlw	0
 38089  006410  0103               	movlb	3	; () banked
 38090  006412  6FA2               	movwf	(_I2cTxPacket+1)& (0+255),b
 38091                           
 38092                           ; BSR set to: 3
 38093                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 38094  006414  C01F  F3A5         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 38095                           
 38096                           ; BSR set to: 3
 38097                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 38098  006418  C01C  F3A3         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 38099  00641C  C01D  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 38100                           
 38101                           ; BSR set to: 3
 38102                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 38103  006420  0ED7               	movlw	low _I2cWriteDataEvt
 38104  006422  6E19               	movwf	i1GenerateEvt@Event,c
 38105  006424  0E00               	movlw	high _I2cWriteDataEvt
 38106  006426  6E1A               	movwf	i1GenerateEvt@Event+1,c
 38107  006428  EC43  F035         	call	i1_GenerateEvt	;wreg free
 38108                           
 38109                           ;i2c_slv.c: 267: TxSts = 1u;
 38110  00642C  0E01               	movlw	1
 38111  00642E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38112                           
 38113                           ;i2c_slv.c: 268: }
 38114  006430  0012               	return	
 38115  006432                     i1l1412:
 38116                           
 38117                           ;i2c_slv.c: 269: else
 38118                           ;i2c_slv.c: 270: {
 38119                           ;i2c_slv.c: 272: TxSts = 0u;
 38120  006432  0E00               	movlw	0
 38121  006434  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38122  006436  0012               	return	
 38123  006438                     __end_ofi1_I2cSlv_SendI2cMsg:
 38124                           	opt stack 0
 38125                           tosu	equ	0xFFF
 38126                           tosh	equ	0xFFE
 38127                           tosl	equ	0xFFD
 38128                           pclatu	equ	0xFFB
 38129                           pclath	equ	0xFFA
 38130                           tblptru	equ	0xFF8
 38131                           tblptrh	equ	0xFF7
 38132                           tblptrl	equ	0xFF6
 38133                           tablat	equ	0xFF5
 38134                           prodh	equ	0xFF4
 38135                           prodl	equ	0xFF3
 38136                           intcon	equ	0xFF2
 38137                           intcon2	equ	0xFF1
 38138                           intcon3	equ	0xFF0
 38139                           indf0	equ	0xFEF
 38140                           postinc0	equ	0xFEE
 38141                           plusw0	equ	0xFEB
 38142                           fsr0h	equ	0xFEA
 38143                           fsr0l	equ	0xFE9
 38144                           wreg	equ	0xFE8
 38145                           indf1	equ	0xFE7
 38146                           postinc1	equ	0xFE6
 38147                           postdec1	equ	0xFE5
 38148                           plusw1	equ	0xFE3
 38149                           fsr1h	equ	0xFE2
 38150                           fsr1l	equ	0xFE1
 38151                           bsr	equ	0xFE0
 38152                           indf2	equ	0xFDF
 38153                           postinc2	equ	0xFDE
 38154                           postdec2	equ	0xFDD
 38155                           plusw2	equ	0xFDB
 38156                           fsr2h	equ	0xFDA
 38157                           fsr2l	equ	0xFD9
 38158                           status	equ	0xFD8
 38159                           
 38160 ;; *************** function i1_GenerateEvt *****************
 38161 ;; Defined at:
 38162 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38163 ;; Parameters:    Size  Location     Type
 38164 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 38165 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38166 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38167 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38168 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38169 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38170 ;; Auto vars:     Size  Location     Type
 38171 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 38172 ;; Return value:  Size  Location     Type
 38173 ;;                  1    wreg      enum E7699
 38174 ;; Registers used:
 38175 ;;		wreg, fsr2l, fsr2h, status,2
 38176 ;; Tracked objects:
 38177 ;;		On entry : 0/0
 38178 ;;		On exit  : 0/0
 38179 ;;		Unchanged: 0/0
 38180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38184 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38185 ;;Total ram usage:        3 bytes
 38186 ;; Hardware stack levels used:    1
 38187 ;; Hardware stack levels required when called:    4
 38188 ;; This function calls:
 38189 ;;		Nothing
 38190 ;; This function is called by:
 38191 ;;		i1_I2cSlv_SendI2cMsg
 38192 ;; This function uses a non-reentrant model
 38193 ;;
 38194                           
 38195                           	psect	text188
 38196  006A86                     __ptext188:
 38197                           	opt stack 0
 38198  006A86                     i1_GenerateEvt:
 38199                           	opt stack 8
 38200                           
 38201                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38202                           
 38203                           ;incstack = 0
 38204  006A86  0E00               	movlw	0
 38205  006A88  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38206                           
 38207                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38208  006A8A  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 38209  006A8E  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 38210  006A92  0E02               	movlw	2
 38211  006A94  6EDF               	movwf	indf2,c
 38212                           
 38213                           ;os_ser.c: 83: EventStatus = EventSent;
 38214  006A96  0E02               	movlw	2
 38215  006A98  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38216  006A9A  0012               	return	
 38217  006A9C                     __end_ofi1_GenerateEvt:
 38218                           	opt stack 0
 38219                           tosu	equ	0xFFF
 38220                           tosh	equ	0xFFE
 38221                           tosl	equ	0xFFD
 38222                           pclatu	equ	0xFFB
 38223                           pclath	equ	0xFFA
 38224                           tblptru	equ	0xFF8
 38225                           tblptrh	equ	0xFF7
 38226                           tblptrl	equ	0xFF6
 38227                           tablat	equ	0xFF5
 38228                           prodh	equ	0xFF4
 38229                           prodl	equ	0xFF3
 38230                           intcon	equ	0xFF2
 38231                           intcon2	equ	0xFF1
 38232                           intcon3	equ	0xFF0
 38233                           indf0	equ	0xFEF
 38234                           postinc0	equ	0xFEE
 38235                           plusw0	equ	0xFEB
 38236                           fsr0h	equ	0xFEA
 38237                           fsr0l	equ	0xFE9
 38238                           wreg	equ	0xFE8
 38239                           indf1	equ	0xFE7
 38240                           postinc1	equ	0xFE6
 38241                           postdec1	equ	0xFE5
 38242                           plusw1	equ	0xFE3
 38243                           fsr1h	equ	0xFE2
 38244                           fsr1l	equ	0xFE1
 38245                           bsr	equ	0xFE0
 38246                           indf2	equ	0xFDF
 38247                           postinc2	equ	0xFDE
 38248                           postdec2	equ	0xFDD
 38249                           plusw2	equ	0xFDB
 38250                           fsr2h	equ	0xFDA
 38251                           fsr2l	equ	0xFD9
 38252                           status	equ	0xFD8
 38253                           
 38254 ;; *************** function _HighPriorityIsr *****************
 38255 ;; Defined at:
 38256 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 38257 ;; Parameters:    Size  Location     Type
 38258 ;;		None
 38259 ;; Auto vars:     Size  Location     Type
 38260 ;;		None
 38261 ;; Return value:  Size  Location     Type
 38262 ;;                  1    wreg      void 
 38263 ;; Registers used:
 38264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38265 ;; Tracked objects:
 38266 ;;		On entry : 0/0
 38267 ;;		On exit  : 0/0
 38268 ;;		Unchanged: 0/0
 38269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38272 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38273 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38274 ;;Total ram usage:       18 bytes
 38275 ;; Hardware stack levels used:    1
 38276 ;; Hardware stack levels required when called:    3
 38277 ;; This function calls:
 38278 ;;		_Mcu_Int0Isr
 38279 ;;		_Mcu_Int1Isr
 38280 ;;		_Rtcc_RtcIsr
 38281 ;;		_Uart_Uart1RxIsr
 38282 ;; This function is called by:
 38283 ;;		Interrupt level 2
 38284 ;; This function uses a non-reentrant model
 38285 ;;
 38286                           
 38287                           	psect	intcode
 38288  000008                     __pintcode:
 38289                           	opt stack 0
 38290  000008                     _HighPriorityIsr:
 38291                           	opt stack 8
 38292                           
 38293                           ;incstack = 0
 38294  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38295  00000A  EF37  F023         	goto	int_func
 38296                           tosu	equ	0xFFF
 38297                           tosh	equ	0xFFE
 38298                           tosl	equ	0xFFD
 38299                           pclatu	equ	0xFFB
 38300                           pclath	equ	0xFFA
 38301                           tblptru	equ	0xFF8
 38302                           tblptrh	equ	0xFF7
 38303                           tblptrl	equ	0xFF6
 38304                           tablat	equ	0xFF5
 38305                           prodh	equ	0xFF4
 38306                           prodl	equ	0xFF3
 38307                           intcon	equ	0xFF2
 38308                           intcon2	equ	0xFF1
 38309                           intcon3	equ	0xFF0
 38310                           indf0	equ	0xFEF
 38311                           postinc0	equ	0xFEE
 38312                           plusw0	equ	0xFEB
 38313                           fsr0h	equ	0xFEA
 38314                           fsr0l	equ	0xFE9
 38315                           wreg	equ	0xFE8
 38316                           indf1	equ	0xFE7
 38317                           postinc1	equ	0xFE6
 38318                           postdec1	equ	0xFE5
 38319                           plusw1	equ	0xFE3
 38320                           fsr1h	equ	0xFE2
 38321                           fsr1l	equ	0xFE1
 38322                           bsr	equ	0xFE0
 38323                           indf2	equ	0xFDF
 38324                           postinc2	equ	0xFDE
 38325                           postdec2	equ	0xFDD
 38326                           plusw2	equ	0xFDB
 38327                           fsr2h	equ	0xFDA
 38328                           fsr2l	equ	0xFD9
 38329                           status	equ	0xFD8
 38330                           
 38331                           	psect	intcode_body
 38332  00466E                     __pintcode_body:
 38333                           	opt stack 8
 38334  00466E                     int_func:
 38335                           	opt stack 8
 38336  00466E  CFFA F007          	movff	pclath,??_HighPriorityIsr
 38337  004672  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 38338  004676  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 38339  00467A  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 38340  00467E  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 38341  004682  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 38342  004686  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 38343  00468A  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 38344  00468E  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 38345  004692  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 38346  004696  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 38347  00469A  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 38348  00469E  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 38349  0046A2  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 38350  0046A6  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 38351  0046AA  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 38352  0046AE  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 38353  0046B2  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 38354                           
 38355                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 38356  0046B6  B2F2               	btfsc	intcon,1,c	;volatile
 38357                           
 38358                           ;irq.c: 158: {
 38359                           ;irq.c: 160: Mcu_Int0Isr();
 38360  0046B8  ECF5  F035         	call	_Mcu_Int0Isr	;wreg free
 38361                           
 38362                           ;irq.c: 161: }
 38363                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 38364  0046BC  B0F0               	btfsc	intcon3,0,c	;volatile
 38365                           
 38366                           ;irq.c: 167: {
 38367                           ;irq.c: 169: Mcu_Int1Isr();
 38368  0046BE  ECF3  F035         	call	_Mcu_Int1Isr	;wreg free
 38369                           
 38370                           ;irq.c: 170: }
 38371                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 38372  0046C2  B0A4               	btfsc	4004,0,c	;volatile
 38373                           
 38374                           ;irq.c: 203: {
 38375                           ;irq.c: 205: Rtcc_RtcIsr();
 38376  0046C4  ECF1  F035         	call	_Rtcc_RtcIsr	;wreg free
 38377                           
 38378                           ;irq.c: 206: }
 38379                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 38380  0046C8  BA9E               	btfsc	3998,5,c	;volatile
 38381                           
 38382                           ;irq.c: 212: {
 38383                           ;irq.c: 214: Uart_Uart1RxIsr();
 38384  0046CA  EC9E  F035         	call	_Uart_Uart1RxIsr	;wreg free
 38385  0046CE  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 38386  0046D2  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 38387  0046D6  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 38388  0046DA  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 38389  0046DE  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 38390  0046E2  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 38391  0046E6  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 38392  0046EA  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 38393  0046EE  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 38394  0046F2  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 38395  0046F6  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 38396  0046FA  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 38397  0046FE  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 38398  004702  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 38399  004706  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 38400  00470A  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 38401  00470E  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 38402  004712  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 38403  004716  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38404  004718  0011               	retfie		f
 38405  00471A                     __end_of_HighPriorityIsr:
 38406                           	opt stack 0
 38407                           tosu	equ	0xFFF
 38408                           tosh	equ	0xFFE
 38409                           tosl	equ	0xFFD
 38410                           pclatu	equ	0xFFB
 38411                           pclath	equ	0xFFA
 38412                           tblptru	equ	0xFF8
 38413                           tblptrh	equ	0xFF7
 38414                           tblptrl	equ	0xFF6
 38415                           tablat	equ	0xFF5
 38416                           prodh	equ	0xFF4
 38417                           prodl	equ	0xFF3
 38418                           intcon	equ	0xFF2
 38419                           intcon2	equ	0xFF1
 38420                           intcon3	equ	0xFF0
 38421                           indf0	equ	0xFEF
 38422                           postinc0	equ	0xFEE
 38423                           plusw0	equ	0xFEB
 38424                           fsr0h	equ	0xFEA
 38425                           fsr0l	equ	0xFE9
 38426                           wreg	equ	0xFE8
 38427                           indf1	equ	0xFE7
 38428                           postinc1	equ	0xFE6
 38429                           postdec1	equ	0xFE5
 38430                           plusw1	equ	0xFE3
 38431                           fsr1h	equ	0xFE2
 38432                           fsr1l	equ	0xFE1
 38433                           bsr	equ	0xFE0
 38434                           indf2	equ	0xFDF
 38435                           postinc2	equ	0xFDE
 38436                           postdec2	equ	0xFDD
 38437                           plusw2	equ	0xFDB
 38438                           fsr2h	equ	0xFDA
 38439                           fsr2l	equ	0xFD9
 38440                           status	equ	0xFD8
 38441                           
 38442 ;; *************** function _Uart_Uart1RxIsr *****************
 38443 ;; Defined at:
 38444 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38445 ;; Parameters:    Size  Location     Type
 38446 ;;		None
 38447 ;; Auto vars:     Size  Location     Type
 38448 ;;		None
 38449 ;; Return value:  Size  Location     Type
 38450 ;;                  1    wreg      void 
 38451 ;; Registers used:
 38452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38453 ;; Tracked objects:
 38454 ;;		On entry : 0/0
 38455 ;;		On exit  : 0/0
 38456 ;;		Unchanged: 0/0
 38457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38462 ;;Total ram usage:        0 bytes
 38463 ;; Hardware stack levels used:    1
 38464 ;; Hardware stack levels required when called:    2
 38465 ;; This function calls:
 38466 ;;		_Uart_MdmGsmGprsReadService
 38467 ;; This function is called by:
 38468 ;;		_HighPriorityIsr
 38469 ;; This function uses a non-reentrant model
 38470 ;;
 38471                           
 38472                           	psect	text190
 38473  006B3C                     __ptext190:
 38474                           	opt stack 0
 38475  006B3C                     _Uart_Uart1RxIsr:
 38476                           	opt stack 8
 38477                           
 38478                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 38479                           ;uart_drv.c: 590: UartRxData = RCREG1;
 38480                           
 38481                           ;incstack = 0
 38482  006B3C  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 38483                           
 38484                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 38485  006B40  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 38486  006B44  0E01               	movlw	1
 38487  006B46  EC18  F01F         	call	_Uart_MdmGsmGprsReadService
 38488  006B4A  0012               	return		;funcret
 38489  006B4C                     __end_of_Uart_Uart1RxIsr:
 38490                           	opt stack 0
 38491                           tosu	equ	0xFFF
 38492                           tosh	equ	0xFFE
 38493                           tosl	equ	0xFFD
 38494                           pclatu	equ	0xFFB
 38495                           pclath	equ	0xFFA
 38496                           tblptru	equ	0xFF8
 38497                           tblptrh	equ	0xFF7
 38498                           tblptrl	equ	0xFF6
 38499                           tablat	equ	0xFF5
 38500                           prodh	equ	0xFF4
 38501                           prodl	equ	0xFF3
 38502                           intcon	equ	0xFF2
 38503                           intcon2	equ	0xFF1
 38504                           intcon3	equ	0xFF0
 38505                           indf0	equ	0xFEF
 38506                           postinc0	equ	0xFEE
 38507                           plusw0	equ	0xFEB
 38508                           fsr0h	equ	0xFEA
 38509                           fsr0l	equ	0xFE9
 38510                           wreg	equ	0xFE8
 38511                           indf1	equ	0xFE7
 38512                           postinc1	equ	0xFE6
 38513                           postdec1	equ	0xFE5
 38514                           plusw1	equ	0xFE3
 38515                           fsr1h	equ	0xFE2
 38516                           fsr1l	equ	0xFE1
 38517                           bsr	equ	0xFE0
 38518                           indf2	equ	0xFDF
 38519                           postinc2	equ	0xFDE
 38520                           postdec2	equ	0xFDD
 38521                           plusw2	equ	0xFDB
 38522                           fsr2h	equ	0xFDA
 38523                           fsr2l	equ	0xFD9
 38524                           status	equ	0xFD8
 38525                           
 38526 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 38527 ;; Defined at:
 38528 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38529 ;; Parameters:    Size  Location     Type
 38530 ;;  Module          1    wreg     unsigned char 
 38531 ;;  UartData        1    3[COMRAM] unsigned char 
 38532 ;; Auto vars:     Size  Location     Type
 38533 ;;  Module          1    0[COMRAM] unsigned char 
 38534 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 38535 ;; Return value:  Size  Location     Type
 38536 ;;                  1    wreg      void 
 38537 ;; Registers used:
 38538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38539 ;; Tracked objects:
 38540 ;;		On entry : 0/0
 38541 ;;		On exit  : 0/0
 38542 ;;		Unchanged: 0/0
 38543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38544 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38547 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38548 ;;Total ram usage:        3 bytes
 38549 ;; Hardware stack levels used:    1
 38550 ;; Hardware stack levels required when called:    1
 38551 ;; This function calls:
 38552 ;;		i2_GenerateEvt
 38553 ;; This function is called by:
 38554 ;;		_Uart_Uart1RxIsr
 38555 ;; This function uses a non-reentrant model
 38556 ;;
 38557                           
 38558                           	psect	text191
 38559  003E30                     __ptext191:
 38560                           	opt stack 0
 38561  003E30                     _Uart_MdmGsmGprsReadService:
 38562                           	opt stack 8
 38563                           
 38564                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 38565                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 38566                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 38567                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 38568                           
 38569                           ;incstack = 0
 38570  003E30  0E00               	movlw	0
 38571  003E32  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38572  003E34  0E00               	movlw	0
 38573  003E36  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38574                           
 38575                           ;uart_drv.c: 383: switch (RxState)
 38576  003E38  D058               	goto	i2l680
 38577  003E3A                     
 38578                           ;uart_drv.c: 387: if (UartData == '\r')
 38579  003E3A  0E0D               	movlw	13
 38580  003E3C  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38581  003E3E  A4D8               	btfss	status,2,c
 38582  003E40  D003               	goto	i2l682
 38583                           
 38584                           ;uart_drv.c: 388: {
 38585                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 38586  003E42  0E01               	movlw	1
 38587  003E44  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38588                           
 38589                           ;uart_drv.c: 391: }
 38590  003E46  0012               	return	
 38591  003E48                     i2l682:
 38592                           
 38593                           ;uart_drv.c: 392: else
 38594                           ;uart_drv.c: 393: {
 38595                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 38596  003E48  0E90               	movlw	144
 38597  003E4A  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38598  003E4C  0E01               	movlw	1
 38599  003E4E  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38600  003E50  B0D8               	btfsc	status,0,c
 38601  003E52  0012               	return	
 38602                           
 38603                           ;uart_drv.c: 395: {
 38604                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 38605  003E54  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38606  003E56  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38607  003E58  6ED9               	movwf	fsr2l,c
 38608  003E5A  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38609  003E5C  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38610  003E5E  6EDA               	movwf	fsr2h,c
 38611  003E60  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 38612                           
 38613                           ;uart_drv.c: 399: RxCounter++;
 38614  003E64  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 38615  003E66  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 38616                           
 38617                           ;uart_drv.c: 400: }
 38618                           ;uart_drv.c: 401: }
 38619                           ;uart_drv.c: 402: break;
 38620  003E68  0012               	return	
 38621  003E6A                     
 38622                           ;uart_drv.c: 406: if (UartData == '\n')
 38623  003E6A  0E0A               	movlw	10
 38624  003E6C  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38625  003E6E  A4D8               	btfss	status,2,c
 38626  003E70  D035               	goto	i2l688
 38627                           
 38628                           ;uart_drv.c: 407: {
 38629                           ;uart_drv.c: 409: if (RxCounter > 0)
 38630  003E72  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38631  003E74  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38632  003E76  B4D8               	btfsc	status,2,c
 38633  003E78  D031               	goto	i2l688
 38634                           
 38635                           ;uart_drv.c: 410: {
 38636                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 38637  003E7A  0E00               	movlw	0
 38638  003E7C  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38639  003E7E  0E00               	movlw	0
 38640  003E80  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38641  003E82  D010               	goto	i2l689
 38642  003E84                     
 38643                           ;uart_drv.c: 413: {
 38644                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 38645  003E84  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38646  003E86  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38647  003E88  6ED9               	movwf	fsr2l,c
 38648  003E8A  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38649  003E8C  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38650  003E8E  6EDA               	movwf	fsr2h,c
 38651  003E90  0E58               	movlw	low _RxBuffer
 38652  003E92  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38653  003E94  6EE1               	movwf	fsr1l,c
 38654  003E96  0E0C               	movlw	high _RxBuffer
 38655  003E98  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38656  003E9A  6EE2               	movwf	fsr1h,c
 38657  003E9C  CFDF FFE7          	movff	indf2,indf1
 38658  003EA0  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 38659  003EA2  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 38660  003EA4                     i2l689:
 38661  003EA4  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38662  003EA6  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38663  003EA8  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38664  003EAA  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38665  003EAC  A0D8               	btfss	status,0,c
 38666  003EAE  D7EA               	goto	i2l690
 38667                           
 38668                           ;uart_drv.c: 415: }
 38669                           ;uart_drv.c: 417: RxLen = RxCounter;
 38670  003EB0  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 38671  003EB4  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 38672                           
 38673                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 38674  003EB8  0E3C               	movlw	low _NewStringReceived
 38675  003EBA  6E01               	movwf	i2GenerateEvt@Event,c
 38676  003EBC  0E00               	movlw	high _NewStringReceived
 38677  003EBE  6E02               	movwf	i2GenerateEvt@Event+1,c
 38678  003EC0  EC4E  F035         	call	i2_GenerateEvt	;wreg free
 38679                           
 38680                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 38681  003EC4  0E3B               	movlw	low _NewMdmEvtParserRequest
 38682  003EC6  6E01               	movwf	i2GenerateEvt@Event,c
 38683  003EC8  0E00               	movlw	high _NewMdmEvtParserRequest
 38684  003ECA  6E02               	movwf	i2GenerateEvt@Event+1,c
 38685  003ECC  EC4E  F035         	call	i2_GenerateEvt	;wreg free
 38686                           
 38687                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 38688  003ED0  0E3A               	movlw	low _NewStringMdmTerminal
 38689  003ED2  6E01               	movwf	i2GenerateEvt@Event,c
 38690  003ED4  0E00               	movlw	high _NewStringMdmTerminal
 38691  003ED6  6E02               	movwf	i2GenerateEvt@Event+1,c
 38692  003ED8  EC4E  F035         	call	i2_GenerateEvt	;wreg free
 38693  003EDC                     i2l688:
 38694                           
 38695                           ;uart_drv.c: 427: }
 38696                           ;uart_drv.c: 429: RxState = ReadData;
 38697                           
 38698                           ;uart_drv.c: 424: else
 38699                           ;uart_drv.c: 425: {
 38700                           
 38701                           ;uart_drv.c: 422: }
 38702                           ;uart_drv.c: 423: }
 38703  003EDC  0E00               	movlw	0
 38704  003EDE  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38705                           
 38706                           ;uart_drv.c: 431: RxCounter = 0;
 38707  003EE0  0E00               	movlw	0
 38708  003EE2  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 38709  003EE4  0E00               	movlw	0
 38710  003EE6  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 38711                           
 38712                           ;uart_drv.c: 436: }
 38713                           
 38714                           ;uart_drv.c: 435: break;
 38715                           
 38716                           ;uart_drv.c: 434: default:
 38717                           
 38718                           ;uart_drv.c: 432: break;
 38719  003EE8  0012               	return	
 38720  003EEA                     i2l680:
 38721  003EEA  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 38722                           
 38723                           ; Switch size 1, requested type "space"
 38724                           ; Number of cases is 2, Range of values is 0 to 1
 38725                           ; switch strategies available:
 38726                           ; Name         Instructions Cycles
 38727                           ; simple_byte            7     4 (average)
 38728                           ;	Chosen strategy is simple_byte
 38729  003EEC  0A00               	xorlw	0	; case 0
 38730  003EEE  B4D8               	btfsc	status,2,c
 38731  003EF0  D7A4               	goto	i2l681
 38732  003EF2  0A01               	xorlw	1	; case 1
 38733  003EF4  A4D8               	btfss	status,2,c
 38734  003EF6  0012               	return	
 38735  003EF8  D7B8               	goto	i2l686
 38736  003EFA                     __end_of_Uart_MdmGsmGprsReadService:
 38737                           	opt stack 0
 38738                           tosu	equ	0xFFF
 38739                           tosh	equ	0xFFE
 38740                           tosl	equ	0xFFD
 38741                           pclatu	equ	0xFFB
 38742                           pclath	equ	0xFFA
 38743                           tblptru	equ	0xFF8
 38744                           tblptrh	equ	0xFF7
 38745                           tblptrl	equ	0xFF6
 38746                           tablat	equ	0xFF5
 38747                           prodh	equ	0xFF4
 38748                           prodl	equ	0xFF3
 38749                           intcon	equ	0xFF2
 38750                           intcon2	equ	0xFF1
 38751                           intcon3	equ	0xFF0
 38752                           indf0	equ	0xFEF
 38753                           postinc0	equ	0xFEE
 38754                           plusw0	equ	0xFEB
 38755                           fsr0h	equ	0xFEA
 38756                           fsr0l	equ	0xFE9
 38757                           wreg	equ	0xFE8
 38758                           indf1	equ	0xFE7
 38759                           postinc1	equ	0xFE6
 38760                           postdec1	equ	0xFE5
 38761                           plusw1	equ	0xFE3
 38762                           fsr1h	equ	0xFE2
 38763                           fsr1l	equ	0xFE1
 38764                           bsr	equ	0xFE0
 38765                           indf2	equ	0xFDF
 38766                           postinc2	equ	0xFDE
 38767                           postdec2	equ	0xFDD
 38768                           plusw2	equ	0xFDB
 38769                           fsr2h	equ	0xFDA
 38770                           fsr2l	equ	0xFD9
 38771                           status	equ	0xFD8
 38772                           
 38773 ;; *************** function i2_GenerateEvt *****************
 38774 ;; Defined at:
 38775 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38776 ;; Parameters:    Size  Location     Type
 38777 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 38778 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38779 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38780 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38781 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38782 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38783 ;; Auto vars:     Size  Location     Type
 38784 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 38785 ;; Return value:  Size  Location     Type
 38786 ;;                  1    wreg      enum E7699
 38787 ;; Registers used:
 38788 ;;		wreg, fsr2l, fsr2h, status,2
 38789 ;; Tracked objects:
 38790 ;;		On entry : 0/0
 38791 ;;		On exit  : 0/0
 38792 ;;		Unchanged: 0/0
 38793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38797 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38798 ;;Total ram usage:        3 bytes
 38799 ;; Hardware stack levels used:    1
 38800 ;; This function calls:
 38801 ;;		Nothing
 38802 ;; This function is called by:
 38803 ;;		_Uart_MdmGsmGprsReadService
 38804 ;; This function uses a non-reentrant model
 38805 ;;
 38806                           
 38807                           	psect	text192
 38808  006A9C                     __ptext192:
 38809                           	opt stack 0
 38810  006A9C                     i2_GenerateEvt:
 38811                           	opt stack 8
 38812                           
 38813                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38814                           
 38815                           ;incstack = 0
 38816  006A9C  0E00               	movlw	0
 38817  006A9E  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38818                           
 38819                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38820  006AA0  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 38821  006AA4  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 38822  006AA8  0E02               	movlw	2
 38823  006AAA  6EDF               	movwf	indf2,c
 38824                           
 38825                           ;os_ser.c: 83: EventStatus = EventSent;
 38826  006AAC  0E02               	movlw	2
 38827  006AAE  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38828  006AB0  0012               	return	
 38829  006AB2                     __end_ofi2_GenerateEvt:
 38830                           	opt stack 0
 38831                           tosu	equ	0xFFF
 38832                           tosh	equ	0xFFE
 38833                           tosl	equ	0xFFD
 38834                           pclatu	equ	0xFFB
 38835                           pclath	equ	0xFFA
 38836                           tblptru	equ	0xFF8
 38837                           tblptrh	equ	0xFF7
 38838                           tblptrl	equ	0xFF6
 38839                           tablat	equ	0xFF5
 38840                           prodh	equ	0xFF4
 38841                           prodl	equ	0xFF3
 38842                           intcon	equ	0xFF2
 38843                           intcon2	equ	0xFF1
 38844                           intcon3	equ	0xFF0
 38845                           indf0	equ	0xFEF
 38846                           postinc0	equ	0xFEE
 38847                           plusw0	equ	0xFEB
 38848                           fsr0h	equ	0xFEA
 38849                           fsr0l	equ	0xFE9
 38850                           wreg	equ	0xFE8
 38851                           indf1	equ	0xFE7
 38852                           postinc1	equ	0xFE6
 38853                           postdec1	equ	0xFE5
 38854                           plusw1	equ	0xFE3
 38855                           fsr1h	equ	0xFE2
 38856                           fsr1l	equ	0xFE1
 38857                           bsr	equ	0xFE0
 38858                           indf2	equ	0xFDF
 38859                           postinc2	equ	0xFDE
 38860                           postdec2	equ	0xFDD
 38861                           plusw2	equ	0xFDB
 38862                           fsr2h	equ	0xFDA
 38863                           fsr2l	equ	0xFD9
 38864                           status	equ	0xFD8
 38865                           
 38866 ;; *************** function _Rtcc_RtcIsr *****************
 38867 ;; Defined at:
 38868 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 38869 ;; Parameters:    Size  Location     Type
 38870 ;;		None
 38871 ;; Auto vars:     Size  Location     Type
 38872 ;;		None
 38873 ;; Return value:  Size  Location     Type
 38874 ;;                  1    wreg      void 
 38875 ;; Registers used:
 38876 ;;		wreg, status,2, status,0
 38877 ;; Tracked objects:
 38878 ;;		On entry : 0/0
 38879 ;;		On exit  : 0/0
 38880 ;;		Unchanged: 0/0
 38881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38886 ;;Total ram usage:        0 bytes
 38887 ;; Hardware stack levels used:    1
 38888 ;; This function calls:
 38889 ;;		Nothing
 38890 ;; This function is called by:
 38891 ;;		_HighPriorityIsr
 38892 ;; This function uses a non-reentrant model
 38893 ;;
 38894                           
 38895                           	psect	text193
 38896  006BE2                     __ptext193:
 38897                           	opt stack 0
 38898  006BE2                     _Rtcc_RtcIsr:
 38899                           	opt stack 10
 38900                           
 38901                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 38902                           
 38903                           ;incstack = 0
 38904  006BE2  90A4               	bcf	4004,0,c	;volatile
 38905  006BE4  0012               	return	
 38906  006BE6                     __end_of_Rtcc_RtcIsr:
 38907                           	opt stack 0
 38908                           tosu	equ	0xFFF
 38909                           tosh	equ	0xFFE
 38910                           tosl	equ	0xFFD
 38911                           pclatu	equ	0xFFB
 38912                           pclath	equ	0xFFA
 38913                           tblptru	equ	0xFF8
 38914                           tblptrh	equ	0xFF7
 38915                           tblptrl	equ	0xFF6
 38916                           tablat	equ	0xFF5
 38917                           prodh	equ	0xFF4
 38918                           prodl	equ	0xFF3
 38919                           intcon	equ	0xFF2
 38920                           intcon2	equ	0xFF1
 38921                           intcon3	equ	0xFF0
 38922                           indf0	equ	0xFEF
 38923                           postinc0	equ	0xFEE
 38924                           plusw0	equ	0xFEB
 38925                           fsr0h	equ	0xFEA
 38926                           fsr0l	equ	0xFE9
 38927                           wreg	equ	0xFE8
 38928                           indf1	equ	0xFE7
 38929                           postinc1	equ	0xFE6
 38930                           postdec1	equ	0xFE5
 38931                           plusw1	equ	0xFE3
 38932                           fsr1h	equ	0xFE2
 38933                           fsr1l	equ	0xFE1
 38934                           bsr	equ	0xFE0
 38935                           indf2	equ	0xFDF
 38936                           postinc2	equ	0xFDE
 38937                           postdec2	equ	0xFDD
 38938                           plusw2	equ	0xFDB
 38939                           fsr2h	equ	0xFDA
 38940                           fsr2l	equ	0xFD9
 38941                           status	equ	0xFD8
 38942                           
 38943 ;; *************** function _Mcu_Int1Isr *****************
 38944 ;; Defined at:
 38945 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38946 ;; Parameters:    Size  Location     Type
 38947 ;;		None
 38948 ;; Auto vars:     Size  Location     Type
 38949 ;;		None
 38950 ;; Return value:  Size  Location     Type
 38951 ;;                  1    wreg      void 
 38952 ;; Registers used:
 38953 ;;		wreg, status,2, status,0
 38954 ;; Tracked objects:
 38955 ;;		On entry : 0/0
 38956 ;;		On exit  : 0/0
 38957 ;;		Unchanged: 0/0
 38958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38963 ;;Total ram usage:        0 bytes
 38964 ;; Hardware stack levels used:    1
 38965 ;; This function calls:
 38966 ;;		Nothing
 38967 ;; This function is called by:
 38968 ;;		_HighPriorityIsr
 38969 ;; This function uses a non-reentrant model
 38970 ;;
 38971                           
 38972                           	psect	text194
 38973  006BE6                     __ptext194:
 38974                           	opt stack 0
 38975  006BE6                     _Mcu_Int1Isr:
 38976                           	opt stack 10
 38977                           
 38978                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 38979                           
 38980                           ;incstack = 0
 38981  006BE6  90F0               	bcf	intcon3,0,c	;volatile
 38982  006BE8  0012               	return	
 38983  006BEA                     __end_of_Mcu_Int1Isr:
 38984                           	opt stack 0
 38985                           tosu	equ	0xFFF
 38986                           tosh	equ	0xFFE
 38987                           tosl	equ	0xFFD
 38988                           pclatu	equ	0xFFB
 38989                           pclath	equ	0xFFA
 38990                           tblptru	equ	0xFF8
 38991                           tblptrh	equ	0xFF7
 38992                           tblptrl	equ	0xFF6
 38993                           tablat	equ	0xFF5
 38994                           prodh	equ	0xFF4
 38995                           prodl	equ	0xFF3
 38996                           intcon	equ	0xFF2
 38997                           intcon2	equ	0xFF1
 38998                           intcon3	equ	0xFF0
 38999                           indf0	equ	0xFEF
 39000                           postinc0	equ	0xFEE
 39001                           plusw0	equ	0xFEB
 39002                           fsr0h	equ	0xFEA
 39003                           fsr0l	equ	0xFE9
 39004                           wreg	equ	0xFE8
 39005                           indf1	equ	0xFE7
 39006                           postinc1	equ	0xFE6
 39007                           postdec1	equ	0xFE5
 39008                           plusw1	equ	0xFE3
 39009                           fsr1h	equ	0xFE2
 39010                           fsr1l	equ	0xFE1
 39011                           bsr	equ	0xFE0
 39012                           indf2	equ	0xFDF
 39013                           postinc2	equ	0xFDE
 39014                           postdec2	equ	0xFDD
 39015                           plusw2	equ	0xFDB
 39016                           fsr2h	equ	0xFDA
 39017                           fsr2l	equ	0xFD9
 39018                           status	equ	0xFD8
 39019                           
 39020 ;; *************** function _Mcu_Int0Isr *****************
 39021 ;; Defined at:
 39022 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39023 ;; Parameters:    Size  Location     Type
 39024 ;;		None
 39025 ;; Auto vars:     Size  Location     Type
 39026 ;;		None
 39027 ;; Return value:  Size  Location     Type
 39028 ;;                  1    wreg      void 
 39029 ;; Registers used:
 39030 ;;		wreg, status,2, status,0
 39031 ;; Tracked objects:
 39032 ;;		On entry : 0/0
 39033 ;;		On exit  : 0/0
 39034 ;;		Unchanged: 0/0
 39035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39040 ;;Total ram usage:        0 bytes
 39041 ;; Hardware stack levels used:    1
 39042 ;; This function calls:
 39043 ;;		Nothing
 39044 ;; This function is called by:
 39045 ;;		_HighPriorityIsr
 39046 ;; This function uses a non-reentrant model
 39047 ;;
 39048                           
 39049                           	psect	text195
 39050  006BEA                     __ptext195:
 39051                           	opt stack 0
 39052  006BEA                     _Mcu_Int0Isr:
 39053                           	opt stack 10
 39054                           
 39055                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 39056                           
 39057                           ;incstack = 0
 39058  006BEA  92F2               	bcf	intcon,1,c	;volatile
 39059  006BEC  0012               	return	
 39060  006BEE                     __end_of_Mcu_Int0Isr:
 39061                           	opt stack 0
 39062                           tosu	equ	0xFFF
 39063                           tosh	equ	0xFFE
 39064                           tosl	equ	0xFFD
 39065                           pclatu	equ	0xFFB
 39066                           pclath	equ	0xFFA
 39067                           tblptru	equ	0xFF8
 39068                           tblptrh	equ	0xFF7
 39069                           tblptrl	equ	0xFF6
 39070                           tablat	equ	0xFF5
 39071                           prodh	equ	0xFF4
 39072                           prodl	equ	0xFF3
 39073                           intcon	equ	0xFF2
 39074                           intcon2	equ	0xFF1
 39075                           intcon3	equ	0xFF0
 39076                           indf0	equ	0xFEF
 39077                           postinc0	equ	0xFEE
 39078                           plusw0	equ	0xFEB
 39079                           fsr0h	equ	0xFEA
 39080                           fsr0l	equ	0xFE9
 39081                           wreg	equ	0xFE8
 39082                           indf1	equ	0xFE7
 39083                           postinc1	equ	0xFE6
 39084                           postdec1	equ	0xFE5
 39085                           plusw1	equ	0xFE3
 39086                           fsr1h	equ	0xFE2
 39087                           fsr1l	equ	0xFE1
 39088                           bsr	equ	0xFE0
 39089                           indf2	equ	0xFDF
 39090                           postinc2	equ	0xFDE
 39091                           postdec2	equ	0xFDD
 39092                           plusw2	equ	0xFDB
 39093                           fsr2h	equ	0xFDA
 39094                           fsr2l	equ	0xFD9
 39095                           status	equ	0xFD8
 39096                           tosu	equ	0xFFF
 39097                           tosh	equ	0xFFE
 39098                           tosl	equ	0xFFD
 39099                           pclatu	equ	0xFFB
 39100                           pclath	equ	0xFFA
 39101                           tblptru	equ	0xFF8
 39102                           tblptrh	equ	0xFF7
 39103                           tblptrl	equ	0xFF6
 39104                           tablat	equ	0xFF5
 39105                           prodh	equ	0xFF4
 39106                           prodl	equ	0xFF3
 39107                           intcon	equ	0xFF2
 39108                           intcon2	equ	0xFF1
 39109                           intcon3	equ	0xFF0
 39110                           indf0	equ	0xFEF
 39111                           postinc0	equ	0xFEE
 39112                           plusw0	equ	0xFEB
 39113                           fsr0h	equ	0xFEA
 39114                           fsr0l	equ	0xFE9
 39115                           wreg	equ	0xFE8
 39116                           indf1	equ	0xFE7
 39117                           postinc1	equ	0xFE6
 39118                           postdec1	equ	0xFE5
 39119                           plusw1	equ	0xFE3
 39120                           fsr1h	equ	0xFE2
 39121                           fsr1l	equ	0xFE1
 39122                           bsr	equ	0xFE0
 39123                           indf2	equ	0xFDF
 39124                           postinc2	equ	0xFDE
 39125                           postdec2	equ	0xFDD
 39126                           plusw2	equ	0xFDB
 39127                           fsr2h	equ	0xFDA
 39128                           fsr2l	equ	0xFD9
 39129                           status	equ	0xFD8
 39130                           
 39131                           	psect	text196
 39132  000000                     __ptext196:
 39133                           	opt stack 0
 39134                           tosu	equ	0xFFF
 39135                           tosh	equ	0xFFE
 39136                           tosl	equ	0xFFD
 39137                           pclatu	equ	0xFFB
 39138                           pclath	equ	0xFFA
 39139                           tblptru	equ	0xFF8
 39140                           tblptrh	equ	0xFF7
 39141                           tblptrl	equ	0xFF6
 39142                           tablat	equ	0xFF5
 39143                           prodh	equ	0xFF4
 39144                           prodl	equ	0xFF3
 39145                           intcon	equ	0xFF2
 39146                           intcon2	equ	0xFF1
 39147                           intcon3	equ	0xFF0
 39148                           indf0	equ	0xFEF
 39149                           postinc0	equ	0xFEE
 39150                           plusw0	equ	0xFEB
 39151                           fsr0h	equ	0xFEA
 39152                           fsr0l	equ	0xFE9
 39153                           wreg	equ	0xFE8
 39154                           indf1	equ	0xFE7
 39155                           postinc1	equ	0xFE6
 39156                           postdec1	equ	0xFE5
 39157                           plusw1	equ	0xFE3
 39158                           fsr1h	equ	0xFE2
 39159                           fsr1l	equ	0xFE1
 39160                           bsr	equ	0xFE0
 39161                           indf2	equ	0xFDF
 39162                           postinc2	equ	0xFDE
 39163                           postdec2	equ	0xFDD
 39164                           plusw2	equ	0xFDB
 39165                           fsr2h	equ	0xFDA
 39166                           fsr2l	equ	0xFD9
 39167                           status	equ	0xFD8
 39168                           
 39169                           	psect	rparam
 39170  0000                     tosu	equ	0xFFF
 39171                           tosh	equ	0xFFE
 39172                           tosl	equ	0xFFD
 39173                           pclatu	equ	0xFFB
 39174                           pclath	equ	0xFFA
 39175                           tblptru	equ	0xFF8
 39176                           tblptrh	equ	0xFF7
 39177                           tblptrl	equ	0xFF6
 39178                           tablat	equ	0xFF5
 39179                           prodh	equ	0xFF4
 39180                           prodl	equ	0xFF3
 39181                           intcon	equ	0xFF2
 39182                           intcon2	equ	0xFF1
 39183                           intcon3	equ	0xFF0
 39184                           indf0	equ	0xFEF
 39185                           postinc0	equ	0xFEE
 39186                           plusw0	equ	0xFEB
 39187                           fsr0h	equ	0xFEA
 39188                           fsr0l	equ	0xFE9
 39189                           wreg	equ	0xFE8
 39190                           indf1	equ	0xFE7
 39191                           postinc1	equ	0xFE6
 39192                           postdec1	equ	0xFE5
 39193                           plusw1	equ	0xFE3
 39194                           fsr1h	equ	0xFE2
 39195                           fsr1l	equ	0xFE1
 39196                           bsr	equ	0xFE0
 39197                           indf2	equ	0xFDF
 39198                           postinc2	equ	0xFDE
 39199                           postdec2	equ	0xFDD
 39200                           plusw2	equ	0xFDB
 39201                           fsr2h	equ	0xFDA
 39202                           fsr2l	equ	0xFD9
 39203                           status	equ	0xFD8
 39204                           
 39205                           	psect	temp
 39206  000042                     btemp:
 39207                           	opt stack 0
 39208  000042                     	ds	1
 39209  0000                     int$flags	set	btemp
 39210  0000                     wtemp6	set	btemp+1
 39211                           tosu	equ	0xFFF
 39212                           tosh	equ	0xFFE
 39213                           tosl	equ	0xFFD
 39214                           pclatu	equ	0xFFB
 39215                           pclath	equ	0xFFA
 39216                           tblptru	equ	0xFF8
 39217                           tblptrh	equ	0xFF7
 39218                           tblptrl	equ	0xFF6
 39219                           tablat	equ	0xFF5
 39220                           prodh	equ	0xFF4
 39221                           prodl	equ	0xFF3
 39222                           intcon	equ	0xFF2
 39223                           intcon2	equ	0xFF1
 39224                           intcon3	equ	0xFF0
 39225                           indf0	equ	0xFEF
 39226                           postinc0	equ	0xFEE
 39227                           plusw0	equ	0xFEB
 39228                           fsr0h	equ	0xFEA
 39229                           fsr0l	equ	0xFE9
 39230                           wreg	equ	0xFE8
 39231                           indf1	equ	0xFE7
 39232                           postinc1	equ	0xFE6
 39233                           postdec1	equ	0xFE5
 39234                           plusw1	equ	0xFE3
 39235                           fsr1h	equ	0xFE2
 39236                           fsr1l	equ	0xFE1
 39237                           bsr	equ	0xFE0
 39238                           indf2	equ	0xFDF
 39239                           postinc2	equ	0xFDE
 39240                           postdec2	equ	0xFDD
 39241                           plusw2	equ	0xFDB
 39242                           fsr2h	equ	0xFDA
 39243                           fsr2l	equ	0xFD9
 39244                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        167
    BSS         2377
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      3     256
    BANK4           192      4     192
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    findEmptySpot@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    isNumberInMemory@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> triggerCmdFsm@numberInMemory(BANK1[1]), delCmdFsm@numberInMemory(BANK1[1]), addCmdFsm@numberInMemory(BANK1[1]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> readBuffer(BANK3[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), callerNumber(BANK4[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 3775
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), RAM(DATA[3775]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), STR_15(CODE[20]), 
		 -> STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), STR_5(CODE[10]), 
		 -> Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> readBuffer(BANK3[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), parseCommand@addNumberCmd(BANK0[4]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8954 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), callerNumber(BANK4[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerRelay->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _triggerCmdFsm->_isNumberInMemory
    _initFsm->_initEeprom
    _delCmdFsm->_isNumberInMemory
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_InitializeTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1270323
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1265692
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  632939
                                              0 BANK3      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  632753
                                              0 BANK3      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  366969
                       _Eeprom_Reset
                _Led_SetLedBlinkTime
                          _addCmdFsm
                          _delCmdFsm
                          _detectCmd
                            _initFsm
                      _triggerCmdFsm
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        6     4      2   74374
                                              5 BANK1      6     4      2
                     _isMasterNumber
                   _isNumberInMemory
                    _secondsAppTimer
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         2     2      0    4067
                                             37 BANK0      2     2      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   85008
                                              3 BANK1      1     1      0
                    _GetCallerNumber
                   _Led_SetLedStatus
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15786
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11326
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           21    17      4   69389
                                              5 BANK1     21    17      4
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                            8     4      4   95379
                                              5 BANK1      8     4      4
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10236
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                     5     1      4   29454
                                              0 BANK1      5     1      4
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                       3     1      2   29117
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                        3     1      2   25863
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      3     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      C0      14      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A2       8        0.0%
DATA                 0      0     CC2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr  2 14:13:23 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5ACA  
                 delCmdFsm@masterOpResult 0117                                _USB_SD_Ptr FC1C  
                          ??_getSetupCall 0083                 __size_of_Mdm_SetSmsFormat 0050  
                         ?_isMasterNumber 0100                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 6918  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 258A                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 21FA  
                                     l203 2202                                       l205 224A  
                                     l206 2270                                       l208 2278  
                                     l160 1FDE                                       l209 2298  
                                     l161 1EB4                                       l162 201C  
                                     l170 1F7C                                       l171 1F92  
                                     l163 1EC0                                       l315 48F8  
                                     l323 48C4                                       l164 1F00  
                                     l316 486E                                       l420 4F3A  
                                     l500 4D54                                       l173 1F96  
                                     l325 48DE                                       l421 4F5A  
                                     l237 6924                                       l174 1F9E  
                                     l166 1F0E                                       l318 4878  
                                     l422 4F66               __end_of_USBStdGetDscHandler 2D02  
                                     l510 4D26                                       l502 4CE6  
                                     l175 1FAA                                       l167 1F36  
                                     l319 489E                                       l423 4F72  
                                     l511 4D16                                       l503 4CD6  
                                     l192 22A2                                       l176 1FC0  
                                     l416 4F86                                       l424 4F7E  
                                     l512 4D3A                                       l504 4CFC  
                                     l520 5FD4                                       l193 2182  
                                     l169 1F48                                       l417 4F2C  
                                     l441 17EC                                       l513 4D1A  
                                     l505 4CDA                                       l521 5FA0  
                                     l194 22DA                                       l418 4FB4  
                                     l442 15F4                                       l514 4D20  
                                     l506 4CE0                                       l530 31D6  
                                     l195 218E                                       l179 1FCC  
                                     l419 4F34                                       l523 5FBA  
                                     l531 323C                                       l196 21CE  
                                     l700 61F2                                       l444 163C  
                                     l532 3202                                       l445 1684  
                                     l541 68C2                                       l198 21DC  
                                     l446 16CC                                       l199 21F0  
                                     l631 2A18                                       l447 1714  
                                     l448 175C                                       l528 3242  
                                     l633 2A90                                       l625 29A4  
                                     l449 17A4                                       l529 322E  
                                     l538 68C6                                       l546 3F52  
                                     l651 5F24                                       l707 6316  
                                     l627 29C8                                       l715 628A  
                                     l539 68BE                                       l547 3F6E  
                                     l660 5F48                                       l652 5F1E  
                                     l716 6260                                       l709 6330  
                                     l629 29F0                                       l718 6278  
                                     l639 690A                                       l832 6686  
                                     l844 4026                                       l668 0C44  
                                     _BDT 000400                                       l790 6940  
                                     l855 53F4                                       l775 2E24  
                                     l864 514C                                       l856 539A  
                                     l857 540E                                       l698 61D6  
                                     l858 53CA                                       l867 515E  
                                     l982 215A                                       l983 2022  
                                     l985 2048                                       l987 2064  
                                     l988 209A                                       l989 210E  
                                     l998 2134                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 471A  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 650E                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 6254  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2020  
           findEmptySpot@positionInMemory 0100             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 5FE8           InitGprsNetwork@GprsNetInitState 01E8  
                                    l1100 1B1A                                      l1101 1B66  
                                    l1013 6002                                      l1110 5E28  
                             RiSm@Counter 02DE                                      l1031 36D8  
                                    l1111 5E3C                                      l1032 3712  
                                    l2000 58B8                                      l1033 3738  
                                    l1009 601E                                      l1121 5E94  
                                    l1027 377A                                      l1035 3760  
                                    l1107 5E4E                                      l2100 2812  
                                    l1220 0DD0                                      l1028 36C6  
                                    l1052 1E86                                      l1060 1E58  
                                    l1108 5E12                                      l2101 2706  
                                    l1053 1DA0                                      l2102 278A  
                                    l1222 10B0                                      l1230 0FB8  
                                    l1070 2BB6                                      l2006 58AC  
                                    l2111 3302                                      l1231 0FBC  
                                    l1223 0DE8                                      l1071 2AAE  
                                    l1055 1EA0                                      l2112 324A  
                                    l1232 1000                                      l1224 0E22  
                                    l1056 1DD2                                      l1152 67C2  
                                    l1136 679E                                      l2008 58B2  
                                    l2113 331E                                      l2121 498E  
                                    l1241 106E                                      l1225 0E96  
                                    l1129 5710                                      l2114 3268  
                                    l2122 4920                                      l1226 0E5E  
                                    l1074 2ACA                                      l1058 1E22  
                                    l2123 49B6                                      l1219 1078  
                                    l1075 2AE2                                      l1091 1B80  
                                    l2116 32D8                                      l2124 4930  
                                    l1252 0A54                                      l1260 073E  
                                    l1236 1010                                      l1228 0F3E  
                                    l1092 19FE                                      l1412 6308  
                                    l1156 6498                                      l1404 5BBA  
                                    l2220 51EA                                      l2125 4942  
                                    l1261 06F6                                      l1253 05F4  
                                    l1237 1054                                      l1229 0F78  
                                    l2045 5B42                                      l2037 5C64  
                                    l3101 38C2                                      l1405 5B7A  
                                    l2221 5170                                      l2142 661A  
                                    l2126 495C                                      l1078 2B54  
                                    l2046 5B74                                      l1422 68AE  
                                    l2134 3D52                                      l2143 6608  
                                    l1255 0AB6                                      l1263 07F2  
                                    l1095 1A1A                                      l2151 5CB0  
                                    l2039 5C70                                      l1407 5BB4  
                                    l2135 3C9A                                      l2223 51D6  
                                    l2128 496A                                      l1280 09C4  
                                    l1272 092A                                      l1264 082C  
                                    l1256 060C                                      l1096 1AD0  
                                    l2152 5C7A                                      l1440 3AE0  
                                    l3120 52CC                                      l3104 3912  
                                    l2145 660E                                      l2129 4978  
                                    l1281 0A32                                      l1273 096E  
                                    l1265 0856                                      l1257 0646  
                                    l1097 1AF4                                      l1417 624E  
                                    l1441 3A2A                                      l3121 52C4  
                                    l3105 38D4                                      l2137 3CA8  
                                    l2146 6614                                      l1266 0890  
                                    l1258 0680                                      l2250 5D86  
                                    l2154 5C8C                                      l1442 3AF6  
                                    l3130 542A                                      l2410 01E2  
                                    l1267 08CA                                      l1259 06BA  
                                    l2251 5DAC                                      l2155 5C9E  
                                    l1443 3A48                                      l3131 5436  
                                    l3107 3946                                      l1291 60AE  
                                    l1268 090E                                      l3124 52EC  
                                    l2412 01AE                                      l1700 37CA  
                                    l1604 25D4                                      l1620 1BF2  
                                    l1285 0A42                                      l1277 097E  
                                    l1445 3AA6                                      l3125 52F6  
                                    l3117 529E                                      l3133 544C  
                                    l2405 05D2                                      l2413 019C  
                                    l1621 1C02                                      l1382 41F2  
                                    l2262 64CC                                      l1286 0A4A  
                                    l1278 09AA                                      l1446 3ABA  
                                    l3126 5304                                      l3118 52AE  
                                    l3134 5444                                      l2406 00E2  
                                    l1702 382E                                      l1606 25FC  
                                    l1630 1C9E                                      l1622 1C0A  
                                    l2510 67FC                                      l1294 607C  
                                    l1391 41BC                                      l1383 4154  
                                    l2263 64B8                                      l2423 0392  
                                    l1703 37F4                                      l1631 1CAA  
                                    l1623 1C20                                      l1615 1BD6  
                                    l2511 67EE                                      l1384 4176  
                                    l3320 5332                                      l2256 589C  
                                    l1448 3AD8                                      l2424 0326  
                                    l1608 2638                                      l1640 1D26  
                                    l1624 1C2C                                      l1616 1BCC  
                                    l2600 3534                                      l1393 41D8  
                                    l2257 585C                                      l2249 5DB0  
                                    l3137 5464                                      l2441 041E  
                                    l2425 02B4                                      l2409 0152  
                                    l1713 2E84                                      l1633 1CBE  
                                    l1617 1BCA                                      l2513 67F6  
                                    l1394 41E4                                      l1386 4198  
                                    l2098 27FC                                      l3138 546E  
                                    l1650 431C                                      l2450 0524  
                                    l2426 0250                                      l2418 01D0  
                                    l3402 65BE                                      l1706 3870  
                                    l1714 2E5E                                      l1626 1C54  
                                    l2602 3556                                      l3323 5372  
                                    l2099 26DE                                      l3139 547C  
                                    l2451 0570                                      l2443 045E  
                                    l2435 0402                                      l3403 65AC  
                                    l1707 3836                                      l1643 6118  
                                    l1811 35FA                                      l3324 5380  
                                    l2700 47DA                                      l1652 4378  
                                    l2444 0578                                      l2436 03D2  
                                    l2428 0304                                      l1716 2EFC  
                                    l1644 6128                                      l1740 2CDA  
                                    l1812 3600                                      l1636 1CE4  
                                    l1628 1C68                                      l2604 3578  
              USBConfigureEndpoint@handle 0083                                      l1389 41A0  
                                    l2429 02C6                                      l1717 2EE2  
                                    l1733 2CEA                                      l1725 337E  
                                    l1813 3606                                      l1629 1C74  
                                    l2702 47F6                                      l2446 04B4  
                                    l2470 10FA                                      l1902 464A  
                                    l1830 143E                                      l1742 2CE2  
                                    l1734 2BE6                                      l1750 45A8  
                                    l1814 361A                                      l1638 1D08  
                                    l2606 3592                                      l3319 533E  
                                    l2703 481E                                      l2447 0478  
                                    l1903 45E4                                      l1831 1440  
                                    l1751 452A                                      l1727 33F2  
                                    l1815 3620                                      l1648 42F2  
                                    l3600 3454                                      l1840 153E  
                                    l1832 145C                                      l1736 2BFA  
                                    l1752 4530                                      l1808 3680  
                                    l1760 6100                                      l2465 131E  
                                    l2481 128E                                      l1905 45FC  
                                    l1841 15BA                                      l1825 137E  
                                    l1737 2C82                                      l1753 4550  
                                    l1817 3626                                      l1809 35F0  
                                    l1673 4B4E                                      l1761 60FE  
                                    l2570 2FF0                                      l2706 4822  
                                    l3098 3880                                      l2466 10B8  
                                    l1906 460A                                      l1834 14EA  
                                    l1826 1384                                      l1746 4592  
                                    l1818 3644                                      l2490 69CC  
                                    l2571 2FEC                                      l2731 4A1E  
                                    l2707 482E                                      l3099 387A  
                                    l3291 475E                                      l3603 34B4  
                                    l3531 5990                                      l2483 12F8  
                                    l2475 110E                                      l1667 3DAC  
                                    l1907 4628                                      l1739 2C8A  
                                    l1747 4518                                      l1819 3660  
                                    l1675 4B68                                      l3372 5CE8  
                                    l2820 3BC6                                      l2660 4FF4  
                                    l1924 4DF6                                      l3292 47A0  
                                    l3604 346C                                      l3532 5986  
                                    l2468 10DE                                      l1908 4640  
                                    l1844 1570                                      l1836 14B2  
                                    l1828 13F6                                      l1684 30DA  
                                    l3373 5CE0                                      l2821 3B2C  
                                    l2733 4A4A                                      l2653 502C  
                                    l2661 5008                                      l2901 3A22  
                                    l3285 616E                                      l3605 3484  
                                    l2485 1318                                      l2477 112E  
                                    l1837 14D0                                      l1685 3082  
                                    l2493 69C6                                      l2750 5840  
                                    l2574 302C                                      l2670 505E  
                                    l2734 4A5A                                      l2662 5020  
                                    l2654 4FC2                                      l2902 3988  
                                    l3382 61A4                                      l3606 3494  
                                    l1846 15C6                                      l1774 4F14  
                                    l2815 3BAC                                      l2911 39FA  
                                    l3279 688E                                      l1927 4DA4  
                                    l3383 619C                                      l3543 62A4  
                                    l2479 114E                                      l1679 4C9E  
                                    l1839 1532                                      l1775 4F0E  
                                    l2591 35CE                                      l3376 5D08  
                                    l2760 44F8                                      l2816 3B0E  
                                    l2584 4BFC                                      l2672 50A4  
                                    l1928 4DD0                                      l3640 6706  
                                    l3528 5976                                      l3544 629E  
                                    l1960 2892                                      l1952 283A  
                                    l1768 63F2                                      l2592 34FE  
                                    l3377 5D12                                      l2761 4474  
                                    l2833 3BA2                                      l2817 3B28  
                                    l2585 4C32                                      l2681 68F2  
                                    l1929 4DAA                                      l3289 4722  
                                    l3537 6554                                      l3561 1874  
                                    l3609 34F2                                      l2921 3BD6  
                                    l3529 5970                                      l1793 4248  
                                    l1785 5726                                      l1689 3104  
                                    l1769 63F0                                      l2762 4494  
                                    l2578 3056                                      l2674 50DA  
                                    l3386 61BC                                      l3538 654A  
                                    l3570 18E8                                      l2922 3BF0  
                                    l1970 2946                                      l1962 28EA  
                                    l1954 2848                                      l1698 37C0  
                                    l1794 424E                                      l2747 5808  
                                    l2827 3B54                                      l2675 50AC  
                                    l2659 5048                                      l3387 61C6  
                                    l3635 65F8                                      l3563 18C8  
                                    l2923 3C52                                      l1971 294A  
                                    l1963 28B2                                      l1795 42CA  
                                    l1787 5774                                      l2595 35A4  
                                    l2828 3B8C                                      l2860 43E0  
                                    l2676 50B8                                      l2908 39BC  
                                    l3572 1902                                      l3652 6380  
                                    l2932 3C72                                      l1956 287C  
                                    l1796 4290                                      l3396 6066  
                                    l2596 3518                                      l2749 583A  
                                    l2765 4506                                      l2861 441C  
                                    l2669 50C6                                      l2685 5EEC  
                                    l2909 39D4                                      l3645 684A  
                                    l3397 6044                                      l2766 44A4  
                                    l2758 4468                                      l2854 443A  
                                    l2926 3BF6                                      l1966 292C  
                                    l1798 42B0                                      l2791 4E8C  
                                    l2855 43C2                                      l2687 5EF8  
                                    l3583 6A3E                                      l3575 1914  
                                    l3559 185C                                      l1967 28F4  
                                    l1959 288E                                      l2599 352A  
                                    l2792 4E4C                                      l2784 4E12  
                                    l2776 55D0                                      l2768 44F0  
                                    l2856 43DC                __size_of_Mdm_IsSmsReceived 0024  
                                    l2696 4846                                      l3576 1980  
                                    l3656 6A26                                      l2928 3C3E  
                                    l1992 676E                                _Led1OutSts 01F9  
                                    l2793 4E6A                                      l2697 47CC  
                                    l3569 18D8                                      l2929 3C20  
                                    l1993 675E                                      l2946 5A2C  
                                    l2786 4E7E                                      l2866 4430  
                                    l3578 19A6                                      l2947 5A40  
                                    l2787 4E1E                                      l2859 444E  
                                    l2699 4866                                      l3579 19E0  
                                    l1995 6764                                      l2788 4E3E  
                                    l3597 342C                                      l3598 3426  
                                    l2896 3A02                                      l2889 644C  
                                    l2897 3964                                      l2898 397E  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F7  
                              _Led3OutSts 01F5                     ??_USBCtrlTrfTxService 007D  
                                    u9205 5FC4                                      u9206 5FC6  
                                    u9215 5FD0                                      _UCFG 000F39  
                                    u9216 5FD2                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u9185 5FAA  
                                    u9186 5FAC                                      u9195 5FB6  
                                    _UEIE 000F37                                      u9196 5FB8  
                __size_of_Uart_Uart1RxIsr 0010                                      _UEIR 000F63  
                                    _UCON 000F65                                _AlarmEvent 01F4  
                          ?_StopCondition 0001                              _triggerRelay 6438  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 6BBE  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
            findEmptySpot@currentPosition 00E1    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 003A  
                                    _atoi 3878                                      _main 6B6A  
                         ??_Mdm_IsRinging 0081                                      _itoa 6148  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 64A4  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0314                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 471A  
                                    _xtoi 3416                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 6BC6               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4F26               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 6294  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_Eeprom_Read 5C74  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 6A5A                             _isNumberValid 57E2  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
        isNumberInMemory@positionInMemory 0102                __end_of_USBCheckStdRequest 36C4  
                         _Rtcm_SystemDate 0300                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 6AFC         __size_of_GetLastInteractionNumber 000C  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                 ?_GetLastInteractionNumber 007D  
                          _GetElapsedTime 3FC2             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
            isNumberInMemory@currentState 00C5                       StringCopy@SourceStr 0085  
             __end_of_OsAlrm_ClearOsAlarm 5B22                  Eeprom_Write@SlaveAddress 0094  
                   addCmdFsm@currentState 01D5                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
              waitSetupCall@isCallArrived 0093                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 0091                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 6310  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDAB  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DB                                     l13023 65AC  
                                   l13061 37CA                                     l13233 3376  
                                   l12293 6924                                     l14217 5800  
                                   l14255 4A5A                                     l14511 4F40  
                                   l14079 390E                                     l16041 1CB6  
                                   l15405 3242                                     l15531 1D98  
                                   l14637 64EC                                     l14725 2630  
                                   l15553 1E52                                     l15723 0FB0  
                                   l13897 6044                                     l14697 25CC  
                                   l16661 5502                                     l16673 2D0C  
                                   l15889 09A4                                     l16991 58D2  
                                   l16993 5902                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 530E                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FEFA  
                                   STR_14 FEA8                                     STR_31 FFAA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFD8  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_17 FF83                                     STR_26 FE86  
                                   STR_18 FF90                                     STR_27 FF0D  
                                   STR_28 FFB6                           __end_of___awmod 5486  
                                   STR_29 FF2F                             _triggerCmdFsm 3950  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 5392  
                                   ?_utoa 008A                                     u12200 5CEC  
                         ___awdiv@divisor 007F                                     u12230 61A8  
                                   u12150 1554                                     u13210 189E  
                  __end_of_USBDeviceTasks 1D30                                     u12270 633E  
                                   u13230 18AE                                     u11710 385E  
                                   ?_xtoi 0083                                     u12600 65E8  
                                   u15001 1D6E                                     u12290 5894  
                                   u11570 5F1A                                     u11730 6200  
                                   u12540 5342                                     u13180 1864  
                                   u11900 2C4C                                     u11717 3854  
                                   u10845 66C8                                     u13510 5450  
                                   u11910 2C7C                                     u10846 66CA  
                                   u10855 66D4                                     u10856 66D6  
                                   u12297 588A                                     u10865 66E0  
                                   u13370 5844                                     u13450 52D0  
                                   u14410 59B8                                     u11690 381C  
                                   u11930 2CCE                                     u10866 66E2  
                                   u12715 6AC0                                     u11907 2C42  
                                   u12716 6AC2                                     u12580 6702  
                                   u11860 33AA                                     u11917 2C72  
                                   u12830 5DBC                                     u15070 1EA6  
                                   u12670 6364                                     u14350 04BE  
                                   u13545 5F6E                                     u13705 0B9E  
                                   u14417 59AE                                     u11697 3812  
                                   u11937 2CC4                                     u12770 29EC  
                                   u12690 6370                 ?_USBCtrlEPServiceComplete 0001  
                                   u16220 442C                                     u14540 4FD2  
                                   u13725 0C78                                     u16230 397A  
                                   u14470 3C8A                                     u13830 25F0  
                                   u13735 0C98                                     u16160 3B9C  
                                   u12960 4D80                                     u13745 0D22  
                                   u13665 6A80                                     u16401 51C8  
                                   u16170 43A4                                     u14490 2FE8  
                                   u13666 6A82                                     u16411 51E0  
                                   u14820 48D6                                     u14900 20C2  
                                   u13860 2694                                     u13685 0AF4  
                                   u14830 48F0                                     u16270 39B8  
                                   u13695 0B14                                     u14920 20D6  
                                   u15750 1D2C                                     u14855 6A6A  
                                   u14856 6A6E                                     u15840 28DA  
                                   u16528 2DD8                                     u14785 54EA  
                                   u16529 2E06                                     u15931 57D8  
                                   u14795 6AD4                                     u15860 291C  
                                   u14796 6AD6                                     u14981 1D4A  
                                   u15870 2934                                     u14991 1D5C  
                                   u15847 28D0                                     u16488 5534  
                                   u16489 5562                           __end_of___lwdiv 5D1C  
                                   u15867 2912                           __end_of___lwmod 61D0  
               TurnOnModem@TurnOnMdmState 01F2                        ??_UpdateOsCounters 0019  
                                   i1l742 244C                                     i1l747 2588  
                                   i2l680 3EEA                                     i2l681 3E3A  
                                   i2l690 3E84                                     i2l682 3E48  
                                   i2l686 3E6A                                     i2l688 3EDC  
                                   i2l689 3EA4                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B7  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E4  
                                   _USTAT 000F64                   __end_of_LedStateMachine 49BC  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 4B9C                             _StringCompare 5D6E  
                                   _sd000 FE5B                                     _sd001 FE14  
                                   _sd002 FDEE            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3D64  
                             _ApnLenLocal 01EC                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 486C  
                         __end_of_isalpha 6602                           __end_of_isdigit 6896  
               saveNumberInMemory@address 0098                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0091  
                             _ClearBuffer 64A4                           __end_of_isspace 670E  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 6852                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 675C  
               __end_of_Rtcc_GetRtccValue 4FBA               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 5642  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 5B78                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 3C98                           __end_of_tolower 6A2A  
                     __end_of_Mcu_Int0Isr 6BEE                       __end_of_Mcu_Int1Isr 6BEA  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 6A42                      __end_of_Eeprom_Reset 5B78  
                  __end_of_GetElapsedTime 408A                     __end_of_UartSetConfig 5A1A  
                    __end_of_Eeprom_Write 5D6E                          delCmdFsm@smsText 0107  
                  __size_of_initGprsModem 0094                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 69DE                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2BD4                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 66BA  
                          _InitSchedTimer 6632                           __initialization 22DE  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 4914  
                    __end_of_I2c_ReadData 22DE                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 4216                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 34FC                              __end_of_atoi 3950  
                            __end_of_main 6B76                       StringCompare@Result 0085  
                            __end_of_itoa 618C                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01DC                              __end_of_utoa 47C4  
                            __end_of_xtoi 34FC                  __end_of_Rtcm_SetRtccDate 5C20  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6BAA              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D1                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE49                 __size_of_USBCtrlEPService 0094  
                          ?_triggerCmdFsm 0105                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4D66  
                           ?_initPreamble 007D                                _ReceiveEvt 6660  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 6B1C                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                      initFsm@isInitialized 0103  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 5392                              _cdc_mem_type 01DD  
                      ??_Mcu_ConfigExtInt 007D                          addCmdFsm@smsText 0107  
                       CheckModem@Timeout 03F2                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3EFA  
              _Uart_MdmGsmGprsReadService 3E30                __end_of_UsbDevice_MainTask 6780  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 68F8  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6918  
                   addCmdFsm@searchNumber 010C                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 5C20        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1412 6432  
                             _GenerateEvt 6A42                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
                   triggerRelay@isRelayOn 0086                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC30  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F3                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 56AE                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 6660                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 6BDE  
                              _UartConfig 0328                      __end_of_Mdm_MainTask 5E60  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CD  
                           ??_Term_MainSm 00A7                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 60C0  
                                  _SmsLen 00D3                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 5F9A                                    ___lmul 5A1A  
                    _I2cSlv_ReceiveI2cMsg 6214                        TurnOnModem@Counter 02D8  
                            ?_putUSBUSART 0083                                    ___wmul 670E  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5E60  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5C74  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4DFC  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
               isMasterNumber@phoneNumber 0100                         _USBEnableEndpoint 6104  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                       addCmdFsm@isComplete 0109  
                                  _memcpy 6032                    __size_of_HttpGetMethod 04D0  
                                  _memset 65A2                                    clear_0 2396  
                                  clear_1 23A8                                    clear_2 23B4  
                                  clear_3 23C0                                    clear_4 23CC  
                                  clear_5 23D8                                    clear_6 23E4  
                       parseCommand@F9030 FC22                                    clear_7 23F0  
                                  clear_8 23FC                                    clear_9 2408  
                       parseCommand@F9026 FC2A                         parseCommand@F9028 FC26  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E2  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01E9  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01EF                        ?_USBEnableEndpoint 0085  
                          ??_initPreamble 007F                                    _strcat 5966  
                                  _strcpy 6540                                    _strlen 6294  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 638A  
                HttpGetMethod@UartMessage 0100                                 ??_initFsm 00B0  
                           _initGprsModem 4FBA                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                     ModemEvtParser@F9110 03CD                       ModemEvtParser@F9112 03C8  
                     ModemEvtParser@F9114 03C3                       ModemEvtParser@F9116 04F2  
                            _CDCTxService 2824                       MdmCntSm@MdmCntState 002E  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC0E                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                              _callerNumber 04CF  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 6BD6                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 01FD                   __end_of_I2cSlv_MainTask 5BCC  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 6BEA                               _Mcu_Int1Isr 6BE6  
                    ?_Led_SetLedBlinkTime 007D                        __size_of_addCmdFsm 00D0  
                               ??_sprintf 0083                                 ??_tolower 007D  
                       parseCommand@state 0094                    __size_of_ScheduleTasks 0126  
                 delCmdFsm@receivedNumber 0105                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A7  
                    _controlTransferState 00CC                     __end_ofi1_GenerateEvt 6A9C  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 51FC  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0001  
                      _ExtInt1IsrCallback 02E0                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 2426  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 6BE2                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FB                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5F4C  
                        ??_isMasterNumber 00B0           I2cSlv_QueryI2cData@TimeoutTimer 034A  
                    Terminal@FormatOption 02EB                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 5848                            __pcstackBANK10 0A00  
                      __size_of_delCmdFsm 00BC                     I2cDummyTx@DummyBuffer 01FC  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D6  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DC                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 6148  
                             _InitNetwork 00D9                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK0 6BEE                              __pidataBANK1 6BF0  
                            __pidataBANK2 6B4C                              __pidataBANK3 638A  
                            __pidataBANK4 6B82                              __pidataBANK5 5DC0  
               __end_ofparseCommand@F9030 FC26                 __end_ofparseCommand@F9026 FC2E  
               __end_ofparseCommand@F9028 FC2A                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 61D0  
                     __size_of_CheckModem 0160                           ??_triggerCmdFsm 00B0  
              __end_of_Uart_ClearRxBuffer 650E             __size_of_USBConfigureEndpoint 0098  
             parseCommand@deleteNumberCmd 008C                   addCmdFsm@numberInMemory 010B  
                __size_of_InitializeTasks 0070                        __end_of_I2cDummyTx 69AA  
             __end_of_USBCtrlTrfInHandler 42D8                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 00BA  
                     __end_of_Term_MainSm 135A                 initGprsModem@currentState 01D8  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6A86  
                      __size_of_detectCmd 009C                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E3  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 6572                                _cdc_notice 044F  
                   __end_of_Tmr_TmrBPrSet 3248                     __end_of_waitSetupCall 5EFE  
                     __end_of_Rtcc_RtcIsr 6BE6                                _cdc_rx_len 00C9  
                       __end_of_MsgFormat FD22                                _cdc_tx_len 00C7  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 6438  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01DE  
                          ClearBuffer@Len 007F                           _secondsAppTimer 49BC  
        __end_of_GetLastInteractionNumber 6B82                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 66BA                    _USBStdGetStatusHandler 450C  
                       __end_of_SendSmsSm 1BAA                     __size_of_Eeprom_Reset 0056  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01EB  
                          _Rtcc_RtcConfig 4A5E                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 0088                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 6AB2  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 634E  
                 addCmdFsm@masterOpResult 010A              getSetupCall@isCalledReceived 0083  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 67EC                               _SetBaudRate 5F4C  
                           ?_savePreamble 0001                     __end_of_findEmptySpot 4E92  
               initGprsModem@modemCounter 03BF               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01ED                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 315A  
                               ?_TmrBInit 007D                             _CheckTxStatus 6BAA  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                 findEmptySpot@currentState 00C4  
                               ?_Terminal 0001                      Eeprom_Write@WriteSts 0092  
                                 ?___lmul 007D                              _Led_MainTask 3C98  
                          _Rtcc_UnlockRtc 6AFC                              _I2cBusStatus 01E5  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2D02                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2020                         __end_of_addCmdFsm 3BCA  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE49                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 4E92                     __end_of_UpdateSchFlag 698E  
                            _EepromBuffer 04B3                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00D7                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 2F4C                         __end_of_WriteByte 6BA0  
                      _USBCheckStdRequest 35E0                         _configDescriptor1 FDAB  
                            _Eeprom_Reset 5B22                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 049F                              _Eeprom_Write 5D1C  
                   __size_of_getSetupCall 0020               __end_of_USBCtrlTrfTxService 3878  
                     _USBStdSetCfgHandler 3330                         __end_of_delCmdFsm 4452  
                 __size_of_ConfigureModem 00DC                    I2cSlv_QueryI2cData@Ret 01E2  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 668E                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4AFE  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2180  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4152                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DA            __end_of_Pm_DsReleasePinControl 6BCC  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 00E4                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E0                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 01F3                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FA                       _I2cSlv_QueryI2cData 3A28  
                                 _Led2Sts 01F8                                   _Led3Sts 01F6  
              __end_of_Sch_SchmIntService 6B6A                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C8  
                              ??_ReadByte 007D                            ??_savePreamble 0096  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 6BD2  
                    __end_of_initPreamble 6972                    initEeprom@currentState 01D7  
                       __end_of_detectCmd 4C38                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 67C8  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 0039  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 55D6                    __end_of_Rtcc_UnlockRtc 6B0C  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 6AC6                                _initEeprom 504E  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6936                    ?_Uart_WriteConstString 0080  
                              _readBuffer 033D                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 6A70  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 5288  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 5414  
                                 ___lldiv 530E                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                   triggerCmdFsm@isComplete 0107  
                                 ___lwdiv 5CC8                         ??_USBStallHandler 007D  
                                 ___lwmod 618C                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                            _getSetupCall 68D8                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 6BE2  
                    __size_of_putUSBUSART 0022                                   __pcinit 22DE  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CF                       __end_of_TurnOnModem 6032  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 0355                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDEE                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0091                               Terminal@Len 03B3  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6B6A  
                                 __ptext1 6572                                   __ptext2 6B8C  
                                 __ptext3 6BC6                                   __ptext4 6918  
                                 __ptext5 69AA                                   __ptext6 66BA  
                                 __ptext7 6632                                   __ptext8 3EFA  
                                 __ptext9 315A                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 4A5E                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 47C4  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 65D2                                   _isdigit 6874  
          isNumberInMemory@memoryOpResult 0104                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 2414                                   clear_11 2420  
                        ___awmod@dividend 007D                         ??_InitializeTasks 03FD  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02E8  
     __end_of_Tmr_RegisterTmr2IsrCallback 6B96               _Tmr_RegisterTmr2IsrCallback 6B8C  
                                 _isspace 66E4                              _Mdm_MainTask 5E10  
                                 _isupper 6830               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                                 _smsText 048B                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 2434  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC30  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 67C8  
                                 _sprintf 3BCA                                   _tolower 6A12  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 6B3C  
                        _HttpGetDataLocal 03A6                  __end_of_Mdm_SetSmsFormat 5EB0  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 466E  
                                 _toupper 6A2A           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 2426  
                            _getsUSBUSART 4D66                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DA  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F2  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC22  
     Irq_InitIntController@PerInt_LowPInt 007E                 triggerCmdFsm@currentState 01D3  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC0E                            _ModemEvtParser 1D30  
                                 int_func 466E                           _USB1msTickCount 0318  
         _dummy_encapsulated_cmd_response 037A                                 i1u1631_20 244A  
                _GetLastInteractionNumber 6B76                                 i1u1635_28 256A  
                               i1u1635_29 257E                                 i1u1656_28 67D8  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 6A12                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 6954                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 6A5A                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 6540                             StringCopy@Len 0089  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 4AFE                        _UsbDevice_MainTask 675C  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 6BD2  
               Eeprom_Reset@memoryAddress 00C6                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 305C  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E6  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2180  
                         _RtccIsrCallback 02E4          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F1             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 4452  
                    __end_of_parseCommand 305C                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 680E                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6AD8                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 68B8                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 0087                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E6                          _HttpGetMethodSts 01EA  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                isNumberValid@phoneNumber 007D                        _BothEP0OutUOWNsSet 01DF  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0068  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 1EB2                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D5  
                   __end_of_StopCondition 6BDA                  __size_of_HighPriorityIsr 4712  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 0371                                 _Led2Blink 0368  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 035F  
            __end_of_USBTransferOnePacket 4396                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0395                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 181C  
               __end_of_Rtcc_SetRtcStatus 6A70                                 _Led2Pulse 038F  
                               _Led3Pulse 0389                         _I2cSlv_SendI2cMsg 62D2  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                         ??_ScheduleTasks 04FC                            _Tmr_TmrBConfig 3EFA  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 6AD8  
                       _OsAlrm_SetOsAlarm 408A                      Terminal@TermRxBuffer 0540  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5F9A                               ?_initEeprom 0001  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 5FE6  
                               _ClipEvent 00DD                              ??_MyApp_Task 00B0  
                    Terminal@TermTxBuffer 0100             saveNumberInMemory@phoneNumber 0096  
                               _GetMethod 00D8                    _USBCtrlTrfSetupHandler 51FC  
                      ?_OsAlrm_SetOsAlarm 0083                  Eeprom_Reset@SlaveAddress 0085  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 26DC  
   __end_of_USBIncrement1msInternalTimers 6830    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 680E               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 5A72                            _CheckAckStatus 6BB4  
                          __end_of___wmul 6736                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 6AEA               triggerCmdFsm@numberInMemory 0108  
                  __size_of_UartWriteByte 0020                 triggerCmdFsm@searchNumber 010A  
                 addCmdFsm@receivedNumber 0105                             _secondCounter 0320  
                          __end_of_memcpy 607A                        Terminal@PackageLen 02ED  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 65D2  
                      _UartTxBufferStatus 5EFE                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 69F8                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E0  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6B4C  
                               _MdmStatus 00D1                            __end_of_strcat 59C2  
                          __end_of_strcpy 6572                            __end_of_strlen 62D2  
                          __end_of_strtol 19F2                       start_initialization 22DE  
         isNumberInMemory@currentPosition 00E2                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 36C4  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 64DA  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4CD0                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 35E0                          _UpdateOsCounters 6B2C  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3E30                 __end_of_I2cSlv_SendI2cMsg 6310  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4F26                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
             triggerCmdFsm@masterOpResult 0109                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 6B1C                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3FC2  
                               _SendSmsSm 19F2                 __end_of_OsAlrm_SetOsAlarm 4152  
                  __end_of_Tmr_TmrBIrqSet 5FE6                                 _TaskTable 05A4  
                               _RingEvent 00DE                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D4  
                   __end_of_isNumberValid 5848              isMasterNumber@memoryOpResult 0102  
                       __size_of_ReadByte 000A                                 _RtcConfig 03BB  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 59C2                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 668E                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 69C4                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6BBE                                  ??___lmul 0085  
                           _isxdigit$6717 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2BD4  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 5414  
                      HttpGetMethod@Index 01C8                               __pdataBANK0 00E1  
                             __pdataBANK1 01FE                               __pdataBANK2 02F1  
                             __pdataBANK3 03C3                               __pdataBANK4 04F2  
                             __pdataBANK5 05A4                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                     detectCmd@currentState 0095  
                   __end_of_triggerCmdFsm 3A28                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                 _addCmdFsm 3AFA  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 5CC8  
                  __end_of_ConfigureModem 37A0                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D6            __end_of_USBStdGetStatusHandler 45BE  
                            _initPreamble 6954                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC32                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 5DC0  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
                           __pcstackBANK3 03FD              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04FC                           RiSm@MdmDrvState 002F  
                            _SetAckStatus 6AB2                              _isalpha$6707 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 6B96  
                     __size_of_initEeprom 0090                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6441 007E             UpdateSchFlag@InterruptCounter 02DA  
                          ??_triggerRelay 0085                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 6254                                 _delCmdFsm 4396  
     InitGprsNetwork@GprsNetInitNextState 002A                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 68F8                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 63FE              __end_of_LedBlinkStateMachine 2824  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 60C0                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 69AA  
              __end_of_USBCheckCDCRequest 466E              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5ACA                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 68D8                              ??_StringCopy 008B  
                        _Led_SetLedStatus 6602                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 6896  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 0110                    __size_of_waitSetupCall 004E  
                               _detectCmd 4B9C                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008               findEmptySpot@memoryOpResult 0102  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC0E  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 504E  
                               __ptext101 4B9C                                 __ptext110 4396  
                               __ptext102 2F4C                                 __ptext111 3AFA  
                               __ptext103 6B1C                                 __ptext120 5392  
                               __ptext112 69F8                                 __ptext104 6780  
                               __ptext121 6214                                 __ptext113 5D1C  
                               __ptext105 67A4                                 __ptext130 1D30  
                               __ptext122 6896                                 __ptext114 4452  
                               __ptext106 6AD8                             Terminal@Index 00A6  
                               __ptext131 64DA                                 __ptext123 5C74  
                               __ptext115 5568                                 __ptext107 56AE  
                               __ptext140 486C                                 __ptext132 5D6E  
                               __ptext124 5B22                                 __ptext116 4DFC  
                               __ptext108 6B76                                 __ptext141 6BBE  
                               __ptext133 2AA2                                 __ptext125 62D2  
                               __ptext117 57E2                                 __ptext109 646E  
                               __ptext150 50DE                                 __ptext142 0DC8  
                               __ptext134 36C4                                 __ptext126 59C2  
                               __ptext118 5C20                                 __ptext151 3FC2  
                               __ptext143 05EC                                 __ptext135 0ABC  
                               __ptext127 5FE6                                 __ptext119 3A28  
                               __ptext160 670E                                 __ptext152 6AEA  
                               __ptext144 6310                                 __ptext136 296A  
                               __ptext128 19F2                                 __ptext161 5486  
                               __ptext153 64A4                                 __ptext145 61D0  
                               __ptext137 5A1A                                 __ptext129 6254  
                               __ptext170 6BD6                                 __ptext162 5F4C  
                               __ptext154 4914                                 __ptext146 68F8  
                               __ptext138 5A72                                 __ptext171 6BDA  
                               __ptext163 530E                                 __ptext155 3248  
                               __ptext147 5EFE                                 __ptext139 2020  
                               __ptext180 6B5C                                 __ptext172 6AB2  
                               __ptext164 668E                                 __ptext156 6602  
                               __ptext148 5848                                 __ptext181 6972  
                               __ptext173 6BA0                                 __ptext165 4152  
                               __ptext157 26DC                                 __ptext149 5908  
                               __ptext190 6B3C                                 __ptext182 6B2C  
                               __ptext174 6A42                                 __ptext166 6660  
                               __ptext158 5CC8                                 __ptext191 3E30  
                               __ptext183 2434                                 __ptext175 6BDE  
                               __ptext167 1EB2                                 __ptext159 408A  
                               __ptext192 6A9C                                 __ptext184 6736  
                               __ptext176 6BAA                                 __ptext168 2180  
                               __ptext193 6BE2                                 __ptext185 5ACA  
                               __ptext177 6BB4                                 __ptext169 6B96  
                               __ptext194 6BE6                                 __ptext186 698E  
                               __ptext195 6BEA                                 __ptext187 63FE  
                               __ptext179 67C8                                  ?___awmod 007D  
                      _Sch_SchmIntService 6B5C                                 __ptext196 0000  
                               __ptext188 6A86                           _InitializeTasks 54F8  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                   __size_of_isMasterNumber 006E  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04E7  
                              ?_addCmdFsm 0105                   Eeprom_Write@WriteBuffer 008F  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 039B                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 42D8  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A1            InitializeTasks@ActiveTaskIndex 03FF  
                  __size_of_findEmptySpot 0096                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 56AE  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EA                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 577C                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 577C  
              ConfigureModem@DelayCounter 0326                        __end_of_StringCopy 58AA  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DF  
                         Terminal@SwTimer 04DC                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03C1  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                ?_delCmdFsm 0105  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02D6  
                        _OsTmr_StartTimer 5908                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E                  __end_of_isNumberInMemory 450C  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 6A86                __end_of_Mcu_StartSystemPll 6936  
                            _parseCommand 2F4C                              _PhoneNumbLen 00D2  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 67EC  
                           _Rtcm_MainTask 516E                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0099                          SendSmsSm@SwTimer 03E7  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F1  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 5486                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 65A2                                  _RCONbits 000FD0  
                              ?_detectCmd 0001                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001                     __size_of_savePreamble 001A  
            __end_of_OsTmr_GetTimerStatus 516E                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4C38                     delCmdFsm@currentState 01D4  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 69F8                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 258A                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 6736                     __end_of_initGprsModem 504E  
                     ??_I2c_InitI2cModule 00A4                            delCmdFsm@F9013 FC0F  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 6BC6  
                  __end_of_Mdm_GetSmsData 5716                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E1                                  _ApnLocal 0324  
                          _StartCondition 6BDA                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01E7  
                           _Tmr_TmrBPrSet 315A                             _waitSetupCall 5EB0  
                     ?_saveNumberInMemory 0096                         _NewStringReceived 003C  
                            _isspace$6710 007E                          _UartSetConfigLow 5A72  
                                _GetSmsSm 2AA2                   __end_of_USBStallHandler 6104  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 03AB  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DC  
                                _MdmCntSm 486C                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 22F2  
                               copy_data1 2312                                 copy_data2 2332  
                               copy_data3 236A              __end_of_LedPulseStateMachine 3330  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 3416                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6BA0  
                           i2_GenerateEvt 6A9C                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5B  
               __end_of_I2c_InitI2cModule 54F8                                  _MsgReady FE32  
                         ??_Term_MainTask 00A7                              _savePreamble 69DE  
                 __end_of_InitializeTasks 5568                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 4DFC               __end_of_I2cSlv_QueryI2cData 3AFA  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 4CD0                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0098  
                            ?_TurnOnModem 0001                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DC  
                         _SetUartBaudRate 296A              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB2                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6B3C  
                    __end_of_triggerRelay 646E                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EC                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                  __end_ofdelCmdFsm@F9013 FC1C                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02EE  
                             ??_addCmdFsm 00B0                             _UpdateSchFlag 6972  
                     __end_of_putUSBUSART 6874                               _line_coding 0382  
                            _Rtcc_LockRtc 6B0C              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 26DC               triggerCmdFsm@receivedNumber 0105  
                  __end_of_StartCondition 6BDE                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01EE  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 0088  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6713 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 00A8                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 6AEA  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0186                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AF                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 5F9A  
                                __ptext11 68B8                                  __ptext20 675C  
                                __ptext12 4CD0                                  __ptext21 607A  
                                __ptext13 6936                           ??_UartWriteByte 007E  
                                __ptext30 650E                                  __ptext22 5E10  
                                __ptext14 2D02                                  __ptext31 60C0  
                                __ptext23 5B78                                  __ptext15 54F8  
                                __ptext40 3330                                  __ptext32 680E  
                                __ptext24 6BCC                                  __ptext16 34FC  
                                __ptext41 450C                                  __ptext33 258A  
                                __ptext25 67EC                                  __ptext17 69C4  
                                __ptext50 2E28                                  __ptext42 2BD4  
                                __ptext34 4E92                                  __ptext26 6AC6  
                                __ptext18 516E                                  __ptext51 3D64  
                                __ptext43 135A                                  __ptext35 6032  
                                __ptext27 6BD2                                  __ptext19 3C98  
                                __ptext60 00D0                                  __ptext52 4216  
                                __ptext44 58AA                                  __ptext36 51FC  
                                __ptext28 1BAA                                  __ptext61 3416  
                                __ptext53 37A0                                  __ptext45 45BE  
                                __ptext37 305C                                  __ptext29 63C4  
                                __ptext70 6852                                  __ptext62 6A12  
                                __ptext54 2824                                  __ptext46 55D6  
                                __ptext38 4AFE                                  __ptext71 6148  
                                __ptext63 634E                                  __ptext55 10B6  
                                __ptext47 6104                                  __ptext39 35E0  
                                __ptext80 15EE                                  __ptext72 471A  
                                __ptext64 181C                                  __ptext56 6294  
                                __ptext48 4C38                                  __ptext81 5414  
                                __ptext73 618C                                  __ptext65 6A2A  
                                __ptext57 5966                                  __ptext49 5716  
                                __ptext90 3950                                  __ptext82 5288  
                                __ptext74 4D66                                  __ptext66 66E4  
                                __ptext58 3BCA                                  __ptext91 6438  
                                __ptext83 6B0C                                  __ptext75 42D8  
                                __ptext67 65D2                                  __ptext59 65A2  
                                __ptext92 47C4                                  __ptext84 577C  
                                __ptext76 3878                                  __ptext68 6830  
                                __ptext93 5EB0                                  __ptext85 4F26  
                                __ptext77 6874                                  __ptext69 6540  
                                __ptext94 68D8                                  __ptext86 6A5A  
                                __ptext78 5BCC                                  __ptext95 69DE  
                                __ptext87 4A5E                                  __ptext79 6AFC  
                                __ptext96 6954                                  __ptext88 6A70  
                                __ptext97 4FBA                                  __ptext89 5642  
                                __ptext98 49BC                                  __ptext99 5E60  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 698E                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 50DE                     __end_of_HttpGetMethod 0ABC  
                    delCmdFsm@emptyNumber 0109                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                               ??_delCmdFsm 00B0  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0085  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                   delCmdFsm@searchNumber 0119                         _Mdm_IsSmsReceived 6780  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 5288  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 008F  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                          ?_findEmptySpot 0100                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6BB4                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 6BCC                        ??_USBCtrlEPService 0097  
                                _isxdigit 634E                             _Mdm_IsRinging 67A4  
                     _USBCtrlTrfInHandler 4216                  I2c_ReadData@I2cReadState 0034  
              __end_of_Mdm_RequestSmsData 6B2C                               ??_detectCmd 0095  
                   __end_of_ScheduleTasks 2E28                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 5716                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 008D  
               _USBCtrlEPAllowStatusStage 3D64                       ??_Mdm_IsSmsReceived 0081  
                          _receivedNumber 04C2                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 03FD                                strtol@sign 0093  
                         Term_MainSm@Data 0459                       delCmdFsm@isComplete 0116  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            _isMasterNumber 5568  
                             _relayBuffer 02FE                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 63FE  
                __end_of_Mcu_ConfigExtInt 69C4                             ?_Eeprom_Reset 0001  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00CA  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 008F  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 68B8                  __end_of_Led_SetLedStatus 6632  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 5BCC  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 67A4  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    parseCommand@resetCmd 0090                      _OsTmr_GetTimerStatus 50DE  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5908  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 58AA                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2AA2  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01D9  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009E  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 6214  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 646E                  __end_of_Rtcm_GetRtccDate 57E2  
                             _putUSBUSART 6852                 Eeprom_Write@CommandLength 0095  
                     _USBCtrlTrfRxService 2E28                    __end_of_isMasterNumber 55D6  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 63C4                             ?_getSetupCall 0001  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 5966  
                    _LedPulseStateMachine 3248                        _USBCheckCDCRequest 45BE  
                     _USBCtrlTrfTxService 37A0                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                            ??_Eeprom_Reset 0085  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                            ??_Eeprom_Write 0092  
                        _Rtcc_AlarmConfig 5642                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DB  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02EF  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 607A  
                  __size_of_isNumberValid 0066                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 66E4  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                 delCmdFsm@numberInMemory 0118                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CB                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 4914          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                         ??_findEmptySpot 00B0                             _StopCondition 6BD6  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 0029  
                        Mdm_IsRinging@Ret 0081                    __size_of_triggerCmdFsm 00D8  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 64DA  
                    __end_of_CDCTxService 296A                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2E                     __size_of_triggerRelay 0036  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F0                   _UsbMasterPhoneNumberLen 0322  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6AC6  
