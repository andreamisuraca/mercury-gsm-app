

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 19 17:21:31 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   207                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   208                           	psect	text170,global,reloc=2,class=CODE,delta=1
   209                           	psect	text171,global,reloc=2,class=CODE,delta=1
   210                           	psect	text172,global,reloc=2,class=CODE,delta=1
   211                           	psect	text173,global,reloc=2,class=CODE,delta=1
   212                           	psect	text174,global,reloc=2,class=CODE,delta=1
   213                           	psect	text175,global,reloc=2,class=CODE,delta=1
   214                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   215                           	psect	text176,global,reloc=2,class=CODE,delta=1
   216                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   217                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   218                           	dabs	1,0x400,48,_BDT
   219                           	dabs	1,0x438,8,_CtrlTrfData
   220                           	dabs	1,0x430,8,_SetupPkt
   221  0000                     
   222                           ; Version 1.45
   223                           ; Generated 16/11/2017 GMT
   224                           ; 
   225                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   226                           ; All rights reserved.
   227                           ; 
   228                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   229                           ; 
   230                           ; Redistribution and use in source and binary forms, with or without modification, are
   231                           ; permitted provided that the following conditions are met:
   232                           ; 
   233                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   234                           ;        conditions and the following disclaimer.
   235                           ; 
   236                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   237                           ;        of conditions and the following disclaimer in the documentation and/or other
   238                           ;        materials provided with the distribution.
   239                           ; 
   240                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   241                           ;        software without specific prior written permission.
   242                           ; 
   243                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   244                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   245                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   246                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   247                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   248                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   249                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   250                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   251                           ; 
   252                           ; 
   253                           ; Code-generator required, PIC18F46J50 Definitions
   254                           ; 
   255                           ; SFR Addresses
   256  0000                     
   257                           	psect	idataBANK0
   258  0062D8                     __pidataBANK0:
   259                           	opt stack 0
   260                           
   261                           ;initializer for MyApp_Task@memoryFlag
   262  0062D8  01                 	db	1
   263                           
   264                           	psect	idataBANK1
   265  0062D9                     __pidataBANK1:
   266                           	opt stack 0
   267                           
   268                           ;initializer for InitGprsNetwork@GprsInitSts
   269  0062D9  01                 	db	1
   270                           
   271                           	psect	idataBANK2
   272  00625C                     __pidataBANK2:
   273                           	opt stack 0
   274                           
   275                           ;initializer for Terminal@EchoOption
   276  00625C  01                 	db	1
   277                           
   278                           ;initializer for _MainSystemTimebaseFlag
   279  00625D  01                 	db	1
   280                           
   281                           ;initializer for _ConnTimeout
   282  00625E  00                 	db	0
   283  00625F  01                 	db	1
   284  006260  0000               	dw	0
   285  006262  0000               	dw	0
   286  006264  0000               	dw	0
   287  006266  0000               	dw	0
   288  006268  00                 	db	0
   289                           
   290                           	psect	idataBANK3
   291  005964                     __pidataBANK3:
   292                           	opt stack 0
   293                           
   294                           ;initializer for ModemEvtParser@F9108
   295  005964  2B                 	db	43
   296  005965  43                 	db	67
   297  005966  4D                 	db	77
   298  005967  54                 	db	84
   299  005968  49                 	db	73
   300                           
   301                           ;initializer for ModemEvtParser@F9106
   302  005969  2B                 	db	43
   303  00596A  43                 	db	67
   304  00596B  4C                 	db	76
   305  00596C  49                 	db	73
   306  00596D  50                 	db	80
   307                           
   308                           ;initializer for ModemEvtParser@F9104
   309  00596E  52                 	db	82
   310  00596F  49                 	db	73
   311  005970  4E                 	db	78
   312  005971  47                 	db	71
   313                           
   314                           ;initializer for MyApp_Task@F9007
   315  005972  63                 	db	99
   316  005973  61                 	db	97
   317  005974  74                 	db	116
   318                           
   319                           ;initializer for triggerRelay@F8982
   320  005975  50                 	db	80
   321  005976  00                 	db	0
   322                           
   323                           ;initializer for Term_MainSm@TermDelay
   324  005977  01                 	db	1
   325  005978  01                 	db	1
   326  005979  0000               	dw	0
   327  00597B  0000               	dw	0
   328  00597D  0000               	dw	0
   329  00597F  0000               	dw	0
   330  005981  00                 	db	0
   331                           
   332                           ;initializer for _ConnWait
   333  005982  00                 	db	0
   334  005983  01                 	db	1
   335  005984  0000               	dw	0
   336  005986  0000               	dw	0
   337  005988  0000               	dw	0
   338  00598A  0000               	dw	0
   339  00598C  00                 	db	0
   340                           
   341                           ;initializer for SendSmsSm@SwTimer
   342  00598D  01                 	db	1
   343  00598E  01                 	db	1
   344  00598F  0000               	dw	0
   345  005991  0000               	dw	0
   346  005993  0000               	dw	0
   347  005995  0000               	dw	0
   348  005997  00                 	db	0
   349                           
   350                           ;initializer for CheckModem@Timeout
   351  005998  00                 	db	0
   352  005999  01                 	db	1
   353  00599A  0000               	dw	0
   354  00599C  0000               	dw	0
   355  00599E  0000               	dw	0
   356  0059A0  0000               	dw	0
   357  0059A2  00                 	db	0
   358                           
   359                           ;initializer for MyApp_Task@blinkTicks
   360  0059A3  FFFF               	dw	65535
   361                           
   362                           	psect	idataBANK4
   363  0060FC                     __pidataBANK4:
   364                           	opt stack 0
   365                           
   366                           ;initializer for ModemEvtParser@F9110
   367  0060FC  43                 	db	67
   368  0060FD  61                 	db	97
   369  0060FE  6C                 	db	108
   370  0060FF  6C                 	db	108
   371  006100  20                 	db	32
   372  006101  52                 	db	82
   373  006102  65                 	db	101
   374  006103  61                 	db	97
   375  006104  64                 	db	100
   376  006105  79                 	db	121
   377                           
   378                           ;initializer for MyApp_Task@phone
   379  006106  2B                 	db	43
   380  006107  33                 	db	51
   381  006108  39                 	db	57
   382  006109  30                 	db	48
   383  00610A  31                 	db	49
   384  00610B  32                 	db	50
   385  00610C  33                 	db	51
   386  00610D  34                 	db	52
   387  00610E  35                 	db	53
   388  00610F  36                 	db	54
   389  006110  37                 	db	55
   390  006111  38                 	db	56
   391  006112  39                 	db	57
   392  006113  00                 	db	0
   393                           
   394                           	psect	idataBANK5
   395  005564                     __pidataBANK5:
   396                           	opt stack 0
   397                           
   398                           ;initializer for _TaskTable
   399  005564  B6                 	db	low _Mdm_DrvMainFn
   400  005565  62                 	db	high _Mdm_DrvMainFn
   401  005566  00                 	db	0
   402  005567  0000               	dw	0
   403  005569  000A               	dw	10
   404  00556B  00                 	db	0
   405  00556C  6E                 	db	low _I2cSlv_MainTask
   406  00556D  53                 	db	high _I2cSlv_MainTask
   407  00556E  00                 	db	0
   408  00556F  0000               	dw	0
   409  005571  0001               	dw	1
   410  005573  00                 	db	0
   411  005574  B4                 	db	low _Mdm_MainTask
   412  005575  55                 	db	high _Mdm_MainTask
   413  005576  00                 	db	0
   414  005577  0000               	dw	0
   415  005579  0001               	dw	1
   416  00557B  00                 	db	0
   417  00557C  84                 	db	low _MdmHttp_MainTask
   418  00557D  57                 	db	high _MdmHttp_MainTask
   419  00557E  00                 	db	0
   420  00557F  0000               	dw	0
   421  005581  0001               	dw	1
   422  005583  00                 	db	0
   423  005584  B8                 	db	low _UsbDevice_MainTask
   424  005585  5E                 	db	high _UsbDevice_MainTask
   425  005586  00                 	db	0
   426  005587  0000               	dw	0
   427  005589  0001               	dw	1
   428  00558B  00                 	db	0
   429  00558C  48                 	db	low _Wdg_MainTask
   430  00558D  5F                 	db	high _Wdg_MainTask
   431  00558E  00                 	db	0
   432  00558F  0000               	dw	0
   433  005591  0064               	dw	100
   434  005593  00                 	db	0
   435  005594  F6                 	db	low _Led_MainTask
   436  005595  39                 	db	high _Led_MainTask
   437  005596  00                 	db	0
   438  005597  0000               	dw	0
   439  005599  0032               	dw	50
   440  00559B  00                 	db	0
   441  00559C  F6                 	db	low _Rtcm_MainTask
   442  00559D  4A                 	db	high _Rtcm_MainTask
   443  00559E  00                 	db	0
   444  00559F  0000               	dw	0
   445  0055A1  0064               	dw	100
   446  0055A3  00                 	db	0
   447  0055A4  E2                 	db	low _Term_MainTask
   448  0055A5  60                 	db	high _Term_MainTask
   449  0055A6  00                 	db	0
   450  0055A7  0000               	dw	0
   451  0055A9  0001               	dw	1
   452  0055AB  00                 	db	0
   453  0055AC  3A                 	db	low _MyApp_Task
   454  0055AD  2F                 	db	high _MyApp_Task
   455  0055AE  00                 	db	0
   456  0055AF  0000               	dw	0
   457  0055B1  0064               	dw	100
   458  0055B3  00                 	db	0
   459                           
   460                           	psect	mediumconst
   461  00FC34                     __pmediumconst:
   462                           	opt stack 0
   463  00FC34  00                 	db	0
   464  00FC35                     _USB_SD_Ptr:
   465                           	opt stack 0
   466  00FC35  68                 	db	low _sd000
   467  00FC36  FE                 	db	high _sd000
   468  00FC37  21                 	db	low _sd001
   469  00FC38  FE                 	db	high _sd001
   470  00FC39  FB                 	db	low _sd002
   471  00FC3A  FD                 	db	high _sd002
   472  00FC3B                     __end_of_USB_SD_Ptr:
   473                           	opt stack 0
   474  00FC3B                     _USB_CD_Ptr:
   475                           	opt stack 0
   476  00FC3B  B8                 	db	low _configDescriptor1
   477  00FC3C  FD                 	db	high _configDescriptor1
   478  00FC3D                     __end_of_USB_CD_Ptr:
   479                           	opt stack 0
   480  00FC3D                     _TaskNumber:
   481                           	opt stack 0
   482  00FC3D  000A               	dw	10
   483  00FC3F                     __end_of_TaskNumber:
   484                           	opt stack 0
   485  00FC3F                     _MsgFormat:
   486                           	opt stack 0
   487  00FC3F  48                 	db	72
   488  00FC40  6F                 	db	111
   489  00FC41  73                 	db	115
   490  00FC42  74                 	db	116
   491  00FC43  20                 	db	32
   492  00FC44  6D                 	db	109
   493  00FC45  65                 	db	101
   494  00FC46  73                 	db	115
   495  00FC47  73                 	db	115
   496  00FC48  61                 	db	97
   497  00FC49  67                 	db	103
   498  00FC4A  65                 	db	101
   499  00FC4B  20                 	db	32
   500  00FC4C  66                 	db	102
   501  00FC4D  6F                 	db	111
   502  00FC4E  72                 	db	114
   503  00FC4F  6D                 	db	109
   504  00FC50  61                 	db	97
   505  00FC51  74                 	db	116
   506  00FC52  3A                 	db	58
   507  00FC53  20                 	db	32
   508  00FC54  0D                 	db	13
   509  00FC55  0A                 	db	10
   510  00FC56  5B                 	db	91
   511  00FC57  6F                 	db	111
   512  00FC58  70                 	db	112
   513  00FC59  5F                 	db	95
   514  00FC5A  74                 	db	116
   515  00FC5B  79                 	db	121
   516  00FC5C  70                 	db	112
   517  00FC5D  65                 	db	101
   518  00FC5E  5D                 	db	93
   519  00FC5F  3A                 	db	58
   520  00FC60  5B                 	db	91
   521  00FC61  6F                 	db	111
   522  00FC62  70                 	db	112
   523  00FC63  5D                 	db	93
   524  00FC64  3A                 	db	58
   525  00FC65  5B                 	db	91
   526  00FC66  6C                 	db	108
   527  00FC67  65                 	db	101
   528  00FC68  6E                 	db	110
   529  00FC69  5D                 	db	93
   530  00FC6A  3A                 	db	58
   531  00FC6B  5B                 	db	91
   532  00FC6C  61                 	db	97
   533  00FC6D  64                 	db	100
   534  00FC6E  64                 	db	100
   535  00FC6F  72                 	db	114
   536  00FC70  5D                 	db	93
   537  00FC71  3A                 	db	58
   538  00FC72  5B                 	db	91
   539  00FC73  70                 	db	112
   540  00FC74  61                 	db	97
   541  00FC75  79                 	db	121
   542  00FC76  6C                 	db	108
   543  00FC77  6F                 	db	111
   544  00FC78  61                 	db	97
   545  00FC79  64                 	db	100
   546  00FC7A  5D                 	db	93
   547  00FC7B  0D                 	db	13
   548  00FC7C  0A                 	db	10
   549  00FC7D  0D                 	db	13
   550  00FC7E  0A                 	db	10
   551  00FC7F  5B                 	db	91
   552  00FC80  6F                 	db	111
   553  00FC81  70                 	db	112
   554  00FC82  5F                 	db	95
   555  00FC83  74                 	db	116
   556  00FC84  79                 	db	121
   557  00FC85  70                 	db	112
   558  00FC86  65                 	db	101
   559  00FC87  5D                 	db	93
   560  00FC88  20                 	db	32
   561  00FC89  3D                 	db	61
   562  00FC8A  20                 	db	32
   563  00FC8B  53                 	db	83
   564  00FC8C  4F                 	db	79
   565  00FC8D  2C                 	db	44
   566  00FC8E  53                 	db	83
   567  00FC8F  42                 	db	66
   568  00FC90  0D                 	db	13
   569  00FC91  0A                 	db	10
   570  00FC92  5B                 	db	91
   571  00FC93  6F                 	db	111
   572  00FC94  70                 	db	112
   573  00FC95  5D                 	db	93
   574  00FC96  20                 	db	32
   575  00FC97  3D                 	db	61
   576  00FC98  20                 	db	32
   577  00FC99  52                 	db	82
   578  00FC9A  3A                 	db	58
   579  00FC9B  20                 	db	32
   580  00FC9C  72                 	db	114
   581  00FC9D  65                 	db	101
   582  00FC9E  61                 	db	97
   583  00FC9F  64                 	db	100
   584  00FCA0  2C                 	db	44
   585  00FCA1  57                 	db	87
   586  00FCA2  3A                 	db	58
   587  00FCA3  20                 	db	32
   588  00FCA4  77                 	db	119
   589  00FCA5  72                 	db	114
   590  00FCA6  69                 	db	105
   591  00FCA7  74                 	db	116
   592  00FCA8  65                 	db	101
   593  00FCA9  0D                 	db	13
   594  00FCAA  0A                 	db	10
   595  00FCAB  5B                 	db	91
   596  00FCAC  6C                 	db	108
   597  00FCAD  65                 	db	101
   598  00FCAE  6E                 	db	110
   599  00FCAF  5D                 	db	93
   600  00FCB0  20                 	db	32
   601  00FCB1  3D                 	db	61
   602  00FCB2  20                 	db	32
   603  00FCB3  32                 	db	50
   604  00FCB4  20                 	db	32
   605  00FCB5  62                 	db	98
   606  00FCB6  79                 	db	121
   607  00FCB7  74                 	db	116
   608  00FCB8  65                 	db	101
   609  00FCB9  20                 	db	32
   610  00FCBA  41                 	db	65
   611  00FCBB  53                 	db	83
   612  00FCBC  43                 	db	67
   613  00FCBD  49                 	db	73
   614  00FCBE  49                 	db	73
   615  00FCBF  0D                 	db	13
   616  00FCC0  0A                 	db	10
   617  00FCC1  5B                 	db	91
   618  00FCC2  61                 	db	97
   619  00FCC3  64                 	db	100
   620  00FCC4  64                 	db	100
   621  00FCC5  72                 	db	114
   622  00FCC6  5D                 	db	93
   623  00FCC7  20                 	db	32
   624  00FCC8  3D                 	db	61
   625  00FCC9  20                 	db	32
   626  00FCCA  32                 	db	50
   627  00FCCB  20                 	db	32
   628  00FCCC  62                 	db	98
   629  00FCCD  79                 	db	121
   630  00FCCE  74                 	db	116
   631  00FCCF  65                 	db	101
   632  00FCD0  20                 	db	32
   633  00FCD1  41                 	db	65
   634  00FCD2  53                 	db	83
   635  00FCD3  43                 	db	67
   636  00FCD4  49                 	db	73
   637  00FCD5  49                 	db	73
   638  00FCD6  0D                 	db	13
   639  00FCD7  0A                 	db	10
   640  00FCD8  5B                 	db	91
   641  00FCD9  70                 	db	112
   642  00FCDA  61                 	db	97
   643  00FCDB  79                 	db	121
   644  00FCDC  6C                 	db	108
   645  00FCDD  6F                 	db	111
   646  00FCDE  61                 	db	97
   647  00FCDF  64                 	db	100
   648  00FCE0  5D                 	db	93
   649  00FCE1  20                 	db	32
   650  00FCE2  3D                 	db	61
   651  00FCE3  20                 	db	32
   652  00FCE4  6D                 	db	109
   653  00FCE5  61                 	db	97
   654  00FCE6  78                 	db	120
   655  00FCE7  20                 	db	32
   656  00FCE8  32                 	db	50
   657  00FCE9  30                 	db	48
   658  00FCEA  20                 	db	32
   659  00FCEB  62                 	db	98
   660  00FCEC  79                 	db	121
   661  00FCED  74                 	db	116
   662  00FCEE  65                 	db	101
   663  00FCEF  20                 	db	32
   664  00FCF0  41                 	db	65
   665  00FCF1  53                 	db	83
   666  00FCF2  43                 	db	67
   667  00FCF3  49                 	db	73
   668  00FCF4  49                 	db	73
   669  00FCF5  0D                 	db	13
   670  00FCF6  0A                 	db	10
   671  00FCF7  0D                 	db	13
   672  00FCF8  0A                 	db	10
   673  00FCF9  54                 	db	84
   674  00FCFA  65                 	db	101
   675  00FCFB  72                 	db	114
   676  00FCFC  6D                 	db	109
   677  00FCFD  69                 	db	105
   678  00FCFE  6E                 	db	110
   679  00FCFF  61                 	db	97
   680  00FD00  6C                 	db	108
   681  00FD01  20                 	db	32
   682  00FD02  4D                 	db	77
   683  00FD03  6F                 	db	111
   684  00FD04  64                 	db	100
   685  00FD05  65                 	db	101
   686  00FD06  3A                 	db	58
   687  00FD07  20                 	db	32
   688  00FD08  43                 	db	67
   689  00FD09  4F                 	db	79
   690  00FD0A  4D                 	db	77
   691  00FD0B  4D                 	db	77
   692  00FD0C  41                 	db	65
   693  00FD0D  4E                 	db	78
   694  00FD0E  44                 	db	68
   695  00FD0F  20                 	db	32
   696  00FD10  4D                 	db	77
   697  00FD11  4F                 	db	79
   698  00FD12  44                 	db	68
   699  00FD13  45                 	db	69
   700  00FD14  0D                 	db	13
   701  00FD15  0A                 	db	10
   702  00FD16  4D                 	db	77
   703  00FD17  6F                 	db	111
   704  00FD18  64                 	db	100
   705  00FD19  65                 	db	101
   706  00FD1A  6D                 	db	109
   707  00FD1B  20                 	db	32
   708  00FD1C  54                 	db	84
   709  00FD1D  79                 	db	121
   710  00FD1E  70                 	db	112
   711  00FD1F  65                 	db	101
   712  00FD20  3A                 	db	58
   713  00FD21  20                 	db	32
   714  00FD22  47                 	db	71
   715  00FD23  53                 	db	83
   716  00FD24  4D                 	db	77
   717  00FD25  2F                 	db	47
   718  00FD26  47                 	db	71
   719  00FD27  50                 	db	80
   720  00FD28  52                 	db	82
   721  00FD29  53                 	db	83
   722  00FD2A  0D                 	db	13
   723  00FD2B  0A                 	db	10
   724  00FD2C  0D                 	db	13
   725  00FD2D  0A                 	db	10
   726  00FD2E  00                 	db	0
   727  00FD2F                     __end_of_MsgFormat:
   728                           	opt stack 0
   729  00FD2F                     _Welcome:
   730                           	opt stack 0
   731  00FD2F  2A                 	db	42
   732  00FD30  2A                 	db	42
   733  00FD31  2A                 	db	42
   734  00FD32  2A                 	db	42
   735  00FD33  2A                 	db	42
   736  00FD34  2A                 	db	42
   737  00FD35  2A                 	db	42
   738  00FD36  2A                 	db	42
   739  00FD37  2A                 	db	42
   740  00FD38  2A                 	db	42
   741  00FD39  2A                 	db	42
   742  00FD3A  2A                 	db	42
   743  00FD3B  2A                 	db	42
   744  00FD3C  2A                 	db	42
   745  00FD3D  2A                 	db	42
   746  00FD3E  2A                 	db	42
   747  00FD3F  2A                 	db	42
   748  00FD40  2A                 	db	42
   749  00FD41  2A                 	db	42
   750  00FD42  2A                 	db	42
   751  00FD43  2A                 	db	42
   752  00FD44  2A                 	db	42
   753  00FD45  2A                 	db	42
   754  00FD46  2A                 	db	42
   755  00FD47  2A                 	db	42
   756  00FD48  2A                 	db	42
   757  00FD49  2A                 	db	42
   758  00FD4A  2A                 	db	42
   759  00FD4B  2A                 	db	42
   760  00FD4C  2A                 	db	42
   761  00FD4D  2A                 	db	42
   762  00FD4E  2A                 	db	42
   763  00FD4F  2A                 	db	42
   764  00FD50  2A                 	db	42
   765  00FD51  2A                 	db	42
   766  00FD52  2A                 	db	42
   767  00FD53  2A                 	db	42
   768  00FD54  2A                 	db	42
   769  00FD55  2A                 	db	42
   770  00FD56  2A                 	db	42
   771  00FD57  2A                 	db	42
   772  00FD58  2A                 	db	42
   773  00FD59  2A                 	db	42
   774  00FD5A  2A                 	db	42
   775  00FD5B  2A                 	db	42
   776  00FD5C  2A                 	db	42
   777  00FD5D  2A                 	db	42
   778  00FD5E  2A                 	db	42
   779  00FD5F  2A                 	db	42
   780  00FD60  0D                 	db	13
   781  00FD61  0A                 	db	10
   782  00FD62  20                 	db	32
   783  00FD63  20                 	db	32
   784  00FD64  20                 	db	32
   785  00FD65  20                 	db	32
   786  00FD66  20                 	db	32
   787  00FD67  20                 	db	32
   788  00FD68  20                 	db	32
   789  00FD69  20                 	db	32
   790  00FD6A  20                 	db	32
   791  00FD6B  20                 	db	32
   792  00FD6C  20                 	db	32
   793  00FD6D  20                 	db	32
   794  00FD6E  20                 	db	32
   795  00FD6F  20                 	db	32
   796  00FD70  20                 	db	32
   797  00FD71  20                 	db	32
   798  00FD72  20                 	db	32
   799  00FD73  20                 	db	32
   800  00FD74  4D                 	db	77
   801  00FD75  45                 	db	69
   802  00FD76  52                 	db	82
   803  00FD77  43                 	db	67
   804  00FD78  55                 	db	85
   805  00FD79  52                 	db	82
   806  00FD7A  59                 	db	89
   807  00FD7B  20                 	db	32
   808  00FD7C  53                 	db	83
   809  00FD7D  59                 	db	89
   810  00FD7E  53                 	db	83
   811  00FD7F  54                 	db	84
   812  00FD80  45                 	db	69
   813  00FD81  4D                 	db	77
   814  00FD82  0D                 	db	13
   815  00FD83  0A                 	db	10
   816  00FD84  2A                 	db	42
   817  00FD85  2A                 	db	42
   818  00FD86  2A                 	db	42
   819  00FD87  2A                 	db	42
   820  00FD88  2A                 	db	42
   821  00FD89  2A                 	db	42
   822  00FD8A  2A                 	db	42
   823  00FD8B  2A                 	db	42
   824  00FD8C  2A                 	db	42
   825  00FD8D  2A                 	db	42
   826  00FD8E  2A                 	db	42
   827  00FD8F  2A                 	db	42
   828  00FD90  2A                 	db	42
   829  00FD91  2A                 	db	42
   830  00FD92  2A                 	db	42
   831  00FD93  2A                 	db	42
   832  00FD94  2A                 	db	42
   833  00FD95  2A                 	db	42
   834  00FD96  2A                 	db	42
   835  00FD97  2A                 	db	42
   836  00FD98  2A                 	db	42
   837  00FD99  2A                 	db	42
   838  00FD9A  2A                 	db	42
   839  00FD9B  2A                 	db	42
   840  00FD9C  2A                 	db	42
   841  00FD9D  2A                 	db	42
   842  00FD9E  2A                 	db	42
   843  00FD9F  2A                 	db	42
   844  00FDA0  2A                 	db	42
   845  00FDA1  2A                 	db	42
   846  00FDA2  2A                 	db	42
   847  00FDA3  2A                 	db	42
   848  00FDA4  2A                 	db	42
   849  00FDA5  2A                 	db	42
   850  00FDA6  2A                 	db	42
   851  00FDA7  2A                 	db	42
   852  00FDA8  2A                 	db	42
   853  00FDA9  2A                 	db	42
   854  00FDAA  2A                 	db	42
   855  00FDAB  2A                 	db	42
   856  00FDAC  2A                 	db	42
   857  00FDAD  2A                 	db	42
   858  00FDAE  2A                 	db	42
   859  00FDAF  2A                 	db	42
   860  00FDB0  2A                 	db	42
   861  00FDB1  2A                 	db	42
   862  00FDB2  2A                 	db	42
   863  00FDB3  2A                 	db	42
   864  00FDB4  2A                 	db	42
   865  00FDB5  0D                 	db	13
   866  00FDB6  0A                 	db	10
   867  00FDB7  00                 	db	0
   868  00FDB8                     __end_of_Welcome:
   869                           	opt stack 0
   870  00FDB8                     _configDescriptor1:
   871                           	opt stack 0
   872  00FDB8  09                 	db	9
   873  00FDB9  02                 	db	2
   874  00FDBA  43                 	db	67
   875  00FDBB  00                 	db	0
   876  00FDBC  02                 	db	2
   877  00FDBD  01                 	db	1
   878  00FDBE  00                 	db	0
   879  00FDBF  C0                 	db	192
   880  00FDC0  32                 	db	50
   881  00FDC1  09                 	db	9
   882  00FDC2  04                 	db	4
   883  00FDC3  00                 	db	0
   884  00FDC4  00                 	db	0
   885  00FDC5  01                 	db	1
   886  00FDC6  02                 	db	2
   887  00FDC7  02                 	db	2
   888  00FDC8  01                 	db	1
   889  00FDC9  00                 	db	0
   890  00FDCA  05                 	db	5
   891  00FDCB  24                 	db	36
   892  00FDCC  00                 	db	0
   893  00FDCD  10                 	db	16
   894  00FDCE  01                 	db	1
   895  00FDCF  04                 	db	4
   896  00FDD0  24                 	db	36
   897  00FDD1  02                 	db	2
   898  00FDD2  02                 	db	2
   899  00FDD3  05                 	db	5
   900  00FDD4  24                 	db	36
   901  00FDD5  06                 	db	6
   902  00FDD6  00                 	db	0
   903  00FDD7  01                 	db	1
   904  00FDD8  05                 	db	5
   905  00FDD9  24                 	db	36
   906  00FDDA  01                 	db	1
   907  00FDDB  00                 	db	0
   908  00FDDC  01                 	db	1
   909  00FDDD  07                 	db	7
   910  00FDDE  05                 	db	5
   911  00FDDF  81                 	db	129
   912  00FDE0  03                 	db	3
   913  00FDE1  08                 	db	8
   914  00FDE2  00                 	db	0
   915  00FDE3  02                 	db	2
   916  00FDE4  09                 	db	9
   917  00FDE5  04                 	db	4
   918  00FDE6  01                 	db	1
   919  00FDE7  00                 	db	0
   920  00FDE8  02                 	db	2
   921  00FDE9  0A                 	db	10
   922  00FDEA  00                 	db	0
   923  00FDEB  00                 	db	0
   924  00FDEC  00                 	db	0
   925  00FDED  07                 	db	7
   926  00FDEE  05                 	db	5
   927  00FDEF  02                 	db	2
   928  00FDF0  02                 	db	2
   929  00FDF1  40                 	db	64
   930  00FDF2  00                 	db	0
   931  00FDF3  00                 	db	0
   932  00FDF4  07                 	db	7
   933  00FDF5  05                 	db	5
   934  00FDF6  82                 	db	130
   935  00FDF7  02                 	db	2
   936  00FDF8  40                 	db	64
   937  00FDF9  00                 	db	0
   938  00FDFA  00                 	db	0
   939  00FDFB                     __end_of_configDescriptor1:
   940                           	opt stack 0
   941  00FDFB                     _sd002:
   942                           	opt stack 0
   943  00FDFB  26                 	db	38
   944  00FDFC  03                 	db	3
   945  00FDFD  0054               	dw	84
   946  00FDFF  0065               	dw	101
   947  00FE01  0072               	dw	114
   948  00FE03  006D               	dw	109
   949  00FE05  0069               	dw	105
   950  00FE07  006E               	dw	110
   951  00FE09  0061               	dw	97
   952  00FE0B  006C               	dw	108
   953  00FE0D  0020               	dw	32
   954  00FE0F  0049               	dw	73
   955  00FE11  006E               	dw	110
   956  00FE13  0074               	dw	116
   957  00FE15  0065               	dw	101
   958  00FE17  0072               	dw	114
   959  00FE19  0066               	dw	102
   960  00FE1B  0061               	dw	97
   961  00FE1D  0063               	dw	99
   962  00FE1F  0065               	dw	101
   963  00FE21                     __end_of_sd002:
   964                           	opt stack 0
   965  00FE21                     _sd001:
   966                           	opt stack 0
   967  00FE21  1E                 	db	30
   968  00FE22  03                 	db	3
   969  00FE23  004D               	dw	77
   970  00FE25  0065               	dw	101
   971  00FE27  0072               	dw	114
   972  00FE29  0063               	dw	99
   973  00FE2B  0075               	dw	117
   974  00FE2D  0072               	dw	114
   975  00FE2F  0079               	dw	121
   976  00FE31  0020               	dw	32
   977  00FE33  0053               	dw	83
   978  00FE35  0079               	dw	121
   979  00FE37  0073               	dw	115
   980  00FE39  0074               	dw	116
   981  00FE3B  0065               	dw	101
   982  00FE3D  006D               	dw	109
   983  00FE3F                     __end_of_sd001:
   984                           	opt stack 0
   985  00FE3F                     _MsgReady:
   986                           	opt stack 0
   987  00FE3F  0D                 	db	13
   988  00FE40  0A                 	db	10
   989  00FE41  53                 	db	83
   990  00FE42  79                 	db	121
   991  00FE43  73                 	db	115
   992  00FE44  74                 	db	116
   993  00FE45  65                 	db	101
   994  00FE46  6D                 	db	109
   995  00FE47  20                 	db	32
   996  00FE48  52                 	db	82
   997  00FE49  65                 	db	101
   998  00FE4A  61                 	db	97
   999  00FE4B  64                 	db	100
  1000  00FE4C  79                 	db	121
  1001  00FE4D  2E                 	db	46
  1002  00FE4E  2E                 	db	46
  1003  00FE4F  2E                 	db	46
  1004  00FE50  20                 	db	32
  1005  00FE51  0D                 	db	13
  1006  00FE52  0A                 	db	10
  1007  00FE53  0D                 	db	13
  1008  00FE54  0A                 	db	10
  1009  00FE55  00                 	db	0
  1010  00FE56                     __end_of_MsgReady:
  1011                           	opt stack 0
  1012  00FE56                     _device_dsc:
  1013                           	opt stack 0
  1014  00FE56  12                 	db	18
  1015  00FE57  01                 	db	1
  1016  00FE58  0200               	dw	512
  1017  00FE5A  02                 	db	2
  1018  00FE5B  00                 	db	0
  1019  00FE5C  00                 	db	0
  1020  00FE5D  08                 	db	8
  1021  00FE5E  04D8               	dw	1240
  1022  00FE60  000A               	dw	10
  1023  00FE62  0100               	dw	256
  1024  00FE64  01                 	db	1
  1025  00FE65  02                 	db	2
  1026  00FE66  00                 	db	0
  1027  00FE67  01                 	db	1
  1028  00FE68                     __end_of_device_dsc:
  1029                           	opt stack 0
  1030  00FE68                     _sd000:
  1031                           	opt stack 0
  1032  00FE68  04                 	db	4
  1033  00FE69  03                 	db	3
  1034  00FE6A  0409               	dw	1033
  1035  00FE6C                     __end_of_sd000:
  1036                           	opt stack 0
  1037  0000                     _RPINR1	set	3815
  1038  0000                     _UEP0bits	set	3878
  1039  0000                     _UIEbits	set	3894
  1040  0000                     _UADDR	set	3896
  1041  0000                     _UIE	set	3894
  1042  0000                     _UEIE	set	3895
  1043  0000                     _UCFG	set	3897
  1044  0000                     _RTCCAL	set	3902
  1045  0000                     _PADCFG1bits	set	3900
  1046  0000                     _RTCCFGbits	set	3903
  1047  0000                     _DSCONLbits	set	3916
  1048  0000                     _DSGPR1	set	3919
  1049  0000                     _DSGPR0	set	3918
  1050  0000                     _DSCONHbits	set	3917
  1051  0000                     _ANCON1bits	set	3913
  1052  0000                     _UEP1	set	3879
  1053  0000                     _UEP0	set	3878
  1054  0000                     _T1CONbits	set	4045
  1055  0000                     _PORTDbits	set	3971
  1056  0000                     _USTAT	set	3940
  1057  0000                     _PIR2bits	set	4001
  1058  0000                     _UCON	set	3941
  1059  0000                     _UIRbits	set	3938
  1060  0000                     _UCONbits	set	3941
  1061  0000                     _UIR	set	3938
  1062  0000                     _UEIR	set	3939
  1063  0000                     _PIE2bits	set	4000
  1064  0000                     _BAUDCON2	set	3964
  1065  0000                     _RCSTA2	set	3996
  1066  0000                     _BAUDCON1	set	3966
  1067  0000                     _RCSTA1	set	4012
  1068  0000                     _TRISCbits	set	3988
  1069  0000                     _TXSTA2	set	4008
  1070  0000                     _TXSTA1	set	4013
  1071  0000                     _RCREG2	set	4010
  1072  0000                     _RCREG1	set	4015
  1073  0000                     _TXREG2	set	4009
  1074  0000                     _TXREG1	set	4014
  1075  0000                     _SPBRG2	set	4011
  1076  0000                     _SPBRGH2	set	3965
  1077  0000                     _SPBRG1	set	4016
  1078  0000                     _SPBRGH1	set	3967
  1079  0000                     _PR4	set	3959
  1080  0000                     _PR2	set	4043
  1081  0000                     _PIE1bits	set	3997
  1082  0000                     _IPR1bits	set	3999
  1083  0000                     _T4CONbits	set	3958
  1084  0000                     _T2CONbits	set	4042
  1085  0000                     _ALRMVALL	set	3982
  1086  0000                     _ALRMVALH	set	3983
  1087  0000                     _RTCVALH	set	3993
  1088  0000                     _RTCVALL	set	3992
  1089  0000                     _ALRMRPTbits	set	3984
  1090  0000                     _ALRMCFGbits	set	3985
  1091  0000                     _PIE3bits	set	4003
  1092  0000                     _IPR3bits	set	4005
  1093  0000                     _OSCCONbits	set	4051
  1094  0000                     _PORTEbits	set	3972
  1095  0000                     _TRISEbits	set	3990
  1096  0000                     _WDTCONbits	set	4032
  1097  0000                     _INTCON2bits	set	4081
  1098  0000                     _TRISBbits	set	3987
  1099  0000                     _OSCTUNEbits	set	3995
  1100  0000                     _SSP2CON1	set	3954
  1101  0000                     _TRISDbits	set	3989
  1102  0000                     _SSP2BUF	set	3957
  1103  0000                     _SSP2CON2bits	set	3953
  1104  0000                     _SSP2STAT	set	3955
  1105  0000                     _SSP2CON2	set	3953
  1106  0000                     _SSP2ADD	set	3956
  1107  0000                     _PIR1bits	set	3998
  1108  0000                     _PIR3bits	set	4004
  1109  0000                     _INTCON3bits	set	4080
  1110  0000                     _INTCONbits	set	4082
  1111  0000                     _RCONbits	set	4048
  1112  00FE6C                     STR_21:
  1113  00FE6C  20                 	db	32
  1114  00FE6D  4C                 	db	76	;'L'
  1115  00FE6E  61                 	db	97	;'a'
  1116  00FE6F  7A                 	db	122	;'z'
  1117  00FE70  79                 	db	121	;'y'
  1118  00FE71  20                 	db	32
  1119  00FE72  64                 	db	100	;'d'
  1120  00FE73  65                 	db	101	;'e'
  1121  00FE74  76                 	db	118	;'v'
  1122  00FE75  69                 	db	105	;'i'
  1123  00FE76  63                 	db	99	;'c'
  1124  00FE77  65                 	db	101	;'e'
  1125  00FE78  2E                 	db	46
  1126  00FE79  2E                 	db	46
  1127  00FE7A  2E                 	db	46
  1128  00FE7B  79                 	db	121	;'y'
  1129  00FE7C  6F                 	db	111	;'o'
  1130  00FE7D  75                 	db	117	;'u'
  1131  00FE7E  27                 	db	39
  1132  00FE7F  76                 	db	118	;'v'
  1133  00FE80  65                 	db	101	;'e'
  1134  00FE81  20                 	db	32
  1135  00FE82  62                 	db	98	;'b'
  1136  00FE83  65                 	db	101	;'e'
  1137  00FE84  65                 	db	101	;'e'
  1138  00FE85  6E                 	db	110	;'n'
  1139  00FE86  20                 	db	32
  1140  00FE87  74                 	db	116	;'t'
  1141  00FE88  69                 	db	105	;'i'
  1142  00FE89  6D                 	db	109	;'m'
  1143  00FE8A  65                 	db	101	;'e'
  1144  00FE8B  64                 	db	100	;'d'
  1145  00FE8C  2D                 	db	45
  1146  00FE8D  6F                 	db	111	;'o'
  1147  00FE8E  75                 	db	117	;'u'
  1148  00FE8F  74                 	db	116	;'t'
  1149  00FE90  21                 	db	33
  1150  00FE91  21                 	db	33
  1151  00FE92  21                 	db	33
  1152  00FE93  0D                 	db	13
  1153  00FE94  0A                 	db	10
  1154  00FE95  00                 	db	0
  1155  00FE96                     STR_8:
  1156  00FE96  41                 	db	65	;'A'
  1157  00FE97  54                 	db	84	;'T'
  1158  00FE98  2B                 	db	43
  1159  00FE99  53                 	db	83	;'S'
  1160  00FE9A  41                 	db	65	;'A'
  1161  00FE9B  50                 	db	80	;'P'
  1162  00FE9C  42                 	db	66	;'B'
  1163  00FE9D  52                 	db	82	;'R'
  1164  00FE9E  3D                 	db	61	;'='
  1165  00FE9F  33                 	db	51	;'3'
  1166  00FEA0  2C                 	db	44
  1167  00FEA1  31                 	db	49	;'1'
  1168  00FEA2  2C                 	db	44
  1169  00FEA3  22                 	db	34
  1170  00FEA4  43                 	db	67	;'C'
  1171  00FEA5  6F                 	db	111	;'o'
  1172  00FEA6  6E                 	db	110	;'n'
  1173  00FEA7  74                 	db	116	;'t'
  1174  00FEA8  79                 	db	121	;'y'
  1175  00FEA9  70                 	db	112	;'p'
  1176  00FEAA  65                 	db	101	;'e'
  1177  00FEAB  22                 	db	34
  1178  00FEAC  2C                 	db	44
  1179  00FEAD  22                 	db	34
  1180  00FEAE  47                 	db	71	;'G'
  1181  00FEAF  50                 	db	80	;'P'
  1182  00FEB0  52                 	db	82	;'R'
  1183  00FEB1  53                 	db	83	;'S'
  1184  00FEB2  22                 	db	34
  1185  00FEB3  0D                 	db	13
  1186  00FEB4  00                 	db	0
  1187  00FEB5                     STR_14:
  1188  00FEB5  41                 	db	65	;'A'
  1189  00FEB6  54                 	db	84	;'T'
  1190  00FEB7  2B                 	db	43
  1191  00FEB8  48                 	db	72	;'H'
  1192  00FEB9  54                 	db	84	;'T'
  1193  00FEBA  54                 	db	84	;'T'
  1194  00FEBB  50                 	db	80	;'P'
  1195  00FEBC  50                 	db	80	;'P'
  1196  00FEBD  41                 	db	65	;'A'
  1197  00FEBE  52                 	db	82	;'R'
  1198  00FEBF  41                 	db	65	;'A'
  1199  00FEC0  3D                 	db	61	;'='
  1200  00FEC1  22                 	db	34
  1201  00FEC2  43                 	db	67	;'C'
  1202  00FEC3  49                 	db	73	;'I'
  1203  00FEC4  44                 	db	68	;'D'
  1204  00FEC5  22                 	db	34
  1205  00FEC6  2C                 	db	44
  1206  00FEC7  31                 	db	49	;'1'
  1207  00FEC8  0D                 	db	13
  1208  00FEC9  00                 	db	0
  1209  00FECA                     STR_9:
  1210  00FECA  41                 	db	65	;'A'
  1211  00FECB  54                 	db	84	;'T'
  1212  00FECC  2B                 	db	43
  1213  00FECD  53                 	db	83	;'S'
  1214  00FECE  41                 	db	65	;'A'
  1215  00FECF  50                 	db	80	;'P'
  1216  00FED0  42                 	db	66	;'B'
  1217  00FED1  52                 	db	82	;'R'
  1218  00FED2  3D                 	db	61	;'='
  1219  00FED3  33                 	db	51	;'3'
  1220  00FED4  2C                 	db	44
  1221  00FED5  31                 	db	49	;'1'
  1222  00FED6  2C                 	db	44
  1223  00FED7  22                 	db	34
  1224  00FED8  41                 	db	65	;'A'
  1225  00FED9  50                 	db	80	;'P'
  1226  00FEDA  4E                 	db	78	;'N'
  1227  00FEDB  22                 	db	34
  1228  00FEDC  2C                 	db	44
  1229  00FEDD  22                 	db	34
  1230  00FEDE  00                 	db	0
  1231  00FEDF                     STR_23:
  1232  00FEDF  46                 	db	70	;'F'
  1233  00FEE0  72                 	db	114	;'r'
  1234  00FEE1  61                 	db	97	;'a'
  1235  00FEE2  6D                 	db	109	;'m'
  1236  00FEE3  65                 	db	101	;'e'
  1237  00FEE4  77                 	db	119	;'w'
  1238  00FEE5  6F                 	db	111	;'o'
  1239  00FEE6  72                 	db	114	;'r'
  1240  00FEE7  6B                 	db	107	;'k'
  1241  00FEE8  20                 	db	32
  1242  00FEE9  56                 	db	86	;'V'
  1243  00FEEA  65                 	db	101	;'e'
  1244  00FEEB  72                 	db	114	;'r'
  1245  00FEEC  73                 	db	115	;'s'
  1246  00FEED  69                 	db	105	;'i'
  1247  00FEEE  6F                 	db	111	;'o'
  1248  00FEEF  6E                 	db	110	;'n'
  1249  00FEF0  3A                 	db	58	;':'
  1250  00FEF1  20                 	db	32
  1251  00FEF2  00                 	db	0
  1252  00FEF3                     STR_15:
  1253  00FEF3  41                 	db	65	;'A'
  1254  00FEF4  54                 	db	84	;'T'
  1255  00FEF5  2B                 	db	43
  1256  00FEF6  48                 	db	72	;'H'
  1257  00FEF7  54                 	db	84	;'T'
  1258  00FEF8  54                 	db	84	;'T'
  1259  00FEF9  50                 	db	80	;'P'
  1260  00FEFA  50                 	db	80	;'P'
  1261  00FEFB  41                 	db	65	;'A'
  1262  00FEFC  52                 	db	82	;'R'
  1263  00FEFD  41                 	db	65	;'A'
  1264  00FEFE  3D                 	db	61	;'='
  1265  00FEFF  22                 	db	34
  1266  00FF00  55                 	db	85	;'U'
  1267  00FF01  52                 	db	82	;'R'
  1268  00FF02  4C                 	db	76	;'L'
  1269  00FF03  22                 	db	34
  1270  00FF04  2C                 	db	44
  1271  00FF05  22                 	db	34
  1272  00FF06  00                 	db	0
  1273  00FF07                     STR_29:
  1274  00FF07  41                 	db	65	;'A'
  1275  00FF08  54                 	db	84	;'T'
  1276  00FF09  2B                 	db	43
  1277  00FF0A  43                 	db	67	;'C'
  1278  00FF0B  4D                 	db	77	;'M'
  1279  00FF0C  47                 	db	71	;'G'
  1280  00FF0D  44                 	db	68	;'D'
  1281  00FF0E  41                 	db	65	;'A'
  1282  00FF0F  3D                 	db	61	;'='
  1283  00FF10  44                 	db	68	;'D'
  1284  00FF11  45                 	db	69	;'E'
  1285  00FF12  4C                 	db	76	;'L'
  1286  00FF13  20                 	db	32
  1287  00FF14  41                 	db	65	;'A'
  1288  00FF15  4C                 	db	76	;'L'
  1289  00FF16  4C                 	db	76	;'L'
  1290  00FF17  0D                 	db	13
  1291  00FF18  0A                 	db	10
  1292  00FF19  00                 	db	0
  1293  00FF1A                     STR_27:
  1294  00FF1A  42                 	db	66	;'B'
  1295  00FF1B  75                 	db	117	;'u'
  1296  00FF1C  69                 	db	105	;'i'
  1297  00FF1D  6C                 	db	108	;'l'
  1298  00FF1E  64                 	db	100	;'d'
  1299  00FF1F  20                 	db	32
  1300  00FF20  44                 	db	68	;'D'
  1301  00FF21  61                 	db	97	;'a'
  1302  00FF22  74                 	db	116	;'t'
  1303  00FF23  65                 	db	101	;'e'
  1304  00FF24  3A                 	db	58	;':'
  1305  00FF25  20                 	db	32
  1306  00FF26  25                 	db	37
  1307  00FF27  73                 	db	115	;'s'
  1308  00FF28  0D                 	db	13
  1309  00FF29  0A                 	db	10
  1310  00FF2A  00                 	db	0
  1311  00FF2B                     STR_16:
  1312  00FF2B  41                 	db	65	;'A'
  1313  00FF2C  54                 	db	84	;'T'
  1314  00FF2D  2B                 	db	43
  1315  00FF2E  48                 	db	72	;'H'
  1316  00FF2F  54                 	db	84	;'T'
  1317  00FF30  54                 	db	84	;'T'
  1318  00FF31  50                 	db	80	;'P'
  1319  00FF32  41                 	db	65	;'A'
  1320  00FF33  43                 	db	67	;'C'
  1321  00FF34  54                 	db	84	;'T'
  1322  00FF35  49                 	db	73	;'I'
  1323  00FF36  4F                 	db	79	;'O'
  1324  00FF37  4E                 	db	78	;'N'
  1325  00FF38  3D                 	db	61	;'='
  1326  00FF39  30                 	db	48	;'0'
  1327  00FF3A  0D                 	db	13
  1328  00FF3B  00                 	db	0
  1329  00FF3C  41                 	db	65	;'A'
  1330  00FF3D  54                 	db	84	;'T'
  1331  00FF3E  2B                 	db	43
  1332  00FF3F  48                 	db	72	;'H'
  1333  00FF40  54                 	db	84	;'T'
  1334  00FF41  54                 	db	84	;'T'
  1335  00FF42  50                 	db	80	;'P'
  1336  00FF43  53                 	db	83	;'S'
  1337  00FF44  53                 	db	83	;'S'
  1338  00FF45  4C                 	db	76	;'L'
  1339  00FF46  3D                 	db	61	;'='
  1340  00FF47  30                 	db	48	;'0'
  1341  00FF48  0D                 	db	13
  1342  00FF49  00                 	db	0
  1343  00FF4A                     STR_10:
  1344  00FF4A  41                 	db	65	;'A'
  1345  00FF4B  54                 	db	84	;'T'
  1346  00FF4C  2B                 	db	43
  1347  00FF4D  53                 	db	83	;'S'
  1348  00FF4E  41                 	db	65	;'A'
  1349  00FF4F  50                 	db	80	;'P'
  1350  00FF50  42                 	db	66	;'B'
  1351  00FF51  52                 	db	82	;'R'
  1352  00FF52  3D                 	db	61	;'='
  1353  00FF53  31                 	db	49	;'1'
  1354  00FF54  2C                 	db	44
  1355  00FF55  31                 	db	49	;'1'
  1356  00FF56  0D                 	db	13
  1357  00FF57  00                 	db	0
  1358  00FF58                     STR_11:
  1359  00FF58  41                 	db	65	;'A'
  1360  00FF59  54                 	db	84	;'T'
  1361  00FF5A  2B                 	db	43
  1362  00FF5B  53                 	db	83	;'S'
  1363  00FF5C  41                 	db	65	;'A'
  1364  00FF5D  50                 	db	80	;'P'
  1365  00FF5E  42                 	db	66	;'B'
  1366  00FF5F  52                 	db	82	;'R'
  1367  00FF60  3D                 	db	61	;'='
  1368  00FF61  32                 	db	50	;'2'
  1369  00FF62  2C                 	db	44
  1370  00FF63  31                 	db	49	;'1'
  1371  00FF64  0D                 	db	13
  1372  00FF65  00                 	db	0
  1373  00FF66                     STR_13:
  1374  00FF66  41                 	db	65	;'A'
  1375  00FF67  54                 	db	84	;'T'
  1376  00FF68  2B                 	db	43
  1377  00FF69  48                 	db	72	;'H'
  1378  00FF6A  54                 	db	84	;'T'
  1379  00FF6B  54                 	db	84	;'T'
  1380  00FF6C  50                 	db	80	;'P'
  1381  00FF6D  53                 	db	83	;'S'
  1382  00FF6E  53                 	db	83	;'S'
  1383  00FF6F  4C                 	db	76	;'L'
  1384  00FF70  3D                 	db	61	;'='
  1385  00FF71  31                 	db	49	;'1'
  1386  00FF72  0D                 	db	13
  1387  00FF73  00                 	db	0
  1388  00FF74                     STR_2:
  1389  00FF74  41                 	db	65	;'A'
  1390  00FF75  54                 	db	84	;'T'
  1391  00FF76  2B                 	db	43
  1392  00FF77  49                 	db	73	;'I'
  1393  00FF78  50                 	db	80	;'P'
  1394  00FF79  52                 	db	82	;'R'
  1395  00FF7A  3D                 	db	61	;'='
  1396  00FF7B  39                 	db	57	;'9'
  1397  00FF7C  36                 	db	54	;'6'
  1398  00FF7D  30                 	db	48	;'0'
  1399  00FF7E  30                 	db	48	;'0'
  1400  00FF7F  0D                 	db	13
  1401  00FF80  0A                 	db	10
  1402  00FF81  00                 	db	0
  1403  00FF82                     STR_17:
  1404  00FF82  41                 	db	65	;'A'
  1405  00FF83  54                 	db	84	;'T'
  1406  00FF84  2B                 	db	43
  1407  00FF85  48                 	db	72	;'H'
  1408  00FF86  54                 	db	84	;'T'
  1409  00FF87  54                 	db	84	;'T'
  1410  00FF88  50                 	db	80	;'P'
  1411  00FF89  52                 	db	82	;'R'
  1412  00FF8A  45                 	db	69	;'E'
  1413  00FF8B  41                 	db	65	;'A'
  1414  00FF8C  44                 	db	68	;'D'
  1415  00FF8D  0D                 	db	13
  1416  00FF8E  00                 	db	0
  1417  00FF8F                     STR_18:
  1418  00FF8F  41                 	db	65	;'A'
  1419  00FF90  54                 	db	84	;'T'
  1420  00FF91  2B                 	db	43
  1421  00FF92  48                 	db	72	;'H'
  1422  00FF93  54                 	db	84	;'T'
  1423  00FF94  54                 	db	84	;'T'
  1424  00FF95  50                 	db	80	;'P'
  1425  00FF96  54                 	db	84	;'T'
  1426  00FF97  45                 	db	69	;'E'
  1427  00FF98  52                 	db	82	;'R'
  1428  00FF99  4D                 	db	77	;'M'
  1429  00FF9A  0D                 	db	13
  1430  00FF9B  00                 	db	0
  1431  00FF9C                     STR_12:
  1432  00FF9C  41                 	db	65	;'A'
  1433  00FF9D  54                 	db	84	;'T'
  1434  00FF9E  2B                 	db	43
  1435  00FF9F  48                 	db	72	;'H'
  1436  00FFA0  54                 	db	84	;'T'
  1437  00FFA1  54                 	db	84	;'T'
  1438  00FFA2  50                 	db	80	;'P'
  1439  00FFA3  49                 	db	73	;'I'
  1440  00FFA4  4E                 	db	78	;'N'
  1441  00FFA5  49                 	db	73	;'I'
  1442  00FFA6  54                 	db	84	;'T'
  1443  00FFA7  0D                 	db	13
  1444  00FFA8  00                 	db	0
  1445  00FFA9                     STR_30:
  1446  00FFA9  41                 	db	65	;'A'
  1447  00FFAA  54                 	db	84	;'T'
  1448  00FFAB  2B                 	db	43
  1449  00FFAC  43                 	db	67	;'C'
  1450  00FFAD  4C                 	db	76	;'L'
  1451  00FFAE  49                 	db	73	;'I'
  1452  00FFAF  50                 	db	80	;'P'
  1453  00FFB0  3D                 	db	61	;'='
  1454  00FFB1  31                 	db	49	;'1'
  1455  00FFB2  0D                 	db	13
  1456  00FFB3  0A                 	db	10
  1457  00FFB4  00                 	db	0
  1458  00FFB5                     STR_28:
  1459  00FFB5  4D                 	db	77	;'M'
  1460  00FFB6  61                 	db	97	;'a'
  1461  00FFB7  72                 	db	114	;'r'
  1462  00FFB8  20                 	db	32
  1463  00FFB9  31                 	db	49	;'1'
  1464  00FFBA  39                 	db	57	;'9'
  1465  00FFBB  20                 	db	32
  1466  00FFBC  32                 	db	50	;'2'
  1467  00FFBD  30                 	db	48	;'0'
  1468  00FFBE  32                 	db	50	;'2'
  1469  00FFBF  32                 	db	50	;'2'
  1470  00FFC0  00                 	db	0
  1471  00FFC1                     STR_4:
  1472  00FFC1  41                 	db	65	;'A'
  1473  00FFC2  54                 	db	84	;'T'
  1474  00FFC3  2B                 	db	43
  1475  00FFC4  43                 	db	67	;'C'
  1476  00FFC5  4D                 	db	77	;'M'
  1477  00FFC6  47                 	db	71	;'G'
  1478  00FFC7  52                 	db	82	;'R'
  1479  00FFC8  3D                 	db	61	;'='
  1480  00FFC9  31                 	db	49	;'1'
  1481  00FFCA  0D                 	db	13
  1482  00FFCB  0A                 	db	10
  1483  00FFCC  00                 	db	0
  1484  00FFCD                     STR_5:
  1485  00FFCD  41                 	db	65	;'A'
  1486  00FFCE  54                 	db	84	;'T'
  1487  00FFCF  2B                 	db	43
  1488  00FFD0  43                 	db	67	;'C'
  1489  00FFD1  4D                 	db	77	;'M'
  1490  00FFD2  47                 	db	71	;'G'
  1491  00FFD3  53                 	db	83	;'S'
  1492  00FFD4  3D                 	db	61	;'='
  1493  00FFD5  22                 	db	34
  1494  00FFD6  00                 	db	0
  1495  00FFD7                     STR_31:
  1496  00FFD7  28                 	db	40
  1497  00FFD8  6E                 	db	110	;'n'
  1498  00FFD9  75                 	db	117	;'u'
  1499  00FFDA  6C                 	db	108	;'l'
  1500  00FFDB  6C                 	db	108	;'l'
  1501  00FFDC  29                 	db	41
  1502  00FFDD  00                 	db	0
  1503  00FFDE                     STR_3:
  1504  00FFDE  41                 	db	65	;'A'
  1505  00FFDF  54                 	db	84	;'T'
  1506  00FFE0  45                 	db	69	;'E'
  1507  00FFE1  30                 	db	48	;'0'
  1508  00FFE2  0D                 	db	13
  1509  00FFE3  0A                 	db	10
  1510  00FFE4  00                 	db	0
  1511  00FFE5                     STR_1:
  1512  00FFE5  41                 	db	65	;'A'
  1513  00FFE6  54                 	db	84	;'T'
  1514  00FFE7  0D                 	db	13
  1515  00FFE8  0A                 	db	10
  1516  00FFE9  00                 	db	0
  1517  00FFEA  41                 	db	65	;'A'
  1518  00FFEB  54                 	db	84	;'T'
  1519  00FFEC  41                 	db	65	;'A'
  1520  00FFED  0D                 	db	13
  1521  00FFEE  00                 	db	0
  1522  00FFEF                     STR_6:
  1523  00FFEF  41                 	db	65	;'A'
  1524  00FFF0  54                 	db	84	;'T'
  1525  00FFF1  48                 	db	72	;'H'
  1526  00FFF2  0D                 	db	13
  1527  00FFF3  00                 	db	0
  1528  00FFF4                     STR_24:
  1529  00FFF4  2E                 	db	46
  1530  00FFF5  00                 	db	0
  1531  0000                     
  1532                           ; #config settings
  1533  00FFF6  00                 	db	0	; dummy byte at the end
  1534  0000                     
  1535                           	psect	cinit
  1536  002584                     __pcinit:
  1537                           	opt stack 0
  1538  002584                     start_initialization:
  1539                           	opt stack 0
  1540  002584                     __initialization:
  1541                           	opt stack 0
  1542                           
  1543                           ; Initialize objects allocated to BANK5 (80 bytes)
  1544                           ; load TBLPTR registers with __pidataBANK5
  1545  002584  0E64               	movlw	low __pidataBANK5
  1546  002586  6EF6               	movwf	tblptrl,c
  1547  002588  0E55               	movlw	high __pidataBANK5
  1548  00258A  6EF7               	movwf	tblptrh,c
  1549  00258C  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1550  00258E  6EF8               	movwf	tblptru,c
  1551  002590  EE05  F0A4         	lfsr	0,__pdataBANK5
  1552  002594  EE10 F050          	lfsr	1,80
  1553  002598                     copy_data0:
  1554  002598  0009               	tblrd		*+
  1555  00259A  CFF5 FFEE          	movff	tablat,postinc0
  1556  00259E  50E5               	movf	postdec1,w,c
  1557  0025A0  50E1               	movf	fsr1l,w,c
  1558  0025A2  E1FA               	bnz	copy_data0
  1559                           
  1560                           ; Initialize objects allocated to BANK3 (65 bytes)
  1561                           ; load TBLPTR registers with __pidataBANK3
  1562  0025A4  0E64               	movlw	low __pidataBANK3
  1563  0025A6  6EF6               	movwf	tblptrl,c
  1564  0025A8  0E59               	movlw	high __pidataBANK3
  1565  0025AA  6EF7               	movwf	tblptrh,c
  1566  0025AC  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1567  0025AE  6EF8               	movwf	tblptru,c
  1568  0025B0  EE03  F0BA         	lfsr	0,__pdataBANK3
  1569  0025B4  EE10 F041          	lfsr	1,65
  1570  0025B8                     copy_data1:
  1571  0025B8  0009               	tblrd		*+
  1572  0025BA  CFF5 FFEE          	movff	tablat,postinc0
  1573  0025BE  50E5               	movf	postdec1,w,c
  1574  0025C0  50E1               	movf	fsr1l,w,c
  1575  0025C2  E1FA               	bnz	copy_data1
  1576                           
  1577                           ; Initialize objects allocated to BANK2 (13 bytes)
  1578                           ; load TBLPTR registers with __pidataBANK2
  1579  0025C4  0E5C               	movlw	low __pidataBANK2
  1580  0025C6  6EF6               	movwf	tblptrl,c
  1581  0025C8  0E62               	movlw	high __pidataBANK2
  1582  0025CA  6EF7               	movwf	tblptrh,c
  1583  0025CC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1584  0025CE  6EF8               	movwf	tblptru,c
  1585  0025D0  EE02  F0F3         	lfsr	0,__pdataBANK2
  1586  0025D4  EE10 F00D          	lfsr	1,13
  1587  0025D8                     copy_data2:
  1588  0025D8  0009               	tblrd		*+
  1589  0025DA  CFF5 FFEE          	movff	tablat,postinc0
  1590  0025DE  50E5               	movf	postdec1,w,c
  1591  0025E0  50E1               	movf	fsr1l,w,c
  1592  0025E2  E1FA               	bnz	copy_data2
  1593                           
  1594                           ; Initialize objects allocated to BANK1 (1 bytes)
  1595                           ; load TBLPTR registers with __pidataBANK1
  1596  0025E4  0ED9               	movlw	low __pidataBANK1
  1597  0025E6  6EF6               	movwf	tblptrl,c
  1598  0025E8  0E62               	movlw	high __pidataBANK1
  1599  0025EA  6EF7               	movwf	tblptrh,c
  1600  0025EC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1601  0025EE  6EF8               	movwf	tblptru,c
  1602  0025F0  0009               	tblrd		*+	;fetch initializer
  1603  0025F2  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1604                           
  1605                           ; Initialize objects allocated to BANK4 (24 bytes)
  1606                           ; load TBLPTR registers with __pidataBANK4
  1607  0025F6  0EFC               	movlw	low __pidataBANK4
  1608  0025F8  6EF6               	movwf	tblptrl,c
  1609  0025FA  0E60               	movlw	high __pidataBANK4
  1610  0025FC  6EF7               	movwf	tblptrh,c
  1611  0025FE  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1612  002600  6EF8               	movwf	tblptru,c
  1613  002602  EE04  F0BF         	lfsr	0,__pdataBANK4
  1614  002606  EE10 F018          	lfsr	1,24
  1615  00260A                     copy_data3:
  1616  00260A  0009               	tblrd		*+
  1617  00260C  CFF5 FFEE          	movff	tablat,postinc0
  1618  002610  50E5               	movf	postdec1,w,c
  1619  002612  50E1               	movf	fsr1l,w,c
  1620  002614  E1FA               	bnz	copy_data3
  1621                           
  1622                           ; Initialize objects allocated to BANK0 (1 bytes)
  1623                           ; load TBLPTR registers with __pidataBANK0
  1624  002616  0ED8               	movlw	low __pidataBANK0
  1625  002618  6EF6               	movwf	tblptrl,c
  1626  00261A  0E62               	movlw	high __pidataBANK0
  1627  00261C  6EF7               	movwf	tblptrh,c
  1628  00261E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1629  002620  6EF8               	movwf	tblptru,c
  1630  002622  0009               	tblrd		*+	;fetch initializer
  1631  002624  CFF5 F0E2          	movff	tablat,__pdataBANK0
  1632                           
  1633                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1634  002628  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1635  00262C  EE13 F020          	lfsr	1,800
  1636  002630                     clear_0:
  1637  002630  6AEE               	clrf	postinc0,c
  1638  002632  50E5               	movf	postdec1,w,c
  1639  002634  50E1               	movf	fsr1l,w,c
  1640  002636  E1FC               	bnz	clear_0
  1641  002638  50E2               	movf	fsr1h,w,c
  1642  00263A  E1FA               	bnz	clear_0
  1643                           
  1644                           ; Clear objects allocated to BANK9 (200 bytes)
  1645  00263C  EE09  F000         	lfsr	0,__pbssBANK9
  1646  002640  0EC8               	movlw	200
  1647  002642                     clear_1:
  1648  002642  6AEE               	clrf	postinc0,c
  1649  002644  06E8               	decf	wreg,f,c
  1650  002646  E1FD               	bnz	clear_1
  1651                           
  1652                           ; Clear objects allocated to BANK8 (200 bytes)
  1653  002648  EE08  F000         	lfsr	0,__pbssBANK8
  1654  00264C  0EC8               	movlw	200
  1655  00264E                     clear_2:
  1656  00264E  6AEE               	clrf	postinc0,c
  1657  002650  06E8               	decf	wreg,f,c
  1658  002652  E1FD               	bnz	clear_2
  1659                           
  1660                           ; Clear objects allocated to BANK7 (246 bytes)
  1661  002654  EE07  F000         	lfsr	0,__pbssBANK7
  1662  002658  0EF6               	movlw	246
  1663  00265A                     clear_3:
  1664  00265A  6AEE               	clrf	postinc0,c
  1665  00265C  06E8               	decf	wreg,f,c
  1666  00265E  E1FD               	bnz	clear_3
  1667                           
  1668                           ; Clear objects allocated to BANK6 (220 bytes)
  1669  002660  EE06  F000         	lfsr	0,__pbssBANK6
  1670  002664  0EDC               	movlw	220
  1671  002666                     clear_4:
  1672  002666  6AEE               	clrf	postinc0,c
  1673  002668  06E8               	decf	wreg,f,c
  1674  00266A  E1FD               	bnz	clear_4
  1675                           
  1676                           ; Clear objects allocated to BANK5 (164 bytes)
  1677  00266C  EE05  F000         	lfsr	0,__pbssBANK5
  1678  002670  0EA4               	movlw	164
  1679  002672                     clear_5:
  1680  002672  6AEE               	clrf	postinc0,c
  1681  002674  06E8               	decf	wreg,f,c
  1682  002676  E1FD               	bnz	clear_5
  1683                           
  1684                           ; Clear objects allocated to BANK3 (186 bytes)
  1685  002678  EE03  F000         	lfsr	0,__pbssBANK3
  1686  00267C  0EBA               	movlw	186
  1687  00267E                     clear_6:
  1688  00267E  6AEE               	clrf	postinc0,c
  1689  002680  06E8               	decf	wreg,f,c
  1690  002682  E1FD               	bnz	clear_6
  1691                           
  1692                           ; Clear objects allocated to BANK2 (43 bytes)
  1693  002684  EE02  F0C8         	lfsr	0,__pbssBANK2
  1694  002688  0E2B               	movlw	43
  1695  00268A                     clear_7:
  1696  00268A  6AEE               	clrf	postinc0,c
  1697  00268C  06E8               	decf	wreg,f,c
  1698  00268E  E1FD               	bnz	clear_7
  1699                           
  1700                           ; Clear objects allocated to BANK1 (54 bytes)
  1701  002690  EE01  F0C9         	lfsr	0,__pbssBANK1
  1702  002694  0E36               	movlw	54
  1703  002696                     clear_8:
  1704  002696  6AEE               	clrf	postinc0,c
  1705  002698  06E8               	decf	wreg,f,c
  1706  00269A  E1FD               	bnz	clear_8
  1707                           
  1708                           ; Clear objects allocated to BANK4 (127 bytes)
  1709  00269C  EE04  F040         	lfsr	0,__pbssBANK4
  1710  0026A0  0E7F               	movlw	127
  1711  0026A2                     clear_9:
  1712  0026A2  6AEE               	clrf	postinc0,c
  1713  0026A4  06E8               	decf	wreg,f,c
  1714  0026A6  E1FD               	bnz	clear_9
  1715                           
  1716                           ; Clear objects allocated to BANK0 (50 bytes)
  1717  0026A8  EE00  F0B0         	lfsr	0,__pbssBANK0
  1718  0026AC  0E32               	movlw	50
  1719  0026AE                     clear_10:
  1720  0026AE  6AEE               	clrf	postinc0,c
  1721  0026B0  06E8               	decf	wreg,f,c
  1722  0026B2  E1FD               	bnz	clear_10
  1723                           
  1724                           ; Clear objects allocated to COMRAM (31 bytes)
  1725  0026B4  EE00  F023         	lfsr	0,__pbssCOMRAM
  1726  0026B8  0E1F               	movlw	31
  1727  0026BA                     clear_11:
  1728  0026BA  6AEE               	clrf	postinc0,c
  1729  0026BC  06E8               	decf	wreg,f,c
  1730  0026BE  E1FD               	bnz	clear_11
  1731  0026C0                     end_of_initialization:
  1732                           	opt stack 0
  1733  0026C0                     __end_of__initialization:
  1734                           	opt stack 0
  1735  0026C0  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1736  0026C2  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1737  0026C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1738  0026C6  6EF8               	movwf	tblptru,c
  1739  0026C8  0100               	movlb	0
  1740  0026CA  EF35  F031         	goto	_main	;jump to C main() function
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1h	equ	0xFE2
  1749                           fsr1l	equ	0xFE1
  1750                           
  1751                           	psect	bssCOMRAM
  1752  000023                     __pbssCOMRAM:
  1753                           	opt stack 0
  1754  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1755                           	opt stack 0
  1756  000023                     	ds	2
  1757  000025                     _USBDeferOUTDataStagePackets:
  1758                           	opt stack 0
  1759  000025                     	ds	1
  1760  000026                     _USBDeferINDataStagePackets:
  1761                           	opt stack 0
  1762  000026                     	ds	1
  1763  000027                     _USBStatusStageEnabledFlag2:
  1764                           	opt stack 0
  1765  000027                     	ds	1
  1766  000028                     ConfigureModem@MdmConfigState:
  1767                           	opt stack 0
  1768  000028                     	ds	1
  1769  000029                     TurnOnModem@TurnOnMdmState:
  1770                           	opt stack 0
  1771  000029                     	ds	1
  1772  00002A                     CheckModem@CheckMdmSts:
  1773                           	opt stack 0
  1774  00002A                     	ds	1
  1775  00002B                     _ComChecCompleted:
  1776                           	opt stack 0
  1777  00002B                     	ds	1
  1778  00002C                     Uart_Uart1RxIsr@UartRxData:
  1779                           	opt stack 0
  1780  00002C                     	ds	1
  1781  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1782                           	opt stack 0
  1783  00002D                     	ds	1
  1784  00002E                     MdmCntSm@MdmCntState:
  1785                           	opt stack 0
  1786  00002E                     	ds	1
  1787  00002F                     RiSm@MdmDrvState:
  1788                           	opt stack 0
  1789  00002F                     	ds	1
  1790  000030                     _Mmd_RingIndicator:
  1791                           	opt stack 0
  1792  000030                     	ds	1
  1793  000031                     I2c_ReadData@ReadStatus:
  1794                           	opt stack 0
  1795  000031                     	ds	1
  1796  000032                     I2c_ReadData@TentativeCounter:
  1797                           	opt stack 0
  1798  000032                     	ds	1
  1799  000033                     I2c_ReadData@DataCounter:
  1800                           	opt stack 0
  1801  000033                     	ds	1
  1802  000034                     I2c_ReadData@I2cReadState:
  1803                           	opt stack 0
  1804  000034                     	ds	1
  1805  000035                     I2c_WriteData@WriteStatus:
  1806                           	opt stack 0
  1807  000035                     	ds	1
  1808  000036                     I2c_WriteData@TentativeCounter:
  1809                           	opt stack 0
  1810  000036                     	ds	1
  1811  000037                     I2c_WriteData@I2cNextState:
  1812                           	opt stack 0
  1813  000037                     	ds	1
  1814  000038                     I2c_WriteData@I2cWriteState:
  1815                           	opt stack 0
  1816  000038                     	ds	1
  1817  000039                     _MdmStsReady:
  1818                           	opt stack 0
  1819  000039                     	ds	1
  1820  00003A                     _NewStringMdmTerminal:
  1821                           	opt stack 0
  1822  00003A                     	ds	1
  1823  00003B                     _NewMdmEvtParserRequest:
  1824                           	opt stack 0
  1825  00003B                     	ds	1
  1826  00003C                     _NewStringReceived:
  1827                           	opt stack 0
  1828  00003C                     	ds	1
  1829  00003D                     _MdmResetRequest:
  1830                           	opt stack 0
  1831  00003D                     	ds	1
  1832  00003E                     _CallClosedEvent:
  1833                           	opt stack 0
  1834  00003E                     	ds	1
  1835  00003F                     _IncomingCallEvent:
  1836                           	opt stack 0
  1837  00003F                     	ds	1
  1838  000040                     _NewSmsEvent:
  1839                           	opt stack 0
  1840  000040                     	ds	1
  1841  000041                     _ActivateRiDetection:
  1842                           	opt stack 0
  1843  000041                     	ds	1
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           postdec1	equ	0xFE5
  1851                           fsr1h	equ	0xFE2
  1852                           fsr1l	equ	0xFE1
  1853                           
  1854                           	psect	bssBANK0
  1855  0000B0                     __pbssBANK0:
  1856                           	opt stack 0
  1857  0000B0                     _inPipes:
  1858                           	opt stack 0
  1859  0000B0                     	ds	6
  1860  0000B6                     _pBDTEntryIn:
  1861                           	opt stack 0
  1862  0000B6                     	ds	6
  1863  0000BC                     _CDCDataOutHandle:
  1864                           	opt stack 0
  1865  0000BC                     	ds	2
  1866  0000BE                     _pBDTEntryEP0OutNext:
  1867                           	opt stack 0
  1868  0000BE                     	ds	2
  1869  0000C0                     _pBDTEntryEP0OutCurrent:
  1870                           	opt stack 0
  1871  0000C0                     	ds	2
  1872  0000C2                     _RxLen:
  1873                           	opt stack 0
  1874  0000C2                     	ds	2
  1875  0000C4                     _cdc_tx_len:
  1876                           	opt stack 0
  1877  0000C4                     	ds	1
  1878  0000C5                     _cdc_trf_state:
  1879                           	opt stack 0
  1880  0000C5                     	ds	1
  1881  0000C6                     _cdc_rx_len:
  1882                           	opt stack 0
  1883  0000C6                     	ds	1
  1884  0000C7                     _USBStatusStageEnabledFlag1:
  1885                           	opt stack 0
  1886  0000C7                     	ds	1
  1887  0000C8                     _USBDeferStatusStagePacket:
  1888                           	opt stack 0
  1889  0000C8                     	ds	1
  1890  0000C9                     _USBStatusStageTimeoutCounter:
  1891                           	opt stack 0
  1892  0000C9                     	ds	1
  1893  0000CA                     _endpoint_number:
  1894                           	opt stack 0
  1895  0000CA                     	ds	1
  1896  0000CB                     _controlTransferState:
  1897                           	opt stack 0
  1898  0000CB                     	ds	1
  1899  0000CC                     _shortPacketStatus:
  1900                           	opt stack 0
  1901  0000CC                     	ds	1
  1902  0000CD                     _USBDeviceState:
  1903                           	opt stack 0
  1904  0000CD                     	ds	1
  1905  0000CE                     _I2cComSts:
  1906                           	opt stack 0
  1907  0000CE                     	ds	1
  1908  0000CF                     HttpGetMethod@GetMethodNextState:
  1909                           	opt stack 0
  1910  0000CF                     	ds	1
  1911  0000D0                     InitGprsNetwork@GprsNetInitNextState:
  1912                           	opt stack 0
  1913  0000D0                     	ds	1
  1914  0000D1                     _MdmStatus:
  1915                           	opt stack 0
  1916  0000D1                     	ds	1
  1917  0000D2                     _PhoneNumbLen:
  1918                           	opt stack 0
  1919  0000D2                     	ds	1
  1920  0000D3                     _SmsLen:
  1921                           	opt stack 0
  1922  0000D3                     	ds	1
  1923  0000D4                     _SystemState:
  1924                           	opt stack 0
  1925  0000D4                     	ds	1
  1926  0000D5                     _USTATcopy:
  1927                           	opt stack 0
  1928  0000D5                     	ds	1
  1929  0000D6                     _USBActiveConfiguration:
  1930                           	opt stack 0
  1931  0000D6                     	ds	1
  1932  0000D7                     _I2cReadDataEvt:
  1933                           	opt stack 0
  1934  0000D7                     	ds	1
  1935  0000D8                     _I2cWriteDataEvt:
  1936                           	opt stack 0
  1937  0000D8                     	ds	1
  1938  0000D9                     _GetMethod:
  1939                           	opt stack 0
  1940  0000D9                     	ds	1
  1941  0000DA                     _InitNetwork:
  1942                           	opt stack 0
  1943  0000DA                     	ds	1
  1944  0000DB                     _SmsTxtReady:
  1945                           	opt stack 0
  1946  0000DB                     	ds	1
  1947  0000DC                     _GetSmsText:
  1948                           	opt stack 0
  1949  0000DC                     	ds	1
  1950  0000DD                     _SmsEvent:
  1951                           	opt stack 0
  1952  0000DD                     	ds	1
  1953  0000DE                     _ClipEvent:
  1954                           	opt stack 0
  1955  0000DE                     	ds	1
  1956  0000DF                     _RingEvent:
  1957                           	opt stack 0
  1958  0000DF                     	ds	1
  1959  0000E0                     _SendSmsEvent:
  1960                           	opt stack 0
  1961  0000E0                     	ds	1
  1962  0000E1                     _MdmOnOffPulseRequest:
  1963                           	opt stack 0
  1964  0000E1                     	ds	1
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           postdec1	equ	0xFE5
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           
  1975                           	psect	dataBANK0
  1976  0000E2                     __pdataBANK0:
  1977                           	opt stack 0
  1978  0000E2                     MyApp_Task@memoryFlag:
  1979                           	opt stack 0
  1980  0000E2                     	ds	1
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           postdec1	equ	0xFE5
  1988                           fsr1h	equ	0xFE2
  1989                           fsr1l	equ	0xFE1
  1990                           
  1991                           	psect	bssBANK1
  1992  0001C9                     __pbssBANK1:
  1993                           	opt stack 0
  1994  0001C9                     _outPipes:
  1995                           	opt stack 0
  1996  0001C9                     	ds	8
  1997  0001D1                     _CDCDataInHandle:
  1998                           	opt stack 0
  1999  0001D1                     	ds	2
  2000  0001D3                     _Tmr2IsrCallback:
  2001                           	opt stack 0
  2002  0001D3                     	ds	2
  2003  0001D5                     MyApp_Task@blinkSeconds:
  2004                           	opt stack 0
  2005  0001D5                     	ds	1
  2006  0001D6                     initGprsModem@initMdm:
  2007                           	opt stack 0
  2008  0001D6                     	ds	1
  2009  0001D7                     initGprsModem@isInitialized:
  2010                           	opt stack 0
  2011  0001D7                     	ds	1
  2012  0001D8                     	ds	1
  2013  0001D9                     	ds	1
  2014  0001DA                     	ds	1
  2015  0001DB                     	ds	1
  2016  0001DC                     	ds	1
  2017  0001DD                     	ds	1
  2018  0001DE                     	ds	1
  2019  0001DF                     GsmGprsTerminal@SMS:
  2020                           	opt stack 0
  2021  0001DF                     	ds	1
  2022  0001E0                     	ds	1
  2023  0001E1                     _control_signal_bitmap:
  2024                           	opt stack 0
  2025  0001E1                     	ds	1
  2026  0001E2                     _cdc_mem_type:
  2027                           	opt stack 0
  2028  0001E2                     	ds	1
  2029  0001E3                     _USBTicksSinceSuspendEnd:
  2030                           	opt stack 0
  2031  0001E3                     	ds	1
  2032  0001E4                     _BothEP0OutUOWNsSet:
  2033                           	opt stack 0
  2034  0001E4                     	ds	1
  2035  0001E5                     _USBBusIsSuspended:
  2036                           	opt stack 0
  2037  0001E5                     	ds	1
  2038  0001E6                     _RemoteWakeup:
  2039                           	opt stack 0
  2040  0001E6                     	ds	1
  2041  0001E7                     I2cSlv_QueryI2cData@Ret:
  2042                           	opt stack 0
  2043  0001E7                     	ds	1
  2044  0001E8                     I2cSlv_QueryI2cData@I2cOpState:
  2045                           	opt stack 0
  2046  0001E8                     	ds	1
  2047  0001E9                     I2cSendMsgSm@I2cComState:
  2048                           	opt stack 0
  2049  0001E9                     	ds	1
  2050  0001EA                     _I2cBusStatus:
  2051                           	opt stack 0
  2052  0001EA                     	ds	1
  2053  0001EB                     HttpGetMethod@GetMOutSts:
  2054                           	opt stack 0
  2055  0001EB                     	ds	1
  2056  0001EC                     HttpGetMethod@GetMethodState:
  2057                           	opt stack 0
  2058  0001EC                     	ds	1
  2059  0001ED                     InitGprsNetwork@GprsNetInitState:
  2060                           	opt stack 0
  2061  0001ED                     	ds	1
  2062  0001EE                     _PostMethod:
  2063                           	opt stack 0
  2064  0001EE                     	ds	1
  2065  0001EF                     _HttpGetMethodSts:
  2066                           	opt stack 0
  2067  0001EF                     	ds	1
  2068  0001F0                     _GprsNetworkSts:
  2069                           	opt stack 0
  2070  0001F0                     	ds	1
  2071  0001F1                     _ApnLenLocal:
  2072                           	opt stack 0
  2073  0001F1                     	ds	1
  2074  0001F2                     SendSmsSm@SendSms_NextState:
  2075                           	opt stack 0
  2076  0001F2                     	ds	1
  2077  0001F3                     SendSmsSm@SendSms_State:
  2078                           	opt stack 0
  2079  0001F3                     	ds	1
  2080  0001F4                     GetSmsSm@GetSmsState:
  2081                           	opt stack 0
  2082  0001F4                     	ds	1
  2083  0001F5                     ConfigureModem@NextState:
  2084                           	opt stack 0
  2085  0001F5                     	ds	1
  2086  0001F6                     _ReadAddress:
  2087                           	opt stack 0
  2088  0001F6                     	ds	1
  2089  0001F7                     _AlarmEvent:
  2090                           	opt stack 0
  2091  0001F7                     	ds	1
  2092  0001F8                     _Led3OutSts:
  2093                           	opt stack 0
  2094  0001F8                     	ds	1
  2095  0001F9                     _Led3Sts:
  2096                           	opt stack 0
  2097  0001F9                     	ds	1
  2098  0001FA                     _Led2OutSts:
  2099                           	opt stack 0
  2100  0001FA                     	ds	1
  2101  0001FB                     _Led2Sts:
  2102                           	opt stack 0
  2103  0001FB                     	ds	1
  2104  0001FC                     _Led1OutSts:
  2105                           	opt stack 0
  2106  0001FC                     	ds	1
  2107  0001FD                     _Led1Sts:
  2108                           	opt stack 0
  2109  0001FD                     	ds	1
  2110  0001FE                     I2cDummyTx@DummyBuffer:
  2111                           	opt stack 0
  2112  0001FE                     	ds	1
  2113                           tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           
  2123                           	psect	dataBANK1
  2124  0001FF                     __pdataBANK1:
  2125                           	opt stack 0
  2126  0001FF                     InitGprsNetwork@GprsInitSts:
  2127                           	opt stack 0
  2128  0001FF                     	ds	1
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1h	equ	0xFE2
  2137                           fsr1l	equ	0xFE1
  2138                           
  2139                           	psect	bssBANK2
  2140  0002C8                     __pbssBANK2:
  2141                           	opt stack 0
  2142  0002C8                     _pCDCDst:
  2143                           	opt stack 0
  2144  0002C8                     	ds	3
  2145  0002CB                     _pCDCSrc:
  2146                           	opt stack 0
  2147  0002CB                     	ds	3
  2148  0002CE                     _ep_data_out:
  2149                           	opt stack 0
  2150  0002CE                     	ds	3
  2151  0002D1                     _ep_data_in:
  2152                           	opt stack 0
  2153  0002D1                     	ds	3
  2154  0002D4                     _pDst:
  2155                           	opt stack 0
  2156  0002D4                     	ds	2
  2157  0002D6                     _ApnLocal:
  2158                           	opt stack 0
  2159  0002D6                     	ds	2
  2160  0002D8                     ConfigureModem@DelayCounter:
  2161                           	opt stack 0
  2162  0002D8                     	ds	2
  2163  0002DA                     ConfigureModem@DelayValueMs:
  2164                           	opt stack 0
  2165  0002DA                     	ds	2
  2166  0002DC                     TurnOnModem@Counter:
  2167                           	opt stack 0
  2168  0002DC                     	ds	2
  2169  0002DE                     UpdateSchFlag@InterruptCounter:
  2170                           	opt stack 0
  2171  0002DE                     	ds	2
  2172  0002E0                     MdmCntSm@Counter:
  2173                           	opt stack 0
  2174  0002E0                     	ds	2
  2175  0002E2                     RiSm@Counter:
  2176                           	opt stack 0
  2177  0002E2                     	ds	2
  2178  0002E4                     _ExtInt1IsrCallback:
  2179                           	opt stack 0
  2180  0002E4                     	ds	2
  2181  0002E6                     _ExtInt0IsrCallback:
  2182                           	opt stack 0
  2183  0002E6                     	ds	2
  2184  0002E8                     _RtccIsrCallback:
  2185                           	opt stack 0
  2186  0002E8                     	ds	2
  2187  0002EA                     _Tmr4IsrCallback:
  2188                           	opt stack 0
  2189  0002EA                     	ds	2
  2190  0002EC                     Term_MainSm@TermMainSmState:
  2191                           	opt stack 0
  2192  0002EC                     	ds	1
  2193  0002ED                     Terminal@FormatOption:
  2194                           	opt stack 0
  2195  0002ED                     	ds	1
  2196  0002EE                     Terminal@SlaveAddr:
  2197                           	opt stack 0
  2198  0002EE                     	ds	1
  2199  0002EF                     Terminal@PackageLen:
  2200                           	opt stack 0
  2201  0002EF                     	ds	1
  2202  0002F0                     Terminal@TermState:
  2203                           	opt stack 0
  2204  0002F0                     	ds	1
  2205  0002F1                     _USBAlternateInterface:
  2206                           	opt stack 0
  2207  0002F1                     	ds	2
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           
  2218                           	psect	dataBANK2
  2219  0002F3                     __pdataBANK2:
  2220                           	opt stack 0
  2221  0002F3                     Terminal@EchoOption:
  2222                           	opt stack 0
  2223  0002F3                     	ds	1
  2224  0002F4                     _MainSystemTimebaseFlag:
  2225                           	opt stack 0
  2226  0002F4                     	ds	1
  2227  0002F5                     _ConnTimeout:
  2228                           	opt stack 0
  2229  0002F5                     	ds	11
  2230                           tblptru	equ	0xFF8
  2231                           tblptrh	equ	0xFF7
  2232                           tblptrl	equ	0xFF6
  2233                           tablat	equ	0xFF5
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           postdec1	equ	0xFE5
  2237                           fsr1h	equ	0xFE2
  2238                           fsr1l	equ	0xFE1
  2239                           
  2240                           	psect	bssBANK3
  2241  000300                     __pbssBANK3:
  2242                           	opt stack 0
  2243  000300                     _Rtcm_SystemDate:
  2244                           	opt stack 0
  2245  000300                     	ds	8
  2246  000308                     _Rtcm_RtccAlarm:
  2247                           	opt stack 0
  2248  000308                     	ds	6
  2249  00030E                     _pBDTEntryOut:
  2250                           	opt stack 0
  2251  00030E                     	ds	6
  2252  000314                     _BaudRateGen:
  2253                           	opt stack 0
  2254  000314                     	ds	4
  2255  000318                     _USB1msTickCount:
  2256                           	opt stack 0
  2257  000318                     	ds	4
  2258  00031C                     _OsTmr_OsTickCounter:
  2259                           	opt stack 0
  2260  00031C                     	ds	4
  2261  000320                     	ds	2
  2262  000322                     _PhoneNumberLen:
  2263                           	opt stack 0
  2264  000322                     	ds	2
  2265  000324                     _UartConfig:
  2266                           	opt stack 0
  2267  000324                     	ds	21
  2268  000339                     _callerNumber:
  2269                           	opt stack 0
  2270  000339                     	ds	14
  2271  000347                     I2cSlv_QueryI2cData@TimeoutTimer:
  2272                           	opt stack 0
  2273  000347                     	ds	11
  2274  000352                     _I2cConfig:
  2275                           	opt stack 0
  2276  000352                     	ds	10
  2277  00035C                     _Led3Blink:
  2278                           	opt stack 0
  2279  00035C                     	ds	9
  2280  000365                     _Led2Blink:
  2281                           	opt stack 0
  2282  000365                     	ds	9
  2283  00036E                     _Led1Blink:
  2284                           	opt stack 0
  2285  00036E                     	ds	9
  2286  000377                     _dummy_encapsulated_cmd_response:
  2287                           	opt stack 0
  2288  000377                     	ds	8
  2289  00037F                     _line_coding:
  2290                           	opt stack 0
  2291  00037F                     	ds	7
  2292  000386                     _Led3Pulse:
  2293                           	opt stack 0
  2294  000386                     	ds	6
  2295  00038C                     _Led2Pulse:
  2296                           	opt stack 0
  2297  00038C                     	ds	6
  2298  000392                     _Led1Pulse:
  2299                           	opt stack 0
  2300  000392                     	ds	6
  2301  000398                     _I2cRxPacket:
  2302                           	opt stack 0
  2303  000398                     	ds	6
  2304  00039E                     _I2cTxPacket:
  2305                           	opt stack 0
  2306  00039E                     	ds	5
  2307  0003A3                     _HttpGetDataLocal:
  2308                           	opt stack 0
  2309  0003A3                     	ds	5
  2310  0003A8                     Terminal@Addr:
  2311                           	opt stack 0
  2312  0003A8                     	ds	4
  2313  0003AC                     Terminal@Len:
  2314                           	opt stack 0
  2315  0003AC                     	ds	4
  2316  0003B0                     _AlCfg:
  2317                           	opt stack 0
  2318  0003B0                     	ds	4
  2319  0003B4                     _RtcConfig:
  2320                           	opt stack 0
  2321  0003B4                     	ds	4
  2322  0003B8                     initGprsModem@modemCounter:
  2323                           	opt stack 0
  2324  0003B8                     	ds	2
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           
  2335                           	psect	dataBANK3
  2336  0003BA                     __pdataBANK3:
  2337                           	opt stack 0
  2338  0003BA                     ModemEvtParser@F9108:
  2339                           	opt stack 0
  2340  0003BA                     	ds	5
  2341  0003BF                     ModemEvtParser@F9106:
  2342                           	opt stack 0
  2343  0003BF                     	ds	5
  2344  0003C4                     ModemEvtParser@F9104:
  2345                           	opt stack 0
  2346  0003C4                     	ds	4
  2347  0003C8                     MyApp_Task@F9007:
  2348                           	opt stack 0
  2349  0003C8                     	ds	3
  2350  0003CB                     triggerRelay@F8982:
  2351                           	opt stack 0
  2352  0003CB                     	ds	2
  2353  0003CD                     Term_MainSm@TermDelay:
  2354                           	opt stack 0
  2355  0003CD                     	ds	11
  2356  0003D8                     _ConnWait:
  2357                           	opt stack 0
  2358  0003D8                     	ds	11
  2359  0003E3                     SendSmsSm@SwTimer:
  2360                           	opt stack 0
  2361  0003E3                     	ds	11
  2362  0003EE                     CheckModem@Timeout:
  2363                           	opt stack 0
  2364  0003EE                     	ds	11
  2365  0003F9                     MyApp_Task@blinkTicks:
  2366                           	opt stack 0
  2367  0003F9                     	ds	2
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           postdec1	equ	0xFE5
  2375                           fsr1h	equ	0xFE2
  2376                           fsr1l	equ	0xFE1
  2377                           
  2378                           	psect	bssBANK4
  2379  000440                     __pbssBANK4:
  2380                           	opt stack 0
  2381  000440                     	ds	10
  2382  00044A                     _cdc_notice:
  2383                           	opt stack 0
  2384  00044A                     	ds	10
  2385  000454                     Term_MainSm@Data:
  2386                           	opt stack 0
  2387  000454                     	ds	50
  2388  000486                     _PhoneNumber:
  2389                           	opt stack 0
  2390  000486                     	ds	20
  2391  00049A                     _EepromBuffer:
  2392                           	opt stack 0
  2393  00049A                     	ds	15
  2394  0004A9                     Terminal@SwTimer:
  2395                           	opt stack 0
  2396  0004A9                     	ds	11
  2397  0004B4                     I2cSlv_QueryI2cData@QueryTimer:
  2398                           	opt stack 0
  2399  0004B4                     	ds	11
  2400                           tblptru	equ	0xFF8
  2401                           tblptrh	equ	0xFF7
  2402                           tblptrl	equ	0xFF6
  2403                           tablat	equ	0xFF5
  2404                           postinc0	equ	0xFEE
  2405                           wreg	equ	0xFE8
  2406                           postdec1	equ	0xFE5
  2407                           fsr1h	equ	0xFE2
  2408                           fsr1l	equ	0xFE1
  2409                           
  2410                           	psect	dataBANK4
  2411  0004BF                     __pdataBANK4:
  2412                           	opt stack 0
  2413  0004BF                     ModemEvtParser@F9110:
  2414                           	opt stack 0
  2415  0004BF                     	ds	10
  2416  0004C9                     MyApp_Task@phone:
  2417                           	opt stack 0
  2418  0004C9                     	ds	14
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1h	equ	0xFE2
  2427                           fsr1l	equ	0xFE1
  2428                           
  2429                           	psect	bssBANK5
  2430  000500                     __pbssBANK5:
  2431                           	opt stack 0
  2432  000500                     _cdc_data_rx:
  2433                           	opt stack 0
  2434  000500                     	ds	64
  2435  000540                     Terminal@TermRxBuffer:
  2436                           	opt stack 0
  2437  000540                     	ds	50
  2438  000572                     _MessageText:
  2439                           	opt stack 0
  2440  000572                     	ds	50
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           postinc0	equ	0xFEE
  2446                           wreg	equ	0xFE8
  2447                           postdec1	equ	0xFE5
  2448                           fsr1h	equ	0xFE2
  2449                           fsr1l	equ	0xFE1
  2450                           
  2451                           	psect	dataBANK5
  2452  0005A4                     __pdataBANK5:
  2453                           	opt stack 0
  2454  0005A4                     _TaskTable:
  2455                           	opt stack 0
  2456  0005A4                     	ds	80
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           postdec1	equ	0xFE5
  2464                           fsr1h	equ	0xFE2
  2465                           fsr1l	equ	0xFE1
  2466                           
  2467                           	psect	bssBANK6
  2468  000600                     __pbssBANK6:
  2469                           	opt stack 0
  2470  000600                     _OsAlarms:
  2471                           	opt stack 0
  2472  000600                     	ds	220
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           postdec1	equ	0xFE5
  2480                           fsr1h	equ	0xFE2
  2481                           fsr1l	equ	0xFE1
  2482                           
  2483                           	psect	bssBANK7
  2484  000700                     __pbssBANK7:
  2485                           	opt stack 0
  2486  000700                     _Mdm_SmsRx:
  2487                           	opt stack 0
  2488  000700                     	ds	102
  2489  000766                     Terminal@Payload:
  2490                           	opt stack 0
  2491  000766                     	ds	80
  2492  0007B6                     _cdc_data_tx:
  2493                           	opt stack 0
  2494  0007B6                     	ds	64
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           postdec1	equ	0xFE5
  2502                           fsr1h	equ	0xFE2
  2503                           fsr1l	equ	0xFE1
  2504                           
  2505                           	psect	bssBANK8
  2506  000800                     __pbssBANK8:
  2507                           	opt stack 0
  2508  000800                     GsmGprsTerminal@UsbBuffer:
  2509                           	opt stack 0
  2510  000800                     	ds	200
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           postinc0	equ	0xFEE
  2516                           wreg	equ	0xFE8
  2517                           postdec1	equ	0xFE5
  2518                           fsr1h	equ	0xFE2
  2519                           fsr1l	equ	0xFE1
  2520                           
  2521                           	psect	bssBANK9
  2522  000900                     __pbssBANK9:
  2523                           	opt stack 0
  2524  000900                     GsmGprsTerminal@UartBuffer:
  2525                           	opt stack 0
  2526  000900                     	ds	200
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           
  2537                           	psect	bssBIGRAMl
  2538  000AC8                     __pbssBIGRAMl:
  2539                           	opt stack 0
  2540  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2541                           	opt stack 0
  2542  000AC8                     	ds	400
  2543  000C58                     _RxBuffer:
  2544                           	opt stack 0
  2545  000C58                     	ds	400
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec1	equ	0xFE5
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           
  2556                           	psect	cstackBANK10
  2557  000A00                     __pcstackBANK10:
  2558                           	opt stack 0
  2559  000A00                     Terminal@UsbRxBuffer:
  2560                           	opt stack 0
  2561                           
  2562                           ; 200 bytes @ 0x0
  2563  000A00                     	ds	200
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           
  2574                           	psect	cstackBANK3
  2575  0003FB                     __pcstackBANK3:
  2576                           	opt stack 0
  2577  0003FB                     ??_InitializeTasks:
  2578  0003FB                     ??_ScheduleTasks:
  2579                           
  2580                           ; 1 bytes @ 0x0
  2581  0003FB                     	ds	2
  2582  0003FD                     InitializeTasks@ActiveTaskIndex:
  2583                           	opt stack 0
  2584                           
  2585                           ; 1 bytes @ 0x2
  2586  0003FD                     	ds	2
  2587  0003FF                     ScheduleTasks@ActiveTaskIndex:
  2588                           	opt stack 0
  2589                           
  2590                           ; 1 bytes @ 0x4
  2591  0003FF                     	ds	1
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           
  2602                           	psect	cstackBANK2
  2603  000200                     __pcstackBANK2:
  2604                           	opt stack 0
  2605  000200                     Terminal@UsbTxBuffer:
  2606                           	opt stack 0
  2607                           
  2608                           ; 200 bytes @ 0x0
  2609  000200                     	ds	200
  2610                           tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1h	equ	0xFE2
  2618                           fsr1l	equ	0xFE1
  2619                           
  2620                           	psect	cstackBANK1
  2621  000100                     __pcstackBANK1:
  2622                           	opt stack 0
  2623  000100                     MyApp_Task@cmpString:
  2624                           	opt stack 0
  2625  000100                     SendSmsSm@UartMessage:
  2626                           	opt stack 0
  2627  000100                     InitGprsNetwork@UartMessage:
  2628                           	opt stack 0
  2629  000100                     Terminal@TermTxBuffer:
  2630                           	opt stack 0
  2631  000100                     HttpGetMethod@UartMessage:
  2632                           	opt stack 0
  2633                           
  2634                           ; 200 bytes @ 0x0
  2635  000100                     	ds	3
  2636  000103                     MyApp_Task@memoryResult:
  2637                           	opt stack 0
  2638                           
  2639                           ; 1 bytes @ 0x3
  2640  000103                     	ds	47
  2641  000132                     InitGprsNetwork@Index:
  2642                           	opt stack 0
  2643  000132                     Term_MainSm@FwkMajorStr:
  2644                           	opt stack 0
  2645                           
  2646                           ; 4 bytes @ 0x32
  2647  000132                     	ds	4
  2648  000136                     Term_MainSm@FwkMinorStr:
  2649                           	opt stack 0
  2650                           
  2651                           ; 4 bytes @ 0x36
  2652  000136                     	ds	4
  2653  00013A                     Term_MainSm@FwkBuildStr:
  2654                           	opt stack 0
  2655                           
  2656                           ; 4 bytes @ 0x3A
  2657  00013A                     	ds	142
  2658  0001C8                     HttpGetMethod@Index:
  2659                           	opt stack 0
  2660                           
  2661                           ; 1 bytes @ 0xC8
  2662  0001C8                     	ds	1
  2663                           tblptru	equ	0xFF8
  2664                           tblptrh	equ	0xFF7
  2665                           tblptrl	equ	0xFF6
  2666                           tablat	equ	0xFF5
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           postdec1	equ	0xFE5
  2670                           fsr1h	equ	0xFE2
  2671                           fsr1l	equ	0xFE1
  2672                           
  2673                           	psect	cstackBANK0
  2674  000060                     __pcstackBANK0:
  2675                           	opt stack 0
  2676  000060                     
  2677                           ; 1 bytes @ 0x0
  2678  000060                     	ds	8
  2679  000068                     ??_LowPriorityIsr:
  2680                           
  2681                           ; 1 bytes @ 0x8
  2682  000068                     	ds	21
  2683  00007D                     ??_isdigit:
  2684  00007D                     ??_isspace:
  2685  00007D                     ??_isupper:
  2686  00007D                     ??_Rtcc_GetRtccValue:
  2687  00007D                     ??_UartTxBufferStatus:
  2688  00007D                     ??_USBStdGetDscHandler:
  2689  00007D                     ??_USBStdGetStatusHandler:
  2690  00007D                     ?_USBTransferOnePacket:
  2691                           	opt stack 0
  2692  00007D                     ?_strlen:
  2693                           	opt stack 0
  2694  00007D                     ?_sprintf:
  2695                           	opt stack 0
  2696  00007D                     ?___wmul:
  2697                           	opt stack 0
  2698  00007D                     ?___awdiv:
  2699                           	opt stack 0
  2700  00007D                     ?___awmod:
  2701                           	opt stack 0
  2702  00007D                     ?___lwmod:
  2703                           	opt stack 0
  2704  00007D                     ?_GetOsTickCounter:
  2705                           	opt stack 0
  2706  00007D                     ?___lmul:
  2707                           	opt stack 0
  2708  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2709                           	opt stack 0
  2710  00007D                     SetAckStatus@AckSts:
  2711                           	opt stack 0
  2712  00007D                     WriteByte@Byte:
  2713                           	opt stack 0
  2714  00007D                     ReadByte@Byte:
  2715                           	opt stack 0
  2716  00007D                     Mcu_SetWdgSts@WdgSts:
  2717                           	opt stack 0
  2718  00007D                     RtccIrqInit@Priority:
  2719                           	opt stack 0
  2720  00007D                     Rtcc_SetRtcStatus@Status:
  2721                           	opt stack 0
  2722  00007D                     TmrBInit@Prescaler:
  2723                           	opt stack 0
  2724  00007D                     Tmr_TmrBIrqSet@Priority:
  2725                           	opt stack 0
  2726  00007D                     Tmr_StartTmr@TmrNumb:
  2727                           	opt stack 0
  2728  00007D                     UartWriteByte@ByteToWrite:
  2729                           	opt stack 0
  2730  00007D                     USBTransferOnePacket@dir:
  2731                           	opt stack 0
  2732  00007D                     USBConfigureEndpoint@direction:
  2733                           	opt stack 0
  2734  00007D                     USBCtrlTrfTxService@byteToSend:
  2735                           	opt stack 0
  2736  00007D                     USBCtrlTrfRxService@i:
  2737                           	opt stack 0
  2738  00007D                     Led_SetLedStatus@LedSts:
  2739                           	opt stack 0
  2740  00007D                     toupper@c:
  2741                           	opt stack 0
  2742  00007D                     tolower@c:
  2743                           	opt stack 0
  2744  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2745                           	opt stack 0
  2746  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2747                           	opt stack 0
  2748  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2749                           	opt stack 0
  2750  00007D                     Uart_ClearRxBuffer@Index:
  2751                           	opt stack 0
  2752  00007D                     GenerateEvt@Event:
  2753                           	opt stack 0
  2754  00007D                     ReceiveEvt@Event:
  2755                           	opt stack 0
  2756  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2757                           	opt stack 0
  2758  00007D                     StringCopy@SourceStr:
  2759                           	opt stack 0
  2760  00007D                     ClearBuffer@Buffer:
  2761                           	opt stack 0
  2762  00007D                     sprintf@sp:
  2763                           	opt stack 0
  2764  00007D                     ___wmul@multiplier:
  2765                           	opt stack 0
  2766  00007D                     ___awdiv@dividend:
  2767                           	opt stack 0
  2768  00007D                     ___awmod@dividend:
  2769                           	opt stack 0
  2770  00007D                     ___lwmod@dividend:
  2771                           	opt stack 0
  2772  00007D                     memcpy@d1:
  2773                           	opt stack 0
  2774  00007D                     memset@p1:
  2775                           	opt stack 0
  2776  00007D                     strcat@to:
  2777                           	opt stack 0
  2778  00007D                     strcpy@to:
  2779                           	opt stack 0
  2780  00007D                     strlen@s:
  2781                           	opt stack 0
  2782  00007D                     ___lmul@multiplier:
  2783                           	opt stack 0
  2784                           
  2785                           ; 4 bytes @ 0x1D
  2786  00007D                     	ds	1
  2787  00007E                     ??_USBConfigureEndpoint:
  2788  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2789                           	opt stack 0
  2790  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2791                           	opt stack 0
  2792  00007E                     TmrBInit@Postscaler:
  2793                           	opt stack 0
  2794  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2795                           	opt stack 0
  2796  00007E                     UartWriteByte@Module:
  2797                           	opt stack 0
  2798  00007E                     UartTxBufferStatus@Module:
  2799                           	opt stack 0
  2800  00007E                     USBCtrlTrfRxService@byteToRead:
  2801                           	opt stack 0
  2802  00007E                     USBCtrlTrfInHandler@lastDTS:
  2803                           	opt stack 0
  2804  00007E                     Led_SetLedStatus@Led:
  2805                           	opt stack 0
  2806  00007E                     _isdigit$6193:
  2807                           	opt stack 0
  2808  00007E                     _isspace$6462:
  2809                           	opt stack 0
  2810  00007E                     _isupper$6465:
  2811                           	opt stack 0
  2812  00007E                     I2c_WriteData@WritePacket:
  2813                           	opt stack 0
  2814  00007E                     Rtcc_RtcConfig@RtcConfig:
  2815                           	opt stack 0
  2816  00007E                     USBTransferOnePacket@data:
  2817                           	opt stack 0
  2818  00007E                     USBStdGetStatusHandler@p:
  2819                           	opt stack 0
  2820                           
  2821                           ; 2 bytes @ 0x1E
  2822  00007E                     	ds	1
  2823  00007F                     ??_strlen:
  2824  00007F                     ??_Rtcc_AlarmConfig:
  2825  00007F                     ??_TmrBInit:
  2826  00007F                     Irq_InitIntController@IntPriorityEn:
  2827                           	opt stack 0
  2828  00007F                     Rtcc_GetRtccValue@RetValue:
  2829                           	opt stack 0
  2830  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2831                           	opt stack 0
  2832  00007F                     UartTxBufferStatus@TxBufferStatus:
  2833                           	opt stack 0
  2834  00007F                     GenerateEvt@EventStatus:
  2835                           	opt stack 0
  2836  00007F                     isdigit@c:
  2837                           	opt stack 0
  2838  00007F                     isspace@c:
  2839                           	opt stack 0
  2840  00007F                     isupper@c:
  2841                           	opt stack 0
  2842  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2843                           	opt stack 0
  2844  00007F                     StringCopy@DestStr:
  2845                           	opt stack 0
  2846  00007F                     ClearBuffer@Len:
  2847                           	opt stack 0
  2848  00007F                     sprintf@f:
  2849                           	opt stack 0
  2850  00007F                     ___wmul@multiplicand:
  2851                           	opt stack 0
  2852  00007F                     ___awdiv@divisor:
  2853                           	opt stack 0
  2854  00007F                     ___awmod@divisor:
  2855                           	opt stack 0
  2856  00007F                     ___lwmod@divisor:
  2857                           	opt stack 0
  2858  00007F                     memcpy@s1:
  2859                           	opt stack 0
  2860  00007F                     memset@c:
  2861                           	opt stack 0
  2862  00007F                     strcat@from:
  2863                           	opt stack 0
  2864  00007F                     strcpy@from:
  2865                           	opt stack 0
  2866                           
  2867                           ; 2 bytes @ 0x1F
  2868  00007F                     	ds	1
  2869  000080                     ??_isalpha:
  2870  000080                     ??_isxdigit:
  2871  000080                     ??_I2c_WriteData:
  2872  000080                     ??_Rtcc_RtcConfig:
  2873  000080                     Rtcc_GetRtccValue@RegValue:
  2874                           	opt stack 0
  2875  000080                     TmrBInit@TmrNumb:
  2876                           	opt stack 0
  2877  000080                     ReceiveEvt@EventStatus:
  2878                           	opt stack 0
  2879  000080                     USBTransferOnePacket@len:
  2880                           	opt stack 0
  2881  000080                     I2c_ReadData@ReadPacket:
  2882                           	opt stack 0
  2883  000080                     Uart_WriteConstString@ConstStringToWrite:
  2884                           	opt stack 0
  2885  000080                     Uart_WriteString@StringToWrite:
  2886                           	opt stack 0
  2887  000080                     Uart_WriteStringLen@StringToWrite:
  2888                           	opt stack 0
  2889  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2890                           	opt stack 0
  2891  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2892                           	opt stack 0
  2893                           
  2894                           ; 2 bytes @ 0x20
  2895  000080                     	ds	1
  2896  000081                     ?_GetElapsedTime:
  2897                           	opt stack 0
  2898  000081                     ?_Rtcm_GetRtccDate:
  2899                           	opt stack 0
  2900  000081                     Mdm_IsSmsReceived@Ret:
  2901                           	opt stack 0
  2902  000081                     Mdm_IsRinging@Ret:
  2903                           	opt stack 0
  2904  000081                     I2cSlv_I2cReadMsgSts@Result:
  2905                           	opt stack 0
  2906  000081                     USBTransferOnePacket@ep:
  2907                           	opt stack 0
  2908  000081                     Led_SetLedBlinkTime@Led:
  2909                           	opt stack 0
  2910  000081                     ___awdiv@counter:
  2911                           	opt stack 0
  2912  000081                     ___awmod@counter:
  2913                           	opt stack 0
  2914  000081                     ___lwmod@counter:
  2915                           	opt stack 0
  2916  000081                     _isalpha$6459:
  2917                           	opt stack 0
  2918  000081                     _isxdigit$6469:
  2919                           	opt stack 0
  2920  000081                     OsTmr_StartTimer@Timer:
  2921                           	opt stack 0
  2922  000081                     StringCopy@Len:
  2923                           	opt stack 0
  2924  000081                     ClearBuffer@Index:
  2925                           	opt stack 0
  2926  000081                     ___wmul@product:
  2927                           	opt stack 0
  2928  000081                     memcpy@n:
  2929                           	opt stack 0
  2930  000081                     memset@n:
  2931                           	opt stack 0
  2932  000081                     strcat@cp:
  2933                           	opt stack 0
  2934  000081                     strcpy@cp:
  2935                           	opt stack 0
  2936  000081                     strlen@cp:
  2937                           	opt stack 0
  2938  000081                     GetElapsedTime@StartTime:
  2939                           	opt stack 0
  2940  000081                     ___lmul@multiplicand:
  2941                           	opt stack 0
  2942                           
  2943                           ; 4 bytes @ 0x21
  2944  000081                     	ds	1
  2945  000082                     ??_I2c_ReadData:
  2946  000082                     Uart_WriteConstString@Module:
  2947                           	opt stack 0
  2948  000082                     Uart_WriteString@Module:
  2949                           	opt stack 0
  2950  000082                     Uart_WriteStringLen@Len:
  2951                           	opt stack 0
  2952  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2953                           	opt stack 0
  2954  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2955                           	opt stack 0
  2956  000082                     USBConfigureEndpoint@EPNum:
  2957                           	opt stack 0
  2958  000082                     ___awdiv@sign:
  2959                           	opt stack 0
  2960  000082                     ___awmod@sign:
  2961                           	opt stack 0
  2962  000082                     isalpha@c:
  2963                           	opt stack 0
  2964  000082                     isxdigit@c:
  2965                           	opt stack 0
  2966  000082                     USBTransferOnePacket@handle:
  2967                           	opt stack 0
  2968                           
  2969                           ; 2 bytes @ 0x22
  2970  000082                     	ds	1
  2971  000083                     ??_StringCopy:
  2972  000083                     ?_GetCallerNumber:
  2973                           	opt stack 0
  2974  000083                     ?_atoi:
  2975                           	opt stack 0
  2976  000083                     ?_xtoi:
  2977                           	opt stack 0
  2978  000083                     ?___lwdiv:
  2979                           	opt stack 0
  2980  000083                     Uart_WriteStringLen@Index:
  2981                           	opt stack 0
  2982  000083                     Mdm_SetSmsFormat@Index:
  2983                           	opt stack 0
  2984  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2985                           	opt stack 0
  2986  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2987                           	opt stack 0
  2988  000083                     sprintf@flag:
  2989                           	opt stack 0
  2990  000083                     memcpy@tmp:
  2991                           	opt stack 0
  2992  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2993                           	opt stack 0
  2994  000083                     USBConfigureEndpoint@handle:
  2995                           	opt stack 0
  2996  000083                     putUSBUSART@data:
  2997                           	opt stack 0
  2998  000083                     atoi@s:
  2999                           	opt stack 0
  3000  000083                     ___awdiv@quotient:
  3001                           	opt stack 0
  3002  000083                     ___lwdiv@dividend:
  3003                           	opt stack 0
  3004  000083                     memset@p:
  3005                           	opt stack 0
  3006  000083                     xtoi@s:
  3007                           	opt stack 0
  3008  000083                     OsTmr_StartTimer@Timeout:
  3009                           	opt stack 0
  3010                           
  3011                           ; 4 bytes @ 0x23
  3012  000083                     	ds	1
  3013  000084                     Uart_WriteStringLen@Module:
  3014                           	opt stack 0
  3015  000084                     I2cSlv_SendI2cMsg@TxSts:
  3016                           	opt stack 0
  3017  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3018                           	opt stack 0
  3019  000084                     CDCTxService@i:
  3020                           	opt stack 0
  3021  000084                     getsUSBUSART@buffer:
  3022                           	opt stack 0
  3023  000084                     sprintf@ap:
  3024                           	opt stack 0
  3025  000084                     memcpy@d:
  3026                           	opt stack 0
  3027  000084                     Mdm_SetSmsFormat@UartMessage:
  3028                           	opt stack 0
  3029                           
  3030                           ; 20 bytes @ 0x24
  3031  000084                     	ds	1
  3032  000085                     ??_atoi:
  3033  000085                     ??_xtoi:
  3034  000085                     ??_GetElapsedTime:
  3035  000085                     Rtcc_SetRtccValue@Value:
  3036                           	opt stack 0
  3037  000085                     USBDeviceInit@i:
  3038                           	opt stack 0
  3039  000085                     USBEnableEndpoint@options:
  3040                           	opt stack 0
  3041  000085                     putUSBUSART@length:
  3042                           	opt stack 0
  3043  000085                     CDCTxService@byte_to_send:
  3044                           	opt stack 0
  3045  000085                     StringCompare@String1:
  3046                           	opt stack 0
  3047  000085                     StringCopy@Index:
  3048                           	opt stack 0
  3049  000085                     ___lwdiv@divisor:
  3050                           	opt stack 0
  3051  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3052                           	opt stack 0
  3053  000085                     ___lmul@product:
  3054                           	opt stack 0
  3055                           
  3056                           ; 4 bytes @ 0x25
  3057  000085                     	ds	1
  3058  000086                     ??_Rtcc_SetRtccValue:
  3059  000086                     getsUSBUSART@len:
  3060                           	opt stack 0
  3061  000086                     sprintf@c:
  3062                           	opt stack 0
  3063  000086                     USBEnableEndpoint@p:
  3064                           	opt stack 0
  3065  000086                     memcpy@s:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x26
  3069  000086                     	ds	1
  3070  000087                     atoi@sign:
  3071                           	opt stack 0
  3072  000087                     ___lwdiv@counter:
  3073                           	opt stack 0
  3074  000087                     xtoi@sign:
  3075                           	opt stack 0
  3076  000087                     StringCompare@String2:
  3077                           	opt stack 0
  3078  000087                     sprintf@cp:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x27
  3082  000087                     	ds	1
  3083  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3084                           	opt stack 0
  3085  000088                     USBEnableEndpoint@ep:
  3086                           	opt stack 0
  3087  000088                     atoi@a:
  3088                           	opt stack 0
  3089  000088                     ___lwdiv@quotient:
  3090                           	opt stack 0
  3091  000088                     xtoi@val:
  3092                           	opt stack 0
  3093                           
  3094                           ; 2 bytes @ 0x28
  3095  000088                     	ds	1
  3096  000089                     ??_Rtcm_GetRtccDate:
  3097  000089                     ?_strtol:
  3098                           	opt stack 0
  3099  000089                     ?___lldiv:
  3100                           	opt stack 0
  3101  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3102                           	opt stack 0
  3103  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3104                           	opt stack 0
  3105  000089                     StringCompare@Len:
  3106                           	opt stack 0
  3107  000089                     strtol@s:
  3108                           	opt stack 0
  3109  000089                     ___lldiv@dividend:
  3110                           	opt stack 0
  3111  000089                     Rtcm_SetRtccDate@Date:
  3112                           	opt stack 0
  3113                           
  3114                           ; 8 bytes @ 0x29
  3115  000089                     	ds	1
  3116  00008A                     xtoi@c:
  3117                           	opt stack 0
  3118  00008A                     LedBlinkStateMachine@LedBlink:
  3119                           	opt stack 0
  3120  00008A                     LedPulseStateMachine@LedPulse:
  3121                           	opt stack 0
  3122  00008A                     secondsAppTimer@counter:
  3123                           	opt stack 0
  3124  00008A                     utoa@buf:
  3125                           	opt stack 0
  3126  00008A                     Rtcm_GetRtccDate@LocalDate:
  3127                           	opt stack 0
  3128                           
  3129                           ; 8 bytes @ 0x2A
  3130  00008A                     	ds	1
  3131  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3132                           	opt stack 0
  3133  00008B                     strtol@endptr:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x2B
  3137  00008B                     	ds	1
  3138  00008C                     LedPulseStateMachine@Led:
  3139                           	opt stack 0
  3140  00008C                     secondsAppTimer@isCyclic:
  3141                           	opt stack 0
  3142  00008C                     utoa@val:
  3143                           	opt stack 0
  3144                           
  3145                           ; 2 bytes @ 0x2C
  3146  00008C                     	ds	1
  3147  00008D                     StringCompare@Result:
  3148                           	opt stack 0
  3149  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3150                           	opt stack 0
  3151  00008D                     strtol@base:
  3152                           	opt stack 0
  3153  00008D                     GetElapsedTime@TimeValue:
  3154                           	opt stack 0
  3155  00008D                     ___lldiv@divisor:
  3156                           	opt stack 0
  3157                           
  3158                           ; 4 bytes @ 0x2D
  3159  00008D                     	ds	1
  3160  00008E                     StringCompare@Index:
  3161                           	opt stack 0
  3162  00008E                     utoa@base:
  3163                           	opt stack 0
  3164                           
  3165                           ; 2 bytes @ 0x2E
  3166  00008E                     	ds	1
  3167  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3168  00008F                     ??_strtol:
  3169  00008F                     secondsAppTimer@seconds:
  3170                           	opt stack 0
  3171  00008F                     LedStateMachine@LedSts:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x2F
  3175  00008F                     	ds	1
  3176  000090                     secondsAppTimer@isExpired:
  3177                           	opt stack 0
  3178  000090                     utoa@v:
  3179                           	opt stack 0
  3180  000090                     ModemEvtParser@CallReadyString:
  3181                           	opt stack 0
  3182                           
  3183                           ; 10 bytes @ 0x30
  3184  000090                     	ds	1
  3185  000091                     ??_USBStdFeatureReqHandler:
  3186  000091                     USBStdSetCfgHandler@i:
  3187                           	opt stack 0
  3188  000091                     LedStateMachine@LedOut:
  3189                           	opt stack 0
  3190  000091                     secondsAppTimer@destinationTicks:
  3191                           	opt stack 0
  3192  000091                     GetElapsedTime@CurrentTimestamp:
  3193                           	opt stack 0
  3194  000091                     ___lldiv@quotient:
  3195                           	opt stack 0
  3196                           
  3197                           ; 4 bytes @ 0x31
  3198  000091                     	ds	1
  3199  000092                     utoa@c:
  3200                           	opt stack 0
  3201  000092                     USBStdFeatureReqHandler@pUEP:
  3202                           	opt stack 0
  3203                           
  3204                           ; 2 bytes @ 0x32
  3205  000092                     	ds	1
  3206  000093                     strtol@sign:
  3207                           	opt stack 0
  3208  000093                     LedStateMachine@LedBlink:
  3209                           	opt stack 0
  3210  000093                     blinkForSeconds@blinkTicks:
  3211                           	opt stack 0
  3212  000093                     itoa@buf:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x33
  3216  000093                     	ds	1
  3217  000094                     USBStdFeatureReqHandler@current_ep_data:
  3218                           	opt stack 0
  3219  000094                     strtol@a:
  3220                           	opt stack 0
  3221                           
  3222                           ; 4 bytes @ 0x34
  3223  000094                     	ds	1
  3224  000095                     blinkForSeconds@seconds:
  3225                           	opt stack 0
  3226  000095                     ___lldiv@counter:
  3227                           	opt stack 0
  3228  000095                     OsTmr_GetTimerStatus@Timer:
  3229                           	opt stack 0
  3230  000095                     USBStdFeatureReqHandler@p:
  3231                           	opt stack 0
  3232  000095                     LedStateMachine@LedPulse:
  3233                           	opt stack 0
  3234  000095                     itoa@val:
  3235                           	opt stack 0
  3236                           
  3237                           ; 2 bytes @ 0x35
  3238  000095                     	ds	1
  3239  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3240                           	opt stack 0
  3241  000096                     SetUartBaudRate@UartConfig:
  3242                           	opt stack 0
  3243  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3244                           	opt stack 0
  3245                           
  3246                           ; 4 bytes @ 0x36
  3247  000096                     	ds	1
  3248  000097                     ??_USBCtrlEPService:
  3249  000097                     itoa@base:
  3250                           	opt stack 0
  3251                           
  3252                           ; 2 bytes @ 0x37
  3253  000097                     	ds	1
  3254  000098                     Tmr_TmrBPrSet@Prescaler:
  3255                           	opt stack 0
  3256  000098                     Mdm_SetSmsFormat@TextFormat:
  3257                           	opt stack 0
  3258  000098                     USBDeviceTasks@i:
  3259                           	opt stack 0
  3260  000098                     LedStateMachine@LedOutSts:
  3261                           	opt stack 0
  3262  000098                     strtol@c:
  3263                           	opt stack 0
  3264                           
  3265                           ; 1 bytes @ 0x38
  3266  000098                     	ds	1
  3267  000099                     Tmr_TmrBPrSet@Postscaler:
  3268                           	opt stack 0
  3269  000099                     SetUartBaudRate@Module:
  3270                           	opt stack 0
  3271  000099                     LedStateMachine@Led:
  3272                           	opt stack 0
  3273  000099                     itoa@cp:
  3274                           	opt stack 0
  3275                           
  3276                           ; 2 bytes @ 0x39
  3277  000099                     	ds	1
  3278  00009A                     ??_Led_MainTask:
  3279  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3280                           	opt stack 0
  3281  00009A                     SetUartBaudRate@BaudRateRegister:
  3282                           	opt stack 0
  3283  00009A                     SetBaudRate@McuClockHz:
  3284                           	opt stack 0
  3285  00009A                     ModemEvtParser@ClipString:
  3286                           	opt stack 0
  3287                           
  3288                           ; 5 bytes @ 0x3A
  3289  00009A                     	ds	1
  3290  00009B                     ??_SendSmsSm:
  3291  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3292                           	opt stack 0
  3293  00009B                     OsTmr_Wait@WaitTimer:
  3294                           	opt stack 0
  3295  00009B                     InitGprsNetwork@Apn:
  3296                           	opt stack 0
  3297  00009B                     HttpGetMethod@GetData:
  3298                           	opt stack 0
  3299                           
  3300                           ; 2 bytes @ 0x3B
  3301  00009B                     	ds	1
  3302  00009C                     SetUartBaudRate@DivisionFactor:
  3303                           	opt stack 0
  3304  00009C                     Tmr_TmrBPrSet@Divisor:
  3305                           	opt stack 0
  3306                           
  3307                           ; 4 bytes @ 0x3C
  3308  00009C                     	ds	1
  3309  00009D                     ??_HttpGetMethod:
  3310  00009D                     InitGprsNetwork@ApnLen:
  3311                           	opt stack 0
  3312  00009D                     Uart_InitUartModule@UartConfig:
  3313                           	opt stack 0
  3314  00009D                     OsTmr_Wait@DelayMs:
  3315                           	opt stack 0
  3316                           
  3317                           ; 4 bytes @ 0x3D
  3318  00009D                     	ds	1
  3319  00009E                     ??_SetBaudRate:
  3320  00009E                     ??_InitGprsNetwork:
  3321                           
  3322                           ; 1 bytes @ 0x3E
  3323  00009E                     	ds	1
  3324  00009F                     ??_Uart_InitUartModule:
  3325  00009F                     ModemEvtParser@SmsString:
  3326                           	opt stack 0
  3327                           
  3328                           ; 5 bytes @ 0x3F
  3329  00009F                     	ds	1
  3330  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3331                           	opt stack 0
  3332                           
  3333                           ; 2 bytes @ 0x40
  3334  0000A0                     	ds	1
  3335  0000A1                     Uart_InitUartModule@Module:
  3336                           	opt stack 0
  3337  0000A1                     OsTmr_Wait@Ret:
  3338                           	opt stack 0
  3339                           
  3340                           ; 1 bytes @ 0x41
  3341  0000A1                     	ds	1
  3342  0000A2                     ??_Terminal:
  3343  0000A2                     I2c_InitI2cModule@I2cConfig:
  3344                           	opt stack 0
  3345  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3346                           	opt stack 0
  3347                           
  3348                           ; 2 bytes @ 0x42
  3349  0000A2                     	ds	1
  3350  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3351                           	opt stack 0
  3352                           
  3353                           ; 1 bytes @ 0x43
  3354  0000A3                     	ds	1
  3355  0000A4                     ??_I2c_InitI2cModule:
  3356  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3357                           	opt stack 0
  3358  0000A4                     Terminal@i:
  3359                           	opt stack 0
  3360  0000A4                     ModemEvtParser@RingString:
  3361                           	opt stack 0
  3362  0000A4                     InitSchedTimer@TmrBConfig:
  3363                           	opt stack 0
  3364                           
  3365                           ; 7 bytes @ 0x44
  3366  0000A4                     	ds	1
  3367  0000A5                     Terminal@ReceivedBytes:
  3368                           	opt stack 0
  3369  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3370                           	opt stack 0
  3371                           
  3372                           ; 2 bytes @ 0x45
  3373  0000A5                     	ds	1
  3374  0000A6                     Terminal@Index:
  3375                           	opt stack 0
  3376                           
  3377                           ; 1 bytes @ 0x46
  3378  0000A6                     	ds	1
  3379  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3380                           	opt stack 0
  3381                           
  3382                           ; 1 bytes @ 0x47
  3383  0000A7                     	ds	1
  3384  0000A8                     ModemEvtParser@Match:
  3385                           	opt stack 0
  3386  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3387                           	opt stack 0
  3388                           
  3389                           ; 1 bytes @ 0x48
  3390  0000A8                     	ds	1
  3391  0000A9                     ModemEvtParser@CompareIdx:
  3392                           	opt stack 0
  3393  0000A9                     Eeprom_Read@ReadBuffer:
  3394                           	opt stack 0
  3395                           
  3396                           ; 2 bytes @ 0x49
  3397  0000A9                     	ds	1
  3398  0000AA                     
  3399                           ; 1 bytes @ 0x4A
  3400  0000AA                     	ds	1
  3401  0000AB                     Eeprom_Read@DataLength:
  3402                           	opt stack 0
  3403                           
  3404                           ; 1 bytes @ 0x4B
  3405  0000AB                     	ds	1
  3406  0000AC                     Eeprom_Read@MemoryAddress:
  3407                           	opt stack 0
  3408                           
  3409                           ; 1 bytes @ 0x4C
  3410  0000AC                     	ds	1
  3411  0000AD                     Eeprom_Read@SlaveAddress:
  3412                           	opt stack 0
  3413                           
  3414                           ; 1 bytes @ 0x4D
  3415  0000AD                     	ds	1
  3416  0000AE                     Eeprom_Read@ReadSts:
  3417                           	opt stack 0
  3418                           
  3419                           ; 1 bytes @ 0x4E
  3420  0000AE                     	ds	1
  3421  0000AF                     Eeprom_Read@QuerySts:
  3422                           	opt stack 0
  3423                           
  3424                           ; 1 bytes @ 0x4F
  3425  0000AF                     	ds	1
  3426  0000B0                     tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           postdec1	equ	0xFE5
  3433                           fsr1h	equ	0xFE2
  3434                           fsr1l	equ	0xFE1
  3435                           
  3436                           ; 1 bytes @ 0x50
  3437                           
  3438                           	psect	cstackCOMRAM
  3439  000001                     __pcstackCOMRAM:
  3440                           	opt stack 0
  3441  000001                     i2GenerateEvt@Event:
  3442                           	opt stack 0
  3443                           
  3444                           ; 2 bytes @ 0x0
  3445  000001                     	ds	2
  3446  000003                     i2GenerateEvt@EventStatus:
  3447                           	opt stack 0
  3448                           
  3449                           ; 1 bytes @ 0x2
  3450  000003                     	ds	1
  3451  000004                     Uart_MdmGsmGprsReadService@UartData:
  3452                           	opt stack 0
  3453                           
  3454                           ; 1 bytes @ 0x3
  3455  000004                     	ds	1
  3456  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x4
  3460  000005                     	ds	2
  3461  000007                     ??_HighPriorityIsr:
  3462                           
  3463                           ; 1 bytes @ 0x6
  3464  000007                     	ds	18
  3465  000019                     ?i1___wmul:
  3466                           	opt stack 0
  3467  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3468                           	opt stack 0
  3469  000019                     i1GenerateEvt@Event:
  3470                           	opt stack 0
  3471  000019                     i1___wmul@multiplier:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0x18
  3475  000019                     	ds	2
  3476  00001B                     i1GenerateEvt@EventStatus:
  3477                           	opt stack 0
  3478  00001B                     i1___wmul@multiplicand:
  3479                           	opt stack 0
  3480                           
  3481                           ; 2 bytes @ 0x1A
  3482  00001B                     	ds	1
  3483  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3484                           	opt stack 0
  3485                           
  3486                           ; 2 bytes @ 0x1B
  3487  00001C                     	ds	1
  3488  00001D                     i1___wmul@product:
  3489                           	opt stack 0
  3490                           
  3491                           ; 2 bytes @ 0x1C
  3492  00001D                     	ds	1
  3493  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3494                           	opt stack 0
  3495                           
  3496                           ; 1 bytes @ 0x1D
  3497  00001E                     	ds	1
  3498  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3499                           	opt stack 0
  3500                           
  3501                           ; 1 bytes @ 0x1E
  3502  00001F                     	ds	1
  3503  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3504                           	opt stack 0
  3505                           
  3506                           ; 1 bytes @ 0x1F
  3507  000020                     	ds	1
  3508  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3509                           	opt stack 0
  3510                           
  3511                           ; 2 bytes @ 0x20
  3512  000021                     	ds	2
  3513  000023                     tblptru	equ	0xFF8
  3514                           tblptrh	equ	0xFF7
  3515                           tblptrl	equ	0xFF6
  3516                           tablat	equ	0xFF5
  3517                           postinc0	equ	0xFEE
  3518                           wreg	equ	0xFE8
  3519                           postdec1	equ	0xFE5
  3520                           fsr1h	equ	0xFE2
  3521                           fsr1l	equ	0xFE1
  3522                           
  3523                           ; 1 bytes @ 0x22
  3524 ;;
  3525 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3526 ;;
  3527 ;; *************** function _main *****************
  3528 ;; Defined at:
  3529 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  2   14[None  ] short 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels required when called:   23
  3549 ;; This function calls:
  3550 ;;		_Sch_MainScheduler
  3551 ;;		_SystemInit
  3552 ;; This function is called by:
  3553 ;;		Startup code after reset
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text0
  3558  00626A                     __ptext0:
  3559                           	opt stack 0
  3560  00626A                     _main:
  3561                           	opt stack 8
  3562                           
  3563                           ;main.c: 61: SystemInit();
  3564                           
  3565                           ;incstack = 0
  3566  00626A  EC67  F02E         	call	_SystemInit	;wreg free
  3567                           
  3568                           ;main.c: 64: Sch_MainScheduler();
  3569  00626E  EC39  F030         	call	_Sch_MainScheduler	;wreg free
  3570                           
  3571                           ;main.c: 67: return 0;
  3572                           ;	Return value of _main is never used
  3573  006272  EF66  F000         	goto	start
  3574  006276                     __end_of_main:
  3575                           	opt stack 0
  3576                           tblptru	equ	0xFF8
  3577                           tblptrh	equ	0xFF7
  3578                           tblptrl	equ	0xFF6
  3579                           tablat	equ	0xFF5
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           postdec1	equ	0xFE5
  3583                           fsr1h	equ	0xFE2
  3584                           fsr1l	equ	0xFE1
  3585                           
  3586 ;; *************** function _SystemInit *****************
  3587 ;; Defined at:
  3588 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:   15
  3609 ;; This function calls:
  3610 ;;		_InitSchedTimer
  3611 ;;		_Irq_InitIntController
  3612 ;;		_Mcu_ConfigExtInt
  3613 ;;		_Mcu_StartSystemPll
  3614 ;;		_Pm_DsReleasePinControl
  3615 ;;		_Tmr_RegisterTmr2IsrCallback
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text1
  3622  005CCE                     __ptext1:
  3623                           	opt stack 0
  3624  005CCE                     _SystemInit:
  3625                           	opt stack 15
  3626                           
  3627                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3628                           
  3629                           ;incstack = 0
  3630  005CCE  EC58  F031         	call	_Pm_DsReleasePinControl	;wreg free
  3631                           
  3632                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3633  005CD2  EC2A  F030         	call	_Mcu_StartSystemPll	;wreg free
  3634                           
  3635                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3636  005CD6  0E01               	movlw	1
  3637  005CD8  0100               	movlb	0	; () banked
  3638  005CDA  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3639  005CDC  0E01               	movlw	1
  3640  005CDE  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3641  005CE0  0E01               	movlw	1
  3642  005CE2  EC0B  F02F         	call	_Irq_InitIntController
  3643                           
  3644                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3645  005CE6  0E4E               	movlw	low _Sch_SchmIntService
  3646  005CE8  0100               	movlb	0	; () banked
  3647  005CEA  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3648  005CEC  0E62               	movlw	high _Sch_SchmIntService
  3649  005CEE  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3650  005CF0  EC3B  F031         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3651                           
  3652                           ;sys_init.c: 132: InitSchedTimer();
  3653  005CF4  ECC7  F02E         	call	_InitSchedTimer	;wreg free
  3654                           
  3655                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3656  005CF8  EC64  F030         	call	_Mcu_ConfigExtInt	;wreg free
  3657  005CFC  0012               	return		;funcret
  3658  005CFE                     __end_of_SystemInit:
  3659                           	opt stack 0
  3660                           tblptru	equ	0xFF8
  3661                           tblptrh	equ	0xFF7
  3662                           tblptrl	equ	0xFF6
  3663                           tablat	equ	0xFF5
  3664                           postinc0	equ	0xFEE
  3665                           wreg	equ	0xFE8
  3666                           postdec1	equ	0xFE5
  3667                           fsr1h	equ	0xFE2
  3668                           fsr1l	equ	0xFE1
  3669                           
  3670 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3671 ;; Defined at:
  3672 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3675 ;;		 -> Sch_SchmIntService(1), 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:   11
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_SystemInit
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text2
  3702  006276                     __ptext2:
  3703                           	opt stack 0
  3704  006276                     _Tmr_RegisterTmr2IsrCallback:
  3705                           	opt stack 18
  3706                           
  3707                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3708                           
  3709                           ;incstack = 0
  3710  006276  C07D  F1D3         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3711  00627A  C07E  F1D4         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3712  00627E  0012               	return		;funcret
  3713  006280                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3714                           	opt stack 0
  3715                           tblptru	equ	0xFF8
  3716                           tblptrh	equ	0xFF7
  3717                           tblptrl	equ	0xFF6
  3718                           tablat	equ	0xFF5
  3719                           postinc0	equ	0xFEE
  3720                           wreg	equ	0xFE8
  3721                           postdec1	equ	0xFE5
  3722                           fsr1h	equ	0xFE2
  3723                           fsr1l	equ	0xFE1
  3724                           
  3725 ;; *************** function _Pm_DsReleasePinControl *****************
  3726 ;; Defined at:
  3727 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		None
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3745 ;;Total ram usage:        0 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:   11
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_SystemInit
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text3
  3756  0062B0                     __ptext3:
  3757                           	opt stack 0
  3758  0062B0                     _Pm_DsReleasePinControl:
  3759                           	opt stack 18
  3760                           
  3761                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3762                           
  3763                           ;incstack = 0
  3764  0062B0  010F               	movlb	15	; () banked
  3765  0062B2  914C               	bcf	76,0,b	;volatile
  3766                           
  3767                           ; BSR set to: 15
  3768  0062B4  0012               	return		;funcret
  3769  0062B6                     __end_of_Pm_DsReleasePinControl:
  3770                           	opt stack 0
  3771                           tblptru	equ	0xFF8
  3772                           tblptrh	equ	0xFF7
  3773                           tblptrl	equ	0xFF6
  3774                           tablat	equ	0xFF5
  3775                           postinc0	equ	0xFEE
  3776                           wreg	equ	0xFE8
  3777                           postdec1	equ	0xFE5
  3778                           fsr1h	equ	0xFE2
  3779                           fsr1l	equ	0xFE1
  3780                           
  3781 ;; *************** function _Mcu_StartSystemPll *****************
  3782 ;; Defined at:
  3783 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3798 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3801 ;;Total ram usage:        2 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:   11
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_SystemInit
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text4
  3812  006054                     __ptext4:
  3813                           	opt stack 0
  3814  006054                     _Mcu_StartSystemPll:
  3815                           	opt stack 18
  3816                           
  3817                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3818                           
  3819                           ; BSR set to: 15
  3820                           ;incstack = 0
  3821  006054  0E03               	movlw	3
  3822  006056  0100               	movlb	0	; () banked
  3823  006058  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3824  00605A  0EE8               	movlw	232
  3825  00605C  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3829  00605E  8C9B               	bsf	3995,6,c	;volatile
  3830  006060                     l11133:
  3831                           
  3832                           ; BSR set to: 0
  3833  006060  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3834  006062  A0D8               	btfss	status,0,c
  3835  006064  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3836  006066  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3837  006068  E1FB               	bnz	l11133
  3838  00606A  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3839  00606C  B4D8               	btfsc	status,2,c
  3840  00606E  0012               	return	
  3841  006070  D7F7               	goto	l237
  3842  006072                     __end_of_Mcu_StartSystemPll:
  3843                           	opt stack 0
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postdec1	equ	0xFE5
  3851                           fsr1h	equ	0xFE2
  3852                           fsr1l	equ	0xFE1
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function _Mcu_ConfigExtInt *****************
  3856 ;; Defined at:
  3857 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:   11
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_SystemInit
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text5
  3886  0060C8                     __ptext5:
  3887                           	opt stack 0
  3888  0060C8                     _Mcu_ConfigExtInt:
  3889                           	opt stack 18
  3890                           
  3891                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;incstack = 0
  3895  0060C8  8093               	bsf	3987,0,c	;volatile
  3896                           
  3897                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3898  0060CA  8695               	bsf	3989,3,c	;volatile
  3899                           
  3900                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3901  0060CC  010F               	movlb	15	; () banked
  3902  0060CE  8949               	bsf	73,4,b	;volatile
  3903                           
  3904                           ; BSR set to: 15
  3905                           ;mcu_drv.c: 108: RPINR1 = 20;
  3906  0060D0  0E14               	movlw	20
  3907  0060D2  010E               	movlb	14	; () banked
  3908  0060D4  6FE7               	movwf	231,b	;volatile
  3909                           
  3910                           ; BSR set to: 14
  3911                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3912  0060D6  88F2               	bsf	intcon,4,c	;volatile
  3913                           
  3914                           ; BSR set to: 14
  3915                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3916  0060D8  86F0               	bsf	intcon3,3,c	;volatile
  3917                           
  3918                           ; BSR set to: 14
  3919                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3920  0060DA  8CF0               	bsf	intcon3,6,c	;volatile
  3921                           
  3922                           ; BSR set to: 14
  3923                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3924  0060DC  9CF1               	bcf	intcon2,6,c	;volatile
  3925                           
  3926                           ; BSR set to: 14
  3927                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3928  0060DE  9AF1               	bcf	intcon2,5,c	;volatile
  3929                           
  3930                           ; BSR set to: 14
  3931  0060E0  0012               	return		;funcret
  3932  0060E2                     __end_of_Mcu_ConfigExtInt:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           tblptrh	equ	0xFF7
  3936                           tblptrl	equ	0xFF6
  3937                           tablat	equ	0xFF5
  3938                           intcon	equ	0xFF2
  3939                           intcon2	equ	0xFF1
  3940                           intcon3	equ	0xFF0
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           postdec1	equ	0xFE5
  3944                           fsr1h	equ	0xFE2
  3945                           fsr1l	equ	0xFE1
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _Irq_InitIntController *****************
  3949 ;; Defined at:
  3950 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  IntPriorityE    1    wreg     enum E7720
  3953 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3954 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3966 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;Total ram usage:        3 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:   11
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_SystemInit
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text6
  3981  005E16                     __ptext6:
  3982                           	opt stack 0
  3983  005E16                     _Irq_InitIntController:
  3984                           	opt stack 18
  3985                           
  3986                           ; BSR set to: 14
  3987                           ;incstack = 0
  3988                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3989  005E16  0100               	movlb	0	; () banked
  3990  005E18  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3991                           
  3992                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3993  005E1A  0100               	movlb	0	; () banked
  3994  005E1C  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3995  005E1E  D002               	bra	u9675
  3996  005E20  9ED0               	bcf	4048,7,c	;volatile
  3997  005E22  D001               	bra	u9676
  3998  005E24                     u9675:
  3999  005E24  8ED0               	bsf	4048,7,c	;volatile
  4000  005E26                     u9676:
  4001                           
  4002                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4003  005E26  0100               	movlb	0	; () banked
  4004  005E28  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4005  005E2A  D002               	bra	u9685
  4006  005E2C  9EF2               	bcf	intcon,7,c	;volatile
  4007  005E2E  D001               	bra	u9686
  4008  005E30                     u9685:
  4009  005E30  8EF2               	bsf	intcon,7,c	;volatile
  4010  005E32                     u9686:
  4011                           
  4012                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4013  005E32  0100               	movlb	0	; () banked
  4014  005E34  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4015  005E36  D002               	bra	u9695
  4016  005E38  9CF2               	bcf	intcon,6,c	;volatile
  4017  005E3A  D001               	bra	u9696
  4018  005E3C                     u9695:
  4019  005E3C  8CF2               	bsf	intcon,6,c	;volatile
  4020  005E3E                     u9696:
  4021  005E3E  0012               	return		;funcret
  4022  005E40                     __end_of_Irq_InitIntController:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           intcon	equ	0xFF2
  4029                           intcon2	equ	0xFF1
  4030                           intcon3	equ	0xFF0
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           postdec1	equ	0xFE5
  4034                           fsr1h	equ	0xFE2
  4035                           fsr1l	equ	0xFE1
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function _InitSchedTimer *****************
  4039 ;; Defined at:
  4040 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4055 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4057 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4058 ;;Total ram usage:        7 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:   14
  4061 ;; This function calls:
  4062 ;;		_Tmr_TmrBConfig
  4063 ;; This function is called by:
  4064 ;;		_SystemInit
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text7
  4069  005D8E                     __ptext7:
  4070                           	opt stack 0
  4071  005D8E                     _InitSchedTimer:
  4072                           	opt stack 15
  4073                           
  4074                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4075                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4076                           
  4077                           ;incstack = 0
  4078  005D8E  0E04               	movlw	4
  4079  005D90  0100               	movlb	0	; () banked
  4080  005D92  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4081                           
  4082                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4083  005D94  0E0C               	movlw	12
  4084  005D96  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4085                           
  4086                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4087  005D98  0E00               	movlw	0
  4088  005D9A  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4089                           
  4090                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4091  005D9C  0E01               	movlw	1
  4092  005D9E  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4093                           
  4094                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4095  005DA0  0E03               	movlw	3
  4096  005DA2  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4097  005DA4  0EE8               	movlw	232
  4098  005DA6  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4099                           
  4100                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4101  005DA8  0E01               	movlw	1
  4102  005DAA  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4106  005DAC  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4107  005DAE  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4108  005DB0  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4109  005DB2  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4110  005DB4  0E02               	movlw	2
  4111  005DB6  EC2C  F01E         	call	_Tmr_TmrBConfig
  4112  005DBA  0012               	return		;funcret
  4113  005DBC                     __end_of_InitSchedTimer:
  4114                           	opt stack 0
  4115                           tblptru	equ	0xFF8
  4116                           tblptrh	equ	0xFF7
  4117                           tblptrl	equ	0xFF6
  4118                           tablat	equ	0xFF5
  4119                           intcon	equ	0xFF2
  4120                           intcon2	equ	0xFF1
  4121                           intcon3	equ	0xFF0
  4122                           postinc0	equ	0xFEE
  4123                           wreg	equ	0xFE8
  4124                           postdec1	equ	0xFE5
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           status	equ	0xFD8
  4128                           
  4129 ;; *************** function _Tmr_TmrBConfig *****************
  4130 ;; Defined at:
  4131 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  TmrNumb         1    wreg     unsigned char 
  4134 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4135 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4150 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;Total ram usage:        4 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:   13
  4154 ;; This function calls:
  4155 ;;		_TmrBInit
  4156 ;;		_Tmr_StartTmr
  4157 ;;		_Tmr_TmrBIrqSet
  4158 ;;		_Tmr_TmrBPrSet
  4159 ;; This function is called by:
  4160 ;;		_InitSchedTimer
  4161 ;;		_InitAuxTimer
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text8
  4166  003C58                     __ptext8:
  4167                           	opt stack 0
  4168  003C58                     _Tmr_TmrBConfig:
  4169                           	opt stack 15
  4170                           
  4171                           ;incstack = 0
  4172                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4173  003C58  0100               	movlb	0	; () banked
  4174  003C5A  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4175                           
  4176                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4177  003C5C  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4178  003C60  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4179  003C64  50DF               	movf	indf2,w,c
  4180  003C66  0100               	movlb	0	; () banked
  4181  003C68  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4182  003C6A  EE20 F001          	lfsr	2,1
  4183  003C6E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4184  003C70  26D9               	addwf	fsr2l,f,c
  4185  003C72  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4186  003C74  22DA               	addwfc	fsr2h,f,c
  4187  003C76  50DF               	movf	indf2,w,c
  4188  003C78  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4189  003C7A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4190  003C7C  EC09  F024         	call	_TmrBInit
  4191                           
  4192                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4193  003C80  0100               	movlb	0	; () banked
  4194  003C82  EE20 F002          	lfsr	2,2
  4195  003C86  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4196  003C88  26D9               	addwf	fsr2l,f,c
  4197  003C8A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4198  003C8C  22DA               	addwfc	fsr2h,f,c
  4199  003C8E  04DE               	decf	postinc2,w,c
  4200  003C90  A4D8               	btfss	status,2,c
  4201  003C92  D00E               	goto	l546
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;tmr_drv.c: 277: {
  4205                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4206  003C94  EE20 F003          	lfsr	2,3
  4207  003C98  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4208  003C9A  26D9               	addwf	fsr2l,f,c
  4209  003C9C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4210  003C9E  22DA               	addwfc	fsr2h,f,c
  4211  003CA0  50DF               	movf	indf2,w,c
  4212  003CA2  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4213  003CA4  0E01               	movlw	1
  4214  003CA6  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4215  003CA8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4216  003CAA  EC78  F02B         	call	_Tmr_TmrBIrqSet
  4217                           
  4218                           ;tmr_drv.c: 280: }
  4219  003CAE  D00E               	goto	l547
  4220  003CB0                     l546:
  4221                           
  4222                           ;tmr_drv.c: 281: else
  4223                           ;tmr_drv.c: 282: {
  4224                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4225  003CB0  0100               	movlb	0	; () banked
  4226  003CB2  EE20 F003          	lfsr	2,3
  4227  003CB6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4228  003CB8  26D9               	addwf	fsr2l,f,c
  4229  003CBA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4230  003CBC  22DA               	addwfc	fsr2h,f,c
  4231  003CBE  50DF               	movf	indf2,w,c
  4232  003CC0  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4233  003CC2  0E00               	movlw	0
  4234  003CC4  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4235  003CC6  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4236  003CC8  EC78  F02B         	call	_Tmr_TmrBIrqSet
  4237  003CCC                     l547:
  4238                           
  4239                           ;tmr_drv.c: 285: }
  4240                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4241  003CCC  0100               	movlb	0	; () banked
  4242  003CCE  EE20 F004          	lfsr	2,4
  4243  003CD2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4244  003CD4  26D9               	addwf	fsr2l,f,c
  4245  003CD6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4246  003CD8  22DA               	addwfc	fsr2h,f,c
  4247  003CDA  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4248  003CDE  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4249  003CE2  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4250  003CE6  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4251  003CEA  50DF               	movf	indf2,w,c
  4252  003CEC  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4253  003CEE  EE20 F001          	lfsr	2,1
  4254  003CF2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4255  003CF4  26D9               	addwf	fsr2l,f,c
  4256  003CF6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4257  003CF8  22DA               	addwfc	fsr2h,f,c
  4258  003CFA  50DF               	movf	indf2,w,c
  4259  003CFC  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4260  003CFE  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4261  003D00  ECA9  F018         	call	_Tmr_TmrBPrSet
  4262                           
  4263                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4264  003D04  0100               	movlb	0	; () banked
  4265  003D06  EE20 F006          	lfsr	2,6
  4266  003D0A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4267  003D0C  26D9               	addwf	fsr2l,f,c
  4268  003D0E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4269  003D10  22DA               	addwfc	fsr2h,f,c
  4270  003D12  04DE               	decf	postinc2,w,c
  4271  003D14  A4D8               	btfss	status,2,c
  4272  003D16  0012               	return	
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;tmr_drv.c: 290: {
  4276                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4277  003D18  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4278  003D1A  EC0A  F030         	call	_Tmr_StartTmr
  4279                           
  4280                           ;tmr_drv.c: 293: }
  4281  003D1E  0012               	return	
  4282  003D20                     __end_of_Tmr_TmrBConfig:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           tblptrh	equ	0xFF7
  4286                           tblptrl	equ	0xFF6
  4287                           tablat	equ	0xFF5
  4288                           intcon	equ	0xFF2
  4289                           intcon2	equ	0xFF1
  4290                           intcon3	equ	0xFF0
  4291                           postinc0	equ	0xFEE
  4292                           wreg	equ	0xFE8
  4293                           postdec1	equ	0xFE5
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           indf2	equ	0xFDF
  4297                           postinc2	equ	0xFDE
  4298                           postdec2	equ	0xFDD
  4299                           fsr2h	equ	0xFDA
  4300                           fsr2l	equ	0xFD9
  4301                           status	equ	0xFD8
  4302                           
  4303 ;; *************** function _Tmr_TmrBPrSet *****************
  4304 ;; Defined at:
  4305 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  TmrNumb         1    wreg     unsigned char 
  4308 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4309 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4310 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4313 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4314 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      enum E7736
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4325 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4327 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4328 ;;Total ram usage:       10 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:   12
  4331 ;; This function calls:
  4332 ;;		___lldiv
  4333 ;;		___lmul
  4334 ;; This function is called by:
  4335 ;;		_Tmr_TmrBConfig
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text9
  4340  003152                     __ptext9:
  4341                           	opt stack 0
  4342  003152                     _Tmr_TmrBPrSet:
  4343                           	opt stack 15
  4344                           
  4345                           ;incstack = 0
  4346                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4347  003152  0100               	movlb	0	; () banked
  4348  003154  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4349                           
  4350                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4351                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4352  003156  0E00               	movlw	0
  4353  003158  0100               	movlb	0	; () banked
  4354  00315A  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4355  00315C  0E00               	movlw	0
  4356  00315E  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4357  003160  0E00               	movlw	0
  4358  003162  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4359  003164  0E00               	movlw	0
  4360  003166  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4364  003168  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4365  00316A  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4366  00316C  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4367  003170  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4368  003174  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4369  003176  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4370  003178  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4371  00317C  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4372  003180  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4373  003182  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4374  003184  EC33  F029         	call	___lmul	;wreg free
  4375  003188  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4376  00318C  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4377  003190  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4378  003194  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4379                           
  4380                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4381  003198  0E00               	movlw	0
  4382  00319A  0100               	movlb	0	; () banked
  4383  00319C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4384  00319E  0E1B               	movlw	27
  4385  0031A0  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4386  0031A2  0EB7               	movlw	183
  4387  0031A4  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4388  0031A6  0E00               	movlw	0
  4389  0031A8  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4390  0031AA  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4391  0031AE  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4392  0031B2  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4393  0031B6  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4394  0031BA  EC4B  F026         	call	___lldiv	;wreg free
  4395  0031BE  0100               	movlb	0	; () banked
  4396  0031C0  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4397  0031C2  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4398  0031C4  E13A               	bnz	l13939
  4399  0031C6  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4400  0031C8  A0D8               	btfss	status,0,c
  4401  0031CA  D02D               	goto	l529
  4402  0031CC  D036               	goto	l528
  4403  0031CE                     
  4404                           ; BSR set to: 0
  4405                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4406                           
  4407                           ; BSR set to: 0
  4408  0031CE  0E00               	movlw	0
  4409  0031D0  6F89               	movwf	___lldiv@dividend& (0+255),b
  4410  0031D2  0E1B               	movlw	27
  4411  0031D4  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4412  0031D6  0EB7               	movlw	183
  4413  0031D8  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4414  0031DA  0E00               	movlw	0
  4415  0031DC  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4416  0031DE  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4417  0031E2  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4418  0031E6  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4419  0031EA  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4420  0031EE  EC4B  F026         	call	___lldiv	;wreg free
  4421  0031F2  0100               	movlb	0	; () banked
  4422  0031F4  5189               	movf	?___lldiv& (0+255),w,b
  4423  0031F6  6ECB               	movwf	4043,c	;volatile
  4424                           
  4425                           ;tmr_drv.c: 210: break;
  4426  0031F8  D01D               	goto	l531
  4427  0031FA                     
  4428                           ; BSR set to: 0
  4429                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4430                           
  4431                           ; BSR set to: 0
  4432  0031FA  0E00               	movlw	0
  4433  0031FC  6F89               	movwf	___lldiv@dividend& (0+255),b
  4434  0031FE  0E1B               	movlw	27
  4435  003200  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4436  003202  0EB7               	movlw	183
  4437  003204  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4438  003206  0E00               	movlw	0
  4439  003208  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4440  00320A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4441  00320E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4442  003212  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4443  003216  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4444  00321A  EC4B  F026         	call	___lldiv	;wreg free
  4445  00321E  0100               	movlb	0	; () banked
  4446  003220  5189               	movf	?___lldiv& (0+255),w,b
  4447  003222  6E77               	movwf	3959,c	;volatile
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;tmr_drv.c: 219: }
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;tmr_drv.c: 218: break;
  4454                           
  4455                           ;tmr_drv.c: 217: default:
  4456                           
  4457                           ;tmr_drv.c: 215: break;
  4458  003224  D007               	goto	l531
  4459  003226                     l529:
  4460                           
  4461                           ; BSR set to: 0
  4462                           
  4463                           ; BSR set to: 0
  4464  003226  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4465                           
  4466                           ; Switch size 1, requested type "space"
  4467                           ; Number of cases is 2, Range of values is 2 to 4
  4468                           ; switch strategies available:
  4469                           ; Name         Instructions Cycles
  4470                           ; simple_byte            7     4 (average)
  4471                           ;	Chosen strategy is simple_byte
  4472  003228  0A02               	xorlw	2	; case 2
  4473  00322A  B4D8               	btfsc	status,2,c
  4474  00322C  D7D0               	goto	l530
  4475  00322E  0A06               	xorlw	6	; case 4
  4476  003230  B4D8               	btfsc	status,2,c
  4477  003232  D7E3               	goto	l532
  4478  003234                     l531:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4482                           
  4483                           ; BSR set to: 0
  4484  003234  0E00               	movlw	0
  4485  003236  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4486                           
  4487                           ;tmr_drv.c: 223: }
  4488  003238  0012               	return	
  4489  00323A                     l528:
  4490  00323A                     l13939:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;tmr_drv.c: 224: else
  4494                           ;tmr_drv.c: 225: {
  4495                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4496  00323A  0E01               	movlw	1
  4497  00323C  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4498                           
  4499                           ; BSR set to: 0
  4500  00323E  0012               	return	
  4501  003240                     __end_of_Tmr_TmrBPrSet:
  4502                           	opt stack 0
  4503                           tblptru	equ	0xFF8
  4504                           tblptrh	equ	0xFF7
  4505                           tblptrl	equ	0xFF6
  4506                           tablat	equ	0xFF5
  4507                           prodh	equ	0xFF4
  4508                           prodl	equ	0xFF3
  4509                           intcon	equ	0xFF2
  4510                           intcon2	equ	0xFF1
  4511                           intcon3	equ	0xFF0
  4512                           postinc0	equ	0xFEE
  4513                           wreg	equ	0xFE8
  4514                           postdec1	equ	0xFE5
  4515                           fsr1h	equ	0xFE2
  4516                           fsr1l	equ	0xFE1
  4517                           indf2	equ	0xFDF
  4518                           postinc2	equ	0xFDE
  4519                           postdec2	equ	0xFDD
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function _Tmr_TmrBIrqSet *****************
  4525 ;; Defined at:
  4526 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  TmrNumb         1    wreg     unsigned char 
  4529 ;;  Priority        1   29[BANK0 ] enum E7716
  4530 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4546 ;;Total ram usage:        3 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:   11
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_Tmr_TmrBConfig
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text10
  4557  0056F0                     __ptext10:
  4558                           	opt stack 0
  4559  0056F0                     _Tmr_TmrBIrqSet:
  4560                           	opt stack 16
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;incstack = 0
  4564                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4565  0056F0  0100               	movlb	0	; () banked
  4566  0056F2  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4567                           
  4568                           ;tmr_drv.c: 156: switch (TmrNumb)
  4569  0056F4  D01A               	goto	l520
  4570  0056F6                     l521:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4574  0056F6  929E               	bcf	3998,1,c	;volatile
  4575                           
  4576                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4577  0056F8  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4578  0056FA  D002               	bra	u8175
  4579  0056FC  929F               	bcf	3999,1,c	;volatile
  4580  0056FE  D001               	bra	u8176
  4581  005700                     u8175:
  4582  005700  829F               	bsf	3999,1,c	;volatile
  4583  005702                     u8176:
  4584                           
  4585                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4586  005702  0100               	movlb	0	; () banked
  4587  005704  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4588  005706  D002               	bra	u8185
  4589  005708  929D               	bcf	3997,1,c	;volatile
  4590  00570A  D001               	bra	u8186
  4591  00570C                     u8185:
  4592  00570C  829D               	bsf	3997,1,c	;volatile
  4593  00570E                     u8186:
  4594                           
  4595                           ;tmr_drv.c: 165: break;
  4596  00570E  0012               	return	
  4597  005710                     l523:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4601  005710  96A4               	bcf	4004,3,c	;volatile
  4602                           
  4603                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4604  005712  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4605  005714  D002               	bra	u8195
  4606  005716  96A5               	bcf	4005,3,c	;volatile
  4607  005718  D001               	bra	u8196
  4608  00571A                     u8195:
  4609  00571A  86A5               	bsf	4005,3,c	;volatile
  4610  00571C                     u8196:
  4611                           
  4612                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4613  00571C  0100               	movlb	0	; () banked
  4614  00571E  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4615  005720  D002               	bra	u8205
  4616  005722  96A3               	bcf	4003,3,c	;volatile
  4617  005724  D001               	bra	u8206
  4618  005726                     u8205:
  4619  005726  86A3               	bsf	4003,3,c	;volatile
  4620  005728                     u8206:
  4621                           
  4622                           ;tmr_drv.c: 178: }
  4623                           
  4624                           ;tmr_drv.c: 177: break;
  4625                           
  4626                           ;tmr_drv.c: 176: default:
  4627                           
  4628                           ;tmr_drv.c: 174: break;
  4629  005728  0012               	return	
  4630  00572A                     l520:
  4631  00572A  0100               	movlb	0	; () banked
  4632  00572C  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4633                           
  4634                           ; Switch size 1, requested type "space"
  4635                           ; Number of cases is 2, Range of values is 2 to 4
  4636                           ; switch strategies available:
  4637                           ; Name         Instructions Cycles
  4638                           ; simple_byte            7     4 (average)
  4639                           ;	Chosen strategy is simple_byte
  4640  00572E  0A02               	xorlw	2	; case 2
  4641  005730  B4D8               	btfsc	status,2,c
  4642  005732  D7E1               	goto	l521
  4643  005734  0A06               	xorlw	6	; case 4
  4644  005736  A4D8               	btfss	status,2,c
  4645  005738  0012               	return	
  4646  00573A  D7EA               	goto	l523
  4647  00573C                     __end_of_Tmr_TmrBIrqSet:
  4648                           	opt stack 0
  4649                           tblptru	equ	0xFF8
  4650                           tblptrh	equ	0xFF7
  4651                           tblptrl	equ	0xFF6
  4652                           tablat	equ	0xFF5
  4653                           prodh	equ	0xFF4
  4654                           prodl	equ	0xFF3
  4655                           intcon	equ	0xFF2
  4656                           intcon2	equ	0xFF1
  4657                           intcon3	equ	0xFF0
  4658                           postinc0	equ	0xFEE
  4659                           wreg	equ	0xFE8
  4660                           postdec1	equ	0xFE5
  4661                           fsr1h	equ	0xFE2
  4662                           fsr1l	equ	0xFE1
  4663                           indf2	equ	0xFDF
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function _Tmr_StartTmr *****************
  4671 ;; Defined at:
  4672 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  TmrNumb         1    wreg     unsigned char 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;Total ram usage:        1 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:   11
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_Tmr_TmrBConfig
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text11
  4701  006014                     __ptext11:
  4702                           	opt stack 0
  4703  006014                     _Tmr_StartTmr:
  4704                           	opt stack 16
  4705                           
  4706                           ;incstack = 0
  4707                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4708  006014  0100               	movlb	0	; () banked
  4709  006016  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4710                           
  4711                           ;tmr_drv.c: 245: switch (TmrNumb)
  4712  006018  D004               	goto	l538
  4713  00601A                     l539:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4717  00601A  84CA               	bsf	4042,2,c	;volatile
  4718                           
  4719                           ;tmr_drv.c: 250: break;
  4720  00601C  0012               	return	
  4721  00601E                     l541:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4725  00601E  8476               	bsf	3958,2,c	;volatile
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;tmr_drv.c: 259: }
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;tmr_drv.c: 258: break;
  4732                           
  4733                           ;tmr_drv.c: 257: default:
  4734                           
  4735                           ;tmr_drv.c: 255: break;
  4736  006020  0012               	return	
  4737  006022                     l538:
  4738                           
  4739                           ; BSR set to: 0
  4740  006022  0100               	movlb	0	; () banked
  4741  006024  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4742                           
  4743                           ; Switch size 1, requested type "space"
  4744                           ; Number of cases is 2, Range of values is 2 to 4
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte            7     4 (average)
  4748                           ;	Chosen strategy is simple_byte
  4749  006026  0A02               	xorlw	2	; case 2
  4750  006028  B4D8               	btfsc	status,2,c
  4751  00602A  D7F7               	goto	l539
  4752  00602C  0A06               	xorlw	6	; case 4
  4753  00602E  A4D8               	btfss	status,2,c
  4754  006030  0012               	return	
  4755  006032  D7F5               	goto	l541
  4756  006034                     __end_of_Tmr_StartTmr:
  4757                           	opt stack 0
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           prodh	equ	0xFF4
  4763                           prodl	equ	0xFF3
  4764                           intcon	equ	0xFF2
  4765                           intcon2	equ	0xFF1
  4766                           intcon3	equ	0xFF0
  4767                           postinc0	equ	0xFEE
  4768                           wreg	equ	0xFE8
  4769                           postdec1	equ	0xFE5
  4770                           fsr1h	equ	0xFE2
  4771                           fsr1l	equ	0xFE1
  4772                           indf2	equ	0xFDF
  4773                           postinc2	equ	0xFDE
  4774                           postdec2	equ	0xFDD
  4775                           fsr2h	equ	0xFDA
  4776                           fsr2l	equ	0xFD9
  4777                           status	equ	0xFD8
  4778                           
  4779 ;; *************** function _TmrBInit *****************
  4780 ;; Defined at:
  4781 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  TmrNumb         1    wreg     unsigned char 
  4784 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4785 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4800 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4801 ;;Total ram usage:        4 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:   11
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_Tmr_TmrBConfig
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text12
  4812  004812                     __ptext12:
  4813                           	opt stack 0
  4814  004812                     _TmrBInit:
  4815                           	opt stack 16
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;incstack = 0
  4819                           ;TmrBInit@TmrNumb stored from wreg
  4820  004812  0100               	movlb	0	; () banked
  4821  004814  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4822                           
  4823                           ;tmr_drv.c: 75: switch (TmrNumb)
  4824  004816  D03F               	goto	l500
  4825  004818                     l503:
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4829  004818  90CA               	bcf	4042,0,c	;volatile
  4830  00481A  D001               	goto	L1
  4831  00481C                     l505:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4835  00481C  80CA               	bsf	4042,0,c	;volatile
  4836  00481E                     L1:
  4837                           
  4838                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4839  00481E  92CA               	bcf	4042,1,c	;volatile
  4840                           
  4841                           ;tmr_drv.c: 91: break;
  4842  004820  D00E               	goto	l504
  4843  004822                     l506:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4847  004822  80CA               	bsf	4042,0,c	;volatile
  4848                           
  4849                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4850  004824  82CA               	bsf	4042,1,c	;volatile
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;tmr_drv.c: 100: }
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;tmr_drv.c: 99: break;
  4857                           
  4858                           ;tmr_drv.c: 98: default:
  4859                           
  4860                           ;tmr_drv.c: 96: break;
  4861  004826  D00B               	goto	l504
  4862  004828                     
  4863                           ; BSR set to: 0
  4864  004828  0100               	movlb	0	; () banked
  4865  00482A  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4866                           
  4867                           ; Switch size 1, requested type "space"
  4868                           ; Number of cases is 3, Range of values is 1 to 16
  4869                           ; switch strategies available:
  4870                           ; Name         Instructions Cycles
  4871                           ; simple_byte           10     6 (average)
  4872                           ;	Chosen strategy is simple_byte
  4873  00482C  0A01               	xorlw	1	; case 1
  4874  00482E  B4D8               	btfsc	status,2,c
  4875  004830  D7F3               	goto	l503
  4876  004832  0A05               	xorlw	5	; case 4
  4877  004834  B4D8               	btfsc	status,2,c
  4878  004836  D7F2               	goto	l505
  4879  004838  0A14               	xorlw	20	; case 16
  4880  00483A  B4D8               	btfsc	status,2,c
  4881  00483C  D7F2               	goto	l506
  4882  00483E                     l504:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4886                           
  4887                           ; BSR set to: 0
  4888  00483E  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4889  004842  0EFF               	movlw	255
  4890  004844  277F               	addwf	??_TmrBInit& (0+255),f,b
  4891  004846  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4892  004848  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4893  00484A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4894  00484C  50CA               	movf	4042,w,c	;volatile
  4895  00484E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4896  004850  0B87               	andlw	-121
  4897  004852  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4898  004854  6ECA               	movwf	4042,c	;volatile
  4899                           
  4900                           ;tmr_drv.c: 104: break;
  4901  004856  0012               	return	
  4902  004858                     l511:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4906  004858  9076               	bcf	3958,0,c	;volatile
  4907  00485A  D001               	goto	L2
  4908  00485C                     l513:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4912  00485C  8076               	bsf	3958,0,c	;volatile
  4913  00485E                     L2:
  4914                           
  4915                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4916  00485E  9276               	bcf	3958,1,c	;volatile
  4917                           
  4918                           ;tmr_drv.c: 120: break;
  4919  004860  D00D               	goto	l512
  4920  004862                     l514:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4924  004862  8076               	bsf	3958,0,c	;volatile
  4925                           
  4926                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4927  004864  8276               	bsf	3958,1,c	;volatile
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;tmr_drv.c: 129: }
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;tmr_drv.c: 128: break;
  4934                           
  4935                           ;tmr_drv.c: 127: default:
  4936                           
  4937                           ;tmr_drv.c: 125: break;
  4938  004866  D00A               	goto	l512
  4939  004868                     
  4940                           ; BSR set to: 0
  4941                           
  4942                           ; BSR set to: 0
  4943  004868  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4944                           
  4945                           ; Switch size 1, requested type "space"
  4946                           ; Number of cases is 3, Range of values is 1 to 16
  4947                           ; switch strategies available:
  4948                           ; Name         Instructions Cycles
  4949                           ; simple_byte           10     6 (average)
  4950                           ;	Chosen strategy is simple_byte
  4951  00486A  0A01               	xorlw	1	; case 1
  4952  00486C  B4D8               	btfsc	status,2,c
  4953  00486E  D7F4               	goto	l511
  4954  004870  0A05               	xorlw	5	; case 4
  4955  004872  B4D8               	btfsc	status,2,c
  4956  004874  D7F3               	goto	l513
  4957  004876  0A14               	xorlw	20	; case 16
  4958  004878  B4D8               	btfsc	status,2,c
  4959  00487A  D7F3               	goto	l514
  4960  00487C                     l512:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4964                           
  4965                           ; BSR set to: 0
  4966  00487C  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4967  004880  0EFF               	movlw	255
  4968  004882  277F               	addwf	??_TmrBInit& (0+255),f,b
  4969  004884  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4970  004886  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4971  004888  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4972  00488A  5076               	movf	3958,w,c	;volatile
  4973  00488C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4974  00488E  0B87               	andlw	-121
  4975  004890  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4976  004892  6E76               	movwf	3958,c	;volatile
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;tmr_drv.c: 137: }
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;tmr_drv.c: 136: break;
  4983                           
  4984                           ;tmr_drv.c: 135: default:
  4985                           
  4986                           ;tmr_drv.c: 133: break;
  4987  004894  0012               	return	
  4988  004896                     l500:
  4989                           
  4990                           ; BSR set to: 0
  4991  004896  0100               	movlb	0	; () banked
  4992  004898  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4993                           
  4994                           ; Switch size 1, requested type "space"
  4995                           ; Number of cases is 2, Range of values is 2 to 4
  4996                           ; switch strategies available:
  4997                           ; Name         Instructions Cycles
  4998                           ; simple_byte            7     4 (average)
  4999                           ;	Chosen strategy is simple_byte
  5000  00489A  0A02               	xorlw	2	; case 2
  5001  00489C  B4D8               	btfsc	status,2,c
  5002  00489E  D7C4               	goto	l502
  5003  0048A0  0A06               	xorlw	6	; case 4
  5004  0048A2  A4D8               	btfss	status,2,c
  5005  0048A4  0012               	return	
  5006  0048A6  D7E0               	goto	l510
  5007  0048A8                     __end_of_TmrBInit:
  5008                           	opt stack 0
  5009                           tblptru	equ	0xFF8
  5010                           tblptrh	equ	0xFF7
  5011                           tblptrl	equ	0xFF6
  5012                           tablat	equ	0xFF5
  5013                           prodh	equ	0xFF4
  5014                           prodl	equ	0xFF3
  5015                           intcon	equ	0xFF2
  5016                           intcon2	equ	0xFF1
  5017                           intcon3	equ	0xFF0
  5018                           postinc0	equ	0xFEE
  5019                           wreg	equ	0xFE8
  5020                           postdec1	equ	0xFE5
  5021                           fsr1h	equ	0xFE2
  5022                           fsr1l	equ	0xFE1
  5023                           indf2	equ	0xFDF
  5024                           postinc2	equ	0xFDE
  5025                           postdec2	equ	0xFDD
  5026                           fsr2h	equ	0xFDA
  5027                           fsr2l	equ	0xFD9
  5028                           status	equ	0xFD8
  5029                           
  5030 ;; *************** function _Sch_MainScheduler *****************
  5031 ;; Defined at:
  5032 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:   22
  5053 ;; This function calls:
  5054 ;;		_InitializeTasks
  5055 ;;		_ScheduleTasks
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text13
  5062  006072                     __ptext13:
  5063                           	opt stack 0
  5064  006072                     _Sch_MainScheduler:
  5065                           	opt stack 8
  5066                           
  5067                           ;os_sched.c: 178: InitializeTasks();
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;incstack = 0
  5071  006072  EC40  F027         	call	_InitializeTasks	;wreg free
  5072                           
  5073                           ;os_sched.c: 180: SystemState = RunningState;
  5074  006076  0E01               	movlw	1
  5075  006078  0100               	movlb	0	; () banked
  5076  00607A  6FD4               	movwf	_SystemState& (0+255),b
  5077  00607C                     
  5078                           ;os_sched.c: 188: {
  5079                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5080                           
  5081                           ; BSR set to: 0
  5082  00607C  0102               	movlb	2	; () banked
  5083  00607E  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5084  006080  A4D8               	btfss	status,2,c
  5085  006082  D7FC               	goto	l790
  5086                           
  5087                           ; BSR set to: 2
  5088                           ;os_sched.c: 191: {
  5089                           ;os_sched.c: 196: ScheduleTasks();
  5090  006084  EC0C  F017         	call	_ScheduleTasks	;wreg free
  5091                           
  5092                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5093  006088  0E01               	movlw	1
  5094  00608A  0102               	movlb	2	; () banked
  5095  00608C  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5096                           
  5097                           ; BSR set to: 2
  5098                           
  5099                           ; BSR set to: 2
  5100  00608E  D7F6               	goto	l790
  5101  006090                     __end_of_Sch_MainScheduler:
  5102                           	opt stack 0
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           intcon	equ	0xFF2
  5110                           intcon2	equ	0xFF1
  5111                           intcon3	equ	0xFF0
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           postdec1	equ	0xFE5
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _ScheduleTasks *****************
  5125 ;; Defined at:
  5126 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  ActiveTaskIn    1    4[BANK3 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5141 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
  5144 ;;Total ram usage:        5 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:   21
  5147 ;; This function calls:
  5148 ;;		_I2cSlv_MainTask
  5149 ;;		_Led_MainTask
  5150 ;;		_MdmHttp_MainTask
  5151 ;;		_Mdm_DrvMainFn
  5152 ;;		_Mdm_MainTask
  5153 ;;		_MyApp_Task
  5154 ;;		_Rtcm_MainTask
  5155 ;;		_Term_MainTask
  5156 ;;		_UsbDevice_MainTask
  5157 ;;		_Wdg_MainTask
  5158 ;; This function is called by:
  5159 ;;		_Sch_MainScheduler
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text14
  5164  002E18                     __ptext14:
  5165                           	opt stack 0
  5166  002E18                     _ScheduleTasks:
  5167                           	opt stack 8
  5168                           
  5169                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5170                           
  5171                           ; BSR set to: 2
  5172                           ;incstack = 0
  5173  002E18  0E00               	movlw	0
  5174  002E1A  0103               	movlb	3	; () banked
  5175  002E1C  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5176                           
  5177                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5178  002E1E  0E00               	movlw	0
  5179  002E20  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5180  002E22                     l15093:
  5181                           
  5182                           ; BSR set to: 3
  5183  002E22  0E3D               	movlw	low _TaskNumber
  5184  002E24  6EF6               	movwf	tblptrl,c
  5185  002E26                     	if	1	;There is more than 1 active tblptr byte
  5186  002E26  0EFC               	movlw	high _TaskNumber
  5187  002E28  6EF7               	movwf	tblptrh,c
  5188  002E2A                     	endif
  5189  002E2A                     	if	0	;There are less than 3 active tblptr bytes
  5190  002E2A                     	endif
  5191  002E2A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5192  002E2C  6FFB               	movwf	??_ScheduleTasks& (0+255),b
  5193  002E2E  6BFC               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5194  002E30  0009               	tblrd		*+
  5195  002E32  50F5               	movf	tablat,w,c
  5196  002E34  5DFB               	subwf	??_ScheduleTasks& (0+255),w,b
  5197  002E36  0009               	tblrd		*+
  5198  002E38  50F5               	movf	tablat,w,c
  5199  002E3A  59FC               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5200  002E3C  B0D8               	btfsc	status,0,c
  5201  002E3E  0012               	return	
  5202                           
  5203                           ; BSR set to: 3
  5204                           ;os_sched.c: 106: {
  5205                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5206                           
  5207                           ; BSR set to: 3
  5208                           
  5209                           ; BSR set to: 3
  5210  002E40  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5211  002E42  0D08               	mullw	8
  5212  002E44  0E03               	movlw	3
  5213  002E46  26F3               	addwf	prodl,f,c
  5214  002E48  0E00               	movlw	0
  5215  002E4A  22F4               	addwfc	prodh,f,c
  5216  002E4C  0EA4               	movlw	low _TaskTable
  5217  002E4E  24F3               	addwf	prodl,w,c
  5218  002E50  6ED9               	movwf	fsr2l,c
  5219  002E52  0E05               	movlw	high _TaskTable
  5220  002E54  20F4               	addwfc	prodh,w,c
  5221  002E56  6EDA               	movwf	fsr2h,c
  5222  002E58  2ADE               	incf	postinc2,f,c
  5223  002E5A  0E00               	movlw	0
  5224  002E5C  22DD               	addwfc	postdec2,f,c
  5225                           
  5226                           ; BSR set to: 3
  5227                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5228  002E5E  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5229  002E60  0D08               	mullw	8
  5230  002E62  0E05               	movlw	5
  5231  002E64  26F3               	addwf	prodl,f,c
  5232  002E66  0E00               	movlw	0
  5233  002E68  22F4               	addwfc	prodh,f,c
  5234  002E6A  0EA4               	movlw	low _TaskTable
  5235  002E6C  24F3               	addwf	prodl,w,c
  5236  002E6E  6ED9               	movwf	fsr2l,c
  5237  002E70  0E05               	movlw	high _TaskTable
  5238  002E72  20F4               	addwfc	prodh,w,c
  5239  002E74  6EDA               	movwf	fsr2h,c
  5240  002E76  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5241  002E78  0D08               	mullw	8
  5242  002E7A  0E03               	movlw	3
  5243  002E7C  26F3               	addwf	prodl,f,c
  5244  002E7E  0E00               	movlw	0
  5245  002E80  22F4               	addwfc	prodh,f,c
  5246  002E82  0EA4               	movlw	low _TaskTable
  5247  002E84  24F3               	addwf	prodl,w,c
  5248  002E86  6EE1               	movwf	fsr1l,c
  5249  002E88  0E05               	movlw	high _TaskTable
  5250  002E8A  20F4               	addwfc	prodh,w,c
  5251  002E8C  6EE2               	movwf	fsr1h,c
  5252  002E8E  50DE               	movf	postinc2,w,c
  5253  002E90  5CE6               	subwf	postinc1,w,c
  5254  002E92  50DE               	movf	postinc2,w,c
  5255  002E94  58E6               	subwfb	postinc1,w,c
  5256  002E96  A0D8               	btfss	status,0,c
  5257  002E98  D04E               	goto	l775
  5258                           
  5259                           ; BSR set to: 3
  5260                           ;os_sched.c: 111: {
  5261                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5262  002E9A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5263  002E9C  0D08               	mullw	8
  5264  002E9E  0E03               	movlw	3
  5265  002EA0  26F3               	addwf	prodl,f,c
  5266  002EA2  0E00               	movlw	0
  5267  002EA4  22F4               	addwfc	prodh,f,c
  5268  002EA6  0EA4               	movlw	low _TaskTable
  5269  002EA8  24F3               	addwf	prodl,w,c
  5270  002EAA  6ED9               	movwf	fsr2l,c
  5271  002EAC  0E05               	movlw	high _TaskTable
  5272  002EAE  20F4               	addwfc	prodh,w,c
  5273  002EB0  6EDA               	movwf	fsr2h,c
  5274  002EB2  0E00               	movlw	0
  5275  002EB4  6EDE               	movwf	postinc2,c
  5276  002EB6  0E00               	movlw	0
  5277  002EB8  6EDD               	movwf	postdec2,c
  5278                           
  5279                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5280  002EBA  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5281  002EBC  0D08               	mullw	8
  5282  002EBE  0E02               	movlw	2
  5283  002EC0  26F3               	addwf	prodl,f,c
  5284  002EC2  0E00               	movlw	0
  5285  002EC4  22F4               	addwfc	prodh,f,c
  5286  002EC6  0EA4               	movlw	low _TaskTable
  5287  002EC8  24F3               	addwf	prodl,w,c
  5288  002ECA  6ED9               	movwf	fsr2l,c
  5289  002ECC  0E05               	movlw	high _TaskTable
  5290  002ECE  20F4               	addwfc	prodh,w,c
  5291  002ED0  6EDA               	movwf	fsr2h,c
  5292  002ED2  0E01               	movlw	1
  5293  002ED4  6EDF               	movwf	indf2,c
  5294                           
  5295                           ; BSR set to: 3
  5296                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5297  002ED6  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5298  002ED8  0D08               	mullw	8
  5299  002EDA  0EA4               	movlw	low _TaskTable
  5300  002EDC  24F3               	addwf	prodl,w,c
  5301  002EDE  6ED9               	movwf	fsr2l,c
  5302  002EE0  0E05               	movlw	high _TaskTable
  5303  002EE2  20F4               	addwfc	prodh,w,c
  5304  002EE4  6EDA               	movwf	fsr2h,c
  5305  002EE6  D801               	call	u14778
  5306  002EE8  D017               	goto	u14779
  5307  002EEA                     u14778:
  5308  002EEA  0005               	push	
  5309  002EEC  6EFA               	movwf	pclath,c
  5310  002EEE  50DE               	movf	postinc2,w,c
  5311  002EF0  6EFD               	movwf	tosl,c
  5312  002EF2  50DE               	movf	postinc2,w,c
  5313  002EF4  6EFE               	movwf	tosh,c
  5314  002EF6  50F8               	movf	tblptru,w,c
  5315  002EF8  6EFF               	movwf	tosu,c
  5316  002EFA  50FA               	movf	pclath,w,c
  5317  002EFC  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5318  002EFE  0D08               	mullw	8
  5319  002F00  0E07               	movlw	7
  5320  002F02  26F3               	addwf	prodl,f,c
  5321  002F04  0E00               	movlw	0
  5322  002F06  22F4               	addwfc	prodh,f,c
  5323  002F08  0EA4               	movlw	low _TaskTable
  5324  002F0A  24F3               	addwf	prodl,w,c
  5325  002F0C  6ED9               	movwf	fsr2l,c
  5326  002F0E  0E05               	movlw	high _TaskTable
  5327  002F10  20F4               	addwfc	prodh,w,c
  5328  002F12  6EDA               	movwf	fsr2h,c
  5329  002F14  50DF               	movf	indf2,w,c
  5330  002F16  0012               	return		;indir
  5331  002F18                     u14779:
  5332                           
  5333                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5334  002F18  0103               	movlb	3	; () banked
  5335  002F1A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5336  002F1C  0D08               	mullw	8
  5337  002F1E  0E02               	movlw	2
  5338  002F20  26F3               	addwf	prodl,f,c
  5339  002F22  0E00               	movlw	0
  5340  002F24  22F4               	addwfc	prodh,f,c
  5341  002F26  0EA4               	movlw	low _TaskTable
  5342  002F28  24F3               	addwf	prodl,w,c
  5343  002F2A  6ED9               	movwf	fsr2l,c
  5344  002F2C  0E05               	movlw	high _TaskTable
  5345  002F2E  20F4               	addwfc	prodh,w,c
  5346  002F30  6EDA               	movwf	fsr2h,c
  5347  002F32  0E00               	movlw	0
  5348  002F34  6EDF               	movwf	indf2,c
  5349  002F36                     l775:
  5350                           
  5351                           ; BSR set to: 3
  5352                           
  5353                           ; BSR set to: 3
  5354                           
  5355                           ;os_sched.c: 117: else
  5356                           ;os_sched.c: 118: {
  5357                           
  5358                           ; BSR set to: 3
  5359  002F36  2BFF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5360  002F38  D774               	goto	l15093
  5361  002F3A                     __end_of_ScheduleTasks:
  5362                           	opt stack 0
  5363                           tosu	equ	0xFFF
  5364                           tosh	equ	0xFFE
  5365                           tosl	equ	0xFFD
  5366                           pclath	equ	0xFFA
  5367                           tblptru	equ	0xFF8
  5368                           tblptrh	equ	0xFF7
  5369                           tblptrl	equ	0xFF6
  5370                           tablat	equ	0xFF5
  5371                           prodh	equ	0xFF4
  5372                           prodl	equ	0xFF3
  5373                           intcon	equ	0xFF2
  5374                           intcon2	equ	0xFF1
  5375                           intcon3	equ	0xFF0
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           postinc1	equ	0xFE6
  5379                           postdec1	equ	0xFE5
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           indf2	equ	0xFDF
  5383                           postinc2	equ	0xFDE
  5384                           postdec2	equ	0xFDD
  5385                           fsr2h	equ	0xFDA
  5386                           fsr2l	equ	0xFD9
  5387                           status	equ	0xFD8
  5388                           
  5389 ;; *************** function _InitializeTasks *****************
  5390 ;; Defined at:
  5391 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  ActiveTaskIn    1    2[BANK3 ] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5408 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
  5409 ;;Total ram usage:        3 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:   21
  5412 ;; This function calls:
  5413 ;;		_I2cSlv_MainTask
  5414 ;;		_Led_MainTask
  5415 ;;		_MdmHttp_MainTask
  5416 ;;		_Mdm_DrvMainFn
  5417 ;;		_Mdm_MainTask
  5418 ;;		_MyApp_Task
  5419 ;;		_Rtcm_MainTask
  5420 ;;		_Term_MainTask
  5421 ;;		_UsbDevice_MainTask
  5422 ;;		_Wdg_MainTask
  5423 ;; This function is called by:
  5424 ;;		_Sch_MainScheduler
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text15
  5429  004E80                     __ptext15:
  5430                           	opt stack 0
  5431  004E80                     _InitializeTasks:
  5432                           	opt stack 8
  5433                           
  5434                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5435                           
  5436                           ; BSR set to: 3
  5437                           ;incstack = 0
  5438  004E80  0E00               	movlw	0
  5439  004E82  0103               	movlb	3	; () banked
  5440  004E84  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5441                           
  5442                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5443  004E86  0E00               	movlw	0
  5444  004E88  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5445  004E8A                     l15081:
  5446                           
  5447                           ; BSR set to: 3
  5448  004E8A  0E3D               	movlw	low _TaskNumber
  5449  004E8C  6EF6               	movwf	tblptrl,c
  5450  004E8E                     	if	1	;There is more than 1 active tblptr byte
  5451  004E8E  0EFC               	movlw	high _TaskNumber
  5452  004E90  6EF7               	movwf	tblptrh,c
  5453  004E92                     	endif
  5454  004E92                     	if	0	;There are less than 3 active tblptr bytes
  5455  004E92                     	endif
  5456  004E92  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5457  004E94  6FFB               	movwf	??_InitializeTasks& (0+255),b
  5458  004E96  6BFC               	clrf	(??_InitializeTasks+1)& (0+255),b
  5459  004E98  0009               	tblrd		*+
  5460  004E9A  50F5               	movf	tablat,w,c
  5461  004E9C  5DFB               	subwf	??_InitializeTasks& (0+255),w,b
  5462  004E9E  0009               	tblrd		*+
  5463  004EA0  50F5               	movf	tablat,w,c
  5464  004EA2  59FC               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5465  004EA4  B0D8               	btfsc	status,0,c
  5466  004EA6  0012               	return	
  5467                           
  5468                           ; BSR set to: 3
  5469                           ;os_sched.c: 86: {
  5470                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5471                           
  5472                           ; BSR set to: 3
  5473                           
  5474                           ; BSR set to: 3
  5475  004EA8  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5476  004EAA  0D08               	mullw	8
  5477  004EAC  0EA4               	movlw	low _TaskTable
  5478  004EAE  24F3               	addwf	prodl,w,c
  5479  004EB0  6ED9               	movwf	fsr2l,c
  5480  004EB2  0E05               	movlw	high _TaskTable
  5481  004EB4  20F4               	addwfc	prodh,w,c
  5482  004EB6  6EDA               	movwf	fsr2h,c
  5483  004EB8  D801               	call	u14738
  5484  004EBA  D017               	goto	u14739
  5485  004EBC                     u14738:
  5486  004EBC  0005               	push	
  5487  004EBE  6EFA               	movwf	pclath,c
  5488  004EC0  50DE               	movf	postinc2,w,c
  5489  004EC2  6EFD               	movwf	tosl,c
  5490  004EC4  50DE               	movf	postinc2,w,c
  5491  004EC6  6EFE               	movwf	tosh,c
  5492  004EC8  50F8               	movf	tblptru,w,c
  5493  004ECA  6EFF               	movwf	tosu,c
  5494  004ECC  50FA               	movf	pclath,w,c
  5495  004ECE  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5496  004ED0  0D08               	mullw	8
  5497  004ED2  0E07               	movlw	7
  5498  004ED4  26F3               	addwf	prodl,f,c
  5499  004ED6  0E00               	movlw	0
  5500  004ED8  22F4               	addwfc	prodh,f,c
  5501  004EDA  0EA4               	movlw	low _TaskTable
  5502  004EDC  24F3               	addwf	prodl,w,c
  5503  004EDE  6ED9               	movwf	fsr2l,c
  5504  004EE0  0E05               	movlw	high _TaskTable
  5505  004EE2  20F4               	addwfc	prodh,w,c
  5506  004EE4  6EDA               	movwf	fsr2h,c
  5507  004EE6  50DF               	movf	indf2,w,c
  5508  004EE8  0012               	return		;indir
  5509  004EEA                     u14739:
  5510  004EEA  0103               	movlb	3	; () banked
  5511  004EEC  2BFD               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5512  004EEE  D7CD               	goto	l15081
  5513  004EF0                     __end_of_InitializeTasks:
  5514                           	opt stack 0
  5515                           tosu	equ	0xFFF
  5516                           tosh	equ	0xFFE
  5517                           tosl	equ	0xFFD
  5518                           pclath	equ	0xFFA
  5519                           tblptru	equ	0xFF8
  5520                           tblptrh	equ	0xFF7
  5521                           tblptrl	equ	0xFF6
  5522                           tablat	equ	0xFF5
  5523                           prodh	equ	0xFF4
  5524                           prodl	equ	0xFF3
  5525                           intcon	equ	0xFF2
  5526                           intcon2	equ	0xFF1
  5527                           intcon3	equ	0xFF0
  5528                           postinc0	equ	0xFEE
  5529                           wreg	equ	0xFE8
  5530                           postinc1	equ	0xFE6
  5531                           postdec1	equ	0xFE5
  5532                           fsr1h	equ	0xFE2
  5533                           fsr1l	equ	0xFE1
  5534                           indf2	equ	0xFDF
  5535                           postinc2	equ	0xFDE
  5536                           postdec2	equ	0xFDD
  5537                           fsr2h	equ	0xFDA
  5538                           fsr2l	equ	0xFD9
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function _MyApp_Task *****************
  5542 ;; Defined at:
  5543 ;;		line 167 in file "../Source/c/04_App/app.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  Options         1    wreg     unsigned char 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  Options         1    0[COMRAM] unsigned char 
  5548 ;;  smsText        20    0        unsigned char [20]
  5549 ;;  cmpString       3    0[BANK1 ] unsigned char [3]
  5550 ;;  memoryResult    1    3[BANK1 ] enum E8114
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  1    wreg      void 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5561 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5563 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5564 ;;Total ram usage:        4 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:   17
  5567 ;; This function calls:
  5568 ;;		_ClearBuffer
  5569 ;;		_Eeprom_Read
  5570 ;;		_GetCallerNumber
  5571 ;;		_Led_SetLedBlinkTime
  5572 ;;		_Mdm_HangPhoneCall
  5573 ;;		_Mdm_IsRinging
  5574 ;;		_Mdm_IsSmsReceived
  5575 ;;		_Mdm_RequestSmsData
  5576 ;;		_StringCompare
  5577 ;;		_blinkForSeconds
  5578 ;;		_initGprsModem
  5579 ;; This function is called by:
  5580 ;;		_InitializeTasks
  5581 ;;		_ScheduleTasks
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text16
  5586  002F3A                     __ptext16:
  5587                           	opt stack 0
  5588  002F3A                     _MyApp_Task:
  5589                           	opt stack 11
  5590                           
  5591                           ;app.c: 169: static UINT8 phone[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5', '6', '
      +                          7', '8', '9', '\0'};
  5592                           ;app.c: 171: static uint16_t blinkTicks = 0xFFFF;
  5593                           ;app.c: 172: static uint8_t blinkSeconds = 0;
  5594                           ;app.c: 174: uint8_t smsText[((UINT8)(20))];
  5595                           ;app.c: 175: uint8_t cmpString[] = {'c', 'a', 't'};
  5596                           
  5597                           ; BSR set to: 3
  5598                           ;incstack = 0
  5599  002F3A  C3C8  F100         	movff	MyApp_Task@F9007,MyApp_Task@cmpString
  5600  002F3E  C3C9  F101         	movff	MyApp_Task@F9007+1,MyApp_Task@cmpString+1
  5601  002F42  C3CA  F102         	movff	MyApp_Task@F9007+2,MyApp_Task@cmpString+2
  5602                           
  5603                           ;app.c: 177: static uint8_t memoryFlag = 1;
  5604                           ;app.c: 178: I2cOpStsType memoryResult = OP_COMPLETE;
  5605  002F46  0E01               	movlw	1
  5606  002F48  0101               	movlb	1	; () banked
  5607  002F4A  6F03               	movwf	MyApp_Task@memoryResult& (0+255),b
  5608                           
  5609                           ;app.c: 180: switch (SystemState)
  5610  002F4C  D079               	goto	l2581
  5611  002F4E                     
  5612                           ;app.c: 185: Led_SetLedBlinkTime(1u,100,900);
  5613                           
  5614                           ; BSR set to: 1
  5615  002F4E  0E00               	movlw	0
  5616  002F50  0100               	movlb	0	; () banked
  5617  002F52  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5618  002F54  0E64               	movlw	100
  5619  002F56  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5620  002F58  0E03               	movlw	3
  5621  002F5A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5622  002F5C  0E84               	movlw	132
  5623  002F5E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5624  002F60  0E01               	movlw	1
  5625  002F62  EC0B  F02A         	call	_Led_SetLedBlinkTime
  5626                           
  5627                           ;app.c: 186: break;
  5628  002F66  0012               	return	
  5629  002F68                     
  5630                           ;app.c: 190: if (initGprsModem())
  5631  002F68  EC6E  F023         	call	_initGprsModem	;wreg free
  5632  002F6C  0900               	iorlw	0
  5633  002F6E  B4D8               	btfsc	status,2,c
  5634  002F70  0012               	return	
  5635                           
  5636                           ;app.c: 191: {
  5637                           ;app.c: 193: if (Mdm_IsRinging())
  5638  002F72  EC80  F02F         	call	_Mdm_IsRinging	;wreg free
  5639  002F76  0900               	iorlw	0
  5640  002F78  B4D8               	btfsc	status,2,c
  5641  002F7A  D025               	goto	l2586
  5642                           
  5643                           ;app.c: 194: {
  5644                           ;app.c: 195: blinkTicks = 0;
  5645  002F7C  0E00               	movlw	0
  5646  002F7E  0103               	movlb	3	; () banked
  5647  002F80  6FFA               	movwf	(MyApp_Task@blinkTicks+1)& (0+255),b
  5648  002F82  0E00               	movlw	0
  5649  002F84  6FF9               	movwf	MyApp_Task@blinkTicks& (0+255),b
  5650                           
  5651                           ; BSR set to: 3
  5652                           ;app.c: 196: if (StringCompare(phone, GetCallerNumber(), 14))
  5653  002F86  0EC9               	movlw	low MyApp_Task@phone
  5654  002F88  0100               	movlb	0	; () banked
  5655  002F8A  6F85               	movwf	StringCompare@String1& (0+255),b
  5656  002F8C  0E04               	movlw	high MyApp_Task@phone
  5657  002F8E  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5658  002F90  ECE5  F02D         	call	_GetCallerNumber	;wreg free
  5659  002F94  C083  F087         	movff	?_GetCallerNumber,StringCompare@String2
  5660  002F98  C084  F088         	movff	?_GetCallerNumber+1,StringCompare@String2+1
  5661  002F9C  0E00               	movlw	0
  5662  002F9E  0100               	movlb	0	; () banked
  5663  002FA0  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5664  002FA2  0E0E               	movlw	14
  5665  002FA4  6F89               	movwf	StringCompare@Len& (0+255),b
  5666  002FA6  EC89  F02A         	call	_StringCompare	;wreg free
  5667  002FAA  0900               	iorlw	0
  5668  002FAC  B4D8               	btfsc	status,2,c
  5669  002FAE  D003               	goto	l2587
  5670                           
  5671                           ;app.c: 197: {
  5672                           ;app.c: 198: blinkSeconds = 5;
  5673  002FB0  0E05               	movlw	5
  5674  002FB2  0101               	movlb	1	; () banked
  5675  002FB4  6FD5               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5676  002FB6                     l2587:
  5677                           
  5678                           ;app.c: 199: }
  5679                           ;app.c: 200: blinkSeconds = 3;
  5680  002FB6  0E03               	movlw	3
  5681  002FB8  0101               	movlb	1	; () banked
  5682  002FBA  6FD5               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;app.c: 201: Mdm_HangPhoneCall();
  5686  002FBC  ECED  F030         	call	_Mdm_HangPhoneCall	;wreg free
  5687                           
  5688                           ;app.c: 202: memoryFlag = 1;
  5689  002FC0  0E01               	movlw	1
  5690  002FC2  0100               	movlb	0	; () banked
  5691  002FC4  6FE2               	movwf	MyApp_Task@memoryFlag& (0+255),b
  5692  002FC6                     l2586:
  5693                           
  5694                           ;app.c: 203: }
  5695                           ;app.c: 204: if (Mdm_IsSmsReceived())
  5696                           
  5697                           ; BSR set to: 0
  5698  002FC6  EC6E  F02F         	call	_Mdm_IsSmsReceived	;wreg free
  5699  002FCA  0900               	iorlw	0
  5700  002FCC  A4D8               	btfss	status,2,c
  5701                           
  5702                           ;app.c: 205: {
  5703                           ;app.c: 206: Mdm_RequestSmsData();
  5704  002FCE  EC0F  F031         	call	_Mdm_RequestSmsData	;wreg free
  5705                           
  5706                           ;app.c: 207: }
  5707                           ;app.c: 224: blinkForSeconds(blinkSeconds, &blinkTicks);
  5708  002FD2  0EF9               	movlw	low MyApp_Task@blinkTicks
  5709  002FD4  0100               	movlb	0	; () banked
  5710  002FD6  6F93               	movwf	blinkForSeconds@blinkTicks& (0+255),b
  5711  002FD8  0E03               	movlw	high MyApp_Task@blinkTicks
  5712  002FDA  6F94               	movwf	(blinkForSeconds@blinkTicks+1)& (0+255),b
  5713  002FDC  0101               	movlb	1	; () banked
  5714  002FDE  51D5               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5715  002FE0  ECAB  F02D         	call	_blinkForSeconds
  5716                           
  5717                           ;app.c: 226: if (memoryFlag == 1)
  5718  002FE4  0100               	movlb	0	; () banked
  5719  002FE6  05E2               	decf	MyApp_Task@memoryFlag& (0+255),w,b
  5720  002FE8  A4D8               	btfss	status,2,c
  5721  002FEA  D00D               	goto	l2589
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;app.c: 227: {
  5725                           ;app.c: 229: ClearBuffer(phone, 14);
  5726  002FEC  0EC9               	movlw	low MyApp_Task@phone
  5727  002FEE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5728  002FF0  0E04               	movlw	high MyApp_Task@phone
  5729  002FF2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5730  002FF4  0E00               	movlw	0
  5731  002FF6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5732  002FF8  0E0E               	movlw	14
  5733  002FFA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5734  002FFC  EC00  F02E         	call	_ClearBuffer	;wreg free
  5735                           
  5736                           ;app.c: 230: memoryFlag++;
  5737  003000  0100               	movlb	0	; () banked
  5738  003002  2BE2               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5739                           
  5740                           ;app.c: 231: }
  5741  003004  0012               	return	
  5742  003006                     l2589:
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;app.c: 232: else if (memoryFlag >= 2 && memoryFlag <= 250)
  5746                           
  5747                           ; BSR set to: 0
  5748  003006  0E01               	movlw	1
  5749  003008  65E2               	cpfsgt	MyApp_Task@memoryFlag& (0+255),b
  5750  00300A  0012               	return	
  5751                           
  5752                           ; BSR set to: 0
  5753  00300C  0EFB               	movlw	251
  5754  00300E  61E2               	cpfslt	MyApp_Task@memoryFlag& (0+255),b
  5755  003010  0012               	return	
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;app.c: 233: {
  5759                           ;app.c: 234: if (memoryFlag == 100)
  5760  003012  0E64               	movlw	100
  5761  003014  19E2               	xorwf	MyApp_Task@memoryFlag& (0+255),w,b
  5762  003016  A4D8               	btfss	status,2,c
  5763  003018  D011               	goto	l2592
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;app.c: 235: {
  5767                           ;app.c: 236: memoryResult = Eeprom_Read(0, phone, 13);
  5768  00301A  0EC9               	movlw	low MyApp_Task@phone
  5769  00301C  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
  5770  00301E  0E04               	movlw	high MyApp_Task@phone
  5771  003020  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
  5772  003022  0E0D               	movlw	13
  5773  003024  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
  5774  003026  0E00               	movlw	0
  5775  003028  EC35  F02A         	call	_Eeprom_Read
  5776  00302C  0101               	movlb	1	; () banked
  5777  00302E  6F03               	movwf	MyApp_Task@memoryResult& (0+255),b
  5778                           
  5779                           ; BSR set to: 1
  5780                           ;app.c: 237: if (memoryResult != OP_IN_PROGRESS)
  5781  003030  5103               	movf	MyApp_Task@memoryResult& (0+255),w,b
  5782  003032  B4D8               	btfsc	status,2,c
  5783  003034  0012               	return	
  5784                           
  5785                           ; BSR set to: 1
  5786                           ;app.c: 238: {
  5787                           ;app.c: 239: memoryFlag++;
  5788  003036  0100               	movlb	0	; () banked
  5789  003038  2BE2               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;app.c: 240: }
  5793                           ;app.c: 241: }
  5794  00303A  0012               	return	
  5795  00303C                     l2592:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;app.c: 242: else
  5799                           ;app.c: 243: {
  5800                           ;app.c: 244: memoryFlag++;
  5801                           
  5802                           ; BSR set to: 0
  5803  00303C  2BE2               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;app.c: 253: }
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;app.c: 252: break;
  5810                           
  5811                           ;app.c: 251: default:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;app.c: 245: }
  5815                           ;app.c: 246: }
  5816                           ;app.c: 247: }
  5817                           ;app.c: 248: break;
  5818                           
  5819                           ; BSR set to: 0
  5820                           
  5821                           ; BSR set to: 0
  5822                           
  5823                           ; BSR set to: 0
  5824  00303E  0012               	return	
  5825  003040                     l2581:
  5826                           
  5827                           ; BSR set to: 0
  5828  003040  0100               	movlb	0	; () banked
  5829  003042  51D4               	movf	_SystemState& (0+255),w,b
  5830                           
  5831                           ; Switch size 1, requested type "space"
  5832                           ; Number of cases is 2, Range of values is 0 to 1
  5833                           ; switch strategies available:
  5834                           ; Name         Instructions Cycles
  5835                           ; simple_byte            7     4 (average)
  5836                           ;	Chosen strategy is simple_byte
  5837  003044  0A00               	xorlw	0	; case 0
  5838  003046  B4D8               	btfsc	status,2,c
  5839  003048  D782               	goto	l2582
  5840  00304A  0A01               	xorlw	1	; case 1
  5841  00304C  A4D8               	btfss	status,2,c
  5842  00304E  0012               	return	
  5843  003050  D78B               	goto	l2584
  5844  003052                     __end_of_MyApp_Task:
  5845                           	opt stack 0
  5846                           tosu	equ	0xFFF
  5847                           tosh	equ	0xFFE
  5848                           tosl	equ	0xFFD
  5849                           pclath	equ	0xFFA
  5850                           tblptru	equ	0xFF8
  5851                           tblptrh	equ	0xFF7
  5852                           tblptrl	equ	0xFF6
  5853                           tablat	equ	0xFF5
  5854                           prodh	equ	0xFF4
  5855                           prodl	equ	0xFF3
  5856                           intcon	equ	0xFF2
  5857                           intcon2	equ	0xFF1
  5858                           intcon3	equ	0xFF0
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           postinc1	equ	0xFE6
  5862                           postdec1	equ	0xFE5
  5863                           fsr1h	equ	0xFE2
  5864                           fsr1l	equ	0xFE1
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _Term_MainTask *****************
  5873 ;; Defined at:
  5874 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  Options         1    wreg     unsigned char 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  Options         1    0[COMRAM] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;Total ram usage:        0 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:   17
  5895 ;; This function calls:
  5896 ;;		_Term_MainSm
  5897 ;; This function is called by:
  5898 ;;		_InitializeTasks
  5899 ;;		_ScheduleTasks
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text17
  5904  0060E2                     __ptext17:
  5905                           	opt stack 0
  5906  0060E2                     _Term_MainTask:
  5907                           	opt stack 11
  5908                           
  5909                           ;term.c: 847: switch (SystemState)
  5910                           
  5911                           ;incstack = 0
  5912  0060E2  D003               	goto	l2452
  5913  0060E4                     
  5914                           ;term.c: 858: Term_MainSm();
  5915  0060E4  EC5B  F008         	call	_Term_MainSm	;wreg free
  5916                           
  5917                           ;term.c: 865: }
  5918                           
  5919                           ;term.c: 864: break;
  5920                           
  5921                           ;term.c: 863: default:
  5922                           
  5923                           ;term.c: 860: break;
  5924  0060E8  0012               	return	
  5925  0060EA                     l2452:
  5926  0060EA  0100               	movlb	0	; () banked
  5927  0060EC  51D4               	movf	_SystemState& (0+255),w,b
  5928                           
  5929                           ; Switch size 1, requested type "space"
  5930                           ; Number of cases is 2, Range of values is 0 to 1
  5931                           ; switch strategies available:
  5932                           ; Name         Instructions Cycles
  5933                           ; simple_byte            7     4 (average)
  5934                           ;	Chosen strategy is simple_byte
  5935  0060EE  0A00               	xorlw	0	; case 0
  5936  0060F0  B4D8               	btfsc	status,2,c
  5937  0060F2  0012               	return	
  5938  0060F4  0A01               	xorlw	1	; case 1
  5939  0060F6  A4D8               	btfss	status,2,c
  5940  0060F8  0012               	return	
  5941  0060FA  D7F4               	goto	l2455
  5942  0060FC                     __end_of_Term_MainTask:
  5943                           	opt stack 0
  5944                           tosu	equ	0xFFF
  5945                           tosh	equ	0xFFE
  5946                           tosl	equ	0xFFD
  5947                           pclath	equ	0xFFA
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           prodh	equ	0xFF4
  5953                           prodl	equ	0xFF3
  5954                           intcon	equ	0xFF2
  5955                           intcon2	equ	0xFF1
  5956                           intcon3	equ	0xFF0
  5957                           postinc0	equ	0xFEE
  5958                           wreg	equ	0xFE8
  5959                           postinc1	equ	0xFE6
  5960                           postdec1	equ	0xFE5
  5961                           fsr1h	equ	0xFE2
  5962                           fsr1l	equ	0xFE1
  5963                           indf2	equ	0xFDF
  5964                           postinc2	equ	0xFDE
  5965                           postdec2	equ	0xFDD
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function _Rtcm_MainTask *****************
  5971 ;; Defined at:
  5972 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  Options         1    wreg     unsigned char 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  Options         1    0[COMRAM] unsigned char 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:   14
  5993 ;; This function calls:
  5994 ;;		_Rtcc_AlarmConfig
  5995 ;;		_Rtcc_LockRtc
  5996 ;;		_Rtcc_RtcConfig
  5997 ;;		_Rtcc_SetRtcStatus
  5998 ;;		_Rtcc_UnlockRtc
  5999 ;;		_Rtcm_GetRtccDate
  6000 ;;		_Rtcm_SetRtccDate
  6001 ;; This function is called by:
  6002 ;;		_InitializeTasks
  6003 ;;		_ScheduleTasks
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text18
  6008  004AF6                     __ptext18:
  6009                           	opt stack 0
  6010  004AF6                     _Rtcm_MainTask:
  6011                           	opt stack 14
  6012                           
  6013                           ;rtcm.c: 101: switch (SystemState)
  6014                           
  6015                           ;incstack = 0
  6016  004AF6  D03D               	goto	l2182
  6017  004AF8                     l2183:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6021  004AF8  86CD               	bsf	4045,3,c	;volatile
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6025  004AFA  0E00               	movlw	0
  6026  004AFC  0103               	movlb	3	; () banked
  6027  004AFE  6FB4               	movwf	_RtcConfig& (0+255),b
  6028                           
  6029                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6030  004B00  0E00               	movlw	0
  6031  004B02  6FB5               	movwf	(_RtcConfig+1)& (0+255),b
  6032                           
  6033                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6034  004B04  0E01               	movlw	1
  6035  004B06  6FB6               	movwf	(_RtcConfig+2)& (0+255),b
  6036                           
  6037                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6038  004B08  0E01               	movlw	1
  6039  004B0A  6FB7               	movwf	(_RtcConfig+3)& (0+255),b
  6040                           
  6041                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6042  004B0C  0E01               	movlw	1
  6043  004B0E  6FB0               	movwf	_AlCfg& (0+255),b
  6044                           
  6045                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6046  004B10  0E01               	movlw	1
  6047  004B12  6FB1               	movwf	(_AlCfg+1)& (0+255),b
  6048                           
  6049                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6050  004B14  0E01               	movlw	1
  6051  004B16  6FB2               	movwf	(_AlCfg+2)& (0+255),b
  6052                           
  6053                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6054  004B18  0E00               	movlw	0
  6055  004B1A  6FB3               	movwf	(_AlCfg+3)& (0+255),b
  6056                           
  6057                           ; BSR set to: 3
  6058                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6059  004B1C  ECFF  F030         	call	_Rtcc_UnlockRtc	;wreg free
  6060                           
  6061                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6062  004B20  0EB4               	movlw	low _RtcConfig
  6063  004B22  0100               	movlb	0	; () banked
  6064  004B24  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6065  004B26  0E03               	movlw	high _RtcConfig
  6066  004B28  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6067  004B2A  ECCF  F022         	call	_Rtcc_RtcConfig	;wreg free
  6068                           
  6069                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6070  004B2E  0EB0               	movlw	low _AlCfg
  6071  004B30  0100               	movlb	0	; () banked
  6072  004B32  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6073  004B34  0E03               	movlw	high _AlCfg
  6074  004B36  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6075  004B38  ECAE  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6076                           
  6077                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6078  004B3C  0E01               	movlw	1
  6079  004B3E  ECAE  F030         	call	_Rtcc_SetRtcStatus
  6080                           
  6081                           ;rtcm.c: 127: Rtcc_LockRtc();
  6082  004B42  EC07  F031         	call	_Rtcc_LockRtc	;wreg free
  6083                           
  6084                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6085  004B46  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6086  004B4A  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6087  004B4E  0E07               	movlw	7
  6088  004B50                     u14611:
  6089  004B50  CFDB FFEB          	movff	plusw2,plusw0
  6090  004B54  06E8               	decf	wreg,f,c
  6091  004B56  E2FC               	bc	u14611
  6092  004B58  ECE1  F029         	call	_Rtcm_SetRtccDate	;wreg free
  6093                           
  6094                           ;rtcm.c: 154: break;
  6095  004B5C  0012               	return	
  6096  004B5E                     
  6097                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6098  004B5E  EC17  F028         	call	_Rtcm_GetRtccDate	;wreg free
  6099  004B62  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6100  004B66  0E07               	movlw	7
  6101  004B68                     u14621:
  6102  004B68  CFEB FFDB          	movff	plusw0,plusw2
  6103  004B6C  06E8               	decf	wreg,f,c
  6104  004B6E  E2FC               	bc	u14621
  6105                           
  6106                           ;rtcm.c: 165: }
  6107                           
  6108                           ;rtcm.c: 164: break;
  6109                           
  6110                           ;rtcm.c: 163: default:
  6111                           
  6112                           ;rtcm.c: 160: break;
  6113  004B70  0012               	return	
  6114  004B72                     l2182:
  6115  004B72  0100               	movlb	0	; () banked
  6116  004B74  51D4               	movf	_SystemState& (0+255),w,b
  6117                           
  6118                           ; Switch size 1, requested type "space"
  6119                           ; Number of cases is 2, Range of values is 0 to 1
  6120                           ; switch strategies available:
  6121                           ; Name         Instructions Cycles
  6122                           ; simple_byte            7     4 (average)
  6123                           ;	Chosen strategy is simple_byte
  6124  004B76  0A00               	xorlw	0	; case 0
  6125  004B78  B4D8               	btfsc	status,2,c
  6126  004B7A  D7BE               	goto	l2183
  6127  004B7C  0A01               	xorlw	1	; case 1
  6128  004B7E  A4D8               	btfss	status,2,c
  6129  004B80  0012               	return	
  6130  004B82  D7ED               	goto	l2185
  6131  004B84                     __end_of_Rtcm_MainTask:
  6132                           	opt stack 0
  6133                           tosu	equ	0xFFF
  6134                           tosh	equ	0xFFE
  6135                           tosl	equ	0xFFD
  6136                           pclath	equ	0xFFA
  6137                           tblptru	equ	0xFF8
  6138                           tblptrh	equ	0xFF7
  6139                           tblptrl	equ	0xFF6
  6140                           tablat	equ	0xFF5
  6141                           prodh	equ	0xFF4
  6142                           prodl	equ	0xFF3
  6143                           intcon	equ	0xFF2
  6144                           intcon2	equ	0xFF1
  6145                           intcon3	equ	0xFF0
  6146                           postinc0	equ	0xFEE
  6147                           plusw0	equ	0xFEB
  6148                           wreg	equ	0xFE8
  6149                           postinc1	equ	0xFE6
  6150                           postdec1	equ	0xFE5
  6151                           fsr1h	equ	0xFE2
  6152                           fsr1l	equ	0xFE1
  6153                           indf2	equ	0xFDF
  6154                           postinc2	equ	0xFDE
  6155                           postdec2	equ	0xFDD
  6156                           plusw2	equ	0xFDB
  6157                           fsr2h	equ	0xFDA
  6158                           fsr2l	equ	0xFD9
  6159                           status	equ	0xFD8
  6160                           
  6161 ;; *************** function _Led_MainTask *****************
  6162 ;; Defined at:
  6163 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  Options         1    wreg     unsigned char 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  Options         1    0[COMRAM] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;Total ram usage:        1 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:   14
  6184 ;; This function calls:
  6185 ;;		_LedStateMachine
  6186 ;; This function is called by:
  6187 ;;		_InitializeTasks
  6188 ;;		_ScheduleTasks
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text19
  6193  0039F6                     __ptext19:
  6194                           	opt stack 0
  6195  0039F6                     _Led_MainTask:
  6196                           	opt stack 14
  6197                           
  6198                           ;led.c: 300: switch (SystemState)
  6199                           
  6200                           ;incstack = 0
  6201  0039F6  D05C               	goto	l2096
  6202  0039F8                     l2097:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6206  0039F8  9895               	bcf	3989,4,c	;volatile
  6207                           
  6208                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6209  0039FA  9A95               	bcf	3989,5,c	;volatile
  6210                           
  6211                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6212  0039FC  9C95               	bcf	3989,6,c	;volatile
  6213                           
  6214                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6215  0039FE  9883               	bcf	3971,4,c	;volatile
  6216                           
  6217                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6218  003A00  9A83               	bcf	3971,5,c	;volatile
  6219                           
  6220                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6221  003A02  9C83               	bcf	3971,6,c	;volatile
  6222                           
  6223                           ;led.c: 311: break;
  6224  003A04  0012               	return	
  6225  003A06                     
  6226                           ; BSR set to: 0
  6227                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6228                           
  6229                           ; BSR set to: 0
  6230  003A06  0EFD               	movlw	low _Led1Sts
  6231  003A08  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6232  003A0A  0E01               	movlw	high _Led1Sts
  6233  003A0C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6234  003A0E  0EFC               	movlw	low _Led1OutSts
  6235  003A10  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6236  003A12  0E01               	movlw	high _Led1OutSts
  6237  003A14  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6238  003A16  0E6E               	movlw	low _Led1Blink
  6239  003A18  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6240  003A1A  0E03               	movlw	high _Led1Blink
  6241  003A1C  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6242  003A1E  0E92               	movlw	low _Led1Pulse
  6243  003A20  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6244  003A22  0E03               	movlw	high _Led1Pulse
  6245  003A24  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6246  003A26  0E01               	movlw	1
  6247  003A28  EC2A  F022         	call	_LedStateMachine
  6248  003A2C  0100               	movlb	0	; () banked
  6249  003A2E  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6250  003A30  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6251  003A32  5083               	movf	3971,w,c	;volatile
  6252  003A34  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6253  003A36  0BEF               	andlw	-17
  6254  003A38  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6255  003A3A  6E83               	movwf	3971,c	;volatile
  6256                           
  6257                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6258  003A3C  0EFB               	movlw	low _Led2Sts
  6259  003A3E  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6260  003A40  0E01               	movlw	high _Led2Sts
  6261  003A42  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6262  003A44  0EFA               	movlw	low _Led2OutSts
  6263  003A46  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6264  003A48  0E01               	movlw	high _Led2OutSts
  6265  003A4A  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6266  003A4C  0E65               	movlw	low _Led2Blink
  6267  003A4E  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6268  003A50  0E03               	movlw	high _Led2Blink
  6269  003A52  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6270  003A54  0E8C               	movlw	low _Led2Pulse
  6271  003A56  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6272  003A58  0E03               	movlw	high _Led2Pulse
  6273  003A5A  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6274  003A5C  0E02               	movlw	2
  6275  003A5E  EC2A  F022         	call	_LedStateMachine
  6276  003A62  0100               	movlb	0	; () banked
  6277  003A64  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6278  003A66  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6279  003A68  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6280  003A6A  5083               	movf	3971,w,c	;volatile
  6281  003A6C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6282  003A6E  0BDF               	andlw	-33
  6283  003A70  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6284  003A72  6E83               	movwf	3971,c	;volatile
  6285                           
  6286                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6287  003A74  0EF9               	movlw	low _Led3Sts
  6288  003A76  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6289  003A78  0E01               	movlw	high _Led3Sts
  6290  003A7A  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6291  003A7C  0EF8               	movlw	low _Led3OutSts
  6292  003A7E  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6293  003A80  0E01               	movlw	high _Led3OutSts
  6294  003A82  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6295  003A84  0E5C               	movlw	low _Led3Blink
  6296  003A86  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6297  003A88  0E03               	movlw	high _Led3Blink
  6298  003A8A  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6299  003A8C  0E86               	movlw	low _Led3Pulse
  6300  003A8E  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6301  003A90  0E03               	movlw	high _Led3Pulse
  6302  003A92  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6303  003A94  0E03               	movlw	3
  6304  003A96  EC2A  F022         	call	_LedStateMachine
  6305  003A9A  0100               	movlb	0	; () banked
  6306  003A9C  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6307  003A9E  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6308  003AA0  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6309  003AA2  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6310  003AA4  5083               	movf	3971,w,c	;volatile
  6311  003AA6  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6312  003AA8  0BBF               	andlw	-65
  6313  003AAA  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6314  003AAC  6E83               	movwf	3971,c	;volatile
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;led.c: 326: }
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;led.c: 325: break;
  6321                           
  6322                           ;led.c: 324: default:
  6323                           
  6324                           ;led.c: 321: break;
  6325  003AAE  0012               	return	
  6326  003AB0                     l2096:
  6327                           
  6328                           ; BSR set to: 0
  6329  003AB0  0100               	movlb	0	; () banked
  6330  003AB2  51D4               	movf	_SystemState& (0+255),w,b
  6331                           
  6332                           ; Switch size 1, requested type "space"
  6333                           ; Number of cases is 2, Range of values is 0 to 1
  6334                           ; switch strategies available:
  6335                           ; Name         Instructions Cycles
  6336                           ; simple_byte            7     4 (average)
  6337                           ;	Chosen strategy is simple_byte
  6338  003AB4  0A00               	xorlw	0	; case 0
  6339  003AB6  B4D8               	btfsc	status,2,c
  6340  003AB8  D79F               	goto	l2097
  6341  003ABA  0A01               	xorlw	1	; case 1
  6342  003ABC  A4D8               	btfss	status,2,c
  6343  003ABE  0012               	return	
  6344  003AC0  D7A2               	goto	l2099
  6345  003AC2                     __end_of_Led_MainTask:
  6346                           	opt stack 0
  6347                           tosu	equ	0xFFF
  6348                           tosh	equ	0xFFE
  6349                           tosl	equ	0xFFD
  6350                           pclath	equ	0xFFA
  6351                           tblptru	equ	0xFF8
  6352                           tblptrh	equ	0xFF7
  6353                           tblptrl	equ	0xFF6
  6354                           tablat	equ	0xFF5
  6355                           prodh	equ	0xFF4
  6356                           prodl	equ	0xFF3
  6357                           intcon	equ	0xFF2
  6358                           intcon2	equ	0xFF1
  6359                           intcon3	equ	0xFF0
  6360                           postinc0	equ	0xFEE
  6361                           plusw0	equ	0xFEB
  6362                           wreg	equ	0xFE8
  6363                           postinc1	equ	0xFE6
  6364                           postdec1	equ	0xFE5
  6365                           fsr1h	equ	0xFE2
  6366                           fsr1l	equ	0xFE1
  6367                           indf2	equ	0xFDF
  6368                           postinc2	equ	0xFDE
  6369                           postdec2	equ	0xFDD
  6370                           plusw2	equ	0xFDB
  6371                           fsr2h	equ	0xFDA
  6372                           fsr2l	equ	0xFD9
  6373                           status	equ	0xFD8
  6374                           
  6375 ;; *************** function _UsbDevice_MainTask *****************
  6376 ;; Defined at:
  6377 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  Options         1    wreg     unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  Options         1    0[COMRAM] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;Total ram usage:        0 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:   20
  6398 ;; This function calls:
  6399 ;;		_CDCTxService
  6400 ;;		_USBDeviceInit
  6401 ;;		_USBDeviceTasks
  6402 ;; This function is called by:
  6403 ;;		_InitializeTasks
  6404 ;;		_ScheduleTasks
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text20
  6409  005EB8                     __ptext20:
  6410                           	opt stack 0
  6411  005EB8                     _UsbDevice_MainTask:
  6412                           	opt stack 8
  6413                           
  6414                           ;usb_device_mgr.c: 74: switch (SystemState)
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;incstack = 0
  6418  005EB8  D008               	goto	l1989
  6419  005EBA                     
  6420                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6421  005EBA  ECC3  F010         	call	_USBDeviceInit	;wreg free
  6422                           
  6423                           ;usb_device_mgr.c: 80: ;
  6424                           ;usb_device_mgr.c: 81: break;
  6425  005EBE  0012               	return	
  6426  005EC0                     
  6427                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6428  005EC0  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6429                           
  6430                           ;usb_device_mgr.c: 90: CDCTxService();
  6431  005EC4  EC0B  F014         	call	_CDCTxService	;wreg free
  6432                           
  6433                           ;usb_device_mgr.c: 101: }
  6434                           
  6435                           ;usb_device_mgr.c: 100: break;
  6436                           
  6437                           ;usb_device_mgr.c: 99: default:
  6438                           
  6439                           ;usb_device_mgr.c: 96: break;
  6440  005EC8  0012               	return	
  6441  005ECA                     l1989:
  6442  005ECA  0100               	movlb	0	; () banked
  6443  005ECC  51D4               	movf	_SystemState& (0+255),w,b
  6444                           
  6445                           ; Switch size 1, requested type "space"
  6446                           ; Number of cases is 2, Range of values is 0 to 1
  6447                           ; switch strategies available:
  6448                           ; Name         Instructions Cycles
  6449                           ; simple_byte            7     4 (average)
  6450                           ;	Chosen strategy is simple_byte
  6451  005ECE  0A00               	xorlw	0	; case 0
  6452  005ED0  B4D8               	btfsc	status,2,c
  6453  005ED2  D7F3               	goto	l1990
  6454  005ED4  0A01               	xorlw	1	; case 1
  6455  005ED6  A4D8               	btfss	status,2,c
  6456  005ED8  0012               	return	
  6457  005EDA  D7F2               	goto	l1992
  6458  005EDC                     __end_of_UsbDevice_MainTask:
  6459                           	opt stack 0
  6460                           tosu	equ	0xFFF
  6461                           tosh	equ	0xFFE
  6462                           tosl	equ	0xFFD
  6463                           pclath	equ	0xFFA
  6464                           tblptru	equ	0xFF8
  6465                           tblptrh	equ	0xFF7
  6466                           tblptrl	equ	0xFF6
  6467                           tablat	equ	0xFF5
  6468                           prodh	equ	0xFF4
  6469                           prodl	equ	0xFF3
  6470                           intcon	equ	0xFF2
  6471                           intcon2	equ	0xFF1
  6472                           intcon3	equ	0xFF0
  6473                           postinc0	equ	0xFEE
  6474                           plusw0	equ	0xFEB
  6475                           wreg	equ	0xFE8
  6476                           postinc1	equ	0xFE6
  6477                           postdec1	equ	0xFE5
  6478                           fsr1h	equ	0xFE2
  6479                           fsr1l	equ	0xFE1
  6480                           indf2	equ	0xFDF
  6481                           postinc2	equ	0xFDE
  6482                           postdec2	equ	0xFDD
  6483                           plusw2	equ	0xFDB
  6484                           fsr2h	equ	0xFDA
  6485                           fsr2l	equ	0xFD9
  6486                           status	equ	0xFD8
  6487                           
  6488 ;; *************** function _MdmHttp_MainTask *****************
  6489 ;; Defined at:
  6490 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  Options         1    wreg     unsigned char 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  Options         1    0[COMRAM] unsigned char 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      void 
  6497 ;; Registers used:
  6498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6508 ;;Total ram usage:        0 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:   15
  6511 ;; This function calls:
  6512 ;;		_HttpGetMethod
  6513 ;;		_InitGprsNetwork
  6514 ;; This function is called by:
  6515 ;;		_InitializeTasks
  6516 ;;		_ScheduleTasks
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text21
  6521  005784                     __ptext21:
  6522                           	opt stack 0
  6523  005784                     _MdmHttp_MainTask:
  6524                           	opt stack 13
  6525                           
  6526                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6527                           
  6528                           ;incstack = 0
  6529  005784  D019               	goto	l1288
  6530  005786                     
  6531                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6532  005786  0E03               	movlw	3
  6533  005788  0100               	movlb	0	; () banked
  6534  00578A  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6535  00578C  A4D8               	btfss	status,2,c
  6536  00578E  0012               	return	
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;mdm_gsm_gprs_http.c: 570: {
  6540                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6541  005790  C2D6  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6542  005794  C2D7  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6543  005798  C1F1  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6544  00579C  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6545  0057A0  0101               	movlb	1	; () banked
  6546  0057A2  6FF0               	movwf	_GprsNetworkSts& (0+255),b
  6547                           
  6548                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6549  0057A4  0EA3               	movlw	low _HttpGetDataLocal
  6550  0057A6  0100               	movlb	0	; () banked
  6551  0057A8  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6552  0057AA  0E03               	movlw	high _HttpGetDataLocal
  6553  0057AC  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6554  0057AE  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6555  0057B2  0101               	movlb	1	; () banked
  6556  0057B4  6FEF               	movwf	_HttpGetMethodSts& (0+255),b
  6557                           
  6558                           ; BSR set to: 1
  6559                           ;mdm_gsm_gprs_http.c: 581: }
  6560                           
  6561                           ; BSR set to: 1
  6562                           ;mdm_gsm_gprs_http.c: 580: break;
  6563                           
  6564                           ;mdm_gsm_gprs_http.c: 579: default:
  6565                           
  6566                           ; BSR set to: 1
  6567                           ;mdm_gsm_gprs_http.c: 575: }
  6568                           ;mdm_gsm_gprs_http.c: 576: break;
  6569  0057B6  0012               	return	
  6570  0057B8                     l1288:
  6571                           
  6572                           ; BSR set to: 1
  6573  0057B8  0100               	movlb	0	; () banked
  6574  0057BA  51D4               	movf	_SystemState& (0+255),w,b
  6575                           
  6576                           ; Switch size 1, requested type "space"
  6577                           ; Number of cases is 2, Range of values is 0 to 1
  6578                           ; switch strategies available:
  6579                           ; Name         Instructions Cycles
  6580                           ; simple_byte            7     4 (average)
  6581                           ;	Chosen strategy is simple_byte
  6582  0057BC  0A00               	xorlw	0	; case 0
  6583  0057BE  B4D8               	btfsc	status,2,c
  6584  0057C0  0012               	return	
  6585  0057C2  0A01               	xorlw	1	; case 1
  6586  0057C4  A4D8               	btfss	status,2,c
  6587  0057C6  0012               	return	
  6588  0057C8  D7DE               	goto	l1291
  6589  0057CA                     __end_of_MdmHttp_MainTask:
  6590                           	opt stack 0
  6591                           tosu	equ	0xFFF
  6592                           tosh	equ	0xFFE
  6593                           tosl	equ	0xFFD
  6594                           pclath	equ	0xFFA
  6595                           tblptru	equ	0xFF8
  6596                           tblptrh	equ	0xFF7
  6597                           tblptrl	equ	0xFF6
  6598                           tablat	equ	0xFF5
  6599                           prodh	equ	0xFF4
  6600                           prodl	equ	0xFF3
  6601                           intcon	equ	0xFF2
  6602                           intcon2	equ	0xFF1
  6603                           intcon3	equ	0xFF0
  6604                           postinc0	equ	0xFEE
  6605                           plusw0	equ	0xFEB
  6606                           wreg	equ	0xFE8
  6607                           postinc1	equ	0xFE6
  6608                           postdec1	equ	0xFE5
  6609                           fsr1h	equ	0xFE2
  6610                           fsr1l	equ	0xFE1
  6611                           indf2	equ	0xFDF
  6612                           postinc2	equ	0xFDE
  6613                           postdec2	equ	0xFDD
  6614                           plusw2	equ	0xFDB
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function _Mdm_MainTask *****************
  6620 ;; Defined at:
  6621 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  Options         1    wreg     unsigned char 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  Options         1    0[COMRAM] unsigned char 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:   15
  6642 ;; This function calls:
  6643 ;;		_CheckModem
  6644 ;;		_ConfigureModem
  6645 ;;		_GetSmsSm
  6646 ;;		_ModemEvtParser
  6647 ;;		_SendSmsSm
  6648 ;;		_TurnOnModem
  6649 ;;		_UartSetConfig
  6650 ;;		_Uart_InitUartModule
  6651 ;; This function is called by:
  6652 ;;		_InitializeTasks
  6653 ;;		_ScheduleTasks
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text22
  6658  0055B4                     __ptext22:
  6659                           	opt stack 0
  6660  0055B4                     _Mdm_MainTask:
  6661                           	opt stack 13
  6662                           
  6663                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6664                           
  6665                           ;incstack = 0
  6666  0055B4  D01E               	goto	l1107
  6667  0055B6                     
  6668                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6669  0055B6  EC07  F029         	call	_UartSetConfig	;wreg free
  6670                           
  6671                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6672  0055BA  0E24               	movlw	low _UartConfig
  6673  0055BC  0100               	movlb	0	; () banked
  6674  0055BE  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6675  0055C0  0E03               	movlw	high _UartConfig
  6676  0055C2  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6677  0055C4  0E01               	movlw	1
  6678  0055C6  EC5E  F005         	call	_Uart_InitUartModule
  6679                           
  6680                           ;mdm_gsm_gprs.c: 764: break;
  6681  0055CA  0012               	return	
  6682  0055CC                     
  6683                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6684  0055CC  EC19  F012         	call	_CheckModem	;wreg free
  6685                           
  6686                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6687  0055D0  042B               	decf	_ComChecCompleted,w,c
  6688  0055D2  A4D8               	btfss	status,2,c
  6689  0055D4  D005               	goto	l1111
  6690  0055D6  0100               	movlb	0	; () banked
  6691  0055D8  51D1               	movf	_MdmStatus& (0+255),w,b
  6692  0055DA  B4D8               	btfsc	status,2,c
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;mdm_gsm_gprs.c: 772: {
  6696                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6697  0055DC  ECE5  F02B         	call	_TurnOnModem	;wreg free
  6698  0055E0                     l1111:
  6699                           
  6700                           ;mdm_gsm_gprs.c: 775: }
  6701                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6702  0055E0  EC94  F01C         	call	_ConfigureModem	;wreg free
  6703                           
  6704                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6705  0055E4  EC99  F00E         	call	_ModemEvtParser	;wreg free
  6706                           
  6707                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6708  0055E8  EC4A  F015         	call	_GetSmsSm	;wreg free
  6709                           
  6710                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6711  0055EC  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6712                           
  6713                           ;mdm_gsm_gprs.c: 789: }
  6714                           
  6715                           ;mdm_gsm_gprs.c: 788: break;
  6716                           
  6717                           ;mdm_gsm_gprs.c: 787: default:
  6718                           
  6719                           ;mdm_gsm_gprs.c: 784: break;
  6720  0055F0  0012               	return	
  6721  0055F2                     l1107:
  6722  0055F2  0100               	movlb	0	; () banked
  6723  0055F4  51D4               	movf	_SystemState& (0+255),w,b
  6724                           
  6725                           ; Switch size 1, requested type "space"
  6726                           ; Number of cases is 2, Range of values is 0 to 1
  6727                           ; switch strategies available:
  6728                           ; Name         Instructions Cycles
  6729                           ; simple_byte            7     4 (average)
  6730                           ;	Chosen strategy is simple_byte
  6731  0055F6  0A00               	xorlw	0	; case 0
  6732  0055F8  B4D8               	btfsc	status,2,c
  6733  0055FA  D7DD               	goto	l1108
  6734  0055FC  0A01               	xorlw	1	; case 1
  6735  0055FE  A4D8               	btfss	status,2,c
  6736  005600  0012               	return	
  6737  005602  D7E4               	goto	l1110
  6738  005604                     __end_of_Mdm_MainTask:
  6739                           	opt stack 0
  6740                           tosu	equ	0xFFF
  6741                           tosh	equ	0xFFE
  6742                           tosl	equ	0xFFD
  6743                           pclath	equ	0xFFA
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           prodh	equ	0xFF4
  6749                           prodl	equ	0xFF3
  6750                           intcon	equ	0xFF2
  6751                           intcon2	equ	0xFF1
  6752                           intcon3	equ	0xFF0
  6753                           postinc0	equ	0xFEE
  6754                           plusw0	equ	0xFEB
  6755                           wreg	equ	0xFE8
  6756                           postinc1	equ	0xFE6
  6757                           postdec1	equ	0xFE5
  6758                           fsr1h	equ	0xFE2
  6759                           fsr1l	equ	0xFE1
  6760                           indf2	equ	0xFDF
  6761                           postinc2	equ	0xFDE
  6762                           postdec2	equ	0xFDD
  6763                           plusw2	equ	0xFDB
  6764                           fsr2h	equ	0xFDA
  6765                           fsr2l	equ	0xFD9
  6766                           status	equ	0xFD8
  6767                           
  6768 ;; *************** function _I2cSlv_MainTask *****************
  6769 ;; Defined at:
  6770 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  Options         1    wreg     unsigned char 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  Options         1    0[COMRAM] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6788 ;;Total ram usage:        0 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:   14
  6791 ;; This function calls:
  6792 ;;		_I2cSendMsgSm
  6793 ;;		_I2cSetConfig
  6794 ;;		_I2c_InitI2cModule
  6795 ;;		_OsAlrm_SetOsAlarm
  6796 ;; This function is called by:
  6797 ;;		_InitializeTasks
  6798 ;;		_ScheduleTasks
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           	psect	text23
  6803  00536E                     __ptext23:
  6804                           	opt stack 0
  6805  00536E                     _I2cSlv_MainTask:
  6806                           	opt stack 14
  6807                           
  6808                           ;i2c_slv.c: 217: switch (SystemState)
  6809                           
  6810                           ;incstack = 0
  6811  00536E  D020               	goto	l1401
  6812  005370                     
  6813                           ;i2c_slv.c: 222: I2cSetConfig();
  6814  005370  ECF5  F02E         	call	_I2cSetConfig	;wreg free
  6815                           
  6816                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6817  005374  0E52               	movlw	low _I2cConfig
  6818  005376  0100               	movlb	0	; () banked
  6819  005378  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6820  00537A  0E03               	movlw	high _I2cConfig
  6821  00537C  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6822  00537E  EC07  F027         	call	_I2c_InitI2cModule	;wreg free
  6823                           
  6824                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6825  005382  0E00               	movlw	0
  6826  005384  0100               	movlb	0	; () banked
  6827  005386  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6828  005388  0E00               	movlw	0
  6829  00538A  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6830  00538C  0E32               	movlw	50
  6831  00538E  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6832  005390  0E00               	movlw	0
  6833  005392  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6834  005394  0E00               	movlw	0
  6835  005396  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6836  005398  0E00               	movlw	0
  6837  00539A  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6838  00539C  0EAC               	movlw	low _I2cDummyTx
  6839  00539E  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6840  0053A0  0E60               	movlw	high _I2cDummyTx
  6841  0053A2  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6842  0053A4  ECF4  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6843                           
  6844                           ;i2c_slv.c: 227: break;
  6845  0053A8  0012               	return	
  6846  0053AA                     
  6847                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6848  0053AA  EC58  F01F         	call	_I2cSendMsgSm	;wreg free
  6849                           
  6850                           ;i2c_slv.c: 238: }
  6851                           
  6852                           ;i2c_slv.c: 237: break;
  6853                           
  6854                           ;i2c_slv.c: 236: default:
  6855                           
  6856                           ;i2c_slv.c: 233: break;
  6857  0053AE  0012               	return	
  6858  0053B0                     l1401:
  6859  0053B0  0100               	movlb	0	; () banked
  6860  0053B2  51D4               	movf	_SystemState& (0+255),w,b
  6861                           
  6862                           ; Switch size 1, requested type "space"
  6863                           ; Number of cases is 2, Range of values is 0 to 1
  6864                           ; switch strategies available:
  6865                           ; Name         Instructions Cycles
  6866                           ; simple_byte            7     4 (average)
  6867                           ;	Chosen strategy is simple_byte
  6868  0053B4  0A00               	xorlw	0	; case 0
  6869  0053B6  B4D8               	btfsc	status,2,c
  6870  0053B8  D7DB               	goto	l1402
  6871  0053BA  0A01               	xorlw	1	; case 1
  6872  0053BC  A4D8               	btfss	status,2,c
  6873  0053BE  0012               	return	
  6874  0053C0  D7F4               	goto	l1404
  6875  0053C2                     __end_of_I2cSlv_MainTask:
  6876                           	opt stack 0
  6877                           tosu	equ	0xFFF
  6878                           tosh	equ	0xFFE
  6879                           tosl	equ	0xFFD
  6880                           pclath	equ	0xFFA
  6881                           tblptru	equ	0xFF8
  6882                           tblptrh	equ	0xFF7
  6883                           tblptrl	equ	0xFF6
  6884                           tablat	equ	0xFF5
  6885                           prodh	equ	0xFF4
  6886                           prodl	equ	0xFF3
  6887                           intcon	equ	0xFF2
  6888                           intcon2	equ	0xFF1
  6889                           intcon3	equ	0xFF0
  6890                           postinc0	equ	0xFEE
  6891                           plusw0	equ	0xFEB
  6892                           wreg	equ	0xFE8
  6893                           postinc1	equ	0xFE6
  6894                           postdec1	equ	0xFE5
  6895                           fsr1h	equ	0xFE2
  6896                           fsr1l	equ	0xFE1
  6897                           indf2	equ	0xFDF
  6898                           postinc2	equ	0xFDE
  6899                           postdec2	equ	0xFDD
  6900                           plusw2	equ	0xFDB
  6901                           fsr2h	equ	0xFDA
  6902                           fsr2l	equ	0xFD9
  6903                           status	equ	0xFD8
  6904                           
  6905 ;; *************** function _Mdm_DrvMainFn *****************
  6906 ;; Defined at:
  6907 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  Options         1    wreg     unsigned char 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  Options         1    0[COMRAM] unsigned char 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;Total ram usage:        0 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; Hardware stack levels required when called:   13
  6928 ;; This function calls:
  6929 ;;		_MdmCntSm
  6930 ;; This function is called by:
  6931 ;;		_InitializeTasks
  6932 ;;		_ScheduleTasks
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text24
  6937  0062B6                     __ptext24:
  6938                           	opt stack 0
  6939  0062B6                     _Mdm_DrvMainFn:
  6940                           	opt stack 15
  6941                           
  6942                           ;mdm_drv.c: 307: MdmCntSm();
  6943                           
  6944                           ;incstack = 0
  6945  0062B6  ECD6  F021         	call	_MdmCntSm	;wreg free
  6946  0062BA  0012               	return		;funcret
  6947  0062BC                     __end_of_Mdm_DrvMainFn:
  6948                           	opt stack 0
  6949                           tosu	equ	0xFFF
  6950                           tosh	equ	0xFFE
  6951                           tosl	equ	0xFFD
  6952                           pclath	equ	0xFFA
  6953                           tblptru	equ	0xFF8
  6954                           tblptrh	equ	0xFF7
  6955                           tblptrl	equ	0xFF6
  6956                           tablat	equ	0xFF5
  6957                           prodh	equ	0xFF4
  6958                           prodl	equ	0xFF3
  6959                           intcon	equ	0xFF2
  6960                           intcon2	equ	0xFF1
  6961                           intcon3	equ	0xFF0
  6962                           postinc0	equ	0xFEE
  6963                           plusw0	equ	0xFEB
  6964                           wreg	equ	0xFE8
  6965                           postinc1	equ	0xFE6
  6966                           postdec1	equ	0xFE5
  6967                           fsr1h	equ	0xFE2
  6968                           fsr1l	equ	0xFE1
  6969                           indf2	equ	0xFDF
  6970                           postinc2	equ	0xFDE
  6971                           postdec2	equ	0xFDD
  6972                           plusw2	equ	0xFDB
  6973                           fsr2h	equ	0xFDA
  6974                           fsr2l	equ	0xFD9
  6975                           status	equ	0xFD8
  6976                           
  6977 ;; *************** function _Wdg_MainTask *****************
  6978 ;; Defined at:
  6979 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  Options         1    wreg     unsigned char 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  Options         1    0[COMRAM] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;Total ram usage:        0 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:   12
  7000 ;; This function calls:
  7001 ;;		_Mcu_ClearWdg
  7002 ;;		_Mcu_SetWdgSts
  7003 ;; This function is called by:
  7004 ;;		_InitializeTasks
  7005 ;;		_ScheduleTasks
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text25
  7010  005F48                     __ptext25:
  7011                           	opt stack 0
  7012  005F48                     _Wdg_MainTask:
  7013                           	opt stack 16
  7014                           
  7015                           ;wdg.c: 75: switch (SystemState)
  7016                           
  7017                           ;incstack = 0
  7018  005F48  D007               	goto	l2472
  7019  005F4A                     
  7020                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7021  005F4A  0E01               	movlw	1
  7022  005F4C  ECE4  F030         	call	_Mcu_SetWdgSts
  7023                           
  7024                           ;wdg.c: 81: break;
  7025  005F50  0012               	return	
  7026  005F52                     
  7027                           ;wdg.c: 86: Mcu_ClearWdg();
  7028  005F52  EC5E  F031         	call	_Mcu_ClearWdg	;wreg free
  7029                           
  7030                           ;wdg.c: 92: }
  7031                           
  7032                           ;wdg.c: 91: break;
  7033                           
  7034                           ;wdg.c: 90: default:
  7035                           
  7036                           ;wdg.c: 87: break;
  7037  005F56  0012               	return	
  7038  005F58                     l2472:
  7039  005F58  0100               	movlb	0	; () banked
  7040  005F5A  51D4               	movf	_SystemState& (0+255),w,b
  7041                           
  7042                           ; Switch size 1, requested type "space"
  7043                           ; Number of cases is 2, Range of values is 0 to 1
  7044                           ; switch strategies available:
  7045                           ; Name         Instructions Cycles
  7046                           ; simple_byte            7     4 (average)
  7047                           ;	Chosen strategy is simple_byte
  7048  005F5C  0A00               	xorlw	0	; case 0
  7049  005F5E  B4D8               	btfsc	status,2,c
  7050  005F60  D7F4               	goto	l2473
  7051  005F62  0A01               	xorlw	1	; case 1
  7052  005F64  A4D8               	btfss	status,2,c
  7053  005F66  0012               	return	
  7054  005F68  D7F4               	goto	l2475
  7055  005F6A                     __end_of_Wdg_MainTask:
  7056                           	opt stack 0
  7057                           tosu	equ	0xFFF
  7058                           tosh	equ	0xFFE
  7059                           tosl	equ	0xFFD
  7060                           pclath	equ	0xFFA
  7061                           tblptru	equ	0xFF8
  7062                           tblptrh	equ	0xFF7
  7063                           tblptrl	equ	0xFF6
  7064                           tablat	equ	0xFF5
  7065                           prodh	equ	0xFF4
  7066                           prodl	equ	0xFF3
  7067                           intcon	equ	0xFF2
  7068                           intcon2	equ	0xFF1
  7069                           intcon3	equ	0xFF0
  7070                           postinc0	equ	0xFEE
  7071                           plusw0	equ	0xFEB
  7072                           wreg	equ	0xFE8
  7073                           postinc1	equ	0xFE6
  7074                           postdec1	equ	0xFE5
  7075                           fsr1h	equ	0xFE2
  7076                           fsr1l	equ	0xFE1
  7077                           indf2	equ	0xFDF
  7078                           postinc2	equ	0xFDE
  7079                           postdec2	equ	0xFDD
  7080                           plusw2	equ	0xFDB
  7081                           fsr2h	equ	0xFDA
  7082                           fsr2l	equ	0xFD9
  7083                           status	equ	0xFD8
  7084                           
  7085 ;; *************** function _Mcu_SetWdgSts *****************
  7086 ;; Defined at:
  7087 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  WdgSts          1    wreg     unsigned char 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7104 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;Total ram usage:        1 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:   11
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_Wdg_MainTask
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text26
  7116  0061C8                     __ptext26:
  7117                           	opt stack 0
  7118  0061C8                     _Mcu_SetWdgSts:
  7119                           	opt stack 16
  7120                           
  7121                           ;incstack = 0
  7122                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7123  0061C8  0100               	movlb	0	; () banked
  7124  0061CA  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7125                           
  7126                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7127  0061CC  0100               	movlb	0	; () banked
  7128  0061CE  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7129  0061D0  D002               	bra	u13205
  7130  0061D2  90C0               	bcf	4032,0,c	;volatile
  7131  0061D4  D001               	bra	u13206
  7132  0061D6                     u13205:
  7133  0061D6  80C0               	bsf	4032,0,c	;volatile
  7134  0061D8                     u13206:
  7135  0061D8  0012               	return		;funcret
  7136  0061DA                     __end_of_Mcu_SetWdgSts:
  7137                           	opt stack 0
  7138                           tosu	equ	0xFFF
  7139                           tosh	equ	0xFFE
  7140                           tosl	equ	0xFFD
  7141                           pclath	equ	0xFFA
  7142                           tblptru	equ	0xFF8
  7143                           tblptrh	equ	0xFF7
  7144                           tblptrl	equ	0xFF6
  7145                           tablat	equ	0xFF5
  7146                           prodh	equ	0xFF4
  7147                           prodl	equ	0xFF3
  7148                           intcon	equ	0xFF2
  7149                           intcon2	equ	0xFF1
  7150                           intcon3	equ	0xFF0
  7151                           postinc0	equ	0xFEE
  7152                           plusw0	equ	0xFEB
  7153                           wreg	equ	0xFE8
  7154                           postinc1	equ	0xFE6
  7155                           postdec1	equ	0xFE5
  7156                           fsr1h	equ	0xFE2
  7157                           fsr1l	equ	0xFE1
  7158                           indf2	equ	0xFDF
  7159                           postinc2	equ	0xFDE
  7160                           postdec2	equ	0xFDD
  7161                           plusw2	equ	0xFDB
  7162                           fsr2h	equ	0xFDA
  7163                           fsr2l	equ	0xFD9
  7164                           status	equ	0xFD8
  7165                           
  7166 ;; *************** function _Mcu_ClearWdg *****************
  7167 ;; Defined at:
  7168 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;		None
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;		None
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1    wreg      void 
  7175 ;; Registers used:
  7176 ;;		None
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;Total ram usage:        0 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; Hardware stack levels required when called:   11
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_Wdg_MainTask
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text27
  7197  0062BC                     __ptext27:
  7198                           	opt stack 0
  7199  0062BC                     _Mcu_ClearWdg:
  7200                           	opt stack 16
  7201                           
  7202                           ;incstack = 0
  7203  0062BC  0004               	clrwdt		;# 
  7204  0062BE  0012               	return		;funcret
  7205  0062C0                     __end_of_Mcu_ClearWdg:
  7206                           	opt stack 0
  7207                           tosu	equ	0xFFF
  7208                           tosh	equ	0xFFE
  7209                           tosl	equ	0xFFD
  7210                           pclath	equ	0xFFA
  7211                           tblptru	equ	0xFF8
  7212                           tblptrh	equ	0xFF7
  7213                           tblptrl	equ	0xFF6
  7214                           tablat	equ	0xFF5
  7215                           prodh	equ	0xFF4
  7216                           prodl	equ	0xFF3
  7217                           intcon	equ	0xFF2
  7218                           intcon2	equ	0xFF1
  7219                           intcon3	equ	0xFF0
  7220                           postinc0	equ	0xFEE
  7221                           plusw0	equ	0xFEB
  7222                           wreg	equ	0xFE8
  7223                           postinc1	equ	0xFE6
  7224                           postdec1	equ	0xFE5
  7225                           fsr1h	equ	0xFE2
  7226                           fsr1l	equ	0xFE1
  7227                           indf2	equ	0xFDF
  7228                           postinc2	equ	0xFDE
  7229                           postdec2	equ	0xFDD
  7230                           plusw2	equ	0xFDB
  7231                           fsr2h	equ	0xFDA
  7232                           fsr2l	equ	0xFD9
  7233                           status	equ	0xFD8
  7234                           
  7235 ;; *************** function _USBDeviceTasks *****************
  7236 ;; Defined at:
  7237 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;  i               1   56[BANK0 ] unsigned char 
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      void 
  7244 ;; Registers used:
  7245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7255 ;;Total ram usage:        1 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:   19
  7258 ;; This function calls:
  7259 ;;		_USBCtrlEPAllowStatusStage
  7260 ;;		_USBCtrlEPService
  7261 ;;		_USBDeviceInit
  7262 ;;		_USBIncrement1msInternalTimers
  7263 ;;		_USBStallHandler
  7264 ;;		_USBSuspend
  7265 ;;		_USBWakeFromSuspend
  7266 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7267 ;; This function is called by:
  7268 ;;		_UsbDevice_MainTask
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text28
  7273  001BAA                     __ptext28:
  7274                           	opt stack 0
  7275  001BAA                     _USBDeviceTasks:
  7276                           	opt stack 8
  7277                           
  7278                           ;usb_device.c: 562: }
  7279                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7280                           
  7281                           ; BSR set to: 0
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;usb_device.c: 561: return;
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7288                           
  7289                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7290                           
  7291                           ;usb_device.c: 529: UIE = 0;
  7292                           
  7293                           ;usb_device.c: 524: {
  7294                           ;usb_device.c: 526: UCON = 0;
  7295                           
  7296                           ;usb_device.c: 497: uint8_t i;
  7297                           ;usb_device.c: 523: if (1 != 1)
  7298                           
  7299                           ;incstack = 0
  7300  001BAA  0100               	movlb	0	; () banked
  7301  001BAC  51CD               	movf	_USBDeviceState& (0+255),w,b
  7302  001BAE  A4D8               	btfss	status,2,c
  7303  001BB0  D012               	goto	l1612
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;usb_device.c: 585: {
  7307                           ;usb_device.c: 587: UCON = 0;
  7308  001BB2  0E00               	movlw	0
  7309  001BB4  6E65               	movwf	3941,c	;volatile
  7310                           
  7311                           ;usb_device.c: 590: UIE = 0;
  7312  001BB6  0E00               	movlw	0
  7313  001BB8  010F               	movlb	15	; () banked
  7314  001BBA  6F36               	movwf	54,b	;volatile
  7315                           
  7316                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7317  001BBC  0E16               	movlw	22
  7318  001BBE  6F39               	movwf	57,b	;volatile
  7319  001BC0  0E9F               	movlw	159
  7320  001BC2  6F37               	movwf	55,b	;volatile
  7321  001BC4  0E7B               	movlw	123
  7322  001BC6  6F36               	movwf	54,b	;volatile
  7323                           
  7324                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7325  001BC8  D001               	goto	l1613
  7326  001BCA                     l1614:
  7327  001BCA  8665               	bsf	3941,3,c	;volatile
  7328  001BCC                     l1613:
  7329  001BCC  A665               	btfss	3941,3,c	;volatile
  7330  001BCE  D7FD               	goto	l1614
  7331                           
  7332                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7333  001BD0  0E01               	movlw	1
  7334  001BD2  0100               	movlb	0	; () banked
  7335  001BD4  6FCD               	movwf	_USBDeviceState& (0+255),b
  7336  001BD6                     l1612:
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;usb_device.c: 605: }
  7340                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7341                           
  7342                           ; BSR set to: 0
  7343  001BD6  05CD               	decf	_USBDeviceState& (0+255),w,b
  7344  001BD8  B4D8               	btfsc	status,2,c
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;usb_device.c: 609: {
  7348                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7349  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7350  001BDC  D00A               	goto	l1617
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;usb_device.c: 620: {
  7354                           ;usb_device.c: 626: {UIR = 0;};
  7355  001BDE  0E00               	movlw	0
  7356  001BE0  6E62               	movwf	3938,c	;volatile
  7357                           
  7358                           ;usb_device.c: 630: UIE=0;
  7359  001BE2  0E00               	movlw	0
  7360  001BE4  010F               	movlb	15	; () banked
  7361  001BE6  6F36               	movwf	54,b	;volatile
  7362                           
  7363                           ; BSR set to: 15
  7364                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7365  001BE8  8136               	bsf	54,0,b	;volatile
  7366                           
  7367                           ; BSR set to: 15
  7368                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7369  001BEA  8936               	bsf	54,4,b	;volatile
  7370                           
  7371                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7372  001BEC  0E02               	movlw	2
  7373  001BEE  0100               	movlb	0	; () banked
  7374  001BF0  6FCD               	movwf	_USBDeviceState& (0+255),b
  7375  001BF2                     l1617:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;usb_device.c: 635: }
  7379                           ;usb_device.c: 636: }
  7380                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7381                           
  7382                           ; BSR set to: 0
  7383                           
  7384                           ; BSR set to: 0
  7385  001BF2  A462               	btfss	3938,2,c	;volatile
  7386  001BF4  D006               	goto	l1618
  7387                           
  7388                           ; BSR set to: 0
  7389  001BF6  010F               	movlb	15	; () banked
  7390  001BF8  A536               	btfss	54,2,b	;volatile
  7391  001BFA  D003               	goto	l1618
  7392                           
  7393                           ; BSR set to: 15
  7394                           ;usb_device.c: 653: {
  7395                           ;usb_device.c: 654: (UIR &= 0xFB);
  7396  001BFC  9462               	bcf	3938,2,c	;volatile
  7397                           
  7398                           ; BSR set to: 15
  7399                           ;usb_device.c: 658: USBWakeFromSuspend();
  7400  001BFE  EC8E  F02D         	call	_USBWakeFromSuspend	;wreg free
  7401  001C02                     l1618:
  7402                           
  7403                           ;usb_device.c: 660: }
  7404                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7405  001C02  A265               	btfss	3941,1,c	;volatile
  7406  001C04  D002               	goto	l1619
  7407                           
  7408                           ;usb_device.c: 666: {
  7409                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7410  001C06  98A1               	bcf	4001,4,c	;volatile
  7411                           
  7412                           ;usb_device.c: 668: return;
  7413  001C08  0012               	return	
  7414  001C0A                     l1619:
  7415                           
  7416                           ;usb_device.c: 669: }
  7417                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7418  001C0A  A062               	btfss	3938,0,c	;volatile
  7419  001C0C  D009               	goto	l1620
  7420  001C0E  010F               	movlb	15	; () banked
  7421  001C10  A136               	btfss	54,0,b	;volatile
  7422  001C12  D006               	goto	l1620
  7423                           
  7424                           ; BSR set to: 15
  7425                           ;usb_device.c: 682: {
  7426                           ;usb_device.c: 683: USBDeviceInit();
  7427  001C14  ECC3  F010         	call	_USBDeviceInit	;wreg free
  7428                           
  7429                           ;usb_device.c: 687: ;
  7430                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7431  001C18  0E04               	movlw	4
  7432  001C1A  0100               	movlb	0	; () banked
  7433  001C1C  6FCD               	movwf	_USBDeviceState& (0+255),b
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;usb_device.c: 699: (UIR &= 0xFE);
  7437  001C1E  9062               	bcf	3938,0,c	;volatile
  7438  001C20                     l1620:
  7439                           
  7440                           ;usb_device.c: 700: }
  7441                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7442                           
  7443                           ; BSR set to: 0
  7444  001C20  A862               	btfss	3938,4,c	;volatile
  7445  001C22  D004               	goto	l1621
  7446  001C24  010F               	movlb	15	; () banked
  7447  001C26  B936               	btfsc	54,4,b	;volatile
  7448                           
  7449                           ; BSR set to: 15
  7450                           ;usb_device.c: 706: {
  7451                           ;usb_device.c: 712: USBSuspend();
  7452  001C28  EC35  F02E         	call	_USBSuspend	;wreg free
  7453  001C2C                     l1621:
  7454                           
  7455                           ;usb_device.c: 714: }
  7456                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7457  001C2C  AC62               	btfss	3938,6,c	;volatile
  7458  001C2E  D01D               	goto	l1625
  7459                           
  7460                           ;usb_device.c: 727: {
  7461                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7462  001C30  010F               	movlb	15	; () banked
  7463  001C32  AD36               	btfss	54,6,b	;volatile
  7464  001C34  D00F               	goto	l1623
  7465                           
  7466                           ; BSR set to: 15
  7467                           ;usb_device.c: 730: {
  7468                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7469  001C36  0E00               	movlw	0
  7470  001C38  0100               	movlb	0	; () banked
  7471  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7472  001C3C  0E73               	movlw	115
  7473  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7474  001C40  0E00               	movlw	0
  7475  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7476  001C44  0E00               	movlw	0
  7477  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7478  001C48  0E00               	movlw	0
  7479  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7480  001C4C  0E01               	movlw	1
  7481  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7482  001C50  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7483  001C54                     l1623:
  7484                           
  7485                           ;usb_device.c: 732: }
  7486                           ;usb_device.c: 733: (UIR &= 0xBF);
  7487  001C54  9C62               	bcf	3938,6,c	;volatile
  7488                           
  7489                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7490  001C56  ECB5  F02F         	call	_USBIncrement1msInternalTimers	;wreg free
  7491                           
  7492                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7493  001C5A  0100               	movlb	0	; () banked
  7494  001C5C  51C9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7495  001C5E  A4D8               	btfss	status,2,c
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;usb_device.c: 754: {
  7499                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7500  001C60  07C9               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;usb_device.c: 756: }
  7504                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7505                           
  7506                           ; BSR set to: 0
  7507  001C62  51C9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7508  001C64  B4D8               	btfsc	status,2,c
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;usb_device.c: 763: {
  7512                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7513  001C66  EC61  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7514  001C6A                     l1625:
  7515                           
  7516                           ;usb_device.c: 765: }
  7517                           ;usb_device.c: 767: }
  7518                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7519  001C6A  AA62               	btfss	3938,5,c	;volatile
  7520  001C6C  D004               	goto	l1626
  7521  001C6E  010F               	movlb	15	; () banked
  7522  001C70  BB36               	btfsc	54,5,b	;volatile
  7523                           
  7524                           ; BSR set to: 15
  7525                           ;usb_device.c: 770: {
  7526                           ;usb_device.c: 771: USBStallHandler();
  7527  001C72  EC08  F02C         	call	_USBStallHandler	;wreg free
  7528  001C76                     l1626:
  7529                           
  7530                           ;usb_device.c: 772: }
  7531                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7532  001C76  A262               	btfss	3938,1,c	;volatile
  7533  001C78  D013               	goto	l1627
  7534  001C7A  010F               	movlb	15	; () banked
  7535  001C7C  A336               	btfss	54,1,b	;volatile
  7536  001C7E  D010               	goto	l1627
  7537                           
  7538                           ; BSR set to: 15
  7539                           ;usb_device.c: 775: {
  7540                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7541  001C80  0E7F               	movlw	127
  7542  001C82  0100               	movlb	0	; () banked
  7543  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7544  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7545  001C88  0E00               	movlw	0
  7546  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7547  001C8C  0E00               	movlw	0
  7548  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7549  001C90  0E00               	movlw	0
  7550  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7551  001C94  0E01               	movlw	1
  7552  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7553  001C98  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7554                           
  7555                           ;usb_device.c: 777: {UEIR = 0;};
  7556  001C9C  0E00               	movlw	0
  7557  001C9E  6E63               	movwf	3939,c	;volatile
  7558  001CA0                     l1627:
  7559                           
  7560                           ;usb_device.c: 785: }
  7561                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7562  001CA0  0E04               	movlw	4
  7563  001CA2  0100               	movlb	0	; () banked
  7564  001CA4  61CD               	cpfslt	_USBDeviceState& (0+255),b
  7565  001CA6  D002               	goto	l1628
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;usb_device.c: 793: {
  7569                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7570  001CA8  98A1               	bcf	4001,4,c	;volatile
  7571                           
  7572                           ;usb_device.c: 795: return;
  7573  001CAA  0012               	return	
  7574  001CAC                     l1628:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;usb_device.c: 796: }
  7578                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7579  001CAC  010F               	movlb	15	; () banked
  7580  001CAE  A736               	btfss	54,3,b	;volatile
  7581  001CB0  D03E               	goto	u14190
  7582                           
  7583                           ; BSR set to: 15
  7584                           ;usb_device.c: 802: {
  7585                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7586  001CB2  0E00               	movlw	0
  7587  001CB4  0100               	movlb	0	; () banked
  7588  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7589  001CB8                     l14605:
  7590                           
  7591                           ; BSR set to: 0
  7592  001CB8  0E03               	movlw	3
  7593  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7594  001CBC  D001               	goto	l1630
  7595  001CBE  D037               	goto	u14190
  7596  001CC0                     l1630:
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;usb_device.c: 804: {
  7600                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7601  001CC0  A662               	btfss	3938,3,c	;volatile
  7602  001CC2  D035               	goto	u14190
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;usb_device.c: 806: {
  7606                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7607  001CC4  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7611  001CC8  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7612  001CCA  32E8               	rrcf	wreg,f,c
  7613  001CCC  32E8               	rrcf	wreg,f,c
  7614  001CCE  0B0F               	andlw	15
  7615  001CD0  6FCA               	movwf	_endpoint_number& (0+255),b
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;usb_device.c: 811: (UIR &= 0xF7);
  7619  001CD2  9662               	bcf	3938,3,c	;volatile
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7623  001CD4  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7624  001CD6  D007               	goto	l1633
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;usb_device.c: 817: {
  7628                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7629  001CD8  51CA               	movf	_endpoint_number& (0+255),w,b
  7630  001CDA  0D01               	mullw	1
  7631  001CDC  0ECE               	movlw	low _ep_data_out
  7632  001CDE  24F3               	addwf	prodl,w,c
  7633  001CE0  6ED9               	movwf	fsr2l,c
  7634  001CE2  0E02               	movlw	high _ep_data_out
  7635  001CE4  D007               	goto	L3
  7636  001CE6                     l1633:
  7637                           
  7638                           ;usb_device.c: 820: else
  7639                           ;usb_device.c: 821: {
  7640                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7641                           
  7642                           ; BSR set to: 2
  7643  001CE6  0100               	movlb	0	; () banked
  7644  001CE8  51CA               	movf	_endpoint_number& (0+255),w,b
  7645  001CEA  0D01               	mullw	1
  7646  001CEC  0ED1               	movlw	low _ep_data_in
  7647  001CEE  24F3               	addwf	prodl,w,c
  7648  001CF0  6ED9               	movwf	fsr2l,c
  7649  001CF2  0E02               	movlw	high _ep_data_in
  7650  001CF4                     L3:
  7651  001CF4  20F4               	addwfc	prodh,w,c
  7652  001CF6  6EDA               	movwf	fsr2h,c
  7653  001CF8  0102               	movlb	2	; () banked
  7654  001CFA  70DF               	btg	indf2,0,c
  7655                           
  7656                           ; BSR set to: 2
  7657                           ;usb_device.c: 823: }
  7658                           ;usb_device.c: 828: if(endpoint_number == 0)
  7659                           
  7660                           ; BSR set to: 2
  7661  001CFC  0100               	movlb	0	; () banked
  7662  001CFE  51CA               	movf	_endpoint_number& (0+255),w,b
  7663  001D00  A4D8               	btfss	status,2,c
  7664  001D02  D003               	goto	l1635
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;usb_device.c: 829: {
  7668                           ;usb_device.c: 830: USBCtrlEPService();
  7669  001D04  EC9F  F024         	call	_USBCtrlEPService	;wreg free
  7670                           
  7671                           ;usb_device.c: 831: }
  7672  001D08  D00F               	goto	l1637
  7673  001D0A                     l1635:
  7674                           
  7675                           ;usb_device.c: 832: else
  7676                           ;usb_device.c: 833: {
  7677                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7678  001D0A  0E00               	movlw	0
  7679  001D0C  0100               	movlb	0	; () banked
  7680  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7681  001D10  0E72               	movlw	114
  7682  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7683  001D14  0ED5               	movlw	low _USTATcopy
  7684  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7685  001D18  0E00               	movlw	high _USTATcopy
  7686  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7687  001D1C  0E00               	movlw	0
  7688  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7689  001D20  0E00               	movlw	0
  7690  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7691  001D24  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7692  001D28                     l1637:
  7693  001D28  0100               	movlb	0	; () banked
  7694  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7695  001D2C  D7C5               	goto	l14605
  7696  001D2E                     u14190:
  7697                           
  7698                           ;usb_device.c: 840: }
  7699                           ;usb_device.c: 841: }
  7700                           ;usb_device.c: 842: }
  7701                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7702                           
  7703                           ; BSR set to: 0
  7704  001D2E  98A1               	bcf	4001,4,c	;volatile
  7705  001D30  0012               	return		;funcret
  7706  001D32                     __end_of_USBDeviceTasks:
  7707                           	opt stack 0
  7708                           tosu	equ	0xFFF
  7709                           tosh	equ	0xFFE
  7710                           tosl	equ	0xFFD
  7711                           pclath	equ	0xFFA
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           prodh	equ	0xFF4
  7717                           prodl	equ	0xFF3
  7718                           intcon	equ	0xFF2
  7719                           intcon2	equ	0xFF1
  7720                           intcon3	equ	0xFF0
  7721                           postinc0	equ	0xFEE
  7722                           plusw0	equ	0xFEB
  7723                           wreg	equ	0xFE8
  7724                           postinc1	equ	0xFE6
  7725                           postdec1	equ	0xFE5
  7726                           fsr1h	equ	0xFE2
  7727                           fsr1l	equ	0xFE1
  7728                           indf2	equ	0xFDF
  7729                           postinc2	equ	0xFDE
  7730                           postdec2	equ	0xFDD
  7731                           plusw2	equ	0xFDB
  7732                           fsr2h	equ	0xFDA
  7733                           fsr2l	equ	0xFD9
  7734                           status	equ	0xFD8
  7735                           
  7736 ;; *************** function _USBWakeFromSuspend *****************
  7737 ;; Defined at:
  7738 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;		None
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;		None
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      void 
  7745 ;; Registers used:
  7746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;Total ram usage:        0 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:   15
  7759 ;; This function calls:
  7760 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7761 ;; This function is called by:
  7762 ;;		_USBDeviceTasks
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text29
  7767  005B1C                     __ptext29:
  7768                           	opt stack 0
  7769  005B1C                     _USBWakeFromSuspend:
  7770                           	opt stack 11
  7771                           
  7772                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7773                           
  7774                           ;incstack = 0
  7775  005B1C  0E00               	movlw	0
  7776  005B1E  0101               	movlb	1	; () banked
  7777  005B20  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7778                           
  7779                           ; BSR set to: 1
  7780                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7781  005B22  0E00               	movlw	0
  7782  005B24  0100               	movlb	0	; () banked
  7783  005B26  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7784  005B28  0E74               	movlw	116
  7785  005B2A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7786  005B2C  0E00               	movlw	0
  7787  005B2E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7788  005B30  0E00               	movlw	0
  7789  005B32  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7790  005B34  0E00               	movlw	0
  7791  005B36  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7792  005B38  0E00               	movlw	0
  7793  005B3A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7794  005B3C  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7795                           
  7796                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7797  005B40  9265               	bcf	3941,1,c	;volatile
  7798                           
  7799                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7800  005B42  010F               	movlb	15	; () banked
  7801  005B44  9536               	bcf	54,2,b	;volatile
  7802                           
  7803                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7804  005B46  D001               	goto	l1765
  7805  005B48                     
  7806                           ;usb_device.c: 2361: {
  7807                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7808                           
  7809                           ; BSR set to: 15
  7810  005B48  9462               	bcf	3938,2,c	;volatile
  7811  005B4A                     l1765:
  7812  005B4A  B462               	btfsc	3938,2,c	;volatile
  7813  005B4C  D7FD               	goto	l1766
  7814                           
  7815                           ;usb_device.c: 2363: }
  7816                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7817  005B4E  0E00               	movlw	0
  7818  005B50  0101               	movlb	1	; () banked
  7819  005B52  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7820                           
  7821                           ; BSR set to: 1
  7822  005B54  0012               	return		;funcret
  7823  005B56                     __end_of_USBWakeFromSuspend:
  7824                           	opt stack 0
  7825                           tosu	equ	0xFFF
  7826                           tosh	equ	0xFFE
  7827                           tosl	equ	0xFFD
  7828                           pclath	equ	0xFFA
  7829                           tblptru	equ	0xFF8
  7830                           tblptrh	equ	0xFF7
  7831                           tblptrl	equ	0xFF6
  7832                           tablat	equ	0xFF5
  7833                           prodh	equ	0xFF4
  7834                           prodl	equ	0xFF3
  7835                           intcon	equ	0xFF2
  7836                           intcon2	equ	0xFF1
  7837                           intcon3	equ	0xFF0
  7838                           postinc0	equ	0xFEE
  7839                           plusw0	equ	0xFEB
  7840                           wreg	equ	0xFE8
  7841                           postinc1	equ	0xFE6
  7842                           postdec1	equ	0xFE5
  7843                           fsr1h	equ	0xFE2
  7844                           fsr1l	equ	0xFE1
  7845                           indf2	equ	0xFDF
  7846                           postinc2	equ	0xFDE
  7847                           postdec2	equ	0xFDD
  7848                           plusw2	equ	0xFDB
  7849                           fsr2h	equ	0xFDA
  7850                           fsr2l	equ	0xFD9
  7851                           status	equ	0xFD8
  7852                           
  7853 ;; *************** function _USBSuspend *****************
  7854 ;; Defined at:
  7855 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;		None
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      void 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:   15
  7876 ;; This function calls:
  7877 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7878 ;; This function is called by:
  7879 ;;		_USBDeviceTasks
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text30
  7884  005C6A                     __ptext30:
  7885                           	opt stack 0
  7886  005C6A                     _USBSuspend:
  7887                           	opt stack 11
  7888                           
  7889                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7890                           
  7891                           ; BSR set to: 1
  7892                           ;incstack = 0
  7893  005C6A  010F               	movlb	15	; () banked
  7894  005C6C  8536               	bsf	54,2,b	;volatile
  7895                           
  7896                           ; BSR set to: 15
  7897                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7898  005C6E  9862               	bcf	3938,4,c	;volatile
  7899                           
  7900                           ; BSR set to: 15
  7901                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7902  005C70  8265               	bsf	3941,1,c	;volatile
  7903                           
  7904                           ; BSR set to: 15
  7905                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7906  005C72  0E01               	movlw	1
  7907  005C74  0101               	movlb	1	; () banked
  7908  005C76  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7909                           
  7910                           ; BSR set to: 1
  7911                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7912  005C78  0E00               	movlw	0
  7913  005C7A  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7914                           
  7915                           ; BSR set to: 1
  7916                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7917  005C7C  0E00               	movlw	0
  7918  005C7E  0100               	movlb	0	; () banked
  7919  005C80  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7920  005C82  0E75               	movlw	117
  7921  005C84  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7922  005C86  0E00               	movlw	0
  7923  005C88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7924  005C8A  0E00               	movlw	0
  7925  005C8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7926  005C8E  0E00               	movlw	0
  7927  005C90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7928  005C92  0E00               	movlw	0
  7929  005C94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7930  005C96  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7931  005C9A  0012               	return		;funcret
  7932  005C9C                     __end_of_USBSuspend:
  7933                           	opt stack 0
  7934                           tosu	equ	0xFFF
  7935                           tosh	equ	0xFFE
  7936                           tosl	equ	0xFFD
  7937                           pclath	equ	0xFFA
  7938                           tblptru	equ	0xFF8
  7939                           tblptrh	equ	0xFF7
  7940                           tblptrl	equ	0xFF6
  7941                           tablat	equ	0xFF5
  7942                           prodh	equ	0xFF4
  7943                           prodl	equ	0xFF3
  7944                           intcon	equ	0xFF2
  7945                           intcon2	equ	0xFF1
  7946                           intcon3	equ	0xFF0
  7947                           postinc0	equ	0xFEE
  7948                           plusw0	equ	0xFEB
  7949                           wreg	equ	0xFE8
  7950                           postinc1	equ	0xFE6
  7951                           postdec1	equ	0xFE5
  7952                           fsr1h	equ	0xFE2
  7953                           fsr1l	equ	0xFE1
  7954                           indf2	equ	0xFDF
  7955                           postinc2	equ	0xFDE
  7956                           postdec2	equ	0xFDD
  7957                           plusw2	equ	0xFDB
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function _USBStallHandler *****************
  7963 ;; Defined at:
  7964 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;		None
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;		None
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  1    wreg      void 
  7971 ;; Registers used:
  7972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7981 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7982 ;;Total ram usage:        1 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:   11
  7985 ;; This function calls:
  7986 ;;		Nothing
  7987 ;; This function is called by:
  7988 ;;		_USBDeviceTasks
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text31
  7993  005810                     __ptext31:
  7994                           	opt stack 0
  7995  005810                     _USBStallHandler:
  7996                           	opt stack 15
  7997                           
  7998                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7999                           
  8000                           ;incstack = 0
  8001  005810  010F               	movlb	15	; () banked
  8002  005812  A126               	btfss	38,0,b	;volatile
  8003  005814  D01D               	goto	l1757
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;usb_device.c: 2233: {
  8007                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8008  005816  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8009  00581A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8010  00581E  0E80               	movlw	128
  8011  005820  18DE               	xorwf	postinc2,w,c
  8012  005822  A4D8               	btfss	status,2,c
  8013  005824  D014               	goto	l1758
  8014                           
  8015                           ; BSR set to: 15
  8016  005826  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8017  00582A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8018  00582E  0E84               	movlw	132
  8019  005830  18DE               	xorwf	postinc2,w,c
  8020  005832  A4D8               	btfss	status,2,c
  8021  005834  D00C               	goto	l1758
  8022                           
  8023                           ; BSR set to: 15
  8024                           ;usb_device.c: 2236: {
  8025                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8026  005836  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8027  00583A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8028  00583E  0E0C               	movlw	12
  8029  005840  6EDF               	movwf	indf2,c
  8030                           
  8031                           ; BSR set to: 15
  8032                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8033  005842  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8034  005846  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8035  00584A  0E00               	movlw	0
  8036  00584C  8EDB               	bsf	plusw2,7,c
  8037  00584E                     l1758:
  8038                           
  8039                           ; BSR set to: 15
  8040                           ;usb_device.c: 2240: }
  8041                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8042                           
  8043                           ; BSR set to: 15
  8044  00584E  9126               	bcf	38,0,b	;volatile
  8045  005850                     l1757:
  8046                           
  8047                           ; BSR set to: 15
  8048                           ;usb_device.c: 2242: }
  8049                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8050  005850  9A62               	bcf	3938,5,c	;volatile
  8051                           
  8052                           ; BSR set to: 15
  8053  005852  0012               	return		;funcret
  8054  005854                     __end_of_USBStallHandler:
  8055                           	opt stack 0
  8056                           tosu	equ	0xFFF
  8057                           tosh	equ	0xFFE
  8058                           tosl	equ	0xFFD
  8059                           pclath	equ	0xFFA
  8060                           tblptru	equ	0xFF8
  8061                           tblptrh	equ	0xFF7
  8062                           tblptrl	equ	0xFF6
  8063                           tablat	equ	0xFF5
  8064                           prodh	equ	0xFF4
  8065                           prodl	equ	0xFF3
  8066                           intcon	equ	0xFF2
  8067                           intcon2	equ	0xFF1
  8068                           intcon3	equ	0xFF0
  8069                           postinc0	equ	0xFEE
  8070                           plusw0	equ	0xFEB
  8071                           wreg	equ	0xFE8
  8072                           postinc1	equ	0xFE6
  8073                           postdec1	equ	0xFE5
  8074                           fsr1h	equ	0xFE2
  8075                           fsr1l	equ	0xFE1
  8076                           indf2	equ	0xFDF
  8077                           postinc2	equ	0xFDE
  8078                           postdec2	equ	0xFDD
  8079                           plusw2	equ	0xFDB
  8080                           fsr2h	equ	0xFDA
  8081                           fsr2l	equ	0xFD9
  8082                           status	equ	0xFD8
  8083                           
  8084 ;; *************** function _USBIncrement1msInternalTimers *****************
  8085 ;; Defined at:
  8086 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;		None
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;Total ram usage:        0 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:   11
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_USBDeviceTasks
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text32
  8115  005F6A                     __ptext32:
  8116                           	opt stack 0
  8117  005F6A                     _USBIncrement1msInternalTimers:
  8118                           	opt stack 15
  8119                           
  8120                           ;usb_device.c: 3050: USB1msTickCount++;
  8121                           
  8122                           ; BSR set to: 15
  8123                           ;incstack = 0
  8124  005F6A  0E01               	movlw	1
  8125  005F6C  0103               	movlb	3	; () banked
  8126  005F6E  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8127  005F70  0E00               	movlw	0
  8128  005F72  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8129  005F74  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8130  005F76  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8131                           
  8132                           ; BSR set to: 3
  8133                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8134  005F78  0101               	movlb	1	; () banked
  8135  005F7A  51E5               	movf	_USBBusIsSuspended& (0+255),w,b
  8136  005F7C  A4D8               	btfss	status,2,c
  8137  005F7E  0012               	return	
  8138                           
  8139                           ; BSR set to: 1
  8140                           ;usb_device.c: 3052: {
  8141                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8142  005F80  2BE3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8143                           
  8144                           ; BSR set to: 1
  8145                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8146  005F82  51E3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8147  005F84  A4D8               	btfss	status,2,c
  8148  005F86  0012               	return	
  8149                           
  8150                           ; BSR set to: 1
  8151                           ;usb_device.c: 3056: {
  8152                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8153  005F88  69E3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8154                           
  8155                           ; BSR set to: 1
  8156  005F8A  0012               	return	
  8157  005F8C                     __end_of_USBIncrement1msInternalTimers:
  8158                           	opt stack 0
  8159                           tosu	equ	0xFFF
  8160                           tosh	equ	0xFFE
  8161                           tosl	equ	0xFFD
  8162                           pclath	equ	0xFFA
  8163                           tblptru	equ	0xFF8
  8164                           tblptrh	equ	0xFF7
  8165                           tblptrl	equ	0xFF6
  8166                           tablat	equ	0xFF5
  8167                           prodh	equ	0xFF4
  8168                           prodl	equ	0xFF3
  8169                           intcon	equ	0xFF2
  8170                           intcon2	equ	0xFF1
  8171                           intcon3	equ	0xFF0
  8172                           postinc0	equ	0xFEE
  8173                           plusw0	equ	0xFEB
  8174                           wreg	equ	0xFE8
  8175                           postinc1	equ	0xFE6
  8176                           postdec1	equ	0xFE5
  8177                           fsr1h	equ	0xFE2
  8178                           fsr1l	equ	0xFE1
  8179                           indf2	equ	0xFDF
  8180                           postinc2	equ	0xFDE
  8181                           postdec2	equ	0xFDD
  8182                           plusw2	equ	0xFDB
  8183                           fsr2h	equ	0xFDA
  8184                           fsr2l	equ	0xFD9
  8185                           status	equ	0xFD8
  8186                           
  8187 ;; *************** function _USBDeviceInit *****************
  8188 ;; Defined at:
  8189 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;		None
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  i               1   37[BANK0 ] unsigned char 
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8204 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8207 ;;Total ram usage:        1 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; Hardware stack levels required when called:   12
  8210 ;; This function calls:
  8211 ;;		_memset
  8212 ;; This function is called by:
  8213 ;;		_USBDeviceTasks
  8214 ;;		_UsbDevice_MainTask
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217                           
  8218                           	psect	text33
  8219  002186                     __ptext33:
  8220                           	opt stack 0
  8221  002186                     _USBDeviceInit:
  8222                           	opt stack 14
  8223                           
  8224                           ;usb_device.c: 297: uint8_t i;
  8225                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8226                           
  8227                           ; BSR set to: 1
  8228                           ;incstack = 0
  8229  002186  98A0               	bcf	4000,4,c	;volatile
  8230                           
  8231                           ;usb_device.c: 303: ;
  8232                           ;usb_device.c: 306: {UEIR = 0;};
  8233  002188  0E00               	movlw	0
  8234  00218A  6E63               	movwf	3939,c	;volatile
  8235                           
  8236                           ;usb_device.c: 309: {UIR = 0;};
  8237  00218C  0E00               	movlw	0
  8238  00218E  6E62               	movwf	3938,c	;volatile
  8239                           
  8240                           ;usb_device.c: 312: UEP0 = 0;
  8241  002190  0E00               	movlw	0
  8242  002192  010F               	movlb	15	; () banked
  8243  002194  6F26               	movwf	38,b	;volatile
  8244                           
  8245                           ; BSR set to: 15
  8246                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8247  002196  0E27               	movlw	39
  8248  002198  0100               	movlb	0	; () banked
  8249  00219A  6F7D               	movwf	memset@p1& (0+255),b
  8250  00219C  0E0F               	movlw	15
  8251  00219E  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8252  0021A0  0E00               	movlw	0
  8253  0021A2  6F80               	movwf	(memset@c+1)& (0+255),b
  8254  0021A4  0E00               	movlw	0
  8255  0021A6  6F7F               	movwf	memset@c& (0+255),b
  8256  0021A8  0E00               	movlw	0
  8257  0021AA  6F82               	movwf	(memset@n+1)& (0+255),b
  8258  0021AC  0E02               	movlw	2
  8259  0021AE  6F81               	movwf	memset@n& (0+255),b
  8260  0021B0  EC7F  F02E         	call	_memset	;wreg free
  8261                           
  8262                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8263  0021B4  0E16               	movlw	22
  8264  0021B6  010F               	movlb	15	; () banked
  8265  0021B8  6F39               	movwf	57,b	;volatile
  8266                           
  8267                           ; BSR set to: 15
  8268  0021BA  0E9F               	movlw	159
  8269  0021BC  6F37               	movwf	55,b	;volatile
  8270                           
  8271                           ; BSR set to: 15
  8272  0021BE  0E7B               	movlw	123
  8273  0021C0  6F36               	movwf	54,b	;volatile
  8274                           
  8275                           ; BSR set to: 15
  8276                           ;usb_device.c: 319: ;
  8277                           ;usb_device.c: 322: ;
  8278                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8279  0021C2  0E00               	movlw	0
  8280  0021C4  0100               	movlb	0	; () banked
  8281  0021C6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8282  0021C8                     l13423:
  8283                           
  8284                           ; BSR set to: 0
  8285  0021C8  0E0B               	movlw	11
  8286  0021CA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8287  0021CC  D001               	goto	l1601
  8288  0021CE  D00E               	goto	u12510
  8289  0021D0                     l1601:
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;usb_device.c: 326: {
  8293                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8294                           
  8295                           ; BSR set to: 0
  8296  0021D0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8297  0021D2  0D04               	mullw	4
  8298  0021D4  0E00               	movlw	0
  8299  0021D6  24F3               	addwf	prodl,w,c
  8300  0021D8  6ED9               	movwf	fsr2l,c
  8301  0021DA  0E04               	movlw	4
  8302  0021DC  20F4               	addwfc	prodh,w,c
  8303  0021DE  6EDA               	movwf	fsr2h,c
  8304  0021E0  6ADE               	clrf	postinc2,c
  8305  0021E2  6ADE               	clrf	postinc2,c
  8306  0021E4  6ADE               	clrf	postinc2,c
  8307  0021E6  6ADD               	clrf	postdec2,c
  8308                           
  8309                           ; BSR set to: 0
  8310  0021E8  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8311  0021EA  D7EE               	goto	l13423
  8312  0021EC                     u12510:
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;usb_device.c: 328: }
  8316                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8317  0021EC  8C65               	bsf	3941,6,c	;volatile
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;usb_device.c: 334: UADDR = 0x00;
  8321  0021EE  0E00               	movlw	0
  8322  0021F0  010F               	movlb	15	; () banked
  8323  0021F2  6F38               	movwf	56,b	;volatile
  8324                           
  8325                           ; BSR set to: 15
  8326                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8327  0021F4  9865               	bcf	3941,4,c	;volatile
  8328                           
  8329                           ; BSR set to: 15
  8330                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8331  0021F6  9C65               	bcf	3941,6,c	;volatile
  8332  0021F8                     
  8333                           ;usb_device.c: 344: {
  8334                           ;usb_device.c: 345: (UIR &= 0xF7);
  8335                           
  8336                           ; BSR set to: 15
  8337  0021F8  9662               	bcf	3938,3,c	;volatile
  8338                           
  8339                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8340  0021FA  0E00               	movlw	0
  8341  0021FC  0100               	movlb	0	; () banked
  8342  0021FE  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8346  002200  0E00               	movlw	0
  8347  002202  0101               	movlb	1	; () banked
  8348  002204  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8349                           
  8350                           ; BSR set to: 1
  8351                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8352  002206  0E00               	movlw	0
  8353  002208  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8354  00220A  0E00               	movlw	0
  8355  00220C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8356                           
  8357                           ; BSR set to: 1
  8358                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8359  00220E  B662               	btfsc	3938,3,c	;volatile
  8360  002210  D7F3               	goto	l1603
  8361                           
  8362                           ; BSR set to: 1
  8363                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8364                           
  8365                           ; BSR set to: 1
  8366  002212  0E01               	movlw	1
  8367  002214  0100               	movlb	0	; () banked
  8368  002216  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8369                           
  8370                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8371  002218  0E01               	movlw	1
  8372  00221A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8373                           
  8374                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8375  00221C  0E00               	movlw	0
  8376  00221E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8377                           
  8378                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8379  002220  0E00               	movlw	0
  8380  002222  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8381                           
  8382                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8383  002224  0E00               	movlw	0
  8384  002226  0101               	movlb	1	; () banked
  8385  002228  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  8386                           
  8387                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8388  00222A  0E00               	movlw	0
  8389  00222C  0100               	movlb	0	; () banked
  8390  00222E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8391  002230                     l13451:
  8392                           
  8393                           ; BSR set to: 0
  8394  002230  0E02               	movlw	2
  8395  002232  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8396  002234  D001               	goto	l1605
  8397  002236  D02E               	goto	u12540
  8398  002238                     l1605:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;usb_device.c: 364: {
  8402                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8403                           
  8404                           ; BSR set to: 0
  8405  002238  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8406  00223A  0D02               	mullw	2
  8407  00223C  0EB6               	movlw	low _pBDTEntryIn
  8408  00223E  24F3               	addwf	prodl,w,c
  8409  002240  6ED9               	movwf	fsr2l,c
  8410  002242  0E00               	movlw	high _pBDTEntryIn
  8411  002244  20F4               	addwfc	prodh,w,c
  8412  002246  6EDA               	movwf	fsr2h,c
  8413  002248  0E00               	movlw	0
  8414  00224A  6EDE               	movwf	postinc2,c
  8415  00224C  0E00               	movlw	0
  8416  00224E  6EDD               	movwf	postdec2,c
  8417                           
  8418                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8419  002250  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8420  002252  0D02               	mullw	2
  8421  002254  0E0E               	movlw	low _pBDTEntryOut
  8422  002256  24F3               	addwf	prodl,w,c
  8423  002258  6ED9               	movwf	fsr2l,c
  8424  00225A  0E03               	movlw	high _pBDTEntryOut
  8425  00225C  20F4               	addwfc	prodh,w,c
  8426  00225E  6EDA               	movwf	fsr2h,c
  8427  002260  0E00               	movlw	0
  8428  002262  6EDE               	movwf	postinc2,c
  8429  002264  0E00               	movlw	0
  8430  002266  6EDD               	movwf	postdec2,c
  8431                           
  8432                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8433  002268  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8434  00226A  0D01               	mullw	1
  8435  00226C  0ED1               	movlw	low _ep_data_in
  8436  00226E  24F3               	addwf	prodl,w,c
  8437  002270  6ED9               	movwf	fsr2l,c
  8438  002272  0E02               	movlw	high _ep_data_in
  8439  002274  20F4               	addwfc	prodh,w,c
  8440  002276  6EDA               	movwf	fsr2h,c
  8441  002278  0E00               	movlw	0
  8442  00227A  6EDF               	movwf	indf2,c
  8443                           
  8444                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8445  00227C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8446  00227E  0D01               	mullw	1
  8447  002280  0ECE               	movlw	low _ep_data_out
  8448  002282  24F3               	addwf	prodl,w,c
  8449  002284  6ED9               	movwf	fsr2l,c
  8450  002286  0E02               	movlw	high _ep_data_out
  8451  002288  20F4               	addwfc	prodh,w,c
  8452  00228A  6EDA               	movwf	fsr2h,c
  8453  00228C  0E00               	movlw	0
  8454  00228E  6EDF               	movwf	indf2,c
  8455                           
  8456                           ; BSR set to: 0
  8457  002290  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8458  002292  D7CE               	goto	l13451
  8459  002294                     u12540:
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;usb_device.c: 369: }
  8463                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8464                           
  8465                           ; BSR set to: 0
  8466  002294  0E08               	movlw	8
  8467  002296  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8468  002298  0E04               	movlw	4
  8469  00229A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8473  00229C  0E16               	movlw	22
  8474  00229E  010F               	movlb	15	; () banked
  8475  0022A0  6F26               	movwf	38,b	;volatile
  8476                           
  8477                           ; BSR set to: 15
  8478                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8479  0022A2  0E04               	movlw	4
  8480  0022A4  0104               	movlb	4	; () banked
  8481  0022A6  6F03               	movwf	3,b	;volatile
  8482  0022A8  0E30               	movlw	48
  8483  0022AA  6F02               	movwf	2,b	;volatile
  8484                           
  8485                           ; BSR set to: 4
  8486                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8487  0022AC  0E08               	movlw	8
  8488  0022AE  6F01               	movwf	1,b	;volatile
  8489                           
  8490                           ; BSR set to: 4
  8491                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8492  0022B0  0E04               	movlw	4
  8493  0022B2  6F00               	movwf	0,b	;volatile
  8494                           
  8495                           ; BSR set to: 4
  8496                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8497  0022B4  8F00               	bsf	0,7,b	;volatile
  8498                           
  8499                           ; BSR set to: 4
  8500                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8501  0022B6  0E00               	movlw	0
  8502  0022B8  0100               	movlb	0	; () banked
  8503  0022BA  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;usb_device.c: 384: USB1msTickCount = 0;
  8507  0022BC  0E00               	movlw	0
  8508  0022BE  0103               	movlb	3	; () banked
  8509  0022C0  6F18               	movwf	_USB1msTickCount& (0+255),b
  8510  0022C2  0E00               	movlw	0
  8511  0022C4  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8512  0022C6  0E00               	movlw	0
  8513  0022C8  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8514  0022CA  0E00               	movlw	0
  8515  0022CC  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8516                           
  8517                           ; BSR set to: 3
  8518                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8519  0022CE  0E00               	movlw	0
  8520  0022D0  0101               	movlb	1	; () banked
  8521  0022D2  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8522                           
  8523                           ; BSR set to: 1
  8524                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8525  0022D4  0E00               	movlw	0
  8526  0022D6  0100               	movlb	0	; () banked
  8527  0022D8  6FCD               	movwf	_USBDeviceState& (0+255),b
  8528                           
  8529                           ; BSR set to: 0
  8530  0022DA  0012               	return		;funcret
  8531  0022DC                     __end_of_USBDeviceInit:
  8532                           	opt stack 0
  8533                           tosu	equ	0xFFF
  8534                           tosh	equ	0xFFE
  8535                           tosl	equ	0xFFD
  8536                           pclath	equ	0xFFA
  8537                           tblptru	equ	0xFF8
  8538                           tblptrh	equ	0xFF7
  8539                           tblptrl	equ	0xFF6
  8540                           tablat	equ	0xFF5
  8541                           prodh	equ	0xFF4
  8542                           prodl	equ	0xFF3
  8543                           intcon	equ	0xFF2
  8544                           intcon2	equ	0xFF1
  8545                           intcon3	equ	0xFF0
  8546                           postinc0	equ	0xFEE
  8547                           plusw0	equ	0xFEB
  8548                           wreg	equ	0xFE8
  8549                           postinc1	equ	0xFE6
  8550                           postdec1	equ	0xFE5
  8551                           fsr1h	equ	0xFE2
  8552                           fsr1l	equ	0xFE1
  8553                           indf2	equ	0xFDF
  8554                           postinc2	equ	0xFDE
  8555                           postdec2	equ	0xFDD
  8556                           plusw2	equ	0xFDB
  8557                           fsr2h	equ	0xFDA
  8558                           fsr2l	equ	0xFD9
  8559                           status	equ	0xFD8
  8560                           
  8561 ;; *************** function _USBCtrlEPService *****************
  8562 ;; Defined at:
  8563 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8580 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8581 ;;Total ram usage:        1 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:   18
  8584 ;; This function calls:
  8585 ;;		_USBCtrlTrfInHandler
  8586 ;;		_USBCtrlTrfOutHandler
  8587 ;;		_USBCtrlTrfSetupHandler
  8588 ;;		_memcpy
  8589 ;; This function is called by:
  8590 ;;		_USBDeviceTasks
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text34
  8595  00493E                     __ptext34:
  8596                           	opt stack 0
  8597  00493E                     _USBCtrlEPService:
  8598                           	opt stack 8
  8599                           
  8600                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;incstack = 0
  8604  00493E  0E2D               	movlw	45
  8605  004940  0100               	movlb	0	; () banked
  8606  004942  6FC9               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8610  004944  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8611  004948  0EFD               	movlw	253
  8612  00494A  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8613  00494C  A4D8               	btfss	status,2,c
  8614  00494E  D038               	goto	l1771
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;usb_device.c: 2401: {
  8618                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8619  004950  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8620  004954  90D8               	bcf	status,0,c
  8621  004956  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8622  004958  0E3F               	movlw	63
  8623  00495A  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8624  00495C  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8625  00495E  0D04               	mullw	4
  8626  004960  0E00               	movlw	0
  8627  004962  24F3               	addwf	prodl,w,c
  8628  004964  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8629  004966  0E04               	movlw	4
  8630  004968  20F4               	addwfc	prodh,w,c
  8631  00496A  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8635  00496C  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8636  004970  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8640  004974  0E04               	movlw	4
  8641  004976  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8645  004978  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8646  00497C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8647  004980  30DF               	rrcf	223,w,c
  8648  004982  32E8               	rrcf	wreg,f,c
  8649  004984  0B0F               	andlw	15
  8650  004986  0A0D               	xorlw	13
  8651  004988  A4D8               	btfss	status,2,c
  8652  00498A  D017               	goto	l1772
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;usb_device.c: 2418: {
  8656                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8657  00498C  0E30               	movlw	48
  8658  00498E  6F7D               	movwf	memcpy@d1& (0+255),b
  8659  004990  0E04               	movlw	4
  8660  004992  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8661  004994  EE20 F002          	lfsr	2,2
  8662  004998  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8663  00499A  26D9               	addwf	fsr2l,f,c
  8664  00499C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8665  00499E  22DA               	addwfc	fsr2h,f,c
  8666  0049A0  CFDE F07F          	movff	postinc2,memcpy@s1
  8667  0049A4  CFDD F080          	movff	postdec2,memcpy@s1+1
  8668  0049A8  0E00               	movlw	0
  8669  0049AA  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8670  0049AC  0E08               	movlw	8
  8671  0049AE  6F81               	movwf	memcpy@n& (0+255),b
  8672  0049B0  EC9E  F02B         	call	_memcpy	;wreg free
  8673                           
  8674                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8675  0049B4  ECC2  F025         	call	_USBCtrlTrfSetupHandler	;wreg free
  8676                           
  8677                           ;usb_device.c: 2427: }
  8678  0049B8  0012               	return	
  8679  0049BA                     l1772:
  8680                           
  8681                           ;usb_device.c: 2428: else
  8682                           ;usb_device.c: 2429: {
  8683                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8684  0049BA  ECE4  F027         	call	_USBCtrlTrfOutHandler	;wreg free
  8685                           
  8686                           ;usb_device.c: 2432: }
  8687                           ;usb_device.c: 2433: }
  8688  0049BE  0012               	return	
  8689  0049C0                     l1771:
  8690                           
  8691                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8692  0049C0  0100               	movlb	0	; () banked
  8693  0049C2  51D5               	movf	_USTATcopy& (0+255),w,b
  8694  0049C4  0BFD               	andlw	253
  8695  0049C6  0A04               	xorlw	4
  8696  0049C8  A4D8               	btfss	status,2,c
  8697  0049CA  0012               	return	
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;usb_device.c: 2435: {
  8701                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8702  0049CC  ECBA  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8703  0049D0  0012               	return	
  8704  0049D2                     __end_of_USBCtrlEPService:
  8705                           	opt stack 0
  8706                           tosu	equ	0xFFF
  8707                           tosh	equ	0xFFE
  8708                           tosl	equ	0xFFD
  8709                           pclath	equ	0xFFA
  8710                           tblptru	equ	0xFF8
  8711                           tblptrh	equ	0xFF7
  8712                           tblptrl	equ	0xFF6
  8713                           tablat	equ	0xFF5
  8714                           prodh	equ	0xFF4
  8715                           prodl	equ	0xFF3
  8716                           intcon	equ	0xFF2
  8717                           intcon2	equ	0xFF1
  8718                           intcon3	equ	0xFF0
  8719                           postinc0	equ	0xFEE
  8720                           plusw0	equ	0xFEB
  8721                           wreg	equ	0xFE8
  8722                           postinc1	equ	0xFE6
  8723                           postdec1	equ	0xFE5
  8724                           fsr1h	equ	0xFE2
  8725                           fsr1l	equ	0xFE1
  8726                           indf2	equ	0xFDF
  8727                           postinc2	equ	0xFDE
  8728                           postdec2	equ	0xFDD
  8729                           plusw2	equ	0xFDB
  8730                           fsr2h	equ	0xFDA
  8731                           fsr2l	equ	0xFD9
  8732                           status	equ	0xFD8
  8733                           
  8734 ;; *************** function _memcpy *****************
  8735 ;; Defined at:
  8736 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  d1              2   29[BANK0 ] PTR void 
  8739 ;;		 -> SetupPkt(8), 
  8740 ;;  s1              2   31[BANK0 ] PTR const void 
  8741 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8742 ;;  n               2   33[BANK0 ] unsigned int 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8745 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8746 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8747 ;;		 -> SetupPkt(8), 
  8748 ;;  tmp             1   35[BANK0 ] unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  2   29[BANK0 ] PTR void 
  8751 ;; Registers used:
  8752 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8758 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8759 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8761 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8762 ;;Total ram usage:       11 bytes
  8763 ;; Hardware stack levels used:    1
  8764 ;; Hardware stack levels required when called:   11
  8765 ;; This function calls:
  8766 ;;		Nothing
  8767 ;; This function is called by:
  8768 ;;		_USBCtrlEPService
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           	psect	text35
  8773  00573C                     __ptext35:
  8774                           	opt stack 0
  8775  00573C                     _memcpy:
  8776                           	opt stack 14
  8777                           
  8778                           ;incstack = 0
  8779  00573C  C07F  F086         	movff	memcpy@s1,memcpy@s
  8780  005740  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8781  005744  C07D  F084         	movff	memcpy@d1,memcpy@d
  8782  005748  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8783  00574C  D011               	goto	l3104
  8784  00574E                     l12671:
  8785  00574E  C086  FFD9         	movff	memcpy@s,fsr2l
  8786  005752  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8787  005756  50DF               	movf	indf2,w,c
  8788  005758  0100               	movlb	0	; () banked
  8789  00575A  6F83               	movwf	memcpy@tmp& (0+255),b
  8790                           
  8791                           ; BSR set to: 0
  8792  00575C  4B86               	infsnz	memcpy@s& (0+255),f,b
  8793  00575E  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8794                           
  8795                           ; BSR set to: 0
  8796  005760  C084  FFD9         	movff	memcpy@d,fsr2l
  8797  005764  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8798  005768  C083  FFDF         	movff	memcpy@tmp,indf2
  8799                           
  8800                           ; BSR set to: 0
  8801  00576C  4B84               	infsnz	memcpy@d& (0+255),f,b
  8802  00576E  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8803  005770                     l3104:
  8804                           
  8805                           ; BSR set to: 0
  8806  005770  0100               	movlb	0	; () banked
  8807  005772  0781               	decf	memcpy@n& (0+255),f,b
  8808  005774  A0D8               	btfss	status,0,c
  8809  005776  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8810  005778  2981               	incf	memcpy@n& (0+255),w,b
  8811  00577A  E1E9               	bnz	l12671
  8812  00577C  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8813  00577E  B4D8               	btfsc	status,2,c
  8814  005780  0012               	return	
  8815  005782  D7E5               	goto	l3105
  8816  005784                     __end_of_memcpy:
  8817                           	opt stack 0
  8818                           tosu	equ	0xFFF
  8819                           tosh	equ	0xFFE
  8820                           tosl	equ	0xFFD
  8821                           pclath	equ	0xFFA
  8822                           tblptru	equ	0xFF8
  8823                           tblptrh	equ	0xFF7
  8824                           tblptrl	equ	0xFF6
  8825                           tablat	equ	0xFF5
  8826                           prodh	equ	0xFF4
  8827                           prodl	equ	0xFF3
  8828                           intcon	equ	0xFF2
  8829                           intcon2	equ	0xFF1
  8830                           intcon3	equ	0xFF0
  8831                           postinc0	equ	0xFEE
  8832                           plusw0	equ	0xFEB
  8833                           wreg	equ	0xFE8
  8834                           postinc1	equ	0xFE6
  8835                           postdec1	equ	0xFE5
  8836                           fsr1h	equ	0xFE2
  8837                           fsr1l	equ	0xFE1
  8838                           indf2	equ	0xFDF
  8839                           postinc2	equ	0xFDE
  8840                           postdec2	equ	0xFDD
  8841                           plusw2	equ	0xFDB
  8842                           fsr2h	equ	0xFDA
  8843                           fsr2l	equ	0xFD9
  8844                           status	equ	0xFD8
  8845                           
  8846 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8847 ;; Defined at:
  8848 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;Total ram usage:        0 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:   17
  8869 ;; This function calls:
  8870 ;;		_USBCheckStdRequest
  8871 ;;		_USBCtrlEPServiceComplete
  8872 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8873 ;; This function is called by:
  8874 ;;		_USBCtrlEPService
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text36
  8879  004B84                     __ptext36:
  8880                           	opt stack 0
  8881  004B84                     _USBCtrlTrfSetupHandler:
  8882                           	opt stack 8
  8883                           
  8884                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;incstack = 0
  8888  004B84  0E00               	movlw	0
  8889  004B86  0100               	movlb	0	; () banked
  8890  004B88  6FCC               	movwf	_shortPacketStatus& (0+255),b
  8891                           
  8892                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8893  004B8A  0E00               	movlw	0
  8894  004B8C  6FC8               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8895                           
  8896                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8897  004B8E  0E00               	movlw	0
  8898  004B90  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8899                           
  8900                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8901  004B92  0E00               	movlw	0
  8902  004B94  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8903                           
  8904                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8905  004B96  0E00               	movlw	0
  8906  004B98  0101               	movlb	1	; () banked
  8907  004B9A  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8908                           
  8909                           ;usb_device.c: 2493: controlTransferState = 0;
  8910  004B9C  0E00               	movlw	0
  8911  004B9E  0100               	movlb	0	; () banked
  8912  004BA0  6FCB               	movwf	_controlTransferState& (0+255),b
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8916  004BA2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8917  004BA6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8918  004BAA  0E7F               	movlw	127
  8919  004BAC  16DF               	andwf	indf2,f,c
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8923  004BAE  0E04               	movlw	4
  8924  004BB0  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8928  004BB2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8929  004BB6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8930  004BBA  0E7F               	movlw	127
  8931  004BBC  16DF               	andwf	indf2,f,c
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8935  004BBE  0E04               	movlw	4
  8936  004BC0  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8940  004BC2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8941  004BC6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8942  004BCA  0E7F               	movlw	127
  8943  004BCC  16DF               	andwf	indf2,f,c
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8947  004BCE  0E00               	movlw	0
  8948  004BD0  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8952  004BD2  0E00               	movlw	0
  8953  004BD4  6FB5               	movwf	(_inPipes+5)& (0+255),b
  8954  004BD6  0E00               	movlw	0
  8955  004BD8  6FB4               	movwf	(_inPipes+4)& (0+255),b
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8959  004BDA  0E00               	movlw	0
  8960  004BDC  0101               	movlb	1	; () banked
  8961  004BDE  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8962                           
  8963                           ; BSR set to: 1
  8964                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8965  004BE0  0E00               	movlw	0
  8966  004BE2  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8967  004BE4  0E00               	movlw	0
  8968  004BE6  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8969                           
  8970                           ; BSR set to: 1
  8971                           ;usb_device.c: 2517: USBCheckStdRequest();
  8972  004BE8  EC7A  F01A         	call	_USBCheckStdRequest	;wreg free
  8973                           
  8974                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8975  004BEC  0E00               	movlw	0
  8976  004BEE  0100               	movlb	0	; () banked
  8977  004BF0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8978  004BF2  0E03               	movlw	3
  8979  004BF4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8980  004BF6  0E00               	movlw	0
  8981  004BF8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8982  004BFA  0E00               	movlw	0
  8983  004BFC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8984  004BFE  0E00               	movlw	0
  8985  004C00  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8986  004C02  0E00               	movlw	0
  8987  004C04  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8988  004C06  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8989                           
  8990                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8991  004C0A  EC29  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  8992  004C0E  0012               	return		;funcret
  8993  004C10                     __end_of_USBCtrlTrfSetupHandler:
  8994                           	opt stack 0
  8995                           tosu	equ	0xFFF
  8996                           tosh	equ	0xFFE
  8997                           tosl	equ	0xFFD
  8998                           pclath	equ	0xFFA
  8999                           tblptru	equ	0xFF8
  9000                           tblptrh	equ	0xFF7
  9001                           tblptrl	equ	0xFF6
  9002                           tablat	equ	0xFF5
  9003                           prodh	equ	0xFF4
  9004                           prodl	equ	0xFF3
  9005                           intcon	equ	0xFF2
  9006                           intcon2	equ	0xFF1
  9007                           intcon3	equ	0xFF0
  9008                           postinc0	equ	0xFEE
  9009                           plusw0	equ	0xFEB
  9010                           wreg	equ	0xFE8
  9011                           postinc1	equ	0xFE6
  9012                           postdec1	equ	0xFE5
  9013                           fsr1h	equ	0xFE2
  9014                           fsr1l	equ	0xFE1
  9015                           indf2	equ	0xFDF
  9016                           postinc2	equ	0xFDE
  9017                           postdec2	equ	0xFDD
  9018                           plusw2	equ	0xFDB
  9019                           fsr2h	equ	0xFDA
  9020                           fsr2l	equ	0xFD9
  9021                           status	equ	0xFD8
  9022                           
  9023 ;; *************** function _USBCtrlEPServiceComplete *****************
  9024 ;; Defined at:
  9025 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:   13
  9046 ;; This function calls:
  9047 ;;		_USBCtrlEPAllowDataStage
  9048 ;;		_USBCtrlEPAllowStatusStage
  9049 ;; This function is called by:
  9050 ;;		_USBCtrlTrfSetupHandler
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text37
  9055  003052                     __ptext37:
  9056                           	opt stack 0
  9057  003052                     _USBCtrlEPServiceComplete:
  9058                           	opt stack 11
  9059                           
  9060                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9061                           
  9062                           ;incstack = 0
  9063  003052  9865               	bcf	3941,4,c	;volatile
  9064                           
  9065                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9066  003054  0100               	movlb	0	; () banked
  9067  003056  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9068  003058  D03C               	goto	l1681
  9069                           
  9070                           ; BSR set to: 0
  9071                           ;usb_device.c: 1647: {
  9072                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9073  00305A  0101               	movlb	1	; () banked
  9074  00305C  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9075  00305E  D00D               	goto	l1682
  9076                           
  9077                           ; BSR set to: 1
  9078                           ;usb_device.c: 1649: {
  9079                           ;usb_device.c: 1650: controlTransferState = 2;
  9080  003060  0E02               	movlw	2
  9081  003062  0100               	movlb	0	; () banked
  9082  003064  6FCB               	movwf	_controlTransferState& (0+255),b
  9083                           
  9084                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9085  003066  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9086  003068  B4D8               	btfsc	status,2,c
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;usb_device.c: 1662: {
  9090                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9091  00306A  EC1F  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9092                           
  9093                           ;usb_device.c: 1664: }
  9094                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9095  00306E  0E00               	movlw	0
  9096  003070  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9097                           
  9098                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9099  003072  0E00               	movlw	0
  9100  003074  0100               	movlb	0	; () banked
  9101  003076  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9102                           
  9103                           ;usb_device.c: 1670: }
  9104  003078  0012               	return	
  9105  00307A                     l1682:
  9106                           
  9107                           ;usb_device.c: 1671: else
  9108                           ;usb_device.c: 1672: {
  9109                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9110                           
  9111                           ; BSR set to: 0
  9112  00307A  0100               	movlb	0	; () banked
  9113  00307C  EE20 F001          	lfsr	2,1
  9114  003080  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9115  003082  26D9               	addwf	fsr2l,f,c
  9116  003084  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9117  003086  22DA               	addwfc	fsr2h,f,c
  9118  003088  0E08               	movlw	8
  9119  00308A  6EDF               	movwf	indf2,c
  9120                           
  9121                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9122  00308C  EE20 F002          	lfsr	2,2
  9123  003090  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9124  003092  26D9               	addwf	fsr2l,f,c
  9125  003094  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9126  003096  22DA               	addwfc	fsr2h,f,c
  9127  003098  0E30               	movlw	48
  9128  00309A  6EDE               	movwf	postinc2,c
  9129  00309C  0E04               	movlw	4
  9130  00309E  6EDD               	movwf	postdec2,c
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9134  0030A0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9135  0030A4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9136  0030A8  0E0C               	movlw	12
  9137  0030AA  6EDF               	movwf	indf2,c
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9141  0030AC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9142  0030B0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9143  0030B4  0E00               	movlw	0
  9144  0030B6  8EDB               	bsf	plusw2,7,c
  9145                           
  9146                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9147  0030B8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9148  0030BC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9149  0030C0  0E04               	movlw	4
  9150  0030C2  6EDF               	movwf	indf2,c
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9154  0030C4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9155  0030C8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9156  0030CC  0E00               	movlw	0
  9157  0030CE  8EDB               	bsf	plusw2,7,c
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;usb_device.c: 1683: }
  9161                           ;usb_device.c: 1684: }
  9162  0030D0  0012               	return	
  9163  0030D2                     l1681:
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;usb_device.c: 1685: else
  9167                           ;usb_device.c: 1686: {
  9168                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9169  0030D2  0104               	movlb	4	; () banked
  9170  0030D4  AF30               	btfss	48,7,b	;volatile
  9171  0030D6  D012               	goto	l1686
  9172                           
  9173                           ; BSR set to: 4
  9174                           ;usb_device.c: 1688: {
  9175                           ;usb_device.c: 1689: controlTransferState = 1;
  9176  0030D8  0E01               	movlw	1
  9177  0030DA  0100               	movlb	0	; () banked
  9178  0030DC  6FCB               	movwf	_controlTransferState& (0+255),b
  9179                           
  9180                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9181  0030DE  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9182  0030E0  B4D8               	btfsc	status,2,c
  9183                           
  9184                           ; BSR set to: 0
  9185                           ;usb_device.c: 1704: {
  9186                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9187  0030E2  EC1F  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9188                           
  9189                           ;usb_device.c: 1706: }
  9190                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9191  0030E6  0E00               	movlw	0
  9192  0030E8  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9193                           
  9194                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9195  0030EA  0E00               	movlw	0
  9196  0030EC  0100               	movlb	0	; () banked
  9197  0030EE  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9201  0030F0  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9202  0030F2  A4D8               	btfss	status,2,c
  9203  0030F4  0012               	return	
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;usb_device.c: 1731: {
  9207                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9208  0030F6  EC61  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9209                           
  9210                           ;usb_device.c: 1733: }
  9211                           ;usb_device.c: 1734: }
  9212  0030FA  0012               	return	
  9213  0030FC                     l1686:
  9214                           
  9215                           ;usb_device.c: 1735: else
  9216                           ;usb_device.c: 1736: {
  9217                           ;usb_device.c: 1747: controlTransferState = 2;
  9218  0030FC  0E02               	movlw	2
  9219  0030FE  0100               	movlb	0	; () banked
  9220  003100  6FCB               	movwf	_controlTransferState& (0+255),b
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9224  003102  EE20 F001          	lfsr	2,1
  9225  003106  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9226  003108  26D9               	addwf	fsr2l,f,c
  9227  00310A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9228  00310C  22DA               	addwfc	fsr2h,f,c
  9229  00310E  0E08               	movlw	8
  9230  003110  6EDF               	movwf	indf2,c
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9234  003112  EE20 F002          	lfsr	2,2
  9235  003116  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9236  003118  26D9               	addwf	fsr2l,f,c
  9237  00311A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9238  00311C  22DA               	addwfc	fsr2h,f,c
  9239  00311E  0E30               	movlw	48
  9240  003120  6EDE               	movwf	postinc2,c
  9241  003122  0E04               	movlw	4
  9242  003124  6EDD               	movwf	postdec2,c
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9246  003126  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9247  00312A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9248  00312E  0E04               	movlw	4
  9249  003130  6EDF               	movwf	indf2,c
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9253  003132  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9254  003136  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9255  00313A  0E00               	movlw	0
  9256  00313C  8EDB               	bsf	plusw2,7,c
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9260  00313E  0E00               	movlw	0
  9261  003140  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9265  003142  0E00               	movlw	0
  9266  003144  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9270  003146  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9271  003148  A4D8               	btfss	status,2,c
  9272  00314A  0012               	return	
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;usb_device.c: 1759: {
  9276                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9277  00314C  EC61  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9278  003150  0012               	return	
  9279  003152                     __end_of_USBCtrlEPServiceComplete:
  9280                           	opt stack 0
  9281                           tosu	equ	0xFFF
  9282                           tosh	equ	0xFFE
  9283                           tosl	equ	0xFFD
  9284                           pclath	equ	0xFFA
  9285                           tblptru	equ	0xFF8
  9286                           tblptrh	equ	0xFF7
  9287                           tblptrl	equ	0xFF6
  9288                           tablat	equ	0xFF5
  9289                           prodh	equ	0xFF4
  9290                           prodl	equ	0xFF3
  9291                           intcon	equ	0xFF2
  9292                           intcon2	equ	0xFF1
  9293                           intcon3	equ	0xFF0
  9294                           postinc0	equ	0xFEE
  9295                           plusw0	equ	0xFEB
  9296                           wreg	equ	0xFE8
  9297                           postinc1	equ	0xFE6
  9298                           postdec1	equ	0xFE5
  9299                           fsr1h	equ	0xFE2
  9300                           fsr1l	equ	0xFE1
  9301                           indf2	equ	0xFDF
  9302                           postinc2	equ	0xFDE
  9303                           postdec2	equ	0xFDD
  9304                           plusw2	equ	0xFDB
  9305                           fsr2h	equ	0xFDA
  9306                           fsr2l	equ	0xFD9
  9307                           status	equ	0xFD8
  9308                           
  9309 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9310 ;; Defined at:
  9311 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9329 ;;Total ram usage:        0 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:   12
  9332 ;; This function calls:
  9333 ;;		_USBCtrlTrfTxService
  9334 ;; This function is called by:
  9335 ;;		_USBCtrlEPServiceComplete
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text38
  9340  00463E                     __ptext38:
  9341                           	opt stack 0
  9342  00463E                     _USBCtrlEPAllowDataStage:
  9343                           	opt stack 11
  9344                           
  9345                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9346                           
  9347                           ;incstack = 0
  9348  00463E  0E00               	movlw	0
  9349  004640  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9350                           
  9351                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9352  004642  0E00               	movlw	0
  9353  004644  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9354                           
  9355                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9356  004646  0E02               	movlw	2
  9357  004648  0100               	movlb	0	; () banked
  9358  00464A  19CB               	xorwf	_controlTransferState& (0+255),w,b
  9359  00464C  A4D8               	btfss	status,2,c
  9360  00464E  D01F               	goto	l1670
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;usb_device.c: 1512: {
  9364                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9365  004650  EE20 F001          	lfsr	2,1
  9366  004654  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9367  004656  26D9               	addwf	fsr2l,f,c
  9368  004658  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9369  00465A  22DA               	addwfc	fsr2h,f,c
  9370  00465C  0E08               	movlw	8
  9371  00465E  6EDF               	movwf	indf2,c
  9372                           
  9373                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9374  004660  EE20 F002          	lfsr	2,2
  9375  004664  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9376  004666  26D9               	addwf	fsr2l,f,c
  9377  004668  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9378  00466A  22DA               	addwfc	fsr2h,f,c
  9379  00466C  0E38               	movlw	56
  9380  00466E  6EDE               	movwf	postinc2,c
  9381  004670  0E04               	movlw	4
  9382  004672  6EDD               	movwf	postdec2,c
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9386  004674  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9387  004678  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9388  00467C  0E48               	movlw	72
  9389  00467E  6EDF               	movwf	indf2,c
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9393  004680  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9394  004684  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9395  004688  0E00               	movlw	0
  9396  00468A  8EDB               	bsf	plusw2,7,c
  9397                           
  9398                           ;usb_device.c: 1518: }
  9399  00468C  0012               	return	
  9400  00468E                     l1670:
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;usb_device.c: 1519: else
  9404                           ;usb_device.c: 1520: {
  9405                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9406                           
  9407                           ; BSR set to: 0
  9408  00468E  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9409  004690  0104               	movlb	4	; () banked
  9410  004692  5D36               	subwf	54,w,b	;volatile
  9411  004694  0100               	movlb	0	; () banked
  9412  004696  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9413  004698  0104               	movlb	4	; () banked
  9414  00469A  5937               	subwfb	55,w,b	;volatile
  9415  00469C  B0D8               	btfsc	status,0,c
  9416  00469E  D004               	goto	l1672
  9417                           
  9418                           ; BSR set to: 4
  9419                           ;usb_device.c: 1524: {
  9420                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9421  0046A0  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9422  0046A4  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9423  0046A8                     l1672:
  9424                           
  9425                           ; BSR set to: 4
  9426                           ;usb_device.c: 1526: }
  9427                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9428                           
  9429                           ; BSR set to: 4
  9430  0046A8  ECEC  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9431                           
  9432                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9433  0046AC  0100               	movlb	0	; () banked
  9434  0046AE  EE20 F002          	lfsr	2,2
  9435  0046B2  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9436  0046B4  26D9               	addwf	fsr2l,f,c
  9437  0046B6  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9438  0046B8  22DA               	addwfc	fsr2h,f,c
  9439  0046BA  0E38               	movlw	56
  9440  0046BC  6EDE               	movwf	postinc2,c
  9441  0046BE  0E04               	movlw	4
  9442  0046C0  6EDD               	movwf	postdec2,c
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9446  0046C2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9447  0046C6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9448  0046CA  0E48               	movlw	72
  9449  0046CC  6EDF               	movwf	indf2,c
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9453  0046CE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9454  0046D2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9455  0046D6  0E00               	movlw	0
  9456  0046D8  8EDB               	bsf	plusw2,7,c
  9457  0046DA  0012               	return	
  9458  0046DC                     __end_of_USBCtrlEPAllowDataStage:
  9459                           	opt stack 0
  9460                           tosu	equ	0xFFF
  9461                           tosh	equ	0xFFE
  9462                           tosl	equ	0xFFD
  9463                           pclath	equ	0xFFA
  9464                           tblptru	equ	0xFF8
  9465                           tblptrh	equ	0xFF7
  9466                           tblptrl	equ	0xFF6
  9467                           tablat	equ	0xFF5
  9468                           prodh	equ	0xFF4
  9469                           prodl	equ	0xFF3
  9470                           intcon	equ	0xFF2
  9471                           intcon2	equ	0xFF1
  9472                           intcon3	equ	0xFF0
  9473                           postinc0	equ	0xFEE
  9474                           plusw0	equ	0xFEB
  9475                           wreg	equ	0xFE8
  9476                           postinc1	equ	0xFE6
  9477                           postdec1	equ	0xFE5
  9478                           fsr1h	equ	0xFE2
  9479                           fsr1l	equ	0xFE1
  9480                           indf2	equ	0xFDF
  9481                           postinc2	equ	0xFDE
  9482                           postdec2	equ	0xFDD
  9483                           plusw2	equ	0xFDB
  9484                           fsr2h	equ	0xFDA
  9485                           fsr2l	equ	0xFD9
  9486                           status	equ	0xFD8
  9487                           
  9488 ;; *************** function _USBCheckStdRequest *****************
  9489 ;; Defined at:
  9490 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;		None
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9508 ;;Total ram usage:        0 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:   16
  9511 ;; This function calls:
  9512 ;;		_USBStdFeatureReqHandler
  9513 ;;		_USBStdGetDscHandler
  9514 ;;		_USBStdGetStatusHandler
  9515 ;;		_USBStdSetCfgHandler
  9516 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9517 ;; This function is called by:
  9518 ;;		_USBCtrlTrfSetupHandler
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text39
  9523  0034F4                     __ptext39:
  9524                           	opt stack 0
  9525  0034F4                     _USBCheckStdRequest:
  9526                           	opt stack 8
  9527                           
  9528                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;incstack = 0
  9532  0034F4  0104               	movlb	4	; () banked
  9533  0034F6  3930               	swapf	48,w,b	;volatile
  9534  0034F8  32E8               	rrcf	wreg,f,c
  9535  0034FA  0B03               	andlw	3
  9536  0034FC  0900               	iorlw	0
  9537  0034FE  A4D8               	btfss	status,2,c
  9538  003500  0012               	return	
  9539  003502  D048               	goto	l1805
  9540  003504                     l1806:
  9541                           
  9542                           ; BSR set to: 4
  9543                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9544  003504  0100               	movlb	0	; () banked
  9545  003506  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9549  003508  0E08               	movlw	8
  9550  00350A  6FCD               	movwf	_USBDeviceState& (0+255),b
  9551                           
  9552                           ;usb_device.c: 2713: break;
  9553  00350C  0012               	return	
  9554  00350E                     
  9555                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9556                           
  9557                           ; BSR set to: 0
  9558  00350E  ECE3  F015         	call	_USBStdGetDscHandler	;wreg free
  9559                           
  9560                           ;usb_device.c: 2716: break;
  9561  003512  0012               	return	
  9562  003514                     
  9563                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9564  003514  EC94  F019         	call	_USBStdSetCfgHandler	;wreg free
  9565                           
  9566                           ;usb_device.c: 2719: break;
  9567  003518  0012               	return	
  9568  00351A                     
  9569                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9570  00351A  0ED6               	movlw	low _USBActiveConfiguration
  9571  00351C  0100               	movlb	0	; () banked
  9572  00351E  6FB0               	movwf	_inPipes& (0+255),b
  9573  003520  0E00               	movlw	high _USBActiveConfiguration
  9574  003522  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9578  003524  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9582  003526  0E01               	movlw	1
  9583  003528  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9587  00352A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9588                           
  9589                           ;usb_device.c: 2725: break;
  9590  00352C  0012               	return	
  9591  00352E                     
  9592                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9593                           
  9594                           ; BSR set to: 0
  9595  00352E  EC7A  F020         	call	_USBStdGetStatusHandler	;wreg free
  9596                           
  9597                           ;usb_device.c: 2728: break;
  9598  003532  0012               	return	
  9599  003534                     
  9600                           ;usb_device.c: 2730: case 3:
  9601                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9602  003534  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9603                           
  9604                           ;usb_device.c: 2732: break;
  9605  003538  0012               	return	
  9606  00353A                     
  9607                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9608  00353A  0104               	movlb	4	; () banked
  9609  00353C  5134               	movf	52,w,b	;volatile
  9610  00353E  0D01               	mullw	1
  9611  003540  0EF1               	movlw	low _USBAlternateInterface
  9612  003542  24F3               	addwf	prodl,w,c
  9613  003544  0100               	movlb	0	; () banked
  9614  003546  6FB0               	movwf	_inPipes& (0+255),b
  9615  003548  0E02               	movlw	high _USBAlternateInterface
  9616  00354A  20F4               	addwfc	prodh,w,c
  9617  00354C  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9621  00354E  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9625  003550  0E01               	movlw	1
  9626  003552  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9630  003554  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9631                           
  9632                           ;usb_device.c: 2738: break;
  9633  003556  0012               	return	
  9634  003558                     l1815:
  9635                           
  9636                           ; BSR set to: 4
  9637                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9638  003558  0100               	movlb	0	; () banked
  9639  00355A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9643  00355C  0104               	movlb	4	; () banked
  9644  00355E  5134               	movf	52,w,b	;volatile
  9645  003560  0D01               	mullw	1
  9646  003562  0EF1               	movlw	low _USBAlternateInterface
  9647  003564  24F3               	addwf	prodl,w,c
  9648  003566  6ED9               	movwf	fsr2l,c
  9649  003568  0E02               	movlw	high _USBAlternateInterface
  9650  00356A  20F4               	addwfc	prodh,w,c
  9651  00356C  6EDA               	movwf	fsr2h,c
  9652  00356E  C432 FFDF          	movff	1074,indf2	;volatile
  9653                           
  9654                           ;usb_device.c: 2742: break;
  9655  003572  0012               	return	
  9656  003574                     
  9657                           ; BSR set to: 4
  9658                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9659                           
  9660                           ; BSR set to: 4
  9661  003574  0E00               	movlw	0
  9662  003576  0100               	movlb	0	; () banked
  9663  003578  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9664  00357A  0E02               	movlw	2
  9665  00357C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9666  00357E  0E00               	movlw	0
  9667  003580  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9668  003582  0E00               	movlw	0
  9669  003584  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9670  003586  0E00               	movlw	0
  9671  003588  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9672  00358A  0E00               	movlw	0
  9673  00358C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9674  00358E  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9675                           
  9676                           ;usb_device.c: 2749: }
  9677                           
  9678                           ;usb_device.c: 2748: break;
  9679                           
  9680                           ;usb_device.c: 2747: default:
  9681                           
  9682                           ;usb_device.c: 2746: case 12:
  9683                           
  9684                           ;usb_device.c: 2745: break;
  9685  003592  0012               	return	
  9686  003594                     l1805:
  9687  003594  0104               	movlb	4	; () banked
  9688  003596  5131               	movf	49,w,b	;volatile
  9689                           
  9690                           ; Switch size 1, requested type "space"
  9691                           ; Number of cases is 11, Range of values is 0 to 12
  9692                           ; switch strategies available:
  9693                           ; Name         Instructions Cycles
  9694                           ; simple_byte           34    18 (average)
  9695                           ;	Chosen strategy is simple_byte
  9696  003598  0A00               	xorlw	0	; case 0
  9697  00359A  B4D8               	btfsc	status,2,c
  9698  00359C  D7C8               	goto	l1811
  9699  00359E  0A01               	xorlw	1	; case 1
  9700  0035A0  B4D8               	btfsc	status,2,c
  9701  0035A2  D7C8               	goto	l1812
  9702  0035A4  0A02               	xorlw	2	; case 3
  9703  0035A6  B4D8               	btfsc	status,2,c
  9704  0035A8  D7C5               	goto	l1812
  9705  0035AA  0A06               	xorlw	6	; case 5
  9706  0035AC  B4D8               	btfsc	status,2,c
  9707  0035AE  D7AA               	goto	l1806
  9708  0035B0  0A03               	xorlw	3	; case 6
  9709  0035B2  B4D8               	btfsc	status,2,c
  9710  0035B4  D7AC               	goto	l1808
  9711  0035B6  0A01               	xorlw	1	; case 7
  9712  0035B8  B4D8               	btfsc	status,2,c
  9713  0035BA  D7DC               	goto	l1816
  9714  0035BC  0A0F               	xorlw	15	; case 8
  9715  0035BE  B4D8               	btfsc	status,2,c
  9716  0035C0  D7AC               	goto	l1810
  9717  0035C2  0A01               	xorlw	1	; case 9
  9718  0035C4  B4D8               	btfsc	status,2,c
  9719  0035C6  D7A6               	goto	l1809
  9720  0035C8  0A03               	xorlw	3	; case 10
  9721  0035CA  B4D8               	btfsc	status,2,c
  9722  0035CC  D7B6               	goto	l1814
  9723  0035CE  0A01               	xorlw	1	; case 11
  9724  0035D0  B4D8               	btfsc	status,2,c
  9725  0035D2  D7C2               	goto	l1815
  9726  0035D4  0A07               	xorlw	7	; case 12
  9727  0035D6  0012               	return	
  9728  0035D8                     __end_of_USBCheckStdRequest:
  9729                           	opt stack 0
  9730                           tosu	equ	0xFFF
  9731                           tosh	equ	0xFFE
  9732                           tosl	equ	0xFFD
  9733                           pclath	equ	0xFFA
  9734                           tblptru	equ	0xFF8
  9735                           tblptrh	equ	0xFF7
  9736                           tblptrl	equ	0xFF6
  9737                           tablat	equ	0xFF5
  9738                           prodh	equ	0xFF4
  9739                           prodl	equ	0xFF3
  9740                           intcon	equ	0xFF2
  9741                           intcon2	equ	0xFF1
  9742                           intcon3	equ	0xFF0
  9743                           postinc0	equ	0xFEE
  9744                           plusw0	equ	0xFEB
  9745                           wreg	equ	0xFE8
  9746                           postinc1	equ	0xFE6
  9747                           postdec1	equ	0xFE5
  9748                           fsr1h	equ	0xFE2
  9749                           fsr1l	equ	0xFE1
  9750                           indf2	equ	0xFDF
  9751                           postinc2	equ	0xFDE
  9752                           postdec2	equ	0xFDD
  9753                           plusw2	equ	0xFDB
  9754                           fsr2h	equ	0xFDA
  9755                           fsr2l	equ	0xFD9
  9756                           status	equ	0xFD8
  9757                           
  9758 ;; *************** function _USBStdSetCfgHandler *****************
  9759 ;; Defined at:
  9760 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  i               1   49[BANK0 ] unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;Total ram usage:        1 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:   15
  9781 ;; This function calls:
  9782 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9783 ;;		_memset
  9784 ;; This function is called by:
  9785 ;;		_USBCheckStdRequest
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text40
  9790  003328                     __ptext40:
  9791                           	opt stack 0
  9792  003328                     _USBStdSetCfgHandler:
  9793                           	opt stack 8
  9794                           
  9795                           ;usb_device.c: 1988: uint8_t i;
  9796                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9797                           
  9798                           ;incstack = 0
  9799  003328  0100               	movlb	0	; () banked
  9800  00332A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9804  00332C  0E27               	movlw	39
  9805  00332E  6F7D               	movwf	memset@p1& (0+255),b
  9806  003330  0E0F               	movlw	15
  9807  003332  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9808  003334  0E00               	movlw	0
  9809  003336  6F80               	movwf	(memset@c+1)& (0+255),b
  9810  003338  0E00               	movlw	0
  9811  00333A  6F7F               	movwf	memset@c& (0+255),b
  9812  00333C  0E00               	movlw	0
  9813  00333E  6F82               	movwf	(memset@n+1)& (0+255),b
  9814  003340  0E02               	movlw	2
  9815  003342  6F81               	movwf	memset@n& (0+255),b
  9816  003344  EC7F  F02E         	call	_memset	;wreg free
  9817                           
  9818                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9819  003348  0E00               	movlw	0
  9820  00334A  0100               	movlb	0	; () banked
  9821  00334C  6F7D               	movwf	memset@p1& (0+255),b
  9822  00334E  0E04               	movlw	4
  9823  003350  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9824  003352  0E00               	movlw	0
  9825  003354  6F80               	movwf	(memset@c+1)& (0+255),b
  9826  003356  0E00               	movlw	0
  9827  003358  6F7F               	movwf	memset@c& (0+255),b
  9828  00335A  0E00               	movlw	0
  9829  00335C  6F82               	movwf	(memset@n+1)& (0+255),b
  9830  00335E  0E30               	movlw	48
  9831  003360  6F81               	movwf	memset@n& (0+255),b
  9832  003362  EC7F  F02E         	call	_memset	;wreg free
  9833                           
  9834                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9835  003366  8C65               	bsf	3941,6,c	;volatile
  9836                           
  9837                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9838  003368  0E00               	movlw	0
  9839  00336A  0100               	movlb	0	; () banked
  9840  00336C  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9841  00336E                     l11949:
  9842                           
  9843                           ; BSR set to: 0
  9844  00336E  0E02               	movlw	2
  9845  003370  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9846  003372  D001               	goto	l1722
  9847  003374  D016               	goto	u10530
  9848  003376                     l1722:
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;usb_device.c: 2006: {
  9852                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9853                           
  9854                           ; BSR set to: 0
  9855  003376  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9856  003378  0D01               	mullw	1
  9857  00337A  0ED1               	movlw	low _ep_data_in
  9858  00337C  24F3               	addwf	prodl,w,c
  9859  00337E  6ED9               	movwf	fsr2l,c
  9860  003380  0E02               	movlw	high _ep_data_in
  9861  003382  20F4               	addwfc	prodh,w,c
  9862  003384  6EDA               	movwf	fsr2h,c
  9863  003386  0E00               	movlw	0
  9864  003388  6EDF               	movwf	indf2,c
  9865                           
  9866                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9867  00338A  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9868  00338C  0D01               	mullw	1
  9869  00338E  0ECE               	movlw	low _ep_data_out
  9870  003390  24F3               	addwf	prodl,w,c
  9871  003392  6ED9               	movwf	fsr2l,c
  9872  003394  0E02               	movlw	high _ep_data_out
  9873  003396  20F4               	addwfc	prodh,w,c
  9874  003398  6EDA               	movwf	fsr2h,c
  9875  00339A  0E00               	movlw	0
  9876  00339C  6EDF               	movwf	indf2,c
  9877                           
  9878                           ; BSR set to: 0
  9879  00339E  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9880  0033A0  D7E6               	goto	l11949
  9881  0033A2                     u10530:
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;usb_device.c: 2009: }
  9885                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9886                           
  9887                           ; BSR set to: 0
  9888  0033A2  0EF1               	movlw	low _USBAlternateInterface
  9889  0033A4  6F7D               	movwf	memset@p1& (0+255),b
  9890  0033A6  0E02               	movlw	high _USBAlternateInterface
  9891  0033A8  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9892  0033AA  0E00               	movlw	0
  9893  0033AC  6F80               	movwf	(memset@c+1)& (0+255),b
  9894  0033AE  0E00               	movlw	0
  9895  0033B0  6F7F               	movwf	memset@c& (0+255),b
  9896  0033B2  0E00               	movlw	0
  9897  0033B4  6F82               	movwf	(memset@n+1)& (0+255),b
  9898  0033B6  0E02               	movlw	2
  9899  0033B8  6F81               	movwf	memset@n& (0+255),b
  9900  0033BA  EC7F  F02E         	call	_memset	;wreg free
  9901                           
  9902                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9903  0033BE  9C65               	bcf	3941,6,c	;volatile
  9904                           
  9905                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9906  0033C0  0E08               	movlw	8
  9907  0033C2  0100               	movlb	0	; () banked
  9908  0033C4  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9909  0033C6  0E04               	movlw	4
  9910  0033C8  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9914  0033CA  0E00               	movlw	0
  9915  0033CC  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9916  0033CE  0E04               	movlw	4
  9917  0033D0  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9918                           
  9919                           ; BSR set to: 0
  9920                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9921  0033D2  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9922  0033D6  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9926  0033DA  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9930  0033DE  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
  9931  0033E0  A4D8               	btfss	status,2,c
  9932  0033E2  D003               	goto	l1724
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;usb_device.c: 2028: {
  9936                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9937  0033E4  0E10               	movlw	16
  9938  0033E6  6FCD               	movwf	_USBDeviceState& (0+255),b
  9939                           
  9940                           ;usb_device.c: 2031: }
  9941  0033E8  0012               	return	
  9942  0033EA                     l1724:
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;usb_device.c: 2032: else
  9946                           ;usb_device.c: 2033: {
  9947                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9948                           
  9949                           ; BSR set to: 0
  9950  0033EA  0E00               	movlw	0
  9951  0033EC  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9952  0033EE  0E01               	movlw	1
  9953  0033F0  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9954  0033F2  0ED6               	movlw	low _USBActiveConfiguration
  9955  0033F4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9956  0033F6  0E00               	movlw	high _USBActiveConfiguration
  9957  0033F8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9958  0033FA  0E00               	movlw	0
  9959  0033FC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9960  0033FE  0E01               	movlw	1
  9961  003400  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9962  003402  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9963                           
  9964                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9965  003406  0E20               	movlw	32
  9966  003408  0100               	movlb	0	; () banked
  9967  00340A  6FCD               	movwf	_USBDeviceState& (0+255),b
  9968  00340C  0012               	return	
  9969  00340E                     __end_of_USBStdSetCfgHandler:
  9970                           	opt stack 0
  9971                           tosu	equ	0xFFF
  9972                           tosh	equ	0xFFE
  9973                           tosl	equ	0xFFD
  9974                           pclath	equ	0xFFA
  9975                           tblptru	equ	0xFF8
  9976                           tblptrh	equ	0xFF7
  9977                           tblptrl	equ	0xFF6
  9978                           tablat	equ	0xFF5
  9979                           prodh	equ	0xFF4
  9980                           prodl	equ	0xFF3
  9981                           intcon	equ	0xFF2
  9982                           intcon2	equ	0xFF1
  9983                           intcon3	equ	0xFF0
  9984                           postinc0	equ	0xFEE
  9985                           plusw0	equ	0xFEB
  9986                           wreg	equ	0xFE8
  9987                           postinc1	equ	0xFE6
  9988                           postdec1	equ	0xFE5
  9989                           fsr1h	equ	0xFE2
  9990                           fsr1l	equ	0xFE1
  9991                           indf2	equ	0xFDF
  9992                           postinc2	equ	0xFDE
  9993                           postdec2	equ	0xFDD
  9994                           plusw2	equ	0xFDB
  9995                           fsr2h	equ	0xFDA
  9996                           fsr2l	equ	0xFD9
  9997                           status	equ	0xFD8
  9998                           
  9999 ;; *************** function _USBStdGetStatusHandler *****************
 10000 ;; Defined at:
 10001 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10002 ;; Parameters:    Size  Location     Type
 10003 ;;		None
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10006 ;;		 -> NULL(0), BDT(48), 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  1    wreg      void 
 10009 ;; Registers used:
 10010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10011 ;; Tracked objects:
 10012 ;;		On entry : 0/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10019 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10020 ;;Total ram usage:        3 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:   11
 10023 ;; This function calls:
 10024 ;;		Nothing
 10025 ;; This function is called by:
 10026 ;;		_USBCheckStdRequest
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           	psect	text41
 10031  0040F4                     __ptext41:
 10032                           	opt stack 0
 10033  0040F4                     _USBStdGetStatusHandler:
 10034                           	opt stack 12
 10035                           
 10036                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;incstack = 0
 10040  0040F4  0E00               	movlw	0
 10041  0040F6  0104               	movlb	4	; () banked
 10042  0040F8  6F38               	movwf	56,b	;volatile
 10043                           
 10044                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10045  0040FA  0E00               	movlw	0
 10046  0040FC  6F39               	movwf	57,b	;volatile
 10047                           
 10048                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10049  0040FE  D03D               	goto	l1743
 10050  004100                     l1744:
 10051                           
 10052                           ; BSR set to: 4
 10053                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10054  004100  0100               	movlb	0	; () banked
 10055  004102  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10056                           
 10057                           ;usb_device.c: 2163: }
 10058                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10059                           
 10060                           ; BSR set to: 4
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;usb_device.c: 2161: {
 10064                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10065                           
 10066                           ;usb_device.c: 2160: if(0 == 1)
 10067  004104  0101               	movlb	1	; () banked
 10068  004106  05E6               	decf	_RemoteWakeup& (0+255),w,b
 10069  004108  A4D8               	btfss	status,2,c
 10070  00410A  D042               	goto	l1747
 10071                           
 10072                           ; BSR set to: 1
 10073                           ;usb_device.c: 2166: {
 10074                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10075  00410C  0104               	movlb	4	; () banked
 10076  00410E  8338               	bsf	56,1,b	;volatile
 10077                           
 10078                           ; BSR set to: 4
 10079                           ;usb_device.c: 2168: }
 10080                           ;usb_device.c: 2169: break;
 10081  004110  D03F               	goto	l1747
 10082  004112                     l1748:
 10083                           
 10084                           ; BSR set to: 4
 10085                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10086  004112  0100               	movlb	0	; () banked
 10087  004114  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10088                           
 10089                           ;usb_device.c: 2172: break;
 10090  004116  D03C               	goto	l1747
 10091  004118                     l1749:
 10092                           
 10093                           ; BSR set to: 4
 10094                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10095  004118  0100               	movlb	0	; () banked
 10096  00411A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10097                           
 10098                           ;usb_device.c: 2178: {
 10099                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10100                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10101  00411C  0104               	movlb	4	; () banked
 10102  00411E  BF34               	btfsc	52,7,b	;volatile
 10103  004120  D00B               	goto	l1750
 10104                           
 10105                           ; BSR set to: 4
 10106                           ;usb_device.c: 2182: {
 10107                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10108  004122  5134               	movf	52,w,b	;volatile
 10109  004124  0B0F               	andlw	15
 10110  004126  0100               	movlb	0	; () banked
 10111  004128  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10112  00412A  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10113  00412C  0D02               	mullw	2
 10114  00412E  0E0E               	movlw	low _pBDTEntryOut
 10115  004130  24F3               	addwf	prodl,w,c
 10116  004132  6ED9               	movwf	fsr2l,c
 10117  004134  0E03               	movlw	high _pBDTEntryOut
 10118  004136  D00B               	goto	L4
 10119  004138                     l1750:
 10120                           
 10121                           ;usb_device.c: 2185: else
 10122                           ;usb_device.c: 2186: {
 10123                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10124                           
 10125                           ; BSR set to: 0
 10126  004138  0104               	movlb	4	; () banked
 10127  00413A  5134               	movf	52,w,b	;volatile
 10128  00413C  0B0F               	andlw	15
 10129  00413E  0100               	movlb	0	; () banked
 10130  004140  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10131  004142  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10132  004144  0D02               	mullw	2
 10133  004146  0EB6               	movlw	low _pBDTEntryIn
 10134  004148  24F3               	addwf	prodl,w,c
 10135  00414A  6ED9               	movwf	fsr2l,c
 10136  00414C  0E00               	movlw	high _pBDTEntryIn
 10137  00414E                     L4:
 10138  00414E  20F4               	addwfc	prodh,w,c
 10139  004150  6EDA               	movwf	fsr2h,c
 10140  004152  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10141  004156  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;usb_device.c: 2188: }
 10145                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10146                           
 10147                           ; BSR set to: 0
 10148  00415A  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10149  00415E  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10150  004162  AEDF               	btfss	indf2,7,c
 10151  004164  D015               	goto	l1747
 10152                           
 10153                           ; BSR set to: 0
 10154  004166  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10155  00416A  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10156  00416E  A4DF               	btfss	indf2,2,c
 10157  004170  D00F               	goto	l1747
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10161  004172  0E01               	movlw	1
 10162  004174  0104               	movlb	4	; () banked
 10163  004176  6F38               	movwf	56,b	;volatile
 10164                           
 10165                           ; BSR set to: 4
 10166                           ;usb_device.c: 2193: }
 10167                           ;usb_device.c: 2194: }
 10168                           
 10169                           ; BSR set to: 4
 10170                           ;usb_device.c: 2192: break;
 10171  004178  D00B               	goto	l1747
 10172  00417A                     l1743:
 10173                           
 10174                           ; BSR set to: 4
 10175                           
 10176                           ; BSR set to: 4
 10177  00417A  5130               	movf	48,w,b	;volatile
 10178  00417C  0B1F               	andlw	31
 10179                           
 10180                           ; Switch size 1, requested type "space"
 10181                           ; Number of cases is 3, Range of values is 0 to 2
 10182                           ; switch strategies available:
 10183                           ; Name         Instructions Cycles
 10184                           ; simple_byte           10     6 (average)
 10185                           ;	Chosen strategy is simple_byte
 10186  00417E  0A00               	xorlw	0	; case 0
 10187  004180  B4D8               	btfsc	status,2,c
 10188  004182  D7BE               	goto	l1744
 10189  004184  0A01               	xorlw	1	; case 1
 10190  004186  B4D8               	btfsc	status,2,c
 10191  004188  D7C4               	goto	l1748
 10192  00418A  0A03               	xorlw	3	; case 2
 10193  00418C  B4D8               	btfsc	status,2,c
 10194  00418E  D7C4               	goto	l1749
 10195  004190                     l1747:
 10196                           
 10197                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10198  004190  0100               	movlb	0	; () banked
 10199  004192  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10200  004194  0012               	return	
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;usb_device.c: 2197: {
 10204                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10205  004196  0E38               	movlw	56
 10206  004198  6FB0               	movwf	_inPipes& (0+255),b
 10207  00419A  0E04               	movlw	4
 10208  00419C  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10212  00419E  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10216  0041A0  0E02               	movlw	2
 10217  0041A2  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10218  0041A4  0012               	return	
 10219  0041A6                     __end_of_USBStdGetStatusHandler:
 10220                           	opt stack 0
 10221                           tosu	equ	0xFFF
 10222                           tosh	equ	0xFFE
 10223                           tosl	equ	0xFFD
 10224                           pclath	equ	0xFFA
 10225                           tblptru	equ	0xFF8
 10226                           tblptrh	equ	0xFF7
 10227                           tblptrl	equ	0xFF6
 10228                           tablat	equ	0xFF5
 10229                           prodh	equ	0xFF4
 10230                           prodl	equ	0xFF3
 10231                           intcon	equ	0xFF2
 10232                           intcon2	equ	0xFF1
 10233                           intcon3	equ	0xFF0
 10234                           postinc0	equ	0xFEE
 10235                           plusw0	equ	0xFEB
 10236                           wreg	equ	0xFE8
 10237                           postinc1	equ	0xFE6
 10238                           postdec1	equ	0xFE5
 10239                           fsr1h	equ	0xFE2
 10240                           fsr1l	equ	0xFE1
 10241                           indf2	equ	0xFDF
 10242                           postinc2	equ	0xFDE
 10243                           postdec2	equ	0xFDD
 10244                           plusw2	equ	0xFDB
 10245                           fsr2h	equ	0xFDA
 10246                           fsr2l	equ	0xFD9
 10247                           status	equ	0xFD8
 10248                           
 10249 ;; *************** function _USBStdGetDscHandler *****************
 10250 ;; Defined at:
 10251 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;		None
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;		None
 10256 ;; Return value:  Size  Location     Type
 10257 ;;                  1    wreg      void 
 10258 ;; Registers used:
 10259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10260 ;; Tracked objects:
 10261 ;;		On entry : 0/0
 10262 ;;		On exit  : 0/0
 10263 ;;		Unchanged: 0/0
 10264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10267 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10269 ;;Total ram usage:        2 bytes
 10270 ;; Hardware stack levels used:    1
 10271 ;; Hardware stack levels required when called:   11
 10272 ;; This function calls:
 10273 ;;		Nothing
 10274 ;; This function is called by:
 10275 ;;		_USBCheckStdRequest
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279                           	psect	text42
 10280  002BC6                     __ptext42:
 10281                           	opt stack 0
 10282  002BC6                     _USBStdGetDscHandler:
 10283                           	opt stack 12
 10284                           
 10285                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;incstack = 0
 10289  002BC6  0E80               	movlw	128
 10290  002BC8  0104               	movlb	4	; () banked
 10291  002BCA  1930               	xorwf	48,w,b	;volatile
 10292  002BCC  A4D8               	btfss	status,2,c
 10293  002BCE  0012               	return	
 10294                           
 10295                           ; BSR set to: 4
 10296                           ;usb_device.c: 2064: {
 10297                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10298  002BD0  0EC0               	movlw	192
 10299  002BD2  0100               	movlb	0	; () banked
 10300  002BD4  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10301                           
 10302                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10303  002BD6  D082               	goto	l1730
 10304  002BD8                     
 10305                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10306                           
 10307                           ; BSR set to: 0
 10308  002BD8  0E56               	movlw	low _device_dsc
 10309  002BDA  0100               	movlb	0	; () banked
 10310  002BDC  6FB0               	movwf	_inPipes& (0+255),b
 10311  002BDE  0EFE               	movlw	high _device_dsc
 10312  002BE0  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10313                           
 10314                           ; BSR set to: 0
 10315                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10316  002BE2  0E00               	movlw	0
 10317  002BE4  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10318  002BE6  0E12               	movlw	18
 10319  002BE8  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10320                           
 10321                           ;usb_device.c: 2076: break;
 10322  002BEA  0012               	return	
 10323  002BEC                     
 10324                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10325                           
 10326                           ; BSR set to: 0
 10327  002BEC  0104               	movlb	4	; () banked
 10328  002BEE  5132               	movf	50,w,b	;volatile
 10329  002BF0  A4D8               	btfss	status,2,c
 10330  002BF2  D040               	goto	l1734
 10331                           
 10332                           ; BSR set to: 4
 10333                           ;usb_device.c: 2082: {
 10334                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10335  002BF4  5132               	movf	50,w,b	;volatile
 10336  002BF6  0D02               	mullw	2
 10337  002BF8  0E3B               	movlw	low _USB_CD_Ptr
 10338  002BFA  24F3               	addwf	prodl,w,c
 10339  002BFC  6EF6               	movwf	tblptrl,c
 10340  002BFE  0EFC               	movlw	high _USB_CD_Ptr
 10341  002C00  20F4               	addwfc	prodh,w,c
 10342  002C02  6EF7               	movwf	tblptrh,c
 10343  002C04                     	if	0	;There are less than 3 active tblptr bytes
 10344  002C04                     	endif
 10345  002C04  0009               	tblrd		*+
 10346  002C06  CFF5 F0B0          	movff	tablat,_inPipes
 10347  002C0A  000A               	tblrd		*-
 10348  002C0C  CFF5 F0B1          	movff	tablat,_inPipes+1
 10349                           
 10350                           ; BSR set to: 4
 10351                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10352  002C10  0E02               	movlw	2
 10353  002C12  0100               	movlb	0	; () banked
 10354  002C14  25B0               	addwf	_inPipes& (0+255),w,b
 10355  002C16  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10356  002C18  0E00               	movlw	0
 10357  002C1A  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10358  002C1C  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10359  002C1E  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10360  002C22  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10361  002C26  6AF8               	clrf	tblptru,c
 10362  002C28  0E0E               	movlw	(high __ramtop+-1)
 10363  002C2A  64F7               	cpfsgt	tblptrh,c
 10364  002C2C  D003               	bra	u10577
 10365  002C2E  0008               	tblrd		*
 10366  002C30  50F5               	movf	tablat,w,c
 10367  002C32  D005               	bra	u10570
 10368  002C34                     u10577:
 10369  002C34  CFF6 FFE9          	movff	tblptrl,fsr0l
 10370  002C38  CFF7 FFEA          	movff	tblptrh,fsr0h
 10371  002C3C  50EF               	movf	indf0,w,c
 10372  002C3E                     u10570:
 10373  002C3E  0100               	movlb	0	; () banked
 10374  002C40  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10378  002C42  0E03               	movlw	3
 10379  002C44  25B0               	addwf	_inPipes& (0+255),w,b
 10380  002C46  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10381  002C48  0E00               	movlw	0
 10382  002C4A  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10383  002C4C  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10384  002C4E  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10385  002C52  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10386  002C56  6AF8               	clrf	tblptru,c
 10387  002C58  0E0E               	movlw	(high __ramtop+-1)
 10388  002C5A  64F7               	cpfsgt	tblptrh,c
 10389  002C5C  D003               	bra	u10587
 10390  002C5E  0008               	tblrd		*
 10391  002C60  50F5               	movf	tablat,w,c
 10392  002C62  D005               	bra	u10580
 10393  002C64                     u10587:
 10394  002C64  CFF6 FFE9          	movff	tblptrl,fsr0l
 10395  002C68  CFF7 FFEA          	movff	tblptrh,fsr0h
 10396  002C6C  50EF               	movf	indf0,w,c
 10397  002C6E                     u10580:
 10398  002C6E  0100               	movlb	0	; () banked
 10399  002C70  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10400                           
 10401                           ;usb_device.c: 2094: }
 10402  002C72  0012               	return	
 10403  002C74                     l1734:
 10404                           
 10405                           ;usb_device.c: 2095: else
 10406                           ;usb_device.c: 2096: {
 10407                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10408                           
 10409                           ; BSR set to: 0
 10410  002C74  0E00               	movlw	0
 10411  002C76  0100               	movlb	0	; () banked
 10412  002C78  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;usb_device.c: 2098: }
 10416                           ;usb_device.c: 2099: break;
 10417  002C7A  0012               	return	
 10418  002C7C                     
 10419                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10420                           
 10421                           ; BSR set to: 0
 10422  002C7C  0E03               	movlw	3
 10423  002C7E  0104               	movlb	4	; () banked
 10424  002C80  6132               	cpfslt	50,b	;volatile
 10425  002C82  D024               	goto	l1737
 10426                           
 10427                           ; BSR set to: 4
 10428                           ;usb_device.c: 2105: {
 10429                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10430  002C84  5132               	movf	50,w,b	;volatile
 10431  002C86  0D02               	mullw	2
 10432  002C88  0E35               	movlw	low _USB_SD_Ptr
 10433  002C8A  24F3               	addwf	prodl,w,c
 10434  002C8C  6EF6               	movwf	tblptrl,c
 10435  002C8E  0EFC               	movlw	high _USB_SD_Ptr
 10436  002C90  20F4               	addwfc	prodh,w,c
 10437  002C92  6EF7               	movwf	tblptrh,c
 10438  002C94                     	if	0	;There are less than 3 active tblptr bytes
 10439  002C94                     	endif
 10440  002C94  0009               	tblrd		*+
 10441  002C96  CFF5 F0B0          	movff	tablat,_inPipes
 10442  002C9A  000A               	tblrd		*-
 10443  002C9C  CFF5 F0B1          	movff	tablat,_inPipes+1
 10444                           
 10445                           ; BSR set to: 4
 10446                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10447  002CA0  C0B0  FFF6         	movff	_inPipes,tblptrl
 10448  002CA4  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10449  002CA8  6AF8               	clrf	tblptru,c
 10450  002CAA  0E0E               	movlw	(high __ramtop+-1)
 10451  002CAC  64F7               	cpfsgt	tblptrh,c
 10452  002CAE  D003               	bra	u10607
 10453  002CB0  0008               	tblrd		*
 10454  002CB2  50F5               	movf	tablat,w,c
 10455  002CB4  D005               	bra	u10600
 10456  002CB6                     u10607:
 10457  002CB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 10458  002CBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 10459  002CBE  50EF               	movf	indf0,w,c
 10460  002CC0                     u10600:
 10461  002CC0  0100               	movlb	0	; () banked
 10462  002CC2  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10463  002CC4  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10464  002CC6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10465  002CC8  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10466                           
 10467                           ;usb_device.c: 2110: }
 10468  002CCA  0012               	return	
 10469  002CCC                     l1737:
 10470                           
 10471                           ;usb_device.c: 2120: else
 10472                           ;usb_device.c: 2121: {
 10473                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10474                           
 10475                           ; BSR set to: 0
 10476  002CCC  0E00               	movlw	0
 10477  002CCE  0100               	movlb	0	; () banked
 10478  002CD0  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;usb_device.c: 2123: }
 10482                           ;usb_device.c: 2124: break;
 10483  002CD2  0012               	return	
 10484  002CD4                     
 10485                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10486                           
 10487                           ; BSR set to: 0
 10488  002CD4  0E00               	movlw	0
 10489  002CD6  0100               	movlb	0	; () banked
 10490  002CD8  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;usb_device.c: 2128: }
 10494                           
 10495                           ;usb_device.c: 2127: break;
 10496  002CDA  0012               	return	
 10497  002CDC                     l1730:
 10498                           
 10499                           ; BSR set to: 0
 10500                           
 10501                           ; BSR set to: 0
 10502  002CDC  0104               	movlb	4	; () banked
 10503  002CDE  5133               	movf	51,w,b	;volatile
 10504                           
 10505                           ; Switch size 1, requested type "space"
 10506                           ; Number of cases is 3, Range of values is 1 to 3
 10507                           ; switch strategies available:
 10508                           ; Name         Instructions Cycles
 10509                           ; simple_byte           10     6 (average)
 10510                           ;	Chosen strategy is simple_byte
 10511  002CE0  0A01               	xorlw	1	; case 1
 10512  002CE2  B4D8               	btfsc	status,2,c
 10513  002CE4  D779               	goto	l1731
 10514  002CE6  0A03               	xorlw	3	; case 2
 10515  002CE8  B4D8               	btfsc	status,2,c
 10516  002CEA  D780               	goto	l1733
 10517  002CEC  0A01               	xorlw	1	; case 3
 10518  002CEE  B4D8               	btfsc	status,2,c
 10519  002CF0  D7C5               	goto	l1736
 10520  002CF2  D7F0               	goto	l1739
 10521  002CF4                     __end_of_USBStdGetDscHandler:
 10522                           	opt stack 0
 10523                           tosu	equ	0xFFF
 10524                           tosh	equ	0xFFE
 10525                           tosl	equ	0xFFD
 10526                           pclath	equ	0xFFA
 10527                           tblptru	equ	0xFF8
 10528                           tblptrh	equ	0xFF7
 10529                           tblptrl	equ	0xFF6
 10530                           tablat	equ	0xFF5
 10531                           prodh	equ	0xFF4
 10532                           prodl	equ	0xFF3
 10533                           intcon	equ	0xFF2
 10534                           intcon2	equ	0xFF1
 10535                           intcon3	equ	0xFF0
 10536                           indf0	equ	0xFEF
 10537                           postinc0	equ	0xFEE
 10538                           plusw0	equ	0xFEB
 10539                           fsr0h	equ	0xFEA
 10540                           fsr0l	equ	0xFE9
 10541                           wreg	equ	0xFE8
 10542                           postinc1	equ	0xFE6
 10543                           postdec1	equ	0xFE5
 10544                           fsr1h	equ	0xFE2
 10545                           fsr1l	equ	0xFE1
 10546                           indf2	equ	0xFDF
 10547                           postinc2	equ	0xFDE
 10548                           postdec2	equ	0xFDD
 10549                           plusw2	equ	0xFDB
 10550                           fsr2h	equ	0xFDA
 10551                           fsr2l	equ	0xFD9
 10552                           status	equ	0xFD8
 10553                           
 10554 ;; *************** function _USBStdFeatureReqHandler *****************
 10555 ;; Defined at:
 10556 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;		None
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10561 ;;		 -> NULL(0), BDT(48), 
 10562 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10563 ;;		 -> UEP0(1), 
 10564 ;;  current_ep_d    1   52[BANK0 ] struct .
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  1    wreg      void 
 10567 ;; Registers used:
 10568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10575 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10577 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10578 ;;Total ram usage:        6 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:   15
 10581 ;; This function calls:
 10582 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10583 ;; This function is called by:
 10584 ;;		_USBCheckStdRequest
 10585 ;; This function uses a non-reentrant model
 10586 ;;
 10587                           
 10588                           	psect	text43
 10589  00135A                     __ptext43:
 10590                           	opt stack 0
 10591  00135A                     _USBStdFeatureReqHandler:
 10592                           	opt stack 8
 10593                           
 10594                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10595                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10596                           ;usb_device.c: 2778: unsigned char* pUEP;
 10597                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10598                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10599                           
 10600                           ;incstack = 0
 10601  00135A  0104               	movlb	4	; () banked
 10602  00135C  0532               	decf	50,w,b	;volatile
 10603  00135E  A4D8               	btfss	status,2,c
 10604  001360  D011               	goto	l1823
 10605                           
 10606                           ; BSR set to: 4
 10607  001362  5130               	movf	48,w,b	;volatile
 10608  001364  0B1F               	andlw	31
 10609  001366  0900               	iorlw	0
 10610  001368  A4D8               	btfss	status,2,c
 10611  00136A  D00C               	goto	l1823
 10612                           
 10613                           ; BSR set to: 4
 10614                           ;usb_device.c: 2818: {
 10615                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10616  00136C  0100               	movlb	0	; () banked
 10617  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10621  001370  0E03               	movlw	3
 10622  001372  0104               	movlb	4	; () banked
 10623  001374  1931               	xorwf	49,w,b	;volatile
 10624  001376  A4D8               	btfss	status,2,c
 10625  001378  D002               	goto	l1822
 10626                           
 10627                           ; BSR set to: 4
 10628                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10629  00137A  0E01               	movlw	1
 10630  00137C  D001               	goto	L5
 10631  00137E                     l1822:
 10632                           
 10633                           ;usb_device.c: 2822: else
 10634                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10635                           
 10636                           ; BSR set to: 1
 10637  00137E  0E00               	movlw	0
 10638  001380                     L5:
 10639  001380  0101               	movlb	1	; () banked
 10640  001382  6FE6               	movwf	_RemoteWakeup& (0+255),b
 10641  001384                     l1823:
 10642                           
 10643                           ;usb_device.c: 2824: }
 10644                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10645                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10646                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10647                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10648                           
 10649                           ; BSR set to: 1
 10650  001384  0104               	movlb	4	; () banked
 10651  001386  5132               	movf	50,w,b	;volatile
 10652  001388  A4D8               	btfss	status,2,c
 10653  00138A  0012               	return	
 10654                           
 10655                           ; BSR set to: 4
 10656  00138C  5130               	movf	48,w,b	;volatile
 10657  00138E  0B1F               	andlw	31
 10658  001390  0A02               	xorlw	2
 10659  001392  A4D8               	btfss	status,2,c
 10660  001394  0012               	return	
 10661                           
 10662                           ; BSR set to: 4
 10663  001396  5134               	movf	52,w,b	;volatile
 10664  001398  0B0F               	andlw	15
 10665  00139A  0900               	iorlw	0
 10666  00139C  B4D8               	btfsc	status,2,c
 10667  00139E  0012               	return	
 10668                           
 10669                           ; BSR set to: 4
 10670  0013A0  5134               	movf	52,w,b	;volatile
 10671  0013A2  0B0F               	andlw	15
 10672  0013A4  0100               	movlb	0	; () banked
 10673  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10674  0013A8  0E03               	movlw	3
 10675  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10676  0013AC  0012               	return	
 10677                           
 10678                           ; BSR set to: 0
 10679  0013AE  0E20               	movlw	32
 10680  0013B0  19CD               	xorwf	_USBDeviceState& (0+255),w,b
 10681  0013B2  A4D8               	btfss	status,2,c
 10682  0013B4  0012               	return	
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;usb_device.c: 2831: {
 10686                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10687  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10688                           
 10689                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10690  0013B8  0104               	movlb	4	; () banked
 10691  0013BA  BF34               	btfsc	52,7,b	;volatile
 10692  0013BC  D01C               	goto	l1825
 10693                           
 10694                           ; BSR set to: 4
 10695                           ;usb_device.c: 2838: {
 10696                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10697  0013BE  5134               	movf	52,w,b	;volatile
 10698  0013C0  0B0F               	andlw	15
 10699  0013C2  0100               	movlb	0	; () banked
 10700  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10701  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10702  0013C8  0D02               	mullw	2
 10703  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10704  0013CC  24F3               	addwf	prodl,w,c
 10705  0013CE  6ED9               	movwf	fsr2l,c
 10706  0013D0  0E03               	movlw	high _pBDTEntryOut
 10707  0013D2  20F4               	addwfc	prodh,w,c
 10708  0013D4  6EDA               	movwf	fsr2h,c
 10709  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10710  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10711                           
 10712                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10713  0013DE  0104               	movlb	4	; () banked
 10714  0013E0  5134               	movf	52,w,b	;volatile
 10715  0013E2  0B0F               	andlw	15
 10716  0013E4  0100               	movlb	0	; () banked
 10717  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10718  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10719  0013EA  0D01               	mullw	1
 10720  0013EC  0ECE               	movlw	low _ep_data_out
 10721  0013EE  24F3               	addwf	prodl,w,c
 10722  0013F0  6ED9               	movwf	fsr2l,c
 10723  0013F2  0E02               	movlw	high _ep_data_out
 10724  0013F4  D01C               	goto	L6
 10725  0013F6                     l1825:
 10726                           
 10727                           ;usb_device.c: 2842: else
 10728                           ;usb_device.c: 2843: {
 10729                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10730                           
 10731                           ; BSR set to: 0
 10732  0013F6  0104               	movlb	4	; () banked
 10733  0013F8  5134               	movf	52,w,b	;volatile
 10734  0013FA  0B0F               	andlw	15
 10735  0013FC  0100               	movlb	0	; () banked
 10736  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10737  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10738  001402  0D02               	mullw	2
 10739  001404  0EB6               	movlw	low _pBDTEntryIn
 10740  001406  24F3               	addwf	prodl,w,c
 10741  001408  6ED9               	movwf	fsr2l,c
 10742  00140A  0E00               	movlw	high _pBDTEntryIn
 10743  00140C  20F4               	addwfc	prodh,w,c
 10744  00140E  6EDA               	movwf	fsr2h,c
 10745  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10746  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10747                           
 10748                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10749  001418  0104               	movlb	4	; () banked
 10750  00141A  5134               	movf	52,w,b	;volatile
 10751  00141C  0B0F               	andlw	15
 10752  00141E  0100               	movlb	0	; () banked
 10753  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10754  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10755  001424  0D01               	mullw	1
 10756  001426  0ED1               	movlw	low _ep_data_in
 10757  001428  24F3               	addwf	prodl,w,c
 10758  00142A  6ED9               	movwf	fsr2l,c
 10759  00142C  0E02               	movlw	high _ep_data_in
 10760  00142E                     L6:
 10761  00142E  20F4               	addwfc	prodh,w,c
 10762  001430  6EDA               	movwf	fsr2h,c
 10763  001432  50DF               	movf	indf2,w,c
 10764  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;usb_device.c: 2846: }
 10768                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10769                           
 10770                           ; BSR set to: 0
 10771  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10772  001438  D002               	goto	l1827
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;usb_device.c: 2853: {
 10776                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10777  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10778                           
 10779                           ;usb_device.c: 2855: }
 10780  00143C  D001               	goto	l1828
 10781  00143E                     l1827:
 10782                           
 10783                           ; BSR set to: 0
 10784                           ;usb_device.c: 2856: else
 10785                           ;usb_device.c: 2857: {
 10786                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10787                           
 10788                           ; BSR set to: 0
 10789  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10790  001440                     l1828:
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;usb_device.c: 2859: }
 10794                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10795                           
 10796                           ; BSR set to: 0
 10797  001440  0104               	movlb	4	; () banked
 10798  001442  BF34               	btfsc	52,7,b	;volatile
 10799  001444  D00B               	goto	l1829
 10800                           
 10801                           ; BSR set to: 4
 10802                           ;usb_device.c: 2865: {
 10803                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10804  001446  5134               	movf	52,w,b	;volatile
 10805  001448  0B0F               	andlw	15
 10806  00144A  0100               	movlb	0	; () banked
 10807  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10808  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10809  001450  0D02               	mullw	2
 10810  001452  0E0E               	movlw	low _pBDTEntryOut
 10811  001454  24F3               	addwf	prodl,w,c
 10812  001456  6ED9               	movwf	fsr2l,c
 10813  001458  0E03               	movlw	high _pBDTEntryOut
 10814  00145A  D00B               	goto	L7
 10815  00145C                     l1829:
 10816                           
 10817                           ;usb_device.c: 2868: else
 10818                           ;usb_device.c: 2869: {
 10819                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10820                           
 10821                           ; BSR set to: 0
 10822  00145C  0104               	movlb	4	; () banked
 10823  00145E  5134               	movf	52,w,b	;volatile
 10824  001460  0B0F               	andlw	15
 10825  001462  0100               	movlb	0	; () banked
 10826  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10827  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10828  001468  0D02               	mullw	2
 10829  00146A  0EB6               	movlw	low _pBDTEntryIn
 10830  00146C  24F3               	addwf	prodl,w,c
 10831  00146E  6ED9               	movwf	fsr2l,c
 10832  001470  0E00               	movlw	high _pBDTEntryIn
 10833  001472                     L7:
 10834  001472  20F4               	addwfc	prodh,w,c
 10835  001474  6EDA               	movwf	fsr2h,c
 10836  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10837  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10838                           
 10839                           ; BSR set to: 0
 10840                           ;usb_device.c: 2871: }
 10841                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10842                           
 10843                           ; BSR set to: 0
 10844  00147E  0E03               	movlw	3
 10845  001480  0104               	movlb	4	; () banked
 10846  001482  1931               	xorwf	49,w,b	;volatile
 10847  001484  A4D8               	btfss	status,2,c
 10848  001486  D031               	goto	l1831
 10849                           
 10850                           ; BSR set to: 4
 10851                           ;usb_device.c: 2875: {
 10852                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10853  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10854  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10855  001490  0100               	movlb	0	; () banked
 10856  001492  AEDF               	btfss	indf2,7,c
 10857  001494  D01D               	goto	l1834
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;usb_device.c: 2877: {
 10861                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10862  001496  0104               	movlb	4	; () banked
 10863  001498  BF34               	btfsc	52,7,b	;volatile
 10864  00149A  D00B               	goto	l1833
 10865                           
 10866                           ; BSR set to: 4
 10867                           ;usb_device.c: 2881: {
 10868                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10869  00149C  5134               	movf	52,w,b	;volatile
 10870  00149E  0B0F               	andlw	15
 10871  0014A0  0100               	movlb	0	; () banked
 10872  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10873  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10874  0014A6  0D01               	mullw	1
 10875  0014A8  0ECE               	movlw	low _ep_data_out
 10876  0014AA  24F3               	addwf	prodl,w,c
 10877  0014AC  6ED9               	movwf	fsr2l,c
 10878  0014AE  0E02               	movlw	high _ep_data_out
 10879  0014B0  D00B               	goto	L8
 10880  0014B2                     l1833:
 10881                           
 10882                           ;usb_device.c: 2884: else
 10883                           ;usb_device.c: 2885: {
 10884                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10885                           
 10886                           ; BSR set to: 2
 10887  0014B2  0104               	movlb	4	; () banked
 10888  0014B4  5134               	movf	52,w,b	;volatile
 10889  0014B6  0B0F               	andlw	15
 10890  0014B8  0100               	movlb	0	; () banked
 10891  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10892  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10893  0014BE  0D01               	mullw	1
 10894  0014C0  0ED1               	movlw	low _ep_data_in
 10895  0014C2  24F3               	addwf	prodl,w,c
 10896  0014C4  6ED9               	movwf	fsr2l,c
 10897  0014C6  0E02               	movlw	high _ep_data_in
 10898  0014C8                     L8:
 10899  0014C8  20F4               	addwfc	prodh,w,c
 10900  0014CA  6EDA               	movwf	fsr2h,c
 10901  0014CC  0102               	movlb	2	; () banked
 10902  0014CE  82DF               	bsf	indf2,1,c
 10903  0014D0                     l1834:
 10904                           
 10905                           ;usb_device.c: 2887: }
 10906                           ;usb_device.c: 2888: }
 10907                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10908                           
 10909                           ; BSR set to: 2
 10910                           
 10911                           ; BSR set to: 2
 10912  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10913  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10914  0014D8  0E00               	movlw	0
 10915  0014DA  84DB               	bsf	plusw2,2,c
 10916                           
 10917                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10918  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10919  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10920  0014E4  0E00               	movlw	0
 10921  0014E6  8EDB               	bsf	plusw2,7,c
 10922                           
 10923                           ;usb_device.c: 2893: }
 10924  0014E8  0012               	return	
 10925  0014EA                     l1831:
 10926                           
 10927                           ;usb_device.c: 2894: else
 10928                           ;usb_device.c: 2895: {
 10929                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10930  0014EA  0E04               	movlw	4
 10931  0014EC  0100               	movlb	0	; () banked
 10932  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10936  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10937  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10938  0014F8  AEDF               	btfss	indf2,7,c
 10939  0014FA  D01B               	goto	l1836
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;usb_device.c: 2902: {
 10943                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10944  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10945  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10946  001504  0E7F               	movlw	127
 10947  001506  16DF               	andwf	indf2,f,c
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10951  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10952  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10953  001510  0E00               	movlw	0
 10954  001512  8CDB               	bsf	plusw2,6,c
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10958  001514  0E00               	movlw	0
 10959  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10960  001518  0E05               	movlw	5
 10961  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10962  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10963  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10964  001524  0E00               	movlw	0
 10965  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10966  001528  0E02               	movlw	2
 10967  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10968  00152C  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10969                           
 10970                           ;usb_device.c: 2908: }
 10971  001530  D006               	goto	l1837
 10972  001532                     l1836:
 10973                           
 10974                           ;usb_device.c: 2909: else
 10975                           ;usb_device.c: 2910: {
 10976                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10977  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10978  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10979  00153A  0E00               	movlw	0
 10980  00153C  8CDB               	bsf	plusw2,6,c
 10981  00153E                     l1837:
 10982                           
 10983                           ;usb_device.c: 2913: }
 10984                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10985  00153E  0E04               	movlw	4
 10986  001540  0100               	movlb	0	; () banked
 10987  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10988                           
 10989                           ; BSR set to: 0
 10990                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10991  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10992  001546  D006               	goto	u10820
 10993                           
 10994                           ; BSR set to: 0
 10995  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10996  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10997  001550  AEDF               	btfss	indf2,7,c
 10998  001552  D033               	goto	l1838
 10999  001554                     u10820:
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;usb_device.c: 2924: {
 11003                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11004  001554  0104               	movlb	4	; () banked
 11005  001556  BF34               	btfsc	52,7,b	;volatile
 11006  001558  D00B               	goto	l1841
 11007                           
 11008                           ; BSR set to: 4
 11009                           ;usb_device.c: 2926: {
 11010                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11011  00155A  5134               	movf	52,w,b	;volatile
 11012  00155C  0B0F               	andlw	15
 11013  00155E  0100               	movlb	0	; () banked
 11014  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11015  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11016  001564  0D01               	mullw	1
 11017  001566  0ECE               	movlw	low _ep_data_out
 11018  001568  24F3               	addwf	prodl,w,c
 11019  00156A  6ED9               	movwf	fsr2l,c
 11020  00156C  0E02               	movlw	high _ep_data_out
 11021  00156E  D00B               	goto	L9
 11022  001570                     l1841:
 11023                           
 11024                           ;usb_device.c: 2929: else
 11025                           ;usb_device.c: 2930: {
 11026                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11027                           
 11028                           ; BSR set to: 2
 11029  001570  0104               	movlb	4	; () banked
 11030  001572  5134               	movf	52,w,b	;volatile
 11031  001574  0B0F               	andlw	15
 11032  001576  0100               	movlb	0	; () banked
 11033  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11034  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11035  00157C  0D01               	mullw	1
 11036  00157E  0ED1               	movlw	low _ep_data_in
 11037  001580  24F3               	addwf	prodl,w,c
 11038  001582  6ED9               	movwf	fsr2l,c
 11039  001584  0E02               	movlw	high _ep_data_in
 11040  001586                     L9:
 11041  001586  20F4               	addwfc	prodh,w,c
 11042  001588  6EDA               	movwf	fsr2h,c
 11043  00158A  0102               	movlb	2	; () banked
 11044  00158C  92DF               	bcf	indf2,1,c
 11045                           
 11046                           ; BSR set to: 2
 11047                           ;usb_device.c: 2932: }
 11048                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11049                           
 11050                           ; BSR set to: 2
 11051  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11052  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11053  001596  0E3B               	movlw	59
 11054  001598  16DF               	andwf	indf2,f,c
 11055                           
 11056                           ; BSR set to: 2
 11057                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11058  00159A  0E00               	movlw	0
 11059  00159C  0100               	movlb	0	; () banked
 11060  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11061  0015A0  0E05               	movlw	5
 11062  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11063  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11064  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11065  0015AC  0E00               	movlw	0
 11066  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11067  0015B0  0E02               	movlw	2
 11068  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11069  0015B4  EC7B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11070                           
 11071                           ;usb_device.c: 2938: }
 11072  0015B8  D006               	goto	l1843
 11073  0015BA                     l1838:
 11074                           
 11075                           ;usb_device.c: 2939: else
 11076                           ;usb_device.c: 2940: {
 11077                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11078  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11079  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11080  0015C2  0E3B               	movlw	59
 11081  0015C4  16DF               	andwf	indf2,f,c
 11082  0015C6                     l1843:
 11083                           
 11084                           ;usb_device.c: 2943: }
 11085                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11086  0015C6  0104               	movlb	4	; () banked
 11087  0015C8  5134               	movf	52,w,b	;volatile
 11088  0015CA  0B0F               	andlw	15
 11089  0015CC  0100               	movlb	0	; () banked
 11090  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11091  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11092  0015D2  0D01               	mullw	1
 11093  0015D4  0E26               	movlw	38
 11094  0015D6  24F3               	addwf	prodl,w,c
 11095  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11096  0015DA  0E0F               	movlw	15
 11097  0015DC  20F4               	addwfc	prodh,w,c
 11098  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11102  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11103  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11104  0015E8  0EFE               	movlw	254
 11105  0015EA  16DF               	andwf	indf2,f,c
 11106                           
 11107                           ; BSR set to: 0
 11108  0015EC  0012               	return	
 11109  0015EE                     __end_of_USBStdFeatureReqHandler:
 11110                           	opt stack 0
 11111                           tosu	equ	0xFFF
 11112                           tosh	equ	0xFFE
 11113                           tosl	equ	0xFFD
 11114                           pclath	equ	0xFFA
 11115                           tblptru	equ	0xFF8
 11116                           tblptrh	equ	0xFF7
 11117                           tblptrl	equ	0xFF6
 11118                           tablat	equ	0xFF5
 11119                           prodh	equ	0xFF4
 11120                           prodl	equ	0xFF3
 11121                           intcon	equ	0xFF2
 11122                           intcon2	equ	0xFF1
 11123                           intcon3	equ	0xFF0
 11124                           indf0	equ	0xFEF
 11125                           postinc0	equ	0xFEE
 11126                           plusw0	equ	0xFEB
 11127                           fsr0h	equ	0xFEA
 11128                           fsr0l	equ	0xFE9
 11129                           wreg	equ	0xFE8
 11130                           postinc1	equ	0xFE6
 11131                           postdec1	equ	0xFE5
 11132                           fsr1h	equ	0xFE2
 11133                           fsr1l	equ	0xFE1
 11134                           indf2	equ	0xFDF
 11135                           postinc2	equ	0xFDE
 11136                           postdec2	equ	0xFDD
 11137                           plusw2	equ	0xFDB
 11138                           fsr2h	equ	0xFDA
 11139                           fsr2l	equ	0xFD9
 11140                           status	equ	0xFD8
 11141                           
 11142 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11143 ;; Defined at:
 11144 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11145 ;; Parameters:    Size  Location     Type
 11146 ;;  event           2   41[BANK0 ] enum E8362
 11147 ;;  pdata           2   43[BANK0 ] PTR void 
 11148 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11149 ;;  size            2   45[BANK0 ] unsigned int 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;		None
 11152 ;; Return value:  Size  Location     Type
 11153 ;;                  1    wreg      unsigned char 
 11154 ;; Registers used:
 11155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11161 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11163 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11164 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11165 ;;Total ram usage:        8 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; Hardware stack levels required when called:   14
 11168 ;; This function calls:
 11169 ;;		_CDCInitEP
 11170 ;;		_USBCheckCDCRequest
 11171 ;; This function is called by:
 11172 ;;		_USBDeviceTasks
 11173 ;;		_USBStdSetCfgHandler
 11174 ;;		_USBSuspend
 11175 ;;		_USBWakeFromSuspend
 11176 ;;		_USBCtrlTrfSetupHandler
 11177 ;;		_USBCheckStdRequest
 11178 ;;		_USBStdFeatureReqHandler
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text44
 11183  0050F6                     __ptext44:
 11184                           	opt stack 0
 11185  0050F6                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11186                           	opt stack 12
 11187                           
 11188                           ;usb_device_mgr.c: 106: switch( (int) event )
 11189                           
 11190                           ;incstack = 0
 11191  0050F6  D006               	goto	l1997
 11192  0050F8                     
 11193                           ;usb_device_mgr.c: 134: CDCInitEP();
 11194  0050F8  EC78  F027         	call	_CDCInitEP	;wreg free
 11195                           
 11196                           ;usb_device_mgr.c: 142: break;
 11197                           
 11198                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11199                           
 11200                           ;usb_device_mgr.c: 139: break;
 11201  0050FC  0012               	return	
 11202  0050FE                     
 11203                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11204  0050FE  ECD3  F020         	call	_USBCheckCDCRequest	;wreg free
 11205                           
 11206                           ;usb_device_mgr.c: 163: }
 11207                           
 11208                           ;usb_device_mgr.c: 162: break;
 11209                           
 11210                           ;usb_device_mgr.c: 161: default:
 11211                           
 11212                           ;usb_device_mgr.c: 159: break;
 11213                           
 11214                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11215                           
 11216                           ;usb_device_mgr.c: 156: break;
 11217                           
 11218                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11219                           
 11220                           ;usb_device_mgr.c: 153: break;
 11221  005102  0012               	return	
 11222  005104                     l1997:
 11223  005104  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11224  005108  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11225                           
 11226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11227                           ; Switch size 1, requested type "space"
 11228                           ; Number of cases is 2, Range of values is 0 to 127
 11229                           ; switch strategies available:
 11230                           ; Name         Instructions Cycles
 11231                           ; simple_byte            7     4 (average)
 11232                           ;	Chosen strategy is simple_byte
 11233  00510C  0100               	movlb	0	; () banked
 11234  00510E  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11235  005110  0A00               	xorlw	0	; case 0
 11236  005112  B4D8               	btfsc	status,2,c
 11237  005114  D004               	goto	l15439
 11238  005116  0A7F               	xorlw	127	; case 127
 11239  005118  A4D8               	btfss	status,2,c
 11240  00511A  0012               	return	
 11241  00511C  D018               	goto	l15441
 11242  00511E                     l15439:
 11243                           
 11244                           ; BSR set to: 0
 11245                           ; Switch size 1, requested type "space"
 11246                           ; Number of cases is 8, Range of values is 1 to 117
 11247                           ; switch strategies available:
 11248                           ; Name         Instructions Cycles
 11249                           ; simple_byte           25    13 (average)
 11250                           ;	Chosen strategy is simple_byte
 11251  00511E  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11252  005120  0A01               	xorlw	1	; case 1
 11253  005122  B4D8               	btfsc	status,2,c
 11254  005124  D7E9               	goto	l2003
 11255  005126  0A03               	xorlw	3	; case 2
 11256  005128  B4D8               	btfsc	status,2,c
 11257  00512A  0012               	return	
 11258  00512C  0A01               	xorlw	1	; case 3
 11259  00512E  B4D8               	btfsc	status,2,c
 11260  005130  D7E6               	goto	l2005
 11261  005132  0A06               	xorlw	6	; case 5
 11262  005134  B4D8               	btfsc	status,2,c
 11263  005136  0012               	return	
 11264  005138  0A77               	xorlw	119	; case 114
 11265  00513A  B4D8               	btfsc	status,2,c
 11266  00513C  0012               	return	
 11267  00513E  0A01               	xorlw	1	; case 115
 11268  005140  B4D8               	btfsc	status,2,c
 11269  005142  0012               	return	
 11270  005144  0A07               	xorlw	7	; case 116
 11271  005146  B4D8               	btfsc	status,2,c
 11272  005148  0012               	return	
 11273  00514A  0A01               	xorlw	1	; case 117
 11274  00514C  0012               	return	
 11275  00514E                     l15441:
 11276                           
 11277                           ; BSR set to: 0
 11278                           ; Switch size 1, requested type "space"
 11279                           ; Number of cases is 1, Range of values is 255 to 255
 11280                           ; switch strategies available:
 11281                           ; Name         Instructions Cycles
 11282                           ; simple_byte            4     3 (average)
 11283                           ;	Chosen strategy is simple_byte
 11284  00514E  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11285  005150  0AFF               	xorlw	255	; case 255
 11286  005152  0012               	return	
 11287  005154                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11288                           	opt stack 0
 11289                           tosu	equ	0xFFF
 11290                           tosh	equ	0xFFE
 11291                           tosl	equ	0xFFD
 11292                           pclath	equ	0xFFA
 11293                           tblptru	equ	0xFF8
 11294                           tblptrh	equ	0xFF7
 11295                           tblptrl	equ	0xFF6
 11296                           tablat	equ	0xFF5
 11297                           prodh	equ	0xFF4
 11298                           prodl	equ	0xFF3
 11299                           intcon	equ	0xFF2
 11300                           intcon2	equ	0xFF1
 11301                           intcon3	equ	0xFF0
 11302                           indf0	equ	0xFEF
 11303                           postinc0	equ	0xFEE
 11304                           plusw0	equ	0xFEB
 11305                           fsr0h	equ	0xFEA
 11306                           fsr0l	equ	0xFE9
 11307                           wreg	equ	0xFE8
 11308                           postinc1	equ	0xFE6
 11309                           postdec1	equ	0xFE5
 11310                           fsr1h	equ	0xFE2
 11311                           fsr1l	equ	0xFE1
 11312                           indf2	equ	0xFDF
 11313                           postinc2	equ	0xFDE
 11314                           postdec2	equ	0xFDD
 11315                           plusw2	equ	0xFDB
 11316                           fsr2h	equ	0xFDA
 11317                           fsr2l	equ	0xFD9
 11318                           status	equ	0xFD8
 11319                           
 11320 ;; *************** function _USBCheckCDCRequest *****************
 11321 ;; Defined at:
 11322 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;		None
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg, status,2, status,0
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11340 ;;Total ram usage:        0 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:   11
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text45
 11351  0041A6                     __ptext45:
 11352                           	opt stack 0
 11353  0041A6                     _USBCheckCDCRequest:
 11354                           	opt stack 14
 11355                           
 11356                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11357                           
 11358                           ;incstack = 0
 11359  0041A6  0104               	movlb	4	; () banked
 11360  0041A8  5130               	movf	48,w,b	;volatile
 11361  0041AA  0B1F               	andlw	31
 11362  0041AC  06E8               	decf	wreg,f,c
 11363  0041AE  A4D8               	btfss	status,2,c
 11364  0041B0  0012               	return	
 11365                           
 11366                           ; BSR set to: 4
 11367                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11368                           
 11369                           ; BSR set to: 4
 11370                           
 11371                           ; BSR set to: 4
 11372  0041B2  3930               	swapf	48,w,b	;volatile
 11373  0041B4  32E8               	rrcf	wreg,f,c
 11374  0041B6  0B03               	andlw	3
 11375  0041B8  06E8               	decf	wreg,f,c
 11376  0041BA  A4D8               	btfss	status,2,c
 11377  0041BC  0012               	return	
 11378                           
 11379                           ; BSR set to: 4
 11380                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11381                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11382                           
 11383                           ; BSR set to: 4
 11384                           
 11385                           ; BSR set to: 4
 11386  0041BE  5134               	movf	52,w,b	;volatile
 11387  0041C0  B4D8               	btfsc	status,2,c
 11388  0041C2  D037               	goto	l1899
 11389                           
 11390                           ; BSR set to: 4
 11391  0041C4  0534               	decf	52,w,b	;volatile
 11392  0041C6  A4D8               	btfss	status,2,c
 11393  0041C8  0012               	return	
 11394  0041CA  D033               	goto	l1899
 11395  0041CC                     
 11396                           ; BSR set to: 4
 11397                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11398                           
 11399                           ; BSR set to: 4
 11400  0041CC  0E77               	movlw	low _dummy_encapsulated_cmd_response
 11401  0041CE  0100               	movlb	0	; () banked
 11402  0041D0  6FB0               	movwf	_inPipes& (0+255),b
 11403  0041D2  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11404  0041D4  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11408  0041D6  0E00               	movlw	0
 11409  0041D8  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11410  0041DA  0E08               	movlw	8
 11411  0041DC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11415  0041DE  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11419  0041E0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11420                           
 11421                           ;usb_device_cdc.c: 178: break;
 11422  0041E2  0012               	return	
 11423  0041E4                     
 11424                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11425                           
 11426                           ; BSR set to: 0
 11427  0041E4  0E77               	movlw	low _dummy_encapsulated_cmd_response
 11428  0041E6  0100               	movlb	0	; () banked
 11429  0041E8  6FB0               	movwf	_inPipes& (0+255),b
 11430  0041EA  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11431  0041EC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11435  0041EE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11436                           
 11437                           ;usb_device_cdc.c: 183: break;
 11438  0041F0  0012               	return	
 11439  0041F2                     l1903:
 11440                           
 11441                           ; BSR set to: 4
 11442                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11443  0041F2  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11444  0041F6  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11445                           
 11446                           ; BSR set to: 4
 11447                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11448  0041FA  0E7F               	movlw	low _line_coding
 11449  0041FC  0101               	movlb	1	; () banked
 11450  0041FE  6FC9               	movwf	_outPipes& (0+255),b
 11451  004200  0E03               	movlw	high _line_coding
 11452  004202  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11453                           
 11454                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11455  004204  0E00               	movlw	0
 11456  004206  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11457  004208  0E00               	movlw	0
 11458  00420A  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11459                           
 11460                           ; BSR set to: 1
 11461                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11462  00420C  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11463                           
 11464                           ;usb_device_cdc.c: 192: break;
 11465  00420E  0012               	return	
 11466  004210                     
 11467                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11468                           
 11469                           ; BSR set to: 1
 11470  004210  0E7F               	movlw	low _line_coding
 11471  004212  0100               	movlb	0	; () banked
 11472  004214  6FB0               	movwf	_inPipes& (0+255),b
 11473  004216  0E03               	movlw	high _line_coding
 11474  004218  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11475                           
 11476                           ; BSR set to: 0
 11477  00421A  0E00               	movlw	0
 11478  00421C  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11479  00421E  0E07               	movlw	7
 11480  004220  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11481                           
 11482                           ; BSR set to: 0
 11483  004222  0EC1               	movlw	193
 11484  004224  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11485                           
 11486                           ;usb_device_cdc.c: 199: break;
 11487  004226  0012               	return	
 11488  004228                     l1905:
 11489                           
 11490                           ; BSR set to: 4
 11491                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11492  004228  C432 F1E1          	movff	1074,_control_signal_bitmap	;volatile
 11493                           
 11494                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11495  00422C  0100               	movlb	0	; () banked
 11496  00422E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;usb_device_cdc.c: 261: }
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;usb_device_cdc.c: 260: break;
 11503                           
 11504                           ;usb_device_cdc.c: 259: default:
 11505                           
 11506                           ;usb_device_cdc.c: 235: break;
 11507  004230  0012               	return	
 11508  004232                     l1899:
 11509                           
 11510                           ; BSR set to: 0
 11511  004232  0104               	movlb	4	; () banked
 11512  004234  5131               	movf	49,w,b	;volatile
 11513                           
 11514                           ; Switch size 1, requested type "space"
 11515                           ; Number of cases is 5, Range of values is 0 to 34
 11516                           ; switch strategies available:
 11517                           ; Name         Instructions Cycles
 11518                           ; simple_byte           16     9 (average)
 11519                           ;	Chosen strategy is simple_byte
 11520  004236  0A00               	xorlw	0	; case 0
 11521  004238  B4D8               	btfsc	status,2,c
 11522  00423A  D7C8               	goto	l1900
 11523  00423C  0A01               	xorlw	1	; case 1
 11524  00423E  B4D8               	btfsc	status,2,c
 11525  004240  D7D1               	goto	l1902
 11526  004242  0A21               	xorlw	33	; case 32
 11527  004244  B4D8               	btfsc	status,2,c
 11528  004246  D7D5               	goto	l1903
 11529  004248  0A01               	xorlw	1	; case 33
 11530  00424A  B4D8               	btfsc	status,2,c
 11531  00424C  D7E1               	goto	l1904
 11532  00424E  0A03               	xorlw	3	; case 34
 11533  004250  A4D8               	btfss	status,2,c
 11534  004252  0012               	return	
 11535  004254  D7E9               	goto	l1905
 11536  004256                     __end_of_USBCheckCDCRequest:
 11537                           	opt stack 0
 11538                           tosu	equ	0xFFF
 11539                           tosh	equ	0xFFE
 11540                           tosl	equ	0xFFD
 11541                           pclath	equ	0xFFA
 11542                           tblptru	equ	0xFF8
 11543                           tblptrh	equ	0xFF7
 11544                           tblptrl	equ	0xFF6
 11545                           tablat	equ	0xFF5
 11546                           prodh	equ	0xFF4
 11547                           prodl	equ	0xFF3
 11548                           intcon	equ	0xFF2
 11549                           intcon2	equ	0xFF1
 11550                           intcon3	equ	0xFF0
 11551                           indf0	equ	0xFEF
 11552                           postinc0	equ	0xFEE
 11553                           plusw0	equ	0xFEB
 11554                           fsr0h	equ	0xFEA
 11555                           fsr0l	equ	0xFE9
 11556                           wreg	equ	0xFE8
 11557                           postinc1	equ	0xFE6
 11558                           postdec1	equ	0xFE5
 11559                           fsr1h	equ	0xFE2
 11560                           fsr1l	equ	0xFE1
 11561                           indf2	equ	0xFDF
 11562                           postinc2	equ	0xFDE
 11563                           postdec2	equ	0xFDD
 11564                           plusw2	equ	0xFDB
 11565                           fsr2h	equ	0xFDA
 11566                           fsr2l	equ	0xFD9
 11567                           status	equ	0xFD8
 11568                           
 11569 ;; *************** function _CDCInitEP *****************
 11570 ;; Defined at:
 11571 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;		None
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;		None
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  1    wreg      void 
 11578 ;; Registers used:
 11579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/0
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11589 ;;Total ram usage:        0 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:   13
 11592 ;; This function calls:
 11593 ;;		_USBEnableEndpoint
 11594 ;;		_USBTransferOnePacket
 11595 ;; This function is called by:
 11596 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           	psect	text46
 11601  004EF0                     __ptext46:
 11602                           	opt stack 0
 11603  004EF0                     _CDCInitEP:
 11604                           	opt stack 12
 11605                           
 11606                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11607                           
 11608                           ;incstack = 0
 11609  004EF0  0E80               	movlw	128
 11610  004EF2  0103               	movlb	3	; () banked
 11611  004EF4  6F7F               	movwf	_line_coding& (0+255),b
 11612  004EF6  0E25               	movlw	37
 11613  004EF8  6F80               	movwf	(_line_coding+1)& (0+255),b
 11614  004EFA  0E00               	movlw	0
 11615  004EFC  6F81               	movwf	(_line_coding+2)& (0+255),b
 11616  004EFE  0E00               	movlw	0
 11617  004F00  6F82               	movwf	(_line_coding+3)& (0+255),b
 11618                           
 11619                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11620  004F02  0E00               	movlw	0
 11621  004F04  6F83               	movwf	(_line_coding+4)& (0+255),b
 11622                           
 11623                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11624  004F06  0E00               	movlw	0
 11625  004F08  6F84               	movwf	(_line_coding+5)& (0+255),b
 11626                           
 11627                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11628  004F0A  0E08               	movlw	8
 11629  004F0C  6F85               	movwf	(_line_coding+6)& (0+255),b
 11630                           
 11631                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11632  004F0E  0E00               	movlw	0
 11633  004F10  0100               	movlb	0	; () banked
 11634  004F12  6FC6               	movwf	_cdc_rx_len& (0+255),b
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11638  004F14  0E1A               	movlw	26
 11639  004F16  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11640  004F18  0E01               	movlw	1
 11641  004F1A  EC2A  F02C         	call	_USBEnableEndpoint
 11642                           
 11643                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11644  004F1E  0E1E               	movlw	30
 11645  004F20  0100               	movlb	0	; () banked
 11646  004F22  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11647  004F24  0E02               	movlw	2
 11648  004F26  EC2A  F02C         	call	_USBEnableEndpoint
 11649                           
 11650                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11651  004F2A  0E00               	movlw	0
 11652  004F2C  0100               	movlb	0	; () banked
 11653  004F2E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11654  004F30  0E00               	movlw	low _cdc_data_rx
 11655  004F32  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11656  004F34  0E05               	movlw	high _cdc_data_rx
 11657  004F36  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11658  004F38  0E40               	movlw	64
 11659  004F3A  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11660  004F3C  0E02               	movlw	2
 11661  004F3E  EC1B  F020         	call	_USBTransferOnePacket
 11662  004F42  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11663  004F46  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11664                           
 11665                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11666  004F4A  0E00               	movlw	0
 11667  004F4C  0101               	movlb	1	; () banked
 11668  004F4E  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11669  004F50  0E00               	movlw	0
 11670  004F52  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11671                           
 11672                           ; BSR set to: 1
 11673                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11674  004F54  0E00               	movlw	0
 11675  004F56  0100               	movlb	0	; () banked
 11676  004F58  6FC5               	movwf	_cdc_trf_state& (0+255),b
 11677                           
 11678                           ; BSR set to: 0
 11679  004F5A  0012               	return		;funcret
 11680  004F5C                     __end_of_CDCInitEP:
 11681                           	opt stack 0
 11682                           tosu	equ	0xFFF
 11683                           tosh	equ	0xFFE
 11684                           tosl	equ	0xFFD
 11685                           pclath	equ	0xFFA
 11686                           tblptru	equ	0xFF8
 11687                           tblptrh	equ	0xFF7
 11688                           tblptrl	equ	0xFF6
 11689                           tablat	equ	0xFF5
 11690                           prodh	equ	0xFF4
 11691                           prodl	equ	0xFF3
 11692                           intcon	equ	0xFF2
 11693                           intcon2	equ	0xFF1
 11694                           intcon3	equ	0xFF0
 11695                           indf0	equ	0xFEF
 11696                           postinc0	equ	0xFEE
 11697                           plusw0	equ	0xFEB
 11698                           fsr0h	equ	0xFEA
 11699                           fsr0l	equ	0xFE9
 11700                           wreg	equ	0xFE8
 11701                           postinc1	equ	0xFE6
 11702                           postdec1	equ	0xFE5
 11703                           fsr1h	equ	0xFE2
 11704                           fsr1l	equ	0xFE1
 11705                           indf2	equ	0xFDF
 11706                           postinc2	equ	0xFDE
 11707                           postdec2	equ	0xFDD
 11708                           plusw2	equ	0xFDB
 11709                           fsr2h	equ	0xFDA
 11710                           fsr2l	equ	0xFD9
 11711                           status	equ	0xFD8
 11712                           
 11713 ;; *************** function _USBEnableEndpoint *****************
 11714 ;; Defined at:
 11715 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;  ep              1    wreg     unsigned char 
 11718 ;;  options         1   37[BANK0 ] unsigned char 
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;  ep              1   40[BANK0 ] unsigned char 
 11721 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11722 ;;		 -> UEP0(1), 
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  1    wreg      void 
 11725 ;; Registers used:
 11726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11732 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11733 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11735 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11736 ;;Total ram usage:        4 bytes
 11737 ;; Hardware stack levels used:    1
 11738 ;; Hardware stack levels required when called:   12
 11739 ;; This function calls:
 11740 ;;		_USBConfigureEndpoint
 11741 ;; This function is called by:
 11742 ;;		_CDCInitEP
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           	psect	text47
 11747  005854                     __ptext47:
 11748                           	opt stack 0
 11749  005854                     _USBEnableEndpoint:
 11750                           	opt stack 12
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;incstack = 0
 11754                           ;USBEnableEndpoint@ep stored from wreg
 11755  005854  0100               	movlb	0	; () banked
 11756  005856  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11757                           
 11758                           ;usb_device.c: 898: unsigned char* p;
 11759                           ;usb_device.c: 902: if(options & 0x04)
 11760  005858  0100               	movlb	0	; () banked
 11761  00585A  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11762  00585C  D005               	goto	l1640
 11763                           
 11764                           ; BSR set to: 0
 11765                           ;usb_device.c: 903: {
 11766                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11767  00585E  0E00               	movlw	0
 11768  005860  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11769  005862  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11770  005864  ECBD  F023         	call	_USBConfigureEndpoint
 11771  005868                     l1640:
 11772                           
 11773                           ;usb_device.c: 905: }
 11774                           ;usb_device.c: 906: if(options & 0x02)
 11775  005868  0100               	movlb	0	; () banked
 11776  00586A  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11777  00586C  D005               	goto	l1641
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;usb_device.c: 907: {
 11781                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11782  00586E  0E01               	movlw	1
 11783  005870  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11784  005872  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11785  005874  ECBD  F023         	call	_USBConfigureEndpoint
 11786  005878                     l1641:
 11787                           
 11788                           ;usb_device.c: 909: }
 11789                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11790  005878  0100               	movlb	0	; () banked
 11791  00587A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11792  00587C  0D01               	mullw	1
 11793  00587E  0E26               	movlw	38
 11794  005880  24F3               	addwf	prodl,w,c
 11795  005882  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11796  005884  0E0F               	movlw	15
 11797  005886  20F4               	addwfc	prodh,w,c
 11798  005888  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;usb_device.c: 919: *p = options;
 11802  00588A  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11803  00588E  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11804  005892  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11805                           
 11806                           ; BSR set to: 0
 11807  005896  0012               	return		;funcret
 11808  005898                     __end_of_USBEnableEndpoint:
 11809                           	opt stack 0
 11810                           tosu	equ	0xFFF
 11811                           tosh	equ	0xFFE
 11812                           tosl	equ	0xFFD
 11813                           pclath	equ	0xFFA
 11814                           tblptru	equ	0xFF8
 11815                           tblptrh	equ	0xFF7
 11816                           tblptrl	equ	0xFF6
 11817                           tablat	equ	0xFF5
 11818                           prodh	equ	0xFF4
 11819                           prodl	equ	0xFF3
 11820                           intcon	equ	0xFF2
 11821                           intcon2	equ	0xFF1
 11822                           intcon3	equ	0xFF0
 11823                           indf0	equ	0xFEF
 11824                           postinc0	equ	0xFEE
 11825                           plusw0	equ	0xFEB
 11826                           fsr0h	equ	0xFEA
 11827                           fsr0l	equ	0xFE9
 11828                           wreg	equ	0xFE8
 11829                           postinc1	equ	0xFE6
 11830                           postdec1	equ	0xFE5
 11831                           fsr1h	equ	0xFE2
 11832                           fsr1l	equ	0xFE1
 11833                           indf2	equ	0xFDF
 11834                           postinc2	equ	0xFDE
 11835                           postdec2	equ	0xFDD
 11836                           plusw2	equ	0xFDB
 11837                           fsr2h	equ	0xFDA
 11838                           fsr2l	equ	0xFD9
 11839                           status	equ	0xFD8
 11840                           
 11841 ;; *************** function _USBConfigureEndpoint *****************
 11842 ;; Defined at:
 11843 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;  EPNum           1    wreg     unsigned char 
 11846 ;;  direction       1   29[BANK0 ] unsigned char 
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11849 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11850 ;;		 -> BDT(48), 
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  1    wreg      void 
 11853 ;; Registers used:
 11854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 0/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11860 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11861 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11862 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11863 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11864 ;;Total ram usage:        8 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; Hardware stack levels required when called:   11
 11867 ;; This function calls:
 11868 ;;		Nothing
 11869 ;; This function is called by:
 11870 ;;		_USBEnableEndpoint
 11871 ;; This function uses a non-reentrant model
 11872 ;;
 11873                           
 11874                           	psect	text48
 11875  00477A                     __ptext48:
 11876                           	opt stack 0
 11877  00477A                     _USBConfigureEndpoint:
 11878                           	opt stack 12
 11879                           
 11880                           ; BSR set to: 0
 11881                           ;incstack = 0
 11882                           ;USBConfigureEndpoint@EPNum stored from wreg
 11883  00477A  0100               	movlb	0	; () banked
 11884  00477C  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11885                           
 11886                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11887                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11888  00477E  0E00               	movlw	0
 11889  004780  0100               	movlb	0	; () banked
 11890  004782  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11891  004784  0E04               	movlw	4
 11892  004786  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11896  004788  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11897  00478A  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11898  00478C  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11899  00478E  90D8               	bcf	status,0,c
 11900  004790  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11901  004792  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11902  004794  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11903  004796  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11904  004798  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11905  00479A  90D8               	bcf	status,0,c
 11906  00479C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11907  00479E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11908  0047A0  90D8               	bcf	status,0,c
 11909  0047A2  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11910  0047A4  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11911  0047A6  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11912  0047A8  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11913  0047AA  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11914  0047AC  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11915  0047AE  90D8               	bcf	status,0,c
 11916  0047B0  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11917  0047B2  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11918  0047B4  90D8               	bcf	status,0,c
 11919  0047B6  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11920  0047B8  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11921  0047BA  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11922  0047BC  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11923  0047BE  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11924  0047C0  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11928  0047C2  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11929  0047C6  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11930  0047CA  9EDF               	bcf	indf2,7,c
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;usb_device.c: 1575: if(direction == 0)
 11934  0047CC  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11935  0047CE  A4D8               	btfss	status,2,c
 11936  0047D0  D007               	goto	l1676
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;usb_device.c: 1576: {
 11940                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11941  0047D2  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11942  0047D4  0D02               	mullw	2
 11943  0047D6  0E0E               	movlw	low _pBDTEntryOut
 11944  0047D8  24F3               	addwf	prodl,w,c
 11945  0047DA  6ED9               	movwf	fsr2l,c
 11946  0047DC  0E03               	movlw	high _pBDTEntryOut
 11947  0047DE  D006               	goto	L10
 11948  0047E0                     l1676:
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;usb_device.c: 1579: else
 11952                           ;usb_device.c: 1580: {
 11953                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11954                           
 11955                           ; BSR set to: 0
 11956  0047E0  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11957  0047E2  0D02               	mullw	2
 11958  0047E4  0EB6               	movlw	low _pBDTEntryIn
 11959  0047E6  24F3               	addwf	prodl,w,c
 11960  0047E8  6ED9               	movwf	fsr2l,c
 11961  0047EA  0E00               	movlw	high _pBDTEntryIn
 11962  0047EC                     L10:
 11963  0047EC  20F4               	addwfc	prodh,w,c
 11964  0047EE  6EDA               	movwf	fsr2h,c
 11965  0047F0  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11966  0047F4  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;usb_device.c: 1582: }
 11970                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11971                           
 11972                           ; BSR set to: 0
 11973  0047F8  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11974  0047FC  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11975  004800  9CDF               	bcf	indf2,6,c
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11979  004802  EE20 F004          	lfsr	2,4
 11980  004806  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11981  004808  26D9               	addwf	fsr2l,f,c
 11982  00480A  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11983  00480C  22DA               	addwfc	fsr2h,f,c
 11984  00480E  8CDF               	bsf	indf2,6,c
 11985                           
 11986                           ; BSR set to: 0
 11987  004810  0012               	return		;funcret
 11988  004812                     __end_of_USBConfigureEndpoint:
 11989                           	opt stack 0
 11990                           tosu	equ	0xFFF
 11991                           tosh	equ	0xFFE
 11992                           tosl	equ	0xFFD
 11993                           pclath	equ	0xFFA
 11994                           tblptru	equ	0xFF8
 11995                           tblptrh	equ	0xFF7
 11996                           tblptrl	equ	0xFF6
 11997                           tablat	equ	0xFF5
 11998                           prodh	equ	0xFF4
 11999                           prodl	equ	0xFF3
 12000                           intcon	equ	0xFF2
 12001                           intcon2	equ	0xFF1
 12002                           intcon3	equ	0xFF0
 12003                           indf0	equ	0xFEF
 12004                           postinc0	equ	0xFEE
 12005                           plusw0	equ	0xFEB
 12006                           fsr0h	equ	0xFEA
 12007                           fsr0l	equ	0xFE9
 12008                           wreg	equ	0xFE8
 12009                           postinc1	equ	0xFE6
 12010                           postdec1	equ	0xFE5
 12011                           fsr1h	equ	0xFE2
 12012                           fsr1l	equ	0xFE1
 12013                           indf2	equ	0xFDF
 12014                           postinc2	equ	0xFDE
 12015                           postdec2	equ	0xFDD
 12016                           plusw2	equ	0xFDB
 12017                           fsr2h	equ	0xFDA
 12018                           fsr2l	equ	0xFD9
 12019                           status	equ	0xFD8
 12020                           
 12021 ;; *************** function _USBCtrlTrfOutHandler *****************
 12022 ;; Defined at:
 12023 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;		None
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;		None
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      void 
 12030 ;; Registers used:
 12031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12041 ;;Total ram usage:        0 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:   13
 12044 ;; This function calls:
 12045 ;;		_USBCtrlTrfRxService
 12046 ;; This function is called by:
 12047 ;;		_USBCtrlEPService
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text49
 12052  004FC8                     __ptext49:
 12053                           	opt stack 0
 12054  004FC8                     _USBCtrlTrfOutHandler:
 12055                           	opt stack 12
 12056                           
 12057                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;incstack = 0
 12061  004FC8  0E02               	movlw	2
 12062  004FCA  0100               	movlb	0	; () banked
 12063  004FCC  19CB               	xorwf	_controlTransferState& (0+255),w,b
 12064  004FCE  A4D8               	btfss	status,2,c
 12065  004FD0  D003               	goto	l1782
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;usb_device.c: 2558: {
 12069                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12070  004FD2  EC7A  F016         	call	_USBCtrlTrfRxService	;wreg free
 12071                           
 12072                           ;usb_device.c: 2560: }
 12073  004FD6  0012               	return	
 12074  004FD8                     l1782:
 12075                           
 12076                           ;usb_device.c: 2561: else
 12077                           ;usb_device.c: 2562: {
 12078                           ;usb_device.c: 2565: controlTransferState = 0;
 12079  004FD8  0E00               	movlw	0
 12080  004FDA  0100               	movlb	0	; () banked
 12081  004FDC  6FCB               	movwf	_controlTransferState& (0+255),b
 12082                           
 12083                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12084  004FDE  0101               	movlb	1	; () banked
 12085  004FE0  51E4               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12086  004FE2  A4D8               	btfss	status,2,c
 12087  004FE4  D020               	goto	l1784
 12088                           
 12089                           ; BSR set to: 1
 12090                           ;usb_device.c: 2573: {
 12091                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12092  004FE6  0100               	movlb	0	; () banked
 12093  004FE8  EE20 F001          	lfsr	2,1
 12094  004FEC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12095  004FEE  26D9               	addwf	fsr2l,f,c
 12096  004FF0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12097  004FF2  22DA               	addwfc	fsr2h,f,c
 12098  004FF4  0E08               	movlw	8
 12099  004FF6  6EDF               	movwf	indf2,c
 12100                           
 12101                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12102  004FF8  EE20 F002          	lfsr	2,2
 12103  004FFC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12104  004FFE  26D9               	addwf	fsr2l,f,c
 12105  005000  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12106  005002  22DA               	addwfc	fsr2h,f,c
 12107  005004  0E30               	movlw	48
 12108  005006  6EDE               	movwf	postinc2,c
 12109  005008  0E04               	movlw	4
 12110  00500A  6EDD               	movwf	postdec2,c
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12114  00500C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12115  005010  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12116  005014  0E0C               	movlw	12
 12117  005016  6EDF               	movwf	indf2,c
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12121  005018  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12122  00501C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12123  005020  0E00               	movlw	0
 12124  005022  8EDB               	bsf	plusw2,7,c
 12125                           
 12126                           ;usb_device.c: 2578: }
 12127  005024  0012               	return	
 12128  005026                     l1784:
 12129                           
 12130                           ;usb_device.c: 2579: else
 12131                           ;usb_device.c: 2580: {
 12132                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12133                           
 12134                           ; BSR set to: 0
 12135  005026  0E00               	movlw	0
 12136  005028  0101               	movlb	1	; () banked
 12137  00502A  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12138                           
 12139                           ; BSR set to: 1
 12140  00502C  0012               	return	
 12141  00502E                     __end_of_USBCtrlTrfOutHandler:
 12142                           	opt stack 0
 12143                           tosu	equ	0xFFF
 12144                           tosh	equ	0xFFE
 12145                           tosl	equ	0xFFD
 12146                           pclath	equ	0xFFA
 12147                           tblptru	equ	0xFF8
 12148                           tblptrh	equ	0xFF7
 12149                           tblptrl	equ	0xFF6
 12150                           tablat	equ	0xFF5
 12151                           prodh	equ	0xFF4
 12152                           prodl	equ	0xFF3
 12153                           intcon	equ	0xFF2
 12154                           intcon2	equ	0xFF1
 12155                           intcon3	equ	0xFF0
 12156                           indf0	equ	0xFEF
 12157                           postinc0	equ	0xFEE
 12158                           plusw0	equ	0xFEB
 12159                           fsr0h	equ	0xFEA
 12160                           fsr0l	equ	0xFE9
 12161                           wreg	equ	0xFE8
 12162                           postinc1	equ	0xFE6
 12163                           postdec1	equ	0xFE5
 12164                           fsr1h	equ	0xFE2
 12165                           fsr1l	equ	0xFE1
 12166                           indf2	equ	0xFDF
 12167                           postinc2	equ	0xFDE
 12168                           postdec2	equ	0xFDD
 12169                           plusw2	equ	0xFDB
 12170                           fsr2h	equ	0xFDA
 12171                           fsr2l	equ	0xFD9
 12172                           status	equ	0xFD8
 12173                           
 12174 ;; *************** function _USBCtrlTrfRxService *****************
 12175 ;; Defined at:
 12176 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12177 ;; Parameters:    Size  Location     Type
 12178 ;;		None
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12181 ;;  i               1   29[BANK0 ] unsigned char 
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12192 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12194 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12195 ;;Total ram usage:        2 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:   12
 12198 ;; This function calls:
 12199 ;;		_USBCtrlEPAllowStatusStage
 12200 ;; This function is called by:
 12201 ;;		_USBCtrlTrfOutHandler
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           	psect	text50
 12206  002CF4                     __ptext50:
 12207                           	opt stack 0
 12208  002CF4                     _USBCtrlTrfRxService:
 12209                           	opt stack 12
 12210                           
 12211                           ;usb_device.c: 1872: uint8_t byteToRead;
 12212                           ;usb_device.c: 1873: uint8_t i;
 12213                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12214                           
 12215                           ;incstack = 0
 12216  002CF4  0100               	movlb	0	; () banked
 12217  002CF6  EE20 F001          	lfsr	2,1
 12218  002CFA  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12219  002CFC  26D9               	addwf	fsr2l,f,c
 12220  002CFE  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12221  002D00  22DA               	addwfc	fsr2h,f,c
 12222  002D02  50DF               	movf	indf2,w,c
 12223  002D04  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12224                           
 12225                           ; BSR set to: 0
 12226                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12227  002D06  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12228  002D08  0101               	movlb	1	; () banked
 12229  002D0A  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12230  002D0C  0E00               	movlw	0
 12231  002D0E  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12232  002D10  A0D8               	btfss	status,0,c
 12233                           
 12234                           ; BSR set to: 1
 12235                           ;usb_device.c: 1884: {
 12236                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12237  002D12  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12238                           
 12239                           ; BSR set to: 1
 12240                           ;usb_device.c: 1886: }
 12241                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12242                           
 12243                           ; BSR set to: 1
 12244  002D16  0100               	movlb	0	; () banked
 12245  002D18  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12246  002D1A  0101               	movlb	1	; () banked
 12247  002D1C  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12248  002D1E  0E00               	movlw	0
 12249  002D20  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12250                           
 12251                           ; BSR set to: 1
 12252                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12253  002D22  0E00               	movlw	0
 12254  002D24  0100               	movlb	0	; () banked
 12255  002D26  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12256  002D28  D013               	goto	l1710
 12257  002D2A                     
 12258                           ; BSR set to: 0
 12259                           ;usb_device.c: 1893: {
 12260                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12261                           
 12262                           ; BSR set to: 0
 12263  002D2A  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12264  002D2C  0D01               	mullw	1
 12265  002D2E  0E38               	movlw	56
 12266  002D30  24F3               	addwf	prodl,w,c
 12267  002D32  6ED9               	movwf	fsr2l,c
 12268  002D34  0E04               	movlw	4
 12269  002D36  20F4               	addwfc	prodh,w,c
 12270  002D38  6EDA               	movwf	fsr2h,c
 12271  002D3A  C1C9  FFE1         	movff	_outPipes,fsr1l
 12272  002D3E  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12273  002D42  CFDF FFE7          	movff	indf2,indf1
 12274                           
 12275                           ; BSR set to: 0
 12276  002D46  0101               	movlb	1	; () banked
 12277  002D48  4BC9               	infsnz	_outPipes& (0+255),f,b
 12278  002D4A  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12279                           
 12280                           ; BSR set to: 1
 12281  002D4C  0100               	movlb	0	; () banked
 12282  002D4E  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12283  002D50                     l1710:
 12284                           
 12285                           ; BSR set to: 0
 12286                           
 12287                           ; BSR set to: 0
 12288  002D50  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12289  002D52  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12290  002D54  A0D8               	btfss	status,0,c
 12291  002D56  D7E9               	goto	l1711
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;usb_device.c: 1895: }
 12295                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12296                           
 12297                           ; BSR set to: 0
 12298  002D58  0101               	movlb	1	; () banked
 12299  002D5A  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12300  002D5C  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12301  002D5E  B4D8               	btfsc	status,2,c
 12302  002D60  D033               	goto	l1713
 12303                           
 12304                           ; BSR set to: 1
 12305                           ;usb_device.c: 1900: {
 12306                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12307  002D62  0100               	movlb	0	; () banked
 12308  002D64  EE20 F001          	lfsr	2,1
 12309  002D68  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12310  002D6A  26D9               	addwf	fsr2l,f,c
 12311  002D6C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12312  002D6E  22DA               	addwfc	fsr2h,f,c
 12313  002D70  0E08               	movlw	8
 12314  002D72  6EDF               	movwf	indf2,c
 12315                           
 12316                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12317  002D74  EE20 F002          	lfsr	2,2
 12318  002D78  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12319  002D7A  26D9               	addwf	fsr2l,f,c
 12320  002D7C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12321  002D7E  22DA               	addwfc	fsr2h,f,c
 12322  002D80  0E38               	movlw	56
 12323  002D82  6EDE               	movwf	postinc2,c
 12324  002D84  0E04               	movlw	4
 12325  002D86  6EDD               	movwf	postdec2,c
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12329  002D88  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12330  002D8C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12331  002D90  BCDF               	btfsc	indf2,6,c
 12332  002D92  D00D               	goto	l1714
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;usb_device.c: 1904: {
 12336                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12337  002D94  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12338  002D98  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12339  002D9C  0E48               	movlw	72
 12340  002D9E  6EDF               	movwf	indf2,c
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12344  002DA0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12345  002DA4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12346  002DA8  0E00               	movlw	0
 12347  002DAA  8EDB               	bsf	plusw2,7,c
 12348                           
 12349                           ;usb_device.c: 1907: }
 12350  002DAC  0012               	return	
 12351  002DAE                     l1714:
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;usb_device.c: 1908: else
 12355                           ;usb_device.c: 1909: {
 12356                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12357                           
 12358                           ; BSR set to: 0
 12359  002DAE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12360  002DB2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12361  002DB6  0E08               	movlw	8
 12362  002DB8  6EDF               	movwf	indf2,c
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12366  002DBA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12367  002DBE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12368  002DC2  0E00               	movlw	0
 12369  002DC4  8EDB               	bsf	plusw2,7,c
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;usb_device.c: 1912: }
 12373                           ;usb_device.c: 1913: }
 12374  002DC6  0012               	return	
 12375  002DC8                     l1713:
 12376                           
 12377                           ;usb_device.c: 1914: else
 12378                           ;usb_device.c: 1915: {
 12379                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12380                           
 12381                           ; BSR set to: 0
 12382  002DC8  0100               	movlb	0	; () banked
 12383  002DCA  EE20 F001          	lfsr	2,1
 12384  002DCE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12385  002DD0  26D9               	addwf	fsr2l,f,c
 12386  002DD2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12387  002DD4  22DA               	addwfc	fsr2h,f,c
 12388  002DD6  0E08               	movlw	8
 12389  002DD8  6EDF               	movwf	indf2,c
 12390                           
 12391                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12392  002DDA  EE20 F002          	lfsr	2,2
 12393  002DDE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12394  002DE0  26D9               	addwf	fsr2l,f,c
 12395  002DE2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12396  002DE4  22DA               	addwfc	fsr2h,f,c
 12397  002DE6  0E30               	movlw	48
 12398  002DE8  6EDE               	movwf	postinc2,c
 12399  002DEA  0E04               	movlw	4
 12400  002DEC  6EDD               	movwf	postdec2,c
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12404  002DEE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12405  002DF2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12406  002DF6  0E04               	movlw	4
 12407  002DF8  6EDF               	movwf	indf2,c
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12411  002DFA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12412  002DFE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12413  002E02  0E00               	movlw	0
 12414  002E04  8EDB               	bsf	plusw2,7,c
 12415                           
 12416                           ; BSR set to: 0
 12417                           ;usb_device.c: 1944: }
 12418                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12419                           
 12420                           ; BSR set to: 0
 12421  002E06  0101               	movlb	1	; () banked
 12422  002E08  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12426  002E0A  0100               	movlb	0	; () banked
 12427  002E0C  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12428  002E0E  A4D8               	btfss	status,2,c
 12429  002E10  0012               	return	
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;usb_device.c: 1960: {
 12433                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12434  002E12  EC61  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12435  002E16  0012               	return	
 12436  002E18                     __end_of_USBCtrlTrfRxService:
 12437                           	opt stack 0
 12438                           tosu	equ	0xFFF
 12439                           tosh	equ	0xFFE
 12440                           tosl	equ	0xFFD
 12441                           pclath	equ	0xFFA
 12442                           tblptru	equ	0xFF8
 12443                           tblptrh	equ	0xFF7
 12444                           tblptrl	equ	0xFF6
 12445                           tablat	equ	0xFF5
 12446                           prodh	equ	0xFF4
 12447                           prodl	equ	0xFF3
 12448                           intcon	equ	0xFF2
 12449                           intcon2	equ	0xFF1
 12450                           intcon3	equ	0xFF0
 12451                           indf0	equ	0xFEF
 12452                           postinc0	equ	0xFEE
 12453                           plusw0	equ	0xFEB
 12454                           fsr0h	equ	0xFEA
 12455                           fsr0l	equ	0xFE9
 12456                           wreg	equ	0xFE8
 12457                           indf1	equ	0xFE7
 12458                           postinc1	equ	0xFE6
 12459                           postdec1	equ	0xFE5
 12460                           fsr1h	equ	0xFE2
 12461                           fsr1l	equ	0xFE1
 12462                           indf2	equ	0xFDF
 12463                           postinc2	equ	0xFDE
 12464                           postdec2	equ	0xFDD
 12465                           plusw2	equ	0xFDB
 12466                           fsr2h	equ	0xFDA
 12467                           fsr2l	equ	0xFD9
 12468                           status	equ	0xFD8
 12469                           
 12470 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12471 ;; Defined at:
 12472 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;		None
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;		None
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  1    wreg      void 
 12479 ;; Registers used:
 12480 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12490 ;;Total ram usage:        0 bytes
 12491 ;; Hardware stack levels used:    1
 12492 ;; Hardware stack levels required when called:   11
 12493 ;; This function calls:
 12494 ;;		Nothing
 12495 ;; This function is called by:
 12496 ;;		_USBDeviceTasks
 12497 ;;		_USBCtrlEPServiceComplete
 12498 ;;		_USBCtrlTrfRxService
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text51
 12503  003AC2                     __ptext51:
 12504                           	opt stack 0
 12505  003AC2                     _USBCtrlEPAllowStatusStage:
 12506                           	opt stack 12
 12507                           
 12508                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12509                           
 12510                           ;incstack = 0
 12511  003AC2  0100               	movlb	0	; () banked
 12512  003AC4  51C7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12513  003AC6  A4D8               	btfss	status,2,c
 12514  003AC8  0012               	return	
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;usb_device.c: 1442: {
 12518                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12519  003ACA  0E01               	movlw	1
 12520  003ACC  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12521                           
 12522                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12523  003ACE  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12524  003AD0  A4D8               	btfss	status,2,c
 12525  003AD2  0012               	return	
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;usb_device.c: 1445: {
 12529                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12530  003AD4  0E01               	movlw	1
 12531  003AD6  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12535  003AD8  0E02               	movlw	2
 12536  003ADA  19CB               	xorwf	_controlTransferState& (0+255),w,b
 12537  003ADC  A4D8               	btfss	status,2,c
 12538  003ADE  D015               	goto	l1664
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;usb_device.c: 1451: {
 12542                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12543  003AE0  EE20 F001          	lfsr	2,1
 12544  003AE4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12545  003AE6  26D9               	addwf	fsr2l,f,c
 12546  003AE8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12547  003AEA  22DA               	addwfc	fsr2h,f,c
 12548  003AEC  0E00               	movlw	0
 12549  003AEE  6EDF               	movwf	indf2,c
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12553  003AF0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12554  003AF4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12555  003AF8  0E48               	movlw	72
 12556  003AFA  6EDF               	movwf	indf2,c
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12560  003AFC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12561  003B00  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12562  003B04  0E00               	movlw	0
 12563  003B06  8EDB               	bsf	plusw2,7,c
 12564                           
 12565                           ;usb_device.c: 1455: }
 12566  003B08  0012               	return	
 12567  003B0A                     l1664:
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12571                           
 12572                           ; BSR set to: 0
 12573  003B0A  05CB               	decf	_controlTransferState& (0+255),w,b
 12574  003B0C  A4D8               	btfss	status,2,c
 12575  003B0E  0012               	return	
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;usb_device.c: 1457: {
 12579                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12580  003B10  0E00               	movlw	0
 12581  003B12  0101               	movlb	1	; () banked
 12582  003B14  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12583                           
 12584                           ; BSR set to: 1
 12585                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12586  003B16  0100               	movlb	0	; () banked
 12587  003B18  EE20 F001          	lfsr	2,1
 12588  003B1C  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12589  003B1E  26D9               	addwf	fsr2l,f,c
 12590  003B20  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12591  003B22  22DA               	addwfc	fsr2h,f,c
 12592  003B24  0E08               	movlw	8
 12593  003B26  6EDF               	movwf	indf2,c
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12597  003B28  EE20 F002          	lfsr	2,2
 12598  003B2C  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12599  003B2E  26D9               	addwf	fsr2l,f,c
 12600  003B30  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12601  003B32  22DA               	addwfc	fsr2h,f,c
 12602  003B34  0E30               	movlw	48
 12603  003B36  6EDE               	movwf	postinc2,c
 12604  003B38  0E04               	movlw	4
 12605  003B3A  6EDD               	movwf	postdec2,c
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12609  003B3C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12610  003B40  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12611  003B44  0E04               	movlw	4
 12612  003B46  6EDF               	movwf	indf2,c
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12616  003B48  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12617  003B4C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12618  003B50  0E00               	movlw	0
 12619  003B52  8EDB               	bsf	plusw2,7,c
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12623  003B54  0E01               	movlw	1
 12624  003B56  0101               	movlb	1	; () banked
 12625  003B58  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12626                           
 12627                           ; BSR set to: 1
 12628                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12629  003B5A  0100               	movlb	0	; () banked
 12630  003B5C  EE20 F001          	lfsr	2,1
 12631  003B60  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12632  003B62  26D9               	addwf	fsr2l,f,c
 12633  003B64  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12634  003B66  22DA               	addwfc	fsr2h,f,c
 12635  003B68  0E08               	movlw	8
 12636  003B6A  6EDF               	movwf	indf2,c
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12640  003B6C  EE20 F002          	lfsr	2,2
 12641  003B70  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12642  003B72  26D9               	addwf	fsr2l,f,c
 12643  003B74  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12644  003B76  22DA               	addwfc	fsr2h,f,c
 12645  003B78  0E30               	movlw	48
 12646  003B7A  6EDE               	movwf	postinc2,c
 12647  003B7C  0E04               	movlw	4
 12648  003B7E  6EDD               	movwf	postdec2,c
 12649                           
 12650                           ; BSR set to: 0
 12651                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12652  003B80  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12653  003B84  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12654  003B88  0E80               	movlw	128
 12655  003B8A  6EDF               	movwf	indf2,c
 12656                           
 12657                           ; BSR set to: 0
 12658                           
 12659                           ; BSR set to: 0
 12660                           
 12661                           ; BSR set to: 0
 12662  003B8C  0012               	return	
 12663  003B8E                     __end_of_USBCtrlEPAllowStatusStage:
 12664                           	opt stack 0
 12665                           tosu	equ	0xFFF
 12666                           tosh	equ	0xFFE
 12667                           tosl	equ	0xFFD
 12668                           pclath	equ	0xFFA
 12669                           tblptru	equ	0xFF8
 12670                           tblptrh	equ	0xFF7
 12671                           tblptrl	equ	0xFF6
 12672                           tablat	equ	0xFF5
 12673                           prodh	equ	0xFF4
 12674                           prodl	equ	0xFF3
 12675                           intcon	equ	0xFF2
 12676                           intcon2	equ	0xFF1
 12677                           intcon3	equ	0xFF0
 12678                           indf0	equ	0xFEF
 12679                           postinc0	equ	0xFEE
 12680                           plusw0	equ	0xFEB
 12681                           fsr0h	equ	0xFEA
 12682                           fsr0l	equ	0xFE9
 12683                           wreg	equ	0xFE8
 12684                           indf1	equ	0xFE7
 12685                           postinc1	equ	0xFE6
 12686                           postdec1	equ	0xFE5
 12687                           fsr1h	equ	0xFE2
 12688                           fsr1l	equ	0xFE1
 12689                           indf2	equ	0xFDF
 12690                           postinc2	equ	0xFDE
 12691                           postdec2	equ	0xFDD
 12692                           plusw2	equ	0xFDB
 12693                           fsr2h	equ	0xFDA
 12694                           fsr2l	equ	0xFD9
 12695                           status	equ	0xFD8
 12696                           
 12697 ;; *************** function _USBCtrlTrfInHandler *****************
 12698 ;; Defined at:
 12699 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12700 ;; Parameters:    Size  Location     Type
 12701 ;;		None
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      void 
 12706 ;; Registers used:
 12707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/0
 12710 ;;		On exit  : 0/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12716 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12717 ;;Total ram usage:        1 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; Hardware stack levels required when called:   12
 12720 ;; This function calls:
 12721 ;;		_USBCtrlTrfTxService
 12722 ;; This function is called by:
 12723 ;;		_USBCtrlEPService
 12724 ;; This function uses a non-reentrant model
 12725 ;;
 12726                           
 12727                           	psect	text52
 12728  003F74                     __ptext52:
 12729                           	opt stack 0
 12730  003F74                     _USBCtrlTrfInHandler:
 12731                           	opt stack 13
 12732                           
 12733                           ;usb_device.c: 2611: uint8_t lastDTS;
 12734                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;incstack = 0
 12738  003F74  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12739  003F78  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12740  003F7C  0100               	movlb	0	; () banked
 12741  003F7E  0E00               	movlw	0
 12742  003F80  BCDF               	btfsc	indf2,6,c
 12743  003F82  0E01               	movlw	1
 12744  003F84  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12748  003F86  0E04               	movlw	4
 12749  003F88  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12750                           
 12751                           ; BSR set to: 0
 12752                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12753  003F8A  0E08               	movlw	8
 12754  003F8C  19CD               	xorwf	_USBDeviceState& (0+255),w,b
 12755  003F8E  A4D8               	btfss	status,2,c
 12756  003F90  D00D               	goto	l1791
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;usb_device.c: 2622: {
 12760                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12761  003F92  0104               	movlb	4	; () banked
 12762  003F94  5132               	movf	50,w,b	;volatile
 12763  003F96  0B7F               	andlw	127
 12764  003F98  010F               	movlb	15	; () banked
 12765  003F9A  6F38               	movwf	56,b	;volatile
 12766                           
 12767                           ; BSR set to: 15
 12768                           ;usb_device.c: 2624: if(UADDR != 0u)
 12769  003F9C  5138               	movf	56,w,b	;volatile
 12770  003F9E  B4D8               	btfsc	status,2,c
 12771  003FA0  D002               	goto	l1790
 12772                           
 12773                           ; BSR set to: 15
 12774                           ;usb_device.c: 2625: {
 12775                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12776  003FA2  0E10               	movlw	16
 12777  003FA4  D001               	goto	L11
 12778  003FA6                     l1790:
 12779                           
 12780                           ;usb_device.c: 2628: else
 12781                           ;usb_device.c: 2629: {
 12782                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12783                           
 12784                           ; BSR set to: 0
 12785  003FA6  0E04               	movlw	4
 12786  003FA8                     L11:
 12787  003FA8  0100               	movlb	0	; () banked
 12788  003FAA  6FCD               	movwf	_USBDeviceState& (0+255),b
 12789  003FAC                     l1791:
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;usb_device.c: 2631: }
 12793                           ;usb_device.c: 2632: }
 12794                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12795                           
 12796                           ; BSR set to: 0
 12797                           
 12798                           ; BSR set to: 0
 12799  003FAC  05CB               	decf	_controlTransferState& (0+255),w,b
 12800  003FAE  A4D8               	btfss	status,2,c
 12801  003FB0  D03B               	goto	l1792
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;usb_device.c: 2636: {
 12805                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12806  003FB2  EE20 F002          	lfsr	2,2
 12807  003FB6  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12808  003FB8  26D9               	addwf	fsr2l,f,c
 12809  003FBA  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12810  003FBC  22DA               	addwfc	fsr2h,f,c
 12811  003FBE  0E38               	movlw	56
 12812  003FC0  6EDE               	movwf	postinc2,c
 12813  003FC2  0E04               	movlw	4
 12814  003FC4  6EDD               	movwf	postdec2,c
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12818  003FC6  ECEC  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12819                           
 12820                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12821  003FCA  0E02               	movlw	2
 12822  003FCC  0100               	movlb	0	; () banked
 12823  003FCE  19CC               	xorwf	_shortPacketStatus& (0+255),w,b
 12824  003FD0  A4D8               	btfss	status,2,c
 12825  003FD2  D00D               	goto	l1793
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;usb_device.c: 2645: {
 12829                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12830  003FD4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12831  003FD8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12832  003FDC  0E04               	movlw	4
 12833  003FDE  6EDF               	movwf	indf2,c
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12837  003FE0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12838  003FE4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12839  003FE8  0E00               	movlw	0
 12840  003FEA  8EDB               	bsf	plusw2,7,c
 12841                           
 12842                           ;usb_device.c: 2650: }
 12843  003FEC  0012               	return	
 12844  003FEE                     l1793:
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;usb_device.c: 2651: else
 12848                           ;usb_device.c: 2652: {
 12849                           ;usb_device.c: 2653: if(lastDTS == 0)
 12850                           
 12851                           ; BSR set to: 0
 12852  003FEE  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12853  003FF0  A4D8               	btfss	status,2,c
 12854  003FF2  D00D               	goto	l1795
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;usb_device.c: 2654: {
 12858                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12859  003FF4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12860  003FF8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12861  003FFC  0E48               	movlw	72
 12862  003FFE  6EDF               	movwf	indf2,c
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12866  004000  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12867  004004  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12868  004008  0E00               	movlw	0
 12869  00400A  8EDB               	bsf	plusw2,7,c
 12870                           
 12871                           ;usb_device.c: 2657: }
 12872  00400C  0012               	return	
 12873  00400E                     l1795:
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;usb_device.c: 2658: else
 12877                           ;usb_device.c: 2659: {
 12878                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12879                           
 12880                           ; BSR set to: 0
 12881  00400E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12882  004012  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12883  004016  0E08               	movlw	8
 12884  004018  6EDF               	movwf	indf2,c
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12888  00401A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12889  00401E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12890  004022  0E00               	movlw	0
 12891  004024  8EDB               	bsf	plusw2,7,c
 12892                           
 12893                           ; BSR set to: 0
 12894                           ;usb_device.c: 2662: }
 12895                           ;usb_device.c: 2663: }
 12896                           ;usb_device.c: 2664: }
 12897                           
 12898                           ; BSR set to: 0
 12899  004026  0012               	return	
 12900  004028                     l1792:
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;usb_device.c: 2665: else
 12904                           ;usb_device.c: 2666: {
 12905                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12906  004028  0101               	movlb	1	; () banked
 12907  00402A  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12908                           
 12909                           ; BSR set to: 1
 12910                           ;usb_device.c: 2675: }
 12911                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12912                           
 12913                           ; BSR set to: 1
 12914  00402C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12915                           
 12916                           ; BSR set to: 1
 12917                           ;usb_device.c: 2677: }
 12918                           ;usb_device.c: 2679: controlTransferState = 0;
 12919                           
 12920                           ; BSR set to: 1
 12921  00402E  0E00               	movlw	0
 12922  004030  0100               	movlb	0	; () banked
 12923  004032  6FCB               	movwf	_controlTransferState& (0+255),b
 12924  004034  0012               	return	
 12925  004036                     __end_of_USBCtrlTrfInHandler:
 12926                           	opt stack 0
 12927                           tosu	equ	0xFFF
 12928                           tosh	equ	0xFFE
 12929                           tosl	equ	0xFFD
 12930                           pclath	equ	0xFFA
 12931                           tblptru	equ	0xFF8
 12932                           tblptrh	equ	0xFF7
 12933                           tblptrl	equ	0xFF6
 12934                           tablat	equ	0xFF5
 12935                           prodh	equ	0xFF4
 12936                           prodl	equ	0xFF3
 12937                           intcon	equ	0xFF2
 12938                           intcon2	equ	0xFF1
 12939                           intcon3	equ	0xFF0
 12940                           indf0	equ	0xFEF
 12941                           postinc0	equ	0xFEE
 12942                           plusw0	equ	0xFEB
 12943                           fsr0h	equ	0xFEA
 12944                           fsr0l	equ	0xFE9
 12945                           wreg	equ	0xFE8
 12946                           indf1	equ	0xFE7
 12947                           postinc1	equ	0xFE6
 12948                           postdec1	equ	0xFE5
 12949                           fsr1h	equ	0xFE2
 12950                           fsr1l	equ	0xFE1
 12951                           indf2	equ	0xFDF
 12952                           postinc2	equ	0xFDE
 12953                           postdec2	equ	0xFDD
 12954                           plusw2	equ	0xFDB
 12955                           fsr2h	equ	0xFDA
 12956                           fsr2l	equ	0xFD9
 12957                           status	equ	0xFD8
 12958                           
 12959 ;; *************** function _USBCtrlTrfTxService *****************
 12960 ;; Defined at:
 12961 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12962 ;; Parameters:    Size  Location     Type
 12963 ;;		None
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  1    wreg      void 
 12968 ;; Registers used:
 12969 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12970 ;; Tracked objects:
 12971 ;;		On entry : 0/0
 12972 ;;		On exit  : 0/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12979 ;;Total ram usage:        1 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:   11
 12982 ;; This function calls:
 12983 ;;		Nothing
 12984 ;; This function is called by:
 12985 ;;		_USBCtrlEPAllowDataStage
 12986 ;;		_USBCtrlTrfInHandler
 12987 ;; This function uses a non-reentrant model
 12988 ;;
 12989                           
 12990                           	psect	text53
 12991  0035D8                     __ptext53:
 12992                           	opt stack 0
 12993  0035D8                     _USBCtrlTrfTxService:
 12994                           	opt stack 11
 12995                           
 12996                           ;usb_device.c: 1791: uint8_t byteToSend;
 12997                           ;usb_device.c: 1795: byteToSend = 8;
 12998                           
 12999                           ; BSR set to: 0
 13000                           ;incstack = 0
 13001  0035D8  0E08               	movlw	8
 13002  0035DA  0100               	movlb	0	; () banked
 13003  0035DC  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13004                           
 13005                           ; BSR set to: 0
 13006                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13007  0035DE  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13008  0035E0  E110               	bnz	l11843
 13009  0035E2  0E08               	movlw	8
 13010  0035E4  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13011  0035E6  B0D8               	btfsc	status,0,c
 13012  0035E8  D00C               	goto	l1697
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;usb_device.c: 1797: {
 13016                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13017  0035EA  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13021  0035EE  51CC               	movf	_shortPacketStatus& (0+255),w,b
 13022  0035F0  A4D8               	btfss	status,2,c
 13023  0035F2  D002               	goto	l1695
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;usb_device.c: 1806: {
 13027                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13028  0035F4  0E01               	movlw	1
 13029  0035F6  D004               	goto	L12
 13030  0035F8                     l1695:
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13034                           
 13035                           ; BSR set to: 0
 13036  0035F8  05CC               	decf	_shortPacketStatus& (0+255),w,b
 13037  0035FA  A4D8               	btfss	status,2,c
 13038  0035FC  D002               	goto	l1697
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;usb_device.c: 1810: {
 13042                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13043  0035FE  0E02               	movlw	2
 13044  003600                     L12:
 13045  003600  6FCC               	movwf	_shortPacketStatus& (0+255),b
 13046  003602                     l1697:
 13047  003602                     l11843:
 13048                           
 13049                           ; BSR set to: 0
 13050                           ;usb_device.c: 1812: }
 13051                           ;usb_device.c: 1813: }
 13052                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13053  003602  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13054  003604  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13055  003606  0E00               	movlw	0
 13056  003608  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13060  00360A  EE20 F001          	lfsr	2,1
 13061  00360E  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13062  003610  26D9               	addwf	fsr2l,f,c
 13063  003612  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13064  003614  22DA               	addwfc	fsr2h,f,c
 13065  003616  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13069  00361A  0E38               	movlw	56
 13070  00361C  0102               	movlb	2	; () banked
 13071  00361E  6FD4               	movwf	_pDst& (0+255),b
 13072  003620  0E04               	movlw	4
 13073  003622  6FD5               	movwf	(_pDst+1)& (0+255),b
 13074                           
 13075                           ; BSR set to: 2
 13076                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13077  003624  0100               	movlb	0	; () banked
 13078  003626  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13079  003628  D01E               	goto	l1699
 13080  00362A  D03E               	goto	l1703
 13081  00362C                     
 13082                           ; BSR set to: 0
 13083                           ;usb_device.c: 1830: {
 13084                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13085                           
 13086                           ; BSR set to: 0
 13087  00362C  C0B0  FFF6         	movff	_inPipes,tblptrl
 13088  003630  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13089  003634  6AF8               	clrf	tblptru,c
 13090  003636  C2D4  FFD9         	movff	_pDst,fsr2l
 13091  00363A  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13092  00363E  0E0E               	movlw	(high __ramtop+-1)
 13093  003640  64F7               	cpfsgt	tblptrh,c
 13094  003642  D003               	bra	u10417
 13095  003644  0008               	tblrd		*
 13096  003646  50F5               	movf	tablat,w,c
 13097  003648  D005               	bra	u10410
 13098  00364A                     u10417:
 13099  00364A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13100  00364E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13101  003652  50EF               	movf	indf0,w,c
 13102  003654                     u10410:
 13103  003654  6EDF               	movwf	indf2,c
 13104  003656  0100               	movlb	0	; () banked
 13105  003658  4BB0               	infsnz	_inPipes& (0+255),f,b
 13106  00365A  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13107                           
 13108                           ; BSR set to: 0
 13109  00365C  0102               	movlb	2	; () banked
 13110  00365E  4BD4               	infsnz	_pDst& (0+255),f,b
 13111  003660  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13112                           
 13113                           ; BSR set to: 2
 13114                           ;usb_device.c: 1832: byteToSend--;
 13115  003662  0100               	movlb	0	; () banked
 13116  003664  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13117  003666                     l1699:
 13118                           
 13119                           ; BSR set to: 0
 13120                           
 13121                           ; BSR set to: 0
 13122  003666  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13123  003668  B4D8               	btfsc	status,2,c
 13124  00366A  0012               	return	
 13125  00366C  D7DF               	goto	l1700
 13126  00366E                     
 13127                           ; BSR set to: 0
 13128                           ;usb_device.c: 1838: {
 13129                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13130                           
 13131                           ; BSR set to: 0
 13132  00366E  C0B0  FFF6         	movff	_inPipes,tblptrl
 13133  003672  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13134  003676  6AF8               	clrf	tblptru,c
 13135  003678  C2D4  FFD9         	movff	_pDst,fsr2l
 13136  00367C  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13137  003680  0E0E               	movlw	(high __ramtop+-1)
 13138  003682  64F7               	cpfsgt	tblptrh,c
 13139  003684  D003               	bra	u10437
 13140  003686  0008               	tblrd		*
 13141  003688  50F5               	movf	tablat,w,c
 13142  00368A  D005               	bra	u10430
 13143  00368C                     u10437:
 13144  00368C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13145  003690  CFF7 FFEA          	movff	tblptrh,fsr0h
 13146  003694  50EF               	movf	indf0,w,c
 13147  003696                     u10430:
 13148  003696  6EDF               	movwf	indf2,c
 13149  003698  0100               	movlb	0	; () banked
 13150  00369A  4BB0               	infsnz	_inPipes& (0+255),f,b
 13151  00369C  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13152                           
 13153                           ; BSR set to: 0
 13154  00369E  0102               	movlb	2	; () banked
 13155  0036A0  4BD4               	infsnz	_pDst& (0+255),f,b
 13156  0036A2  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13157                           
 13158                           ; BSR set to: 2
 13159                           ;usb_device.c: 1840: byteToSend--;
 13160  0036A4  0100               	movlb	0	; () banked
 13161  0036A6  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13162  0036A8                     l1703:
 13163                           
 13164                           ; BSR set to: 0
 13165                           
 13166                           ; BSR set to: 0
 13167  0036A8  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13168  0036AA  B4D8               	btfsc	status,2,c
 13169  0036AC  0012               	return	
 13170  0036AE  D7DF               	goto	l1704
 13171  0036B0                     __end_of_USBCtrlTrfTxService:
 13172                           	opt stack 0
 13173                           tosu	equ	0xFFF
 13174                           tosh	equ	0xFFE
 13175                           tosl	equ	0xFFD
 13176                           pclath	equ	0xFFA
 13177                           tblptru	equ	0xFF8
 13178                           tblptrh	equ	0xFF7
 13179                           tblptrl	equ	0xFF6
 13180                           tablat	equ	0xFF5
 13181                           prodh	equ	0xFF4
 13182                           prodl	equ	0xFF3
 13183                           intcon	equ	0xFF2
 13184                           intcon2	equ	0xFF1
 13185                           intcon3	equ	0xFF0
 13186                           indf0	equ	0xFEF
 13187                           postinc0	equ	0xFEE
 13188                           plusw0	equ	0xFEB
 13189                           fsr0h	equ	0xFEA
 13190                           fsr0l	equ	0xFE9
 13191                           wreg	equ	0xFE8
 13192                           indf1	equ	0xFE7
 13193                           postinc1	equ	0xFE6
 13194                           postdec1	equ	0xFE5
 13195                           fsr1h	equ	0xFE2
 13196                           fsr1l	equ	0xFE1
 13197                           indf2	equ	0xFDF
 13198                           postinc2	equ	0xFDE
 13199                           postdec2	equ	0xFDD
 13200                           plusw2	equ	0xFDB
 13201                           fsr2h	equ	0xFDA
 13202                           fsr2l	equ	0xFD9
 13203                           status	equ	0xFD8
 13204                           
 13205 ;; *************** function _CDCTxService *****************
 13206 ;; Defined at:
 13207 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;		None
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13212 ;;  i               1   36[BANK0 ] unsigned char 
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  1    wreg      void 
 13215 ;; Registers used:
 13216 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 0/0
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13223 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13226 ;;Total ram usage:        2 bytes
 13227 ;; Hardware stack levels used:    1
 13228 ;; Hardware stack levels required when called:   12
 13229 ;; This function calls:
 13230 ;;		_USBTransferOnePacket
 13231 ;; This function is called by:
 13232 ;;		_UsbDevice_MainTask
 13233 ;; This function uses a non-reentrant model
 13234 ;;
 13235                           
 13236                           	psect	text54
 13237  002816                     __ptext54:
 13238                           	opt stack 0
 13239  002816                     _CDCTxService:
 13240                           	opt stack 15
 13241                           
 13242                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13243                           ;usb_device_cdc.c: 842: uint8_t i;
 13244                           ;usb_device_cdc.c: 844: ;
 13245                           ;usb_device_cdc.c: 846: {};
 13246                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;incstack = 0
 13250  002816  0101               	movlb	1	; () banked
 13251  002818  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13252  00281A  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13253  00281C  B4D8               	btfsc	status,2,c
 13254  00281E  D006               	goto	l1949
 13255                           
 13256                           ; BSR set to: 1
 13257  002820  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13258  002824  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13259  002828  BEDF               	btfsc	indf2,7,c
 13260  00282A  0012               	return	
 13261  00282C                     l1949:
 13262                           
 13263                           ; BSR set to: 1
 13264                           ;usb_device_cdc.c: 852: }
 13265                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13266                           
 13267                           ; BSR set to: 1
 13268  00282C  0E03               	movlw	3
 13269  00282E  0100               	movlb	0	; () banked
 13270  002830  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13271  002832  A4D8               	btfss	status,2,c
 13272  002834  D002               	goto	l1951
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13276  002836  0E00               	movlw	0
 13277  002838  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13278  00283A                     l1951:
 13279                           
 13280                           ; BSR set to: 0
 13281                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13282  00283A  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13283  00283C  B4D8               	btfsc	status,2,c
 13284  00283E  0012               	return	
 13285                           
 13286                           ; BSR set to: 0
 13287                           ;usb_device_cdc.c: 869: }
 13288                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13289                           
 13290                           ; BSR set to: 0
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;usb_device_cdc.c: 866: {
 13294                           ;usb_device_cdc.c: 867: ;
 13295                           ;usb_device_cdc.c: 868: return;
 13296  002840  0E02               	movlw	2
 13297  002842  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13298  002844  A4D8               	btfss	status,2,c
 13299  002846  D013               	goto	l1953
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;usb_device_cdc.c: 875: {
 13303                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13304  002848  0E01               	movlw	1
 13305  00284A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13306  00284C  0E00               	movlw	0
 13307  00284E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13308  002850  0E00               	movlw	0
 13309  002852  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13310  002854  0E00               	movlw	0
 13311  002856  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13312  002858  0E02               	movlw	2
 13313  00285A  EC1B  F020         	call	_USBTransferOnePacket
 13314  00285E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13315  002862  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13316                           
 13317                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13318  002866  0E03               	movlw	3
 13319  002868  0100               	movlb	0	; () banked
 13320  00286A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13321                           
 13322                           ;usb_device_cdc.c: 879: }
 13323  00286C  0012               	return	
 13324  00286E                     l1953:
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13328                           
 13329                           ; BSR set to: 0
 13330  00286E  05C5               	decf	_cdc_trf_state& (0+255),w,b
 13331  002870  A4D8               	btfss	status,2,c
 13332  002872  0012               	return	
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;usb_device_cdc.c: 881: {
 13336                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13337  002874  0E40               	movlw	64
 13338  002876  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 13339  002878  D003               	goto	l1956
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13343  00287A  0E40               	movlw	64
 13344  00287C  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13345  00287E  D002               	goto	l1957
 13346  002880                     l1956:
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;usb_device_cdc.c: 887: else
 13350                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13351  002880  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13352  002884                     l1957:
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13356                           
 13357                           ; BSR set to: 0
 13358  002884  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13359  002886  0800               	sublw	0
 13360  002888  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 13361  00288A  6FC4               	movwf	_cdc_tx_len& (0+255),b
 13362                           
 13363                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13364  00288C  0EB6               	movlw	low _cdc_data_tx
 13365  00288E  0102               	movlb	2	; () banked
 13366  002890  6FC8               	movwf	_pCDCDst& (0+255),b
 13367  002892  0E07               	movlw	high _cdc_data_tx
 13368  002894  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13369                           
 13370                           ; BSR set to: 2
 13371                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13372  002896  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13373                           
 13374                           ; BSR set to: 2
 13375                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13376  00289A  0101               	movlb	1	; () banked
 13377  00289C  51E2               	movf	_cdc_mem_type& (0+255),w,b
 13378  00289E  B4D8               	btfsc	status,2,c
 13379  0028A0  D01D               	goto	l1959
 13380  0028A2  D03D               	goto	l1963
 13381  0028A4                     
 13382                           ;usb_device_cdc.c: 901: {
 13383                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13384                           
 13385                           ; BSR set to: 1
 13386  0028A4  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13387  0028A8  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13388  0028AC  6AF8               	clrf	tblptru,c
 13389  0028AE  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13390  0028B2  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13391  0028B6  0E0E               	movlw	(high __ramtop+-1)
 13392  0028B8  64F7               	cpfsgt	tblptrh,c
 13393  0028BA  D003               	bra	u14287
 13394  0028BC  0008               	tblrd		*
 13395  0028BE  50F5               	movf	tablat,w,c
 13396  0028C0  D005               	bra	u14280
 13397  0028C2                     u14287:
 13398  0028C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13399  0028C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13400  0028CA  50EF               	movf	indf0,w,c
 13401  0028CC                     u14280:
 13402  0028CC  6EDF               	movwf	indf2,c
 13403                           
 13404                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13405  0028CE  0102               	movlb	2	; () banked
 13406  0028D0  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13407  0028D2  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13408                           
 13409                           ; BSR set to: 2
 13410                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13411  0028D4  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13412  0028D6  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13413                           
 13414                           ; BSR set to: 2
 13415                           ;usb_device_cdc.c: 905: i--;
 13416  0028D8  0100               	movlb	0	; () banked
 13417  0028DA  0784               	decf	CDCTxService@i& (0+255),f,b
 13418  0028DC                     l1959:
 13419                           
 13420                           ; BSR set to: 0
 13421  0028DC  0100               	movlb	0	; () banked
 13422  0028DE  5184               	movf	CDCTxService@i& (0+255),w,b
 13423  0028E0  B4D8               	btfsc	status,2,c
 13424  0028E2  D021               	goto	u14310
 13425  0028E4  D7DF               	goto	l1960
 13426  0028E6                     
 13427                           ; BSR set to: 0
 13428                           ;usb_device_cdc.c: 911: {
 13429                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13430                           
 13431                           ; BSR set to: 0
 13432  0028E6  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13433  0028EA  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13434  0028EE  6AF8               	clrf	tblptru,c
 13435  0028F0  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13436  0028F4  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13437  0028F8  0E0E               	movlw	(high __ramtop+-1)
 13438  0028FA  64F7               	cpfsgt	tblptrh,c
 13439  0028FC  D003               	bra	u14307
 13440  0028FE  0008               	tblrd		*
 13441  002900  50F5               	movf	tablat,w,c
 13442  002902  D005               	bra	u14300
 13443  002904                     u14307:
 13444  002904  CFF6 FFE9          	movff	tblptrl,fsr0l
 13445  002908  CFF7 FFEA          	movff	tblptrh,fsr0h
 13446  00290C  50EF               	movf	indf0,w,c
 13447  00290E                     u14300:
 13448  00290E  6EDF               	movwf	indf2,c
 13449                           
 13450                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13451  002910  0102               	movlb	2	; () banked
 13452  002912  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13453  002914  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13454                           
 13455                           ; BSR set to: 2
 13456                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13457  002916  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13458  002918  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13459                           
 13460                           ; BSR set to: 2
 13461                           ;usb_device_cdc.c: 915: i--;
 13462  00291A  0100               	movlb	0	; () banked
 13463  00291C  0784               	decf	CDCTxService@i& (0+255),f,b
 13464  00291E                     l1963:
 13465                           
 13466                           ; BSR set to: 0
 13467  00291E  0100               	movlb	0	; () banked
 13468  002920  5184               	movf	CDCTxService@i& (0+255),w,b
 13469  002922  A4D8               	btfss	status,2,c
 13470  002924  D7E0               	goto	l1964
 13471  002926                     u14310:
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;usb_device_cdc.c: 916: }
 13475                           ;usb_device_cdc.c: 917: }
 13476                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13477                           
 13478                           ; BSR set to: 0
 13479                           
 13480                           ; BSR set to: 0
 13481  002926  51C4               	movf	_cdc_tx_len& (0+255),w,b
 13482  002928  A4D8               	btfss	status,2,c
 13483  00292A  D008               	goto	l1968
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;usb_device_cdc.c: 924: {
 13487                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13488  00292C  0E40               	movlw	64
 13489  00292E  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13490  002930  A4D8               	btfss	status,2,c
 13491  002932  D002               	goto	l1967
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13495  002934  0E02               	movlw	2
 13496  002936  D001               	goto	L13
 13497  002938                     l1967:
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;usb_device_cdc.c: 927: else
 13501                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13502                           
 13503                           ; BSR set to: 0
 13504  002938  0E03               	movlw	3
 13505  00293A                     L13:
 13506  00293A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13507  00293C                     l1968:
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;usb_device_cdc.c: 929: }
 13511                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13512                           
 13513                           ; BSR set to: 0
 13514                           
 13515                           ; BSR set to: 0
 13516  00293C  0E01               	movlw	1
 13517  00293E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13518  002940  0EB6               	movlw	low _cdc_data_tx
 13519  002942  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13520  002944  0E07               	movlw	high _cdc_data_tx
 13521  002946  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13522  002948  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13523  00294C  0E02               	movlw	2
 13524  00294E  EC1B  F020         	call	_USBTransferOnePacket
 13525  002952  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13526  002956  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13527  00295A  0012               	return	
 13528  00295C                     __end_of_CDCTxService:
 13529                           	opt stack 0
 13530                           tosu	equ	0xFFF
 13531                           tosh	equ	0xFFE
 13532                           tosl	equ	0xFFD
 13533                           pclath	equ	0xFFA
 13534                           tblptru	equ	0xFF8
 13535                           tblptrh	equ	0xFF7
 13536                           tblptrl	equ	0xFF6
 13537                           tablat	equ	0xFF5
 13538                           prodh	equ	0xFF4
 13539                           prodl	equ	0xFF3
 13540                           intcon	equ	0xFF2
 13541                           intcon2	equ	0xFF1
 13542                           intcon3	equ	0xFF0
 13543                           indf0	equ	0xFEF
 13544                           postinc0	equ	0xFEE
 13545                           plusw0	equ	0xFEB
 13546                           fsr0h	equ	0xFEA
 13547                           fsr0l	equ	0xFE9
 13548                           wreg	equ	0xFE8
 13549                           indf1	equ	0xFE7
 13550                           postinc1	equ	0xFE6
 13551                           postdec1	equ	0xFE5
 13552                           fsr1h	equ	0xFE2
 13553                           fsr1l	equ	0xFE1
 13554                           indf2	equ	0xFDF
 13555                           postinc2	equ	0xFDE
 13556                           postdec2	equ	0xFDD
 13557                           plusw2	equ	0xFDB
 13558                           fsr2h	equ	0xFDA
 13559                           fsr2l	equ	0xFD9
 13560                           status	equ	0xFD8
 13561                           
 13562 ;; *************** function _Term_MainSm *****************
 13563 ;; Defined at:
 13564 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;		None
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13569 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13570 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13571 ;;  FwkBuildYear    4    0        unsigned char [4]
 13572 ;;  FwkBuildMont    4    0        unsigned char [4]
 13573 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  1    wreg      void 
 13576 ;; Registers used:
 13577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13578 ;; Tracked objects:
 13579 ;;		On entry : 0/0
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13584 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13587 ;;Total ram usage:       12 bytes
 13588 ;; Hardware stack levels used:    1
 13589 ;; Hardware stack levels required when called:   16
 13590 ;; This function calls:
 13591 ;;		_OsTmr_GetTimerStatus
 13592 ;;		_OsTmr_StartTimer
 13593 ;;		_Terminal
 13594 ;;		_memset
 13595 ;;		_putUSBUSART
 13596 ;;		_sprintf
 13597 ;;		_strcat
 13598 ;;		_strcpy
 13599 ;;		_strlen
 13600 ;;		_utoa
 13601 ;; This function is called by:
 13602 ;;		_Term_MainTask
 13603 ;; This function uses a non-reentrant model
 13604 ;;
 13605                           
 13606                           	psect	text55
 13607  0010B6                     __ptext55:
 13608                           	opt stack 0
 13609  0010B6                     _Term_MainSm:
 13610                           	opt stack 11
 13611                           
 13612                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13613                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13614                           ;term.c: 711: static UINT8 Data[50];
 13615                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13616                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13617                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13618                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13619                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13620                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13621                           ;term.c: 719: switch (TermMainSmState)
 13622                           
 13623                           ;incstack = 0
 13624  0010B6  D133               	goto	l2427
 13625  0010B8                     
 13626                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13627  0010B8  0ECD               	movlw	low Term_MainSm@TermDelay
 13628  0010BA  0100               	movlb	0	; () banked
 13629  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13630  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13631  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13632  0010C2  0ED0               	movlw	208
 13633  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13634  0010C6  0E07               	movlw	7
 13635  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13636  0010CA  0E00               	movlw	0
 13637  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13638  0010CE  0E00               	movlw	0
 13639  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13640  0010D2  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 13641                           
 13642                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13643  0010D6  0E01               	movlw	1
 13644  0010D8  0102               	movlb	2	; () banked
 13645  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13646                           
 13647                           ;term.c: 726: break;
 13648  0010DC  0012               	return	
 13649  0010DE                     
 13650                           ; BSR set to: 2
 13651                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13652                           
 13653                           ; BSR set to: 2
 13654  0010DE  0ECD               	movlw	low Term_MainSm@TermDelay
 13655  0010E0  0100               	movlb	0	; () banked
 13656  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13657  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13658  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13659  0010E8  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 13660  0010EC  06E8               	decf	wreg,f,c
 13661  0010EE  A4D8               	btfss	status,2,c
 13662  0010F0  0012               	return	
 13663                           
 13664                           ;term.c: 731: {
 13665                           ;term.c: 733: TermMainSmState = Term_InitState;
 13666  0010F2  0E02               	movlw	2
 13667  0010F4  0102               	movlb	2	; () banked
 13668  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13669                           
 13670                           ; BSR set to: 2
 13671                           ;term.c: 734: }
 13672                           ;term.c: 735: break;
 13673  0010F8  0012               	return	
 13674  0010FA                     
 13675                           ; BSR set to: 2
 13676                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13677                           
 13678                           ; BSR set to: 2
 13679  0010FA  0E1F               	movlw	31
 13680  0010FC  0100               	movlb	0	; () banked
 13681  0010FE  65CD               	cpfsgt	_USBDeviceState& (0+255),b
 13682  001100  0012               	return	
 13683                           
 13684                           ; BSR set to: 0
 13685  001102  B265               	btfsc	3941,1,c	;volatile
 13686  001104  0012               	return	
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;term.c: 743: else
 13690                           ;term.c: 744: {
 13691                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13692                           
 13693                           ; BSR set to: 0
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;term.c: 740: {
 13697                           ;term.c: 742: }
 13698  001106  0E03               	movlw	3
 13699  001108  0102               	movlb	2	; () banked
 13700  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13701                           
 13702                           ; BSR set to: 2
 13703                           ;term.c: 747: }
 13704                           ;term.c: 748: break;
 13705  00110C  0012               	return	
 13706  00110E                     
 13707                           ; BSR set to: 2
 13708                           ;term.c: 752: if((cdc_trf_state == 0))
 13709                           
 13710                           ; BSR set to: 2
 13711  00110E  0100               	movlb	0	; () banked
 13712  001110  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13713  001112  A4D8               	btfss	status,2,c
 13714  001114  0012               	return	
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;term.c: 753: {
 13718                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13719  001116  0E2F               	movlw	low _Welcome
 13720  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13721  00111A  0EFD               	movlw	high _Welcome
 13722  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13723  00111E  0E88               	movlw	136
 13724  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13725  001122  ECD7  F02F         	call	_putUSBUSART	;wreg free
 13726                           
 13727                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13728  001126  0E04               	movlw	4
 13729  001128  0102               	movlb	2	; () banked
 13730  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13731                           
 13732                           ; BSR set to: 2
 13733                           ;term.c: 758: }
 13734                           ;term.c: 759: break;
 13735  00112C  0012               	return	
 13736  00112E                     
 13737                           ; BSR set to: 2
 13738                           ;term.c: 763: if((cdc_trf_state == 0))
 13739                           
 13740                           ; BSR set to: 2
 13741  00112E  0100               	movlb	0	; () banked
 13742  001130  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13743  001132  A4D8               	btfss	status,2,c
 13744  001134  0012               	return	
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;term.c: 764: {
 13748                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13749  001136  0E3F               	movlw	low _MsgFormat
 13750  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13751  00113A  0EFC               	movlw	high _MsgFormat
 13752  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13753  00113E  0EEF               	movlw	239
 13754  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13755  001142  ECD7  F02F         	call	_putUSBUSART	;wreg free
 13756                           
 13757                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13758  001146  0E05               	movlw	5
 13759  001148  0102               	movlb	2	; () banked
 13760  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13761                           
 13762                           ; BSR set to: 2
 13763                           ;term.c: 769: }
 13764                           ;term.c: 770: break;
 13765  00114C  0012               	return	
 13766  00114E                     
 13767                           ; BSR set to: 2
 13768                           ;term.c: 774: if((cdc_trf_state == 0))
 13769                           
 13770                           ; BSR set to: 2
 13771  00114E  0100               	movlb	0	; () banked
 13772  001150  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13773  001152  A4D8               	btfss	status,2,c
 13774  001154  0012               	return	
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;term.c: 775: {
 13778                           ;term.c: 777: memset(Data,0,50);
 13779  001156  0E54               	movlw	low Term_MainSm@Data
 13780  001158  6F7D               	movwf	memset@p1& (0+255),b
 13781  00115A  0E04               	movlw	high Term_MainSm@Data
 13782  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13783  00115E  0E00               	movlw	0
 13784  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13785  001162  0E00               	movlw	0
 13786  001164  6F7F               	movwf	memset@c& (0+255),b
 13787  001166  0E00               	movlw	0
 13788  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13789  00116A  0E32               	movlw	50
 13790  00116C  6F81               	movwf	memset@n& (0+255),b
 13791  00116E  EC7F  F02E         	call	_memset	;wreg free
 13792                           
 13793                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13794  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13795  001174  0100               	movlb	0	; () banked
 13796  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13797  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13798  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13799  00117C  0E00               	movlw	0
 13800  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13801  001180  0E01               	movlw	1
 13802  001182  6F8C               	movwf	utoa@val& (0+255),b
 13803  001184  0E00               	movlw	0
 13804  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13805  001188  0E0A               	movlw	10
 13806  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13807  00118C  EC81  F021         	call	_utoa	;wreg free
 13808                           
 13809                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13810  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13811  001192  0100               	movlb	0	; () banked
 13812  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13813  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13814  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13815  00119A  0E00               	movlw	0
 13816  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13817  00119E  0E02               	movlw	2
 13818  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13819  0011A2  0E00               	movlw	0
 13820  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13821  0011A6  0E0A               	movlw	10
 13822  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13823  0011AA  EC81  F021         	call	_utoa	;wreg free
 13824                           
 13825                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13826  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13827  0011B0  0100               	movlb	0	; () banked
 13828  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13829  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13830  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13831  0011B8  0E00               	movlw	0
 13832  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13833  0011BC  0E00               	movlw	0
 13834  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13835  0011C0  0E00               	movlw	0
 13836  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13837  0011C4  0E0A               	movlw	10
 13838  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13839  0011C8  EC81  F021         	call	_utoa	;wreg free
 13840                           
 13841                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13842  0011CC  0E54               	movlw	low Term_MainSm@Data
 13843  0011CE  0100               	movlb	0	; () banked
 13844  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13845  0011D2  0E04               	movlw	high Term_MainSm@Data
 13846  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13847  0011D6  0EDF               	movlw	low STR_23
 13848  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13849  0011DA  0EFE               	movlw	high STR_23
 13850  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13851  0011DE  EC4E  F02E         	call	_strcpy	;wreg free
 13852                           
 13853                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13854  0011E2  0E54               	movlw	low Term_MainSm@Data
 13855  0011E4  0100               	movlb	0	; () banked
 13856  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13857  0011E8  0E04               	movlw	high Term_MainSm@Data
 13858  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13859  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13860  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13861  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13862  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13863  0011F4  ECD9  F028         	call	_strcat	;wreg free
 13864                           
 13865                           ;term.c: 784: strcat(Data,".");
 13866  0011F8  0E54               	movlw	low Term_MainSm@Data
 13867  0011FA  0100               	movlb	0	; () banked
 13868  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13869  0011FE  0E04               	movlw	high Term_MainSm@Data
 13870  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13871  001202  0EF4               	movlw	low STR_24
 13872  001204  6F7F               	movwf	strcat@from& (0+255),b
 13873  001206  0EFF               	movlw	high STR_24
 13874  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13875  00120A  ECD9  F028         	call	_strcat	;wreg free
 13876                           
 13877                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13878  00120E  0E54               	movlw	low Term_MainSm@Data
 13879  001210  0100               	movlb	0	; () banked
 13880  001212  6F7D               	movwf	strcat@to& (0+255),b
 13881  001214  0E04               	movlw	high Term_MainSm@Data
 13882  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13883  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13884  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13885  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13886  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13887  001220  ECD9  F028         	call	_strcat	;wreg free
 13888                           
 13889                           ;term.c: 786: strcat(Data,".");
 13890  001224  0E54               	movlw	low Term_MainSm@Data
 13891  001226  0100               	movlb	0	; () banked
 13892  001228  6F7D               	movwf	strcat@to& (0+255),b
 13893  00122A  0E04               	movlw	high Term_MainSm@Data
 13894  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13895  00122E  0EF4               	movlw	low STR_24
 13896  001230  6F7F               	movwf	strcat@from& (0+255),b
 13897  001232  0EFF               	movlw	high STR_24
 13898  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13899  001236  ECD9  F028         	call	_strcat	;wreg free
 13900                           
 13901                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13902  00123A  0E54               	movlw	low Term_MainSm@Data
 13903  00123C  0100               	movlb	0	; () banked
 13904  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13905  001240  0E04               	movlw	high Term_MainSm@Data
 13906  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13907  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13908  001246  6F7F               	movwf	strcat@from& (0+255),b
 13909  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13910  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13911  00124C  ECD9  F028         	call	_strcat	;wreg free
 13912                           
 13913                           ;term.c: 788: strcat(Data,"\r\n");
 13914  001250  0E54               	movlw	low Term_MainSm@Data
 13915  001252  0100               	movlb	0	; () banked
 13916  001254  6F7D               	movwf	strcat@to& (0+255),b
 13917  001256  0E04               	movlw	high Term_MainSm@Data
 13918  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13919  00125A  0E93               	movlw	low (STR_21+39)
 13920  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13921  00125E  0EFE               	movlw	high (STR_21+39)
 13922  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13923  001262  ECD9  F028         	call	_strcat	;wreg free
 13924                           
 13925                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13926  001266  0E54               	movlw	low Term_MainSm@Data
 13927  001268  0100               	movlb	0	; () banked
 13928  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13929  00126C  0E04               	movlw	high Term_MainSm@Data
 13930  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13931  001270  0E54               	movlw	low Term_MainSm@Data
 13932  001272  6F7D               	movwf	strlen@s& (0+255),b
 13933  001274  0E04               	movlw	high Term_MainSm@Data
 13934  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13935  001278  EC13  F02D         	call	_strlen	;wreg free
 13936  00127C  0100               	movlb	0	; () banked
 13937  00127E  517D               	movf	?_strlen& (0+255),w,b
 13938  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13939  001282  ECD7  F02F         	call	_putUSBUSART	;wreg free
 13940                           
 13941                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13942  001286  0E06               	movlw	6
 13943  001288  0102               	movlb	2	; () banked
 13944  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13945                           
 13946                           ; BSR set to: 2
 13947                           ;term.c: 793: }
 13948                           ;term.c: 794: break;
 13949  00128C  0012               	return	
 13950  00128E                     
 13951                           ; BSR set to: 2
 13952                           ;term.c: 798: if((cdc_trf_state == 0))
 13953                           
 13954                           ; BSR set to: 2
 13955  00128E  0100               	movlb	0	; () banked
 13956  001290  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13957  001292  A4D8               	btfss	status,2,c
 13958  001294  0012               	return	
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;term.c: 799: {
 13962                           ;term.c: 801: memset(Data,0,50);
 13963  001296  0E54               	movlw	low Term_MainSm@Data
 13964  001298  6F7D               	movwf	memset@p1& (0+255),b
 13965  00129A  0E04               	movlw	high Term_MainSm@Data
 13966  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13967  00129E  0E00               	movlw	0
 13968  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13969  0012A2  0E00               	movlw	0
 13970  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13971  0012A6  0E00               	movlw	0
 13972  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13973  0012AA  0E32               	movlw	50
 13974  0012AC  6F81               	movwf	memset@n& (0+255),b
 13975  0012AE  EC7F  F02E         	call	_memset	;wreg free
 13976                           
 13977                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 19 2022");
 13978  0012B2  0E54               	movlw	low Term_MainSm@Data
 13979  0012B4  0100               	movlb	0	; () banked
 13980  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13981  0012B8  0E04               	movlw	high Term_MainSm@Data
 13982  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13983  0012BC  0E1A               	movlw	low STR_27
 13984  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13985  0012C0  0EFF               	movlw	high STR_27
 13986  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13987  0012C4  0EB5               	movlw	low STR_28
 13988  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13989  0012C8  0EFF               	movlw	high STR_28
 13990  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13991  0012CC  EC2D  F01C         	call	_sprintf	;wreg free
 13992                           
 13993                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13994  0012D0  0E54               	movlw	low Term_MainSm@Data
 13995  0012D2  0100               	movlb	0	; () banked
 13996  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13997  0012D6  0E04               	movlw	high Term_MainSm@Data
 13998  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13999  0012DA  0E54               	movlw	low Term_MainSm@Data
 14000  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14001  0012DE  0E04               	movlw	high Term_MainSm@Data
 14002  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14003  0012E2  EC13  F02D         	call	_strlen	;wreg free
 14004  0012E6  0100               	movlb	0	; () banked
 14005  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14006  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14007  0012EC  ECD7  F02F         	call	_putUSBUSART	;wreg free
 14008                           
 14009                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14010  0012F0  0E07               	movlw	7
 14011  0012F2  0102               	movlb	2	; () banked
 14012  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14013                           
 14014                           ; BSR set to: 2
 14015                           ;term.c: 808: }
 14016                           ;term.c: 809: break;
 14017  0012F6  0012               	return	
 14018  0012F8                     
 14019                           ; BSR set to: 2
 14020                           ;term.c: 813: if((cdc_trf_state == 0))
 14021                           
 14022                           ; BSR set to: 2
 14023  0012F8  0100               	movlb	0	; () banked
 14024  0012FA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14025  0012FC  A4D8               	btfss	status,2,c
 14026  0012FE  0012               	return	
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;term.c: 814: {
 14030                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14031  001300  0E3F               	movlw	low _MsgReady
 14032  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14033  001304  0EFE               	movlw	high _MsgReady
 14034  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14035  001308  0E16               	movlw	22
 14036  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14037  00130C  ECD7  F02F         	call	_putUSBUSART	;wreg free
 14038                           
 14039                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14040  001310  0E08               	movlw	8
 14041  001312  0102               	movlb	2	; () banked
 14042  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14043                           
 14044                           ; BSR set to: 2
 14045                           ;term.c: 819: }
 14046                           ;term.c: 820: break;
 14047  001316  0012               	return	
 14048  001318                     
 14049                           ; BSR set to: 2
 14050                           ;term.c: 824: Terminal();
 14051                           
 14052                           ; BSR set to: 2
 14053  001318  EC68  F000         	call	_Terminal	;wreg free
 14054                           
 14055                           ;term.c: 829: }
 14056                           
 14057                           ;term.c: 828: break;
 14058                           
 14059                           ;term.c: 827: default:
 14060                           
 14061                           ;term.c: 825: break;
 14062  00131C  0012               	return	
 14063  00131E                     l2427:
 14064  00131E  0102               	movlb	2	; () banked
 14065  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14066                           
 14067                           ; Switch size 1, requested type "space"
 14068                           ; Number of cases is 9, Range of values is 0 to 8
 14069                           ; switch strategies available:
 14070                           ; Name         Instructions Cycles
 14071                           ; simple_byte           28    15 (average)
 14072                           ;	Chosen strategy is simple_byte
 14073  001322  0A00               	xorlw	0	; case 0
 14074  001324  B4D8               	btfsc	status,2,c
 14075  001326  D6C8               	goto	l2428
 14076  001328  0A01               	xorlw	1	; case 1
 14077  00132A  B4D8               	btfsc	status,2,c
 14078  00132C  D6D8               	goto	l2430
 14079  00132E  0A03               	xorlw	3	; case 2
 14080  001330  B4D8               	btfsc	status,2,c
 14081  001332  D6E3               	goto	l2432
 14082  001334  0A01               	xorlw	1	; case 3
 14083  001336  B4D8               	btfsc	status,2,c
 14084  001338  D6EA               	goto	l2437
 14085  00133A  0A07               	xorlw	7	; case 4
 14086  00133C  B4D8               	btfsc	status,2,c
 14087  00133E  D6F7               	goto	l2439
 14088  001340  0A01               	xorlw	1	; case 5
 14089  001342  B4D8               	btfsc	status,2,c
 14090  001344  D704               	goto	l2441
 14091  001346  0A03               	xorlw	3	; case 6
 14092  001348  B4D8               	btfsc	status,2,c
 14093  00134A  D7A1               	goto	l2443
 14094  00134C  0A01               	xorlw	1	; case 7
 14095  00134E  B4D8               	btfsc	status,2,c
 14096  001350  D7D3               	goto	l2445
 14097  001352  0A0F               	xorlw	15	; case 8
 14098  001354  A4D8               	btfss	status,2,c
 14099  001356  0012               	return	
 14100  001358  D7DF               	goto	l2447
 14101  00135A                     __end_of_Term_MainSm:
 14102                           	opt stack 0
 14103                           tosu	equ	0xFFF
 14104                           tosh	equ	0xFFE
 14105                           tosl	equ	0xFFD
 14106                           pclath	equ	0xFFA
 14107                           tblptru	equ	0xFF8
 14108                           tblptrh	equ	0xFF7
 14109                           tblptrl	equ	0xFF6
 14110                           tablat	equ	0xFF5
 14111                           prodh	equ	0xFF4
 14112                           prodl	equ	0xFF3
 14113                           intcon	equ	0xFF2
 14114                           intcon2	equ	0xFF1
 14115                           intcon3	equ	0xFF0
 14116                           indf0	equ	0xFEF
 14117                           postinc0	equ	0xFEE
 14118                           plusw0	equ	0xFEB
 14119                           fsr0h	equ	0xFEA
 14120                           fsr0l	equ	0xFE9
 14121                           wreg	equ	0xFE8
 14122                           indf1	equ	0xFE7
 14123                           postinc1	equ	0xFE6
 14124                           postdec1	equ	0xFE5
 14125                           fsr1h	equ	0xFE2
 14126                           fsr1l	equ	0xFE1
 14127                           indf2	equ	0xFDF
 14128                           postinc2	equ	0xFDE
 14129                           postdec2	equ	0xFDD
 14130                           plusw2	equ	0xFDB
 14131                           fsr2h	equ	0xFDA
 14132                           fsr2l	equ	0xFD9
 14133                           status	equ	0xFD8
 14134                           
 14135 ;; *************** function _strlen *****************
 14136 ;; Defined at:
 14137 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14138 ;; Parameters:    Size  Location     Type
 14139 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14140 ;;		 -> Term_MainSm@Data(50), 
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14143 ;;		 -> Term_MainSm@Data(50), 
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  2   29[BANK0 ] unsigned int 
 14146 ;; Registers used:
 14147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14148 ;; Tracked objects:
 14149 ;;		On entry : 0/0
 14150 ;;		On exit  : 0/0
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14156 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14157 ;;Total ram usage:        6 bytes
 14158 ;; Hardware stack levels used:    1
 14159 ;; Hardware stack levels required when called:   11
 14160 ;; This function calls:
 14161 ;;		Nothing
 14162 ;; This function is called by:
 14163 ;;		_Term_MainSm
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text56
 14168  005A26                     __ptext56:
 14169                           	opt stack 0
 14170  005A26                     _strlen:
 14171                           	opt stack 15
 14172                           
 14173                           ;incstack = 0
 14174  005A26  C07D  F081         	movff	strlen@s,strlen@cp
 14175  005A2A  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14176  005A2E  D003               	goto	l3251
 14177  005A30  0100               	movlb	0	; () banked
 14178  005A32  4B81               	infsnz	strlen@cp& (0+255),f,b
 14179  005A34  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14180  005A36                     l3251:
 14181                           
 14182                           ; BSR set to: 0
 14183  005A36  C081  FFD9         	movff	strlen@cp,fsr2l
 14184  005A3A  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14185  005A3E  50DF               	movf	indf2,w,c
 14186  005A40  A4D8               	btfss	status,2,c
 14187  005A42  D7F6               	goto	l3252
 14188  005A44  C07D  F07F         	movff	strlen@s,??_strlen
 14189  005A48  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14190  005A4C  0100               	movlb	0	; () banked
 14191  005A4E  1F7F               	comf	??_strlen& (0+255),f,b
 14192  005A50  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14193  005A52  4B7F               	infsnz	??_strlen& (0+255),f,b
 14194  005A54  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14195  005A56  5181               	movf	strlen@cp& (0+255),w,b
 14196  005A58  257F               	addwf	??_strlen& (0+255),w,b
 14197  005A5A  6F7D               	movwf	?_strlen& (0+255),b
 14198  005A5C  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14199  005A5E  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14200  005A60  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14201  005A62  0012               	return	
 14202  005A64                     __end_of_strlen:
 14203                           	opt stack 0
 14204                           tosu	equ	0xFFF
 14205                           tosh	equ	0xFFE
 14206                           tosl	equ	0xFFD
 14207                           pclath	equ	0xFFA
 14208                           tblptru	equ	0xFF8
 14209                           tblptrh	equ	0xFF7
 14210                           tblptrl	equ	0xFF6
 14211                           tablat	equ	0xFF5
 14212                           prodh	equ	0xFF4
 14213                           prodl	equ	0xFF3
 14214                           intcon	equ	0xFF2
 14215                           intcon2	equ	0xFF1
 14216                           intcon3	equ	0xFF0
 14217                           indf0	equ	0xFEF
 14218                           postinc0	equ	0xFEE
 14219                           plusw0	equ	0xFEB
 14220                           fsr0h	equ	0xFEA
 14221                           fsr0l	equ	0xFE9
 14222                           wreg	equ	0xFE8
 14223                           indf1	equ	0xFE7
 14224                           postinc1	equ	0xFE6
 14225                           postdec1	equ	0xFE5
 14226                           fsr1h	equ	0xFE2
 14227                           fsr1l	equ	0xFE1
 14228                           indf2	equ	0xFDF
 14229                           postinc2	equ	0xFDE
 14230                           postdec2	equ	0xFDD
 14231                           plusw2	equ	0xFDB
 14232                           fsr2h	equ	0xFDA
 14233                           fsr2l	equ	0xFD9
 14234                           status	equ	0xFD8
 14235                           
 14236 ;; *************** function _strcat *****************
 14237 ;; Defined at:
 14238 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14239 ;; Parameters:    Size  Location     Type
 14240 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14241 ;;		 -> Term_MainSm@Data(50), 
 14242 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14243 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14244 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14245 ;; Auto vars:     Size  Location     Type
 14246 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14247 ;;		 -> Term_MainSm@Data(50), 
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  2   29[BANK0 ] PTR unsigned char 
 14250 ;; Registers used:
 14251 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14260 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14261 ;;Total ram usage:        6 bytes
 14262 ;; Hardware stack levels used:    1
 14263 ;; Hardware stack levels required when called:   11
 14264 ;; This function calls:
 14265 ;;		Nothing
 14266 ;; This function is called by:
 14267 ;;		_Term_MainSm
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text57
 14272  0051B2                     __ptext57:
 14273                           	opt stack 0
 14274  0051B2                     _strcat:
 14275                           	opt stack 15
 14276                           
 14277                           ; BSR set to: 0
 14278                           ;incstack = 0
 14279  0051B2  C07D  F081         	movff	strcat@to,strcat@cp
 14280  0051B6  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14281  0051BA  D003               	goto	l3236
 14282  0051BC  0100               	movlb	0	; () banked
 14283  0051BE  4B81               	infsnz	strcat@cp& (0+255),f,b
 14284  0051C0  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14285  0051C2                     l3236:
 14286                           
 14287                           ; BSR set to: 0
 14288  0051C2  C081  FFD9         	movff	strcat@cp,fsr2l
 14289  0051C6  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14290  0051CA  50DF               	movf	indf2,w,c
 14291  0051CC  B4D8               	btfsc	status,2,c
 14292  0051CE  D006               	goto	l3239
 14293  0051D0  D7F5               	goto	l3237
 14294  0051D2  0100               	movlb	0	; () banked
 14295  0051D4  4B81               	infsnz	strcat@cp& (0+255),f,b
 14296  0051D6  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14297  0051D8  4B7F               	infsnz	strcat@from& (0+255),f,b
 14298  0051DA  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14299  0051DC                     l3239:
 14300                           
 14301                           ; BSR set to: 0
 14302  0051DC  C07F  FFF6         	movff	strcat@from,tblptrl
 14303  0051E0  C080  FFF7         	movff	strcat@from+1,tblptrh
 14304  0051E4  6AF8               	clrf	tblptru,c
 14305  0051E6  C081  FFD9         	movff	strcat@cp,fsr2l
 14306  0051EA  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14307  0051EE  0E0E               	movlw	(high __ramtop+-1)
 14308  0051F0  64F7               	cpfsgt	tblptrh,c
 14309  0051F2  D003               	bra	u13097
 14310  0051F4  0008               	tblrd		*
 14311  0051F6  50F5               	movf	tablat,w,c
 14312  0051F8  D005               	bra	u13090
 14313  0051FA                     u13097:
 14314  0051FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 14315  0051FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 14316  005202  50EF               	movf	indf0,w,c
 14317  005204                     u13090:
 14318  005204  6EDF               	movwf	indf2,c
 14319  005206  50DF               	movf	indf2,w,c
 14320  005208  B4D8               	btfsc	status,2,c
 14321  00520A  0012               	return	
 14322  00520C  D7E2               	goto	l3240
 14323  00520E                     __end_of_strcat:
 14324                           	opt stack 0
 14325                           tosu	equ	0xFFF
 14326                           tosh	equ	0xFFE
 14327                           tosl	equ	0xFFD
 14328                           pclath	equ	0xFFA
 14329                           tblptru	equ	0xFF8
 14330                           tblptrh	equ	0xFF7
 14331                           tblptrl	equ	0xFF6
 14332                           tablat	equ	0xFF5
 14333                           prodh	equ	0xFF4
 14334                           prodl	equ	0xFF3
 14335                           intcon	equ	0xFF2
 14336                           intcon2	equ	0xFF1
 14337                           intcon3	equ	0xFF0
 14338                           indf0	equ	0xFEF
 14339                           postinc0	equ	0xFEE
 14340                           plusw0	equ	0xFEB
 14341                           fsr0h	equ	0xFEA
 14342                           fsr0l	equ	0xFE9
 14343                           wreg	equ	0xFE8
 14344                           indf1	equ	0xFE7
 14345                           postinc1	equ	0xFE6
 14346                           postdec1	equ	0xFE5
 14347                           fsr1h	equ	0xFE2
 14348                           fsr1l	equ	0xFE1
 14349                           indf2	equ	0xFDF
 14350                           postinc2	equ	0xFDE
 14351                           postdec2	equ	0xFDD
 14352                           plusw2	equ	0xFDB
 14353                           fsr2h	equ	0xFDA
 14354                           fsr2l	equ	0xFD9
 14355                           status	equ	0xFD8
 14356                           
 14357 ;; *************** function _sprintf *****************
 14358 ;; Defined at:
 14359 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14360 ;; Parameters:    Size  Location     Type
 14361 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14362 ;;		 -> Term_MainSm@Data(50), 
 14363 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14364 ;;		 -> STR_27(17), 
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;  tmpval          4    0        struct .
 14367 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14368 ;;		 -> STR_31(7), STR_28(12), 
 14369 ;;  ap              2   36[BANK0 ] PTR void [1]
 14370 ;;		 -> ?_sprintf(2), 
 14371 ;;  len             2    0        unsigned int 
 14372 ;;  val             2    0        unsigned int 
 14373 ;;  c               1   38[BANK0 ] char 
 14374 ;;  flag            1   35[BANK0 ] unsigned char 
 14375 ;;  prec            1    0        char 
 14376 ;; Return value:  Size  Location     Type
 14377 ;;                  2   29[BANK0 ] int 
 14378 ;; Registers used:
 14379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14380 ;; Tracked objects:
 14381 ;;		On entry : 0/0
 14382 ;;		On exit  : 0/0
 14383 ;;		Unchanged: 0/0
 14384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14385 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14386 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14388 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14389 ;;Total ram usage:       12 bytes
 14390 ;; Hardware stack levels used:    1
 14391 ;; Hardware stack levels required when called:   11
 14392 ;; This function calls:
 14393 ;;		Nothing
 14394 ;; This function is called by:
 14395 ;;		_Term_MainSm
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           	psect	text58
 14400  00385A                     __ptext58:
 14401                           	opt stack 0
 14402  00385A                     _sprintf:
 14403                           	opt stack 15
 14404                           
 14405                           ;doprnt.c: 494: va_list ap;
 14406                           ;doprnt.c: 499: signed char c;
 14407                           ;doprnt.c: 506: signed char prec;
 14408                           ;doprnt.c: 508: unsigned char flag;
 14409                           ;doprnt.c: 523: union {
 14410                           ;doprnt.c: 524: unsigned long vd;
 14411                           ;doprnt.c: 525: double integ;
 14412                           ;doprnt.c: 526: } tmpval;
 14413                           ;doprnt.c: 528: unsigned int val;
 14414                           ;doprnt.c: 529: unsigned len;
 14415                           ;doprnt.c: 530: const char * cp;
 14416                           ;doprnt.c: 533: *ap = __va_start();
 14417                           
 14418                           ;incstack = 0
 14419  00385A  0E81               	movlw	low (?_sprintf+4)
 14420  00385C  0100               	movlb	0	; () banked
 14421  00385E  6F84               	movwf	sprintf@ap& (0+255),b
 14422  003860  0E00               	movlw	high (?_sprintf+4)
 14423  003862  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14424                           
 14425                           ;doprnt.c: 536: while(c = *f++) {
 14426  003864  D04E               	goto	l2640
 14427  003866                     
 14428                           ; BSR set to: 0
 14429                           ;doprnt.c: 538: if(c != '%')
 14430                           
 14431                           ; BSR set to: 0
 14432  003866  0E25               	movlw	37
 14433  003868  1986               	xorwf	sprintf@c& (0+255),w,b
 14434  00386A  B4D8               	btfsc	status,2,c
 14435  00386C  D009               	goto	l2630
 14436                           
 14437                           ; BSR set to: 0
 14438                           ;doprnt.c: 540: {
 14439                           ;doprnt.c: 541: ((*sp++ = (c)));
 14440  00386E  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14441  003872  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14442  003876  C086  FFDF         	movff	sprintf@c,indf2
 14443                           
 14444                           ; BSR set to: 0
 14445  00387A  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14446  00387C  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14447                           
 14448                           ;doprnt.c: 542: continue;
 14449  00387E  D041               	goto	l2640
 14450  003880                     l2630:
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;doprnt.c: 543: }
 14454                           ;doprnt.c: 548: flag = 0;
 14455                           
 14456                           ; BSR set to: 0
 14457  003880  0E00               	movlw	0
 14458  003882  6F83               	movwf	sprintf@flag& (0+255),b
 14459                           
 14460                           ;doprnt.c: 635: switch(c = *f++) {
 14461  003884  D02E               	goto	l2631
 14462  003886                     
 14463                           ; BSR set to: 0
 14464                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14465                           
 14466                           ; BSR set to: 0
 14467  003886  C084  FFD9         	movff	sprintf@ap,fsr2l
 14468  00388A  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14469  00388E  CFDE F087          	movff	postinc2,sprintf@cp
 14470  003892  CFDD F088          	movff	postdec2,sprintf@cp+1
 14471                           
 14472                           ; BSR set to: 0
 14473  003896  0E02               	movlw	2
 14474  003898  2784               	addwf	sprintf@ap& (0+255),f,b
 14475  00389A  0E00               	movlw	0
 14476  00389C  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;doprnt.c: 740: if(!cp)
 14480  00389E  5187               	movf	sprintf@cp& (0+255),w,b
 14481  0038A0  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14482  0038A2  A4D8               	btfss	status,2,c
 14483  0038A4  D014               	goto	l2636
 14484                           
 14485                           ; BSR set to: 0
 14486                           ;doprnt.c: 741: cp = "(null)";
 14487  0038A6  0ED7               	movlw	low STR_31
 14488  0038A8  6F87               	movwf	sprintf@cp& (0+255),b
 14489  0038AA  0EFF               	movlw	high STR_31
 14490  0038AC  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;doprnt.c: 777: while(*cp)
 14494  0038AE  D00F               	goto	l2636
 14495  0038B0                     
 14496                           ; BSR set to: 0
 14497                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14498                           
 14499                           ; BSR set to: 0
 14500  0038B0  C087  FFF6         	movff	sprintf@cp,tblptrl
 14501  0038B4  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14502  0038B8                     	if	0	;tblptru may be non-zero
 14503  0038B8                     	endif
 14504  0038B8                     	if	0	;tblptru may be non-zero
 14505  0038B8                     	endif
 14506  0038B8  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14507  0038BC  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14508  0038C0  0008               	tblrd		*
 14509  0038C2  CFF5 FFDF          	movff	tablat,indf2
 14510                           
 14511                           ; BSR set to: 0
 14512  0038C6  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14513  0038C8  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14514                           
 14515                           ; BSR set to: 0
 14516  0038CA  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14517  0038CC  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14518  0038CE                     l2636:
 14519                           
 14520                           ; BSR set to: 0
 14521                           
 14522                           ; BSR set to: 0
 14523  0038CE  C087  FFF6         	movff	sprintf@cp,tblptrl
 14524  0038D2  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14525  0038D6                     	if	0	;tblptru may be non-zero
 14526  0038D6                     	endif
 14527  0038D6                     	if	0	;tblptru may be non-zero
 14528  0038D6                     	endif
 14529  0038D6  0008               	tblrd		*
 14530  0038D8  50F5               	movf	tablat,w,c
 14531  0038DA  0900               	iorlw	0
 14532  0038DC  B4D8               	btfsc	status,2,c
 14533  0038DE  D011               	goto	l2640
 14534  0038E0  D7E7               	goto	l2637
 14535  0038E2                     l2631:
 14536                           
 14537                           ; BSR set to: 0
 14538                           
 14539                           ; BSR set to: 0
 14540  0038E2  C07F  FFF6         	movff	sprintf@f,tblptrl
 14541  0038E6  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14542  0038EA  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14543  0038EC  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14544  0038EE                     	if	0	;tblptru may be non-zero
 14545  0038EE                     	endif
 14546  0038EE                     	if	0	;tblptru may be non-zero
 14547  0038EE                     	endif
 14548  0038EE  0008               	tblrd		*
 14549  0038F0  CFF5 F086          	movff	tablat,sprintf@c
 14550  0038F4  5186               	movf	sprintf@c& (0+255),w,b
 14551                           
 14552                           ; Switch size 1, requested type "space"
 14553                           ; Number of cases is 2, Range of values is 0 to 115
 14554                           ; switch strategies available:
 14555                           ; Name         Instructions Cycles
 14556                           ; simple_byte            7     4 (average)
 14557                           ;	Chosen strategy is simple_byte
 14558  0038F6  0A00               	xorlw	0	; case 0
 14559  0038F8  B4D8               	btfsc	status,2,c
 14560  0038FA  D00F               	goto	u13150
 14561  0038FC  0A73               	xorlw	115	; case 115
 14562  0038FE  B4D8               	btfsc	status,2,c
 14563  003900  D7C2               	goto	l2634
 14564  003902                     l2640:
 14565                           
 14566                           ; BSR set to: 0
 14567                           
 14568                           ; BSR set to: 0
 14569                           
 14570                           ;doprnt.c: 1422: {
 14571                           
 14572                           ; BSR set to: 0
 14573  003902  C07F  FFF6         	movff	sprintf@f,tblptrl
 14574  003906  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14575  00390A  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14576  00390C  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14577  00390E                     	if	0	;tblptru may be non-zero
 14578  00390E                     	endif
 14579  00390E                     	if	0	;tblptru may be non-zero
 14580  00390E                     	endif
 14581  00390E  0008               	tblrd		*
 14582  003910  CFF5 F086          	movff	tablat,sprintf@c
 14583  003914  5186               	movf	sprintf@c& (0+255),w,b
 14584  003916  A4D8               	btfss	status,2,c
 14585  003918  D7A6               	goto	l2629
 14586  00391A                     u13150:
 14587                           
 14588                           ; BSR set to: 0
 14589                           ;doprnt.c: 1538: *sp = 0;
 14590                           
 14591                           ; BSR set to: 0
 14592                           
 14593                           ;doprnt.c: 1469: }
 14594                           ;doprnt.c: 1533: }
 14595                           ;doprnt.c: 1535: alldone:
 14596                           
 14597                           ; BSR set to: 0
 14598  00391A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14599  00391E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14600  003922  0E00               	movlw	0
 14601  003924  6EDF               	movwf	indf2,c
 14602  003926  0012               	return	
 14603  003928                     __end_of_sprintf:
 14604                           	opt stack 0
 14605                           tosu	equ	0xFFF
 14606                           tosh	equ	0xFFE
 14607                           tosl	equ	0xFFD
 14608                           pclath	equ	0xFFA
 14609                           tblptru	equ	0xFF8
 14610                           tblptrh	equ	0xFF7
 14611                           tblptrl	equ	0xFF6
 14612                           tablat	equ	0xFF5
 14613                           prodh	equ	0xFF4
 14614                           prodl	equ	0xFF3
 14615                           intcon	equ	0xFF2
 14616                           intcon2	equ	0xFF1
 14617                           intcon3	equ	0xFF0
 14618                           indf0	equ	0xFEF
 14619                           postinc0	equ	0xFEE
 14620                           plusw0	equ	0xFEB
 14621                           fsr0h	equ	0xFEA
 14622                           fsr0l	equ	0xFE9
 14623                           wreg	equ	0xFE8
 14624                           indf1	equ	0xFE7
 14625                           postinc1	equ	0xFE6
 14626                           postdec1	equ	0xFE5
 14627                           fsr1h	equ	0xFE2
 14628                           fsr1l	equ	0xFE1
 14629                           indf2	equ	0xFDF
 14630                           postinc2	equ	0xFDE
 14631                           postdec2	equ	0xFDD
 14632                           plusw2	equ	0xFDB
 14633                           fsr2h	equ	0xFDA
 14634                           fsr2l	equ	0xFD9
 14635                           status	equ	0xFD8
 14636                           
 14637 ;; *************** function _memset *****************
 14638 ;; Defined at:
 14639 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14640 ;; Parameters:    Size  Location     Type
 14641 ;;  p1              2   29[BANK0 ] PTR void 
 14642 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14643 ;;  c               2   31[BANK0 ] int 
 14644 ;;  n               2   33[BANK0 ] unsigned int 
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14647 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  2   29[BANK0 ] PTR void 
 14650 ;; Registers used:
 14651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/0
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14657 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14658 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14660 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14661 ;;Total ram usage:        8 bytes
 14662 ;; Hardware stack levels used:    1
 14663 ;; Hardware stack levels required when called:   11
 14664 ;; This function calls:
 14665 ;;		Nothing
 14666 ;; This function is called by:
 14667 ;;		_USBDeviceInit
 14668 ;;		_USBStdSetCfgHandler
 14669 ;;		_Term_MainSm
 14670 ;; This function uses a non-reentrant model
 14671 ;;
 14672                           
 14673                           	psect	text59
 14674  005CFE                     __ptext59:
 14675                           	opt stack 0
 14676  005CFE                     _memset:
 14677                           	opt stack 14
 14678                           
 14679                           ; BSR set to: 0
 14680                           ;incstack = 0
 14681  005CFE  C07D  F083         	movff	memset@p1,memset@p
 14682  005D02  C07E  F084         	movff	memset@p1+1,memset@p+1
 14683  005D06  D009               	goto	l3110
 14684  005D08                     l11805:
 14685  005D08  C083  FFD9         	movff	memset@p,fsr2l
 14686  005D0C  C084  FFDA         	movff	memset@p+1,fsr2h
 14687  005D10  C07F  FFDF         	movff	memset@c,indf2
 14688  005D14  0100               	movlb	0	; () banked
 14689  005D16  4B83               	infsnz	memset@p& (0+255),f,b
 14690  005D18  2B84               	incf	(memset@p+1)& (0+255),f,b
 14691  005D1A                     l3110:
 14692                           
 14693                           ; BSR set to: 0
 14694  005D1A  0100               	movlb	0	; () banked
 14695  005D1C  0781               	decf	memset@n& (0+255),f,b
 14696  005D1E  A0D8               	btfss	status,0,c
 14697  005D20  0782               	decf	(memset@n+1)& (0+255),f,b
 14698  005D22  2981               	incf	memset@n& (0+255),w,b
 14699  005D24  E1F1               	bnz	l11805
 14700  005D26  2982               	incf	(memset@n+1)& (0+255),w,b
 14701  005D28  B4D8               	btfsc	status,2,c
 14702  005D2A  0012               	return	
 14703  005D2C  D7ED               	goto	l3111
 14704  005D2E                     __end_of_memset:
 14705                           	opt stack 0
 14706                           tosu	equ	0xFFF
 14707                           tosh	equ	0xFFE
 14708                           tosl	equ	0xFFD
 14709                           pclath	equ	0xFFA
 14710                           tblptru	equ	0xFF8
 14711                           tblptrh	equ	0xFF7
 14712                           tblptrl	equ	0xFF6
 14713                           tablat	equ	0xFF5
 14714                           prodh	equ	0xFF4
 14715                           prodl	equ	0xFF3
 14716                           intcon	equ	0xFF2
 14717                           intcon2	equ	0xFF1
 14718                           intcon3	equ	0xFF0
 14719                           indf0	equ	0xFEF
 14720                           postinc0	equ	0xFEE
 14721                           plusw0	equ	0xFEB
 14722                           fsr0h	equ	0xFEA
 14723                           fsr0l	equ	0xFE9
 14724                           wreg	equ	0xFE8
 14725                           indf1	equ	0xFE7
 14726                           postinc1	equ	0xFE6
 14727                           postdec1	equ	0xFE5
 14728                           fsr1h	equ	0xFE2
 14729                           fsr1l	equ	0xFE1
 14730                           indf2	equ	0xFDF
 14731                           postinc2	equ	0xFDE
 14732                           postdec2	equ	0xFDD
 14733                           plusw2	equ	0xFDB
 14734                           fsr2h	equ	0xFDA
 14735                           fsr2l	equ	0xFD9
 14736                           status	equ	0xFD8
 14737                           
 14738 ;; *************** function _Terminal *****************
 14739 ;; Defined at:
 14740 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;		None
 14743 ;; Auto vars:     Size  Location     Type
 14744 ;;  i               1   68[BANK0 ] unsigned char 
 14745 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14746 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14747 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14748 ;;  Index           1   70[BANK0 ] unsigned char 
 14749 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14750 ;; Return value:  Size  Location     Type
 14751 ;;                  1    wreg      void 
 14752 ;; Registers used:
 14753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14754 ;; Tracked objects:
 14755 ;;		On entry : 0/0
 14756 ;;		On exit  : 0/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14760 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14762 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14763 ;;Total ram usage:      455 bytes
 14764 ;; Hardware stack levels used:    1
 14765 ;; Hardware stack levels required when called:   15
 14766 ;; This function calls:
 14767 ;;		_I2cSlv_I2cReadMsgSts
 14768 ;;		_I2cSlv_ReceiveI2cMsg
 14769 ;;		_I2cSlv_SendI2cMsg
 14770 ;;		_OsTmr_Wait
 14771 ;;		_atoi
 14772 ;;		_getsUSBUSART
 14773 ;;		_itoa
 14774 ;;		_putUSBUSART
 14775 ;;		_strcpy
 14776 ;;		_strtol
 14777 ;;		_xtoi
 14778 ;; This function is called by:
 14779 ;;		_Term_MainSm
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783                           	psect	text60
 14784  0000D0                     __ptext60:
 14785                           	opt stack 0
 14786  0000D0                     _Terminal:
 14787                           	opt stack 11
 14788                           
 14789                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14790                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14791                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14792                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14793                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14794                           ;term.c: 435: UINT8 Index;
 14795                           ;term.c: 436: static UINT8 Len[4];
 14796                           ;term.c: 437: static UINT8 PackageLen;
 14797                           ;term.c: 438: static UINT8 Addr[4];
 14798                           ;term.c: 439: static UINT8 SlaveAddr;
 14799                           ;term.c: 440: static PayloadType Payload[20u];
 14800                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14801                           
 14802                           ; BSR set to: 0
 14803                           ;incstack = 0
 14804  0000D0  0E00               	movlw	0
 14805  0000D2  0100               	movlb	0	; () banked
 14806  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14807                           
 14808                           ; BSR set to: 0
 14809                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14810                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14811                           ;term.c: 445: static SwTimerType SwTimer;
 14812                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14813  0000D6  0E1F               	movlw	31
 14814  0000D8  65CD               	cpfsgt	_USBDeviceState& (0+255),b
 14815  0000DA  0012               	return	
 14816                           
 14817                           ; BSR set to: 0
 14818  0000DC  B265               	btfsc	3941,1,c	;volatile
 14819  0000DE  0012               	return	
 14820  0000E0  D278               	goto	l2367
 14821  0000E2                     
 14822                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14823                           
 14824                           ; BSR set to: 0
 14825  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14826  0000E4  0100               	movlb	0	; () banked
 14827  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14828  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14829  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14830  0000EC  0EC8               	movlw	200
 14831  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14832  0000F0  EC54  F024         	call	_getsUSBUSART	;wreg free
 14833  0000F4  0100               	movlb	0	; () banked
 14834  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14835                           
 14836                           ; BSR set to: 0
 14837                           ;term.c: 458: if (ReceivedBytes > 0)
 14838  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14839  0000FA  B4D8               	btfsc	status,2,c
 14840  0000FC  0012               	return	
 14841                           
 14842                           ; BSR set to: 0
 14843                           ;term.c: 459: {
 14844                           ;term.c: 461: if (EchoOption == 1u)
 14845  0000FE  0102               	movlb	2	; () banked
 14846  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14847  000102  A4D8               	btfss	status,2,c
 14848  000104  D026               	goto	l2371
 14849                           
 14850                           ; BSR set to: 2
 14851                           ;term.c: 462: {
 14852                           ;term.c: 464: if((cdc_trf_state == 0))
 14853  000106  0100               	movlb	0	; () banked
 14854  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14855  00010A  A4D8               	btfss	status,2,c
 14856  00010C  D022               	goto	l2371
 14857                           
 14858                           ; BSR set to: 0
 14859                           ;term.c: 465: {
 14860                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14861  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14862  000110  0D01               	mullw	1
 14863  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14864  000114  24F3               	addwf	prodl,w,c
 14865  000116  6ED9               	movwf	fsr2l,c
 14866  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14867  00011A  20F4               	addwfc	prodh,w,c
 14868  00011C  6EDA               	movwf	fsr2h,c
 14869  00011E  0E0D               	movlw	13
 14870  000120  6EDF               	movwf	indf2,c
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14874  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14875  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14876  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14877  000128  0E01               	movlw	1
 14878  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14879  00012C  0E00               	movlw	0
 14880  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14881  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14882  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14883  000134  6ED9               	movwf	fsr2l,c
 14884  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14885  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14886  00013A  6EDA               	movwf	fsr2h,c
 14887  00013C  0E0A               	movlw	10
 14888  00013E  6EDF               	movwf	indf2,c
 14889                           
 14890                           ; BSR set to: 0
 14891                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14892  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14893  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14894  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14895  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14896  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14897  00014A  0F02               	addlw	2
 14898  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14899  00014E  ECD7  F02F         	call	_putUSBUSART	;wreg free
 14900  000152                     l2371:
 14901                           
 14902                           ;term.c: 469: }
 14903                           ;term.c: 470: }
 14904                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14905                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14906                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14907  000152  0E53               	movlw	83
 14908  000154  010A               	movlb	10	; () banked
 14909  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14910  000158  A4D8               	btfss	status,2,c
 14911  00015A  D043               	goto	l2372
 14912                           
 14913                           ; BSR set to: 10
 14914  00015C  0E4F               	movlw	79
 14915  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14916  000160  A4D8               	btfss	status,2,c
 14917  000162  D03F               	goto	l2372
 14918                           
 14919                           ; BSR set to: 10
 14920  000164  0E3A               	movlw	58
 14921  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14922  000168  A4D8               	btfss	status,2,c
 14923  00016A  D03B               	goto	l2372
 14924                           
 14925                           ; BSR set to: 10
 14926                           ;term.c: 476: {
 14927                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14928  00016C  0E47               	movlw	71
 14929  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14930  000170  A4D8               	btfss	status,2,c
 14931  000172  0012               	return	
 14932                           
 14933                           ; BSR set to: 10
 14934  000174  0E3A               	movlw	58
 14935  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14936  000178  A4D8               	btfss	status,2,c
 14937  00017A  0012               	return	
 14938                           
 14939                           ; BSR set to: 10
 14940                           ;term.c: 479: {
 14941                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14942  00017C  0E44               	movlw	68
 14943  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14944  000180  A4D8               	btfss	status,2,c
 14945  000182  D015               	goto	l2374
 14946                           
 14947                           ; BSR set to: 10
 14948  000184  0E46               	movlw	70
 14949  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14950  000188  A4D8               	btfss	status,2,c
 14951  00018A  D011               	goto	l2374
 14952                           
 14953                           ; BSR set to: 10
 14954                           ;term.c: 482: {
 14955                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14956  00018C  0E41               	movlw	65
 14957  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14958  000190  A4D8               	btfss	status,2,c
 14959  000192  D004               	goto	l2375
 14960                           
 14961                           ; BSR set to: 10
 14962                           ;term.c: 484: {
 14963                           ;term.c: 485: FormatOption = 1u;
 14964  000194  0E01               	movlw	1
 14965  000196  0102               	movlb	2	; () banked
 14966  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14967                           
 14968                           ;term.c: 486: }
 14969  00019A  0012               	return	
 14970  00019C                     l2375:
 14971                           
 14972                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14973                           
 14974                           ; BSR set to: 2
 14975  00019C  0E42               	movlw	66
 14976  00019E  010A               	movlb	10	; () banked
 14977  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14978  0001A2  A4D8               	btfss	status,2,c
 14979  0001A4  0012               	return	
 14980                           
 14981                           ; BSR set to: 10
 14982                           ;term.c: 488: {
 14983                           ;term.c: 489: FormatOption = 0u;
 14984  0001A6  0E00               	movlw	0
 14985  0001A8  0102               	movlb	2	; () banked
 14986  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14987                           
 14988                           ; BSR set to: 2
 14989                           ;term.c: 490: }
 14990                           ;term.c: 491: }
 14991                           
 14992                           ; BSR set to: 2
 14993  0001AC  0012               	return	
 14994  0001AE                     l2374:
 14995                           
 14996                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14997                           
 14998                           ; BSR set to: 2
 14999  0001AE  0E45               	movlw	69
 15000  0001B0  010A               	movlb	10	; () banked
 15001  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15002  0001B4  A4D8               	btfss	status,2,c
 15003  0001B6  0012               	return	
 15004                           
 15005                           ; BSR set to: 10
 15006  0001B8  0E4D               	movlw	77
 15007  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15008  0001BC  A4D8               	btfss	status,2,c
 15009  0001BE  0012               	return	
 15010                           
 15011                           ; BSR set to: 10
 15012                           ;term.c: 494: {
 15013                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15014  0001C0  0E31               	movlw	49
 15015  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15016  0001C4  A4D8               	btfss	status,2,c
 15017  0001C6  D004               	goto	l2380
 15018                           
 15019                           ; BSR set to: 10
 15020                           ;term.c: 496: {
 15021                           ;term.c: 497: EchoOption = 1u;
 15022  0001C8  0E01               	movlw	1
 15023  0001CA  0102               	movlb	2	; () banked
 15024  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15025                           
 15026                           ;term.c: 498: }
 15027  0001CE  0012               	return	
 15028  0001D0                     l2380:
 15029                           
 15030                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15031                           
 15032                           ; BSR set to: 2
 15033  0001D0  0E30               	movlw	48
 15034  0001D2  010A               	movlb	10	; () banked
 15035  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15036  0001D6  A4D8               	btfss	status,2,c
 15037  0001D8  0012               	return	
 15038                           
 15039                           ; BSR set to: 10
 15040                           ;term.c: 500: {
 15041                           ;term.c: 501: EchoOption = 0u;
 15042  0001DA  0E00               	movlw	0
 15043  0001DC  0102               	movlb	2	; () banked
 15044  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15045                           
 15046                           ; BSR set to: 2
 15047                           ;term.c: 507: }
 15048                           ;term.c: 508: }
 15049                           ;term.c: 509: }
 15050                           
 15051                           ; BSR set to: 2
 15052                           
 15053                           ; BSR set to: 2
 15054                           
 15055                           ;term.c: 504: else
 15056                           ;term.c: 505: {
 15057                           
 15058                           ; BSR set to: 2
 15059                           
 15060                           ; BSR set to: 2
 15061                           ;term.c: 502: }
 15062                           ;term.c: 503: }
 15063                           
 15064                           ; BSR set to: 2
 15065  0001E0  0012               	return	
 15066  0001E2                     l2372:
 15067                           
 15068                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15069                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15070                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15071                           
 15072                           ; BSR set to: 2
 15073  0001E2  0E53               	movlw	83
 15074  0001E4  010A               	movlb	10	; () banked
 15075  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15076  0001E8  A4D8               	btfss	status,2,c
 15077  0001EA  D0D3               	goto	l2385
 15078                           
 15079                           ; BSR set to: 10
 15080  0001EC  0E42               	movlw	66
 15081  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15082  0001F0  A4D8               	btfss	status,2,c
 15083  0001F2  D0CF               	goto	l2385
 15084                           
 15085                           ; BSR set to: 10
 15086  0001F4  0E3A               	movlw	58
 15087  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15088  0001F8  A4D8               	btfss	status,2,c
 15089  0001FA  D0CB               	goto	l2385
 15090                           
 15091                           ; BSR set to: 10
 15092                           ;term.c: 513: {
 15093                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15094  0001FC  0E57               	movlw	87
 15095  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15096  000200  A4D8               	btfss	status,2,c
 15097  000202  D091               	goto	l2386
 15098                           
 15099                           ; BSR set to: 10
 15100  000204  0E3A               	movlw	58
 15101  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15102  000208  A4D8               	btfss	status,2,c
 15103  00020A  D08D               	goto	l2386
 15104                           
 15105                           ; BSR set to: 10
 15106                           ;term.c: 515: {
 15107                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15108  00020C  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15109                           
 15110                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15111  000210  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15112                           
 15113                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15114  000214  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15115                           
 15116                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15117  000218  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15118                           
 15119                           ; BSR set to: 10
 15120                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15121  00021C  0EAC               	movlw	low Terminal@Len
 15122  00021E  0100               	movlb	0	; () banked
 15123  000220  6F83               	movwf	atoi@s& (0+255),b
 15124  000222  0E03               	movlw	high Terminal@Len
 15125  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15126  000226  EC58  F01B         	call	_atoi	;wreg free
 15127  00022A  0100               	movlb	0	; () banked
 15128  00022C  5183               	movf	?_atoi& (0+255),w,b
 15129  00022E  0102               	movlb	2	; () banked
 15130  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15131                           
 15132                           ; BSR set to: 2
 15133                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15134  000232  0EA8               	movlw	low Terminal@Addr
 15135  000234  0100               	movlb	0	; () banked
 15136  000236  6F83               	movwf	xtoi@s& (0+255),b
 15137  000238  0E03               	movlw	high Terminal@Addr
 15138  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15139  00023C  EC07  F01A         	call	_xtoi	;wreg free
 15140  000240  0100               	movlb	0	; () banked
 15141  000242  5183               	movf	?_xtoi& (0+255),w,b
 15142  000244  0102               	movlb	2	; () banked
 15143  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15144                           
 15145                           ; BSR set to: 2
 15146                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15147  000248  0E00               	movlw	0
 15148  00024A  0100               	movlb	0	; () banked
 15149  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15150  00024E  D032               	goto	l2387
 15151  000250                     
 15152                           ;term.c: 527: {
 15153                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15154                           
 15155                           ; BSR set to: 0
 15156  000250  0100               	movlb	0	; () banked
 15157  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15158  000254  0D02               	mullw	2
 15159  000256  0E0B               	movlw	11
 15160  000258  26F3               	addwf	prodl,f,c
 15161  00025A  0E00               	movlw	0
 15162  00025C  22F4               	addwfc	prodh,f,c
 15163  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15164  000260  24F3               	addwf	prodl,w,c
 15165  000262  6ED9               	movwf	fsr2l,c
 15166  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15167  000266  20F4               	addwfc	prodh,w,c
 15168  000268  6EDA               	movwf	fsr2h,c
 15169  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15170  00026C  0D04               	mullw	4
 15171  00026E  0E66               	movlw	low Terminal@Payload
 15172  000270  24F3               	addwf	prodl,w,c
 15173  000272  6EE1               	movwf	fsr1l,c
 15174  000274  0E07               	movlw	high Terminal@Payload
 15175  000276  20F4               	addwfc	prodh,w,c
 15176  000278  6EE2               	movwf	fsr1h,c
 15177  00027A  CFDF FFE7          	movff	indf2,indf1
 15178                           
 15179                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15180  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15181  000280  0D02               	mullw	2
 15182  000282  0E0C               	movlw	12
 15183  000284  26F3               	addwf	prodl,f,c
 15184  000286  0E00               	movlw	0
 15185  000288  22F4               	addwfc	prodh,f,c
 15186  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15187  00028C  24F3               	addwf	prodl,w,c
 15188  00028E  6ED9               	movwf	fsr2l,c
 15189  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15190  000292  20F4               	addwfc	prodh,w,c
 15191  000294  6EDA               	movwf	fsr2h,c
 15192  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15193  000298  0D04               	mullw	4
 15194  00029A  0E01               	movlw	1
 15195  00029C  26F3               	addwf	prodl,f,c
 15196  00029E  0E00               	movlw	0
 15197  0002A0  22F4               	addwfc	prodh,f,c
 15198  0002A2  0E66               	movlw	low Terminal@Payload
 15199  0002A4  24F3               	addwf	prodl,w,c
 15200  0002A6  6EE1               	movwf	fsr1l,c
 15201  0002A8  0E07               	movlw	high Terminal@Payload
 15202  0002AA  20F4               	addwfc	prodh,w,c
 15203  0002AC  6EE2               	movwf	fsr1h,c
 15204  0002AE  CFDF FFE7          	movff	indf2,indf1
 15205                           
 15206                           ; BSR set to: 0
 15207  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15208  0002B4                     l2387:
 15209                           
 15210                           ; BSR set to: 0
 15211                           
 15212                           ; BSR set to: 0
 15213  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15214  0002B6  0102               	movlb	2	; () banked
 15215  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15216  0002BA  B0D8               	btfsc	status,0,c
 15217  0002BC  D7C9               	goto	l2388
 15218                           
 15219                           ; BSR set to: 2
 15220                           ;term.c: 530: }
 15221                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15222                           
 15223                           ; BSR set to: 2
 15224  0002BE  0E00               	movlw	0
 15225  0002C0  0100               	movlb	0	; () banked
 15226  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15227  0002C4  D01F               	goto	l2390
 15228  0002C6                     
 15229                           ;term.c: 533: {
 15230                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15231                           
 15232                           ; BSR set to: 0
 15233  0002C6  0100               	movlb	0	; () banked
 15234  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15235  0002CA  0D04               	mullw	4
 15236  0002CC  0E66               	movlw	low Terminal@Payload
 15237  0002CE  24F3               	addwf	prodl,w,c
 15238  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15239  0002D2  0E07               	movlw	high Terminal@Payload
 15240  0002D4  20F4               	addwfc	prodh,w,c
 15241  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15242  0002D8  0E00               	movlw	0
 15243  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15244  0002DC  0E00               	movlw	0
 15245  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15246  0002E0  0E00               	movlw	0
 15247  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15248  0002E4  0E10               	movlw	16
 15249  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15250  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15251  0002EC  0100               	movlb	0	; () banked
 15252  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15253  0002F0  0D01               	mullw	1
 15254  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15255  0002F4  24F3               	addwf	prodl,w,c
 15256  0002F6  6ED9               	movwf	fsr2l,c
 15257  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15258  0002FA  20F4               	addwfc	prodh,w,c
 15259  0002FC  6EDA               	movwf	fsr2h,c
 15260  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15261                           
 15262                           ; BSR set to: 0
 15263  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15264  000304                     l2390:
 15265                           
 15266                           ; BSR set to: 0
 15267                           
 15268                           ; BSR set to: 0
 15269  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15270  000306  0102               	movlb	2	; () banked
 15271  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15272  00030A  B0D8               	btfsc	status,0,c
 15273  00030C  D7DC               	goto	l2391
 15274                           
 15275                           ; BSR set to: 2
 15276                           ;term.c: 539: }
 15277                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15278                           
 15279                           ; BSR set to: 2
 15280  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15281  000310  0100               	movlb	0	; () banked
 15282  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15283  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15284  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15285  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15286  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15287  000320  EC32  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 15288                           
 15289                           ;term.c: 543: }
 15290  000324  0012               	return	
 15291  000326                     l2386:
 15292                           
 15293                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15294  000326  0E52               	movlw	82
 15295  000328  010A               	movlb	10	; () banked
 15296  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15297  00032C  A4D8               	btfss	status,2,c
 15298  00032E  0012               	return	
 15299                           
 15300                           ; BSR set to: 10
 15301  000330  0E3A               	movlw	58
 15302  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15303  000334  A4D8               	btfss	status,2,c
 15304  000336  0012               	return	
 15305                           
 15306                           ; BSR set to: 10
 15307                           ;term.c: 545: {
 15308                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15309  000338  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15310                           
 15311                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15312  00033C  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15313                           
 15314                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15315  000340  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15316                           
 15317                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15318  000344  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15319                           
 15320                           ; BSR set to: 10
 15321                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15322  000348  0EAC               	movlw	low Terminal@Len
 15323  00034A  0100               	movlb	0	; () banked
 15324  00034C  6F83               	movwf	atoi@s& (0+255),b
 15325  00034E  0E03               	movlw	high Terminal@Len
 15326  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15327  000352  EC58  F01B         	call	_atoi	;wreg free
 15328  000356  0100               	movlb	0	; () banked
 15329  000358  5183               	movf	?_atoi& (0+255),w,b
 15330  00035A  0102               	movlb	2	; () banked
 15331  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15332                           
 15333                           ; BSR set to: 2
 15334                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15335  00035E  0EA8               	movlw	low Terminal@Addr
 15336  000360  0100               	movlb	0	; () banked
 15337  000362  6F83               	movwf	xtoi@s& (0+255),b
 15338  000364  0E03               	movlw	high Terminal@Addr
 15339  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15340  000368  EC07  F01A         	call	_xtoi	;wreg free
 15341  00036C  0100               	movlb	0	; () banked
 15342  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15343  000370  0102               	movlb	2	; () banked
 15344  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15345                           
 15346                           ; BSR set to: 2
 15347                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15348  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15349  000376  0100               	movlb	0	; () banked
 15350  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15351  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15352  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15353  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15354  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15355  000386  ECD3  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15356                           
 15357                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15358  00038A  0E01               	movlw	1
 15359  00038C  0102               	movlb	2	; () banked
 15360  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15361                           
 15362                           ; BSR set to: 2
 15363                           ;term.c: 561: }
 15364                           ;term.c: 562: }
 15365                           
 15366                           ; BSR set to: 2
 15367  000390  0012               	return	
 15368  000392                     l2385:
 15369                           
 15370                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15371                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15372                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15373                           
 15374                           ; BSR set to: 2
 15375  000392  0E54               	movlw	84
 15376  000394  010A               	movlb	10	; () banked
 15377  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15378  000398  A4D8               	btfss	status,2,c
 15379  00039A  0012               	return	
 15380                           
 15381                           ; BSR set to: 10
 15382  00039C  0E45               	movlw	69
 15383  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15384  0003A0  A4D8               	btfss	status,2,c
 15385  0003A2  0012               	return	
 15386                           
 15387                           ; BSR set to: 10
 15388  0003A4  0E4C               	movlw	76
 15389  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15390  0003A8  A4D8               	btfss	status,2,c
 15391  0003AA  0012               	return	
 15392                           
 15393                           ; BSR set to: 10
 15394                           ;term.c: 566: {
 15395                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15396  0003AC  CA03  F3AC         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15397                           
 15398                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15399  0003B0  CA04  F3AD         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15400                           
 15401                           ; BSR set to: 10
 15402                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15403  0003B4  0EAC               	movlw	low Terminal@Len
 15404  0003B6  0100               	movlb	0	; () banked
 15405  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15406  0003BA  0E03               	movlw	high Terminal@Len
 15407  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15408  0003BE  EC58  F01B         	call	_atoi	;wreg free
 15409  0003C2  C083  F322         	movff	?_atoi,_PhoneNumberLen
 15410  0003C6  C084  F323         	movff	?_atoi+1,_PhoneNumberLen+1
 15411                           
 15412                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15413  0003CA  0E00               	movlw	0
 15414  0003CC  0100               	movlb	0	; () banked
 15415  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15416  0003D0  D018               	goto	l2397
 15417  0003D2                     
 15418                           ; BSR set to: 0
 15419                           ;term.c: 573: {
 15420                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15421                           
 15422                           ; BSR set to: 0
 15423  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15424  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15425  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15426  0003D8  0E05               	movlw	5
 15427  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15428  0003DC  0E00               	movlw	0
 15429  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15430  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15431  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15432  0003E4  6ED9               	movwf	fsr2l,c
 15433  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15434  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15435  0003EA  6EDA               	movwf	fsr2h,c
 15436  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15437  0003EE  0D01               	mullw	1
 15438  0003F0  0E86               	movlw	low _PhoneNumber
 15439  0003F2  24F3               	addwf	prodl,w,c
 15440  0003F4  6EE1               	movwf	fsr1l,c
 15441  0003F6  0E04               	movlw	high _PhoneNumber
 15442  0003F8  20F4               	addwfc	prodh,w,c
 15443  0003FA  6EE2               	movwf	fsr1h,c
 15444  0003FC  CFDF FFE7          	movff	indf2,indf1
 15445                           
 15446                           ; BSR set to: 0
 15447  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15448  000402                     l2397:
 15449                           
 15450                           ; BSR set to: 0
 15451                           
 15452                           ; BSR set to: 0
 15453  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15454  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15455  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15456  000408  0103               	movlb	3	; () banked
 15457  00040A  5122               	movf	_PhoneNumberLen& (0+255),w,b
 15458  00040C  0100               	movlb	0	; () banked
 15459  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15460  000410  0103               	movlb	3	; () banked
 15461  000412  5123               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15462  000414  0100               	movlb	0	; () banked
 15463  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15464  000418  B0D8               	btfsc	status,0,c
 15465  00041A  0012               	return	
 15466  00041C  D7DA               	goto	l2398
 15467  00041E                     
 15468                           ;term.c: 619: if((cdc_trf_state == 0))
 15469                           
 15470                           ; BSR set to: 0
 15471  00041E  0100               	movlb	0	; () banked
 15472  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15473  000422  A4D8               	btfss	status,2,c
 15474  000424  0012               	return	
 15475                           
 15476                           ; BSR set to: 0
 15477                           ;term.c: 620: {
 15478                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15479  000426  0E53               	movlw	83
 15480  000428  0102               	movlb	2	; () banked
 15481  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15482                           
 15483                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15484  00042C  0E42               	movlw	66
 15485  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15486                           
 15487                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15488  000430  0E5B               	movlw	91
 15489  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15490                           
 15491                           ; BSR set to: 2
 15492                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15493  000434  C3A8  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15494                           
 15495                           ; BSR set to: 2
 15496                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15497  000438  C3A9  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15498                           
 15499                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15500  00043C  0E5D               	movlw	93
 15501  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15502                           
 15503                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15504  000440  0E3A               	movlw	58
 15505  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15506                           
 15507                           ; BSR set to: 2
 15508                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15509  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15510  000446  0100               	movlb	0	; () banked
 15511  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15512  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15513  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15514  00044E  0E07               	movlw	7
 15515  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15516  000452  ECD7  F02F         	call	_putUSBUSART	;wreg free
 15517                           
 15518                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15519  000456  0E02               	movlw	2
 15520  000458  0102               	movlb	2	; () banked
 15521  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15522                           
 15523                           ; BSR set to: 2
 15524                           ;term.c: 632: }
 15525                           ;term.c: 633: break;
 15526  00045C  0012               	return	
 15527  00045E                     
 15528                           ; BSR set to: 2
 15529                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15530                           
 15531                           ; BSR set to: 2
 15532  00045E  ECF9  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15533  000462  06E8               	decf	wreg,f,c
 15534  000464  A4D8               	btfss	status,2,c
 15535  000466  D088               	goto	l2406
 15536                           
 15537                           ;term.c: 638: {
 15538                           ;term.c: 640: if (FormatOption == 1u)
 15539  000468  0102               	movlb	2	; () banked
 15540  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15541  00046C  A4D8               	btfss	status,2,c
 15542  00046E  D027               	goto	u13030
 15543                           
 15544                           ; BSR set to: 2
 15545                           ;term.c: 641: {
 15546                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15547  000470  0E00               	movlw	0
 15548  000472  0100               	movlb	0	; () banked
 15549  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15550  000476  D01E               	goto	l2408
 15551  000478                     
 15552                           ;term.c: 644: {
 15553                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15554                           
 15555                           ; BSR set to: 0
 15556  000478  0100               	movlb	0	; () banked
 15557  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15558  00047C  0D04               	mullw	4
 15559  00047E  0E66               	movlw	low Terminal@Payload
 15560  000480  24F3               	addwf	prodl,w,c
 15561  000482  6F93               	movwf	itoa@buf& (0+255),b
 15562  000484  0E07               	movlw	high Terminal@Payload
 15563  000486  20F4               	addwfc	prodh,w,c
 15564  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15565  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15566  00048C  0D01               	mullw	1
 15567  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15568  000490  24F3               	addwf	prodl,w,c
 15569  000492  6ED9               	movwf	fsr2l,c
 15570  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15571  000496  20F4               	addwfc	prodh,w,c
 15572  000498  6EDA               	movwf	fsr2h,c
 15573  00049A  50DF               	movf	indf2,w,c
 15574  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15575  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15576  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15577  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15578  0004A4  0E00               	movlw	0
 15579  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15580  0004A8  0E0A               	movlw	10
 15581  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15582  0004AC  EC4C  F02C         	call	_itoa	;wreg free
 15583  0004B0  0100               	movlb	0	; () banked
 15584  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15585  0004B4                     l2408:
 15586                           
 15587                           ; BSR set to: 0
 15588                           
 15589                           ; BSR set to: 0
 15590  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15591  0004B6  0102               	movlb	2	; () banked
 15592  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15593  0004BA  B0D8               	btfsc	status,0,c
 15594  0004BC  D7DD               	goto	l2409
 15595  0004BE                     u13030:
 15596                           
 15597                           ; BSR set to: 2
 15598                           ;term.c: 646: }
 15599                           ;term.c: 647: }
 15600                           ;term.c: 650: if((cdc_trf_state == 0))
 15601                           
 15602                           ; BSR set to: 2
 15603                           
 15604                           ; BSR set to: 2
 15605  0004BE  0100               	movlb	0	; () banked
 15606  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15607  0004C2  A4D8               	btfss	status,2,c
 15608  0004C4  0012               	return	
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;term.c: 651: {
 15612                           ;term.c: 653: if (FormatOption == 1u)
 15613  0004C6  0102               	movlb	2	; () banked
 15614  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15615  0004CA  A4D8               	btfss	status,2,c
 15616  0004CC  D02B               	goto	l2412
 15617                           
 15618                           ; BSR set to: 2
 15619                           ;term.c: 654: {
 15620                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15621  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15622  0004D0  0D08               	mullw	8
 15623  0004D2  0E03               	movlw	3
 15624  0004D4  26F3               	addwf	prodl,f,c
 15625  0004D6  0E00               	movlw	0
 15626  0004D8  22F4               	addwfc	prodh,f,c
 15627  0004DA  0E66               	movlw	low Terminal@Payload
 15628  0004DC  24F3               	addwf	prodl,w,c
 15629  0004DE  6ED9               	movwf	fsr2l,c
 15630  0004E0  0E07               	movlw	high Terminal@Payload
 15631  0004E2  20F4               	addwfc	prodh,w,c
 15632  0004E4  6EDA               	movwf	fsr2h,c
 15633  0004E6  0E0D               	movlw	13
 15634  0004E8  6EDF               	movwf	indf2,c
 15635                           
 15636                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15637  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15638  0004EC  0D08               	mullw	8
 15639  0004EE  0E02               	movlw	2
 15640  0004F0  26F3               	addwf	prodl,f,c
 15641  0004F2  0E00               	movlw	0
 15642  0004F4  22F4               	addwfc	prodh,f,c
 15643  0004F6  0E66               	movlw	low Terminal@Payload
 15644  0004F8  24F3               	addwf	prodl,w,c
 15645  0004FA  6ED9               	movwf	fsr2l,c
 15646  0004FC  0E07               	movlw	high Terminal@Payload
 15647  0004FE  20F4               	addwfc	prodh,w,c
 15648  000500  6EDA               	movwf	fsr2h,c
 15649  000502  0E0A               	movlw	10
 15650  000504  6EDF               	movwf	indf2,c
 15651                           
 15652                           ; BSR set to: 2
 15653                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15654  000506  0E66               	movlw	low Terminal@Payload
 15655  000508  0100               	movlb	0	; () banked
 15656  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15657  00050C  0E07               	movlw	high Terminal@Payload
 15658  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15659  000510  0102               	movlb	2	; () banked
 15660  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15661  000514  0D02               	mullw	2
 15662  000516  50F3               	movf	prodl,w,c
 15663  000518  0F04               	addlw	4
 15664  00051A  0100               	movlb	0	; () banked
 15665  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15666  00051E  ECD7  F02F         	call	_putUSBUSART	;wreg free
 15667                           
 15668                           ;term.c: 659: }
 15669  000522  D026               	goto	l2413
 15670  000524                     l2412:
 15671                           
 15672                           ;term.c: 660: else
 15673                           ;term.c: 661: {
 15674                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15675  000524  0102               	movlb	2	; () banked
 15676  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15677  000528  0D01               	mullw	1
 15678  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15679  00052C  24F3               	addwf	prodl,w,c
 15680  00052E  6ED9               	movwf	fsr2l,c
 15681  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15682  000532  20F4               	addwfc	prodh,w,c
 15683  000534  6EDA               	movwf	fsr2h,c
 15684  000536  0E0D               	movlw	13
 15685  000538  6EDF               	movwf	indf2,c
 15686                           
 15687                           ; BSR set to: 2
 15688                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15689  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15690  00053C  0100               	movlb	0	; () banked
 15691  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15692  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15693  000542  0E01               	movlw	1
 15694  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15695  000546  0E00               	movlw	0
 15696  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15697  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15698  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15699  00054E  6ED9               	movwf	fsr2l,c
 15700  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15701  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15702  000554  6EDA               	movwf	fsr2h,c
 15703  000556  0E0A               	movlw	10
 15704  000558  6EDF               	movwf	indf2,c
 15705                           
 15706                           ; BSR set to: 0
 15707                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15708  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15709  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15710  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15711  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15712  000562  0102               	movlb	2	; () banked
 15713  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15714  000566  0F02               	addlw	2
 15715  000568  0100               	movlb	0	; () banked
 15716  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15717  00056C  ECD7  F02F         	call	_putUSBUSART	;wreg free
 15718  000570                     l2413:
 15719                           
 15720                           ;term.c: 666: }
 15721                           ;term.c: 668: TermState = Term_GetData;
 15722  000570  0E00               	movlw	0
 15723  000572  0102               	movlb	2	; () banked
 15724  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15725                           
 15726                           ; BSR set to: 2
 15727                           ;term.c: 669: }
 15728                           ;term.c: 670: }
 15729  000576  0012               	return	
 15730  000578                     l2406:
 15731                           
 15732                           ;term.c: 671: else
 15733                           ;term.c: 672: {
 15734                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15735                           
 15736                           ; BSR set to: 2
 15737  000578  0EA9               	movlw	low Terminal@SwTimer
 15738  00057A  0100               	movlb	0	; () banked
 15739  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15740  00057E  0E04               	movlw	high Terminal@SwTimer
 15741  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15742  000582  0EB8               	movlw	184
 15743  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15744  000586  0E0B               	movlw	11
 15745  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15746  00058A  0E00               	movlw	0
 15747  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15748  00058E  0E00               	movlw	0
 15749  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15750  000592  EC8D  F026         	call	_OsTmr_Wait	;wreg free
 15751  000596  06E8               	decf	wreg,f,c
 15752  000598  A4D8               	btfss	status,2,c
 15753  00059A  0012               	return	
 15754                           
 15755                           ;term.c: 675: {
 15756                           ;term.c: 677: if((cdc_trf_state == 0))
 15757  00059C  0100               	movlb	0	; () banked
 15758  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15759  0005A0  A4D8               	btfss	status,2,c
 15760  0005A2  0012               	return	
 15761                           
 15762                           ; BSR set to: 0
 15763                           ;term.c: 678: {
 15764                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15765  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15766  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15767  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15768  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15769  0005AC  0E6C               	movlw	low STR_21
 15770  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15771  0005B0  0EFE               	movlw	high STR_21
 15772  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15773  0005B4  EC4E  F02E         	call	_strcpy	;wreg free
 15774                           
 15775                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15776  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15777  0005BA  0100               	movlb	0	; () banked
 15778  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15779  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15780  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15781  0005C2  0E29               	movlw	41
 15782  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15783  0005C6  ECD7  F02F         	call	_putUSBUSART	;wreg free
 15784                           
 15785                           ;term.c: 682: TermState = Term_GetData;
 15786  0005CA  0E00               	movlw	0
 15787  0005CC  0102               	movlb	2	; () banked
 15788  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15789                           
 15790                           ; BSR set to: 2
 15791                           ;term.c: 693: }
 15792                           
 15793                           ; BSR set to: 2
 15794                           ;term.c: 692: break;
 15795                           
 15796                           ;term.c: 691: default:
 15797                           
 15798                           ; BSR set to: 2
 15799                           ;term.c: 689: break;
 15800                           
 15801                           ;term.c: 688: case Term_ReadSlvUartData:
 15802                           
 15803                           ; BSR set to: 2
 15804                           ;term.c: 683: }
 15805                           ;term.c: 684: }
 15806                           ;term.c: 685: }
 15807                           ;term.c: 686: break;
 15808                           
 15809                           ; BSR set to: 2
 15810                           
 15811                           ; BSR set to: 2
 15812  0005D0  0012               	return	
 15813  0005D2                     l2367:
 15814                           
 15815                           ; BSR set to: 2
 15816  0005D2  0102               	movlb	2	; () banked
 15817  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15818                           
 15819                           ; Switch size 1, requested type "space"
 15820                           ; Number of cases is 4, Range of values is 0 to 3
 15821                           ; switch strategies available:
 15822                           ; Name         Instructions Cycles
 15823                           ; simple_byte           13     7 (average)
 15824                           ;	Chosen strategy is simple_byte
 15825  0005D6  0A00               	xorlw	0	; case 0
 15826  0005D8  B4D8               	btfsc	status,2,c
 15827  0005DA  D583               	goto	l2368
 15828  0005DC  0A01               	xorlw	1	; case 1
 15829  0005DE  B4D8               	btfsc	status,2,c
 15830  0005E0  D71E               	goto	l2403
 15831  0005E2  0A03               	xorlw	3	; case 2
 15832  0005E4  B4D8               	btfsc	status,2,c
 15833  0005E6  D73B               	goto	l2405
 15834  0005E8  0A01               	xorlw	1	; case 3
 15835  0005EA  0012               	return	
 15836  0005EC                     __end_of_Terminal:
 15837                           	opt stack 0
 15838                           tosu	equ	0xFFF
 15839                           tosh	equ	0xFFE
 15840                           tosl	equ	0xFFD
 15841                           pclath	equ	0xFFA
 15842                           tblptru	equ	0xFF8
 15843                           tblptrh	equ	0xFF7
 15844                           tblptrl	equ	0xFF6
 15845                           tablat	equ	0xFF5
 15846                           prodh	equ	0xFF4
 15847                           prodl	equ	0xFF3
 15848                           intcon	equ	0xFF2
 15849                           intcon2	equ	0xFF1
 15850                           intcon3	equ	0xFF0
 15851                           indf0	equ	0xFEF
 15852                           postinc0	equ	0xFEE
 15853                           plusw0	equ	0xFEB
 15854                           fsr0h	equ	0xFEA
 15855                           fsr0l	equ	0xFE9
 15856                           wreg	equ	0xFE8
 15857                           indf1	equ	0xFE7
 15858                           postinc1	equ	0xFE6
 15859                           postdec1	equ	0xFE5
 15860                           fsr1h	equ	0xFE2
 15861                           fsr1l	equ	0xFE1
 15862                           indf2	equ	0xFDF
 15863                           postinc2	equ	0xFDE
 15864                           postdec2	equ	0xFDD
 15865                           plusw2	equ	0xFDB
 15866                           fsr2h	equ	0xFDA
 15867                           fsr2l	equ	0xFD9
 15868                           status	equ	0xFD8
 15869                           
 15870 ;; *************** function _xtoi *****************
 15871 ;; Defined at:
 15872 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15875 ;;		 -> Terminal@Addr(4), 
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;  val             2   40[BANK0 ] unsigned int 
 15878 ;;  c               1   42[BANK0 ] unsigned char 
 15879 ;;  sign            1   39[BANK0 ] unsigned char 
 15880 ;; Return value:  Size  Location     Type
 15881 ;;                  2   35[BANK0 ] unsigned int 
 15882 ;; Registers used:
 15883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15884 ;; Tracked objects:
 15885 ;;		On entry : 0/0
 15886 ;;		On exit  : 0/0
 15887 ;;		Unchanged: 0/0
 15888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15890 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15892 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15893 ;;Total ram usage:        8 bytes
 15894 ;; Hardware stack levels used:    1
 15895 ;; Hardware stack levels required when called:   13
 15896 ;; This function calls:
 15897 ;;		_isdigit
 15898 ;;		_isspace
 15899 ;;		_isupper
 15900 ;;		_isxdigit
 15901 ;;		_tolower
 15902 ;; This function is called by:
 15903 ;;		_Terminal
 15904 ;; This function uses a non-reentrant model
 15905 ;;
 15906                           
 15907                           	psect	text61
 15908  00340E                     __ptext61:
 15909                           	opt stack 0
 15910  00340E                     _xtoi:
 15911                           	opt stack 12
 15912                           
 15913                           ;incstack = 0
 15914  00340E  0E00               	movlw	0
 15915  003410  0100               	movlb	0	; () banked
 15916  003412  6F87               	movwf	xtoi@sign& (0+255),b
 15917  003414  0E00               	movlw	0
 15918  003416  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15919  003418  0E00               	movlw	0
 15920  00341A  6F88               	movwf	xtoi@val& (0+255),b
 15921  00341C  D003               	goto	l3305
 15922  00341E                     
 15923                           ; BSR set to: 0
 15924  00341E  0100               	movlb	0	; () banked
 15925  003420  4B83               	infsnz	xtoi@s& (0+255),f,b
 15926  003422  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15927  003424                     l3305:
 15928                           
 15929                           ; BSR set to: 0
 15930                           
 15931                           ; BSR set to: 0
 15932  003424  C083  FFD9         	movff	xtoi@s,fsr2l
 15933  003428  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15934  00342C  50DF               	movf	indf2,w,c
 15935  00342E  EC20  F02F         	call	_isspace
 15936  003432  B0D8               	btfsc	status,0,c
 15937  003434  D7F4               	goto	l3306
 15938  003436  C083  FFD9         	movff	xtoi@s,fsr2l
 15939  00343A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15940  00343E  0E2D               	movlw	45
 15941  003440  18DE               	xorwf	postinc2,w,c
 15942  003442  A4D8               	btfss	status,2,c
 15943  003444  D003               	goto	l3308
 15944  003446  0100               	movlb	0	; () banked
 15945  003448  2B87               	incf	xtoi@sign& (0+255),f,b
 15946  00344A  D009               	goto	L15
 15947  00344C                     l3308:
 15948                           
 15949                           ; BSR set to: 0
 15950  00344C  C083  FFD9         	movff	xtoi@s,fsr2l
 15951  003450  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15952  003454  0E2B               	movlw	43
 15953  003456  18DE               	xorwf	postinc2,w,c
 15954  003458  A4D8               	btfss	status,2,c
 15955  00345A  D028               	goto	l3311
 15956  00345C  0100               	movlb	0	; () banked
 15957  00345E                     L15:
 15958  00345E  4B83               	infsnz	xtoi@s& (0+255),f,b
 15959  003460  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15960                           
 15961                           ; BSR set to: 0
 15962                           
 15963                           ; BSR set to: 0
 15964  003462  D024               	goto	l3311
 15965  003464                     
 15966                           ; BSR set to: 0
 15967  003464  0100               	movlb	0	; () banked
 15968  003466  518A               	movf	xtoi@c& (0+255),w,b
 15969  003468  ECC6  F02F         	call	_isupper
 15970  00346C  A0D8               	btfss	status,0,c
 15971  00346E  D006               	goto	l3313
 15972  003470  0100               	movlb	0	; () banked
 15973  003472  518A               	movf	xtoi@c& (0+255),w,b
 15974  003474  EC8A  F030         	call	_tolower
 15975  003478  0100               	movlb	0	; () banked
 15976  00347A  6F8A               	movwf	xtoi@c& (0+255),b
 15977  00347C                     l3313:
 15978  00347C  0100               	movlb	0	; () banked
 15979  00347E  518A               	movf	xtoi@c& (0+255),w,b
 15980  003480  ECE8  F02F         	call	_isdigit
 15981  003484  A0D8               	btfss	status,0,c
 15982  003486  D002               	goto	l3314
 15983  003488  0E30               	movlw	48
 15984  00348A  D001               	goto	L14
 15985  00348C                     l3314:
 15986                           
 15987                           ; BSR set to: 0
 15988  00348C  0E57               	movlw	87
 15989  00348E                     L14:
 15990  00348E  0100               	movlb	0	; () banked
 15991  003490  5F8A               	subwf	xtoi@c& (0+255),f,b
 15992                           
 15993                           ; BSR set to: 0
 15994  003492  3B88               	swapf	xtoi@val& (0+255),f,b
 15995  003494  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15996  003496  0EF0               	movlw	240
 15997  003498  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15998  00349A  5188               	movf	xtoi@val& (0+255),w,b
 15999  00349C  0B0F               	andlw	15
 16000  00349E  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16001  0034A0  0EF0               	movlw	240
 16002  0034A2  1788               	andwf	xtoi@val& (0+255),f,b
 16003  0034A4  518A               	movf	xtoi@c& (0+255),w,b
 16004  0034A6  2788               	addwf	xtoi@val& (0+255),f,b
 16005  0034A8  0E00               	movlw	0
 16006  0034AA  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16007  0034AC                     l3311:
 16008                           
 16009                           ; BSR set to: 0
 16010  0034AC  C083  FFD9         	movff	xtoi@s,fsr2l
 16011  0034B0  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16012  0034B4  0100               	movlb	0	; () banked
 16013  0034B6  4B83               	infsnz	xtoi@s& (0+255),f,b
 16014  0034B8  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16015  0034BA  50DF               	movf	indf2,w,c
 16016  0034BC  6F8A               	movwf	xtoi@c& (0+255),b
 16017  0034BE  518A               	movf	xtoi@c& (0+255),w,b
 16018  0034C0  EC70  F02D         	call	_isxdigit
 16019  0034C4  B0D8               	btfsc	status,0,c
 16020  0034C6  D7CE               	goto	l3312
 16021  0034C8  0100               	movlb	0	; () banked
 16022  0034CA  5187               	movf	xtoi@sign& (0+255),w,b
 16023  0034CC  B4D8               	btfsc	status,2,c
 16024  0034CE  D00D               	goto	l3317
 16025                           
 16026                           ; BSR set to: 0
 16027  0034D0  C088  F085         	movff	xtoi@val,??_xtoi
 16028  0034D4  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16029  0034D8  1F85               	comf	??_xtoi& (0+255),f,b
 16030  0034DA  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16031  0034DC  4B85               	infsnz	??_xtoi& (0+255),f,b
 16032  0034DE  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16033  0034E0  C085  F083         	movff	??_xtoi,?_xtoi
 16034  0034E4  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16035  0034E8  0012               	return	
 16036  0034EA                     l3317:
 16037                           
 16038                           ; BSR set to: 0
 16039  0034EA  C088  F083         	movff	xtoi@val,?_xtoi
 16040  0034EE  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16041                           
 16042                           ; BSR set to: 0
 16043  0034F2  0012               	return		;funcret
 16044  0034F4                     __end_of_xtoi:
 16045                           	opt stack 0
 16046                           tosu	equ	0xFFF
 16047                           tosh	equ	0xFFE
 16048                           tosl	equ	0xFFD
 16049                           pclath	equ	0xFFA
 16050                           tblptru	equ	0xFF8
 16051                           tblptrh	equ	0xFF7
 16052                           tblptrl	equ	0xFF6
 16053                           tablat	equ	0xFF5
 16054                           prodh	equ	0xFF4
 16055                           prodl	equ	0xFF3
 16056                           intcon	equ	0xFF2
 16057                           intcon2	equ	0xFF1
 16058                           intcon3	equ	0xFF0
 16059                           indf0	equ	0xFEF
 16060                           postinc0	equ	0xFEE
 16061                           plusw0	equ	0xFEB
 16062                           fsr0h	equ	0xFEA
 16063                           fsr0l	equ	0xFE9
 16064                           wreg	equ	0xFE8
 16065                           indf1	equ	0xFE7
 16066                           postinc1	equ	0xFE6
 16067                           postdec1	equ	0xFE5
 16068                           fsr1h	equ	0xFE2
 16069                           fsr1l	equ	0xFE1
 16070                           indf2	equ	0xFDF
 16071                           postinc2	equ	0xFDE
 16072                           postdec2	equ	0xFDD
 16073                           plusw2	equ	0xFDB
 16074                           fsr2h	equ	0xFDA
 16075                           fsr2l	equ	0xFD9
 16076                           status	equ	0xFD8
 16077                           
 16078 ;; *************** function _tolower *****************
 16079 ;; Defined at:
 16080 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16081 ;; Parameters:    Size  Location     Type
 16082 ;;  c               1    wreg     unsigned char 
 16083 ;; Auto vars:     Size  Location     Type
 16084 ;;  c               1   29[BANK0 ] unsigned char 
 16085 ;; Return value:  Size  Location     Type
 16086 ;;                  1    wreg      unsigned char 
 16087 ;; Registers used:
 16088 ;;		wreg, status,2, status,0
 16089 ;; Tracked objects:
 16090 ;;		On entry : 0/0
 16091 ;;		On exit  : 0/0
 16092 ;;		Unchanged: 0/0
 16093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16097 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16098 ;;Total ram usage:        1 bytes
 16099 ;; Hardware stack levels used:    1
 16100 ;; Hardware stack levels required when called:   11
 16101 ;; This function calls:
 16102 ;;		Nothing
 16103 ;; This function is called by:
 16104 ;;		_xtoi
 16105 ;; This function uses a non-reentrant model
 16106 ;;
 16107                           
 16108                           	psect	text62
 16109  006114                     __ptext62:
 16110                           	opt stack 0
 16111  006114                     _tolower:
 16112                           	opt stack 13
 16113                           
 16114                           ; BSR set to: 0
 16115                           ;incstack = 0
 16116                           ;tolower@c stored from wreg
 16117  006114  0100               	movlb	0	; () banked
 16118  006116  6F7D               	movwf	tolower@c& (0+255),b
 16119  006118  0E5B               	movlw	91
 16120  00611A  0100               	movlb	0	; () banked
 16121  00611C  617D               	cpfslt	tolower@c& (0+255),b
 16122  00611E  D004               	goto	l3364
 16123                           
 16124                           ; BSR set to: 0
 16125  006120  0E40               	movlw	64
 16126  006122  657D               	cpfsgt	tolower@c& (0+255),b
 16127  006124  D001               	goto	l3364
 16128                           
 16129                           ; BSR set to: 0
 16130  006126  8B7D               	bsf	tolower@c& (0+255),5,b
 16131  006128                     l3364:
 16132                           
 16133                           ; BSR set to: 0
 16134                           
 16135                           ; BSR set to: 0
 16136  006128  517D               	movf	tolower@c& (0+255),w,b
 16137  00612A  0012               	return	
 16138  00612C                     __end_of_tolower:
 16139                           	opt stack 0
 16140                           tosu	equ	0xFFF
 16141                           tosh	equ	0xFFE
 16142                           tosl	equ	0xFFD
 16143                           pclath	equ	0xFFA
 16144                           tblptru	equ	0xFF8
 16145                           tblptrh	equ	0xFF7
 16146                           tblptrl	equ	0xFF6
 16147                           tablat	equ	0xFF5
 16148                           prodh	equ	0xFF4
 16149                           prodl	equ	0xFF3
 16150                           intcon	equ	0xFF2
 16151                           intcon2	equ	0xFF1
 16152                           intcon3	equ	0xFF0
 16153                           indf0	equ	0xFEF
 16154                           postinc0	equ	0xFEE
 16155                           plusw0	equ	0xFEB
 16156                           fsr0h	equ	0xFEA
 16157                           fsr0l	equ	0xFE9
 16158                           wreg	equ	0xFE8
 16159                           indf1	equ	0xFE7
 16160                           postinc1	equ	0xFE6
 16161                           postdec1	equ	0xFE5
 16162                           fsr1h	equ	0xFE2
 16163                           fsr1l	equ	0xFE1
 16164                           indf2	equ	0xFDF
 16165                           postinc2	equ	0xFDE
 16166                           postdec2	equ	0xFDD
 16167                           plusw2	equ	0xFDB
 16168                           fsr2h	equ	0xFDA
 16169                           fsr2l	equ	0xFD9
 16170                           status	equ	0xFD8
 16171                           
 16172 ;; *************** function _isxdigit *****************
 16173 ;; Defined at:
 16174 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16175 ;; Parameters:    Size  Location     Type
 16176 ;;  c               1    wreg     unsigned char 
 16177 ;; Auto vars:     Size  Location     Type
 16178 ;;  c               1   34[BANK0 ] unsigned char 
 16179 ;; Return value:  Size  Location     Type
 16180 ;;		None               void
 16181 ;; Registers used:
 16182 ;;		wreg, status,2, status,0, cstack
 16183 ;; Tracked objects:
 16184 ;;		On entry : 0/0
 16185 ;;		On exit  : 0/0
 16186 ;;		Unchanged: 0/0
 16187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16191 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16192 ;;Total ram usage:        3 bytes
 16193 ;; Hardware stack levels used:    1
 16194 ;; Hardware stack levels required when called:   12
 16195 ;; This function calls:
 16196 ;;		_isdigit
 16197 ;; This function is called by:
 16198 ;;		_xtoi
 16199 ;; This function uses a non-reentrant model
 16200 ;;
 16201                           
 16202                           	psect	text63
 16203  005AE0                     __ptext63:
 16204                           	opt stack 0
 16205  005AE0                     _isxdigit:
 16206                           	opt stack 12
 16207                           
 16208                           ; BSR set to: 0
 16209                           ;incstack = 0
 16210                           ;isxdigit@c stored from wreg
 16211  005AE0  0100               	movlb	0	; () banked
 16212  005AE2  6F82               	movwf	isxdigit@c& (0+255),b
 16213  005AE4  0E01               	movlw	1
 16214  005AE6  0100               	movlb	0	; () banked
 16215  005AE8  6F81               	movwf	_isxdigit$6469& (0+255),b
 16216                           
 16217                           ; BSR set to: 0
 16218  005AEA  0E67               	movlw	103
 16219  005AEC  6182               	cpfslt	isxdigit@c& (0+255),b
 16220  005AEE  D003               	goto	u11370
 16221                           
 16222                           ; BSR set to: 0
 16223  005AF0  0E61               	movlw	97
 16224  005AF2  6182               	cpfslt	isxdigit@c& (0+255),b
 16225  005AF4  D00E               	goto	l3360
 16226  005AF6                     u11370:
 16227                           
 16228                           ; BSR set to: 0
 16229                           
 16230                           ; BSR set to: 0
 16231  005AF6  0E47               	movlw	71
 16232  005AF8  6182               	cpfslt	isxdigit@c& (0+255),b
 16233  005AFA  D003               	goto	u11390
 16234                           
 16235                           ; BSR set to: 0
 16236  005AFC  0E41               	movlw	65
 16237  005AFE  6182               	cpfslt	isxdigit@c& (0+255),b
 16238  005B00  D008               	goto	l3360
 16239  005B02                     u11390:
 16240                           
 16241                           ; BSR set to: 0
 16242                           
 16243                           ; BSR set to: 0
 16244  005B02  5182               	movf	isxdigit@c& (0+255),w,b
 16245  005B04  ECE8  F02F         	call	_isdigit
 16246  005B08  B0D8               	btfsc	status,0,c
 16247  005B0A  D003               	goto	l3360
 16248  005B0C  0E00               	movlw	0
 16249  005B0E  0100               	movlb	0	; () banked
 16250  005B10  6F81               	movwf	_isxdigit$6469& (0+255),b
 16251  005B12                     l3360:
 16252                           
 16253                           ; BSR set to: 0
 16254  005B12  C081  F080         	movff	_isxdigit$6469,??_isxdigit
 16255  005B16  0100               	movlb	0	; () banked
 16256  005B18  3180               	rrcf	??_isxdigit& (0+255),w,b
 16257  005B1A  0012               	return	
 16258  005B1C                     __end_of_isxdigit:
 16259                           	opt stack 0
 16260                           tosu	equ	0xFFF
 16261                           tosh	equ	0xFFE
 16262                           tosl	equ	0xFFD
 16263                           pclath	equ	0xFFA
 16264                           tblptru	equ	0xFF8
 16265                           tblptrh	equ	0xFF7
 16266                           tblptrl	equ	0xFF6
 16267                           tablat	equ	0xFF5
 16268                           prodh	equ	0xFF4
 16269                           prodl	equ	0xFF3
 16270                           intcon	equ	0xFF2
 16271                           intcon2	equ	0xFF1
 16272                           intcon3	equ	0xFF0
 16273                           indf0	equ	0xFEF
 16274                           postinc0	equ	0xFEE
 16275                           plusw0	equ	0xFEB
 16276                           fsr0h	equ	0xFEA
 16277                           fsr0l	equ	0xFE9
 16278                           wreg	equ	0xFE8
 16279                           indf1	equ	0xFE7
 16280                           postinc1	equ	0xFE6
 16281                           postdec1	equ	0xFE5
 16282                           fsr1h	equ	0xFE2
 16283                           fsr1l	equ	0xFE1
 16284                           indf2	equ	0xFDF
 16285                           postinc2	equ	0xFDE
 16286                           postdec2	equ	0xFDD
 16287                           plusw2	equ	0xFDB
 16288                           fsr2h	equ	0xFDA
 16289                           fsr2l	equ	0xFD9
 16290                           status	equ	0xFD8
 16291                           
 16292 ;; *************** function _strtol *****************
 16293 ;; Defined at:
 16294 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16295 ;; Parameters:    Size  Location     Type
 16296 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16297 ;;		 -> Terminal@Payload(80), 
 16298 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16299 ;;		 -> NULL(0), 
 16300 ;;  base            2   45[BANK0 ] int 
 16301 ;; Auto vars:     Size  Location     Type
 16302 ;;  a               4   52[BANK0 ] long 
 16303 ;;  c               1   56[BANK0 ] unsigned char 
 16304 ;;  sign            1   51[BANK0 ] unsigned char 
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  4   41[BANK0 ] long 
 16307 ;; Registers used:
 16308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16314 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16315 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16316 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16317 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16318 ;;Total ram usage:       16 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:   13
 16321 ;; This function calls:
 16322 ;;		___lmul
 16323 ;;		_isalpha
 16324 ;;		_isdigit
 16325 ;;		_isspace
 16326 ;;		_toupper
 16327 ;; This function is called by:
 16328 ;;		_Terminal
 16329 ;; This function uses a non-reentrant model
 16330 ;;
 16331                           
 16332                           	psect	text64
 16333  00181C                     __ptext64:
 16334                           	opt stack 0
 16335  00181C                     _strtol:
 16336                           	opt stack 12
 16337                           
 16338                           ; BSR set to: 0
 16339                           ;incstack = 0
 16340  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16341  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16342  001824  50DF               	movf	indf2,w,c
 16343  001826  0100               	movlb	0	; () banked
 16344  001828  6F98               	movwf	strtol@c& (0+255),b
 16345                           
 16346                           ; BSR set to: 0
 16347  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16348  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16349                           
 16350                           ; BSR set to: 0
 16351  00182E  5198               	movf	strtol@c& (0+255),w,b
 16352  001830  EC20  F02F         	call	_isspace
 16353  001834  B0D8               	btfsc	status,0,c
 16354  001836  D7F2               	goto	_strtol
 16355  001838  0E00               	movlw	0
 16356  00183A  0100               	movlb	0	; () banked
 16357  00183C  6F94               	movwf	strtol@a& (0+255),b
 16358  00183E  0E00               	movlw	0
 16359  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16360  001842  0E00               	movlw	0
 16361  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16362  001846  0E00               	movlw	0
 16363  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16364  00184A  0E00               	movlw	0
 16365  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16366                           
 16367                           ; BSR set to: 0
 16368  00184E  0E2D               	movlw	45
 16369  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16370  001852  A4D8               	btfss	status,2,c
 16371  001854  D003               	goto	l3267
 16372                           
 16373                           ; BSR set to: 0
 16374  001856  0E01               	movlw	1
 16375  001858  6F93               	movwf	strtol@sign& (0+255),b
 16376  00185A  D004               	goto	u11870
 16377  00185C                     l3267:
 16378                           
 16379                           ; BSR set to: 0
 16380                           
 16381                           ; BSR set to: 0
 16382  00185C  0E2B               	movlw	43
 16383  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16384  001860  A4D8               	btfss	status,2,c
 16385  001862  D008               	goto	l3269
 16386  001864                     u11870:
 16387                           
 16388                           ; BSR set to: 0
 16389  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16390  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16391  00186C  50DF               	movf	indf2,w,c
 16392  00186E  6F98               	movwf	strtol@c& (0+255),b
 16393                           
 16394                           ; BSR set to: 0
 16395  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16396  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16397  001874                     l3269:
 16398                           
 16399                           ; BSR set to: 0
 16400                           
 16401                           ; BSR set to: 0
 16402                           
 16403                           ; BSR set to: 0
 16404  001874  0E30               	movlw	48
 16405  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16406  001878  A4D8               	btfss	status,2,c
 16407  00187A  D02E               	goto	l3277
 16408                           
 16409                           ; BSR set to: 0
 16410  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16411  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16412  001884  50DF               	movf	indf2,w,c
 16413  001886  6F98               	movwf	strtol@c& (0+255),b
 16414                           
 16415                           ; BSR set to: 0
 16416  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16417  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16418                           
 16419                           ; BSR set to: 0
 16420  00188C  518D               	movf	strtol@base& (0+255),w,b
 16421  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16422  001890  B4D8               	btfsc	status,2,c
 16423  001892  D005               	goto	u11900
 16424                           
 16425                           ; BSR set to: 0
 16426  001894  0E10               	movlw	16
 16427  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16428  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16429  00189A  A4D8               	btfss	status,2,c
 16430  00189C  D015               	goto	l3271
 16431  00189E                     u11900:
 16432                           
 16433                           ; BSR set to: 0
 16434                           
 16435                           ; BSR set to: 0
 16436  00189E  0E78               	movlw	120
 16437  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16438  0018A2  B4D8               	btfsc	status,2,c
 16439  0018A4  D004               	goto	u11920
 16440                           
 16441                           ; BSR set to: 0
 16442  0018A6  0E58               	movlw	88
 16443  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16444  0018AA  A4D8               	btfss	status,2,c
 16445  0018AC  D00D               	goto	l3271
 16446  0018AE                     u11920:
 16447                           
 16448                           ; BSR set to: 0
 16449                           
 16450                           ; BSR set to: 0
 16451  0018AE  0E00               	movlw	0
 16452  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16453  0018B2  0E10               	movlw	16
 16454  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16455                           
 16456                           ; BSR set to: 0
 16457  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16458  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16459  0018BE  50DF               	movf	indf2,w,c
 16460  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16461                           
 16462                           ; BSR set to: 0
 16463  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16464  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16465  0018C6  D008               	goto	l3277
 16466  0018C8                     l3271:
 16467                           
 16468                           ; BSR set to: 0
 16469                           
 16470                           ; BSR set to: 0
 16471  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16472  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16473  0018CC  A4D8               	btfss	status,2,c
 16474  0018CE  D004               	goto	l3277
 16475                           
 16476                           ; BSR set to: 0
 16477  0018D0  0E00               	movlw	0
 16478  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16479  0018D4  0E08               	movlw	8
 16480  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16481  0018D8                     l3277:
 16482                           
 16483                           ; BSR set to: 0
 16484                           
 16485                           ; BSR set to: 0
 16486                           
 16487                           ; BSR set to: 0
 16488                           
 16489                           ; BSR set to: 0
 16490  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16491  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16492  0018DC  A4D8               	btfss	status,2,c
 16493  0018DE  D004               	goto	l3278
 16494                           
 16495                           ; BSR set to: 0
 16496  0018E0  0E00               	movlw	0
 16497  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16498  0018E4  0E0A               	movlw	10
 16499  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16500  0018E8                     l3278:
 16501                           
 16502                           ; BSR set to: 0
 16503                           
 16504                           ; BSR set to: 0
 16505                           
 16506                           ; BSR set to: 0
 16507  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16508  0018EA  EC97  F02E         	call	_isalpha
 16509  0018EE  A0D8               	btfss	status,0,c
 16510  0018F0  D008               	goto	l3280
 16511  0018F2  0100               	movlb	0	; () banked
 16512  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16513  0018F6  EC96  F030         	call	_toupper
 16514  0018FA  0FC9               	addlw	201
 16515  0018FC  0100               	movlb	0	; () banked
 16516  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16517  001900  D009               	goto	l3283
 16518  001902                     l3280:
 16519                           
 16520                           ; BSR set to: 0
 16521  001902  0100               	movlb	0	; () banked
 16522  001904  5198               	movf	strtol@c& (0+255),w,b
 16523  001906  ECE8  F02F         	call	_isdigit
 16524  00190A  A0D8               	btfss	status,0,c
 16525  00190C  D039               	goto	l3284
 16526  00190E  0E30               	movlw	48
 16527  001910  0100               	movlb	0	; () banked
 16528  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16529  001914                     l3283:
 16530                           
 16531                           ; BSR set to: 0
 16532                           
 16533                           ; BSR set to: 0
 16534                           
 16535                           ; BSR set to: 0
 16536  001914  5198               	movf	strtol@c& (0+255),w,b
 16537  001916  6F8F               	movwf	??_strtol& (0+255),b
 16538  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16539  00191A  518D               	movf	strtol@base& (0+255),w,b
 16540  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16541  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16542  001920  0A80               	xorlw	128
 16543  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16544  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16545  001926  0A80               	xorlw	128
 16546  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16547  00192A  B0D8               	btfsc	status,0,c
 16548  00192C  D029               	goto	l3284
 16549                           
 16550                           ; BSR set to: 0
 16551                           
 16552                           ; BSR set to: 0
 16553                           
 16554                           ; BSR set to: 0
 16555  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16556  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16557  001936  0E00               	movlw	0
 16558  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16559  00193A  0EFF               	movlw	-1
 16560  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16561  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16562  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16563  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16564  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16565  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16566  001950  EC33  F029         	call	___lmul	;wreg free
 16567  001954  0100               	movlb	0	; () banked
 16568  001956  5198               	movf	strtol@c& (0+255),w,b
 16569  001958  257D               	addwf	?___lmul& (0+255),w,b
 16570  00195A  6F94               	movwf	strtol@a& (0+255),b
 16571  00195C  0E00               	movlw	0
 16572  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16573  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16574  001962  0E00               	movlw	0
 16575  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16576  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16577  001968  0E00               	movlw	0
 16578  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16579  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16580                           
 16581                           ; BSR set to: 0
 16582  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16583  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16584  001976  50DF               	movf	indf2,w,c
 16585  001978  6F98               	movwf	strtol@c& (0+255),b
 16586                           
 16587                           ; BSR set to: 0
 16588  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16589  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16590  00197E  D7B4               	goto	l3278
 16591  001980                     l3284:
 16592                           
 16593                           ; BSR set to: 0
 16594  001980  0100               	movlb	0	; () banked
 16595  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16596  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16597  001986  B4D8               	btfsc	status,2,c
 16598  001988  D00E               	goto	l3286
 16599                           
 16600                           ; BSR set to: 0
 16601  00198A  0EFF               	movlw	255
 16602  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16603  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16604  001990  0EFF               	movlw	255
 16605  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16606  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16607  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16608  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16609  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16610  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16611  0019A6                     l3286:
 16612                           
 16613                           ; BSR set to: 0
 16614                           
 16615                           ; BSR set to: 0
 16616  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16617  0019A8  B4D8               	btfsc	status,2,c
 16618  0019AA  D01A               	goto	l3287
 16619                           
 16620                           ; BSR set to: 0
 16621  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16622  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16623  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16624  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16625  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16626  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16627  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16628  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16629  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16630  0019C6  0E00               	movlw	0
 16631  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16632  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16633  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16634  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16635  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16636  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16637  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16638                           
 16639                           ; BSR set to: 0
 16640  0019DE  0012               	return	
 16641  0019E0                     l3287:
 16642                           
 16643                           ; BSR set to: 0
 16644  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16645  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16646  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16647  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16648                           
 16649                           ; BSR set to: 0
 16650  0019F0  0012               	return		;funcret
 16651  0019F2                     __end_of_strtol:
 16652                           	opt stack 0
 16653                           tosu	equ	0xFFF
 16654                           tosh	equ	0xFFE
 16655                           tosl	equ	0xFFD
 16656                           pclath	equ	0xFFA
 16657                           tblptru	equ	0xFF8
 16658                           tblptrh	equ	0xFF7
 16659                           tblptrl	equ	0xFF6
 16660                           tablat	equ	0xFF5
 16661                           prodh	equ	0xFF4
 16662                           prodl	equ	0xFF3
 16663                           intcon	equ	0xFF2
 16664                           intcon2	equ	0xFF1
 16665                           intcon3	equ	0xFF0
 16666                           indf0	equ	0xFEF
 16667                           postinc0	equ	0xFEE
 16668                           plusw0	equ	0xFEB
 16669                           fsr0h	equ	0xFEA
 16670                           fsr0l	equ	0xFE9
 16671                           wreg	equ	0xFE8
 16672                           indf1	equ	0xFE7
 16673                           postinc1	equ	0xFE6
 16674                           postdec1	equ	0xFE5
 16675                           fsr1h	equ	0xFE2
 16676                           fsr1l	equ	0xFE1
 16677                           indf2	equ	0xFDF
 16678                           postinc2	equ	0xFDE
 16679                           postdec2	equ	0xFDD
 16680                           plusw2	equ	0xFDB
 16681                           fsr2h	equ	0xFDA
 16682                           fsr2l	equ	0xFD9
 16683                           status	equ	0xFD8
 16684                           
 16685 ;; *************** function _toupper *****************
 16686 ;; Defined at:
 16687 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16688 ;; Parameters:    Size  Location     Type
 16689 ;;  c               1    wreg     unsigned char 
 16690 ;; Auto vars:     Size  Location     Type
 16691 ;;  c               1   29[BANK0 ] unsigned char 
 16692 ;; Return value:  Size  Location     Type
 16693 ;;                  1    wreg      unsigned char 
 16694 ;; Registers used:
 16695 ;;		wreg, status,2, status,0
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16704 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16705 ;;Total ram usage:        1 bytes
 16706 ;; Hardware stack levels used:    1
 16707 ;; Hardware stack levels required when called:   11
 16708 ;; This function calls:
 16709 ;;		Nothing
 16710 ;; This function is called by:
 16711 ;;		_strtol
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           	psect	text65
 16716  00612C                     __ptext65:
 16717                           	opt stack 0
 16718  00612C                     _toupper:
 16719                           	opt stack 13
 16720                           
 16721                           ; BSR set to: 0
 16722                           ;incstack = 0
 16723                           ;toupper@c stored from wreg
 16724  00612C  0100               	movlb	0	; () banked
 16725  00612E  6F7D               	movwf	toupper@c& (0+255),b
 16726  006130  0E7B               	movlw	123
 16727  006132  0100               	movlb	0	; () banked
 16728  006134  617D               	cpfslt	toupper@c& (0+255),b
 16729  006136  D004               	goto	l3291
 16730                           
 16731                           ; BSR set to: 0
 16732  006138  0E60               	movlw	96
 16733  00613A  657D               	cpfsgt	toupper@c& (0+255),b
 16734  00613C  D001               	goto	l3291
 16735                           
 16736                           ; BSR set to: 0
 16737  00613E  9B7D               	bcf	toupper@c& (0+255),5,b
 16738  006140                     l3291:
 16739                           
 16740                           ; BSR set to: 0
 16741                           
 16742                           ; BSR set to: 0
 16743  006140  517D               	movf	toupper@c& (0+255),w,b
 16744  006142  0012               	return	
 16745  006144                     __end_of_toupper:
 16746                           	opt stack 0
 16747                           tosu	equ	0xFFF
 16748                           tosh	equ	0xFFE
 16749                           tosl	equ	0xFFD
 16750                           pclath	equ	0xFFA
 16751                           tblptru	equ	0xFF8
 16752                           tblptrh	equ	0xFF7
 16753                           tblptrl	equ	0xFF6
 16754                           tablat	equ	0xFF5
 16755                           prodh	equ	0xFF4
 16756                           prodl	equ	0xFF3
 16757                           intcon	equ	0xFF2
 16758                           intcon2	equ	0xFF1
 16759                           intcon3	equ	0xFF0
 16760                           indf0	equ	0xFEF
 16761                           postinc0	equ	0xFEE
 16762                           plusw0	equ	0xFEB
 16763                           fsr0h	equ	0xFEA
 16764                           fsr0l	equ	0xFE9
 16765                           wreg	equ	0xFE8
 16766                           indf1	equ	0xFE7
 16767                           postinc1	equ	0xFE6
 16768                           postdec1	equ	0xFE5
 16769                           fsr1h	equ	0xFE2
 16770                           fsr1l	equ	0xFE1
 16771                           indf2	equ	0xFDF
 16772                           postinc2	equ	0xFDE
 16773                           postdec2	equ	0xFDD
 16774                           plusw2	equ	0xFDB
 16775                           fsr2h	equ	0xFDA
 16776                           fsr2l	equ	0xFD9
 16777                           status	equ	0xFD8
 16778                           
 16779 ;; *************** function _isspace *****************
 16780 ;; Defined at:
 16781 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16782 ;; Parameters:    Size  Location     Type
 16783 ;;  c               1    wreg     unsigned char 
 16784 ;; Auto vars:     Size  Location     Type
 16785 ;;  c               1   31[BANK0 ] unsigned char 
 16786 ;; Return value:  Size  Location     Type
 16787 ;;		None               void
 16788 ;; Registers used:
 16789 ;;		wreg, status,2, status,0
 16790 ;; Tracked objects:
 16791 ;;		On entry : 0/0
 16792 ;;		On exit  : 0/0
 16793 ;;		Unchanged: 0/0
 16794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16796 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16798 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16799 ;;Total ram usage:        3 bytes
 16800 ;; Hardware stack levels used:    1
 16801 ;; Hardware stack levels required when called:   11
 16802 ;; This function calls:
 16803 ;;		Nothing
 16804 ;; This function is called by:
 16805 ;;		_strtol
 16806 ;;		_xtoi
 16807 ;; This function uses a non-reentrant model
 16808 ;;
 16809                           
 16810                           	psect	text66
 16811  005E40                     __ptext66:
 16812                           	opt stack 0
 16813  005E40                     _isspace:
 16814                           	opt stack 13
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;incstack = 0
 16818                           ;isspace@c stored from wreg
 16819  005E40  0100               	movlb	0	; () banked
 16820  005E42  6F7F               	movwf	isspace@c& (0+255),b
 16821  005E44  0E01               	movlw	1
 16822  005E46  0100               	movlb	0	; () banked
 16823  005E48  6F7E               	movwf	_isspace$6462& (0+255),b
 16824                           
 16825                           ; BSR set to: 0
 16826  005E4A  0E20               	movlw	32
 16827  005E4C  197F               	xorwf	isspace@c& (0+255),w,b
 16828  005E4E  B4D8               	btfsc	status,2,c
 16829  005E50  D008               	goto	l3348
 16830                           
 16831                           ; BSR set to: 0
 16832  005E52  0E0E               	movlw	14
 16833  005E54  617F               	cpfslt	isspace@c& (0+255),b
 16834  005E56  D003               	goto	u11280
 16835                           
 16836                           ; BSR set to: 0
 16837  005E58  0E09               	movlw	9
 16838  005E5A  617F               	cpfslt	isspace@c& (0+255),b
 16839  005E5C  D002               	goto	l3348
 16840  005E5E                     u11280:
 16841                           
 16842                           ; BSR set to: 0
 16843                           
 16844                           ; BSR set to: 0
 16845  005E5E  0E00               	movlw	0
 16846  005E60  6F7E               	movwf	_isspace$6462& (0+255),b
 16847  005E62                     l3348:
 16848                           
 16849                           ; BSR set to: 0
 16850                           
 16851                           ; BSR set to: 0
 16852  005E62  C07E  F07D         	movff	_isspace$6462,??_isspace
 16853  005E66  317D               	rrcf	??_isspace& (0+255),w,b
 16854  005E68  0012               	return	
 16855  005E6A                     __end_of_isspace:
 16856                           	opt stack 0
 16857                           tosu	equ	0xFFF
 16858                           tosh	equ	0xFFE
 16859                           tosl	equ	0xFFD
 16860                           pclath	equ	0xFFA
 16861                           tblptru	equ	0xFF8
 16862                           tblptrh	equ	0xFF7
 16863                           tblptrl	equ	0xFF6
 16864                           tablat	equ	0xFF5
 16865                           prodh	equ	0xFF4
 16866                           prodl	equ	0xFF3
 16867                           intcon	equ	0xFF2
 16868                           intcon2	equ	0xFF1
 16869                           intcon3	equ	0xFF0
 16870                           indf0	equ	0xFEF
 16871                           postinc0	equ	0xFEE
 16872                           plusw0	equ	0xFEB
 16873                           fsr0h	equ	0xFEA
 16874                           fsr0l	equ	0xFE9
 16875                           wreg	equ	0xFE8
 16876                           indf1	equ	0xFE7
 16877                           postinc1	equ	0xFE6
 16878                           postdec1	equ	0xFE5
 16879                           fsr1h	equ	0xFE2
 16880                           fsr1l	equ	0xFE1
 16881                           indf2	equ	0xFDF
 16882                           postinc2	equ	0xFDE
 16883                           postdec2	equ	0xFDD
 16884                           plusw2	equ	0xFDB
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _isalpha *****************
 16890 ;; Defined at:
 16891 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;  c               1    wreg     unsigned char 
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;  c               1   34[BANK0 ] unsigned char 
 16896 ;; Return value:  Size  Location     Type
 16897 ;;		None               void
 16898 ;; Registers used:
 16899 ;;		wreg, status,2, status,0, cstack
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/0
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16908 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16909 ;;Total ram usage:        3 bytes
 16910 ;; Hardware stack levels used:    1
 16911 ;; Hardware stack levels required when called:   12
 16912 ;; This function calls:
 16913 ;;		_isupper
 16914 ;; This function is called by:
 16915 ;;		_strtol
 16916 ;; This function uses a non-reentrant model
 16917 ;;
 16918                           
 16919                           	psect	text67
 16920  005D2E                     __ptext67:
 16921                           	opt stack 0
 16922  005D2E                     _isalpha:
 16923                           	opt stack 12
 16924                           
 16925                           ; BSR set to: 0
 16926                           ;incstack = 0
 16927                           ;isalpha@c stored from wreg
 16928  005D2E  0100               	movlb	0	; () banked
 16929  005D30  6F82               	movwf	isalpha@c& (0+255),b
 16930  005D32  0E01               	movlw	1
 16931  005D34  0100               	movlb	0	; () banked
 16932  005D36  6F81               	movwf	_isalpha$6459& (0+255),b
 16933                           
 16934                           ; BSR set to: 0
 16935  005D38  0E7B               	movlw	123
 16936  005D3A  6182               	cpfslt	isalpha@c& (0+255),b
 16937  005D3C  D003               	goto	u11300
 16938                           
 16939                           ; BSR set to: 0
 16940  005D3E  0E61               	movlw	97
 16941  005D40  6182               	cpfslt	isalpha@c& (0+255),b
 16942  005D42  D008               	goto	l3343
 16943  005D44                     u11300:
 16944                           
 16945                           ; BSR set to: 0
 16946                           
 16947                           ; BSR set to: 0
 16948  005D44  5182               	movf	isalpha@c& (0+255),w,b
 16949  005D46  ECC6  F02F         	call	_isupper
 16950  005D4A  B0D8               	btfsc	status,0,c
 16951  005D4C  D003               	goto	l3343
 16952  005D4E  0E00               	movlw	0
 16953  005D50  0100               	movlb	0	; () banked
 16954  005D52  6F81               	movwf	_isalpha$6459& (0+255),b
 16955  005D54                     l3343:
 16956                           
 16957                           ; BSR set to: 0
 16958  005D54  C081  F080         	movff	_isalpha$6459,??_isalpha
 16959  005D58  0100               	movlb	0	; () banked
 16960  005D5A  3180               	rrcf	??_isalpha& (0+255),w,b
 16961  005D5C  0012               	return	
 16962  005D5E                     __end_of_isalpha:
 16963                           	opt stack 0
 16964                           tosu	equ	0xFFF
 16965                           tosh	equ	0xFFE
 16966                           tosl	equ	0xFFD
 16967                           pclath	equ	0xFFA
 16968                           tblptru	equ	0xFF8
 16969                           tblptrh	equ	0xFF7
 16970                           tblptrl	equ	0xFF6
 16971                           tablat	equ	0xFF5
 16972                           prodh	equ	0xFF4
 16973                           prodl	equ	0xFF3
 16974                           intcon	equ	0xFF2
 16975                           intcon2	equ	0xFF1
 16976                           intcon3	equ	0xFF0
 16977                           indf0	equ	0xFEF
 16978                           postinc0	equ	0xFEE
 16979                           plusw0	equ	0xFEB
 16980                           fsr0h	equ	0xFEA
 16981                           fsr0l	equ	0xFE9
 16982                           wreg	equ	0xFE8
 16983                           indf1	equ	0xFE7
 16984                           postinc1	equ	0xFE6
 16985                           postdec1	equ	0xFE5
 16986                           fsr1h	equ	0xFE2
 16987                           fsr1l	equ	0xFE1
 16988                           indf2	equ	0xFDF
 16989                           postinc2	equ	0xFDE
 16990                           postdec2	equ	0xFDD
 16991                           plusw2	equ	0xFDB
 16992                           fsr2h	equ	0xFDA
 16993                           fsr2l	equ	0xFD9
 16994                           status	equ	0xFD8
 16995                           
 16996 ;; *************** function _isupper *****************
 16997 ;; Defined at:
 16998 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16999 ;; Parameters:    Size  Location     Type
 17000 ;;  c               1    wreg     unsigned char 
 17001 ;; Auto vars:     Size  Location     Type
 17002 ;;  c               1   31[BANK0 ] unsigned char 
 17003 ;; Return value:  Size  Location     Type
 17004 ;;		None               void
 17005 ;; Registers used:
 17006 ;;		wreg, status,2, status,0
 17007 ;; Tracked objects:
 17008 ;;		On entry : 0/0
 17009 ;;		On exit  : 0/0
 17010 ;;		Unchanged: 0/0
 17011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17015 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17016 ;;Total ram usage:        3 bytes
 17017 ;; Hardware stack levels used:    1
 17018 ;; Hardware stack levels required when called:   11
 17019 ;; This function calls:
 17020 ;;		Nothing
 17021 ;; This function is called by:
 17022 ;;		_xtoi
 17023 ;;		_isalpha
 17024 ;; This function uses a non-reentrant model
 17025 ;;
 17026                           
 17027                           	psect	text68
 17028  005F8C                     __ptext68:
 17029                           	opt stack 0
 17030  005F8C                     _isupper:
 17031                           	opt stack 13
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;incstack = 0
 17035                           ;isupper@c stored from wreg
 17036  005F8C  0100               	movlb	0	; () banked
 17037  005F8E  6F7F               	movwf	isupper@c& (0+255),b
 17038  005F90  0E00               	movlw	0
 17039  005F92  0100               	movlb	0	; () banked
 17040  005F94  6F7E               	movwf	_isupper$6465& (0+255),b
 17041                           
 17042                           ; BSR set to: 0
 17043  005F96  0E5B               	movlw	91
 17044  005F98  617F               	cpfslt	isupper@c& (0+255),b
 17045  005F9A  D005               	goto	l3353
 17046                           
 17047                           ; BSR set to: 0
 17048  005F9C  0E40               	movlw	64
 17049  005F9E  657F               	cpfsgt	isupper@c& (0+255),b
 17050  005FA0  D002               	goto	l3353
 17051                           
 17052                           ; BSR set to: 0
 17053  005FA2  0E01               	movlw	1
 17054  005FA4  6F7E               	movwf	_isupper$6465& (0+255),b
 17055  005FA6                     l3353:
 17056                           
 17057                           ; BSR set to: 0
 17058                           
 17059                           ; BSR set to: 0
 17060  005FA6  C07E  F07D         	movff	_isupper$6465,??_isupper
 17061  005FAA  317D               	rrcf	??_isupper& (0+255),w,b
 17062  005FAC  0012               	return	
 17063  005FAE                     __end_of_isupper:
 17064                           	opt stack 0
 17065                           tosu	equ	0xFFF
 17066                           tosh	equ	0xFFE
 17067                           tosl	equ	0xFFD
 17068                           pclath	equ	0xFFA
 17069                           tblptru	equ	0xFF8
 17070                           tblptrh	equ	0xFF7
 17071                           tblptrl	equ	0xFF6
 17072                           tablat	equ	0xFF5
 17073                           prodh	equ	0xFF4
 17074                           prodl	equ	0xFF3
 17075                           intcon	equ	0xFF2
 17076                           intcon2	equ	0xFF1
 17077                           intcon3	equ	0xFF0
 17078                           indf0	equ	0xFEF
 17079                           postinc0	equ	0xFEE
 17080                           plusw0	equ	0xFEB
 17081                           fsr0h	equ	0xFEA
 17082                           fsr0l	equ	0xFE9
 17083                           wreg	equ	0xFE8
 17084                           indf1	equ	0xFE7
 17085                           postinc1	equ	0xFE6
 17086                           postdec1	equ	0xFE5
 17087                           fsr1h	equ	0xFE2
 17088                           fsr1l	equ	0xFE1
 17089                           indf2	equ	0xFDF
 17090                           postinc2	equ	0xFDE
 17091                           postdec2	equ	0xFDD
 17092                           plusw2	equ	0xFDB
 17093                           fsr2h	equ	0xFDA
 17094                           fsr2l	equ	0xFD9
 17095                           status	equ	0xFD8
 17096                           
 17097 ;; *************** function _strcpy *****************
 17098 ;; Defined at:
 17099 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17100 ;; Parameters:    Size  Location     Type
 17101 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17102 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17103 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17104 ;;		 -> STR_23(20), STR_21(42), 
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17107 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17108 ;; Return value:  Size  Location     Type
 17109 ;;                  2   29[BANK0 ] PTR unsigned char 
 17110 ;; Registers used:
 17111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17112 ;; Tracked objects:
 17113 ;;		On entry : 0/0
 17114 ;;		On exit  : 0/0
 17115 ;;		Unchanged: 0/0
 17116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17117 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17120 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17121 ;;Total ram usage:        6 bytes
 17122 ;; Hardware stack levels used:    1
 17123 ;; Hardware stack levels required when called:   11
 17124 ;; This function calls:
 17125 ;;		Nothing
 17126 ;; This function is called by:
 17127 ;;		_Terminal
 17128 ;;		_Term_MainSm
 17129 ;; This function uses a non-reentrant model
 17130 ;;
 17131                           
 17132                           	psect	text69
 17133  005C9C                     __ptext69:
 17134                           	opt stack 0
 17135  005C9C                     _strcpy:
 17136                           	opt stack 15
 17137                           
 17138                           ; BSR set to: 0
 17139                           ;incstack = 0
 17140  005C9C  C07D  F081         	movff	strcpy@to,strcpy@cp
 17141  005CA0  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17142  005CA4  D005               	goto	l3245
 17143  005CA6  0100               	movlb	0	; () banked
 17144  005CA8  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17145  005CAA  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17146  005CAC  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17147  005CAE  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17148  005CB0                     l3245:
 17149                           
 17150                           ; BSR set to: 0
 17151  005CB0  C07F  FFF6         	movff	strcpy@from,tblptrl
 17152  005CB4  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17153  005CB8                     	if	0	;tblptru may be non-zero
 17154  005CB8                     	endif
 17155  005CB8                     	if	0	;tblptru may be non-zero
 17156  005CB8                     	endif
 17157  005CB8  C081  FFD9         	movff	strcpy@cp,fsr2l
 17158  005CBC  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17159  005CC0  0008               	tblrd		*
 17160  005CC2  CFF5 FFDF          	movff	tablat,indf2
 17161  005CC6  50DF               	movf	indf2,w,c
 17162  005CC8  B4D8               	btfsc	status,2,c
 17163  005CCA  0012               	return	
 17164  005CCC  D7EC               	goto	l3246
 17165  005CCE                     __end_of_strcpy:
 17166                           	opt stack 0
 17167                           tosu	equ	0xFFF
 17168                           tosh	equ	0xFFE
 17169                           tosl	equ	0xFFD
 17170                           pclath	equ	0xFFA
 17171                           tblptru	equ	0xFF8
 17172                           tblptrh	equ	0xFF7
 17173                           tblptrl	equ	0xFF6
 17174                           tablat	equ	0xFF5
 17175                           prodh	equ	0xFF4
 17176                           prodl	equ	0xFF3
 17177                           intcon	equ	0xFF2
 17178                           intcon2	equ	0xFF1
 17179                           intcon3	equ	0xFF0
 17180                           indf0	equ	0xFEF
 17181                           postinc0	equ	0xFEE
 17182                           plusw0	equ	0xFEB
 17183                           fsr0h	equ	0xFEA
 17184                           fsr0l	equ	0xFE9
 17185                           wreg	equ	0xFE8
 17186                           indf1	equ	0xFE7
 17187                           postinc1	equ	0xFE6
 17188                           postdec1	equ	0xFE5
 17189                           fsr1h	equ	0xFE2
 17190                           fsr1l	equ	0xFE1
 17191                           indf2	equ	0xFDF
 17192                           postinc2	equ	0xFDE
 17193                           postdec2	equ	0xFDD
 17194                           plusw2	equ	0xFDB
 17195                           fsr2h	equ	0xFDA
 17196                           fsr2l	equ	0xFD9
 17197                           status	equ	0xFD8
 17198                           
 17199 ;; *************** function _putUSBUSART *****************
 17200 ;; Defined at:
 17201 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17204 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17205 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17206 ;;		 -> RxBuffer(400), 
 17207 ;;  length          1   37[BANK0 ] unsigned char 
 17208 ;; Auto vars:     Size  Location     Type
 17209 ;;		None
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  1    wreg      void 
 17212 ;; Registers used:
 17213 ;;		wreg, status,2, status,0
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17219 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17222 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17223 ;;Total ram usage:        3 bytes
 17224 ;; Hardware stack levels used:    1
 17225 ;; Hardware stack levels required when called:   11
 17226 ;; This function calls:
 17227 ;;		Nothing
 17228 ;; This function is called by:
 17229 ;;		_Terminal
 17230 ;;		_Term_MainSm
 17231 ;;		_GsmGprsTerminal
 17232 ;; This function uses a non-reentrant model
 17233 ;;
 17234                           
 17235                           	psect	text70
 17236  005FAE                     __ptext70:
 17237                           	opt stack 0
 17238  005FAE                     _putUSBUSART:
 17239                           	opt stack 15
 17240                           
 17241                           ;usb_device_cdc.c: 584: ;
 17242                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17243                           
 17244                           ;incstack = 0
 17245  005FAE  0100               	movlb	0	; () banked
 17246  005FB0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17247  005FB2  A4D8               	btfss	status,2,c
 17248  005FB4  0012               	return	
 17249                           
 17250                           ; BSR set to: 0
 17251                           ;usb_device_cdc.c: 586: {
 17252                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17253  005FB6  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17254  005FBA  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17255                           
 17256                           ; BSR set to: 0
 17257  005FBE  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17258                           
 17259                           ; BSR set to: 0
 17260  005FC2  0E01               	movlw	1
 17261  005FC4  0101               	movlb	1	; () banked
 17262  005FC6  6FE2               	movwf	_cdc_mem_type& (0+255),b
 17263                           
 17264                           ; BSR set to: 1
 17265  005FC8  0E01               	movlw	1
 17266  005FCA  0100               	movlb	0	; () banked
 17267  005FCC  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17268  005FCE  0012               	return	
 17269  005FD0                     __end_of_putUSBUSART:
 17270                           	opt stack 0
 17271                           tosu	equ	0xFFF
 17272                           tosh	equ	0xFFE
 17273                           tosl	equ	0xFFD
 17274                           pclath	equ	0xFFA
 17275                           tblptru	equ	0xFF8
 17276                           tblptrh	equ	0xFF7
 17277                           tblptrl	equ	0xFF6
 17278                           tablat	equ	0xFF5
 17279                           prodh	equ	0xFF4
 17280                           prodl	equ	0xFF3
 17281                           intcon	equ	0xFF2
 17282                           intcon2	equ	0xFF1
 17283                           intcon3	equ	0xFF0
 17284                           indf0	equ	0xFEF
 17285                           postinc0	equ	0xFEE
 17286                           plusw0	equ	0xFEB
 17287                           fsr0h	equ	0xFEA
 17288                           fsr0l	equ	0xFE9
 17289                           wreg	equ	0xFE8
 17290                           indf1	equ	0xFE7
 17291                           postinc1	equ	0xFE6
 17292                           postdec1	equ	0xFE5
 17293                           fsr1h	equ	0xFE2
 17294                           fsr1l	equ	0xFE1
 17295                           indf2	equ	0xFDF
 17296                           postinc2	equ	0xFDE
 17297                           postdec2	equ	0xFDD
 17298                           plusw2	equ	0xFDB
 17299                           fsr2h	equ	0xFDA
 17300                           fsr2l	equ	0xFD9
 17301                           status	equ	0xFD8
 17302                           
 17303 ;; *************** function _itoa *****************
 17304 ;; Defined at:
 17305 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17306 ;; Parameters:    Size  Location     Type
 17307 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17308 ;;		 -> Terminal@Payload(80), 
 17309 ;;  val             2   53[BANK0 ] int 
 17310 ;;  base            2   55[BANK0 ] int 
 17311 ;; Auto vars:     Size  Location     Type
 17312 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17313 ;;		 -> Terminal@Payload(80), 
 17314 ;; Return value:  Size  Location     Type
 17315 ;;                  2   51[BANK0 ] PTR unsigned char 
 17316 ;; Registers used:
 17317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17318 ;; Tracked objects:
 17319 ;;		On entry : 0/0
 17320 ;;		On exit  : 0/0
 17321 ;;		Unchanged: 0/0
 17322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17323 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17326 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17327 ;;Total ram usage:        8 bytes
 17328 ;; Hardware stack levels used:    1
 17329 ;; Hardware stack levels required when called:   13
 17330 ;; This function calls:
 17331 ;;		_utoa
 17332 ;; This function is called by:
 17333 ;;		_Terminal
 17334 ;; This function uses a non-reentrant model
 17335 ;;
 17336                           
 17337                           	psect	text71
 17338  005898                     __ptext71:
 17339                           	opt stack 0
 17340  005898                     _itoa:
 17341                           	opt stack 12
 17342                           
 17343                           ; BSR set to: 0
 17344                           ;incstack = 0
 17345  005898  C093  F099         	movff	itoa@buf,itoa@cp
 17346  00589C  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17347  0058A0  0100               	movlb	0	; () banked
 17348  0058A2  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17349  0058A4  D00C               	goto	l2993
 17350                           
 17351                           ; BSR set to: 0
 17352  0058A6  C093  FFD9         	movff	itoa@buf,fsr2l
 17353  0058AA  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17354  0058AE  0E2D               	movlw	45
 17355  0058B0  6EDF               	movwf	indf2,c
 17356                           
 17357                           ; BSR set to: 0
 17358  0058B2  4B93               	infsnz	itoa@buf& (0+255),f,b
 17359  0058B4  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17360                           
 17361                           ; BSR set to: 0
 17362  0058B6  6D95               	negf	itoa@val& (0+255),b
 17363  0058B8  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17364  0058BA  B0D8               	btfsc	status,0,c
 17365  0058BC  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17366  0058BE                     l2993:
 17367                           
 17368                           ; BSR set to: 0
 17369                           
 17370                           ; BSR set to: 0
 17371  0058BE  C093  F08A         	movff	itoa@buf,utoa@buf
 17372  0058C2  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17373  0058C6  C095  F08C         	movff	itoa@val,utoa@val
 17374  0058CA  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17375  0058CE  C097  F08E         	movff	itoa@base,utoa@base
 17376  0058D2  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17377  0058D6  EC81  F021         	call	_utoa	;wreg free
 17378  0058DA  0012               	return	
 17379  0058DC                     __end_of_itoa:
 17380                           	opt stack 0
 17381                           tosu	equ	0xFFF
 17382                           tosh	equ	0xFFE
 17383                           tosl	equ	0xFFD
 17384                           pclath	equ	0xFFA
 17385                           tblptru	equ	0xFF8
 17386                           tblptrh	equ	0xFF7
 17387                           tblptrl	equ	0xFF6
 17388                           tablat	equ	0xFF5
 17389                           prodh	equ	0xFF4
 17390                           prodl	equ	0xFF3
 17391                           intcon	equ	0xFF2
 17392                           intcon2	equ	0xFF1
 17393                           intcon3	equ	0xFF0
 17394                           indf0	equ	0xFEF
 17395                           postinc0	equ	0xFEE
 17396                           plusw0	equ	0xFEB
 17397                           fsr0h	equ	0xFEA
 17398                           fsr0l	equ	0xFE9
 17399                           wreg	equ	0xFE8
 17400                           indf1	equ	0xFE7
 17401                           postinc1	equ	0xFE6
 17402                           postdec1	equ	0xFE5
 17403                           fsr1h	equ	0xFE2
 17404                           fsr1l	equ	0xFE1
 17405                           indf2	equ	0xFDF
 17406                           postinc2	equ	0xFDE
 17407                           postdec2	equ	0xFDD
 17408                           plusw2	equ	0xFDB
 17409                           fsr2h	equ	0xFDA
 17410                           fsr2l	equ	0xFD9
 17411                           status	equ	0xFD8
 17412                           
 17413 ;; *************** function _utoa *****************
 17414 ;; Defined at:
 17415 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17418 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17419 ;;  val             2   44[BANK0 ] unsigned int 
 17420 ;;  base            2   46[BANK0 ] int 
 17421 ;; Auto vars:     Size  Location     Type
 17422 ;;  v               2   48[BANK0 ] unsigned int 
 17423 ;;  c               1   50[BANK0 ] unsigned char 
 17424 ;; Return value:  Size  Location     Type
 17425 ;;                  2   42[BANK0 ] PTR unsigned char 
 17426 ;; Registers used:
 17427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17428 ;; Tracked objects:
 17429 ;;		On entry : 0/0
 17430 ;;		On exit  : 0/0
 17431 ;;		Unchanged: 0/0
 17432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17433 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17434 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17436 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17437 ;;Total ram usage:        9 bytes
 17438 ;; Hardware stack levels used:    1
 17439 ;; Hardware stack levels required when called:   12
 17440 ;; This function calls:
 17441 ;;		___lwdiv
 17442 ;;		___lwmod
 17443 ;; This function is called by:
 17444 ;;		_Term_MainSm
 17445 ;;		_itoa
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text72
 17450  004302                     __ptext72:
 17451                           	opt stack 0
 17452  004302                     _utoa:
 17453                           	opt stack 14
 17454                           
 17455                           ;incstack = 0
 17456  004302  C08C  F090         	movff	utoa@val,utoa@v
 17457  004306  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17458  00430A  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17459  00430E  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17460  004312  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17461  004316  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17462  00431A  EC5F  F02A         	call	___lwdiv	;wreg free
 17463  00431E  C083  F090         	movff	?___lwdiv,utoa@v
 17464  004322  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17465  004326  0100               	movlb	0	; () banked
 17466  004328  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17467  00432A  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17468                           
 17469                           ; BSR set to: 0
 17470  00432C  5190               	movf	utoa@v& (0+255),w,b
 17471  00432E  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17472  004330  A4D8               	btfss	status,2,c
 17473  004332  D7EB               	goto	l2997
 17474                           
 17475                           ; BSR set to: 0
 17476                           
 17477                           ; BSR set to: 0
 17478  004334  C08A  FFD9         	movff	utoa@buf,fsr2l
 17479  004338  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17480  00433C  0E00               	movlw	0
 17481  00433E  6EDF               	movwf	indf2,c
 17482                           
 17483                           ; BSR set to: 0
 17484  004340  078A               	decf	utoa@buf& (0+255),f,b
 17485  004342  A0D8               	btfss	status,0,c
 17486  004344  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17487  004346                     
 17488                           ; BSR set to: 0
 17489                           
 17490                           ; BSR set to: 0
 17491  004346  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17492  00434A  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17493  00434E  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17494  004352  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17495  004356  EC6E  F02C         	call	___lwmod	;wreg free
 17496  00435A  0100               	movlb	0	; () banked
 17497  00435C  517D               	movf	?___lwmod& (0+255),w,b
 17498  00435E  6F92               	movwf	utoa@c& (0+255),b
 17499                           
 17500                           ; BSR set to: 0
 17501  004360  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17502  004364  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17503  004368  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17504  00436C  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17505  004370  EC5F  F02A         	call	___lwdiv	;wreg free
 17506  004374  C083  F08C         	movff	?___lwdiv,utoa@val
 17507  004378  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17508  00437C  0E09               	movlw	9
 17509  00437E  0100               	movlb	0	; () banked
 17510  004380  6592               	cpfsgt	utoa@c& (0+255),b
 17511  004382  D002               	goto	l3000
 17512                           
 17513                           ; BSR set to: 0
 17514  004384  0E07               	movlw	7
 17515  004386  2792               	addwf	utoa@c& (0+255),f,b
 17516  004388                     l3000:
 17517                           
 17518                           ; BSR set to: 0
 17519  004388  0E30               	movlw	48
 17520  00438A  2792               	addwf	utoa@c& (0+255),f,b
 17521                           
 17522                           ; BSR set to: 0
 17523  00438C  C08A  FFD9         	movff	utoa@buf,fsr2l
 17524  004390  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17525  004394  C092  FFDF         	movff	utoa@c,indf2
 17526                           
 17527                           ; BSR set to: 0
 17528  004398  078A               	decf	utoa@buf& (0+255),f,b
 17529  00439A  A0D8               	btfss	status,0,c
 17530  00439C  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17531                           
 17532                           ; BSR set to: 0
 17533  00439E  518C               	movf	utoa@val& (0+255),w,b
 17534  0043A0  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17535  0043A2  A4D8               	btfss	status,2,c
 17536  0043A4  D7D0               	goto	l2999
 17537                           
 17538                           ; BSR set to: 0
 17539                           ;	Return value of _utoa is never used
 17540                           
 17541                           ; BSR set to: 0
 17542  0043A6  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17543  0043A8  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17544  0043AA  0012               	return	
 17545  0043AC                     __end_of_utoa:
 17546                           	opt stack 0
 17547                           tosu	equ	0xFFF
 17548                           tosh	equ	0xFFE
 17549                           tosl	equ	0xFFD
 17550                           pclath	equ	0xFFA
 17551                           tblptru	equ	0xFF8
 17552                           tblptrh	equ	0xFF7
 17553                           tblptrl	equ	0xFF6
 17554                           tablat	equ	0xFF5
 17555                           prodh	equ	0xFF4
 17556                           prodl	equ	0xFF3
 17557                           intcon	equ	0xFF2
 17558                           intcon2	equ	0xFF1
 17559                           intcon3	equ	0xFF0
 17560                           indf0	equ	0xFEF
 17561                           postinc0	equ	0xFEE
 17562                           plusw0	equ	0xFEB
 17563                           fsr0h	equ	0xFEA
 17564                           fsr0l	equ	0xFE9
 17565                           wreg	equ	0xFE8
 17566                           indf1	equ	0xFE7
 17567                           postinc1	equ	0xFE6
 17568                           postdec1	equ	0xFE5
 17569                           fsr1h	equ	0xFE2
 17570                           fsr1l	equ	0xFE1
 17571                           indf2	equ	0xFDF
 17572                           postinc2	equ	0xFDE
 17573                           postdec2	equ	0xFDD
 17574                           plusw2	equ	0xFDB
 17575                           fsr2h	equ	0xFDA
 17576                           fsr2l	equ	0xFD9
 17577                           status	equ	0xFD8
 17578                           
 17579 ;; *************** function ___lwmod *****************
 17580 ;; Defined at:
 17581 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;  dividend        2   29[BANK0 ] unsigned int 
 17584 ;;  divisor         2   31[BANK0 ] unsigned int 
 17585 ;; Auto vars:     Size  Location     Type
 17586 ;;  counter         1   33[BANK0 ] unsigned char 
 17587 ;; Return value:  Size  Location     Type
 17588 ;;                  2   29[BANK0 ] unsigned int 
 17589 ;; Registers used:
 17590 ;;		wreg, status,2, status,0
 17591 ;; Tracked objects:
 17592 ;;		On entry : 0/0
 17593 ;;		On exit  : 0/0
 17594 ;;		Unchanged: 0/0
 17595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17596 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17597 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17599 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17600 ;;Total ram usage:        5 bytes
 17601 ;; Hardware stack levels used:    1
 17602 ;; Hardware stack levels required when called:   11
 17603 ;; This function calls:
 17604 ;;		Nothing
 17605 ;; This function is called by:
 17606 ;;		_utoa
 17607 ;; This function uses a non-reentrant model
 17608 ;;
 17609                           
 17610                           	psect	text73
 17611  0058DC                     __ptext73:
 17612                           	opt stack 0
 17613  0058DC                     ___lwmod:
 17614                           	opt stack 14
 17615                           
 17616                           ; BSR set to: 0
 17617                           ;incstack = 0
 17618  0058DC  0100               	movlb	0	; () banked
 17619  0058DE  517F               	movf	___lwmod@divisor& (0+255),w,b
 17620  0058E0  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17621  0058E2  B4D8               	btfsc	status,2,c
 17622  0058E4  D018               	goto	l3095
 17623                           
 17624                           ; BSR set to: 0
 17625  0058E6  0E01               	movlw	1
 17626  0058E8  6F81               	movwf	___lwmod@counter& (0+255),b
 17627  0058EA  D004               	goto	l3090
 17628  0058EC                     
 17629                           ; BSR set to: 0
 17630                           
 17631                           ; BSR set to: 0
 17632  0058EC  90D8               	bcf	status,0,c
 17633  0058EE  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17634  0058F0  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17635  0058F2  2B81               	incf	___lwmod@counter& (0+255),f,b
 17636  0058F4                     l3090:
 17637                           
 17638                           ; BSR set to: 0
 17639                           
 17640                           ; BSR set to: 0
 17641  0058F4  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17642  0058F6  D7FA               	goto	l3091
 17643  0058F8                     u10900:
 17644                           
 17645                           ; BSR set to: 0
 17646                           
 17647                           ; BSR set to: 0
 17648                           
 17649                           ; BSR set to: 0
 17650  0058F8  517F               	movf	___lwmod@divisor& (0+255),w,b
 17651  0058FA  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17652  0058FC  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17653  0058FE  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17654  005900  A0D8               	btfss	status,0,c
 17655  005902  D004               	goto	l3094
 17656                           
 17657                           ; BSR set to: 0
 17658  005904  517F               	movf	___lwmod@divisor& (0+255),w,b
 17659  005906  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17660  005908  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17661  00590A  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17662  00590C                     l3094:
 17663                           
 17664                           ; BSR set to: 0
 17665                           
 17666                           ; BSR set to: 0
 17667  00590C  90D8               	bcf	status,0,c
 17668  00590E  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17669  005910  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17670                           
 17671                           ; BSR set to: 0
 17672  005912  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17673  005914  D7F1               	goto	u10900
 17674  005916                     l3095:
 17675                           
 17676                           ; BSR set to: 0
 17677                           
 17678                           ; BSR set to: 0
 17679  005916  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17680  00591A  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17681                           
 17682                           ; BSR set to: 0
 17683  00591E  0012               	return		;funcret
 17684  005920                     __end_of___lwmod:
 17685                           	opt stack 0
 17686                           tosu	equ	0xFFF
 17687                           tosh	equ	0xFFE
 17688                           tosl	equ	0xFFD
 17689                           pclath	equ	0xFFA
 17690                           tblptru	equ	0xFF8
 17691                           tblptrh	equ	0xFF7
 17692                           tblptrl	equ	0xFF6
 17693                           tablat	equ	0xFF5
 17694                           prodh	equ	0xFF4
 17695                           prodl	equ	0xFF3
 17696                           intcon	equ	0xFF2
 17697                           intcon2	equ	0xFF1
 17698                           intcon3	equ	0xFF0
 17699                           indf0	equ	0xFEF
 17700                           postinc0	equ	0xFEE
 17701                           plusw0	equ	0xFEB
 17702                           fsr0h	equ	0xFEA
 17703                           fsr0l	equ	0xFE9
 17704                           wreg	equ	0xFE8
 17705                           indf1	equ	0xFE7
 17706                           postinc1	equ	0xFE6
 17707                           postdec1	equ	0xFE5
 17708                           fsr1h	equ	0xFE2
 17709                           fsr1l	equ	0xFE1
 17710                           indf2	equ	0xFDF
 17711                           postinc2	equ	0xFDE
 17712                           postdec2	equ	0xFDD
 17713                           plusw2	equ	0xFDB
 17714                           fsr2h	equ	0xFDA
 17715                           fsr2l	equ	0xFD9
 17716                           status	equ	0xFD8
 17717                           
 17718 ;; *************** function _getsUSBUSART *****************
 17719 ;; Defined at:
 17720 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17723 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17724 ;;  len             1   38[BANK0 ] unsigned char 
 17725 ;; Auto vars:     Size  Location     Type
 17726 ;;		None
 17727 ;; Return value:  Size  Location     Type
 17728 ;;                  1    wreg      unsigned char 
 17729 ;; Registers used:
 17730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17731 ;; Tracked objects:
 17732 ;;		On entry : 0/0
 17733 ;;		On exit  : 0/0
 17734 ;;		Unchanged: 0/0
 17735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17736 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17739 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;Total ram usage:        4 bytes
 17741 ;; Hardware stack levels used:    1
 17742 ;; Hardware stack levels required when called:   12
 17743 ;; This function calls:
 17744 ;;		_USBTransferOnePacket
 17745 ;; This function is called by:
 17746 ;;		_Terminal
 17747 ;;		_GsmGprsTerminal
 17748 ;; This function uses a non-reentrant model
 17749 ;;
 17750                           
 17751                           	psect	text74
 17752  0048A8                     __ptext74:
 17753                           	opt stack 0
 17754  0048A8                     _getsUSBUSART:
 17755                           	opt stack 13
 17756                           
 17757                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17758                           
 17759                           ; BSR set to: 0
 17760                           ;incstack = 0
 17761  0048A8  0E00               	movlw	0
 17762  0048AA  0100               	movlb	0	; () banked
 17763  0048AC  6FC6               	movwf	_cdc_rx_len& (0+255),b
 17764                           
 17765                           ; BSR set to: 0
 17766                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17767  0048AE  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17768  0048B0  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17769  0048B2  B4D8               	btfsc	status,2,c
 17770  0048B4  D006               	goto	u11680
 17771                           
 17772                           ; BSR set to: 0
 17773  0048B6  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17774  0048BA  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17775  0048BE  BEDF               	btfsc	indf2,7,c
 17776  0048C0  D03B               	goto	l1921
 17777  0048C2                     u11680:
 17778                           
 17779                           ; BSR set to: 0
 17780                           ;usb_device_cdc.c: 493: {
 17781                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17782                           
 17783                           ; BSR set to: 0
 17784  0048C2  EE20 F001          	lfsr	2,1
 17785  0048C6  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17786  0048C8  26D9               	addwf	fsr2l,f,c
 17787  0048CA  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17788  0048CC  22DA               	addwfc	fsr2h,f,c
 17789  0048CE  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17790  0048D0  5CDE               	subwf	postinc2,w,c
 17791  0048D2  B0D8               	btfsc	status,0,c
 17792  0048D4  D008               	goto	l1924
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17796  0048D6  EE20 F001          	lfsr	2,1
 17797  0048DA  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17798  0048DC  26D9               	addwf	fsr2l,f,c
 17799  0048DE  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17800  0048E0  22DA               	addwfc	fsr2h,f,c
 17801  0048E2  50DF               	movf	indf2,w,c
 17802  0048E4  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17803  0048E6                     l1924:
 17804                           
 17805                           ; BSR set to: 0
 17806                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17807                           
 17808                           ; BSR set to: 0
 17809  0048E6  0E00               	movlw	0
 17810  0048E8  6FC6               	movwf	_cdc_rx_len& (0+255),b
 17811  0048EA  D013               	goto	l1925
 17812  0048EC                     
 17813                           ; BSR set to: 0
 17814                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17815                           
 17816                           ; BSR set to: 0
 17817  0048EC  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17818  0048EE  0D01               	mullw	1
 17819  0048F0  0E00               	movlw	low _cdc_data_rx
 17820  0048F2  24F3               	addwf	prodl,w,c
 17821  0048F4  6ED9               	movwf	fsr2l,c
 17822  0048F6  0E05               	movlw	high _cdc_data_rx
 17823  0048F8  20F4               	addwfc	prodh,w,c
 17824  0048FA  6EDA               	movwf	fsr2h,c
 17825  0048FC  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17826  0048FE  0D01               	mullw	1
 17827  004900  50F3               	movf	prodl,w,c
 17828  004902  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17829  004904  6EE1               	movwf	fsr1l,c
 17830  004906  50F4               	movf	prodh,w,c
 17831  004908  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17832  00490A  6EE2               	movwf	fsr1h,c
 17833  00490C  CFDF FFE7          	movff	indf2,indf1
 17834                           
 17835                           ; BSR set to: 0
 17836  004910  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 17837  004912                     l1925:
 17838                           
 17839                           ; BSR set to: 0
 17840                           
 17841                           ; BSR set to: 0
 17842  004912  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17843  004914  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 17844  004916  A0D8               	btfss	status,0,c
 17845  004918  D7E9               	goto	l1926
 17846                           
 17847                           ; BSR set to: 0
 17848                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17849                           
 17850                           ; BSR set to: 0
 17851  00491A  0E00               	movlw	0
 17852  00491C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17853  00491E  0E00               	movlw	low _cdc_data_rx
 17854  004920  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17855  004922  0E05               	movlw	high _cdc_data_rx
 17856  004924  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17857  004926  0E40               	movlw	64
 17858  004928  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17859  00492A  0E02               	movlw	2
 17860  00492C  EC1B  F020         	call	_USBTransferOnePacket
 17861  004930  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17862  004934  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17863  004938                     l1921:
 17864                           
 17865                           ;usb_device_cdc.c: 513: }
 17866                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17867  004938  0100               	movlb	0	; () banked
 17868  00493A  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17869  00493C  0012               	return	
 17870  00493E                     __end_of_getsUSBUSART:
 17871                           	opt stack 0
 17872                           tosu	equ	0xFFF
 17873                           tosh	equ	0xFFE
 17874                           tosl	equ	0xFFD
 17875                           pclath	equ	0xFFA
 17876                           tblptru	equ	0xFF8
 17877                           tblptrh	equ	0xFF7
 17878                           tblptrl	equ	0xFF6
 17879                           tablat	equ	0xFF5
 17880                           prodh	equ	0xFF4
 17881                           prodl	equ	0xFF3
 17882                           intcon	equ	0xFF2
 17883                           intcon2	equ	0xFF1
 17884                           intcon3	equ	0xFF0
 17885                           indf0	equ	0xFEF
 17886                           postinc0	equ	0xFEE
 17887                           plusw0	equ	0xFEB
 17888                           fsr0h	equ	0xFEA
 17889                           fsr0l	equ	0xFE9
 17890                           wreg	equ	0xFE8
 17891                           indf1	equ	0xFE7
 17892                           postinc1	equ	0xFE6
 17893                           postdec1	equ	0xFE5
 17894                           fsr1h	equ	0xFE2
 17895                           fsr1l	equ	0xFE1
 17896                           indf2	equ	0xFDF
 17897                           postinc2	equ	0xFDE
 17898                           postdec2	equ	0xFDD
 17899                           plusw2	equ	0xFDB
 17900                           fsr2h	equ	0xFDA
 17901                           fsr2l	equ	0xFD9
 17902                           status	equ	0xFD8
 17903                           
 17904 ;; *************** function _USBTransferOnePacket *****************
 17905 ;; Defined at:
 17906 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17907 ;; Parameters:    Size  Location     Type
 17908 ;;  ep              1    wreg     unsigned char 
 17909 ;;  dir             1   29[BANK0 ] unsigned char 
 17910 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17911 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17912 ;;  len             1   32[BANK0 ] unsigned char 
 17913 ;; Auto vars:     Size  Location     Type
 17914 ;;  ep              1   33[BANK0 ] unsigned char 
 17915 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17916 ;;		 -> NULL(0), BDT(48), 
 17917 ;; Return value:  Size  Location     Type
 17918 ;;                  2   29[BANK0 ] PTR void 
 17919 ;; Registers used:
 17920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17921 ;; Tracked objects:
 17922 ;;		On entry : 0/0
 17923 ;;		On exit  : 0/0
 17924 ;;		Unchanged: 0/0
 17925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17926 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17927 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17930 ;;Total ram usage:        7 bytes
 17931 ;; Hardware stack levels used:    1
 17932 ;; Hardware stack levels required when called:   11
 17933 ;; This function calls:
 17934 ;;		Nothing
 17935 ;; This function is called by:
 17936 ;;		_CDCInitEP
 17937 ;;		_getsUSBUSART
 17938 ;;		_CDCTxService
 17939 ;;		_USBCDCEventHandler
 17940 ;; This function uses a non-reentrant model
 17941 ;;
 17942                           
 17943                           	psect	text75
 17944  004036                     __ptext75:
 17945                           	opt stack 0
 17946  004036                     _USBTransferOnePacket:
 17947                           	opt stack 13
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;incstack = 0
 17951                           ;USBTransferOnePacket@ep stored from wreg
 17952  004036  0100               	movlb	0	; () banked
 17953  004038  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17954                           
 17955                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17956                           ;usb_device.c: 1018: if(dir != 0)
 17957  00403A  0100               	movlb	0	; () banked
 17958  00403C  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17959  00403E  B4D8               	btfsc	status,2,c
 17960  004040  D007               	goto	l1645
 17961                           
 17962                           ; BSR set to: 0
 17963                           ;usb_device.c: 1019: {
 17964                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17965  004042  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17966  004044  0D02               	mullw	2
 17967  004046  0EB6               	movlw	low _pBDTEntryIn
 17968  004048  24F3               	addwf	prodl,w,c
 17969  00404A  6ED9               	movwf	fsr2l,c
 17970  00404C  0E00               	movlw	high _pBDTEntryIn
 17971  00404E  D006               	goto	L16
 17972  004050                     l1645:
 17973                           
 17974                           ; BSR set to: 0
 17975                           ;usb_device.c: 1023: else
 17976                           ;usb_device.c: 1024: {
 17977                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17978                           
 17979                           ; BSR set to: 0
 17980  004050  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17981  004052  0D02               	mullw	2
 17982  004054  0E0E               	movlw	low _pBDTEntryOut
 17983  004056  24F3               	addwf	prodl,w,c
 17984  004058  6ED9               	movwf	fsr2l,c
 17985  00405A  0E03               	movlw	high _pBDTEntryOut
 17986  00405C                     L16:
 17987  00405C  20F4               	addwfc	prodh,w,c
 17988  00405E  6EDA               	movwf	fsr2h,c
 17989  004060  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17990  004064  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17991                           
 17992                           ; BSR set to: 0
 17993                           ;usb_device.c: 1027: }
 17994                           ;usb_device.c: 1031: if(handle == 0)
 17995                           
 17996                           ; BSR set to: 0
 17997  004068  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17998  00406A  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17999  00406C  A4D8               	btfss	status,2,c
 18000  00406E  D005               	goto	l1647
 18001                           
 18002                           ; BSR set to: 0
 18003                           ;usb_device.c: 1032: {
 18004                           ;usb_device.c: 1033: return 0;
 18005  004070  0E00               	movlw	0
 18006  004072  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18007  004074  0E00               	movlw	0
 18008  004076  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18009                           
 18010                           ; BSR set to: 0
 18011  004078  0012               	return	
 18012  00407A                     l1647:
 18013                           
 18014                           ; BSR set to: 0
 18015                           ;usb_device.c: 1034: }
 18016                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18017                           
 18018                           ; BSR set to: 0
 18019  00407A  EE20 F002          	lfsr	2,2
 18020  00407E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18021  004080  26D9               	addwf	fsr2l,f,c
 18022  004082  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18023  004084  22DA               	addwfc	fsr2h,f,c
 18024  004086  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18025  00408A  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18026                           
 18027                           ;usb_device.c: 1048: handle->CNT = len;
 18028  00408E  EE20 F001          	lfsr	2,1
 18029  004092  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18030  004094  26D9               	addwf	fsr2l,f,c
 18031  004096  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18032  004098  22DA               	addwfc	fsr2h,f,c
 18033  00409A  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18037  00409E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18038  0040A2  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18039  0040A6  0E40               	movlw	64
 18040  0040A8  16DF               	andwf	indf2,f,c
 18041                           
 18042                           ; BSR set to: 0
 18043                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18044  0040AA  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18045  0040AE  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18046  0040B2  0E00               	movlw	0
 18047  0040B4  86DB               	bsf	plusw2,3,c
 18048                           
 18049                           ; BSR set to: 0
 18050                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18051  0040B6  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18052  0040BA  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18053  0040BE  0E00               	movlw	0
 18054  0040C0  8EDB               	bsf	plusw2,7,c
 18055                           
 18056                           ; BSR set to: 0
 18057                           ;usb_device.c: 1054: if(dir != 0)
 18058  0040C2  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18059  0040C4  B4D8               	btfsc	status,2,c
 18060  0040C6  D007               	goto	l1649
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;usb_device.c: 1055: {
 18064                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18065  0040C8  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18066  0040CA  0D02               	mullw	2
 18067  0040CC  0EB6               	movlw	low _pBDTEntryIn
 18068  0040CE  24F3               	addwf	prodl,w,c
 18069  0040D0  6ED9               	movwf	fsr2l,c
 18070  0040D2  0E00               	movlw	high _pBDTEntryIn
 18071  0040D4  D006               	goto	L17
 18072  0040D6                     l1649:
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;usb_device.c: 1059: else
 18076                           ;usb_device.c: 1060: {
 18077                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18078                           
 18079                           ; BSR set to: 0
 18080  0040D6  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18081  0040D8  0D02               	mullw	2
 18082  0040DA  0E0E               	movlw	low _pBDTEntryOut
 18083  0040DC  24F3               	addwf	prodl,w,c
 18084  0040DE  6ED9               	movwf	fsr2l,c
 18085  0040E0  0E03               	movlw	high _pBDTEntryOut
 18086  0040E2                     L17:
 18087  0040E2  20F4               	addwfc	prodh,w,c
 18088  0040E4  6EDA               	movwf	fsr2h,c
 18089  0040E6  0E04               	movlw	4
 18090  0040E8  1ADF               	xorwf	indf2,f,c
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;usb_device.c: 1063: }
 18094                           ;usb_device.c: 1064: return (void*)handle;
 18095                           
 18096                           ; BSR set to: 0
 18097  0040EA  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18098  0040EE  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18099  0040F2  0012               	return	
 18100  0040F4                     __end_of_USBTransferOnePacket:
 18101                           	opt stack 0
 18102                           tosu	equ	0xFFF
 18103                           tosh	equ	0xFFE
 18104                           tosl	equ	0xFFD
 18105                           pclath	equ	0xFFA
 18106                           tblptru	equ	0xFF8
 18107                           tblptrh	equ	0xFF7
 18108                           tblptrl	equ	0xFF6
 18109                           tablat	equ	0xFF5
 18110                           prodh	equ	0xFF4
 18111                           prodl	equ	0xFF3
 18112                           intcon	equ	0xFF2
 18113                           intcon2	equ	0xFF1
 18114                           intcon3	equ	0xFF0
 18115                           indf0	equ	0xFEF
 18116                           postinc0	equ	0xFEE
 18117                           plusw0	equ	0xFEB
 18118                           fsr0h	equ	0xFEA
 18119                           fsr0l	equ	0xFE9
 18120                           wreg	equ	0xFE8
 18121                           indf1	equ	0xFE7
 18122                           postinc1	equ	0xFE6
 18123                           postdec1	equ	0xFE5
 18124                           fsr1h	equ	0xFE2
 18125                           fsr1l	equ	0xFE1
 18126                           indf2	equ	0xFDF
 18127                           postinc2	equ	0xFDE
 18128                           postdec2	equ	0xFDD
 18129                           plusw2	equ	0xFDB
 18130                           fsr2h	equ	0xFDA
 18131                           fsr2l	equ	0xFD9
 18132                           status	equ	0xFD8
 18133                           
 18134 ;; *************** function _atoi *****************
 18135 ;; Defined at:
 18136 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18137 ;; Parameters:    Size  Location     Type
 18138 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18139 ;;		 -> Terminal@Len(4), 
 18140 ;; Auto vars:     Size  Location     Type
 18141 ;;  a               2   40[BANK0 ] int 
 18142 ;;  sign            1   39[BANK0 ] unsigned char 
 18143 ;; Return value:  Size  Location     Type
 18144 ;;                  2   35[BANK0 ] int 
 18145 ;; Registers used:
 18146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18147 ;; Tracked objects:
 18148 ;;		On entry : 0/0
 18149 ;;		On exit  : 0/0
 18150 ;;		Unchanged: 0/0
 18151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18153 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18155 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18156 ;;Total ram usage:        7 bytes
 18157 ;; Hardware stack levels used:    1
 18158 ;; Hardware stack levels required when called:   12
 18159 ;; This function calls:
 18160 ;;		___wmul
 18161 ;;		_isdigit
 18162 ;; This function is called by:
 18163 ;;		_Terminal
 18164 ;; This function uses a non-reentrant model
 18165 ;;
 18166                           
 18167                           	psect	text76
 18168  0036B0                     __ptext76:
 18169                           	opt stack 0
 18170  0036B0                     _atoi:
 18171                           	opt stack 13
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;incstack = 0
 18175  0036B0  D003               	goto	l2806
 18176  0036B2  0100               	movlb	0	; () banked
 18177  0036B4  4B83               	infsnz	atoi@s& (0+255),f,b
 18178  0036B6  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18179  0036B8                     l2806:
 18180                           
 18181                           ; BSR set to: 0
 18182  0036B8  C083  FFD9         	movff	atoi@s,fsr2l
 18183  0036BC  C084  FFDA         	movff	atoi@s+1,fsr2h
 18184  0036C0  0E20               	movlw	32
 18185  0036C2  18DE               	xorwf	postinc2,w,c
 18186  0036C4  B4D8               	btfsc	status,2,c
 18187  0036C6  D7F5               	goto	l2807
 18188  0036C8  C083  FFD9         	movff	atoi@s,fsr2l
 18189  0036CC  C084  FFDA         	movff	atoi@s+1,fsr2h
 18190  0036D0  0E09               	movlw	9
 18191  0036D2  18DE               	xorwf	postinc2,w,c
 18192  0036D4  B4D8               	btfsc	status,2,c
 18193  0036D6  D7ED               	goto	l2807
 18194  0036D8  0E00               	movlw	0
 18195  0036DA  0100               	movlb	0	; () banked
 18196  0036DC  6F89               	movwf	(atoi@a+1)& (0+255),b
 18197  0036DE  0E00               	movlw	0
 18198  0036E0  6F88               	movwf	atoi@a& (0+255),b
 18199  0036E2  0E00               	movlw	0
 18200  0036E4  6F87               	movwf	atoi@sign& (0+255),b
 18201                           
 18202                           ; BSR set to: 0
 18203  0036E6  C083  FFD9         	movff	atoi@s,fsr2l
 18204  0036EA  C084  FFDA         	movff	atoi@s+1,fsr2h
 18205  0036EE  0E2D               	movlw	45
 18206  0036F0  18DE               	xorwf	postinc2,w,c
 18207  0036F2  A4D8               	btfss	status,2,c
 18208  0036F4  D002               	goto	l2809
 18209                           
 18210                           ; BSR set to: 0
 18211  0036F6  2B87               	incf	atoi@sign& (0+255),f,b
 18212  0036F8  D026               	goto	l12821
 18213  0036FA                     l2809:
 18214                           
 18215                           ; BSR set to: 0
 18216                           
 18217                           ; BSR set to: 0
 18218  0036FA  C083  FFD9         	movff	atoi@s,fsr2l
 18219  0036FE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18220  003702  0E2B               	movlw	43
 18221  003704  18DE               	xorwf	postinc2,w,c
 18222  003706  A4D8               	btfss	status,2,c
 18223  003708  D020               	goto	l2812
 18224  00370A  D01D               	goto	l12821
 18225  00370C                     
 18226                           ; BSR set to: 0
 18227  00370C  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18228  003710  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18229  003714  0E00               	movlw	0
 18230  003716  0100               	movlb	0	; () banked
 18231  003718  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18232  00371A  0E0A               	movlw	10
 18233  00371C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18234  00371E  EC35  F02F         	call	___wmul	;wreg free
 18235  003722  C083  FFD9         	movff	atoi@s,fsr2l
 18236  003726  C084  FFDA         	movff	atoi@s+1,fsr2h
 18237  00372A  50DF               	movf	indf2,w,c
 18238  00372C  0100               	movlb	0	; () banked
 18239  00372E  6F85               	movwf	??_atoi& (0+255),b
 18240  003730  6B86               	clrf	(??_atoi+1)& (0+255),b
 18241  003732  517D               	movf	?___wmul& (0+255),w,b
 18242  003734  2785               	addwf	??_atoi& (0+255),f,b
 18243  003736  517E               	movf	(?___wmul+1)& (0+255),w,b
 18244  003738  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18245  00373A  0ED0               	movlw	208
 18246  00373C  2585               	addwf	??_atoi& (0+255),w,b
 18247  00373E  6F88               	movwf	atoi@a& (0+255),b
 18248  003740  0EFF               	movlw	255
 18249  003742  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18250  003744  6F89               	movwf	(atoi@a+1)& (0+255),b
 18251  003746                     l12821:
 18252                           
 18253                           ; BSR set to: 0
 18254  003746  4B83               	infsnz	atoi@s& (0+255),f,b
 18255  003748  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18256  00374A                     l2812:
 18257                           
 18258                           ; BSR set to: 0
 18259                           
 18260                           ; BSR set to: 0
 18261  00374A  C083  FFD9         	movff	atoi@s,fsr2l
 18262  00374E  C084  FFDA         	movff	atoi@s+1,fsr2h
 18263  003752  50DF               	movf	indf2,w,c
 18264  003754  ECE8  F02F         	call	_isdigit
 18265  003758  B0D8               	btfsc	status,0,c
 18266  00375A  D7D8               	goto	l2813
 18267  00375C  0100               	movlb	0	; () banked
 18268  00375E  5187               	movf	atoi@sign& (0+255),w,b
 18269  003760  B4D8               	btfsc	status,2,c
 18270  003762  D00D               	goto	l2815
 18271                           
 18272                           ; BSR set to: 0
 18273  003764  C088  F085         	movff	atoi@a,??_atoi
 18274  003768  C089  F086         	movff	atoi@a+1,??_atoi+1
 18275  00376C  1F85               	comf	??_atoi& (0+255),f,b
 18276  00376E  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18277  003770  4B85               	infsnz	??_atoi& (0+255),f,b
 18278  003772  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18279  003774  C085  F083         	movff	??_atoi,?_atoi
 18280  003778  C086  F084         	movff	??_atoi+1,?_atoi+1
 18281  00377C  0012               	return	
 18282  00377E                     l2815:
 18283                           
 18284                           ; BSR set to: 0
 18285  00377E  C088  F083         	movff	atoi@a,?_atoi
 18286  003782  C089  F084         	movff	atoi@a+1,?_atoi+1
 18287                           
 18288                           ; BSR set to: 0
 18289  003786  0012               	return		;funcret
 18290  003788                     __end_of_atoi:
 18291                           	opt stack 0
 18292                           tosu	equ	0xFFF
 18293                           tosh	equ	0xFFE
 18294                           tosl	equ	0xFFD
 18295                           pclath	equ	0xFFA
 18296                           tblptru	equ	0xFF8
 18297                           tblptrh	equ	0xFF7
 18298                           tblptrl	equ	0xFF6
 18299                           tablat	equ	0xFF5
 18300                           prodh	equ	0xFF4
 18301                           prodl	equ	0xFF3
 18302                           intcon	equ	0xFF2
 18303                           intcon2	equ	0xFF1
 18304                           intcon3	equ	0xFF0
 18305                           indf0	equ	0xFEF
 18306                           postinc0	equ	0xFEE
 18307                           plusw0	equ	0xFEB
 18308                           fsr0h	equ	0xFEA
 18309                           fsr0l	equ	0xFE9
 18310                           wreg	equ	0xFE8
 18311                           indf1	equ	0xFE7
 18312                           postinc1	equ	0xFE6
 18313                           postdec1	equ	0xFE5
 18314                           fsr1h	equ	0xFE2
 18315                           fsr1l	equ	0xFE1
 18316                           indf2	equ	0xFDF
 18317                           postinc2	equ	0xFDE
 18318                           postdec2	equ	0xFDD
 18319                           plusw2	equ	0xFDB
 18320                           fsr2h	equ	0xFDA
 18321                           fsr2l	equ	0xFD9
 18322                           status	equ	0xFD8
 18323                           
 18324 ;; *************** function _isdigit *****************
 18325 ;; Defined at:
 18326 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18327 ;; Parameters:    Size  Location     Type
 18328 ;;  c               1    wreg     unsigned char 
 18329 ;; Auto vars:     Size  Location     Type
 18330 ;;  c               1   31[BANK0 ] unsigned char 
 18331 ;; Return value:  Size  Location     Type
 18332 ;;		None               void
 18333 ;; Registers used:
 18334 ;;		wreg, status,2, status,0
 18335 ;; Tracked objects:
 18336 ;;		On entry : 0/0
 18337 ;;		On exit  : 0/0
 18338 ;;		Unchanged: 0/0
 18339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18344 ;;Total ram usage:        3 bytes
 18345 ;; Hardware stack levels used:    1
 18346 ;; Hardware stack levels required when called:   11
 18347 ;; This function calls:
 18348 ;;		Nothing
 18349 ;; This function is called by:
 18350 ;;		_atoi
 18351 ;;		_strtol
 18352 ;;		_xtoi
 18353 ;;		_isxdigit
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357                           	psect	text77
 18358  005FD0                     __ptext77:
 18359                           	opt stack 0
 18360  005FD0                     _isdigit:
 18361                           	opt stack 12
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;incstack = 0
 18365                           ;isdigit@c stored from wreg
 18366  005FD0  0100               	movlb	0	; () banked
 18367  005FD2  6F7F               	movwf	isdigit@c& (0+255),b
 18368  005FD4  0E00               	movlw	0
 18369  005FD6  0100               	movlb	0	; () banked
 18370  005FD8  6F7E               	movwf	_isdigit$6193& (0+255),b
 18371                           
 18372                           ; BSR set to: 0
 18373  005FDA  0E3A               	movlw	58
 18374  005FDC  617F               	cpfslt	isdigit@c& (0+255),b
 18375  005FDE  D005               	goto	l2987
 18376                           
 18377                           ; BSR set to: 0
 18378  005FE0  0E2F               	movlw	47
 18379  005FE2  657F               	cpfsgt	isdigit@c& (0+255),b
 18380  005FE4  D002               	goto	l2987
 18381                           
 18382                           ; BSR set to: 0
 18383  005FE6  0E01               	movlw	1
 18384  005FE8  6F7E               	movwf	_isdigit$6193& (0+255),b
 18385  005FEA                     l2987:
 18386                           
 18387                           ; BSR set to: 0
 18388                           
 18389                           ; BSR set to: 0
 18390  005FEA  C07E  F07D         	movff	_isdigit$6193,??_isdigit
 18391  005FEE  317D               	rrcf	??_isdigit& (0+255),w,b
 18392  005FF0  0012               	return	
 18393  005FF2                     __end_of_isdigit:
 18394                           	opt stack 0
 18395                           tosu	equ	0xFFF
 18396                           tosh	equ	0xFFE
 18397                           tosl	equ	0xFFD
 18398                           pclath	equ	0xFFA
 18399                           tblptru	equ	0xFF8
 18400                           tblptrh	equ	0xFF7
 18401                           tblptrl	equ	0xFF6
 18402                           tablat	equ	0xFF5
 18403                           prodh	equ	0xFF4
 18404                           prodl	equ	0xFF3
 18405                           intcon	equ	0xFF2
 18406                           intcon2	equ	0xFF1
 18407                           intcon3	equ	0xFF0
 18408                           indf0	equ	0xFEF
 18409                           postinc0	equ	0xFEE
 18410                           plusw0	equ	0xFEB
 18411                           fsr0h	equ	0xFEA
 18412                           fsr0l	equ	0xFE9
 18413                           wreg	equ	0xFE8
 18414                           indf1	equ	0xFE7
 18415                           postinc1	equ	0xFE6
 18416                           postdec1	equ	0xFE5
 18417                           fsr1h	equ	0xFE2
 18418                           fsr1l	equ	0xFE1
 18419                           indf2	equ	0xFDF
 18420                           postinc2	equ	0xFDE
 18421                           postdec2	equ	0xFDD
 18422                           plusw2	equ	0xFDB
 18423                           fsr2h	equ	0xFDA
 18424                           fsr2l	equ	0xFD9
 18425                           status	equ	0xFD8
 18426                           
 18427 ;; *************** function _Rtcm_SetRtccDate *****************
 18428 ;; Defined at:
 18429 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18430 ;; Parameters:    Size  Location     Type
 18431 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18432 ;; Auto vars:     Size  Location     Type
 18433 ;;		None
 18434 ;; Return value:  Size  Location     Type
 18435 ;;                  1    wreg      void 
 18436 ;; Registers used:
 18437 ;;		wreg, status,2, status,0, cstack
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/0
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18443 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18446 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18447 ;;Total ram usage:        8 bytes
 18448 ;; Hardware stack levels used:    1
 18449 ;; Hardware stack levels required when called:   13
 18450 ;; This function calls:
 18451 ;;		_Rtcc_LockRtc
 18452 ;;		_Rtcc_SetRtccValue
 18453 ;;		_Rtcc_UnlockRtc
 18454 ;; This function is called by:
 18455 ;;		_Rtcm_MainTask
 18456 ;; This function uses a non-reentrant model
 18457 ;;
 18458                           
 18459                           	psect	text78
 18460  0053C2                     __ptext78:
 18461                           	opt stack 0
 18462  0053C2                     _Rtcm_SetRtccDate:
 18463                           	opt stack 14
 18464                           
 18465                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18466                           
 18467                           ; BSR set to: 0
 18468                           ;incstack = 0
 18469  0053C2  ECFF  F030         	call	_Rtcc_UnlockRtc	;wreg free
 18470                           
 18471                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18472  0053C6  0100               	movlb	0	; () banked
 18473  0053C8  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18474  0053CA  0F30               	addlw	48
 18475  0053CC  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18476  0053CE  0E00               	movlw	0
 18477  0053D0  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18478                           
 18479                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18480  0053D4  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18481  0053D8  0E01               	movlw	1
 18482  0053DA  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18483                           
 18484                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18485  0053DE  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18486  0053E2  0E02               	movlw	2
 18487  0053E4  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18488                           
 18489                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18490  0053E8  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18491  0053EC  0E03               	movlw	3
 18492  0053EE  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18493                           
 18494                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18495  0053F2  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18496  0053F6  0E04               	movlw	4
 18497  0053F8  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18498                           
 18499                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18500  0053FC  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18501  005400  0E05               	movlw	5
 18502  005402  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18503                           
 18504                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18505  005406  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18506  00540A  0E06               	movlw	6
 18507  00540C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18508                           
 18509                           ;rtcm.c: 191: Rtcc_LockRtc();
 18510  005410  EC07  F031         	call	_Rtcc_LockRtc	;wreg free
 18511  005414  0012               	return		;funcret
 18512  005416                     __end_of_Rtcm_SetRtccDate:
 18513                           	opt stack 0
 18514                           tosu	equ	0xFFF
 18515                           tosh	equ	0xFFE
 18516                           tosl	equ	0xFFD
 18517                           pclath	equ	0xFFA
 18518                           tblptru	equ	0xFF8
 18519                           tblptrh	equ	0xFF7
 18520                           tblptrl	equ	0xFF6
 18521                           tablat	equ	0xFF5
 18522                           prodh	equ	0xFF4
 18523                           prodl	equ	0xFF3
 18524                           intcon	equ	0xFF2
 18525                           intcon2	equ	0xFF1
 18526                           intcon3	equ	0xFF0
 18527                           indf0	equ	0xFEF
 18528                           postinc0	equ	0xFEE
 18529                           plusw0	equ	0xFEB
 18530                           fsr0h	equ	0xFEA
 18531                           fsr0l	equ	0xFE9
 18532                           wreg	equ	0xFE8
 18533                           indf1	equ	0xFE7
 18534                           postinc1	equ	0xFE6
 18535                           postdec1	equ	0xFE5
 18536                           fsr1h	equ	0xFE2
 18537                           fsr1l	equ	0xFE1
 18538                           indf2	equ	0xFDF
 18539                           postinc2	equ	0xFDE
 18540                           postdec2	equ	0xFDD
 18541                           plusw2	equ	0xFDB
 18542                           fsr2h	equ	0xFDA
 18543                           fsr2l	equ	0xFD9
 18544                           status	equ	0xFD8
 18545                           
 18546 ;; *************** function _Rtcc_UnlockRtc *****************
 18547 ;; Defined at:
 18548 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18549 ;; Parameters:    Size  Location     Type
 18550 ;;		None
 18551 ;; Auto vars:     Size  Location     Type
 18552 ;;		None
 18553 ;; Return value:  Size  Location     Type
 18554 ;;                  1    wreg      void 
 18555 ;; Registers used:
 18556 ;;		None
 18557 ;; Tracked objects:
 18558 ;;		On entry : 0/0
 18559 ;;		On exit  : 0/0
 18560 ;;		Unchanged: 0/0
 18561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18566 ;;Total ram usage:        0 bytes
 18567 ;; Hardware stack levels used:    1
 18568 ;; Hardware stack levels required when called:   11
 18569 ;; This function calls:
 18570 ;;		Nothing
 18571 ;; This function is called by:
 18572 ;;		_Rtcm_MainTask
 18573 ;;		_Rtcm_SetRtccDate
 18574 ;;		_Rtcm_SetRtccAlarm
 18575 ;; This function uses a non-reentrant model
 18576 ;;
 18577                           
 18578                           	psect	text79
 18579  0061FE                     __ptext79:
 18580                           	opt stack 0
 18581  0061FE                     _Rtcc_UnlockRtc:
 18582                           	opt stack 15
 18583                           
 18584                           ;incstack = 0
 18585  0061FE  010F               	movlb	15	;# 
 18586  006200  0E55               	movlw	85	;# 
 18587  006202  6EA7               	movwf	4007,c	;# 
 18588  006204  0EAA               	movlw	170	;# 
 18589  006206  6EA7               	movwf	4007,c	;# 
 18590                           
 18591                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18592  006208  010F               	movlb	15	; () banked
 18593  00620A  8B3F               	bsf	63,5,b	;volatile
 18594                           
 18595                           ; BSR set to: 15
 18596  00620C  0012               	return		;funcret
 18597  00620E                     __end_of_Rtcc_UnlockRtc:
 18598                           	opt stack 0
 18599                           tosu	equ	0xFFF
 18600                           tosh	equ	0xFFE
 18601                           tosl	equ	0xFFD
 18602                           pclath	equ	0xFFA
 18603                           tblptru	equ	0xFF8
 18604                           tblptrh	equ	0xFF7
 18605                           tblptrl	equ	0xFF6
 18606                           tablat	equ	0xFF5
 18607                           prodh	equ	0xFF4
 18608                           prodl	equ	0xFF3
 18609                           intcon	equ	0xFF2
 18610                           intcon2	equ	0xFF1
 18611                           intcon3	equ	0xFF0
 18612                           indf0	equ	0xFEF
 18613                           postinc0	equ	0xFEE
 18614                           plusw0	equ	0xFEB
 18615                           fsr0h	equ	0xFEA
 18616                           fsr0l	equ	0xFE9
 18617                           wreg	equ	0xFE8
 18618                           indf1	equ	0xFE7
 18619                           postinc1	equ	0xFE6
 18620                           postdec1	equ	0xFE5
 18621                           fsr1h	equ	0xFE2
 18622                           fsr1l	equ	0xFE1
 18623                           indf2	equ	0xFDF
 18624                           postinc2	equ	0xFDE
 18625                           postdec2	equ	0xFDD
 18626                           plusw2	equ	0xFDB
 18627                           fsr2h	equ	0xFDA
 18628                           fsr2l	equ	0xFD9
 18629                           status	equ	0xFD8
 18630                           
 18631 ;; *************** function _Rtcc_SetRtccValue *****************
 18632 ;; Defined at:
 18633 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18634 ;; Parameters:    Size  Location     Type
 18635 ;;  RtccPtrVal      1    wreg     enum E7757
 18636 ;;  Value           1   37[BANK0 ] unsigned char 
 18637 ;; Auto vars:     Size  Location     Type
 18638 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18639 ;; Return value:  Size  Location     Type
 18640 ;;                  1    wreg      void 
 18641 ;; Registers used:
 18642 ;;		wreg, status,2, status,0, cstack
 18643 ;; Tracked objects:
 18644 ;;		On entry : 0/0
 18645 ;;		On exit  : 0/0
 18646 ;;		Unchanged: 0/0
 18647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18648 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18650 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18651 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18652 ;;Total ram usage:        4 bytes
 18653 ;; Hardware stack levels used:    1
 18654 ;; Hardware stack levels required when called:   12
 18655 ;; This function calls:
 18656 ;;		___awdiv
 18657 ;;		___awmod
 18658 ;; This function is called by:
 18659 ;;		_Rtcm_SetRtccDate
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text80
 18664  0015EE                     __ptext80:
 18665                           	opt stack 0
 18666  0015EE                     _Rtcc_SetRtccValue:
 18667                           	opt stack 14
 18668                           
 18669                           ; BSR set to: 15
 18670                           ;incstack = 0
 18671                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18672  0015EE  0100               	movlb	0	; () banked
 18673  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18674                           
 18675                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18676  0015F2  D0FC               	goto	l441
 18677  0015F4                     l442:
 18678                           
 18679                           ; BSR set to: 0
 18680                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18681  0015F4  010F               	movlb	15	; () banked
 18682  0015F6  833F               	bsf	63,1,b	;volatile
 18683                           
 18684                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18685  0015F8  813F               	bsf	63,0,b	;volatile
 18686                           
 18687                           ; BSR set to: 15
 18688                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18689  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18690  0015FE  0100               	movlb	0	; () banked
 18691  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18692  001602  0E00               	movlw	0
 18693  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18694  001606  0E0A               	movlw	10
 18695  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18696  00160A  ECCE  F026         	call	___awmod	;wreg free
 18697  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18698  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18699  001616  0E0F               	movlw	15
 18700  001618  0100               	movlb	0	; () banked
 18701  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18702  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18703  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18704  001622  0E00               	movlw	0
 18705  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18706  001626  0E0A               	movlw	10
 18707  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18708  00162A  EC08  F026         	call	___awdiv	;wreg free
 18709  00162E  0100               	movlb	0	; () banked
 18710  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18711  001632  0BF0               	andlw	240
 18712  001634  0BF0               	andlw	240
 18713  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18714  001638  6E98               	movwf	3992,c	;volatile
 18715                           
 18716                           ;rtcc_drv.c: 393: break;
 18717  00163A  0012               	return	
 18718  00163C                     l444:
 18719                           
 18720                           ; BSR set to: 0
 18721                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18722  00163C  010F               	movlb	15	; () banked
 18723  00163E  833F               	bsf	63,1,b	;volatile
 18724                           
 18725                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18726  001640  913F               	bcf	63,0,b	;volatile
 18727                           
 18728                           ; BSR set to: 15
 18729                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18730  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18731  001646  0100               	movlb	0	; () banked
 18732  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18733  00164A  0E00               	movlw	0
 18734  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18735  00164E  0E0A               	movlw	10
 18736  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18737  001652  ECCE  F026         	call	___awmod	;wreg free
 18738  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18739  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18740  00165E  0E0F               	movlw	15
 18741  001660  0100               	movlb	0	; () banked
 18742  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18743  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18744  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18745  00166A  0E00               	movlw	0
 18746  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18747  00166E  0E0A               	movlw	10
 18748  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18749  001672  EC08  F026         	call	___awdiv	;wreg free
 18750  001676  0100               	movlb	0	; () banked
 18751  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18752  00167A  0BF0               	andlw	240
 18753  00167C  0BF0               	andlw	240
 18754  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18755  001680  6E99               	movwf	3993,c	;volatile
 18756                           
 18757                           ;rtcc_drv.c: 401: break;
 18758  001682  0012               	return	
 18759  001684                     l445:
 18760                           
 18761                           ; BSR set to: 0
 18762                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18763  001684  010F               	movlb	15	; () banked
 18764  001686  833F               	bsf	63,1,b	;volatile
 18765                           
 18766                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18767  001688  913F               	bcf	63,0,b	;volatile
 18768                           
 18769                           ; BSR set to: 15
 18770                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18771  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18772  00168E  0100               	movlb	0	; () banked
 18773  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18774  001692  0E00               	movlw	0
 18775  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18776  001696  0E0A               	movlw	10
 18777  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18778  00169A  ECCE  F026         	call	___awmod	;wreg free
 18779  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18780  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18781  0016A6  0E0F               	movlw	15
 18782  0016A8  0100               	movlb	0	; () banked
 18783  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18784  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18785  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18786  0016B2  0E00               	movlw	0
 18787  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18788  0016B6  0E0A               	movlw	10
 18789  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18790  0016BA  EC08  F026         	call	___awdiv	;wreg free
 18791  0016BE  0100               	movlb	0	; () banked
 18792  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18793  0016C2  0BF0               	andlw	240
 18794  0016C4  0BF0               	andlw	240
 18795  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18796  0016C8  6E98               	movwf	3992,c	;volatile
 18797                           
 18798                           ;rtcc_drv.c: 409: break;
 18799  0016CA  0012               	return	
 18800  0016CC                     l446:
 18801                           
 18802                           ; BSR set to: 0
 18803                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18804  0016CC  010F               	movlb	15	; () banked
 18805  0016CE  933F               	bcf	63,1,b	;volatile
 18806                           
 18807                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18808  0016D0  813F               	bsf	63,0,b	;volatile
 18809                           
 18810                           ; BSR set to: 15
 18811                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18812  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18813  0016D6  0100               	movlb	0	; () banked
 18814  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18815  0016DA  0E00               	movlw	0
 18816  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18817  0016DE  0E0A               	movlw	10
 18818  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18819  0016E2  ECCE  F026         	call	___awmod	;wreg free
 18820  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18821  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18822  0016EE  0E0F               	movlw	15
 18823  0016F0  0100               	movlb	0	; () banked
 18824  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18825  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18826  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18827  0016FA  0E00               	movlw	0
 18828  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18829  0016FE  0E0A               	movlw	10
 18830  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18831  001702  EC08  F026         	call	___awdiv	;wreg free
 18832  001706  0100               	movlb	0	; () banked
 18833  001708  397D               	swapf	?___awdiv& (0+255),w,b
 18834  00170A  0BF0               	andlw	240
 18835  00170C  0BF0               	andlw	240
 18836  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18837  001710  6E99               	movwf	3993,c	;volatile
 18838                           
 18839                           ;rtcc_drv.c: 417: break;
 18840  001712  0012               	return	
 18841  001714                     l447:
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 18845  001714  010F               	movlb	15	; () banked
 18846  001716  933F               	bcf	63,1,b	;volatile
 18847                           
 18848                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 18849  001718  813F               	bsf	63,0,b	;volatile
 18850                           
 18851                           ; BSR set to: 15
 18852                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18853  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18854  00171E  0100               	movlb	0	; () banked
 18855  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18856  001722  0E00               	movlw	0
 18857  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18858  001726  0E0A               	movlw	10
 18859  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 18860  00172A  ECCE  F026         	call	___awmod	;wreg free
 18861  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18862  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18863  001736  0E0F               	movlw	15
 18864  001738  0100               	movlb	0	; () banked
 18865  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18866  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18867  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18868  001742  0E00               	movlw	0
 18869  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18870  001746  0E0A               	movlw	10
 18871  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18872  00174A  EC08  F026         	call	___awdiv	;wreg free
 18873  00174E  0100               	movlb	0	; () banked
 18874  001750  397D               	swapf	?___awdiv& (0+255),w,b
 18875  001752  0BF0               	andlw	240
 18876  001754  0BF0               	andlw	240
 18877  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18878  001758  6E98               	movwf	3992,c	;volatile
 18879                           
 18880                           ;rtcc_drv.c: 425: break;
 18881  00175A  0012               	return	
 18882  00175C                     l448:
 18883                           
 18884                           ; BSR set to: 0
 18885                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 18886  00175C  010F               	movlb	15	; () banked
 18887  00175E  933F               	bcf	63,1,b	;volatile
 18888                           
 18889                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 18890  001760  913F               	bcf	63,0,b	;volatile
 18891                           
 18892                           ; BSR set to: 15
 18893                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18894  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18895  001766  0100               	movlb	0	; () banked
 18896  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18897  00176A  0E00               	movlw	0
 18898  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18899  00176E  0E0A               	movlw	10
 18900  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 18901  001772  ECCE  F026         	call	___awmod	;wreg free
 18902  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18903  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18904  00177E  0E0F               	movlw	15
 18905  001780  0100               	movlb	0	; () banked
 18906  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18907  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18908  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18909  00178A  0E00               	movlw	0
 18910  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18911  00178E  0E0A               	movlw	10
 18912  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18913  001792  EC08  F026         	call	___awdiv	;wreg free
 18914  001796  0100               	movlb	0	; () banked
 18915  001798  397D               	swapf	?___awdiv& (0+255),w,b
 18916  00179A  0BF0               	andlw	240
 18917  00179C  0BF0               	andlw	240
 18918  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18919  0017A0  6E99               	movwf	3993,c	;volatile
 18920                           
 18921                           ;rtcc_drv.c: 433: break;
 18922  0017A2  0012               	return	
 18923  0017A4                     l449:
 18924                           
 18925                           ; BSR set to: 0
 18926                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 18927  0017A4  010F               	movlb	15	; () banked
 18928  0017A6  933F               	bcf	63,1,b	;volatile
 18929                           
 18930                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 18931  0017A8  913F               	bcf	63,0,b	;volatile
 18932                           
 18933                           ; BSR set to: 15
 18934                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18935  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18936  0017AE  0100               	movlb	0	; () banked
 18937  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18938  0017B2  0E00               	movlw	0
 18939  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18940  0017B6  0E0A               	movlw	10
 18941  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 18942  0017BA  ECCE  F026         	call	___awmod	;wreg free
 18943  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18944  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18945  0017C6  0E0F               	movlw	15
 18946  0017C8  0100               	movlb	0	; () banked
 18947  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18948  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18949  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18950  0017D2  0E00               	movlw	0
 18951  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18952  0017D6  0E0A               	movlw	10
 18953  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18954  0017DA  EC08  F026         	call	___awdiv	;wreg free
 18955  0017DE  0100               	movlb	0	; () banked
 18956  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 18957  0017E2  0BF0               	andlw	240
 18958  0017E4  0BF0               	andlw	240
 18959  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18960  0017E8  6E98               	movwf	3992,c	;volatile
 18961                           
 18962                           ; BSR set to: 0
 18963                           ;rtcc_drv.c: 445: }
 18964                           
 18965                           ; BSR set to: 0
 18966                           ;rtcc_drv.c: 444: break;
 18967                           
 18968                           ;rtcc_drv.c: 443: default:
 18969                           
 18970                           ;rtcc_drv.c: 441: break;
 18971  0017EA  0012               	return	
 18972  0017EC                     l441:
 18973                           
 18974                           ; BSR set to: 0
 18975  0017EC  0100               	movlb	0	; () banked
 18976  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 18977                           
 18978                           ; Switch size 1, requested type "space"
 18979                           ; Number of cases is 7, Range of values is 0 to 6
 18980                           ; switch strategies available:
 18981                           ; Name         Instructions Cycles
 18982                           ; simple_byte           22    12 (average)
 18983                           ;	Chosen strategy is simple_byte
 18984  0017F0  0A00               	xorlw	0	; case 0
 18985  0017F2  B4D8               	btfsc	status,2,c
 18986  0017F4  D6FF               	goto	l442
 18987  0017F6  0A01               	xorlw	1	; case 1
 18988  0017F8  B4D8               	btfsc	status,2,c
 18989  0017FA  D720               	goto	l444
 18990  0017FC  0A03               	xorlw	3	; case 2
 18991  0017FE  B4D8               	btfsc	status,2,c
 18992  001800  D741               	goto	l445
 18993  001802  0A01               	xorlw	1	; case 3
 18994  001804  B4D8               	btfsc	status,2,c
 18995  001806  D762               	goto	l446
 18996  001808  0A07               	xorlw	7	; case 4
 18997  00180A  B4D8               	btfsc	status,2,c
 18998  00180C  D783               	goto	l447
 18999  00180E  0A01               	xorlw	1	; case 5
 19000  001810  B4D8               	btfsc	status,2,c
 19001  001812  D7A4               	goto	l448
 19002  001814  0A03               	xorlw	3	; case 6
 19003  001816  A4D8               	btfss	status,2,c
 19004  001818  0012               	return	
 19005  00181A  D7C4               	goto	l449
 19006  00181C                     __end_of_Rtcc_SetRtccValue:
 19007                           	opt stack 0
 19008                           tosu	equ	0xFFF
 19009                           tosh	equ	0xFFE
 19010                           tosl	equ	0xFFD
 19011                           pclath	equ	0xFFA
 19012                           tblptru	equ	0xFF8
 19013                           tblptrh	equ	0xFF7
 19014                           tblptrl	equ	0xFF6
 19015                           tablat	equ	0xFF5
 19016                           prodh	equ	0xFF4
 19017                           prodl	equ	0xFF3
 19018                           intcon	equ	0xFF2
 19019                           intcon2	equ	0xFF1
 19020                           intcon3	equ	0xFF0
 19021                           indf0	equ	0xFEF
 19022                           postinc0	equ	0xFEE
 19023                           plusw0	equ	0xFEB
 19024                           fsr0h	equ	0xFEA
 19025                           fsr0l	equ	0xFE9
 19026                           wreg	equ	0xFE8
 19027                           indf1	equ	0xFE7
 19028                           postinc1	equ	0xFE6
 19029                           postdec1	equ	0xFE5
 19030                           fsr1h	equ	0xFE2
 19031                           fsr1l	equ	0xFE1
 19032                           indf2	equ	0xFDF
 19033                           postinc2	equ	0xFDE
 19034                           postdec2	equ	0xFDD
 19035                           plusw2	equ	0xFDB
 19036                           fsr2h	equ	0xFDA
 19037                           fsr2l	equ	0xFD9
 19038                           status	equ	0xFD8
 19039                           
 19040 ;; *************** function ___awmod *****************
 19041 ;; Defined at:
 19042 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19043 ;; Parameters:    Size  Location     Type
 19044 ;;  dividend        2   29[BANK0 ] int 
 19045 ;;  divisor         2   31[BANK0 ] int 
 19046 ;; Auto vars:     Size  Location     Type
 19047 ;;  sign            1   34[BANK0 ] unsigned char 
 19048 ;;  counter         1   33[BANK0 ] unsigned char 
 19049 ;; Return value:  Size  Location     Type
 19050 ;;                  2   29[BANK0 ] int 
 19051 ;; Registers used:
 19052 ;;		wreg, status,2, status,0
 19053 ;; Tracked objects:
 19054 ;;		On entry : 0/0
 19055 ;;		On exit  : 0/0
 19056 ;;		Unchanged: 0/0
 19057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19058 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19061 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19062 ;;Total ram usage:        6 bytes
 19063 ;; Hardware stack levels used:    1
 19064 ;; Hardware stack levels required when called:   11
 19065 ;; This function calls:
 19066 ;;		Nothing
 19067 ;; This function is called by:
 19068 ;;		_Rtcc_SetRtccValue
 19069 ;;		_Rtcc_SetRtccAlarm
 19070 ;; This function uses a non-reentrant model
 19071 ;;
 19072                           
 19073                           	psect	text81
 19074  004D9C                     __ptext81:
 19075                           	opt stack 0
 19076  004D9C                     ___awmod:
 19077                           	opt stack 14
 19078                           
 19079                           ; BSR set to: 0
 19080                           ;incstack = 0
 19081  004D9C  0E00               	movlw	0
 19082  004D9E  0100               	movlb	0	; () banked
 19083  004DA0  6F82               	movwf	___awmod@sign& (0+255),b
 19084                           
 19085                           ; BSR set to: 0
 19086  004DA2  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19087  004DA4  D006               	goto	l2838
 19088                           
 19089                           ; BSR set to: 0
 19090  004DA6  6D7D               	negf	___awmod@dividend& (0+255),b
 19091  004DA8  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19092  004DAA  B0D8               	btfsc	status,0,c
 19093  004DAC  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19094                           
 19095                           ; BSR set to: 0
 19096  004DAE  0E01               	movlw	1
 19097  004DB0  6F82               	movwf	___awmod@sign& (0+255),b
 19098  004DB2                     l2838:
 19099                           
 19100                           ; BSR set to: 0
 19101                           
 19102                           ; BSR set to: 0
 19103  004DB2  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19104  004DB4  D004               	goto	l2839
 19105                           
 19106                           ; BSR set to: 0
 19107  004DB6  6D7F               	negf	___awmod@divisor& (0+255),b
 19108  004DB8  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19109  004DBA  B0D8               	btfsc	status,0,c
 19110  004DBC  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19111  004DBE                     l2839:
 19112                           
 19113                           ; BSR set to: 0
 19114                           
 19115                           ; BSR set to: 0
 19116  004DBE  517F               	movf	___awmod@divisor& (0+255),w,b
 19117  004DC0  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19118  004DC2  B4D8               	btfsc	status,2,c
 19119  004DC4  D018               	goto	l2846
 19120                           
 19121                           ; BSR set to: 0
 19122  004DC6  0E01               	movlw	1
 19123  004DC8  6F81               	movwf	___awmod@counter& (0+255),b
 19124  004DCA  D004               	goto	l2841
 19125  004DCC                     
 19126                           ; BSR set to: 0
 19127                           
 19128                           ; BSR set to: 0
 19129  004DCC  90D8               	bcf	status,0,c
 19130  004DCE  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19131  004DD0  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19132  004DD2  2B81               	incf	___awmod@counter& (0+255),f,b
 19133  004DD4                     l2841:
 19134                           
 19135                           ; BSR set to: 0
 19136                           
 19137                           ; BSR set to: 0
 19138  004DD4  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19139  004DD6  D7FA               	goto	l2842
 19140  004DD8                     u12110:
 19141                           
 19142                           ; BSR set to: 0
 19143                           
 19144                           ; BSR set to: 0
 19145                           
 19146                           ; BSR set to: 0
 19147  004DD8  517F               	movf	___awmod@divisor& (0+255),w,b
 19148  004DDA  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19149  004DDC  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19150  004DDE  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19151  004DE0  A0D8               	btfss	status,0,c
 19152  004DE2  D004               	goto	l2845
 19153                           
 19154                           ; BSR set to: 0
 19155  004DE4  517F               	movf	___awmod@divisor& (0+255),w,b
 19156  004DE6  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19157  004DE8  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19158  004DEA  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19159  004DEC                     l2845:
 19160                           
 19161                           ; BSR set to: 0
 19162                           
 19163                           ; BSR set to: 0
 19164  004DEC  90D8               	bcf	status,0,c
 19165  004DEE  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19166  004DF0  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19167                           
 19168                           ; BSR set to: 0
 19169  004DF2  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19170  004DF4  D7F1               	goto	u12110
 19171  004DF6                     l2846:
 19172                           
 19173                           ; BSR set to: 0
 19174                           
 19175                           ; BSR set to: 0
 19176                           
 19177                           ; BSR set to: 0
 19178  004DF6  5182               	movf	___awmod@sign& (0+255),w,b
 19179  004DF8  B4D8               	btfsc	status,2,c
 19180  004DFA  D004               	goto	l2847
 19181                           
 19182                           ; BSR set to: 0
 19183  004DFC  6D7D               	negf	___awmod@dividend& (0+255),b
 19184  004DFE  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19185  004E00  B0D8               	btfsc	status,0,c
 19186  004E02  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19187  004E04                     l2847:
 19188                           
 19189                           ; BSR set to: 0
 19190                           
 19191                           ; BSR set to: 0
 19192  004E04  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19193  004E08  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19194  004E0C  0012               	return	
 19195  004E0E                     __end_of___awmod:
 19196                           	opt stack 0
 19197                           tosu	equ	0xFFF
 19198                           tosh	equ	0xFFE
 19199                           tosl	equ	0xFFD
 19200                           pclath	equ	0xFFA
 19201                           tblptru	equ	0xFF8
 19202                           tblptrh	equ	0xFF7
 19203                           tblptrl	equ	0xFF6
 19204                           tablat	equ	0xFF5
 19205                           prodh	equ	0xFF4
 19206                           prodl	equ	0xFF3
 19207                           intcon	equ	0xFF2
 19208                           intcon2	equ	0xFF1
 19209                           intcon3	equ	0xFF0
 19210                           indf0	equ	0xFEF
 19211                           postinc0	equ	0xFEE
 19212                           plusw0	equ	0xFEB
 19213                           fsr0h	equ	0xFEA
 19214                           fsr0l	equ	0xFE9
 19215                           wreg	equ	0xFE8
 19216                           indf1	equ	0xFE7
 19217                           postinc1	equ	0xFE6
 19218                           postdec1	equ	0xFE5
 19219                           fsr1h	equ	0xFE2
 19220                           fsr1l	equ	0xFE1
 19221                           indf2	equ	0xFDF
 19222                           postinc2	equ	0xFDE
 19223                           postdec2	equ	0xFDD
 19224                           plusw2	equ	0xFDB
 19225                           fsr2h	equ	0xFDA
 19226                           fsr2l	equ	0xFD9
 19227                           status	equ	0xFD8
 19228                           
 19229 ;; *************** function ___awdiv *****************
 19230 ;; Defined at:
 19231 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19232 ;; Parameters:    Size  Location     Type
 19233 ;;  dividend        2   29[BANK0 ] int 
 19234 ;;  divisor         2   31[BANK0 ] int 
 19235 ;; Auto vars:     Size  Location     Type
 19236 ;;  quotient        2   35[BANK0 ] int 
 19237 ;;  sign            1   34[BANK0 ] unsigned char 
 19238 ;;  counter         1   33[BANK0 ] unsigned char 
 19239 ;; Return value:  Size  Location     Type
 19240 ;;                  2   29[BANK0 ] int 
 19241 ;; Registers used:
 19242 ;;		wreg, status,2, status,0
 19243 ;; Tracked objects:
 19244 ;;		On entry : 0/0
 19245 ;;		On exit  : 0/0
 19246 ;;		Unchanged: 0/0
 19247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19248 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19249 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19252 ;;Total ram usage:        8 bytes
 19253 ;; Hardware stack levels used:    1
 19254 ;; Hardware stack levels required when called:   11
 19255 ;; This function calls:
 19256 ;;		Nothing
 19257 ;; This function is called by:
 19258 ;;		_Rtcc_SetRtccValue
 19259 ;;		_Rtcc_SetRtccAlarm
 19260 ;; This function uses a non-reentrant model
 19261 ;;
 19262                           
 19263                           	psect	text82
 19264  004C10                     __ptext82:
 19265                           	opt stack 0
 19266  004C10                     ___awdiv:
 19267                           	opt stack 14
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;incstack = 0
 19271  004C10  0E00               	movlw	0
 19272  004C12  0100               	movlb	0	; () banked
 19273  004C14  6F82               	movwf	___awdiv@sign& (0+255),b
 19274                           
 19275                           ; BSR set to: 0
 19276  004C16  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19277  004C18  D006               	goto	l2825
 19278                           
 19279                           ; BSR set to: 0
 19280  004C1A  6D7F               	negf	___awdiv@divisor& (0+255),b
 19281  004C1C  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19282  004C1E  B0D8               	btfsc	status,0,c
 19283  004C20  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19284                           
 19285                           ; BSR set to: 0
 19286  004C22  0E01               	movlw	1
 19287  004C24  6F82               	movwf	___awdiv@sign& (0+255),b
 19288  004C26                     l2825:
 19289                           
 19290                           ; BSR set to: 0
 19291                           
 19292                           ; BSR set to: 0
 19293  004C26  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19294  004C28  D006               	goto	l2826
 19295                           
 19296                           ; BSR set to: 0
 19297  004C2A  6D7D               	negf	___awdiv@dividend& (0+255),b
 19298  004C2C  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19299  004C2E  B0D8               	btfsc	status,0,c
 19300  004C30  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19301                           
 19302                           ; BSR set to: 0
 19303  004C32  0E01               	movlw	1
 19304  004C34  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19305  004C36                     l2826:
 19306                           
 19307                           ; BSR set to: 0
 19308                           
 19309                           ; BSR set to: 0
 19310  004C36  0E00               	movlw	0
 19311  004C38  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19312  004C3A  0E00               	movlw	0
 19313  004C3C  6F83               	movwf	___awdiv@quotient& (0+255),b
 19314                           
 19315                           ; BSR set to: 0
 19316  004C3E  517F               	movf	___awdiv@divisor& (0+255),w,b
 19317  004C40  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19318  004C42  B4D8               	btfsc	status,2,c
 19319  004C44  D01C               	goto	l2833
 19320                           
 19321                           ; BSR set to: 0
 19322  004C46  0E01               	movlw	1
 19323  004C48  6F81               	movwf	___awdiv@counter& (0+255),b
 19324  004C4A  D004               	goto	l2828
 19325  004C4C                     
 19326                           ; BSR set to: 0
 19327                           
 19328                           ; BSR set to: 0
 19329  004C4C  90D8               	bcf	status,0,c
 19330  004C4E  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19331  004C50  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19332  004C52  2B81               	incf	___awdiv@counter& (0+255),f,b
 19333  004C54                     l2828:
 19334                           
 19335                           ; BSR set to: 0
 19336                           
 19337                           ; BSR set to: 0
 19338  004C54  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19339  004C56  D7FA               	goto	l2829
 19340  004C58                     u12050:
 19341                           
 19342                           ; BSR set to: 0
 19343                           
 19344                           ; BSR set to: 0
 19345                           
 19346                           ; BSR set to: 0
 19347  004C58  90D8               	bcf	status,0,c
 19348  004C5A  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19349  004C5C  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19350                           
 19351                           ; BSR set to: 0
 19352  004C5E  517F               	movf	___awdiv@divisor& (0+255),w,b
 19353  004C60  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19354  004C62  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19355  004C64  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19356  004C66  A0D8               	btfss	status,0,c
 19357  004C68  D005               	goto	l2832
 19358                           
 19359                           ; BSR set to: 0
 19360  004C6A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19361  004C6C  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19362  004C6E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19363  004C70  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19364                           
 19365                           ; BSR set to: 0
 19366  004C72  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19367  004C74                     l2832:
 19368                           
 19369                           ; BSR set to: 0
 19370                           
 19371                           ; BSR set to: 0
 19372  004C74  90D8               	bcf	status,0,c
 19373  004C76  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19374  004C78  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19375                           
 19376                           ; BSR set to: 0
 19377  004C7A  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19378  004C7C  D7ED               	goto	u12050
 19379  004C7E                     l2833:
 19380                           
 19381                           ; BSR set to: 0
 19382                           
 19383                           ; BSR set to: 0
 19384                           
 19385                           ; BSR set to: 0
 19386  004C7E  5182               	movf	___awdiv@sign& (0+255),w,b
 19387  004C80  B4D8               	btfsc	status,2,c
 19388  004C82  D004               	goto	l2834
 19389                           
 19390                           ; BSR set to: 0
 19391  004C84  6D83               	negf	___awdiv@quotient& (0+255),b
 19392  004C86  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19393  004C88  B0D8               	btfsc	status,0,c
 19394  004C8A  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19395  004C8C                     l2834:
 19396                           
 19397                           ; BSR set to: 0
 19398                           
 19399                           ; BSR set to: 0
 19400  004C8C  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19401  004C90  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19402  004C94  0012               	return	
 19403  004C96                     __end_of___awdiv:
 19404                           	opt stack 0
 19405                           tosu	equ	0xFFF
 19406                           tosh	equ	0xFFE
 19407                           tosl	equ	0xFFD
 19408                           pclath	equ	0xFFA
 19409                           tblptru	equ	0xFF8
 19410                           tblptrh	equ	0xFF7
 19411                           tblptrl	equ	0xFF6
 19412                           tablat	equ	0xFF5
 19413                           prodh	equ	0xFF4
 19414                           prodl	equ	0xFF3
 19415                           intcon	equ	0xFF2
 19416                           intcon2	equ	0xFF1
 19417                           intcon3	equ	0xFF0
 19418                           indf0	equ	0xFEF
 19419                           postinc0	equ	0xFEE
 19420                           plusw0	equ	0xFEB
 19421                           fsr0h	equ	0xFEA
 19422                           fsr0l	equ	0xFE9
 19423                           wreg	equ	0xFE8
 19424                           indf1	equ	0xFE7
 19425                           postinc1	equ	0xFE6
 19426                           postdec1	equ	0xFE5
 19427                           fsr1h	equ	0xFE2
 19428                           fsr1l	equ	0xFE1
 19429                           indf2	equ	0xFDF
 19430                           postinc2	equ	0xFDE
 19431                           postdec2	equ	0xFDD
 19432                           plusw2	equ	0xFDB
 19433                           fsr2h	equ	0xFDA
 19434                           fsr2l	equ	0xFD9
 19435                           status	equ	0xFD8
 19436                           
 19437 ;; *************** function _Rtcc_LockRtc *****************
 19438 ;; Defined at:
 19439 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19440 ;; Parameters:    Size  Location     Type
 19441 ;;		None
 19442 ;; Auto vars:     Size  Location     Type
 19443 ;;		None
 19444 ;; Return value:  Size  Location     Type
 19445 ;;                  1    wreg      void 
 19446 ;; Registers used:
 19447 ;;		None
 19448 ;; Tracked objects:
 19449 ;;		On entry : 0/0
 19450 ;;		On exit  : 0/0
 19451 ;;		Unchanged: 0/0
 19452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19457 ;;Total ram usage:        0 bytes
 19458 ;; Hardware stack levels used:    1
 19459 ;; Hardware stack levels required when called:   11
 19460 ;; This function calls:
 19461 ;;		Nothing
 19462 ;; This function is called by:
 19463 ;;		_Rtcm_MainTask
 19464 ;;		_Rtcm_SetRtccDate
 19465 ;;		_Rtcm_SetRtccAlarm
 19466 ;; This function uses a non-reentrant model
 19467 ;;
 19468                           
 19469                           	psect	text83
 19470  00620E                     __ptext83:
 19471                           	opt stack 0
 19472  00620E                     _Rtcc_LockRtc:
 19473                           	opt stack 15
 19474                           
 19475                           ; BSR set to: 0
 19476                           ;incstack = 0
 19477  00620E  010F               	movlb	15	;# 
 19478  006210  0E55               	movlw	85	;# 
 19479  006212  6EA7               	movwf	4007,c	;# 
 19480  006214  0EAA               	movlw	170	;# 
 19481  006216  6EA7               	movwf	4007,c	;# 
 19482                           
 19483                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19484  006218  010F               	movlb	15	; () banked
 19485  00621A  9B3F               	bcf	63,5,b	;volatile
 19486                           
 19487                           ; BSR set to: 15
 19488  00621C  0012               	return		;funcret
 19489  00621E                     __end_of_Rtcc_LockRtc:
 19490                           	opt stack 0
 19491                           tosu	equ	0xFFF
 19492                           tosh	equ	0xFFE
 19493                           tosl	equ	0xFFD
 19494                           pclath	equ	0xFFA
 19495                           tblptru	equ	0xFF8
 19496                           tblptrh	equ	0xFF7
 19497                           tblptrl	equ	0xFF6
 19498                           tablat	equ	0xFF5
 19499                           prodh	equ	0xFF4
 19500                           prodl	equ	0xFF3
 19501                           intcon	equ	0xFF2
 19502                           intcon2	equ	0xFF1
 19503                           intcon3	equ	0xFF0
 19504                           indf0	equ	0xFEF
 19505                           postinc0	equ	0xFEE
 19506                           plusw0	equ	0xFEB
 19507                           fsr0h	equ	0xFEA
 19508                           fsr0l	equ	0xFE9
 19509                           wreg	equ	0xFE8
 19510                           indf1	equ	0xFE7
 19511                           postinc1	equ	0xFE6
 19512                           postdec1	equ	0xFE5
 19513                           fsr1h	equ	0xFE2
 19514                           fsr1l	equ	0xFE1
 19515                           indf2	equ	0xFDF
 19516                           postinc2	equ	0xFDE
 19517                           postdec2	equ	0xFDD
 19518                           plusw2	equ	0xFDB
 19519                           fsr2h	equ	0xFDA
 19520                           fsr2l	equ	0xFD9
 19521                           status	equ	0xFD8
 19522                           
 19523 ;; *************** function _Rtcm_GetRtccDate *****************
 19524 ;; Defined at:
 19525 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19526 ;; Parameters:    Size  Location     Type
 19527 ;;		None
 19528 ;; Auto vars:     Size  Location     Type
 19529 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19530 ;; Return value:  Size  Location     Type
 19531 ;;                  8   33[BANK0 ] struct _RtccDateType
 19532 ;; Registers used:
 19533 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19534 ;; Tracked objects:
 19535 ;;		On entry : 0/0
 19536 ;;		On exit  : 0/0
 19537 ;;		Unchanged: 0/0
 19538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19539 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19540 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19541 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19542 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19543 ;;Total ram usage:       17 bytes
 19544 ;; Hardware stack levels used:    1
 19545 ;; Hardware stack levels required when called:   12
 19546 ;; This function calls:
 19547 ;;		_Rtcc_GetRtccValue
 19548 ;; This function is called by:
 19549 ;;		_Rtcm_MainTask
 19550 ;; This function uses a non-reentrant model
 19551 ;;
 19552                           
 19553                           	psect	text84
 19554  00502E                     __ptext84:
 19555                           	opt stack 0
 19556  00502E                     _Rtcm_GetRtccDate:
 19557                           	opt stack 15
 19558                           
 19559                           ;rtcm.c: 204: RtccDateType LocalDate;
 19560                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19561                           
 19562                           ; BSR set to: 15
 19563                           ;incstack = 0
 19564  00502E  0E00               	movlw	0
 19565  005030  ECE9  F024         	call	_Rtcc_GetRtccValue
 19566  005034  0100               	movlb	0	; () banked
 19567  005036  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19568  005038  0ED0               	movlw	208
 19569  00503A  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19570  00503C  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19571  00503E  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19572  005040  0E07               	movlw	7
 19573  005042  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19574                           
 19575                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19576  005044  0E01               	movlw	1
 19577  005046  ECE9  F024         	call	_Rtcc_GetRtccValue
 19578  00504A  0100               	movlb	0	; () banked
 19579  00504C  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19580                           
 19581                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19582  00504E  0E02               	movlw	2
 19583  005050  ECE9  F024         	call	_Rtcc_GetRtccValue
 19584  005054  0100               	movlb	0	; () banked
 19585  005056  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19586                           
 19587                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19588  005058  0E03               	movlw	3
 19589  00505A  ECE9  F024         	call	_Rtcc_GetRtccValue
 19590  00505E  0100               	movlb	0	; () banked
 19591  005060  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19592                           
 19593                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19594  005062  0E04               	movlw	4
 19595  005064  ECE9  F024         	call	_Rtcc_GetRtccValue
 19596  005068  0100               	movlb	0	; () banked
 19597  00506A  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19598                           
 19599                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19600  00506C  0E05               	movlw	5
 19601  00506E  ECE9  F024         	call	_Rtcc_GetRtccValue
 19602  005072  0100               	movlb	0	; () banked
 19603  005074  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19604                           
 19605                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19606  005076  0E06               	movlw	6
 19607  005078  ECE9  F024         	call	_Rtcc_GetRtccValue
 19608  00507C  0100               	movlb	0	; () banked
 19609  00507E  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19610                           
 19611                           ; BSR set to: 0
 19612                           ;rtcm.c: 216: return LocalDate;
 19613  005080  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19614  005084  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19615  005088  0E07               	movlw	7
 19616  00508A                     u14351:
 19617  00508A  CFDB FFEB          	movff	plusw2,plusw0
 19618  00508E  06E8               	decf	wreg,f,c
 19619  005090  E2FC               	bc	u14351
 19620  005092  0012               	return	
 19621  005094                     __end_of_Rtcm_GetRtccDate:
 19622                           	opt stack 0
 19623                           tosu	equ	0xFFF
 19624                           tosh	equ	0xFFE
 19625                           tosl	equ	0xFFD
 19626                           pclath	equ	0xFFA
 19627                           tblptru	equ	0xFF8
 19628                           tblptrh	equ	0xFF7
 19629                           tblptrl	equ	0xFF6
 19630                           tablat	equ	0xFF5
 19631                           prodh	equ	0xFF4
 19632                           prodl	equ	0xFF3
 19633                           intcon	equ	0xFF2
 19634                           intcon2	equ	0xFF1
 19635                           intcon3	equ	0xFF0
 19636                           indf0	equ	0xFEF
 19637                           postinc0	equ	0xFEE
 19638                           plusw0	equ	0xFEB
 19639                           fsr0h	equ	0xFEA
 19640                           fsr0l	equ	0xFE9
 19641                           wreg	equ	0xFE8
 19642                           indf1	equ	0xFE7
 19643                           postinc1	equ	0xFE6
 19644                           postdec1	equ	0xFE5
 19645                           fsr1h	equ	0xFE2
 19646                           fsr1l	equ	0xFE1
 19647                           indf2	equ	0xFDF
 19648                           postinc2	equ	0xFDE
 19649                           postdec2	equ	0xFDD
 19650                           plusw2	equ	0xFDB
 19651                           fsr2h	equ	0xFDA
 19652                           fsr2l	equ	0xFD9
 19653                           status	equ	0xFD8
 19654                           
 19655 ;; *************** function _Rtcc_GetRtccValue *****************
 19656 ;; Defined at:
 19657 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19658 ;; Parameters:    Size  Location     Type
 19659 ;;  RtccPtrVal      1    wreg     enum E7757
 19660 ;; Auto vars:     Size  Location     Type
 19661 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19662 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19663 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19664 ;; Return value:  Size  Location     Type
 19665 ;;                  1    wreg      unsigned char 
 19666 ;; Registers used:
 19667 ;;		wreg, status,2, status,0, prodl, prodh
 19668 ;; Tracked objects:
 19669 ;;		On entry : 0/0
 19670 ;;		On exit  : 0/0
 19671 ;;		Unchanged: 0/0
 19672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19674 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19676 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19677 ;;Total ram usage:        4 bytes
 19678 ;; Hardware stack levels used:    1
 19679 ;; Hardware stack levels required when called:   11
 19680 ;; This function calls:
 19681 ;;		Nothing
 19682 ;; This function is called by:
 19683 ;;		_Rtcm_GetRtccDate
 19684 ;; This function uses a non-reentrant model
 19685 ;;
 19686                           
 19687                           	psect	text85
 19688  0049D2                     __ptext85:
 19689                           	opt stack 0
 19690  0049D2                     _Rtcc_GetRtccValue:
 19691                           	opt stack 15
 19692                           
 19693                           ; BSR set to: 0
 19694                           ;incstack = 0
 19695                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19696  0049D2  0100               	movlb	0	; () banked
 19697  0049D4  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19698                           
 19699                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19700                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19701                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19702  0049D6  D02D               	goto	l416
 19703  0049D8                     l417:
 19704                           
 19705                           ; BSR set to: 0
 19706                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19707  0049D8  010F               	movlb	15	; () banked
 19708  0049DA  833F               	bsf	63,1,b	;volatile
 19709  0049DC                     
 19710                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19711  0049DC  813F               	bsf	63,0,b	;volatile
 19712  0049DE  D01C               	goto	L18
 19713  0049E0                     l419:
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19717  0049E0  010F               	movlb	15	; () banked
 19718  0049E2  833F               	bsf	63,1,b	;volatile
 19719  0049E4  D01E               	goto	L19
 19720  0049E6                     l420:
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19724  0049E6  010F               	movlb	15	; () banked
 19725  0049E8  833F               	bsf	63,1,b	;volatile
 19726  0049EA  D021               	goto	L22
 19727  0049EC                     l13187:
 19728                           
 19729                           ; BSR set to: 15
 19730                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19731  0049EC  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19732  0049F0  0E0F               	movlw	15
 19733  0049F2  0100               	movlb	0	; () banked
 19734  0049F4  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19735  0049F6  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19736  0049F8  0B0F               	andlw	15
 19737  0049FA  0B0F               	andlw	15
 19738  0049FC  0D0A               	mullw	10
 19739  0049FE  50F3               	movf	prodl,w,c
 19740  004A00  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19741  004A02  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19742                           
 19743                           ;rtcc_drv.c: 241: break;
 19744  004A04  D02D               	goto	l418
 19745  004A06                     l421:
 19746                           
 19747                           ; BSR set to: 0
 19748                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19749  004A06  010F               	movlb	15	; () banked
 19750  004A08  933F               	bcf	63,1,b	;volatile
 19751                           
 19752                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19753  004A0A  813F               	bsf	63,0,b	;volatile
 19754                           
 19755                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19756  004A0C  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19757                           
 19758                           ;rtcc_drv.c: 249: break;
 19759  004A10  D027               	goto	l418
 19760  004A12                     l422:
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19764  004A12  010F               	movlb	15	; () banked
 19765  004A14  933F               	bcf	63,1,b	;volatile
 19766  004A16  D7E2               	goto	L20
 19767  004A18                     L18:
 19768                           
 19769                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19770  004A18  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19771  004A1C  D7E7               	goto	l13187
 19772  004A1E                     l423:
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19776  004A1E  010F               	movlb	15	; () banked
 19777  004A20  933F               	bcf	63,1,b	;volatile
 19778  004A22                     L19:
 19779                           
 19780                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19781  004A22  913F               	bcf	63,0,b	;volatile
 19782                           
 19783                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19784  004A24  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19785  004A28  D7E1               	goto	l13187
 19786  004A2A                     l424:
 19787                           
 19788                           ; BSR set to: 0
 19789                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19790  004A2A  010F               	movlb	15	; () banked
 19791  004A2C  933F               	bcf	63,1,b	;volatile
 19792  004A2E                     L22:
 19793                           
 19794                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19795  004A2E  913F               	bcf	63,0,b	;volatile
 19796  004A30  D7F3               	goto	L18
 19797  004A32                     l416:
 19798                           
 19799                           ; BSR set to: 0
 19800  004A32  0100               	movlb	0	; () banked
 19801  004A34  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19802                           
 19803                           ; Switch size 1, requested type "space"
 19804                           ; Number of cases is 7, Range of values is 0 to 6
 19805                           ; switch strategies available:
 19806                           ; Name         Instructions Cycles
 19807                           ; simple_byte           22    12 (average)
 19808                           ;	Chosen strategy is simple_byte
 19809  004A36  0A00               	xorlw	0	; case 0
 19810  004A38  B4D8               	btfsc	status,2,c
 19811  004A3A  D7CE               	goto	l417
 19812  004A3C  0A01               	xorlw	1	; case 1
 19813  004A3E  B4D8               	btfsc	status,2,c
 19814  004A40  D7CF               	goto	l419
 19815  004A42  0A03               	xorlw	3	; case 2
 19816  004A44  B4D8               	btfsc	status,2,c
 19817  004A46  D7CF               	goto	l420
 19818  004A48  0A01               	xorlw	1	; case 3
 19819  004A4A  B4D8               	btfsc	status,2,c
 19820  004A4C  D7DC               	goto	l421
 19821  004A4E  0A07               	xorlw	7	; case 4
 19822  004A50  B4D8               	btfsc	status,2,c
 19823  004A52  D7DF               	goto	l422
 19824  004A54  0A01               	xorlw	1	; case 5
 19825  004A56  B4D8               	btfsc	status,2,c
 19826  004A58  D7E2               	goto	l423
 19827  004A5A  0A03               	xorlw	3	; case 6
 19828  004A5C  B4D8               	btfsc	status,2,c
 19829  004A5E  D7E5               	goto	l424
 19830  004A60                     l418:
 19831                           
 19832                           ;rtcc_drv.c: 286: return RetValue;
 19833                           
 19834                           ; BSR set to: 0
 19835  004A60  0100               	movlb	0	; () banked
 19836  004A62  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 19837  004A64  0012               	return	
 19838  004A66                     __end_of_Rtcc_GetRtccValue:
 19839                           	opt stack 0
 19840                           tosu	equ	0xFFF
 19841                           tosh	equ	0xFFE
 19842                           tosl	equ	0xFFD
 19843                           pclath	equ	0xFFA
 19844                           tblptru	equ	0xFF8
 19845                           tblptrh	equ	0xFF7
 19846                           tblptrl	equ	0xFF6
 19847                           tablat	equ	0xFF5
 19848                           prodh	equ	0xFF4
 19849                           prodl	equ	0xFF3
 19850                           intcon	equ	0xFF2
 19851                           intcon2	equ	0xFF1
 19852                           intcon3	equ	0xFF0
 19853                           indf0	equ	0xFEF
 19854                           postinc0	equ	0xFEE
 19855                           plusw0	equ	0xFEB
 19856                           fsr0h	equ	0xFEA
 19857                           fsr0l	equ	0xFE9
 19858                           wreg	equ	0xFE8
 19859                           indf1	equ	0xFE7
 19860                           postinc1	equ	0xFE6
 19861                           postdec1	equ	0xFE5
 19862                           fsr1h	equ	0xFE2
 19863                           fsr1l	equ	0xFE1
 19864                           indf2	equ	0xFDF
 19865                           postinc2	equ	0xFDE
 19866                           postdec2	equ	0xFDD
 19867                           plusw2	equ	0xFDB
 19868                           fsr2h	equ	0xFDA
 19869                           fsr2l	equ	0xFD9
 19870                           status	equ	0xFD8
 19871                           
 19872 ;; *************** function _Rtcc_SetRtcStatus *****************
 19873 ;; Defined at:
 19874 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19875 ;; Parameters:    Size  Location     Type
 19876 ;;  Status          1    wreg     unsigned char 
 19877 ;; Auto vars:     Size  Location     Type
 19878 ;;  Status          1   29[BANK0 ] unsigned char 
 19879 ;; Return value:  Size  Location     Type
 19880 ;;                  1    wreg      void 
 19881 ;; Registers used:
 19882 ;;		wreg
 19883 ;; Tracked objects:
 19884 ;;		On entry : 0/0
 19885 ;;		On exit  : 0/0
 19886 ;;		Unchanged: 0/0
 19887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19891 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19892 ;;Total ram usage:        1 bytes
 19893 ;; Hardware stack levels used:    1
 19894 ;; Hardware stack levels required when called:   11
 19895 ;; This function calls:
 19896 ;;		Nothing
 19897 ;; This function is called by:
 19898 ;;		_Rtcm_MainTask
 19899 ;; This function uses a non-reentrant model
 19900 ;;
 19901                           
 19902                           	psect	text86
 19903  00615C                     __ptext86:
 19904                           	opt stack 0
 19905  00615C                     _Rtcc_SetRtcStatus:
 19906                           	opt stack 16
 19907                           
 19908                           ; BSR set to: 0
 19909                           ;incstack = 0
 19910                           ;Rtcc_SetRtcStatus@Status stored from wreg
 19911  00615C  0100               	movlb	0	; () banked
 19912  00615E  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 19913                           
 19914                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 19915  006160  0100               	movlb	0	; () banked
 19916  006162  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 19917  006164  D003               	bra	u13265
 19918  006166  010F               	movlb	15	; () banked
 19919  006168  9F3F               	bcf	63,7,b	;volatile
 19920  00616A  D002               	bra	u13266
 19921  00616C                     u13265:
 19922  00616C  010F               	movlb	15	; () banked
 19923  00616E  8F3F               	bsf	63,7,b	;volatile
 19924  006170                     u13266:
 19925                           
 19926                           ; BSR set to: 15
 19927  006170  0012               	return		;funcret
 19928  006172                     __end_of_Rtcc_SetRtcStatus:
 19929                           	opt stack 0
 19930                           tosu	equ	0xFFF
 19931                           tosh	equ	0xFFE
 19932                           tosl	equ	0xFFD
 19933                           pclath	equ	0xFFA
 19934                           tblptru	equ	0xFF8
 19935                           tblptrh	equ	0xFF7
 19936                           tblptrl	equ	0xFF6
 19937                           tablat	equ	0xFF5
 19938                           prodh	equ	0xFF4
 19939                           prodl	equ	0xFF3
 19940                           intcon	equ	0xFF2
 19941                           intcon2	equ	0xFF1
 19942                           intcon3	equ	0xFF0
 19943                           indf0	equ	0xFEF
 19944                           postinc0	equ	0xFEE
 19945                           plusw0	equ	0xFEB
 19946                           fsr0h	equ	0xFEA
 19947                           fsr0l	equ	0xFE9
 19948                           wreg	equ	0xFE8
 19949                           indf1	equ	0xFE7
 19950                           postinc1	equ	0xFE6
 19951                           postdec1	equ	0xFE5
 19952                           fsr1h	equ	0xFE2
 19953                           fsr1l	equ	0xFE1
 19954                           indf2	equ	0xFDF
 19955                           postinc2	equ	0xFDE
 19956                           postdec2	equ	0xFDD
 19957                           plusw2	equ	0xFDB
 19958                           fsr2h	equ	0xFDA
 19959                           fsr2l	equ	0xFD9
 19960                           status	equ	0xFD8
 19961                           
 19962 ;; *************** function _Rtcc_RtcConfig *****************
 19963 ;; Defined at:
 19964 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19965 ;; Parameters:    Size  Location     Type
 19966 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 19967 ;;		 -> RtcConfig(4), 
 19968 ;; Auto vars:     Size  Location     Type
 19969 ;;		None
 19970 ;; Return value:  Size  Location     Type
 19971 ;;                  1    wreg      void 
 19972 ;; Registers used:
 19973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19974 ;; Tracked objects:
 19975 ;;		On entry : 0/0
 19976 ;;		On exit  : 0/0
 19977 ;;		Unchanged: 0/0
 19978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19983 ;;Total ram usage:        3 bytes
 19984 ;; Hardware stack levels used:    1
 19985 ;; Hardware stack levels required when called:   12
 19986 ;; This function calls:
 19987 ;;		_RtccIrqInit
 19988 ;; This function is called by:
 19989 ;;		_Rtcm_MainTask
 19990 ;; This function uses a non-reentrant model
 19991 ;;
 19992                           
 19993                           	psect	text87
 19994  00459E                     __ptext87:
 19995                           	opt stack 0
 19996  00459E                     _Rtcc_RtcConfig:
 19997                           	opt stack 15
 19998                           
 19999                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20000                           
 20001                           ; BSR set to: 15
 20002                           ;incstack = 0
 20003  00459E  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20004  0045A2  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20005  0045A6  50DF               	movf	indf2,w,c
 20006  0045A8  0100               	movlb	0	; () banked
 20007  0045AA  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20008  0045AC  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20009  0045AE  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20010  0045B0  010F               	movlb	15	; () banked
 20011  0045B2  513F               	movf	63,w,b	;volatile
 20012  0045B4  0100               	movlb	0	; () banked
 20013  0045B6  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20014  0045B8  0BFB               	andlw	-5
 20015  0045BA  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20016  0045BC  010F               	movlb	15	; () banked
 20017  0045BE  6F3F               	movwf	63,b	;volatile
 20018                           
 20019                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20020  0045C0  0100               	movlb	0	; () banked
 20021  0045C2  EE20 F001          	lfsr	2,1
 20022  0045C6  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20023  0045C8  26D9               	addwf	fsr2l,f,c
 20024  0045CA  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20025  0045CC  22DA               	addwfc	fsr2h,f,c
 20026  0045CE  50DF               	movf	indf2,w,c
 20027  0045D0  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20028  0045D2  0E01               	movlw	1
 20029  0045D4  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20030  0045D6  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20031  0045D8  010F               	movlb	15	; () banked
 20032  0045DA  513C               	movf	60,w,b	;volatile
 20033  0045DC  0100               	movlb	0	; () banked
 20034  0045DE  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20035  0045E0  0BFD               	andlw	-3
 20036  0045E2  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20037  0045E4  010F               	movlb	15	; () banked
 20038  0045E6  6F3C               	movwf	60,b	;volatile
 20039                           
 20040                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20041  0045E8  0100               	movlb	0	; () banked
 20042  0045EA  EE20 F001          	lfsr	2,1
 20043  0045EE  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20044  0045F0  26D9               	addwf	fsr2l,f,c
 20045  0045F2  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20046  0045F4  22DA               	addwfc	fsr2h,f,c
 20047  0045F6  50DF               	movf	indf2,w,c
 20048  0045F8  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20049  0045FA  90D8               	bcf	status,0,c
 20050  0045FC  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20051  0045FE  0E01               	movlw	1
 20052  004600  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20053  004602  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20054  004604  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20055  004606  010F               	movlb	15	; () banked
 20056  004608  513C               	movf	60,w,b	;volatile
 20057  00460A  0100               	movlb	0	; () banked
 20058  00460C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20059  00460E  0BFB               	andlw	-5
 20060  004610  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20061  004612  010F               	movlb	15	; () banked
 20062  004614  6F3C               	movwf	60,b	;volatile
 20063                           
 20064                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20065  004616  0100               	movlb	0	; () banked
 20066  004618  EE20 F002          	lfsr	2,2
 20067  00461C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20068  00461E  26D9               	addwf	fsr2l,f,c
 20069  004620  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20070  004622  22DA               	addwfc	fsr2h,f,c
 20071  004624  04DE               	decf	postinc2,w,c
 20072  004626  A4D8               	btfss	status,2,c
 20073  004628  0012               	return	
 20074                           
 20075                           ; BSR set to: 0
 20076                           ;rtcc_drv.c: 115: {
 20077                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20078  00462A  EE20 F003          	lfsr	2,3
 20079  00462E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20080  004630  26D9               	addwf	fsr2l,f,c
 20081  004632  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20082  004634  22DA               	addwfc	fsr2h,f,c
 20083  004636  50DF               	movf	indf2,w,c
 20084  004638  ECB9  F030         	call	_RtccIrqInit
 20085  00463C  0012               	return	
 20086  00463E                     __end_of_Rtcc_RtcConfig:
 20087                           	opt stack 0
 20088                           tosu	equ	0xFFF
 20089                           tosh	equ	0xFFE
 20090                           tosl	equ	0xFFD
 20091                           pclath	equ	0xFFA
 20092                           tblptru	equ	0xFF8
 20093                           tblptrh	equ	0xFF7
 20094                           tblptrl	equ	0xFF6
 20095                           tablat	equ	0xFF5
 20096                           prodh	equ	0xFF4
 20097                           prodl	equ	0xFF3
 20098                           intcon	equ	0xFF2
 20099                           intcon2	equ	0xFF1
 20100                           intcon3	equ	0xFF0
 20101                           indf0	equ	0xFEF
 20102                           postinc0	equ	0xFEE
 20103                           plusw0	equ	0xFEB
 20104                           fsr0h	equ	0xFEA
 20105                           fsr0l	equ	0xFE9
 20106                           wreg	equ	0xFE8
 20107                           indf1	equ	0xFE7
 20108                           postinc1	equ	0xFE6
 20109                           postdec1	equ	0xFE5
 20110                           fsr1h	equ	0xFE2
 20111                           fsr1l	equ	0xFE1
 20112                           indf2	equ	0xFDF
 20113                           postinc2	equ	0xFDE
 20114                           postdec2	equ	0xFDD
 20115                           plusw2	equ	0xFDB
 20116                           fsr2h	equ	0xFDA
 20117                           fsr2l	equ	0xFD9
 20118                           status	equ	0xFD8
 20119                           
 20120 ;; *************** function _RtccIrqInit *****************
 20121 ;; Defined at:
 20122 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20123 ;; Parameters:    Size  Location     Type
 20124 ;;  Priority        1    wreg     enum E7716
 20125 ;; Auto vars:     Size  Location     Type
 20126 ;;  Priority        1   29[BANK0 ] enum E7716
 20127 ;; Return value:  Size  Location     Type
 20128 ;;                  1    wreg      void 
 20129 ;; Registers used:
 20130 ;;		wreg
 20131 ;; Tracked objects:
 20132 ;;		On entry : 0/0
 20133 ;;		On exit  : 0/0
 20134 ;;		Unchanged: 0/0
 20135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20140 ;;Total ram usage:        1 bytes
 20141 ;; Hardware stack levels used:    1
 20142 ;; Hardware stack levels required when called:   11
 20143 ;; This function calls:
 20144 ;;		Nothing
 20145 ;; This function is called by:
 20146 ;;		_Rtcc_RtcConfig
 20147 ;; This function uses a non-reentrant model
 20148 ;;
 20149                           
 20150                           	psect	text88
 20151  006172                     __ptext88:
 20152                           	opt stack 0
 20153  006172                     _RtccIrqInit:
 20154                           	opt stack 15
 20155                           
 20156                           ;incstack = 0
 20157                           ;RtccIrqInit@Priority stored from wreg
 20158  006172  0100               	movlb	0	; () banked
 20159  006174  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20160                           
 20161                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20162  006176  90A4               	bcf	4004,0,c	;volatile
 20163                           
 20164                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20165  006178  0100               	movlb	0	; () banked
 20166  00617A  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20167  00617C  D002               	bra	u12265
 20168  00617E  90A5               	bcf	4005,0,c	;volatile
 20169  006180  D001               	bra	u12266
 20170  006182                     u12265:
 20171  006182  80A5               	bsf	4005,0,c	;volatile
 20172  006184                     u12266:
 20173                           
 20174                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20175  006184  80A3               	bsf	4003,0,c	;volatile
 20176  006186  0012               	return		;funcret
 20177  006188                     __end_of_RtccIrqInit:
 20178                           	opt stack 0
 20179                           tosu	equ	0xFFF
 20180                           tosh	equ	0xFFE
 20181                           tosl	equ	0xFFD
 20182                           pclath	equ	0xFFA
 20183                           tblptru	equ	0xFF8
 20184                           tblptrh	equ	0xFF7
 20185                           tblptrl	equ	0xFF6
 20186                           tablat	equ	0xFF5
 20187                           prodh	equ	0xFF4
 20188                           prodl	equ	0xFF3
 20189                           intcon	equ	0xFF2
 20190                           intcon2	equ	0xFF1
 20191                           intcon3	equ	0xFF0
 20192                           indf0	equ	0xFEF
 20193                           postinc0	equ	0xFEE
 20194                           plusw0	equ	0xFEB
 20195                           fsr0h	equ	0xFEA
 20196                           fsr0l	equ	0xFE9
 20197                           wreg	equ	0xFE8
 20198                           indf1	equ	0xFE7
 20199                           postinc1	equ	0xFE6
 20200                           postdec1	equ	0xFE5
 20201                           fsr1h	equ	0xFE2
 20202                           fsr1l	equ	0xFE1
 20203                           indf2	equ	0xFDF
 20204                           postinc2	equ	0xFDE
 20205                           postdec2	equ	0xFDD
 20206                           plusw2	equ	0xFDB
 20207                           fsr2h	equ	0xFDA
 20208                           fsr2l	equ	0xFD9
 20209                           status	equ	0xFD8
 20210                           
 20211 ;; *************** function _Rtcc_AlarmConfig *****************
 20212 ;; Defined at:
 20213 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20214 ;; Parameters:    Size  Location     Type
 20215 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20216 ;;		 -> AlCfg(4), 
 20217 ;; Auto vars:     Size  Location     Type
 20218 ;;		None
 20219 ;; Return value:  Size  Location     Type
 20220 ;;                  1    wreg      void 
 20221 ;; Registers used:
 20222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20223 ;; Tracked objects:
 20224 ;;		On entry : 0/0
 20225 ;;		On exit  : 0/0
 20226 ;;		Unchanged: 0/0
 20227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20231 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20232 ;;Total ram usage:        3 bytes
 20233 ;; Hardware stack levels used:    1
 20234 ;; Hardware stack levels required when called:   11
 20235 ;; This function calls:
 20236 ;;		Nothing
 20237 ;; This function is called by:
 20238 ;;		_Rtcm_MainTask
 20239 ;; This function uses a non-reentrant model
 20240 ;;
 20241                           
 20242                           	psect	text89
 20243  004F5C                     __ptext89:
 20244                           	opt stack 0
 20245  004F5C                     _Rtcc_AlarmConfig:
 20246                           	opt stack 16
 20247                           
 20248                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20249                           
 20250                           ;incstack = 0
 20251  004F5C  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20252  004F60  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20253  004F64  50DF               	movf	indf2,w,c
 20254  004F66  0100               	movlb	0	; () banked
 20255  004F68  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20256  004F6A  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20257  004F6C  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20258  004F6E  5091               	movf	3985,w,c	;volatile
 20259  004F70  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20260  004F72  0B7F               	andlw	-129
 20261  004F74  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20262  004F76  6E91               	movwf	3985,c	;volatile
 20263                           
 20264                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20265  004F78  EE20 F001          	lfsr	2,1
 20266  004F7C  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20267  004F7E  26D9               	addwf	fsr2l,f,c
 20268  004F80  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20269  004F82  22DA               	addwfc	fsr2h,f,c
 20270  004F84  50DF               	movf	indf2,w,c
 20271  004F86  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20272  004F88  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20273  004F8A  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20274  004F8C  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20275  004F8E  5091               	movf	3985,w,c	;volatile
 20276  004F90  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20277  004F92  0BBF               	andlw	-65
 20278  004F94  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20279  004F96  6E91               	movwf	3985,c	;volatile
 20280                           
 20281                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20282  004F98  EE20 F002          	lfsr	2,2
 20283  004F9C  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20284  004F9E  26D9               	addwf	fsr2l,f,c
 20285  004FA0  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20286  004FA2  22DA               	addwfc	fsr2h,f,c
 20287  004FA4  50DF               	movf	indf2,w,c
 20288  004FA6  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20289  004FA8  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20290  004FAA  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20291  004FAC  5091               	movf	3985,w,c	;volatile
 20292  004FAE  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20293  004FB0  0BC3               	andlw	-61
 20294  004FB2  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20295  004FB4  6E91               	movwf	3985,c	;volatile
 20296                           
 20297                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20298  004FB6  EE20 F003          	lfsr	2,3
 20299  004FBA  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20300  004FBC  26D9               	addwf	fsr2l,f,c
 20301  004FBE  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20302  004FC0  22DA               	addwfc	fsr2h,f,c
 20303  004FC2  50DF               	movf	indf2,w,c
 20304  004FC4  6E90               	movwf	3984,c	;volatile
 20305                           
 20306                           ; BSR set to: 0
 20307  004FC6  0012               	return		;funcret
 20308  004FC8                     __end_of_Rtcc_AlarmConfig:
 20309                           	opt stack 0
 20310                           tosu	equ	0xFFF
 20311                           tosh	equ	0xFFE
 20312                           tosl	equ	0xFFD
 20313                           pclath	equ	0xFFA
 20314                           tblptru	equ	0xFF8
 20315                           tblptrh	equ	0xFF7
 20316                           tblptrl	equ	0xFF6
 20317                           tablat	equ	0xFF5
 20318                           prodh	equ	0xFF4
 20319                           prodl	equ	0xFF3
 20320                           intcon	equ	0xFF2
 20321                           intcon2	equ	0xFF1
 20322                           intcon3	equ	0xFF0
 20323                           indf0	equ	0xFEF
 20324                           postinc0	equ	0xFEE
 20325                           plusw0	equ	0xFEB
 20326                           fsr0h	equ	0xFEA
 20327                           fsr0l	equ	0xFE9
 20328                           wreg	equ	0xFE8
 20329                           indf1	equ	0xFE7
 20330                           postinc1	equ	0xFE6
 20331                           postdec1	equ	0xFE5
 20332                           fsr1h	equ	0xFE2
 20333                           fsr1l	equ	0xFE1
 20334                           indf2	equ	0xFDF
 20335                           postinc2	equ	0xFDE
 20336                           postdec2	equ	0xFDD
 20337                           plusw2	equ	0xFDB
 20338                           fsr2h	equ	0xFDA
 20339                           fsr2l	equ	0xFD9
 20340                           status	equ	0xFD8
 20341                           
 20342 ;; *************** function _initGprsModem *****************
 20343 ;; Defined at:
 20344 ;;		line 109 in file "../Source/c/04_App/app.c"
 20345 ;; Parameters:    Size  Location     Type
 20346 ;;		None
 20347 ;; Auto vars:     Size  Location     Type
 20348 ;;		None
 20349 ;; Return value:  Size  Location     Type
 20350 ;;                  1    wreg      unsigned char 
 20351 ;; Registers used:
 20352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20353 ;; Tracked objects:
 20354 ;;		On entry : 0/0
 20355 ;;		On exit  : 0/0
 20356 ;;		Unchanged: 0/0
 20357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20362 ;;Total ram usage:        0 bytes
 20363 ;; Hardware stack levels used:    1
 20364 ;; Hardware stack levels required when called:   14
 20365 ;; This function calls:
 20366 ;;		_Led_SetLedStatus
 20367 ;;		_Mdm_SetSmsFormat
 20368 ;;		_Uart_WriteConstString
 20369 ;;		_secondsAppTimer
 20370 ;; This function is called by:
 20371 ;;		_MyApp_Task
 20372 ;; This function uses a non-reentrant model
 20373 ;;
 20374                           
 20375                           	psect	text90
 20376  0046DC                     __ptext90:
 20377                           	opt stack 0
 20378  0046DC                     _initGprsModem:
 20379                           	opt stack 13
 20380                           
 20381                           ;app.c: 111: static uint16_t modemCounter = 0;
 20382                           ;app.c: 112: static bool isInitialized = 0;
 20383                           ;app.c: 113: static uint8_t initMdm = 0;
 20384                           ;app.c: 115: switch(initMdm)
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;incstack = 0
 20388  0046DC  D040               	goto	l2553
 20389  0046DE                     
 20390                           ;app.c: 118: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20391  0046DE  0E03               	movlw	3
 20392  0046E0  0100               	movlb	0	; () banked
 20393  0046E2  19D1               	xorwf	_MdmStatus& (0+255),w,b
 20394  0046E4  B4D8               	btfsc	status,2,c
 20395  0046E6  D003               	goto	u14450
 20396                           
 20397                           ; BSR set to: 0
 20398  0046E8  05D1               	decf	_MdmStatus& (0+255),w,b
 20399  0046EA  A4D8               	btfss	status,2,c
 20400  0046EC  D043               	goto	l2559
 20401  0046EE                     u14450:
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;app.c: 119: {
 20405                           ;app.c: 120: if (secondsAppTimer(5, &modemCounter, 0))
 20406                           
 20407                           ; BSR set to: 0
 20408  0046EE  0EB8               	movlw	low initGprsModem@modemCounter
 20409  0046F0  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20410  0046F2  0E03               	movlw	high initGprsModem@modemCounter
 20411  0046F4  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20412  0046F6  0E00               	movlw	0
 20413  0046F8  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20414  0046FA  0E05               	movlw	5
 20415  0046FC  EC7E  F022         	call	_secondsAppTimer
 20416  004700  0900               	iorlw	0
 20417  004702  B4D8               	btfsc	status,2,c
 20418  004704  D037               	goto	l2559
 20419                           
 20420                           ;app.c: 121: {
 20421                           ;app.c: 122: Mdm_SetSmsFormat(1);
 20422  004706  0E01               	movlw	1
 20423  004708  EC02  F02B         	call	_Mdm_SetSmsFormat
 20424                           
 20425                           ;app.c: 123: Led_SetLedStatus(1u, LED_STS_ON);
 20426  00470C  0E01               	movlw	1
 20427  00470E  0100               	movlb	0	; () banked
 20428  004710  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20429  004712  0E01               	movlw	1
 20430  004714  ECAF  F02E         	call	_Led_SetLedStatus
 20431                           
 20432                           ;app.c: 124: initMdm = 1;
 20433  004718  0E01               	movlw	1
 20434  00471A  D009               	goto	L23
 20435  00471C                     
 20436                           ; BSR set to: 1
 20437                           ;app.c: 129: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 20438                           
 20439                           ; BSR set to: 1
 20440  00471C  0E07               	movlw	low STR_29
 20441  00471E  0100               	movlb	0	; () banked
 20442  004720  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20443  004722  0EFF               	movlw	high STR_29
 20444  004724  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20445  004726  0E01               	movlw	1
 20446  004728  EC90  F02C         	call	_Uart_WriteConstString
 20447                           
 20448                           ;app.c: 130: initMdm = 2;
 20449  00472C  0E02               	movlw	2
 20450  00472E                     L23:
 20451  00472E  0101               	movlb	1	; () banked
 20452  004730  6FD6               	movwf	initGprsModem@initMdm& (0+255),b
 20453                           
 20454                           ;app.c: 131: break;
 20455  004732  D020               	goto	l2559
 20456  004734                     
 20457                           ; BSR set to: 1
 20458                           ;app.c: 133: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 20459                           
 20460                           ; BSR set to: 1
 20461  004734  0EA9               	movlw	low STR_30
 20462  004736  0100               	movlb	0	; () banked
 20463  004738  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20464  00473A  0EFF               	movlw	high STR_30
 20465  00473C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20466  00473E  0E01               	movlw	1
 20467  004740  EC90  F02C         	call	_Uart_WriteConstString
 20468                           
 20469                           ;app.c: 134: initMdm = 3;
 20470  004744  0E03               	movlw	3
 20471  004746  0101               	movlb	1	; () banked
 20472  004748  6FD6               	movwf	initGprsModem@initMdm& (0+255),b
 20473                           
 20474                           ; BSR set to: 1
 20475                           ;app.c: 135: Led_SetLedStatus(1u, LED_STS_ON);
 20476  00474A  0E01               	movlw	1
 20477  00474C  0100               	movlb	0	; () banked
 20478  00474E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20479  004750  0E01               	movlw	1
 20480  004752  ECAF  F02E         	call	_Led_SetLedStatus
 20481                           
 20482                           ;app.c: 136: isInitialized = 1;
 20483  004756  0E01               	movlw	1
 20484  004758  0101               	movlb	1	; () banked
 20485  00475A  6FD7               	movwf	initGprsModem@isInitialized& (0+255),b
 20486                           
 20487                           ; BSR set to: 1
 20488                           ;app.c: 140: }
 20489                           
 20490                           ; BSR set to: 1
 20491                           ;app.c: 139: break;
 20492                           
 20493                           ;app.c: 138: default:
 20494                           
 20495                           ;app.c: 137: break;
 20496  00475C  D00B               	goto	l2559
 20497  00475E                     l2553:
 20498                           
 20499                           ; BSR set to: 1
 20500  00475E  0101               	movlb	1	; () banked
 20501  004760  51D6               	movf	initGprsModem@initMdm& (0+255),w,b
 20502                           
 20503                           ; Switch size 1, requested type "space"
 20504                           ; Number of cases is 3, Range of values is 0 to 2
 20505                           ; switch strategies available:
 20506                           ; Name         Instructions Cycles
 20507                           ; simple_byte           10     6 (average)
 20508                           ;	Chosen strategy is simple_byte
 20509  004762  0A00               	xorlw	0	; case 0
 20510  004764  B4D8               	btfsc	status,2,c
 20511  004766  D7BB               	goto	l2554
 20512  004768  0A01               	xorlw	1	; case 1
 20513  00476A  B4D8               	btfsc	status,2,c
 20514  00476C  D7D7               	goto	l2560
 20515  00476E  0A03               	xorlw	3	; case 2
 20516  004770  B4D8               	btfsc	status,2,c
 20517  004772  D7E0               	goto	l2561
 20518  004774                     l2559:
 20519                           
 20520                           ;app.c: 141: return isInitialized;
 20521                           
 20522                           ; BSR set to: 1
 20523  004774  0101               	movlb	1	; () banked
 20524  004776  51D7               	movf	initGprsModem@isInitialized& (0+255),w,b
 20525  004778  0012               	return	
 20526  00477A                     __end_of_initGprsModem:
 20527                           	opt stack 0
 20528                           tosu	equ	0xFFF
 20529                           tosh	equ	0xFFE
 20530                           tosl	equ	0xFFD
 20531                           pclath	equ	0xFFA
 20532                           tblptru	equ	0xFF8
 20533                           tblptrh	equ	0xFF7
 20534                           tblptrl	equ	0xFF6
 20535                           tablat	equ	0xFF5
 20536                           prodh	equ	0xFF4
 20537                           prodl	equ	0xFF3
 20538                           intcon	equ	0xFF2
 20539                           intcon2	equ	0xFF1
 20540                           intcon3	equ	0xFF0
 20541                           indf0	equ	0xFEF
 20542                           postinc0	equ	0xFEE
 20543                           plusw0	equ	0xFEB
 20544                           fsr0h	equ	0xFEA
 20545                           fsr0l	equ	0xFE9
 20546                           wreg	equ	0xFE8
 20547                           indf1	equ	0xFE7
 20548                           postinc1	equ	0xFE6
 20549                           postdec1	equ	0xFE5
 20550                           fsr1h	equ	0xFE2
 20551                           fsr1l	equ	0xFE1
 20552                           indf2	equ	0xFDF
 20553                           postinc2	equ	0xFDE
 20554                           postdec2	equ	0xFDD
 20555                           plusw2	equ	0xFDB
 20556                           fsr2h	equ	0xFDA
 20557                           fsr2l	equ	0xFD9
 20558                           status	equ	0xFD8
 20559                           
 20560 ;; *************** function _Mdm_SetSmsFormat *****************
 20561 ;; Defined at:
 20562 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;  TextFormat      1    wreg     unsigned char 
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 20567 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 20568 ;;  Index           1   35[BANK0 ] unsigned char 
 20569 ;; Return value:  Size  Location     Type
 20570 ;;                  1    wreg      void 
 20571 ;; Registers used:
 20572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20573 ;; Tracked objects:
 20574 ;;		On entry : 0/0
 20575 ;;		On exit  : 0/0
 20576 ;;		Unchanged: 0/0
 20577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20579 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20581 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20582 ;;Total ram usage:       22 bytes
 20583 ;; Hardware stack levels used:    1
 20584 ;; Hardware stack levels required when called:   13
 20585 ;; This function calls:
 20586 ;;		_Uart_WriteString
 20587 ;; This function is called by:
 20588 ;;		_initGprsModem
 20589 ;; This function uses a non-reentrant model
 20590 ;;
 20591                           
 20592                           	psect	text91
 20593  005604                     __ptext91:
 20594                           	opt stack 0
 20595  005604                     _Mdm_SetSmsFormat:
 20596                           	opt stack 13
 20597                           
 20598                           ; BSR set to: 1
 20599                           ;incstack = 0
 20600                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 20601  005604  0100               	movlb	0	; () banked
 20602  005606  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 20603                           
 20604                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 20605                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 20606  005608  0E00               	movlw	0
 20607  00560A  0100               	movlb	0	; () banked
 20608  00560C  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 20609                           
 20610                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 20611  00560E  0E41               	movlw	65
 20612  005610  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 20613                           
 20614                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 20615  005612  0E54               	movlw	84
 20616  005614  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 20617                           
 20618                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 20619  005616  0E2B               	movlw	43
 20620  005618  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 20621                           
 20622                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 20623  00561A  0E43               	movlw	67
 20624  00561C  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 20625                           
 20626                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 20627  00561E  0E4D               	movlw	77
 20628  005620  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 20629                           
 20630                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 20631  005622  0E47               	movlw	71
 20632  005624  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 20633                           
 20634                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 20635  005626  0E46               	movlw	70
 20636  005628  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 20637                           
 20638                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 20639  00562A  0E3D               	movlw	61
 20640  00562C  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 20641                           
 20642                           ; BSR set to: 0
 20643                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 20644  00562E  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 20645  005630  A4D8               	btfss	status,2,c
 20646  005632  D002               	goto	l1121
 20647                           
 20648                           ; BSR set to: 0
 20649                           ;mdm_gsm_gprs.c: 854: {
 20650                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 20651  005634  0E31               	movlw	49
 20652  005636  D001               	goto	L24
 20653  005638                     l1121:
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;mdm_gsm_gprs.c: 857: else
 20657                           ;mdm_gsm_gprs.c: 858: {
 20658                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 20659                           
 20660                           ; BSR set to: 0
 20661  005638  0E30               	movlw	48
 20662  00563A                     L24:
 20663  00563A  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;mdm_gsm_gprs.c: 860: }
 20667                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 20668  00563C  0E0D               	movlw	13
 20669  00563E  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 20670                           
 20671                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 20672  005640  0E00               	movlw	0
 20673  005642  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 20674                           
 20675                           ; BSR set to: 0
 20676                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 20677  005644  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 20678  005646  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 20679  005648  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 20680  00564A  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 20681  00564C  0E01               	movlw	1
 20682  00564E  EC51  F02D         	call	_Uart_WriteString
 20683  005652  0012               	return		;funcret
 20684  005654                     __end_of_Mdm_SetSmsFormat:
 20685                           	opt stack 0
 20686                           tosu	equ	0xFFF
 20687                           tosh	equ	0xFFE
 20688                           tosl	equ	0xFFD
 20689                           pclath	equ	0xFFA
 20690                           tblptru	equ	0xFF8
 20691                           tblptrh	equ	0xFF7
 20692                           tblptrl	equ	0xFF6
 20693                           tablat	equ	0xFF5
 20694                           prodh	equ	0xFF4
 20695                           prodl	equ	0xFF3
 20696                           intcon	equ	0xFF2
 20697                           intcon2	equ	0xFF1
 20698                           intcon3	equ	0xFF0
 20699                           indf0	equ	0xFEF
 20700                           postinc0	equ	0xFEE
 20701                           plusw0	equ	0xFEB
 20702                           fsr0h	equ	0xFEA
 20703                           fsr0l	equ	0xFE9
 20704                           wreg	equ	0xFE8
 20705                           indf1	equ	0xFE7
 20706                           postinc1	equ	0xFE6
 20707                           postdec1	equ	0xFE5
 20708                           fsr1h	equ	0xFE2
 20709                           fsr1l	equ	0xFE1
 20710                           indf2	equ	0xFDF
 20711                           postinc2	equ	0xFDE
 20712                           postdec2	equ	0xFDD
 20713                           plusw2	equ	0xFDB
 20714                           fsr2h	equ	0xFDA
 20715                           fsr2l	equ	0xFD9
 20716                           status	equ	0xFD8
 20717                           
 20718 ;; *************** function _blinkForSeconds *****************
 20719 ;; Defined at:
 20720 ;;		line 144 in file "../Source/c/04_App/app.c"
 20721 ;; Parameters:    Size  Location     Type
 20722 ;;  seconds         1    wreg     unsigned char 
 20723 ;;  blinkTicks      2   51[BANK0 ] PTR unsigned int 
 20724 ;;		 -> MyApp_Task@blinkTicks(2), 
 20725 ;; Auto vars:     Size  Location     Type
 20726 ;;  seconds         1   53[BANK0 ] unsigned char 
 20727 ;; Return value:  Size  Location     Type
 20728 ;;                  1    wreg      void 
 20729 ;; Registers used:
 20730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20731 ;; Tracked objects:
 20732 ;;		On entry : 0/0
 20733 ;;		On exit  : 0/0
 20734 ;;		Unchanged: 0/0
 20735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20739 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20740 ;;Total ram usage:        3 bytes
 20741 ;; Hardware stack levels used:    1
 20742 ;; Hardware stack levels required when called:   13
 20743 ;; This function calls:
 20744 ;;		_Led_SetLedStatus
 20745 ;;		_secondsAppTimer
 20746 ;; This function is called by:
 20747 ;;		_MyApp_Task
 20748 ;; This function uses a non-reentrant model
 20749 ;;
 20750                           
 20751                           	psect	text92
 20752  005B56                     __ptext92:
 20753                           	opt stack 0
 20754  005B56                     _blinkForSeconds:
 20755                           	opt stack 14
 20756                           
 20757                           ;incstack = 0
 20758                           ;blinkForSeconds@seconds stored from wreg
 20759  005B56  0100               	movlb	0	; () banked
 20760  005B58  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 20761                           
 20762                           ;app.c: 146: if (secondsAppTimer(seconds, blinkTicks, 0))
 20763  005B5A  C093  F08A         	movff	blinkForSeconds@blinkTicks,secondsAppTimer@counter
 20764  005B5E  C094  F08B         	movff	blinkForSeconds@blinkTicks+1,secondsAppTimer@counter+1
 20765  005B62  0E00               	movlw	0
 20766  005B64  0100               	movlb	0	; () banked
 20767  005B66  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20768  005B68  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 20769  005B6A  EC7E  F022         	call	_secondsAppTimer
 20770  005B6E  0900               	iorlw	0
 20771  005B70  B4D8               	btfsc	status,2,c
 20772  005B72  D007               	goto	l2566
 20773                           
 20774                           ;app.c: 147: {
 20775                           ;app.c: 148: Led_SetLedStatus(1u, LED_STS_ON);
 20776  005B74  0E01               	movlw	1
 20777  005B76  0100               	movlb	0	; () banked
 20778  005B78  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20779  005B7A  0E01               	movlw	1
 20780  005B7C  ECAF  F02E         	call	_Led_SetLedStatus
 20781                           
 20782                           ;app.c: 149: }
 20783  005B80  0012               	return	
 20784  005B82                     l2566:
 20785                           
 20786                           ;app.c: 150: else
 20787                           ;app.c: 151: {
 20788                           ;app.c: 152: Led_SetLedStatus(1u, LED_STS_BLINK);
 20789  005B82  0E03               	movlw	3
 20790  005B84  0100               	movlb	0	; () banked
 20791  005B86  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20792  005B88  0E01               	movlw	1
 20793  005B8A  ECAF  F02E         	call	_Led_SetLedStatus
 20794  005B8E  0012               	return	
 20795  005B90                     __end_of_blinkForSeconds:
 20796                           	opt stack 0
 20797                           tosu	equ	0xFFF
 20798                           tosh	equ	0xFFE
 20799                           tosl	equ	0xFFD
 20800                           pclath	equ	0xFFA
 20801                           tblptru	equ	0xFF8
 20802                           tblptrh	equ	0xFF7
 20803                           tblptrl	equ	0xFF6
 20804                           tablat	equ	0xFF5
 20805                           prodh	equ	0xFF4
 20806                           prodl	equ	0xFF3
 20807                           intcon	equ	0xFF2
 20808                           intcon2	equ	0xFF1
 20809                           intcon3	equ	0xFF0
 20810                           indf0	equ	0xFEF
 20811                           postinc0	equ	0xFEE
 20812                           plusw0	equ	0xFEB
 20813                           fsr0h	equ	0xFEA
 20814                           fsr0l	equ	0xFE9
 20815                           wreg	equ	0xFE8
 20816                           indf1	equ	0xFE7
 20817                           postinc1	equ	0xFE6
 20818                           postdec1	equ	0xFE5
 20819                           fsr1h	equ	0xFE2
 20820                           fsr1l	equ	0xFE1
 20821                           indf2	equ	0xFDF
 20822                           postinc2	equ	0xFDE
 20823                           postdec2	equ	0xFDD
 20824                           plusw2	equ	0xFDB
 20825                           fsr2h	equ	0xFDA
 20826                           fsr2l	equ	0xFD9
 20827                           status	equ	0xFD8
 20828                           
 20829 ;; *************** function _secondsAppTimer *****************
 20830 ;; Defined at:
 20831 ;;		line 85 in file "../Source/c/04_App/app.c"
 20832 ;; Parameters:    Size  Location     Type
 20833 ;;  seconds         1    wreg     unsigned char 
 20834 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 20835 ;;		 -> MyApp_Task@blinkTicks(2), initGprsModem@modemCounter(2), 
 20836 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 20837 ;; Auto vars:     Size  Location     Type
 20838 ;;  seconds         1   47[BANK0 ] unsigned char 
 20839 ;;  destinationT    2   49[BANK0 ] unsigned int 
 20840 ;;  isExpired       1   48[BANK0 ] unsigned char 
 20841 ;; Return value:  Size  Location     Type
 20842 ;;                  1    wreg      unsigned char 
 20843 ;; Registers used:
 20844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20845 ;; Tracked objects:
 20846 ;;		On entry : 0/0
 20847 ;;		On exit  : 0/0
 20848 ;;		Unchanged: 0/0
 20849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20850 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20851 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20852 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20853 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20854 ;;Total ram usage:        9 bytes
 20855 ;; Hardware stack levels used:    1
 20856 ;; Hardware stack levels required when called:   12
 20857 ;; This function calls:
 20858 ;;		___lwdiv
 20859 ;;		___wmul
 20860 ;; This function is called by:
 20861 ;;		_initGprsModem
 20862 ;;		_blinkForSeconds
 20863 ;; This function uses a non-reentrant model
 20864 ;;
 20865                           
 20866                           	psect	text93
 20867  0044FC                     __ptext93:
 20868                           	opt stack 0
 20869  0044FC                     _secondsAppTimer:
 20870                           	opt stack 14
 20871                           
 20872                           ;incstack = 0
 20873                           ;secondsAppTimer@seconds stored from wreg
 20874  0044FC  0100               	movlb	0	; () banked
 20875  0044FE  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 20876                           
 20877                           ;app.c: 87: bool isExpired = 1;
 20878  004500  0E01               	movlw	1
 20879  004502  0100               	movlb	0	; () banked
 20880  004504  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20881                           
 20882                           ; BSR set to: 0
 20883                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 20884  004506  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 20885  00450A  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 20886  00450C  0E03               	movlw	3
 20887  00450E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20888  004510  0EE8               	movlw	232
 20889  004512  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 20890  004514  EC35  F02F         	call	___wmul	;wreg free
 20891  004518  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 20892  00451C  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 20893  004520  0E00               	movlw	0
 20894  004522  0100               	movlb	0	; () banked
 20895  004524  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20896  004526  0E64               	movlw	100
 20897  004528  6F85               	movwf	___lwdiv@divisor& (0+255),b
 20898  00452A  EC5F  F02A         	call	___lwdiv	;wreg free
 20899  00452E  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 20900  004532  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 20901                           
 20902                           ;app.c: 90: if (*counter < destinationTicks)
 20903  004536  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20904  00453A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20905  00453E  0100               	movlb	0	; () banked
 20906  004540  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 20907  004542  5CDE               	subwf	postinc2,w,c
 20908  004544  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 20909  004546  58DE               	subwfb	postinc2,w,c
 20910  004548  B0D8               	btfsc	status,0,c
 20911  00454A  D009               	goto	l2540
 20912                           
 20913                           ; BSR set to: 0
 20914                           ;app.c: 91: {
 20915                           ;app.c: 92: *counter += 1;
 20916  00454C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20917  004550  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20918  004554  2ADE               	incf	postinc2,f,c
 20919  004556  0E00               	movlw	0
 20920  004558  22DD               	addwfc	postdec2,f,c
 20921                           
 20922                           ; BSR set to: 0
 20923                           ;app.c: 93: isExpired = 0;
 20924  00455A  0E00               	movlw	0
 20925  00455C  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20926  00455E                     l2540:
 20927                           
 20928                           ; BSR set to: 0
 20929                           ;app.c: 94: }
 20930                           ;app.c: 95: if (*counter == destinationTicks)
 20931                           
 20932                           ; BSR set to: 0
 20933  00455E  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20934  004562  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20935  004566  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 20936  004568  18DE               	xorwf	postinc2,w,c
 20937  00456A  E117               	bnz	l13859
 20938  00456C  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 20939  00456E  18DE               	xorwf	postinc2,w,c
 20940  004570  A4D8               	btfss	status,2,c
 20941  004572  D013               	goto	l2543
 20942                           
 20943                           ; BSR set to: 0
 20944                           ;app.c: 96: {
 20945                           ;app.c: 97: if (isCyclic)
 20946  004574  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 20947  004576  B4D8               	btfsc	status,2,c
 20948  004578  D008               	goto	l2542
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;app.c: 98: {
 20952                           ;app.c: 99: *counter = 0;
 20953  00457A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20954  00457E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20955  004582  0E00               	movlw	0
 20956  004584  6EDE               	movwf	postinc2,c
 20957  004586  0E00               	movlw	0
 20958  004588  D007               	goto	L25
 20959  00458A                     l2542:
 20960                           
 20961                           ; BSR set to: 0
 20962                           ;app.c: 101: else
 20963                           ;app.c: 102: {
 20964                           ;app.c: 103: *counter = 0xFFFF;
 20965                           
 20966                           ; BSR set to: 0
 20967  00458A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20968  00458E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20969  004592  0EFF               	movlw	255
 20970  004594  6EDE               	movwf	postinc2,c
 20971  004596  0EFF               	movlw	255
 20972  004598                     L25:
 20973  004598  6EDD               	movwf	postdec2,c
 20974  00459A                     l2543:
 20975  00459A                     l13859:
 20976                           
 20977                           ; BSR set to: 0
 20978                           ;app.c: 104: }
 20979                           ;app.c: 105: }
 20980                           ;app.c: 106: return isExpired;
 20981  00459A  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 20982  00459C  0012               	return	
 20983  00459E                     __end_of_secondsAppTimer:
 20984                           	opt stack 0
 20985                           tosu	equ	0xFFF
 20986                           tosh	equ	0xFFE
 20987                           tosl	equ	0xFFD
 20988                           pclath	equ	0xFFA
 20989                           tblptru	equ	0xFF8
 20990                           tblptrh	equ	0xFF7
 20991                           tblptrl	equ	0xFF6
 20992                           tablat	equ	0xFF5
 20993                           prodh	equ	0xFF4
 20994                           prodl	equ	0xFF3
 20995                           intcon	equ	0xFF2
 20996                           intcon2	equ	0xFF1
 20997                           intcon3	equ	0xFF0
 20998                           indf0	equ	0xFEF
 20999                           postinc0	equ	0xFEE
 21000                           plusw0	equ	0xFEB
 21001                           fsr0h	equ	0xFEA
 21002                           fsr0l	equ	0xFE9
 21003                           wreg	equ	0xFE8
 21004                           indf1	equ	0xFE7
 21005                           postinc1	equ	0xFE6
 21006                           postdec1	equ	0xFE5
 21007                           fsr1h	equ	0xFE2
 21008                           fsr1l	equ	0xFE1
 21009                           indf2	equ	0xFDF
 21010                           postinc2	equ	0xFDE
 21011                           postdec2	equ	0xFDD
 21012                           plusw2	equ	0xFDB
 21013                           fsr2h	equ	0xFDA
 21014                           fsr2l	equ	0xFD9
 21015                           status	equ	0xFD8
 21016                           
 21017 ;; *************** function _Mdm_RequestSmsData *****************
 21018 ;; Defined at:
 21019 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21020 ;; Parameters:    Size  Location     Type
 21021 ;;		None
 21022 ;; Auto vars:     Size  Location     Type
 21023 ;;		None
 21024 ;; Return value:  Size  Location     Type
 21025 ;;                  1    wreg      void 
 21026 ;; Registers used:
 21027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21028 ;; Tracked objects:
 21029 ;;		On entry : 0/0
 21030 ;;		On exit  : 0/0
 21031 ;;		Unchanged: 0/0
 21032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21037 ;;Total ram usage:        0 bytes
 21038 ;; Hardware stack levels used:    1
 21039 ;; Hardware stack levels required when called:   12
 21040 ;; This function calls:
 21041 ;;		_GenerateEvt
 21042 ;; This function is called by:
 21043 ;;		_MyApp_Task
 21044 ;; This function uses a non-reentrant model
 21045 ;;
 21046                           
 21047                           	psect	text94
 21048  00621E                     __ptext94:
 21049                           	opt stack 0
 21050  00621E                     _Mdm_RequestSmsData:
 21051                           	opt stack 15
 21052                           
 21053                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 21054                           
 21055                           ; BSR set to: 0
 21056                           ;incstack = 0
 21057  00621E  0EDC               	movlw	low _GetSmsText
 21058  006220  0100               	movlb	0	; () banked
 21059  006222  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21060  006224  0E00               	movlw	high _GetSmsText
 21061  006226  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21062  006228  ECA2  F030         	call	_GenerateEvt	;wreg free
 21063  00622C  0012               	return		;funcret
 21064  00622E                     __end_of_Mdm_RequestSmsData:
 21065                           	opt stack 0
 21066                           tosu	equ	0xFFF
 21067                           tosh	equ	0xFFE
 21068                           tosl	equ	0xFFD
 21069                           pclath	equ	0xFFA
 21070                           tblptru	equ	0xFF8
 21071                           tblptrh	equ	0xFF7
 21072                           tblptrl	equ	0xFF6
 21073                           tablat	equ	0xFF5
 21074                           prodh	equ	0xFF4
 21075                           prodl	equ	0xFF3
 21076                           intcon	equ	0xFF2
 21077                           intcon2	equ	0xFF1
 21078                           intcon3	equ	0xFF0
 21079                           indf0	equ	0xFEF
 21080                           postinc0	equ	0xFEE
 21081                           plusw0	equ	0xFEB
 21082                           fsr0h	equ	0xFEA
 21083                           fsr0l	equ	0xFE9
 21084                           wreg	equ	0xFE8
 21085                           indf1	equ	0xFE7
 21086                           postinc1	equ	0xFE6
 21087                           postdec1	equ	0xFE5
 21088                           fsr1h	equ	0xFE2
 21089                           fsr1l	equ	0xFE1
 21090                           indf2	equ	0xFDF
 21091                           postinc2	equ	0xFDE
 21092                           postdec2	equ	0xFDD
 21093                           plusw2	equ	0xFDB
 21094                           fsr2h	equ	0xFDA
 21095                           fsr2l	equ	0xFD9
 21096                           status	equ	0xFD8
 21097                           
 21098 ;; *************** function _Mdm_IsSmsReceived *****************
 21099 ;; Defined at:
 21100 ;;		line 942 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21101 ;; Parameters:    Size  Location     Type
 21102 ;;		None
 21103 ;; Auto vars:     Size  Location     Type
 21104 ;;  Ret             1   33[BANK0 ] enum E8927
 21105 ;; Return value:  Size  Location     Type
 21106 ;;                  1    wreg      enum E8927
 21107 ;; Registers used:
 21108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21109 ;; Tracked objects:
 21110 ;;		On entry : 0/0
 21111 ;;		On exit  : 0/0
 21112 ;;		Unchanged: 0/0
 21113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21118 ;;Total ram usage:        1 bytes
 21119 ;; Hardware stack levels used:    1
 21120 ;; Hardware stack levels required when called:   12
 21121 ;; This function calls:
 21122 ;;		_ReceiveEvt
 21123 ;; This function is called by:
 21124 ;;		_MyApp_Task
 21125 ;; This function uses a non-reentrant model
 21126 ;;
 21127                           
 21128                           	psect	text95
 21129  005EDC                     __ptext95:
 21130                           	opt stack 0
 21131  005EDC                     _Mdm_IsSmsReceived:
 21132                           	opt stack 15
 21133                           
 21134                           ;mdm_gsm_gprs.c: 944: SmsRxStsType Ret = SmsNotReceived;
 21135                           
 21136                           ;incstack = 0
 21137  005EDC  0E00               	movlw	0
 21138  005EDE  0100               	movlb	0	; () banked
 21139  005EE0  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21140                           
 21141                           ; BSR set to: 0
 21142                           ;mdm_gsm_gprs.c: 947: if (ReceiveEvt(&SmsEvent))
 21143  005EE2  0EDD               	movlw	low _SmsEvent
 21144  005EE4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21145  005EE6  0E00               	movlw	high _SmsEvent
 21146  005EE8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21147  005EEA  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 21148  005EEE  0900               	iorlw	0
 21149  005EF0  B4D8               	btfsc	status,2,c
 21150  005EF2  D003               	goto	l1136
 21151                           
 21152                           ;mdm_gsm_gprs.c: 948: {
 21153                           ;mdm_gsm_gprs.c: 949: Ret = SmsReceived;
 21154  005EF4  0E01               	movlw	1
 21155  005EF6  0100               	movlb	0	; () banked
 21156  005EF8  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21157  005EFA                     l1136:
 21158                           
 21159                           ;mdm_gsm_gprs.c: 950: }
 21160                           ;mdm_gsm_gprs.c: 952: return Ret;
 21161  005EFA  0100               	movlb	0	; () banked
 21162  005EFC  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21163  005EFE  0012               	return	
 21164  005F00                     __end_of_Mdm_IsSmsReceived:
 21165                           	opt stack 0
 21166                           tosu	equ	0xFFF
 21167                           tosh	equ	0xFFE
 21168                           tosl	equ	0xFFD
 21169                           pclath	equ	0xFFA
 21170                           tblptru	equ	0xFF8
 21171                           tblptrh	equ	0xFF7
 21172                           tblptrl	equ	0xFF6
 21173                           tablat	equ	0xFF5
 21174                           prodh	equ	0xFF4
 21175                           prodl	equ	0xFF3
 21176                           intcon	equ	0xFF2
 21177                           intcon2	equ	0xFF1
 21178                           intcon3	equ	0xFF0
 21179                           indf0	equ	0xFEF
 21180                           postinc0	equ	0xFEE
 21181                           plusw0	equ	0xFEB
 21182                           fsr0h	equ	0xFEA
 21183                           fsr0l	equ	0xFE9
 21184                           wreg	equ	0xFE8
 21185                           indf1	equ	0xFE7
 21186                           postinc1	equ	0xFE6
 21187                           postdec1	equ	0xFE5
 21188                           fsr1h	equ	0xFE2
 21189                           fsr1l	equ	0xFE1
 21190                           indf2	equ	0xFDF
 21191                           postinc2	equ	0xFDE
 21192                           postdec2	equ	0xFDD
 21193                           plusw2	equ	0xFDB
 21194                           fsr2h	equ	0xFDA
 21195                           fsr2l	equ	0xFD9
 21196                           status	equ	0xFD8
 21197                           
 21198 ;; *************** function _Mdm_IsRinging *****************
 21199 ;; Defined at:
 21200 ;;		line 1025 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;		None
 21203 ;; Auto vars:     Size  Location     Type
 21204 ;;  Ret             1   33[BANK0 ] enum E8923
 21205 ;; Return value:  Size  Location     Type
 21206 ;;                  1    wreg      enum E8923
 21207 ;; Registers used:
 21208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21209 ;; Tracked objects:
 21210 ;;		On entry : 0/0
 21211 ;;		On exit  : 0/0
 21212 ;;		Unchanged: 0/0
 21213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21217 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21218 ;;Total ram usage:        1 bytes
 21219 ;; Hardware stack levels used:    1
 21220 ;; Hardware stack levels required when called:   12
 21221 ;; This function calls:
 21222 ;;		_ReceiveEvt
 21223 ;; This function is called by:
 21224 ;;		_MyApp_Task
 21225 ;; This function uses a non-reentrant model
 21226 ;;
 21227                           
 21228                           	psect	text96
 21229  005F00                     __ptext96:
 21230                           	opt stack 0
 21231  005F00                     _Mdm_IsRinging:
 21232                           	opt stack 15
 21233                           
 21234                           ;mdm_gsm_gprs.c: 1027: RingStsType Ret = PhoneNotRinging;
 21235                           
 21236                           ; BSR set to: 0
 21237                           ;incstack = 0
 21238  005F00  0E00               	movlw	0
 21239  005F02  0100               	movlb	0	; () banked
 21240  005F04  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;mdm_gsm_gprs.c: 1030: if (ReceiveEvt(&RingEvent))
 21244  005F06  0EDF               	movlw	low _RingEvent
 21245  005F08  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21246  005F0A  0E00               	movlw	high _RingEvent
 21247  005F0C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21248  005F0E  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 21249  005F12  0900               	iorlw	0
 21250  005F14  B4D8               	btfsc	status,2,c
 21251  005F16  D003               	goto	l1152
 21252                           
 21253                           ;mdm_gsm_gprs.c: 1031: {
 21254                           ;mdm_gsm_gprs.c: 1032: Ret = PhoneRinging;
 21255  005F18  0E01               	movlw	1
 21256  005F1A  0100               	movlb	0	; () banked
 21257  005F1C  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21258  005F1E                     l1152:
 21259                           
 21260                           ;mdm_gsm_gprs.c: 1033: }
 21261                           ;mdm_gsm_gprs.c: 1035: return Ret;
 21262  005F1E  0100               	movlb	0	; () banked
 21263  005F20  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21264  005F22  0012               	return	
 21265  005F24                     __end_of_Mdm_IsRinging:
 21266                           	opt stack 0
 21267                           tosu	equ	0xFFF
 21268                           tosh	equ	0xFFE
 21269                           tosl	equ	0xFFD
 21270                           pclath	equ	0xFFA
 21271                           tblptru	equ	0xFF8
 21272                           tblptrh	equ	0xFF7
 21273                           tblptrl	equ	0xFF6
 21274                           tablat	equ	0xFF5
 21275                           prodh	equ	0xFF4
 21276                           prodl	equ	0xFF3
 21277                           intcon	equ	0xFF2
 21278                           intcon2	equ	0xFF1
 21279                           intcon3	equ	0xFF0
 21280                           indf0	equ	0xFEF
 21281                           postinc0	equ	0xFEE
 21282                           plusw0	equ	0xFEB
 21283                           fsr0h	equ	0xFEA
 21284                           fsr0l	equ	0xFE9
 21285                           wreg	equ	0xFE8
 21286                           indf1	equ	0xFE7
 21287                           postinc1	equ	0xFE6
 21288                           postdec1	equ	0xFE5
 21289                           fsr1h	equ	0xFE2
 21290                           fsr1l	equ	0xFE1
 21291                           indf2	equ	0xFDF
 21292                           postinc2	equ	0xFDE
 21293                           postdec2	equ	0xFDD
 21294                           plusw2	equ	0xFDB
 21295                           fsr2h	equ	0xFDA
 21296                           fsr2l	equ	0xFD9
 21297                           status	equ	0xFD8
 21298                           
 21299 ;; *************** function _Mdm_HangPhoneCall *****************
 21300 ;; Defined at:
 21301 ;;		line 997 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21302 ;; Parameters:    Size  Location     Type
 21303 ;;		None
 21304 ;; Auto vars:     Size  Location     Type
 21305 ;;		None
 21306 ;; Return value:  Size  Location     Type
 21307 ;;                  1    wreg      void 
 21308 ;; Registers used:
 21309 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21310 ;; Tracked objects:
 21311 ;;		On entry : 0/0
 21312 ;;		On exit  : 0/0
 21313 ;;		Unchanged: 0/0
 21314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21319 ;;Total ram usage:        0 bytes
 21320 ;; Hardware stack levels used:    1
 21321 ;; Hardware stack levels required when called:   13
 21322 ;; This function calls:
 21323 ;;		_Uart_WriteConstString
 21324 ;; This function is called by:
 21325 ;;		_MyApp_Task
 21326 ;; This function uses a non-reentrant model
 21327 ;;
 21328                           
 21329                           	psect	text97
 21330  0061DA                     __ptext97:
 21331                           	opt stack 0
 21332  0061DA                     _Mdm_HangPhoneCall:
 21333                           	opt stack 14
 21334                           
 21335                           ;mdm_gsm_gprs.c: 1000: Uart_WriteConstString(1, "ATH\r");
 21336                           
 21337                           ; BSR set to: 0
 21338                           ;incstack = 0
 21339  0061DA  0EEF               	movlw	low STR_6
 21340  0061DC  0100               	movlb	0	; () banked
 21341  0061DE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21342  0061E0  0EFF               	movlw	high STR_6
 21343  0061E2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21344  0061E4  0E01               	movlw	1
 21345  0061E6  EC90  F02C         	call	_Uart_WriteConstString
 21346  0061EA  0012               	return		;funcret
 21347  0061EC                     __end_of_Mdm_HangPhoneCall:
 21348                           	opt stack 0
 21349                           tosu	equ	0xFFF
 21350                           tosh	equ	0xFFE
 21351                           tosl	equ	0xFFD
 21352                           pclath	equ	0xFFA
 21353                           tblptru	equ	0xFF8
 21354                           tblptrh	equ	0xFF7
 21355                           tblptrl	equ	0xFF6
 21356                           tablat	equ	0xFF5
 21357                           prodh	equ	0xFF4
 21358                           prodl	equ	0xFF3
 21359                           intcon	equ	0xFF2
 21360                           intcon2	equ	0xFF1
 21361                           intcon3	equ	0xFF0
 21362                           indf0	equ	0xFEF
 21363                           postinc0	equ	0xFEE
 21364                           plusw0	equ	0xFEB
 21365                           fsr0h	equ	0xFEA
 21366                           fsr0l	equ	0xFE9
 21367                           wreg	equ	0xFE8
 21368                           indf1	equ	0xFE7
 21369                           postinc1	equ	0xFE6
 21370                           postdec1	equ	0xFE5
 21371                           fsr1h	equ	0xFE2
 21372                           fsr1l	equ	0xFE1
 21373                           indf2	equ	0xFDF
 21374                           postinc2	equ	0xFDE
 21375                           postdec2	equ	0xFDD
 21376                           plusw2	equ	0xFDB
 21377                           fsr2h	equ	0xFDA
 21378                           fsr2l	equ	0xFD9
 21379                           status	equ	0xFD8
 21380                           
 21381 ;; *************** function _Led_SetLedBlinkTime *****************
 21382 ;; Defined at:
 21383 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 21384 ;; Parameters:    Size  Location     Type
 21385 ;;  Led             1    wreg     unsigned char 
 21386 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 21387 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 21388 ;; Auto vars:     Size  Location     Type
 21389 ;;  Led             1   33[BANK0 ] unsigned char 
 21390 ;; Return value:  Size  Location     Type
 21391 ;;                  1    wreg      void 
 21392 ;; Registers used:
 21393 ;;		wreg, status,2, status,0
 21394 ;; Tracked objects:
 21395 ;;		On entry : 0/0
 21396 ;;		On exit  : 0/0
 21397 ;;		Unchanged: 0/0
 21398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21399 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21402 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21403 ;;Total ram usage:        5 bytes
 21404 ;; Hardware stack levels used:    1
 21405 ;; Hardware stack levels required when called:   11
 21406 ;; This function calls:
 21407 ;;		Nothing
 21408 ;; This function is called by:
 21409 ;;		_MyApp_Task
 21410 ;; This function uses a non-reentrant model
 21411 ;;
 21412                           
 21413                           	psect	text98
 21414  005416                     __ptext98:
 21415                           	opt stack 0
 21416  005416                     _Led_SetLedBlinkTime:
 21417                           	opt stack 16
 21418                           
 21419                           ;incstack = 0
 21420                           ;Led_SetLedBlinkTime@Led stored from wreg
 21421  005416  0100               	movlb	0	; () banked
 21422  005418  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 21423                           
 21424                           ;led.c: 374: switch (Led)
 21425  00541A  D01B               	goto	l2113
 21426  00541C                     l2114:
 21427                           
 21428                           ; BSR set to: 0
 21429                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 21430  00541C  C07D  F372         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 21431  005420  C07E  F373         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 21432                           
 21433                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 21434  005424  C07F  F374         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 21435  005428  C080  F375         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 21436                           
 21437                           ;led.c: 379: break;
 21438  00542C  0012               	return	
 21439  00542E                     l2116:
 21440                           
 21441                           ; BSR set to: 0
 21442                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 21443  00542E  C07D  F369         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21444  005432  C07E  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21445                           
 21446                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 21447  005436  C07F  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21448  00543A  C080  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21449                           
 21450                           ;led.c: 384: break;
 21451  00543E  0012               	return	
 21452  005440                     l2117:
 21453                           
 21454                           ; BSR set to: 0
 21455                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 21456  005440  C07D  F369         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21457  005444  C07E  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21458                           
 21459                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 21460  005448  C07F  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21461  00544C  C080  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21462                           
 21463                           ; BSR set to: 0
 21464                           ;led.c: 393: }
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;led.c: 392: break;
 21468                           
 21469                           ;led.c: 391: default:
 21470                           
 21471                           ;led.c: 389: break;
 21472  005450  0012               	return	
 21473  005452                     l2113:
 21474                           
 21475                           ; BSR set to: 0
 21476  005452  0100               	movlb	0	; () banked
 21477  005454  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 21478                           
 21479                           ; Switch size 1, requested type "space"
 21480                           ; Number of cases is 3, Range of values is 1 to 3
 21481                           ; switch strategies available:
 21482                           ; Name         Instructions Cycles
 21483                           ; simple_byte           10     6 (average)
 21484                           ;	Chosen strategy is simple_byte
 21485  005456  0A01               	xorlw	1	; case 1
 21486  005458  B4D8               	btfsc	status,2,c
 21487  00545A  D7E0               	goto	l2114
 21488  00545C  0A03               	xorlw	3	; case 2
 21489  00545E  B4D8               	btfsc	status,2,c
 21490  005460  D7E6               	goto	l2116
 21491  005462  0A01               	xorlw	1	; case 3
 21492  005464  A4D8               	btfss	status,2,c
 21493  005466  0012               	return	
 21494  005468  D7EB               	goto	l2117
 21495  00546A                     __end_of_Led_SetLedBlinkTime:
 21496                           	opt stack 0
 21497                           tosu	equ	0xFFF
 21498                           tosh	equ	0xFFE
 21499                           tosl	equ	0xFFD
 21500                           pclath	equ	0xFFA
 21501                           tblptru	equ	0xFF8
 21502                           tblptrh	equ	0xFF7
 21503                           tblptrl	equ	0xFF6
 21504                           tablat	equ	0xFF5
 21505                           prodh	equ	0xFF4
 21506                           prodl	equ	0xFF3
 21507                           intcon	equ	0xFF2
 21508                           intcon2	equ	0xFF1
 21509                           intcon3	equ	0xFF0
 21510                           indf0	equ	0xFEF
 21511                           postinc0	equ	0xFEE
 21512                           plusw0	equ	0xFEB
 21513                           fsr0h	equ	0xFEA
 21514                           fsr0l	equ	0xFE9
 21515                           wreg	equ	0xFE8
 21516                           indf1	equ	0xFE7
 21517                           postinc1	equ	0xFE6
 21518                           postdec1	equ	0xFE5
 21519                           fsr1h	equ	0xFE2
 21520                           fsr1l	equ	0xFE1
 21521                           indf2	equ	0xFDF
 21522                           postinc2	equ	0xFDE
 21523                           postdec2	equ	0xFDD
 21524                           plusw2	equ	0xFDB
 21525                           fsr2h	equ	0xFDA
 21526                           fsr2l	equ	0xFD9
 21527                           status	equ	0xFD8
 21528                           
 21529 ;; *************** function _GetCallerNumber *****************
 21530 ;; Defined at:
 21531 ;;		line 1038 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21532 ;; Parameters:    Size  Location     Type
 21533 ;;		None
 21534 ;; Auto vars:     Size  Location     Type
 21535 ;;		None
 21536 ;; Return value:  Size  Location     Type
 21537 ;;                  2   35[BANK0 ] PTR unsigned char 
 21538 ;; Registers used:
 21539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21540 ;; Tracked objects:
 21541 ;;		On entry : 0/0
 21542 ;;		On exit  : 0/0
 21543 ;;		Unchanged: 0/0
 21544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21549 ;;Total ram usage:        2 bytes
 21550 ;; Hardware stack levels used:    1
 21551 ;; Hardware stack levels required when called:   12
 21552 ;; This function calls:
 21553 ;;		_ClearBuffer
 21554 ;;		_ReceiveEvt
 21555 ;; This function is called by:
 21556 ;;		_MyApp_Task
 21557 ;; This function uses a non-reentrant model
 21558 ;;
 21559                           
 21560                           	psect	text99
 21561  005BCA                     __ptext99:
 21562                           	opt stack 0
 21563  005BCA                     _GetCallerNumber:
 21564                           	opt stack 15
 21565                           
 21566                           ;mdm_gsm_gprs.c: 1040: if (!ReceiveEvt(&ClipEvent))
 21567                           
 21568                           ; BSR set to: 0
 21569                           ;incstack = 0
 21570  005BCA  0EDE               	movlw	low _ClipEvent
 21571  005BCC  0100               	movlb	0	; () banked
 21572  005BCE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21573  005BD0  0E00               	movlw	high _ClipEvent
 21574  005BD2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21575  005BD4  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 21576  005BD8  0900               	iorlw	0
 21577  005BDA  A4D8               	btfss	status,2,c
 21578  005BDC  D00B               	goto	l1156
 21579                           
 21580                           ;mdm_gsm_gprs.c: 1041: {
 21581                           ;mdm_gsm_gprs.c: 1042: ClearBuffer(callerNumber, 14);
 21582  005BDE  0E39               	movlw	low _callerNumber
 21583  005BE0  0100               	movlb	0	; () banked
 21584  005BE2  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 21585  005BE4  0E03               	movlw	high _callerNumber
 21586  005BE6  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 21587  005BE8  0E00               	movlw	0
 21588  005BEA  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 21589  005BEC  0E0E               	movlw	14
 21590  005BEE  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 21591  005BF0  EC00  F02E         	call	_ClearBuffer	;wreg free
 21592  005BF4                     l1156:
 21593                           
 21594                           ;mdm_gsm_gprs.c: 1043: }
 21595                           ;mdm_gsm_gprs.c: 1044: return callerNumber;
 21596  005BF4  0E39               	movlw	low _callerNumber
 21597  005BF6  0100               	movlb	0	; () banked
 21598  005BF8  6F83               	movwf	?_GetCallerNumber& (0+255),b
 21599  005BFA  0E03               	movlw	high _callerNumber
 21600  005BFC  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 21601  005BFE  0012               	return	
 21602  005C00                     __end_of_GetCallerNumber:
 21603                           	opt stack 0
 21604                           tosu	equ	0xFFF
 21605                           tosh	equ	0xFFE
 21606                           tosl	equ	0xFFD
 21607                           pclath	equ	0xFFA
 21608                           tblptru	equ	0xFF8
 21609                           tblptrh	equ	0xFF7
 21610                           tblptrl	equ	0xFF6
 21611                           tablat	equ	0xFF5
 21612                           prodh	equ	0xFF4
 21613                           prodl	equ	0xFF3
 21614                           intcon	equ	0xFF2
 21615                           intcon2	equ	0xFF1
 21616                           intcon3	equ	0xFF0
 21617                           indf0	equ	0xFEF
 21618                           postinc0	equ	0xFEE
 21619                           plusw0	equ	0xFEB
 21620                           fsr0h	equ	0xFEA
 21621                           fsr0l	equ	0xFE9
 21622                           wreg	equ	0xFE8
 21623                           indf1	equ	0xFE7
 21624                           postinc1	equ	0xFE6
 21625                           postdec1	equ	0xFE5
 21626                           fsr1h	equ	0xFE2
 21627                           fsr1l	equ	0xFE1
 21628                           indf2	equ	0xFDF
 21629                           postinc2	equ	0xFDE
 21630                           postdec2	equ	0xFDD
 21631                           plusw2	equ	0xFDB
 21632                           fsr2h	equ	0xFDA
 21633                           fsr2l	equ	0xFD9
 21634                           status	equ	0xFD8
 21635                           
 21636 ;; *************** function _Eeprom_Read *****************
 21637 ;; Defined at:
 21638 ;;		line 95 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21639 ;; Parameters:    Size  Location     Type
 21640 ;;  MemoryAddres    1    wreg     unsigned char 
 21641 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 21642 ;;		 -> MyApp_Task@phone(14), 
 21643 ;;  DataLength      1   75[BANK0 ] unsigned char 
 21644 ;; Auto vars:     Size  Location     Type
 21645 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 21646 ;;  QuerySts        1   79[BANK0 ] enum E8930
 21647 ;;  ReadSts         1   78[BANK0 ] enum E8956
 21648 ;;  SlaveAddress    1   77[BANK0 ] unsigned char 
 21649 ;; Return value:  Size  Location     Type
 21650 ;;                  1    wreg      enum E8245
 21651 ;; Registers used:
 21652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21653 ;; Tracked objects:
 21654 ;;		On entry : 0/0
 21655 ;;		On exit  : 0/0
 21656 ;;		Unchanged: 0/0
 21657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21658 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21659 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21661 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21662 ;;Total ram usage:        7 bytes
 21663 ;; Hardware stack levels used:    1
 21664 ;; Hardware stack levels required when called:   16
 21665 ;; This function calls:
 21666 ;;		_I2cSlv_QueryI2cData
 21667 ;; This function is called by:
 21668 ;;		_MyApp_Task
 21669 ;; This function uses a non-reentrant model
 21670 ;;
 21671                           
 21672                           	psect	text100
 21673  00546A                     __ptext100:
 21674                           	opt stack 0
 21675  00546A                     _Eeprom_Read:
 21676                           	opt stack 11
 21677                           
 21678                           ; BSR set to: 0
 21679                           ;incstack = 0
 21680                           ;Eeprom_Read@MemoryAddress stored from wreg
 21681  00546A  0100               	movlb	0	; () banked
 21682  00546C  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 21683                           
 21684                           ;eeprom_if.c: 97: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 21685  00546E  0E00               	movlw	0
 21686  005470  0100               	movlb	0	; () banked
 21687  005472  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21688                           
 21689                           ;eeprom_if.c: 98: EepromStsType ReadSts = OP_PENDING;
 21690  005474  0E02               	movlw	2
 21691  005476  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21692                           
 21693                           ;eeprom_if.c: 99: UINT8 SlaveAddress = 0x50;
 21694  005478  0E50               	movlw	80
 21695  00547A  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 21696                           
 21697                           ; BSR set to: 0
 21698                           ;eeprom_if.c: 100: ReadAddress[0] = MemoryAddress;
 21699  00547C  C0AC  F1F6         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 21700                           
 21701                           ; BSR set to: 0
 21702                           ;eeprom_if.c: 102: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 21703  005480  0EF6               	movlw	low _ReadAddress
 21704  005482  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 21705  005484  0E01               	movlw	high _ReadAddress
 21706  005486  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 21707  005488  0E01               	movlw	1
 21708  00548A  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 21709  00548C  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 21710  005490  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 21711  005494  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 21712  005498  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 21713  00549C  ECC4  F01B         	call	_I2cSlv_QueryI2cData	;wreg free
 21714  0054A0  0100               	movlb	0	; () banked
 21715  0054A2  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21716                           
 21717                           ; BSR set to: 0
 21718                           ;eeprom_if.c: 104: if (QuerySts == OP_COMPLETE)
 21719  0054A4  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 21720  0054A6  A4D8               	btfss	status,2,c
 21721  0054A8  D002               	goto	l2618
 21722                           
 21723                           ; BSR set to: 0
 21724                           ;eeprom_if.c: 105: {
 21725                           ;eeprom_if.c: 106: ReadSts = OP_SUCCESS;
 21726  0054AA  0E00               	movlw	0
 21727  0054AC  D005               	goto	L26
 21728  0054AE                     l2618:
 21729                           
 21730                           ; BSR set to: 0
 21731                           ;eeprom_if.c: 108: else if (QuerySts == OP_TIMEOUT)
 21732                           
 21733                           ; BSR set to: 0
 21734  0054AE  0E02               	movlw	2
 21735  0054B0  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 21736  0054B2  A4D8               	btfss	status,2,c
 21737  0054B4  D002               	goto	l2620
 21738                           
 21739                           ; BSR set to: 0
 21740                           ;eeprom_if.c: 109: {
 21741                           ;eeprom_if.c: 110: ReadSts = OP_FAILED;
 21742  0054B6  0E01               	movlw	1
 21743  0054B8                     L26:
 21744  0054B8  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21745  0054BA                     l2620:
 21746                           
 21747                           ; BSR set to: 0
 21748                           ;eeprom_if.c: 111: }
 21749                           ;eeprom_if.c: 112: return ReadSts;
 21750                           
 21751                           ; BSR set to: 0
 21752  0054BA  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 21753  0054BC  0012               	return	
 21754  0054BE                     __end_of_Eeprom_Read:
 21755                           	opt stack 0
 21756                           tosu	equ	0xFFF
 21757                           tosh	equ	0xFFE
 21758                           tosl	equ	0xFFD
 21759                           pclath	equ	0xFFA
 21760                           tblptru	equ	0xFF8
 21761                           tblptrh	equ	0xFF7
 21762                           tblptrl	equ	0xFF6
 21763                           tablat	equ	0xFF5
 21764                           prodh	equ	0xFF4
 21765                           prodl	equ	0xFF3
 21766                           intcon	equ	0xFF2
 21767                           intcon2	equ	0xFF1
 21768                           intcon3	equ	0xFF0
 21769                           indf0	equ	0xFEF
 21770                           postinc0	equ	0xFEE
 21771                           plusw0	equ	0xFEB
 21772                           fsr0h	equ	0xFEA
 21773                           fsr0l	equ	0xFE9
 21774                           wreg	equ	0xFE8
 21775                           indf1	equ	0xFE7
 21776                           postinc1	equ	0xFE6
 21777                           postdec1	equ	0xFE5
 21778                           fsr1h	equ	0xFE2
 21779                           fsr1l	equ	0xFE1
 21780                           indf2	equ	0xFDF
 21781                           postinc2	equ	0xFDE
 21782                           postdec2	equ	0xFDD
 21783                           plusw2	equ	0xFDB
 21784                           fsr2h	equ	0xFDA
 21785                           fsr2l	equ	0xFD9
 21786                           status	equ	0xFD8
 21787                           
 21788 ;; *************** function _I2cSlv_QueryI2cData *****************
 21789 ;; Defined at:
 21790 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21791 ;; Parameters:    Size  Location     Type
 21792 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 21793 ;;		 -> ReadAddress(1), 
 21794 ;;  TxLen           1   68[BANK0 ] unsigned char 
 21795 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 21796 ;;		 -> MyApp_Task@phone(14), 
 21797 ;;  RxLen           1   71[BANK0 ] unsigned char 
 21798 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 21799 ;; Auto vars:     Size  Location     Type
 21800 ;;		None
 21801 ;; Return value:  Size  Location     Type
 21802 ;;                  1    wreg      enum E8943
 21803 ;; Registers used:
 21804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21805 ;; Tracked objects:
 21806 ;;		On entry : 0/0
 21807 ;;		On exit  : 0/0
 21808 ;;		Unchanged: 0/0
 21809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21810 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21813 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21814 ;;Total ram usage:        7 bytes
 21815 ;; Hardware stack levels used:    1
 21816 ;; Hardware stack levels required when called:   15
 21817 ;; This function calls:
 21818 ;;		_I2cSlv_I2cReadMsgSts
 21819 ;;		_I2cSlv_ReceiveI2cMsg
 21820 ;;		_I2cSlv_SendI2cMsg
 21821 ;;		_OsTmr_GetTimerStatus
 21822 ;;		_OsTmr_StartTimer
 21823 ;;		_OsTmr_Wait
 21824 ;; This function is called by:
 21825 ;;		_Eeprom_Read
 21826 ;; This function uses a non-reentrant model
 21827 ;;
 21828                           
 21829                           	psect	text101
 21830  003788                     __ptext101:
 21831                           	opt stack 0
 21832  003788                     _I2cSlv_QueryI2cData:
 21833                           	opt stack 11
 21834                           
 21835                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 21836                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 21837                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 21838                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 21839                           ;i2c_slv.c: 388: switch(I2cOpState)
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;incstack = 0
 21843  003788  D05B               	goto	l1437
 21844  00378A                     
 21845                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 21846  00378A  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 21847  00378E  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 21848  003792  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 21849  003796  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 21850  00379A  EC32  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 21851                           
 21852                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 21853  00379E  0E01               	movlw	1
 21854  0037A0  0101               	movlb	1	; () banked
 21855  0037A2  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21856                           
 21857                           ; BSR set to: 1
 21858                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 21859  0037A4  0E00               	movlw	0
 21860  0037A6  D04A               	goto	L30
 21861  0037A8                     
 21862                           ; BSR set to: 1
 21863                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 21864                           
 21865                           ; BSR set to: 1
 21866  0037A8  0EB4               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 21867  0037AA  0100               	movlb	0	; () banked
 21868  0037AC  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 21869  0037AE  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 21870  0037B0  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 21871  0037B2  0EF4               	movlw	244
 21872  0037B4  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 21873  0037B6  0E01               	movlw	1
 21874  0037B8  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 21875  0037BA  0E00               	movlw	0
 21876  0037BC  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 21877  0037BE  0E00               	movlw	0
 21878  0037C0  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 21879  0037C2  EC8D  F026         	call	_OsTmr_Wait	;wreg free
 21880  0037C6  06E8               	decf	wreg,f,c
 21881  0037C8  A4D8               	btfss	status,2,c
 21882  0037CA  D036               	goto	l1445
 21883                           
 21884                           ;i2c_slv.c: 402: {
 21885                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 21886  0037CC  0E47               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21887  0037CE  0100               	movlb	0	; () banked
 21888  0037D0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 21889  0037D2  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21890  0037D4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 21891  0037D6  0EC4               	movlw	196
 21892  0037D8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 21893  0037DA  0E09               	movlw	9
 21894  0037DC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 21895  0037DE  0E00               	movlw	0
 21896  0037E0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 21897  0037E2  0E00               	movlw	0
 21898  0037E4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 21899  0037E6  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 21900                           
 21901                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 21902  0037EA  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 21903  0037EE  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 21904  0037F2  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 21905  0037F6  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 21906  0037FA  ECD3  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 21907                           
 21908                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 21909  0037FE  0E02               	movlw	2
 21910  003800  0101               	movlb	1	; () banked
 21911  003802  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21912  003804  D019               	goto	l1445
 21913  003806                     
 21914                           ; BSR set to: 1
 21915                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 21916                           
 21917                           ; BSR set to: 1
 21918  003806  ECF9  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 21919  00380A  06E8               	decf	wreg,f,c
 21920  00380C  A4D8               	btfss	status,2,c
 21921  00380E  D005               	goto	l1443
 21922                           
 21923                           ;i2c_slv.c: 414: {
 21924                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 21925  003810  0E00               	movlw	0
 21926  003812  0101               	movlb	1	; () banked
 21927  003814  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21928                           
 21929                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 21930  003816  0E01               	movlw	1
 21931  003818  D011               	goto	L30
 21932  00381A                     l1443:
 21933                           
 21934                           ;i2c_slv.c: 420: else
 21935                           ;i2c_slv.c: 421: {
 21936                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 21937                           
 21938                           ; BSR set to: 1
 21939  00381A  0E47               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21940  00381C  0100               	movlb	0	; () banked
 21941  00381E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 21942  003820  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21943  003822  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 21944  003824  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 21945  003828  06E8               	decf	wreg,f,c
 21946  00382A  A4D8               	btfss	status,2,c
 21947  00382C  D005               	goto	l1445
 21948                           
 21949                           ;i2c_slv.c: 423: {
 21950                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 21951  00382E  0E00               	movlw	0
 21952  003830  0101               	movlb	1	; () banked
 21953  003832  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21954                           
 21955                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 21956  003834  0E02               	movlw	2
 21957  003836  D002               	goto	L30
 21958  003838                     l1445:
 21959                           
 21960                           ;i2c_slv.c: 429: else
 21961                           ;i2c_slv.c: 430: {
 21962                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 21963                           
 21964                           ; BSR set to: 1
 21965  003838  0E00               	movlw	0
 21966  00383A  0101               	movlb	1	; () banked
 21967  00383C                     L30:
 21968  00383C  6FE7               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 21969                           
 21970                           ; BSR set to: 1
 21971                           ;i2c_slv.c: 439: }
 21972                           
 21973                           ; BSR set to: 1
 21974                           ;i2c_slv.c: 438: break;
 21975                           
 21976                           ;i2c_slv.c: 437: default:
 21977                           
 21978                           ; BSR set to: 1
 21979                           ;i2c_slv.c: 433: }
 21980                           ;i2c_slv.c: 434: }
 21981                           ;i2c_slv.c: 435: break;
 21982                           
 21983                           ; BSR set to: 1
 21984  00383E  D00B               	goto	l1439
 21985  003840                     l1437:
 21986                           
 21987                           ; BSR set to: 1
 21988  003840  0101               	movlb	1	; () banked
 21989  003842  51E8               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 21990                           
 21991                           ; Switch size 1, requested type "space"
 21992                           ; Number of cases is 3, Range of values is 0 to 2
 21993                           ; switch strategies available:
 21994                           ; Name         Instructions Cycles
 21995                           ; simple_byte           10     6 (average)
 21996                           ;	Chosen strategy is simple_byte
 21997  003844  0A00               	xorlw	0	; case 0
 21998  003846  B4D8               	btfsc	status,2,c
 21999  003848  D7A0               	goto	l1438
 22000  00384A  0A01               	xorlw	1	; case 1
 22001  00384C  B4D8               	btfsc	status,2,c
 22002  00384E  D7AC               	goto	l1440
 22003  003850  0A03               	xorlw	3	; case 2
 22004  003852  B4D8               	btfsc	status,2,c
 22005  003854  D7D8               	goto	l1442
 22006  003856                     l1439:
 22007                           
 22008                           ; BSR set to: 1
 22009                           ;i2c_slv.c: 441: return Ret;
 22010                           
 22011                           ; BSR set to: 1
 22012  003856  51E7               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 22013  003858  0012               	return	
 22014  00385A                     __end_of_I2cSlv_QueryI2cData:
 22015                           	opt stack 0
 22016                           tosu	equ	0xFFF
 22017                           tosh	equ	0xFFE
 22018                           tosl	equ	0xFFD
 22019                           pclath	equ	0xFFA
 22020                           tblptru	equ	0xFF8
 22021                           tblptrh	equ	0xFF7
 22022                           tblptrl	equ	0xFF6
 22023                           tablat	equ	0xFF5
 22024                           prodh	equ	0xFF4
 22025                           prodl	equ	0xFF3
 22026                           intcon	equ	0xFF2
 22027                           intcon2	equ	0xFF1
 22028                           intcon3	equ	0xFF0
 22029                           indf0	equ	0xFEF
 22030                           postinc0	equ	0xFEE
 22031                           plusw0	equ	0xFEB
 22032                           fsr0h	equ	0xFEA
 22033                           fsr0l	equ	0xFE9
 22034                           wreg	equ	0xFE8
 22035                           indf1	equ	0xFE7
 22036                           postinc1	equ	0xFE6
 22037                           postdec1	equ	0xFE5
 22038                           fsr1h	equ	0xFE2
 22039                           fsr1l	equ	0xFE1
 22040                           indf2	equ	0xFDF
 22041                           postinc2	equ	0xFDE
 22042                           postdec2	equ	0xFDD
 22043                           plusw2	equ	0xFDB
 22044                           fsr2h	equ	0xFDA
 22045                           fsr2l	equ	0xFD9
 22046                           status	equ	0xFD8
 22047                           
 22048 ;; *************** function _OsTmr_Wait *****************
 22049 ;; Defined at:
 22050 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 22051 ;; Parameters:    Size  Location     Type
 22052 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 22053 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 22054 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 22055 ;; Auto vars:     Size  Location     Type
 22056 ;;  Ret             1   65[BANK0 ] enum E7749
 22057 ;; Return value:  Size  Location     Type
 22058 ;;                  1    wreg      enum E7749
 22059 ;; Registers used:
 22060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22061 ;; Tracked objects:
 22062 ;;		On entry : 0/0
 22063 ;;		On exit  : 0/0
 22064 ;;		Unchanged: 0/0
 22065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22066 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22069 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22070 ;;Total ram usage:        7 bytes
 22071 ;; Hardware stack levels used:    1
 22072 ;; Hardware stack levels required when called:   14
 22073 ;; This function calls:
 22074 ;;		_OsTmr_GetTimerStatus
 22075 ;;		_OsTmr_StartTimer
 22076 ;; This function is called by:
 22077 ;;		_I2cSlv_QueryI2cData
 22078 ;;		_Terminal
 22079 ;; This function uses a non-reentrant model
 22080 ;;
 22081                           
 22082                           	psect	text102
 22083  004D1A                     __ptext102:
 22084                           	opt stack 0
 22085  004D1A                     _OsTmr_Wait:
 22086                           	opt stack 11
 22087                           
 22088                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 22089                           
 22090                           ; BSR set to: 1
 22091                           ;incstack = 0
 22092  004D1A  0E00               	movlw	0
 22093  004D1C  0100               	movlb	0	; () banked
 22094  004D1E  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 22095                           
 22096                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 22097  004D20  D02D               	goto	l855
 22098  004D22                     
 22099                           ; BSR set to: 0
 22100                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 22101                           
 22102                           ; BSR set to: 0
 22103  004D22  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 22104  004D26  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 22105  004D2A  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 22106  004D2E  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 22107  004D32  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 22108  004D36  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 22109  004D3A  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 22110                           
 22111                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 22112  004D3E  0100               	movlb	0	; () banked
 22113  004D40  EE20 F00A          	lfsr	2,10
 22114  004D44  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22115  004D46  26D9               	addwf	fsr2l,f,c
 22116  004D48  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22117  004D4A  22DA               	addwfc	fsr2h,f,c
 22118  004D4C  0E01               	movlw	1
 22119  004D4E  6EDF               	movwf	indf2,c
 22120                           
 22121                           ;os_timers.c: 165: break;
 22122  004D50  D022               	goto	l857
 22123  004D52                     
 22124                           ; BSR set to: 0
 22125                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 22126                           
 22127                           ; BSR set to: 0
 22128  004D52  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 22129  004D56  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 22130  004D5A  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 22131  004D5E  06E8               	decf	wreg,f,c
 22132  004D60  A4D8               	btfss	status,2,c
 22133  004D62  D019               	goto	l857
 22134                           
 22135                           ;os_timers.c: 170: {
 22136                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 22137  004D64  0100               	movlb	0	; () banked
 22138  004D66  EE20 F00A          	lfsr	2,10
 22139  004D6A  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22140  004D6C  26D9               	addwf	fsr2l,f,c
 22141  004D6E  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22142  004D70  22DA               	addwfc	fsr2h,f,c
 22143  004D72  0E00               	movlw	0
 22144  004D74  6EDF               	movwf	indf2,c
 22145                           
 22146                           ; BSR set to: 0
 22147                           ;os_timers.c: 174: Ret = DelayExpired;
 22148  004D76  0E01               	movlw	1
 22149  004D78  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 22150                           
 22151                           ; BSR set to: 0
 22152                           ;os_timers.c: 180: }
 22153                           
 22154                           ; BSR set to: 0
 22155                           ;os_timers.c: 179: break;
 22156                           
 22157                           ;os_timers.c: 178: default:
 22158                           
 22159                           ; BSR set to: 0
 22160                           ;os_timers.c: 175: }
 22161                           ;os_timers.c: 176: break;
 22162  004D7A  D00D               	goto	l857
 22163  004D7C                     l855:
 22164                           
 22165                           ; BSR set to: 0
 22166                           
 22167                           ; BSR set to: 0
 22168  004D7C  EE20 F00A          	lfsr	2,10
 22169  004D80  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22170  004D82  26D9               	addwf	fsr2l,f,c
 22171  004D84  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22172  004D86  22DA               	addwfc	fsr2h,f,c
 22173  004D88  50DF               	movf	indf2,w,c
 22174                           
 22175                           ; Switch size 1, requested type "space"
 22176                           ; Number of cases is 2, Range of values is 0 to 1
 22177                           ; switch strategies available:
 22178                           ; Name         Instructions Cycles
 22179                           ; simple_byte            7     4 (average)
 22180                           ;	Chosen strategy is simple_byte
 22181  004D8A  0A00               	xorlw	0	; case 0
 22182  004D8C  B4D8               	btfsc	status,2,c
 22183  004D8E  D7C9               	goto	l856
 22184  004D90  0A01               	xorlw	1	; case 1
 22185  004D92  B4D8               	btfsc	status,2,c
 22186  004D94  D7DE               	goto	l858
 22187  004D96                     l857:
 22188                           
 22189                           ;os_timers.c: 182: return Ret;
 22190                           
 22191                           ; BSR set to: 0
 22192  004D96  0100               	movlb	0	; () banked
 22193  004D98  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 22194  004D9A  0012               	return	
 22195  004D9C                     __end_of_OsTmr_Wait:
 22196                           	opt stack 0
 22197                           tosu	equ	0xFFF
 22198                           tosh	equ	0xFFE
 22199                           tosl	equ	0xFFD
 22200                           pclath	equ	0xFFA
 22201                           tblptru	equ	0xFF8
 22202                           tblptrh	equ	0xFF7
 22203                           tblptrl	equ	0xFF6
 22204                           tablat	equ	0xFF5
 22205                           prodh	equ	0xFF4
 22206                           prodl	equ	0xFF3
 22207                           intcon	equ	0xFF2
 22208                           intcon2	equ	0xFF1
 22209                           intcon3	equ	0xFF0
 22210                           indf0	equ	0xFEF
 22211                           postinc0	equ	0xFEE
 22212                           plusw0	equ	0xFEB
 22213                           fsr0h	equ	0xFEA
 22214                           fsr0l	equ	0xFE9
 22215                           wreg	equ	0xFE8
 22216                           indf1	equ	0xFE7
 22217                           postinc1	equ	0xFE6
 22218                           postdec1	equ	0xFE5
 22219                           fsr1h	equ	0xFE2
 22220                           fsr1l	equ	0xFE1
 22221                           indf2	equ	0xFDF
 22222                           postinc2	equ	0xFDE
 22223                           postdec2	equ	0xFDD
 22224                           plusw2	equ	0xFDB
 22225                           fsr2h	equ	0xFDA
 22226                           fsr2l	equ	0xFD9
 22227                           status	equ	0xFD8
 22228                           
 22229 ;; *************** function _I2cSlv_SendI2cMsg *****************
 22230 ;; Defined at:
 22231 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22232 ;; Parameters:    Size  Location     Type
 22233 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 22234 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 22235 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 22236 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22237 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 22238 ;; Auto vars:     Size  Location     Type
 22239 ;;  TxSts           1   36[BANK0 ] unsigned char 
 22240 ;; Return value:  Size  Location     Type
 22241 ;;                  1    wreg      unsigned char 
 22242 ;; Registers used:
 22243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22244 ;; Tracked objects:
 22245 ;;		On entry : 0/0
 22246 ;;		On exit  : 0/0
 22247 ;;		Unchanged: 0/0
 22248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22252 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22253 ;;Total ram usage:        5 bytes
 22254 ;; Hardware stack levels used:    1
 22255 ;; Hardware stack levels required when called:   12
 22256 ;; This function calls:
 22257 ;;		_GenerateEvt
 22258 ;; This function is called by:
 22259 ;;		_I2cSlv_QueryI2cData
 22260 ;;		_Terminal
 22261 ;;		_triggerRelay
 22262 ;;		_Eeprom_Write
 22263 ;; This function uses a non-reentrant model
 22264 ;;
 22265                           
 22266                           	psect	text103
 22267  005A64                     __ptext103:
 22268                           	opt stack 0
 22269  005A64                     _I2cSlv_SendI2cMsg:
 22270                           	opt stack 13
 22271                           
 22272                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 22273                           
 22274                           ; BSR set to: 0
 22275                           ;incstack = 0
 22276  005A64  0E00               	movlw	0
 22277  005A66  0100               	movlb	0	; () banked
 22278  005A68  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22279                           
 22280                           ; BSR set to: 0
 22281                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 22282  005A6A  05CE               	decf	_I2cComSts& (0+255),w,b
 22283  005A6C  B4D8               	btfsc	status,2,c
 22284  005A6E  D015               	goto	l1409
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;i2c_slv.c: 257: {
 22288                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 22289  005A70  C082  F39E         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 22290                           
 22291                           ; BSR set to: 0
 22292                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 22293  005A74  0E00               	movlw	0
 22294  005A76  0103               	movlb	3	; () banked
 22295  005A78  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 22296                           
 22297                           ; BSR set to: 3
 22298                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 22299  005A7A  C083  F3A2         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 22300                           
 22301                           ; BSR set to: 3
 22302                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 22303  005A7E  C080  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 22304  005A82  C081  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 22305                           
 22306                           ; BSR set to: 3
 22307                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 22308  005A86  0ED8               	movlw	low _I2cWriteDataEvt
 22309  005A88  0100               	movlb	0	; () banked
 22310  005A8A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22311  005A8C  0E00               	movlw	high _I2cWriteDataEvt
 22312  005A8E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22313  005A90  ECA2  F030         	call	_GenerateEvt	;wreg free
 22314                           
 22315                           ;i2c_slv.c: 267: TxSts = 1u;
 22316  005A94  0E01               	movlw	1
 22317  005A96  0100               	movlb	0	; () banked
 22318  005A98  D001               	goto	L31
 22319  005A9A                     l1409:
 22320                           
 22321                           ; BSR set to: 0
 22322                           ;i2c_slv.c: 269: else
 22323                           ;i2c_slv.c: 270: {
 22324                           ;i2c_slv.c: 272: TxSts = 0u;
 22325                           
 22326                           ; BSR set to: 0
 22327  005A9A  0E00               	movlw	0
 22328  005A9C                     L31:
 22329  005A9C  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22330                           
 22331                           ; BSR set to: 0
 22332                           ;i2c_slv.c: 273: }
 22333                           ;i2c_slv.c: 275: return TxSts;
 22334  005A9E  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 22335  005AA0  0012               	return	
 22336  005AA2                     __end_of_I2cSlv_SendI2cMsg:
 22337                           	opt stack 0
 22338                           tosu	equ	0xFFF
 22339                           tosh	equ	0xFFE
 22340                           tosl	equ	0xFFD
 22341                           pclath	equ	0xFFA
 22342                           tblptru	equ	0xFF8
 22343                           tblptrh	equ	0xFF7
 22344                           tblptrl	equ	0xFF6
 22345                           tablat	equ	0xFF5
 22346                           prodh	equ	0xFF4
 22347                           prodl	equ	0xFF3
 22348                           intcon	equ	0xFF2
 22349                           intcon2	equ	0xFF1
 22350                           intcon3	equ	0xFF0
 22351                           indf0	equ	0xFEF
 22352                           postinc0	equ	0xFEE
 22353                           plusw0	equ	0xFEB
 22354                           fsr0h	equ	0xFEA
 22355                           fsr0l	equ	0xFE9
 22356                           wreg	equ	0xFE8
 22357                           indf1	equ	0xFE7
 22358                           postinc1	equ	0xFE6
 22359                           postdec1	equ	0xFE5
 22360                           fsr1h	equ	0xFE2
 22361                           fsr1l	equ	0xFE1
 22362                           indf2	equ	0xFDF
 22363                           postinc2	equ	0xFDE
 22364                           postdec2	equ	0xFDD
 22365                           plusw2	equ	0xFDB
 22366                           fsr2h	equ	0xFDA
 22367                           fsr2l	equ	0xFD9
 22368                           status	equ	0xFD8
 22369                           
 22370 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 22371 ;; Defined at:
 22372 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22373 ;; Parameters:    Size  Location     Type
 22374 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 22375 ;;		 -> MyApp_Task@phone(14), Terminal@TermRxBuffer(50), 
 22376 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22377 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 22378 ;; Auto vars:     Size  Location     Type
 22379 ;;  RxSts           1   36[BANK0 ] unsigned char 
 22380 ;; Return value:  Size  Location     Type
 22381 ;;                  1    wreg      unsigned char 
 22382 ;; Registers used:
 22383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22384 ;; Tracked objects:
 22385 ;;		On entry : 0/0
 22386 ;;		On exit  : 0/0
 22387 ;;		Unchanged: 0/0
 22388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22392 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22393 ;;Total ram usage:        5 bytes
 22394 ;; Hardware stack levels used:    1
 22395 ;; Hardware stack levels required when called:   12
 22396 ;; This function calls:
 22397 ;;		_GenerateEvt
 22398 ;; This function is called by:
 22399 ;;		_I2cSlv_QueryI2cData
 22400 ;;		_Terminal
 22401 ;; This function uses a non-reentrant model
 22402 ;;
 22403                           
 22404                           	psect	text104
 22405  0059A6                     __ptext104:
 22406                           	opt stack 0
 22407  0059A6                     _I2cSlv_ReceiveI2cMsg:
 22408                           	opt stack 13
 22409                           
 22410                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 22411                           
 22412                           ; BSR set to: 0
 22413                           ;incstack = 0
 22414  0059A6  0E00               	movlw	0
 22415  0059A8  0100               	movlb	0	; () banked
 22416  0059AA  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 22420  0059AC  0E02               	movlw	2
 22421  0059AE  19CE               	xorwf	_I2cComSts& (0+255),w,b
 22422  0059B0  B4D8               	btfsc	status,2,c
 22423  0059B2  D016               	goto	l1414
 22424                           
 22425                           ; BSR set to: 0
 22426                           ;i2c_slv.c: 294: {
 22427                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 22428  0059B4  C082  F398         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 22429                           
 22430                           ; BSR set to: 0
 22431                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 22432  0059B8  0E01               	movlw	1
 22433  0059BA  0103               	movlb	3	; () banked
 22434  0059BC  6F99               	movwf	(_I2cRxPacket+1)& (0+255),b
 22435                           
 22436                           ; BSR set to: 3
 22437                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 22438  0059BE  C083  F39C         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 22439                           
 22440                           ; BSR set to: 3
 22441                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 22442  0059C2  C080  F39A         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 22443  0059C6  C081  F39B         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 22444                           
 22445                           ; BSR set to: 3
 22446                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 22447  0059CA  0ED7               	movlw	low _I2cReadDataEvt
 22448  0059CC  0100               	movlb	0	; () banked
 22449  0059CE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22450  0059D0  0E00               	movlw	high _I2cReadDataEvt
 22451  0059D2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22452  0059D4  ECA2  F030         	call	_GenerateEvt	;wreg free
 22453                           
 22454                           ;i2c_slv.c: 304: RxSts = 1u;
 22455  0059D8  0E01               	movlw	1
 22456  0059DA  0100               	movlb	0	; () banked
 22457  0059DC  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22458                           
 22459                           ;i2c_slv.c: 305: }
 22460  0059DE  0012               	return	
 22461  0059E0                     l1414:
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;i2c_slv.c: 306: else
 22465                           ;i2c_slv.c: 307: {
 22466                           ;i2c_slv.c: 309: RxSts = 0u;
 22467                           
 22468                           ; BSR set to: 0
 22469  0059E0  0E00               	movlw	0
 22470  0059E2  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22471                           
 22472                           ; BSR set to: 0
 22473  0059E4  0012               	return	
 22474  0059E6                     __end_of_I2cSlv_ReceiveI2cMsg:
 22475                           	opt stack 0
 22476                           tosu	equ	0xFFF
 22477                           tosh	equ	0xFFE
 22478                           tosl	equ	0xFFD
 22479                           pclath	equ	0xFFA
 22480                           tblptru	equ	0xFF8
 22481                           tblptrh	equ	0xFF7
 22482                           tblptrl	equ	0xFF6
 22483                           tablat	equ	0xFF5
 22484                           prodh	equ	0xFF4
 22485                           prodl	equ	0xFF3
 22486                           intcon	equ	0xFF2
 22487                           intcon2	equ	0xFF1
 22488                           intcon3	equ	0xFF0
 22489                           indf0	equ	0xFEF
 22490                           postinc0	equ	0xFEE
 22491                           plusw0	equ	0xFEB
 22492                           fsr0h	equ	0xFEA
 22493                           fsr0l	equ	0xFE9
 22494                           wreg	equ	0xFE8
 22495                           indf1	equ	0xFE7
 22496                           postinc1	equ	0xFE6
 22497                           postdec1	equ	0xFE5
 22498                           fsr1h	equ	0xFE2
 22499                           fsr1l	equ	0xFE1
 22500                           indf2	equ	0xFDF
 22501                           postinc2	equ	0xFDE
 22502                           postdec2	equ	0xFDD
 22503                           plusw2	equ	0xFDB
 22504                           fsr2h	equ	0xFDA
 22505                           fsr2l	equ	0xFD9
 22506                           status	equ	0xFD8
 22507                           
 22508 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 22509 ;; Defined at:
 22510 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22511 ;; Parameters:    Size  Location     Type
 22512 ;;		None
 22513 ;; Auto vars:     Size  Location     Type
 22514 ;;  Result          1   33[BANK0 ] enum E8931
 22515 ;; Return value:  Size  Location     Type
 22516 ;;                  1    wreg      enum E8931
 22517 ;; Registers used:
 22518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22519 ;; Tracked objects:
 22520 ;;		On entry : 0/0
 22521 ;;		On exit  : 0/0
 22522 ;;		Unchanged: 0/0
 22523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22527 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22528 ;;Total ram usage:        1 bytes
 22529 ;; Hardware stack levels used:    1
 22530 ;; Hardware stack levels required when called:   12
 22531 ;; This function calls:
 22532 ;;		_ReceiveEvt
 22533 ;; This function is called by:
 22534 ;;		_I2cSlv_QueryI2cData
 22535 ;;		_Terminal
 22536 ;; This function uses a non-reentrant model
 22537 ;;
 22538                           
 22539                           	psect	text105
 22540  005FF2                     __ptext105:
 22541                           	opt stack 0
 22542  005FF2                     _I2cSlv_I2cReadMsgSts:
 22543                           	opt stack 13
 22544                           
 22545                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 22546                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;incstack = 0
 22550  005FF2  0E9D               	movlw	low (_I2cRxPacket+5)
 22551  005FF4  0100               	movlb	0	; () banked
 22552  005FF6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22553  005FF8  0E03               	movlw	high (_I2cRxPacket+5)
 22554  005FFA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22555  005FFC  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 22556  006000  0900               	iorlw	0
 22557  006002  B4D8               	btfsc	status,2,c
 22558  006004  D002               	goto	l1419
 22559                           
 22560                           ;i2c_slv.c: 331: {
 22561                           ;i2c_slv.c: 332: Result = MessageReceived;
 22562  006006  0E01               	movlw	1
 22563  006008  D001               	goto	L32
 22564  00600A                     l1419:
 22565                           
 22566                           ;i2c_slv.c: 334: else
 22567                           ;i2c_slv.c: 335: {
 22568                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 22569                           
 22570                           ; BSR set to: 0
 22571  00600A  0E00               	movlw	0
 22572  00600C                     L32:
 22573  00600C  0100               	movlb	0	; () banked
 22574  00600E  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 22575                           
 22576                           ; BSR set to: 0
 22577                           ;i2c_slv.c: 337: }
 22578                           ;i2c_slv.c: 339: return Result;
 22579  006010  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 22580  006012  0012               	return	
 22581  006014                     __end_of_I2cSlv_I2cReadMsgSts:
 22582                           	opt stack 0
 22583                           tosu	equ	0xFFF
 22584                           tosh	equ	0xFFE
 22585                           tosl	equ	0xFFD
 22586                           pclath	equ	0xFFA
 22587                           tblptru	equ	0xFF8
 22588                           tblptrh	equ	0xFF7
 22589                           tblptrl	equ	0xFF6
 22590                           tablat	equ	0xFF5
 22591                           prodh	equ	0xFF4
 22592                           prodl	equ	0xFF3
 22593                           intcon	equ	0xFF2
 22594                           intcon2	equ	0xFF1
 22595                           intcon3	equ	0xFF0
 22596                           indf0	equ	0xFEF
 22597                           postinc0	equ	0xFEE
 22598                           plusw0	equ	0xFEB
 22599                           fsr0h	equ	0xFEA
 22600                           fsr0l	equ	0xFE9
 22601                           wreg	equ	0xFE8
 22602                           indf1	equ	0xFE7
 22603                           postinc1	equ	0xFE6
 22604                           postdec1	equ	0xFE5
 22605                           fsr1h	equ	0xFE2
 22606                           fsr1l	equ	0xFE1
 22607                           indf2	equ	0xFDF
 22608                           postinc2	equ	0xFDE
 22609                           postdec2	equ	0xFDD
 22610                           plusw2	equ	0xFDB
 22611                           fsr2h	equ	0xFDA
 22612                           fsr2l	equ	0xFD9
 22613                           status	equ	0xFD8
 22614                           
 22615 ;; *************** function _UartSetConfig *****************
 22616 ;; Defined at:
 22617 ;;		line 189 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22618 ;; Parameters:    Size  Location     Type
 22619 ;;		None
 22620 ;; Auto vars:     Size  Location     Type
 22621 ;;		None
 22622 ;; Return value:  Size  Location     Type
 22623 ;;                  1    wreg      void 
 22624 ;; Registers used:
 22625 ;;		wreg, status,2
 22626 ;; Tracked objects:
 22627 ;;		On entry : 0/0
 22628 ;;		On exit  : 0/0
 22629 ;;		Unchanged: 0/0
 22630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22635 ;;Total ram usage:        0 bytes
 22636 ;; Hardware stack levels used:    1
 22637 ;; Hardware stack levels required when called:   11
 22638 ;; This function calls:
 22639 ;;		Nothing
 22640 ;; This function is called by:
 22641 ;;		_Mdm_MainTask
 22642 ;; This function uses a non-reentrant model
 22643 ;;
 22644                           
 22645                           	psect	text106
 22646  00520E                     __ptext106:
 22647                           	opt stack 0
 22648  00520E                     _UartSetConfig:
 22649                           	opt stack 16
 22650                           
 22651                           ;mdm_gsm_gprs.c: 191: UartConfig.UartEnable = ((UINT8)(1));
 22652                           
 22653                           ; BSR set to: 0
 22654                           ;incstack = 0
 22655  00520E  0E01               	movlw	1
 22656  005210  0103               	movlb	3	; () banked
 22657  005212  6F24               	movwf	_UartConfig& (0+255),b
 22658                           
 22659                           ;mdm_gsm_gprs.c: 192: UartConfig.UartMode = ((UINT8)(0));
 22660  005214  0E00               	movlw	0
 22661  005216  6F25               	movwf	(_UartConfig+1)& (0+255),b
 22662                           
 22663                           ;mdm_gsm_gprs.c: 194: UartConfig.BaudRateMode = ((UINT8)(0));
 22664  005218  0E00               	movlw	0
 22665  00521A  6F26               	movwf	(_UartConfig+2)& (0+255),b
 22666                           
 22667                           ;mdm_gsm_gprs.c: 199: UartConfig.HighBaudMode = ((UINT8)(0));
 22668  00521C  0E00               	movlw	0
 22669  00521E  6F27               	movwf	(_UartConfig+3)& (0+255),b
 22670                           
 22671                           ;mdm_gsm_gprs.c: 203: UartConfig.Tx9bitMode = ((UINT8)(0));
 22672  005220  0E00               	movlw	0
 22673  005222  6F28               	movwf	(_UartConfig+4)& (0+255),b
 22674                           
 22675                           ;mdm_gsm_gprs.c: 204: UartConfig.Rx9bitMode = ((UINT8)(0));
 22676  005224  0E00               	movlw	0
 22677  005226  6F29               	movwf	(_UartConfig+5)& (0+255),b
 22678                           
 22679                           ;mdm_gsm_gprs.c: 205: UartConfig.TxEnable = ((UINT8)(1));
 22680  005228  0E01               	movlw	1
 22681  00522A  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 22682                           
 22683                           ;mdm_gsm_gprs.c: 206: UartConfig.RxEnable = ((UINT8)(1));
 22684  00522C  0E01               	movlw	1
 22685  00522E  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 22686                           
 22687                           ;mdm_gsm_gprs.c: 207: UartConfig.SendBreakEnable = ((UINT8)(0));
 22688  005230  0E00               	movlw	0
 22689  005232  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 22690                           
 22691                           ;mdm_gsm_gprs.c: 208: UartConfig.AutobaudEnable = ((UINT8)(0));
 22692  005234  0E00               	movlw	0
 22693  005236  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 22694                           
 22695                           ;mdm_gsm_gprs.c: 209: UartConfig.WakeUpEnable = ((UINT8)(0));
 22696  005238  0E00               	movlw	0
 22697  00523A  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 22698                           
 22699                           ;mdm_gsm_gprs.c: 210: UartConfig.TxInterruptEnable = ((UINT8)(0));
 22700  00523C  0E00               	movlw	0
 22701  00523E  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 22702                           
 22703                           ;mdm_gsm_gprs.c: 211: UartConfig.RxInterruptEnable = ((UINT8)(1));
 22704  005240  0E01               	movlw	1
 22705  005242  6F30               	movwf	(_UartConfig+12)& (0+255),b
 22706                           
 22707                           ;mdm_gsm_gprs.c: 212: UartConfig.McuBusClock = ((UINT32)(48000000));
 22708  005244  0E00               	movlw	0
 22709  005246  6F31               	movwf	(_UartConfig+13)& (0+255),b
 22710  005248  0E6C               	movlw	108
 22711  00524A  6F32               	movwf	(_UartConfig+14)& (0+255),b
 22712  00524C  0EDC               	movlw	220
 22713  00524E  6F33               	movwf	(_UartConfig+15)& (0+255),b
 22714  005250  0E02               	movlw	2
 22715  005252  6F34               	movwf	(_UartConfig+16)& (0+255),b
 22716                           
 22717                           ;mdm_gsm_gprs.c: 214: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 22718  005254  0E80               	movlw	128
 22719  005256  6F35               	movwf	(_UartConfig+17)& (0+255),b
 22720  005258  0E25               	movlw	37
 22721  00525A  6F36               	movwf	(_UartConfig+18)& (0+255),b
 22722  00525C  0E00               	movlw	0
 22723  00525E  6F37               	movwf	(_UartConfig+19)& (0+255),b
 22724  005260  0E00               	movlw	0
 22725  005262  6F38               	movwf	(_UartConfig+20)& (0+255),b
 22726                           
 22727                           ; BSR set to: 3
 22728  005264  0012               	return		;funcret
 22729  005266                     __end_of_UartSetConfig:
 22730                           	opt stack 0
 22731                           tosu	equ	0xFFF
 22732                           tosh	equ	0xFFE
 22733                           tosl	equ	0xFFD
 22734                           pclath	equ	0xFFA
 22735                           tblptru	equ	0xFF8
 22736                           tblptrh	equ	0xFF7
 22737                           tblptrl	equ	0xFF6
 22738                           tablat	equ	0xFF5
 22739                           prodh	equ	0xFF4
 22740                           prodl	equ	0xFF3
 22741                           intcon	equ	0xFF2
 22742                           intcon2	equ	0xFF1
 22743                           intcon3	equ	0xFF0
 22744                           indf0	equ	0xFEF
 22745                           postinc0	equ	0xFEE
 22746                           plusw0	equ	0xFEB
 22747                           fsr0h	equ	0xFEA
 22748                           fsr0l	equ	0xFE9
 22749                           wreg	equ	0xFE8
 22750                           indf1	equ	0xFE7
 22751                           postinc1	equ	0xFE6
 22752                           postdec1	equ	0xFE5
 22753                           fsr1h	equ	0xFE2
 22754                           fsr1l	equ	0xFE1
 22755                           indf2	equ	0xFDF
 22756                           postinc2	equ	0xFDE
 22757                           postdec2	equ	0xFDD
 22758                           plusw2	equ	0xFDB
 22759                           fsr2h	equ	0xFDA
 22760                           fsr2l	equ	0xFD9
 22761                           status	equ	0xFD8
 22762                           
 22763 ;; *************** function _TurnOnModem *****************
 22764 ;; Defined at:
 22765 ;;		line 375 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22766 ;; Parameters:    Size  Location     Type
 22767 ;;		None
 22768 ;; Auto vars:     Size  Location     Type
 22769 ;;		None
 22770 ;; Return value:  Size  Location     Type
 22771 ;;                  1    wreg      void 
 22772 ;; Registers used:
 22773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22774 ;; Tracked objects:
 22775 ;;		On entry : 0/0
 22776 ;;		On exit  : 0/0
 22777 ;;		Unchanged: 0/0
 22778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22783 ;;Total ram usage:        0 bytes
 22784 ;; Hardware stack levels used:    1
 22785 ;; Hardware stack levels required when called:   12
 22786 ;; This function calls:
 22787 ;;		_GenerateEvt
 22788 ;; This function is called by:
 22789 ;;		_Mdm_MainTask
 22790 ;; This function uses a non-reentrant model
 22791 ;;
 22792                           
 22793                           	psect	text107
 22794  0057CA                     __ptext107:
 22795                           	opt stack 0
 22796  0057CA                     _TurnOnModem:
 22797                           	opt stack 15
 22798                           
 22799                           ;mdm_gsm_gprs.c: 377: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 22800                           ;mdm_gsm_gprs.c: 378: static UINT16 Counter = 0;
 22801                           ;mdm_gsm_gprs.c: 380: switch (TurnOnMdmState)
 22802                           
 22803                           ; BSR set to: 3
 22804                           ;incstack = 0
 22805  0057CA  D019               	goto	l1009
 22806  0057CC                     
 22807                           ;mdm_gsm_gprs.c: 384: Counter++;
 22808  0057CC  0102               	movlb	2	; () banked
 22809  0057CE  4BDC               	infsnz	TurnOnModem@Counter& (0+255),f,b
 22810  0057D0  2BDD               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 22811                           
 22812                           ; BSR set to: 2
 22813                           ;mdm_gsm_gprs.c: 386: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 22814  0057D2  0EB8               	movlw	184
 22815  0057D4  5DDC               	subwf	TurnOnModem@Counter& (0+255),w,b
 22816  0057D6  0E0B               	movlw	11
 22817  0057D8  59DD               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 22818  0057DA  A0D8               	btfss	status,0,c
 22819  0057DC  0012               	return	
 22820                           
 22821                           ; BSR set to: 2
 22822                           ;mdm_gsm_gprs.c: 387: {
 22823                           ;mdm_gsm_gprs.c: 389: TurnOnMdmState = TurnOnModuleReq;
 22824  0057DE  0E01               	movlw	1
 22825  0057E0  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 22826                           
 22827                           ; BSR set to: 2
 22828                           ;mdm_gsm_gprs.c: 390: }
 22829                           ;mdm_gsm_gprs.c: 391: break;
 22830  0057E2  0012               	return	
 22831  0057E4                     
 22832                           ;mdm_gsm_gprs.c: 395: GenerateEvt(&MdmOnOffPulseRequest);
 22833                           
 22834                           ; BSR set to: 2
 22835  0057E4  0EE1               	movlw	low _MdmOnOffPulseRequest
 22836  0057E6  0100               	movlb	0	; () banked
 22837  0057E8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22838  0057EA  0E00               	movlw	high _MdmOnOffPulseRequest
 22839  0057EC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22840  0057EE  ECA2  F030         	call	_GenerateEvt	;wreg free
 22841                           
 22842                           ;mdm_gsm_gprs.c: 397: MdmStatus = ModemOn;
 22843  0057F2  0E01               	movlw	1
 22844  0057F4  0100               	movlb	0	; () banked
 22845  0057F6  6FD1               	movwf	_MdmStatus& (0+255),b
 22846                           
 22847                           ; BSR set to: 0
 22848                           ;mdm_gsm_gprs.c: 399: TurnOnMdmState = Stop;
 22849  0057F8  0E02               	movlw	2
 22850  0057FA  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 22851                           
 22852                           ; BSR set to: 0
 22853                           ;mdm_gsm_gprs.c: 407: }
 22854                           
 22855                           ; BSR set to: 0
 22856                           ;mdm_gsm_gprs.c: 406: break;
 22857                           
 22858                           ;mdm_gsm_gprs.c: 405: default:
 22859                           
 22860                           ; BSR set to: 0
 22861                           ;mdm_gsm_gprs.c: 403: break;
 22862                           
 22863                           ;mdm_gsm_gprs.c: 402: case Stop:
 22864                           
 22865                           ;mdm_gsm_gprs.c: 400: break;
 22866  0057FC  0012               	return	
 22867  0057FE                     l1009:
 22868                           
 22869                           ; BSR set to: 0
 22870  0057FE  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 22871                           
 22872                           ; Switch size 1, requested type "space"
 22873                           ; Number of cases is 3, Range of values is 0 to 2
 22874                           ; switch strategies available:
 22875                           ; Name         Instructions Cycles
 22876                           ; simple_byte           10     6 (average)
 22877                           ;	Chosen strategy is simple_byte
 22878  005800  0A00               	xorlw	0	; case 0
 22879  005802  B4D8               	btfsc	status,2,c
 22880  005804  D7E3               	goto	l1010
 22881  005806  0A01               	xorlw	1	; case 1
 22882  005808  B4D8               	btfsc	status,2,c
 22883  00580A  D7EC               	goto	l1013
 22884  00580C  0A03               	xorlw	3	; case 2
 22885  00580E  0012               	return	
 22886  005810                     __end_of_TurnOnModem:
 22887                           	opt stack 0
 22888                           tosu	equ	0xFFF
 22889                           tosh	equ	0xFFE
 22890                           tosl	equ	0xFFD
 22891                           pclath	equ	0xFFA
 22892                           tblptru	equ	0xFF8
 22893                           tblptrh	equ	0xFF7
 22894                           tblptrl	equ	0xFF6
 22895                           tablat	equ	0xFF5
 22896                           prodh	equ	0xFF4
 22897                           prodl	equ	0xFF3
 22898                           intcon	equ	0xFF2
 22899                           intcon2	equ	0xFF1
 22900                           intcon3	equ	0xFF0
 22901                           indf0	equ	0xFEF
 22902                           postinc0	equ	0xFEE
 22903                           plusw0	equ	0xFEB
 22904                           fsr0h	equ	0xFEA
 22905                           fsr0l	equ	0xFE9
 22906                           wreg	equ	0xFE8
 22907                           indf1	equ	0xFE7
 22908                           postinc1	equ	0xFE6
 22909                           postdec1	equ	0xFE5
 22910                           fsr1h	equ	0xFE2
 22911                           fsr1l	equ	0xFE1
 22912                           indf2	equ	0xFDF
 22913                           postinc2	equ	0xFDE
 22914                           postdec2	equ	0xFDD
 22915                           plusw2	equ	0xFDB
 22916                           fsr2h	equ	0xFDA
 22917                           fsr2l	equ	0xFD9
 22918                           status	equ	0xFD8
 22919                           
 22920 ;; *************** function _SendSmsSm *****************
 22921 ;; Defined at:
 22922 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22923 ;; Parameters:    Size  Location     Type
 22924 ;;		None
 22925 ;; Auto vars:     Size  Location     Type
 22926 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22927 ;; Return value:  Size  Location     Type
 22928 ;;                  1    wreg      void 
 22929 ;; Registers used:
 22930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22931 ;; Tracked objects:
 22932 ;;		On entry : 0/0
 22933 ;;		On exit  : 0/0
 22934 ;;		Unchanged: 0/0
 22935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22937 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22938 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22939 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22940 ;;Total ram usage:       52 bytes
 22941 ;; Hardware stack levels used:    1
 22942 ;; Hardware stack levels required when called:   14
 22943 ;; This function calls:
 22944 ;;		_OsTmr_GetTimerStatus
 22945 ;;		_OsTmr_StartTimer
 22946 ;;		_ReceiveEvt
 22947 ;;		_StringCopy
 22948 ;;		_Uart_WriteStringLen
 22949 ;; This function is called by:
 22950 ;;		_Mdm_MainTask
 22951 ;; This function uses a non-reentrant model
 22952 ;;
 22953                           
 22954                           	psect	text108
 22955  0019F2                     __ptext108:
 22956                           	opt stack 0
 22957  0019F2                     _SendSmsSm:
 22958                           	opt stack 13
 22959                           
 22960                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22961                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22962                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22963                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 22964                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 22965                           
 22966                           ;incstack = 0
 22967  0019F2  0E03               	movlw	3
 22968  0019F4  0100               	movlb	0	; () banked
 22969  0019F6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 22970  0019F8  A4D8               	btfss	status,2,c
 22971  0019FA  0012               	return	
 22972  0019FC  D0C1               	goto	l1091
 22973  0019FE                     
 22974                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 22975                           
 22976                           ; BSR set to: 0
 22977  0019FE  0EE0               	movlw	low _SendSmsEvent
 22978  001A00  0100               	movlb	0	; () banked
 22979  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22980  001A04  0E00               	movlw	high _SendSmsEvent
 22981  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22982  001A08  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 22983  001A0C  0900               	iorlw	0
 22984  001A0E  B4D8               	btfsc	status,2,c
 22985  001A10  0012               	return	
 22986                           
 22987                           ;mdm_gsm_gprs.c: 671: {
 22988                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 22989  001A12  0E01               	movlw	1
 22990  001A14  0101               	movlb	1	; () banked
 22991  001A16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22992                           
 22993                           ; BSR set to: 1
 22994                           ;mdm_gsm_gprs.c: 674: }
 22995                           ;mdm_gsm_gprs.c: 675: break;
 22996  001A18  0012               	return	
 22997  001A1A                     
 22998                           ; BSR set to: 1
 22999                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 23000                           
 23001                           ; BSR set to: 1
 23002  001A1A  0ECD               	movlw	low STR_5
 23003  001A1C  0100               	movlb	0	; () banked
 23004  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23005  001A20  0EFF               	movlw	high STR_5
 23006  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23007  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 23008  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23009  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 23010  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23011  001A2C  0E00               	movlw	0
 23012  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23013  001A30  0E09               	movlw	9
 23014  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 23015  001A34  EC4A  F028         	call	_StringCopy	;wreg free
 23016                           
 23017                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 23018  001A38  0E86               	movlw	low _PhoneNumber
 23019  001A3A  0100               	movlb	0	; () banked
 23020  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23021  001A3E  0E04               	movlw	high _PhoneNumber
 23022  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23023  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 23024  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23025  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 23026  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23027  001A4A  C0D2  F081         	movff	_PhoneNumbLen,StringCopy@Len
 23028  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23029  001A50  EC4A  F028         	call	_StringCopy	;wreg free
 23030                           
 23031                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 23032  001A54  0100               	movlb	0	; () banked
 23033  001A56  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 23034  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23035  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23036  001A5C  0E09               	movlw	9
 23037  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23038  001A60  0E00               	movlw	0
 23039  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23040  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 23041  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23042  001A68  6ED9               	movwf	fsr2l,c
 23043  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 23044  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23045  001A6E  6EDA               	movwf	fsr2h,c
 23046  001A70  0E22               	movlw	34
 23047  001A72  6EDF               	movwf	indf2,c
 23048                           
 23049                           ; BSR set to: 0
 23050                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 23051  001A74  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 23052  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23053  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23054  001A7A  0E0A               	movlw	10
 23055  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23056  001A7E  0E00               	movlw	0
 23057  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23058  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 23059  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23060  001A86  6ED9               	movwf	fsr2l,c
 23061  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 23062  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23063  001A8C  6EDA               	movwf	fsr2h,c
 23064  001A8E  0E0D               	movlw	13
 23065  001A90  6EDF               	movwf	indf2,c
 23066                           
 23067                           ; BSR set to: 0
 23068                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 23069  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 23070  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23071  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 23072  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23073  001A9A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 23074  001A9C  0F0B               	addlw	11
 23075  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23076  001AA0  0E01               	movlw	1
 23077  001AA2  ECF3  F02C         	call	_Uart_WriteStringLen
 23078                           
 23079                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 23080  001AA6  0EE3               	movlw	low SendSmsSm@SwTimer
 23081  001AA8  0100               	movlb	0	; () banked
 23082  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23083  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 23084  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23085  001AB0  0EC4               	movlw	196
 23086  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23087  001AB4  0E09               	movlw	9
 23088  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23089  001AB8  0E00               	movlw	0
 23090  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23091  001ABC  0E00               	movlw	0
 23092  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23093  001AC0  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 23094                           
 23095                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 23096  001AC4  0E05               	movlw	5
 23097  001AC6  0101               	movlb	1	; () banked
 23098  001AC8  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23099                           
 23100                           ; BSR set to: 1
 23101                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 23102  001ACA  0E02               	movlw	2
 23103  001ACC  6FF2               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 23104                           
 23105                           ;mdm_gsm_gprs.c: 691: break;
 23106  001ACE  0012               	return	
 23107  001AD0                     
 23108                           ; BSR set to: 1
 23109                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 23110                           
 23111                           ; BSR set to: 1
 23112  001AD0  0E0A               	movlw	10
 23113  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 23114                           
 23115                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 23116  001AD4  0E0D               	movlw	13
 23117  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 23118                           
 23119                           ; BSR set to: 1
 23120                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 23121  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 23122  001ADA  0100               	movlb	0	; () banked
 23123  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23124  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 23125  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23126  001AE2  0E02               	movlw	2
 23127  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23128  001AE6  0E01               	movlw	1
 23129  001AE8  ECF3  F02C         	call	_Uart_WriteStringLen
 23130                           
 23131                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 23132  001AEC  0E03               	movlw	3
 23133  001AEE  0101               	movlb	1	; () banked
 23134  001AF0  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23135                           
 23136                           ;mdm_gsm_gprs.c: 701: break;
 23137  001AF2  0012               	return	
 23138  001AF4                     
 23139                           ; BSR set to: 1
 23140                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 23141                           
 23142                           ; BSR set to: 1
 23143  001AF4  0E3C               	movlw	low _NewStringReceived
 23144  001AF6  0100               	movlb	0	; () banked
 23145  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23146  001AFA  0E00               	movlw	high _NewStringReceived
 23147  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23148  001AFE  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 23149  001B02  0900               	iorlw	0
 23150  001B04  B4D8               	btfsc	status,2,c
 23151  001B06  0012               	return	
 23152                           
 23153                           ;mdm_gsm_gprs.c: 706: {
 23154                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 23155  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 23156  001B0C  0A3E               	xorlw	62
 23157  001B0E  A4D8               	btfss	status,2,c
 23158  001B10  0012               	return	
 23159                           
 23160                           ;mdm_gsm_gprs.c: 709: {
 23161                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 23162  001B12  0E04               	movlw	4
 23163  001B14  0101               	movlb	1	; () banked
 23164  001B16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23165                           
 23166                           ; BSR set to: 1
 23167                           ;mdm_gsm_gprs.c: 712: }
 23168                           ;mdm_gsm_gprs.c: 713: }
 23169                           ;mdm_gsm_gprs.c: 714: break;
 23170                           
 23171                           ; BSR set to: 1
 23172  001B18  0012               	return	
 23173  001B1A                     
 23174                           ; BSR set to: 1
 23175                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 23176                           
 23177                           ; BSR set to: 1
 23178  001B1A  0E72               	movlw	low _MessageText
 23179  001B1C  0100               	movlb	0	; () banked
 23180  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23181  001B20  0E05               	movlw	high _MessageText
 23182  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23183  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 23184  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23185  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 23186  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23187  001B2C  C0D3  F081         	movff	_SmsLen,StringCopy@Len
 23188  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23189  001B32  EC4A  F028         	call	_StringCopy	;wreg free
 23190                           
 23191                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 23192  001B36  0100               	movlb	0	; () banked
 23193  001B38  51D3               	movf	_SmsLen& (0+255),w,b
 23194  001B3A  0D01               	mullw	1
 23195  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 23196  001B3E  24F3               	addwf	prodl,w,c
 23197  001B40  6ED9               	movwf	fsr2l,c
 23198  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 23199  001B44  20F4               	addwfc	prodh,w,c
 23200  001B46  6EDA               	movwf	fsr2h,c
 23201  001B48  0E1A               	movlw	26
 23202  001B4A  6EDF               	movwf	indf2,c
 23203                           
 23204                           ; BSR set to: 0
 23205                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 23206  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 23207  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23208  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 23209  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23210  001B54  29D3               	incf	_SmsLen& (0+255),w,b
 23211  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23212  001B58  0E01               	movlw	1
 23213  001B5A  ECF3  F02C         	call	_Uart_WriteStringLen
 23214                           
 23215                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 23216  001B5E  0E00               	movlw	0
 23217  001B60  0101               	movlb	1	; () banked
 23218  001B62  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23219                           
 23220                           ;mdm_gsm_gprs.c: 725: break;
 23221  001B64  0012               	return	
 23222  001B66                     
 23223                           ; BSR set to: 1
 23224                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 23225                           
 23226                           ; BSR set to: 1
 23227  001B66  0EE3               	movlw	low SendSmsSm@SwTimer
 23228  001B68  0100               	movlb	0	; () banked
 23229  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23230  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 23231  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23232  001B70  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 23233  001B74  06E8               	decf	wreg,f,c
 23234  001B76  A4D8               	btfss	status,2,c
 23235  001B78  0012               	return	
 23236                           
 23237                           ;mdm_gsm_gprs.c: 730: {
 23238                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 23239  001B7A  C1F2  F1F3         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 23240                           
 23241                           ;mdm_gsm_gprs.c: 738: }
 23242                           
 23243                           ;mdm_gsm_gprs.c: 737: break;
 23244                           
 23245                           ;mdm_gsm_gprs.c: 736: default:
 23246                           
 23247                           ;mdm_gsm_gprs.c: 733: }
 23248                           ;mdm_gsm_gprs.c: 734: break;
 23249  001B7E  0012               	return	
 23250  001B80                     l1091:
 23251  001B80  0101               	movlb	1	; () banked
 23252  001B82  51F3               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 23253                           
 23254                           ; Switch size 1, requested type "space"
 23255                           ; Number of cases is 6, Range of values is 0 to 5
 23256                           ; switch strategies available:
 23257                           ; Name         Instructions Cycles
 23258                           ; simple_byte           19    10 (average)
 23259                           ;	Chosen strategy is simple_byte
 23260  001B84  0A00               	xorlw	0	; case 0
 23261  001B86  B4D8               	btfsc	status,2,c
 23262  001B88  D73A               	goto	l1092
 23263  001B8A  0A01               	xorlw	1	; case 1
 23264  001B8C  B4D8               	btfsc	status,2,c
 23265  001B8E  D745               	goto	l1095
 23266  001B90  0A03               	xorlw	3	; case 2
 23267  001B92  B4D8               	btfsc	status,2,c
 23268  001B94  D79D               	goto	l1096
 23269  001B96  0A01               	xorlw	1	; case 3
 23270  001B98  B4D8               	btfsc	status,2,c
 23271  001B9A  D7AC               	goto	l1097
 23272  001B9C  0A07               	xorlw	7	; case 4
 23273  001B9E  B4D8               	btfsc	status,2,c
 23274  001BA0  D7BC               	goto	l1100
 23275  001BA2  0A01               	xorlw	1	; case 5
 23276  001BA4  A4D8               	btfss	status,2,c
 23277                           
 23278                           ; BSR set to: 1
 23279  001BA6  0012               	return	
 23280  001BA8  D7DE               	goto	l1101
 23281  001BAA                     __end_of_SendSmsSm:
 23282                           	opt stack 0
 23283                           tosu	equ	0xFFF
 23284                           tosh	equ	0xFFE
 23285                           tosl	equ	0xFFD
 23286                           pclath	equ	0xFFA
 23287                           tblptru	equ	0xFF8
 23288                           tblptrh	equ	0xFF7
 23289                           tblptrl	equ	0xFF6
 23290                           tablat	equ	0xFF5
 23291                           prodh	equ	0xFF4
 23292                           prodl	equ	0xFF3
 23293                           intcon	equ	0xFF2
 23294                           intcon2	equ	0xFF1
 23295                           intcon3	equ	0xFF0
 23296                           indf0	equ	0xFEF
 23297                           postinc0	equ	0xFEE
 23298                           plusw0	equ	0xFEB
 23299                           fsr0h	equ	0xFEA
 23300                           fsr0l	equ	0xFE9
 23301                           wreg	equ	0xFE8
 23302                           indf1	equ	0xFE7
 23303                           postinc1	equ	0xFE6
 23304                           postdec1	equ	0xFE5
 23305                           fsr1h	equ	0xFE2
 23306                           fsr1l	equ	0xFE1
 23307                           indf2	equ	0xFDF
 23308                           postinc2	equ	0xFDE
 23309                           postdec2	equ	0xFDD
 23310                           plusw2	equ	0xFDB
 23311                           fsr2h	equ	0xFDA
 23312                           fsr2l	equ	0xFD9
 23313                           status	equ	0xFD8
 23314                           
 23315 ;; *************** function _Uart_WriteStringLen *****************
 23316 ;; Defined at:
 23317 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23318 ;; Parameters:    Size  Location     Type
 23319 ;;  Module          1    wreg     unsigned char 
 23320 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 23321 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 23322 ;;  Len             1   34[BANK0 ] unsigned char 
 23323 ;; Auto vars:     Size  Location     Type
 23324 ;;  Module          1   36[BANK0 ] unsigned char 
 23325 ;;  Index           1   35[BANK0 ] unsigned char 
 23326 ;; Return value:  Size  Location     Type
 23327 ;;                  1    wreg      void 
 23328 ;; Registers used:
 23329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23330 ;; Tracked objects:
 23331 ;;		On entry : 0/0
 23332 ;;		On exit  : 0/0
 23333 ;;		Unchanged: 0/0
 23334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23335 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23336 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23338 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23339 ;;Total ram usage:        5 bytes
 23340 ;; Hardware stack levels used:    1
 23341 ;; Hardware stack levels required when called:   12
 23342 ;; This function calls:
 23343 ;;		_UartTxBufferStatus
 23344 ;;		_UartWriteByte
 23345 ;; This function is called by:
 23346 ;;		_SendSmsSm
 23347 ;;		_GsmGprsTerminal
 23348 ;; This function uses a non-reentrant model
 23349 ;;
 23350                           
 23351                           	psect	text109
 23352  0059E6                     __ptext109:
 23353                           	opt stack 0
 23354  0059E6                     _Uart_WriteStringLen:
 23355                           	opt stack 14
 23356                           
 23357                           ;incstack = 0
 23358                           ;Uart_WriteStringLen@Module stored from wreg
 23359  0059E6  0100               	movlb	0	; () banked
 23360  0059E8  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 23361                           
 23362                           ;uart_drv.c: 544: UINT8 Index;
 23363                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 23364  0059EA  0E00               	movlw	0
 23365  0059EC  0100               	movlb	0	; () banked
 23366  0059EE  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 23367  0059F0  D015               	goto	l715
 23368  0059F2                     
 23369                           ; BSR set to: 0
 23370                           ;uart_drv.c: 547: {
 23371                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 23372                           
 23373                           ; BSR set to: 0
 23374  0059F2  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 23375  0059F6  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 23376  0059FA  50DF               	movf	indf2,w,c
 23377  0059FC  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 23378  0059FE  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23379  005A00  EC1A  F030         	call	_UartWriteByte
 23380                           
 23381                           ;uart_drv.c: 551: StringToWrite++;
 23382  005A04  0100               	movlb	0	; () banked
 23383  005A06  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 23384  005A08  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 23385  005A0A                     
 23386                           ; BSR set to: 0
 23387                           
 23388                           ; BSR set to: 0
 23389  005A0A  0100               	movlb	0	; () banked
 23390  005A0C  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23391  005A0E  EC2A  F02B         	call	_UartTxBufferStatus
 23392  005A12  06E8               	decf	wreg,f,c
 23393  005A14  B4D8               	btfsc	status,2,c
 23394  005A16  D7F9               	goto	l718
 23395  005A18  0100               	movlb	0	; () banked
 23396  005A1A  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 23397  005A1C                     l715:
 23398                           
 23399                           ; BSR set to: 0
 23400                           
 23401                           ; BSR set to: 0
 23402  005A1C  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 23403  005A1E  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 23404  005A20  B0D8               	btfsc	status,0,c
 23405  005A22  0012               	return	
 23406  005A24  D7E6               	goto	l716
 23407  005A26                     __end_of_Uart_WriteStringLen:
 23408                           	opt stack 0
 23409                           tosu	equ	0xFFF
 23410                           tosh	equ	0xFFE
 23411                           tosl	equ	0xFFD
 23412                           pclath	equ	0xFFA
 23413                           tblptru	equ	0xFF8
 23414                           tblptrh	equ	0xFF7
 23415                           tblptrl	equ	0xFF6
 23416                           tablat	equ	0xFF5
 23417                           prodh	equ	0xFF4
 23418                           prodl	equ	0xFF3
 23419                           intcon	equ	0xFF2
 23420                           intcon2	equ	0xFF1
 23421                           intcon3	equ	0xFF0
 23422                           indf0	equ	0xFEF
 23423                           postinc0	equ	0xFEE
 23424                           plusw0	equ	0xFEB
 23425                           fsr0h	equ	0xFEA
 23426                           fsr0l	equ	0xFE9
 23427                           wreg	equ	0xFE8
 23428                           indf1	equ	0xFE7
 23429                           postinc1	equ	0xFE6
 23430                           postdec1	equ	0xFE5
 23431                           fsr1h	equ	0xFE2
 23432                           fsr1l	equ	0xFE1
 23433                           indf2	equ	0xFDF
 23434                           postinc2	equ	0xFDE
 23435                           postdec2	equ	0xFDD
 23436                           plusw2	equ	0xFDB
 23437                           fsr2h	equ	0xFDA
 23438                           fsr2l	equ	0xFD9
 23439                           status	equ	0xFD8
 23440                           
 23441 ;; *************** function _ModemEvtParser *****************
 23442 ;; Defined at:
 23443 ;;		line 498 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23444 ;; Parameters:    Size  Location     Type
 23445 ;;		None
 23446 ;; Auto vars:     Size  Location     Type
 23447 ;;  CallReadyStr   10   48[BANK0 ] unsigned char [10]
 23448 ;;  SmsString       5   63[BANK0 ] unsigned char [5]
 23449 ;;  ClipString      5   58[BANK0 ] unsigned char [5]
 23450 ;;  RingString      4   68[BANK0 ] unsigned char [4]
 23451 ;;  CompareIdx      1   73[BANK0 ] unsigned char 
 23452 ;;  Match           1   72[BANK0 ] unsigned char 
 23453 ;; Return value:  Size  Location     Type
 23454 ;;                  1    wreg      void 
 23455 ;; Registers used:
 23456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23457 ;; Tracked objects:
 23458 ;;		On entry : 0/0
 23459 ;;		On exit  : 0/0
 23460 ;;		Unchanged: 0/0
 23461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23463 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23465 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23466 ;;Total ram usage:       26 bytes
 23467 ;; Hardware stack levels used:    1
 23468 ;; Hardware stack levels required when called:   12
 23469 ;; This function calls:
 23470 ;;		_GenerateEvt
 23471 ;;		_ReceiveEvt
 23472 ;;		_StringCompare
 23473 ;;		_StringCopy
 23474 ;;		_Uart_ClearRxBuffer
 23475 ;; This function is called by:
 23476 ;;		_Mdm_MainTask
 23477 ;; This function uses a non-reentrant model
 23478 ;;
 23479                           
 23480                           	psect	text110
 23481  001D32                     __ptext110:
 23482                           	opt stack 0
 23483  001D32                     _ModemEvtParser:
 23484                           	opt stack 15
 23485                           
 23486                           ;mdm_gsm_gprs.c: 500: UINT8 RingString[] = {'R','I','N','G'};
 23487                           
 23488                           ; BSR set to: 0
 23489                           ;incstack = 0
 23490  001D32  C3C4  F0A4         	movff	ModemEvtParser@F9104,ModemEvtParser@RingString
 23491  001D36  C3C5  F0A5         	movff	ModemEvtParser@F9104+1,ModemEvtParser@RingString+1
 23492  001D3A  C3C6  F0A6         	movff	ModemEvtParser@F9104+2,ModemEvtParser@RingString+2
 23493  001D3E  C3C7  F0A7         	movff	ModemEvtParser@F9104+3,ModemEvtParser@RingString+3
 23494                           
 23495                           ;mdm_gsm_gprs.c: 501: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 23496  001D42  EE23  F0BF         	lfsr	2,ModemEvtParser@F9106
 23497  001D46  EE10  F09A         	lfsr	1,ModemEvtParser@ClipString
 23498  001D4A  0E04               	movlw	4
 23499  001D4C                     u13391:
 23500  001D4C  CFDB FFE3          	movff	plusw2,plusw1
 23501  001D50  06E8               	decf	wreg,f,c
 23502  001D52  E2FC               	bc	u13391
 23503                           
 23504                           ;mdm_gsm_gprs.c: 502: UINT8 SmsString[] = {'+','C','M','T','I'};
 23505  001D54  EE23  F0BA         	lfsr	2,ModemEvtParser@F9108
 23506  001D58  EE10  F09F         	lfsr	1,ModemEvtParser@SmsString
 23507  001D5C  0E04               	movlw	4
 23508  001D5E                     u13401:
 23509  001D5E  CFDB FFE3          	movff	plusw2,plusw1
 23510  001D62  06E8               	decf	wreg,f,c
 23511  001D64  E2FC               	bc	u13401
 23512                           
 23513                           ;mdm_gsm_gprs.c: 503: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 23514  001D66  EE24  F0BF         	lfsr	2,ModemEvtParser@F9110
 23515  001D6A  EE10  F090         	lfsr	1,ModemEvtParser@CallReadyString
 23516  001D6E  0E09               	movlw	9
 23517  001D70                     u13411:
 23518  001D70  CFDB FFE3          	movff	plusw2,plusw1
 23519  001D74  06E8               	decf	wreg,f,c
 23520  001D76  E2FC               	bc	u13411
 23521                           
 23522                           ;mdm_gsm_gprs.c: 504: UINT8 CompareIdx = 0;
 23523  001D78  0E00               	movlw	0
 23524  001D7A  0100               	movlb	0	; () banked
 23525  001D7C  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23526                           
 23527                           ; BSR set to: 0
 23528                           ;mdm_gsm_gprs.c: 505: UINT8 Match = 0;
 23529  001D7E  0E00               	movlw	0
 23530  001D80  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23531                           
 23532                           ; BSR set to: 0
 23533                           ;mdm_gsm_gprs.c: 508: if (ReceiveEvt(&NewMdmEvtParserRequest))
 23534  001D82  0E3B               	movlw	low _NewMdmEvtParserRequest
 23535  001D84  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23536  001D86  0E00               	movlw	high _NewMdmEvtParserRequest
 23537  001D88  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23538  001D8A  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 23539  001D8E  0900               	iorlw	0
 23540  001D90  B4D8               	btfsc	status,2,c
 23541  001D92  0012               	return	
 23542                           
 23543                           ;mdm_gsm_gprs.c: 509: {
 23544                           ;mdm_gsm_gprs.c: 510: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 23545  001D94  0E00               	movlw	0
 23546  001D96  0100               	movlb	0	; () banked
 23547  001D98  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23548  001D9A                     l14065:
 23549                           
 23550                           ; BSR set to: 0
 23551  001D9A  0E03               	movlw	3
 23552  001D9C  65A9               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 23553  001D9E  D077               	goto	l1052
 23554  001DA0  D086               	goto	u13480
 23555  001DA2                     
 23556                           ; BSR set to: 0
 23557                           ;mdm_gsm_gprs.c: 516: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 23558                           
 23559                           ; BSR set to: 0
 23560  001DA2  0EA4               	movlw	low ModemEvtParser@RingString
 23561  001DA4  6F85               	movwf	StringCompare@String1& (0+255),b
 23562  001DA6  0E00               	movlw	high ModemEvtParser@RingString
 23563  001DA8  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23564  001DAA  0E58               	movlw	low _RxBuffer
 23565  001DAC  6F87               	movwf	StringCompare@String2& (0+255),b
 23566  001DAE  0E0C               	movlw	high _RxBuffer
 23567  001DB0  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23568  001DB2  0E00               	movlw	0
 23569  001DB4  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23570  001DB6  0E04               	movlw	4
 23571  001DB8  6F89               	movwf	StringCompare@Len& (0+255),b
 23572  001DBA  EC89  F02A         	call	_StringCompare	;wreg free
 23573  001DBE  0900               	iorlw	0
 23574  001DC0  B4D8               	btfsc	status,2,c
 23575  001DC2  D072               	goto	l1055
 23576                           
 23577                           ;mdm_gsm_gprs.c: 517: {
 23578                           ;mdm_gsm_gprs.c: 519: GenerateEvt(&RingEvent);
 23579  001DC4  0EDF               	movlw	low _RingEvent
 23580  001DC6  0100               	movlb	0	; () banked
 23581  001DC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23582  001DCA  0E00               	movlw	high _RingEvent
 23583  001DCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23584  001DCE  ECA2  F030         	call	_GenerateEvt	;wreg free
 23585  001DD2  D043               	goto	l14089
 23586  001DD4                     
 23587                           ; BSR set to: 0
 23588                           ;mdm_gsm_gprs.c: 527: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 23589                           
 23590                           ; BSR set to: 0
 23591  001DD4  0E9A               	movlw	low ModemEvtParser@ClipString
 23592  001DD6  6F85               	movwf	StringCompare@String1& (0+255),b
 23593  001DD8  0E00               	movlw	high ModemEvtParser@ClipString
 23594  001DDA  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23595  001DDC  0E58               	movlw	low _RxBuffer
 23596  001DDE  6F87               	movwf	StringCompare@String2& (0+255),b
 23597  001DE0  0E0C               	movlw	high _RxBuffer
 23598  001DE2  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23599  001DE4  0E00               	movlw	0
 23600  001DE6  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23601  001DE8  0E05               	movlw	5
 23602  001DEA  6F89               	movwf	StringCompare@Len& (0+255),b
 23603  001DEC  EC89  F02A         	call	_StringCompare	;wreg free
 23604  001DF0  0900               	iorlw	0
 23605  001DF2  B4D8               	btfsc	status,2,c
 23606  001DF4  D059               	goto	l1055
 23607                           
 23608                           ;mdm_gsm_gprs.c: 528: {
 23609                           ;mdm_gsm_gprs.c: 529: StringCopy(RxBuffer + 8, callerNumber, 13);
 23610  001DF6  0E60               	movlw	low (_RxBuffer+8)
 23611  001DF8  0100               	movlb	0	; () banked
 23612  001DFA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23613  001DFC  0E0C               	movlw	high (_RxBuffer+8)
 23614  001DFE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23615  001E00  0E39               	movlw	low _callerNumber
 23616  001E02  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23617  001E04  0E03               	movlw	high _callerNumber
 23618  001E06  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23619  001E08  0E00               	movlw	0
 23620  001E0A  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23621  001E0C  0E0D               	movlw	13
 23622  001E0E  6F81               	movwf	StringCopy@Len& (0+255),b
 23623  001E10  EC4A  F028         	call	_StringCopy	;wreg free
 23624                           
 23625                           ;mdm_gsm_gprs.c: 530: callerNumber[13] = '\0';
 23626  001E14  0E00               	movlw	0
 23627  001E16  0103               	movlb	3	; () banked
 23628  001E18  6F46               	movwf	(_callerNumber+13)& (0+255),b
 23629                           
 23630                           ; BSR set to: 3
 23631                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 23632  001E1A  0EDE               	movlw	low _ClipEvent
 23633  001E1C  0100               	movlb	0	; () banked
 23634  001E1E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23635  001E20  0E00               	movlw	high _ClipEvent
 23636  001E22  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23637  001E24  ECA2  F030         	call	_GenerateEvt	;wreg free
 23638  001E28  D018               	goto	l14089
 23639  001E2A                     
 23640                           ; BSR set to: 0
 23641                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 23642                           
 23643                           ; BSR set to: 0
 23644  001E2A  0E9F               	movlw	low ModemEvtParser@SmsString
 23645  001E2C  6F85               	movwf	StringCompare@String1& (0+255),b
 23646  001E2E  0E00               	movlw	high ModemEvtParser@SmsString
 23647  001E30  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23648  001E32  0E58               	movlw	low _RxBuffer
 23649  001E34  6F87               	movwf	StringCompare@String2& (0+255),b
 23650  001E36  0E0C               	movlw	high _RxBuffer
 23651  001E38  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23652  001E3A  0E00               	movlw	0
 23653  001E3C  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23654  001E3E  0E05               	movlw	5
 23655  001E40  6F89               	movwf	StringCompare@Len& (0+255),b
 23656  001E42  EC89  F02A         	call	_StringCompare	;wreg free
 23657  001E46  0900               	iorlw	0
 23658  001E48  B4D8               	btfsc	status,2,c
 23659  001E4A  D02E               	goto	l1055
 23660                           
 23661                           ;mdm_gsm_gprs.c: 541: {
 23662                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 23663  001E4C  0EDD               	movlw	low _SmsEvent
 23664  001E4E  0100               	movlb	0	; () banked
 23665  001E50  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23666  001E52  0E00               	movlw	high _SmsEvent
 23667  001E54  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23668  001E56  ECA2  F030         	call	_GenerateEvt	;wreg free
 23669  001E5A                     l14089:
 23670                           
 23671                           ;mdm_gsm_gprs.c: 545: Match = 1;
 23672  001E5A  0E01               	movlw	1
 23673  001E5C  0100               	movlb	0	; () banked
 23674  001E5E  D015               	goto	L33
 23675  001E60                     
 23676                           ; BSR set to: 0
 23677                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 23678                           
 23679                           ; BSR set to: 0
 23680  001E60  0E90               	movlw	low ModemEvtParser@CallReadyString
 23681  001E62  6F85               	movwf	StringCompare@String1& (0+255),b
 23682  001E64  0E00               	movlw	high ModemEvtParser@CallReadyString
 23683  001E66  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23684  001E68  0E58               	movlw	low _RxBuffer
 23685  001E6A  6F87               	movwf	StringCompare@String2& (0+255),b
 23686  001E6C  0E0C               	movlw	high _RxBuffer
 23687  001E6E  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23688  001E70  0E00               	movlw	0
 23689  001E72  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23690  001E74  0E0A               	movlw	10
 23691  001E76  6F89               	movwf	StringCompare@Len& (0+255),b
 23692  001E78  EC89  F02A         	call	_StringCompare	;wreg free
 23693  001E7C  0900               	iorlw	0
 23694  001E7E  B4D8               	btfsc	status,2,c
 23695  001E80  D013               	goto	l1055
 23696                           
 23697                           ;mdm_gsm_gprs.c: 552: {
 23698                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 23699  001E82  0E02               	movlw	2
 23700  001E84  0100               	movlb	0	; () banked
 23701  001E86  6FD1               	movwf	_MdmStatus& (0+255),b
 23702                           
 23703                           ;mdm_gsm_gprs.c: 556: Match = 1;
 23704  001E88  0E01               	movlw	1
 23705  001E8A                     L33:
 23706  001E8A  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23707                           
 23708                           ; BSR set to: 0
 23709                           ;mdm_gsm_gprs.c: 562: }
 23710                           
 23711                           ; BSR set to: 0
 23712                           ;mdm_gsm_gprs.c: 561: break;
 23713                           
 23714                           ;mdm_gsm_gprs.c: 560: default:
 23715                           
 23716                           ; BSR set to: 0
 23717                           ;mdm_gsm_gprs.c: 557: }
 23718                           ;mdm_gsm_gprs.c: 558: break;
 23719  001E8C  D00D               	goto	l1055
 23720  001E8E                     l1052:
 23721                           
 23722                           ; BSR set to: 0
 23723                           
 23724                           ; BSR set to: 0
 23725  001E8E  51A9               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 23726                           
 23727                           ; Switch size 1, requested type "space"
 23728                           ; Number of cases is 4, Range of values is 0 to 3
 23729                           ; switch strategies available:
 23730                           ; Name         Instructions Cycles
 23731                           ; simple_byte           13     7 (average)
 23732                           ;	Chosen strategy is simple_byte
 23733  001E90  0A00               	xorlw	0	; case 0
 23734  001E92  B4D8               	btfsc	status,2,c
 23735  001E94  D786               	goto	l1053
 23736  001E96  0A01               	xorlw	1	; case 1
 23737  001E98  B4D8               	btfsc	status,2,c
 23738  001E9A  D7C7               	goto	l1058
 23739  001E9C  0A03               	xorlw	3	; case 2
 23740  001E9E  B4D8               	btfsc	status,2,c
 23741  001EA0  D7DF               	goto	l1060
 23742  001EA2  0A01               	xorlw	1	; case 3
 23743  001EA4  B4D8               	btfsc	status,2,c
 23744  001EA6  D796               	goto	l1056
 23745  001EA8                     l1055:
 23746                           
 23747                           ; BSR set to: 0
 23748  001EA8  0100               	movlb	0	; () banked
 23749  001EAA  2BA9               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 23750  001EAC  D776               	goto	l14065
 23751  001EAE                     u13480:
 23752                           
 23753                           ; BSR set to: 0
 23754                           ;mdm_gsm_gprs.c: 563: }
 23755                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 23756                           
 23757                           ; BSR set to: 0
 23758  001EAE  05A8               	decf	ModemEvtParser@Match& (0+255),w,b
 23759  001EB0  A4D8               	btfss	status,2,c
 23760  001EB2  0012               	return	
 23761                           
 23762                           ; BSR set to: 0
 23763                           ;mdm_gsm_gprs.c: 567: {
 23764                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 23765  001EB4  EC1B  F02E         	call	_Uart_ClearRxBuffer	;wreg free
 23766  001EB8  0012               	return	
 23767  001EBA                     __end_of_ModemEvtParser:
 23768                           	opt stack 0
 23769                           tosu	equ	0xFFF
 23770                           tosh	equ	0xFFE
 23771                           tosl	equ	0xFFD
 23772                           pclath	equ	0xFFA
 23773                           tblptru	equ	0xFF8
 23774                           tblptrh	equ	0xFF7
 23775                           tblptrl	equ	0xFF6
 23776                           tablat	equ	0xFF5
 23777                           prodh	equ	0xFF4
 23778                           prodl	equ	0xFF3
 23779                           intcon	equ	0xFF2
 23780                           intcon2	equ	0xFF1
 23781                           intcon3	equ	0xFF0
 23782                           indf0	equ	0xFEF
 23783                           postinc0	equ	0xFEE
 23784                           plusw0	equ	0xFEB
 23785                           fsr0h	equ	0xFEA
 23786                           fsr0l	equ	0xFE9
 23787                           wreg	equ	0xFE8
 23788                           indf1	equ	0xFE7
 23789                           postinc1	equ	0xFE6
 23790                           postdec1	equ	0xFE5
 23791                           plusw1	equ	0xFE3
 23792                           fsr1h	equ	0xFE2
 23793                           fsr1l	equ	0xFE1
 23794                           indf2	equ	0xFDF
 23795                           postinc2	equ	0xFDE
 23796                           postdec2	equ	0xFDD
 23797                           plusw2	equ	0xFDB
 23798                           fsr2h	equ	0xFDA
 23799                           fsr2l	equ	0xFD9
 23800                           status	equ	0xFD8
 23801                           
 23802 ;; *************** function _Uart_ClearRxBuffer *****************
 23803 ;; Defined at:
 23804 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23805 ;; Parameters:    Size  Location     Type
 23806 ;;		None
 23807 ;; Auto vars:     Size  Location     Type
 23808 ;;  Index           2   29[BANK0 ] unsigned short 
 23809 ;; Return value:  Size  Location     Type
 23810 ;;                  1    wreg      void 
 23811 ;; Registers used:
 23812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23813 ;; Tracked objects:
 23814 ;;		On entry : 0/0
 23815 ;;		On exit  : 0/0
 23816 ;;		Unchanged: 0/0
 23817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23819 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23822 ;;Total ram usage:        2 bytes
 23823 ;; Hardware stack levels used:    1
 23824 ;; Hardware stack levels required when called:   11
 23825 ;; This function calls:
 23826 ;;		Nothing
 23827 ;; This function is called by:
 23828 ;;		_ModemEvtParser
 23829 ;; This function uses a non-reentrant model
 23830 ;;
 23831                           
 23832                           	psect	text111
 23833  005C36                     __ptext111:
 23834                           	opt stack 0
 23835  005C36                     _Uart_ClearRxBuffer:
 23836                           	opt stack 15
 23837                           
 23838                           ;uart_drv.c: 567: UINT16 Index = 0;
 23839                           
 23840                           ;incstack = 0
 23841  005C36  0E00               	movlw	0
 23842  005C38  0100               	movlb	0	; () banked
 23843  005C3A  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23844  005C3C  0E00               	movlw	0
 23845  005C3E  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23846                           
 23847                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 23848  005C40  0E00               	movlw	0
 23849  005C42  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23850  005C44  0E00               	movlw	0
 23851  005C46  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23852  005C48                     l13323:
 23853                           
 23854                           ; BSR set to: 0
 23855  005C48  0E90               	movlw	144
 23856  005C4A  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23857  005C4C  0E01               	movlw	1
 23858  005C4E  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23859  005C50  B0D8               	btfsc	status,0,c
 23860  005C52  0012               	return	
 23861                           
 23862                           ; BSR set to: 0
 23863                           ;uart_drv.c: 571: {
 23864                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 23865                           
 23866                           ; BSR set to: 0
 23867                           
 23868                           ; BSR set to: 0
 23869  005C54  0E58               	movlw	low _RxBuffer
 23870  005C56  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23871  005C58  6ED9               	movwf	fsr2l,c
 23872  005C5A  0E0C               	movlw	high _RxBuffer
 23873  005C5C  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23874  005C5E  6EDA               	movwf	fsr2h,c
 23875  005C60  0E00               	movlw	0
 23876  005C62  6EDF               	movwf	indf2,c
 23877                           
 23878                           ; BSR set to: 0
 23879  005C64  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 23880  005C66  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 23881  005C68  D7EF               	goto	l13323
 23882  005C6A                     __end_of_Uart_ClearRxBuffer:
 23883                           	opt stack 0
 23884                           tosu	equ	0xFFF
 23885                           tosh	equ	0xFFE
 23886                           tosl	equ	0xFFD
 23887                           pclath	equ	0xFFA
 23888                           tblptru	equ	0xFF8
 23889                           tblptrh	equ	0xFF7
 23890                           tblptrl	equ	0xFF6
 23891                           tablat	equ	0xFF5
 23892                           prodh	equ	0xFF4
 23893                           prodl	equ	0xFF3
 23894                           intcon	equ	0xFF2
 23895                           intcon2	equ	0xFF1
 23896                           intcon3	equ	0xFF0
 23897                           indf0	equ	0xFEF
 23898                           postinc0	equ	0xFEE
 23899                           plusw0	equ	0xFEB
 23900                           fsr0h	equ	0xFEA
 23901                           fsr0l	equ	0xFE9
 23902                           wreg	equ	0xFE8
 23903                           indf1	equ	0xFE7
 23904                           postinc1	equ	0xFE6
 23905                           postdec1	equ	0xFE5
 23906                           plusw1	equ	0xFE3
 23907                           fsr1h	equ	0xFE2
 23908                           fsr1l	equ	0xFE1
 23909                           indf2	equ	0xFDF
 23910                           postinc2	equ	0xFDE
 23911                           postdec2	equ	0xFDD
 23912                           plusw2	equ	0xFDB
 23913                           fsr2h	equ	0xFDA
 23914                           fsr2l	equ	0xFD9
 23915                           status	equ	0xFD8
 23916                           
 23917 ;; *************** function _StringCompare *****************
 23918 ;; Defined at:
 23919 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23920 ;; Parameters:    Size  Location     Type
 23921 ;;  String1         2   37[BANK0 ] PTR unsigned char 
 23922 ;;		 -> MyApp_Task@phone(14), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@ClipString
      +(5), 
 23923 ;;		 -> ModemEvtParser@RingString(4), 
 23924 ;;  String2         2   39[BANK0 ] PTR unsigned char 
 23925 ;;		 -> callerNumber(14), RxBuffer(400), 
 23926 ;;  Len             2   41[BANK0 ] unsigned short 
 23927 ;; Auto vars:     Size  Location     Type
 23928 ;;  Index           2   46[BANK0 ] unsigned short 
 23929 ;;  Result          1   45[BANK0 ] unsigned char 
 23930 ;; Return value:  Size  Location     Type
 23931 ;;                  1    wreg      unsigned char 
 23932 ;; Registers used:
 23933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23934 ;; Tracked objects:
 23935 ;;		On entry : 0/0
 23936 ;;		On exit  : 0/0
 23937 ;;		Unchanged: 0/0
 23938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23939 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23940 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23941 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23942 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23943 ;;Total ram usage:       11 bytes
 23944 ;; Hardware stack levels used:    1
 23945 ;; Hardware stack levels required when called:   11
 23946 ;; This function calls:
 23947 ;;		Nothing
 23948 ;; This function is called by:
 23949 ;;		_ModemEvtParser
 23950 ;;		_MyApp_Task
 23951 ;; This function uses a non-reentrant model
 23952 ;;
 23953                           
 23954                           	psect	text112
 23955  005512                     __ptext112:
 23956                           	opt stack 0
 23957  005512                     _StringCompare:
 23958                           	opt stack 16
 23959                           
 23960                           ;sf.c: 77: UINT16 Index = 0;
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;incstack = 0
 23964  005512  0E00               	movlw	0
 23965  005514  0100               	movlb	0	; () banked
 23966  005516  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23967  005518  0E00               	movlw	0
 23968  00551A  6F8E               	movwf	StringCompare@Index& (0+255),b
 23969                           
 23970                           ;sf.c: 78: UINT8 Result = 1;
 23971  00551C  0E01               	movlw	1
 23972  00551E  6F8D               	movwf	StringCompare@Result& (0+255),b
 23973                           
 23974                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23975  005520  0E00               	movlw	0
 23976  005522  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23977  005524  0E00               	movlw	0
 23978  005526  6F8E               	movwf	StringCompare@Index& (0+255),b
 23979  005528  D015               	goto	l2211
 23980  00552A                     
 23981                           ; BSR set to: 0
 23982                           ;sf.c: 82: {
 23983                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23984                           
 23985                           ; BSR set to: 0
 23986  00552A  518E               	movf	StringCompare@Index& (0+255),w,b
 23987  00552C  2587               	addwf	StringCompare@String2& (0+255),w,b
 23988  00552E  6ED9               	movwf	fsr2l,c
 23989  005530  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23990  005532  2188               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23991  005534  6EDA               	movwf	fsr2h,c
 23992  005536  518E               	movf	StringCompare@Index& (0+255),w,b
 23993  005538  2585               	addwf	StringCompare@String1& (0+255),w,b
 23994  00553A  6EE1               	movwf	fsr1l,c
 23995  00553C  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23996  00553E  2186               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23997  005540  6EE2               	movwf	fsr1h,c
 23998  005542  50DE               	movf	postinc2,w,c
 23999  005544  18E6               	xorwf	postinc1,w,c
 24000  005546  B4D8               	btfsc	status,2,c
 24001  005548  D003               	goto	l2213
 24002                           
 24003                           ; BSR set to: 0
 24004                           ;sf.c: 84: {
 24005                           ;sf.c: 85: Result = 0;
 24006  00554A  0E00               	movlw	0
 24007  00554C  6F8D               	movwf	StringCompare@Result& (0+255),b
 24008                           
 24009                           ;sf.c: 86: break;
 24010  00554E  D008               	goto	u12420
 24011  005550                     l2213:
 24012                           
 24013                           ; BSR set to: 0
 24014                           
 24015                           ; BSR set to: 0
 24016  005550  4B8E               	infsnz	StringCompare@Index& (0+255),f,b
 24017  005552  2B8F               	incf	(StringCompare@Index+1)& (0+255),f,b
 24018  005554                     l2211:
 24019                           
 24020                           ; BSR set to: 0
 24021                           
 24022                           ; BSR set to: 0
 24023  005554  5189               	movf	StringCompare@Len& (0+255),w,b
 24024  005556  5D8E               	subwf	StringCompare@Index& (0+255),w,b
 24025  005558  518A               	movf	(StringCompare@Len+1)& (0+255),w,b
 24026  00555A  598F               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 24027  00555C  A0D8               	btfss	status,0,c
 24028  00555E  D7E5               	goto	l2212
 24029  005560                     u12420:
 24030                           
 24031                           ; BSR set to: 0
 24032                           ;sf.c: 87: }
 24033                           ;sf.c: 88: }
 24034                           ;sf.c: 91: return Result;
 24035                           
 24036                           ; BSR set to: 0
 24037  005560  518D               	movf	StringCompare@Result& (0+255),w,b
 24038  005562  0012               	return	
 24039  005564                     __end_of_StringCompare:
 24040                           	opt stack 0
 24041                           tosu	equ	0xFFF
 24042                           tosh	equ	0xFFE
 24043                           tosl	equ	0xFFD
 24044                           pclath	equ	0xFFA
 24045                           tblptru	equ	0xFF8
 24046                           tblptrh	equ	0xFF7
 24047                           tblptrl	equ	0xFF6
 24048                           tablat	equ	0xFF5
 24049                           prodh	equ	0xFF4
 24050                           prodl	equ	0xFF3
 24051                           intcon	equ	0xFF2
 24052                           intcon2	equ	0xFF1
 24053                           intcon3	equ	0xFF0
 24054                           indf0	equ	0xFEF
 24055                           postinc0	equ	0xFEE
 24056                           plusw0	equ	0xFEB
 24057                           fsr0h	equ	0xFEA
 24058                           fsr0l	equ	0xFE9
 24059                           wreg	equ	0xFE8
 24060                           indf1	equ	0xFE7
 24061                           postinc1	equ	0xFE6
 24062                           postdec1	equ	0xFE5
 24063                           plusw1	equ	0xFE3
 24064                           fsr1h	equ	0xFE2
 24065                           fsr1l	equ	0xFE1
 24066                           indf2	equ	0xFDF
 24067                           postinc2	equ	0xFDE
 24068                           postdec2	equ	0xFDD
 24069                           plusw2	equ	0xFDB
 24070                           fsr2h	equ	0xFDA
 24071                           fsr2l	equ	0xFD9
 24072                           status	equ	0xFD8
 24073                           
 24074 ;; *************** function _GetSmsSm *****************
 24075 ;; Defined at:
 24076 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24077 ;; Parameters:    Size  Location     Type
 24078 ;;		None
 24079 ;; Auto vars:     Size  Location     Type
 24080 ;;		None
 24081 ;; Return value:  Size  Location     Type
 24082 ;;                  1    wreg      void 
 24083 ;; Registers used:
 24084 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24085 ;; Tracked objects:
 24086 ;;		On entry : 0/0
 24087 ;;		On exit  : 0/0
 24088 ;;		Unchanged: 0/0
 24089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24094 ;;Total ram usage:        0 bytes
 24095 ;; Hardware stack levels used:    1
 24096 ;; Hardware stack levels required when called:   13
 24097 ;; This function calls:
 24098 ;;		_ClearBuffer
 24099 ;;		_GenerateEvt
 24100 ;;		_ReceiveEvt
 24101 ;;		_StringCopy
 24102 ;;		_Uart_WriteConstString
 24103 ;; This function is called by:
 24104 ;;		_Mdm_MainTask
 24105 ;; This function uses a non-reentrant model
 24106 ;;
 24107                           
 24108                           	psect	text113
 24109  002A94                     __ptext113:
 24110                           	opt stack 0
 24111  002A94                     _GetSmsSm:
 24112                           	opt stack 14
 24113                           
 24114                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 24115                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 24116                           
 24117                           ; BSR set to: 0
 24118                           ;incstack = 0
 24119  002A94  0E03               	movlw	3
 24120  002A96  0100               	movlb	0	; () banked
 24121  002A98  19D1               	xorwf	_MdmStatus& (0+255),w,b
 24122  002A9A  A4D8               	btfss	status,2,c
 24123  002A9C  0012               	return	
 24124  002A9E  D084               	goto	l1070
 24125  002AA0                     
 24126                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 24127                           
 24128                           ; BSR set to: 0
 24129  002AA0  0EDC               	movlw	low _GetSmsText
 24130  002AA2  0100               	movlb	0	; () banked
 24131  002AA4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24132  002AA6  0E00               	movlw	high _GetSmsText
 24133  002AA8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24134  002AAA  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 24135  002AAE  0900               	iorlw	0
 24136  002AB0  B4D8               	btfsc	status,2,c
 24137  002AB2  0012               	return	
 24138                           
 24139                           ;mdm_gsm_gprs.c: 596: {
 24140                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 24141  002AB4  0E01               	movlw	1
 24142  002AB6  0101               	movlb	1	; () banked
 24143  002AB8  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24144                           
 24145                           ; BSR set to: 1
 24146                           ;mdm_gsm_gprs.c: 599: }
 24147                           ;mdm_gsm_gprs.c: 600: break;
 24148  002ABA  0012               	return	
 24149  002ABC                     
 24150                           ; BSR set to: 1
 24151                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 24152                           
 24153                           ; BSR set to: 1
 24154  002ABC  0EC1               	movlw	low STR_4
 24155  002ABE  0100               	movlb	0	; () banked
 24156  002AC0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24157  002AC2  0EFF               	movlw	high STR_4
 24158  002AC4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24159  002AC6  0E01               	movlw	1
 24160  002AC8  EC90  F02C         	call	_Uart_WriteConstString
 24161                           
 24162                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 24163  002ACC  0E02               	movlw	2
 24164  002ACE  0101               	movlb	1	; () banked
 24165  002AD0  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24166                           
 24167                           ;mdm_gsm_gprs.c: 607: break;
 24168  002AD2  0012               	return	
 24169  002AD4                     
 24170                           ; BSR set to: 1
 24171                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 24172                           
 24173                           ; BSR set to: 1
 24174  002AD4  0E3C               	movlw	low _NewStringReceived
 24175  002AD6  0100               	movlb	0	; () banked
 24176  002AD8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24177  002ADA  0E00               	movlw	high _NewStringReceived
 24178  002ADC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24179  002ADE  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 24180  002AE2  0900               	iorlw	0
 24181  002AE4  B4D8               	btfsc	status,2,c
 24182  002AE6  0012               	return	
 24183                           
 24184                           ;mdm_gsm_gprs.c: 612: {
 24185                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 24186  002AE8  CC58  FFE8         	movff	_RxBuffer,wreg
 24187  002AEC  0A2B               	xorlw	43
 24188  002AEE  A4D8               	btfss	status,2,c
 24189  002AF0  0012               	return	
 24190  002AF2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24191  002AF6  0A43               	xorlw	67
 24192  002AF8  A4D8               	btfss	status,2,c
 24193  002AFA  0012               	return	
 24194  002AFC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24195  002B00  0A4D               	xorlw	77
 24196  002B02  A4D8               	btfss	status,2,c
 24197  002B04  0012               	return	
 24198                           
 24199                           ;mdm_gsm_gprs.c: 614: {
 24200                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 24201  002B06  0E00               	movlw	low _Mdm_SmsRx
 24202  002B08  0100               	movlb	0	; () banked
 24203  002B0A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24204  002B0C  0E07               	movlw	high _Mdm_SmsRx
 24205  002B0E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24206  002B10  0E00               	movlw	0
 24207  002B12  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24208  002B14  0E50               	movlw	80
 24209  002B16  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24210  002B18  EC00  F02E         	call	_ClearBuffer	;wreg free
 24211                           
 24212                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 24213  002B1C  0E58               	movlw	low _RxBuffer
 24214  002B1E  0100               	movlb	0	; () banked
 24215  002B20  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24216  002B22  0E0C               	movlw	high _RxBuffer
 24217  002B24  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24218  002B26  0E00               	movlw	low _Mdm_SmsRx
 24219  002B28  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24220  002B2A  0E07               	movlw	high _Mdm_SmsRx
 24221  002B2C  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24222  002B2E  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24223  002B32  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24224  002B36  EC4A  F028         	call	_StringCopy	;wreg free
 24225                           
 24226                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 24227  002B3A  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 24228                           
 24229                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 24230  002B3E  0E03               	movlw	3
 24231  002B40  0101               	movlb	1	; () banked
 24232  002B42  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24233                           
 24234                           ; BSR set to: 1
 24235                           ;mdm_gsm_gprs.c: 622: }
 24236                           ;mdm_gsm_gprs.c: 623: }
 24237                           ;mdm_gsm_gprs.c: 624: break;
 24238                           
 24239                           ; BSR set to: 1
 24240  002B44  0012               	return	
 24241  002B46                     
 24242                           ; BSR set to: 1
 24243                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 24244                           
 24245                           ; BSR set to: 1
 24246  002B46  0E3C               	movlw	low _NewStringReceived
 24247  002B48  0100               	movlb	0	; () banked
 24248  002B4A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24249  002B4C  0E00               	movlw	high _NewStringReceived
 24250  002B4E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24251  002B50  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 24252  002B54  0900               	iorlw	0
 24253  002B56  B4D8               	btfsc	status,2,c
 24254  002B58  0012               	return	
 24255                           
 24256                           ;mdm_gsm_gprs.c: 629: {
 24257                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 24258  002B5A  0E50               	movlw	low (_Mdm_SmsRx+80)
 24259  002B5C  0100               	movlb	0	; () banked
 24260  002B5E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24261  002B60  0E07               	movlw	high (_Mdm_SmsRx+80)
 24262  002B62  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24263  002B64  0E00               	movlw	0
 24264  002B66  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24265  002B68  0E14               	movlw	20
 24266  002B6A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24267  002B6C  EC00  F02E         	call	_ClearBuffer	;wreg free
 24268                           
 24269                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 24270  002B70  0E58               	movlw	low _RxBuffer
 24271  002B72  0100               	movlb	0	; () banked
 24272  002B74  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24273  002B76  0E0C               	movlw	high _RxBuffer
 24274  002B78  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24275  002B7A  0E50               	movlw	low (_Mdm_SmsRx+80)
 24276  002B7C  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24277  002B7E  0E07               	movlw	high (_Mdm_SmsRx+80)
 24278  002B80  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24279  002B82  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24280  002B86  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24281  002B8A  EC4A  F028         	call	_StringCopy	;wreg free
 24282                           
 24283                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 24284  002B8E  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 24285                           
 24286                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 24287  002B92  0E00               	movlw	0
 24288  002B94  0101               	movlb	1	; () banked
 24289  002B96  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24290                           
 24291                           ; BSR set to: 1
 24292                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 24293  002B98  0EDB               	movlw	low _SmsTxtReady
 24294  002B9A  0100               	movlb	0	; () banked
 24295  002B9C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24296  002B9E  0E00               	movlw	high _SmsTxtReady
 24297  002BA0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24298  002BA2  ECA2  F030         	call	_GenerateEvt	;wreg free
 24299                           
 24300                           ;mdm_gsm_gprs.c: 644: }
 24301                           
 24302                           ;mdm_gsm_gprs.c: 643: break;
 24303                           
 24304                           ;mdm_gsm_gprs.c: 642: default:
 24305                           
 24306                           ;mdm_gsm_gprs.c: 639: }
 24307                           ;mdm_gsm_gprs.c: 640: break;
 24308  002BA6  0012               	return	
 24309  002BA8                     l1070:
 24310  002BA8  0101               	movlb	1	; () banked
 24311  002BAA  51F4               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 24312                           
 24313                           ; Switch size 1, requested type "space"
 24314                           ; Number of cases is 4, Range of values is 0 to 3
 24315                           ; switch strategies available:
 24316                           ; Name         Instructions Cycles
 24317                           ; simple_byte           13     7 (average)
 24318                           ;	Chosen strategy is simple_byte
 24319  002BAC  0A00               	xorlw	0	; case 0
 24320  002BAE  B4D8               	btfsc	status,2,c
 24321  002BB0  D777               	goto	l1071
 24322  002BB2  0A01               	xorlw	1	; case 1
 24323  002BB4  B4D8               	btfsc	status,2,c
 24324  002BB6  D782               	goto	l1074
 24325  002BB8  0A03               	xorlw	3	; case 2
 24326  002BBA  B4D8               	btfsc	status,2,c
 24327  002BBC  D78B               	goto	l1075
 24328  002BBE  0A01               	xorlw	1	; case 3
 24329  002BC0  A4D8               	btfss	status,2,c
 24330                           
 24331                           ; BSR set to: 1
 24332  002BC2  0012               	return	
 24333  002BC4  D7C0               	goto	l1078
 24334  002BC6                     __end_of_GetSmsSm:
 24335                           	opt stack 0
 24336                           tosu	equ	0xFFF
 24337                           tosh	equ	0xFFE
 24338                           tosl	equ	0xFFD
 24339                           pclath	equ	0xFFA
 24340                           tblptru	equ	0xFF8
 24341                           tblptrh	equ	0xFF7
 24342                           tblptrl	equ	0xFF6
 24343                           tablat	equ	0xFF5
 24344                           prodh	equ	0xFF4
 24345                           prodl	equ	0xFF3
 24346                           intcon	equ	0xFF2
 24347                           intcon2	equ	0xFF1
 24348                           intcon3	equ	0xFF0
 24349                           indf0	equ	0xFEF
 24350                           postinc0	equ	0xFEE
 24351                           plusw0	equ	0xFEB
 24352                           fsr0h	equ	0xFEA
 24353                           fsr0l	equ	0xFE9
 24354                           wreg	equ	0xFE8
 24355                           indf1	equ	0xFE7
 24356                           postinc1	equ	0xFE6
 24357                           postdec1	equ	0xFE5
 24358                           plusw1	equ	0xFE3
 24359                           fsr1h	equ	0xFE2
 24360                           fsr1l	equ	0xFE1
 24361                           indf2	equ	0xFDF
 24362                           postinc2	equ	0xFDE
 24363                           postdec2	equ	0xFDD
 24364                           plusw2	equ	0xFDB
 24365                           fsr2h	equ	0xFDA
 24366                           fsr2l	equ	0xFD9
 24367                           status	equ	0xFD8
 24368                           
 24369 ;; *************** function _ConfigureModem *****************
 24370 ;; Defined at:
 24371 ;;		line 418 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24372 ;; Parameters:    Size  Location     Type
 24373 ;;		None
 24374 ;; Auto vars:     Size  Location     Type
 24375 ;;		None
 24376 ;; Return value:  Size  Location     Type
 24377 ;;                  1    wreg      void 
 24378 ;; Registers used:
 24379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24380 ;; Tracked objects:
 24381 ;;		On entry : 0/0
 24382 ;;		On exit  : 0/0
 24383 ;;		Unchanged: 0/0
 24384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24389 ;;Total ram usage:        0 bytes
 24390 ;; Hardware stack levels used:    1
 24391 ;; Hardware stack levels required when called:   14
 24392 ;; This function calls:
 24393 ;;		_GenerateEvt
 24394 ;;		_UartSetConfigLow
 24395 ;;		_Uart_InitUartModule
 24396 ;;		_Uart_WriteConstString
 24397 ;; This function is called by:
 24398 ;;		_Mdm_MainTask
 24399 ;; This function uses a non-reentrant model
 24400 ;;
 24401                           
 24402                           	psect	text114
 24403  003928                     __ptext114:
 24404                           	opt stack 0
 24405  003928                     _ConfigureModem:
 24406                           	opt stack 13
 24407                           
 24408                           ;mdm_gsm_gprs.c: 420: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 24409                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType NextState = MdmCfg_Init;
 24410                           ;mdm_gsm_gprs.c: 422: static UINT16 DelayValueMs = 0;
 24411                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayCounter = 0;
 24412                           ;mdm_gsm_gprs.c: 425: switch (MdmConfigState)
 24413                           
 24414                           ;incstack = 0
 24415  003928  D054               	goto	l1027
 24416  00392A                     
 24417                           ;mdm_gsm_gprs.c: 429: if (MdmStatus == ModemReady)
 24418  00392A  0E02               	movlw	2
 24419  00392C  0100               	movlb	0	; () banked
 24420  00392E  19D1               	xorwf	_MdmStatus& (0+255),w,b
 24421  003930  A4D8               	btfss	status,2,c
 24422  003932  0012               	return	
 24423                           
 24424                           ; BSR set to: 0
 24425                           ;mdm_gsm_gprs.c: 430: {
 24426                           ;mdm_gsm_gprs.c: 432: MdmConfigState = MdmCfg_ChangeBaud;
 24427  003934  0E01               	movlw	1
 24428  003936  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24429                           
 24430                           ; BSR set to: 0
 24431                           ;mdm_gsm_gprs.c: 433: }
 24432                           ;mdm_gsm_gprs.c: 434: break;
 24433  003938  0012               	return	
 24434  00393A                     
 24435                           ;mdm_gsm_gprs.c: 438: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 24436                           
 24437                           ; BSR set to: 0
 24438  00393A  0E74               	movlw	low STR_2
 24439  00393C  0100               	movlb	0	; () banked
 24440  00393E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24441  003940  0EFF               	movlw	high STR_2
 24442  003942  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24443  003944  0E01               	movlw	1
 24444  003946  EC90  F02C         	call	_Uart_WriteConstString
 24445                           
 24446                           ;mdm_gsm_gprs.c: 440: UartSetConfigLow();
 24447  00394A  EC5F  F029         	call	_UartSetConfigLow	;wreg free
 24448                           
 24449                           ;mdm_gsm_gprs.c: 442: Uart_InitUartModule(1,&UartConfig);
 24450  00394E  0E24               	movlw	low _UartConfig
 24451  003950  0100               	movlb	0	; () banked
 24452  003952  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 24453  003954  0E03               	movlw	high _UartConfig
 24454  003956  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 24455  003958  0E01               	movlw	1
 24456  00395A  EC5E  F005         	call	_Uart_InitUartModule
 24457                           
 24458                           ;mdm_gsm_gprs.c: 444: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24459  00395E  0E03               	movlw	3
 24460  003960  0102               	movlb	2	; () banked
 24461  003962  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24462  003964  0EE8               	movlw	232
 24463  003966  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24464                           
 24465                           ; BSR set to: 2
 24466                           ;mdm_gsm_gprs.c: 446: NextState = MdmCfg_SetMdmEchoMode;
 24467  003968  0E02               	movlw	2
 24468  00396A  0101               	movlb	1	; () banked
 24469  00396C  6FF5               	movwf	ConfigureModem@NextState& (0+255),b
 24470                           
 24471                           ; BSR set to: 1
 24472                           ;mdm_gsm_gprs.c: 447: MdmConfigState = MdmCfg_Delay;
 24473  00396E  0E04               	movlw	4
 24474  003970  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24475                           
 24476                           ;mdm_gsm_gprs.c: 448: break;
 24477  003972  0012               	return	
 24478  003974                     
 24479                           ;mdm_gsm_gprs.c: 452: Uart_WriteConstString(1,"ATE0\r\n");
 24480                           
 24481                           ; BSR set to: 1
 24482  003974  0EDE               	movlw	low STR_3
 24483  003976  0100               	movlb	0	; () banked
 24484  003978  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24485  00397A  0EFF               	movlw	high STR_3
 24486  00397C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24487  00397E  0E01               	movlw	1
 24488  003980  EC90  F02C         	call	_Uart_WriteConstString
 24489                           
 24490                           ;mdm_gsm_gprs.c: 454: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24491  003984  0E03               	movlw	3
 24492  003986  0102               	movlb	2	; () banked
 24493  003988  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24494  00398A  0EE8               	movlw	232
 24495  00398C  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24496                           
 24497                           ; BSR set to: 2
 24498                           ;mdm_gsm_gprs.c: 456: NextState = MdmCfg_UpdateMdmSts;
 24499  00398E  0E05               	movlw	5
 24500  003990  0101               	movlb	1	; () banked
 24501  003992  6FF5               	movwf	ConfigureModem@NextState& (0+255),b
 24502                           
 24503                           ; BSR set to: 1
 24504                           ;mdm_gsm_gprs.c: 457: MdmConfigState = MdmCfg_Delay;
 24505  003994  0E04               	movlw	4
 24506  003996  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24507                           
 24508                           ;mdm_gsm_gprs.c: 458: break;
 24509  003998  0012               	return	
 24510  00399A                     
 24511                           ;mdm_gsm_gprs.c: 462: DelayCounter++;
 24512                           
 24513                           ; BSR set to: 1
 24514  00399A  0102               	movlb	2	; () banked
 24515  00399C  4BD8               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 24516  00399E  2BD9               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 24517                           
 24518                           ; BSR set to: 2
 24519                           ;mdm_gsm_gprs.c: 464: if (DelayCounter >= DelayValueMs)
 24520  0039A0  51DA               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 24521  0039A2  5DD8               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 24522  0039A4  51DB               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 24523  0039A6  59D9               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 24524  0039A8  A0D8               	btfss	status,0,c
 24525  0039AA  0012               	return	
 24526                           
 24527                           ; BSR set to: 2
 24528                           ;mdm_gsm_gprs.c: 465: {
 24529                           ;mdm_gsm_gprs.c: 467: DelayCounter = 0;
 24530  0039AC  0E00               	movlw	0
 24531  0039AE  6FD9               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 24532  0039B0  0E00               	movlw	0
 24533  0039B2  6FD8               	movwf	ConfigureModem@DelayCounter& (0+255),b
 24534                           
 24535                           ; BSR set to: 2
 24536                           ;mdm_gsm_gprs.c: 469: MdmConfigState = NextState;
 24537  0039B4  C1F5  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 24538                           
 24539                           ; BSR set to: 2
 24540                           ;mdm_gsm_gprs.c: 470: }
 24541                           ;mdm_gsm_gprs.c: 471: break;
 24542  0039B8  0012               	return	
 24543  0039BA                     
 24544                           ;mdm_gsm_gprs.c: 475: MdmStatus = ModemConfigured;
 24545                           
 24546                           ; BSR set to: 2
 24547  0039BA  0E03               	movlw	3
 24548  0039BC  0100               	movlb	0	; () banked
 24549  0039BE  6FD1               	movwf	_MdmStatus& (0+255),b
 24550                           
 24551                           ; BSR set to: 0
 24552                           ;mdm_gsm_gprs.c: 477: GenerateEvt(&MdmStsReady);
 24553  0039C0  0E39               	movlw	low _MdmStsReady
 24554  0039C2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24555  0039C4  0E00               	movlw	high _MdmStsReady
 24556  0039C6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24557  0039C8  ECA2  F030         	call	_GenerateEvt	;wreg free
 24558                           
 24559                           ;mdm_gsm_gprs.c: 479: MdmConfigState = MdmCfg_Stop;
 24560  0039CC  0E06               	movlw	6
 24561  0039CE  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24562                           
 24563                           ;mdm_gsm_gprs.c: 487: }
 24564                           
 24565                           ;mdm_gsm_gprs.c: 486: break;
 24566                           
 24567                           ;mdm_gsm_gprs.c: 485: default:
 24568                           
 24569                           ;mdm_gsm_gprs.c: 483: break;
 24570                           
 24571                           ;mdm_gsm_gprs.c: 482: case MdmCfg_Stop:
 24572                           
 24573                           ;mdm_gsm_gprs.c: 480: break;
 24574  0039D0  0012               	return	
 24575  0039D2                     l1027:
 24576  0039D2  5028               	movf	ConfigureModem@MdmConfigState,w,c
 24577                           
 24578                           ; Switch size 1, requested type "space"
 24579                           ; Number of cases is 6, Range of values is 0 to 6
 24580                           ; switch strategies available:
 24581                           ; Name         Instructions Cycles
 24582                           ; simple_byte           19    10 (average)
 24583                           ;	Chosen strategy is simple_byte
 24584  0039D4  0A00               	xorlw	0	; case 0
 24585  0039D6  B4D8               	btfsc	status,2,c
 24586  0039D8  D7A8               	goto	l1028
 24587  0039DA  0A01               	xorlw	1	; case 1
 24588  0039DC  B4D8               	btfsc	status,2,c
 24589  0039DE  D7AD               	goto	l1031
 24590  0039E0  0A03               	xorlw	3	; case 2
 24591  0039E2  B4D8               	btfsc	status,2,c
 24592  0039E4  D7C7               	goto	l1032
 24593  0039E6  0A06               	xorlw	6	; case 4
 24594  0039E8  B4D8               	btfsc	status,2,c
 24595  0039EA  D7D7               	goto	l1033
 24596  0039EC  0A01               	xorlw	1	; case 5
 24597  0039EE  B4D8               	btfsc	status,2,c
 24598  0039F0  D7E4               	goto	l1035
 24599  0039F2  0A03               	xorlw	3	; case 6
 24600  0039F4  0012               	return	
 24601  0039F6                     __end_of_ConfigureModem:
 24602                           	opt stack 0
 24603                           tosu	equ	0xFFF
 24604                           tosh	equ	0xFFE
 24605                           tosl	equ	0xFFD
 24606                           pclath	equ	0xFFA
 24607                           tblptru	equ	0xFF8
 24608                           tblptrh	equ	0xFF7
 24609                           tblptrl	equ	0xFF6
 24610                           tablat	equ	0xFF5
 24611                           prodh	equ	0xFF4
 24612                           prodl	equ	0xFF3
 24613                           intcon	equ	0xFF2
 24614                           intcon2	equ	0xFF1
 24615                           intcon3	equ	0xFF0
 24616                           indf0	equ	0xFEF
 24617                           postinc0	equ	0xFEE
 24618                           plusw0	equ	0xFEB
 24619                           fsr0h	equ	0xFEA
 24620                           fsr0l	equ	0xFE9
 24621                           wreg	equ	0xFE8
 24622                           indf1	equ	0xFE7
 24623                           postinc1	equ	0xFE6
 24624                           postdec1	equ	0xFE5
 24625                           plusw1	equ	0xFE3
 24626                           fsr1h	equ	0xFE2
 24627                           fsr1l	equ	0xFE1
 24628                           indf2	equ	0xFDF
 24629                           postinc2	equ	0xFDE
 24630                           postdec2	equ	0xFDD
 24631                           plusw2	equ	0xFDB
 24632                           fsr2h	equ	0xFDA
 24633                           fsr2l	equ	0xFD9
 24634                           status	equ	0xFD8
 24635                           
 24636 ;; *************** function _Uart_InitUartModule *****************
 24637 ;; Defined at:
 24638 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24639 ;; Parameters:    Size  Location     Type
 24640 ;;  Module          1    wreg     unsigned char 
 24641 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 24642 ;;		 -> UartConfig(21), 
 24643 ;; Auto vars:     Size  Location     Type
 24644 ;;  Module          1   65[BANK0 ] unsigned char 
 24645 ;; Return value:  Size  Location     Type
 24646 ;;                  1    wreg      void 
 24647 ;; Registers used:
 24648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24649 ;; Tracked objects:
 24650 ;;		On entry : 0/0
 24651 ;;		On exit  : 0/0
 24652 ;;		Unchanged: 0/0
 24653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24657 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24658 ;;Total ram usage:        5 bytes
 24659 ;; Hardware stack levels used:    1
 24660 ;; Hardware stack levels required when called:   13
 24661 ;; This function calls:
 24662 ;;		_SetUartBaudRate
 24663 ;; This function is called by:
 24664 ;;		_ConfigureModem
 24665 ;;		_Mdm_MainTask
 24666 ;; This function uses a non-reentrant model
 24667 ;;
 24668                           
 24669                           	psect	text115
 24670  000ABC                     __ptext115:
 24671                           	opt stack 0
 24672  000ABC                     _Uart_InitUartModule:
 24673                           	opt stack 14
 24674                           
 24675                           ;incstack = 0
 24676                           ;Uart_InitUartModule@Module stored from wreg
 24677  000ABC  0100               	movlb	0	; () banked
 24678  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 24679                           
 24680                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 24681  000AC0  0100               	movlb	0	; () banked
 24682  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 24683  000AC4  A4D8               	btfss	status,2,c
 24684  000AC6  D0BE               	goto	l668
 24685                           
 24686                           ; BSR set to: 0
 24687                           ;uart_drv.c: 291: {
 24688                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 24689  000AC8  9C94               	bcf	3988,6,c	;volatile
 24690                           
 24691                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 24692  000ACA  8E94               	bsf	3988,7,c	;volatile
 24693                           
 24694                           ; BSR set to: 0
 24695                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 24696  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24697  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24698  000AD4  0E01               	movlw	1
 24699  000AD6  ECAE  F014         	call	_SetUartBaudRate
 24700                           
 24701                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 24702  000ADA  0E00               	movlw	0
 24703  000ADC  6EAD               	movwf	4013,c	;volatile
 24704                           
 24705                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24706  000ADE  0100               	movlb	0	; () banked
 24707  000AE0  EE20 F004          	lfsr	2,4
 24708  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24709  000AE6  26D9               	addwf	fsr2l,f,c
 24710  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24711  000AEA  22DA               	addwfc	fsr2h,f,c
 24712  000AEC  50DF               	movf	indf2,w,c
 24713  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24714  000AF0  0E06               	movlw	6
 24715  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24716  000AF4                     u12285:
 24717  000AF4  90D8               	bcf	status,0,c
 24718  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24719  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24720  000AFA  D7FC               	goto	u12285
 24721  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24722  000AFE  12AD               	iorwf	4013,f,c	;volatile
 24723                           
 24724                           ; BSR set to: 0
 24725                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24726  000B00  EE20 F006          	lfsr	2,6
 24727  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24728  000B06  26D9               	addwf	fsr2l,f,c
 24729  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24730  000B0A  22DA               	addwfc	fsr2h,f,c
 24731  000B0C  50DF               	movf	indf2,w,c
 24732  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24733  000B10  0E05               	movlw	5
 24734  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24735  000B14                     u12295:
 24736  000B14  90D8               	bcf	status,0,c
 24737  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24738  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24739  000B1A  D7FC               	goto	u12295
 24740  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24741  000B1E  12AD               	iorwf	4013,f,c	;volatile
 24742                           
 24743                           ; BSR set to: 0
 24744                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 24745  000B20  EE20 F001          	lfsr	2,1
 24746  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24747  000B26  26D9               	addwf	fsr2l,f,c
 24748  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24749  000B2A  22DA               	addwfc	fsr2h,f,c
 24750  000B2C  50DF               	movf	indf2,w,c
 24751  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24752  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24753  000B32  0BF0               	andlw	240
 24754  000B34  12AD               	iorwf	4013,f,c	;volatile
 24755                           
 24756                           ; BSR set to: 0
 24757                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24758  000B36  EE20 F008          	lfsr	2,8
 24759  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24760  000B3C  26D9               	addwf	fsr2l,f,c
 24761  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24762  000B40  22DA               	addwfc	fsr2h,f,c
 24763  000B42  50DF               	movf	indf2,w,c
 24764  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24765  000B46  90D8               	bcf	status,0,c
 24766  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24767  000B4A  90D8               	bcf	status,0,c
 24768  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24769  000B4E  90D8               	bcf	status,0,c
 24770  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24771  000B52  12AD               	iorwf	4013,f,c	;volatile
 24772                           
 24773                           ; BSR set to: 0
 24774                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24775  000B54  EE20 F003          	lfsr	2,3
 24776  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24777  000B5A  26D9               	addwf	fsr2l,f,c
 24778  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24779  000B5E  22DA               	addwfc	fsr2h,f,c
 24780  000B60  50DF               	movf	indf2,w,c
 24781  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24782  000B64  90D8               	bcf	status,0,c
 24783  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24784  000B68  90D8               	bcf	status,0,c
 24785  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24786  000B6C  12AD               	iorwf	4013,f,c	;volatile
 24787                           
 24788                           ; BSR set to: 0
 24789                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 24790  000B6E  0E00               	movlw	0
 24791  000B70  6EAC               	movwf	4012,c	;volatile
 24792                           
 24793                           ; BSR set to: 0
 24794                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24795  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24796  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24797  000B7A  50DF               	movf	indf2,w,c
 24798  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24799  000B7E  0E00               	movlw	0
 24800  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24801  000B82  0E80               	movlw	128
 24802  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24803  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24804  000B88  12AC               	iorwf	4012,f,c	;volatile
 24805                           
 24806                           ; BSR set to: 0
 24807                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24808  000B8A  EE20 F005          	lfsr	2,5
 24809  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24810  000B90  26D9               	addwf	fsr2l,f,c
 24811  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24812  000B94  22DA               	addwfc	fsr2h,f,c
 24813  000B96  50DF               	movf	indf2,w,c
 24814  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24815  000B9A  0E06               	movlw	6
 24816  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24817  000B9E                     u12305:
 24818  000B9E  90D8               	bcf	status,0,c
 24819  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24820  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24821  000BA4  D7FC               	goto	u12305
 24822  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24823  000BA8  12AC               	iorwf	4012,f,c	;volatile
 24824                           
 24825                           ; BSR set to: 0
 24826                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24827  000BAA  EE20 F007          	lfsr	2,7
 24828  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24829  000BB0  26D9               	addwf	fsr2l,f,c
 24830  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24831  000BB4  22DA               	addwfc	fsr2h,f,c
 24832  000BB6  50DF               	movf	indf2,w,c
 24833  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24834  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24835  000BBC  0BF0               	andlw	240
 24836  000BBE  12AC               	iorwf	4012,f,c	;volatile
 24837                           
 24838                           ; BSR set to: 0
 24839                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 24840  000BC0  0E00               	movlw	0
 24841  000BC2  6E7E               	movwf	3966,c	;volatile
 24842                           
 24843                           ; BSR set to: 0
 24844                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24845  000BC4  EE20 F002          	lfsr	2,2
 24846  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24847  000BCA  26D9               	addwf	fsr2l,f,c
 24848  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24849  000BCE  22DA               	addwfc	fsr2h,f,c
 24850  000BD0  50DF               	movf	indf2,w,c
 24851  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24852  000BD4  90D8               	bcf	status,0,c
 24853  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24854  000BD8  90D8               	bcf	status,0,c
 24855  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24856  000BDC  90D8               	bcf	status,0,c
 24857  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24858  000BE0  127E               	iorwf	3966,f,c	;volatile
 24859                           
 24860                           ; BSR set to: 0
 24861                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24862  000BE2  EE20 F00A          	lfsr	2,10
 24863  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24864  000BE8  26D9               	addwf	fsr2l,f,c
 24865  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24866  000BEC  22DA               	addwfc	fsr2h,f,c
 24867  000BEE  50DF               	movf	indf2,w,c
 24868  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24869  000BF2  90D8               	bcf	status,0,c
 24870  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24871  000BF6  127E               	iorwf	3966,f,c	;volatile
 24872                           
 24873                           ; BSR set to: 0
 24874                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24875  000BF8  EE20 F009          	lfsr	2,9
 24876  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24877  000BFE  26D9               	addwf	fsr2l,f,c
 24878  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24879  000C02  22DA               	addwfc	fsr2h,f,c
 24880  000C04  50DF               	movf	indf2,w,c
 24881  000C06  127E               	iorwf	3966,f,c	;volatile
 24882                           
 24883                           ; BSR set to: 0
 24884                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 24885  000C08  EE20 F00B          	lfsr	2,11
 24886  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24887  000C0E  26D9               	addwf	fsr2l,f,c
 24888  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24889  000C12  22DA               	addwfc	fsr2h,f,c
 24890  000C14  50DF               	movf	indf2,w,c
 24891  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24892  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24893  000C1A  509D               	movf	3997,w,c	;volatile
 24894  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24895  000C1E  0BEF               	andlw	-17
 24896  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24897  000C22  6E9D               	movwf	3997,c	;volatile
 24898                           
 24899                           ; BSR set to: 0
 24900                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 24901  000C24  EE20 F00C          	lfsr	2,12
 24902  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24903  000C2A  26D9               	addwf	fsr2l,f,c
 24904  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24905  000C2E  22DA               	addwfc	fsr2h,f,c
 24906  000C30  50DF               	movf	indf2,w,c
 24907  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24908  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24909  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24910  000C38  509D               	movf	3997,w,c	;volatile
 24911  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24912  000C3C  0BDF               	andlw	-33
 24913  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24914  000C40  6E9D               	movwf	3997,c	;volatile
 24915                           
 24916                           ;uart_drv.c: 326: }
 24917  000C42  0012               	return	
 24918  000C44                     l668:
 24919                           
 24920                           ; BSR set to: 0
 24921                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 24922                           
 24923                           ; BSR set to: 0
 24924  000C44  0E02               	movlw	2
 24925  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 24926  000C48  A4D8               	btfss	status,2,c
 24927  000C4A  0012               	return	
 24928                           
 24929                           ; BSR set to: 0
 24930                           ;uart_drv.c: 328: {
 24931                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 24932  000C4C  9094               	bcf	3988,0,c	;volatile
 24933                           
 24934                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 24935  000C4E  8294               	bsf	3988,1,c	;volatile
 24936                           
 24937                           ; BSR set to: 0
 24938                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 24939  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24940  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24941  000C58  0E02               	movlw	2
 24942  000C5A  ECAE  F014         	call	_SetUartBaudRate
 24943                           
 24944                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 24945  000C5E  0E00               	movlw	0
 24946  000C60  6EA8               	movwf	4008,c	;volatile
 24947                           
 24948                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24949  000C62  0100               	movlb	0	; () banked
 24950  000C64  EE20 F004          	lfsr	2,4
 24951  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24952  000C6A  26D9               	addwf	fsr2l,f,c
 24953  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24954  000C6E  22DA               	addwfc	fsr2h,f,c
 24955  000C70  50DF               	movf	indf2,w,c
 24956  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24957  000C74  0E06               	movlw	6
 24958  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24959  000C78                     u12325:
 24960  000C78  90D8               	bcf	status,0,c
 24961  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24962  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24963  000C7E  D7FC               	goto	u12325
 24964  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24965  000C82  12A8               	iorwf	4008,f,c	;volatile
 24966                           
 24967                           ; BSR set to: 0
 24968                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24969  000C84  EE20 F006          	lfsr	2,6
 24970  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24971  000C8A  26D9               	addwf	fsr2l,f,c
 24972  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24973  000C8E  22DA               	addwfc	fsr2h,f,c
 24974  000C90  50DF               	movf	indf2,w,c
 24975  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24976  000C94  0E05               	movlw	5
 24977  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24978  000C98                     u12335:
 24979  000C98  90D8               	bcf	status,0,c
 24980  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24981  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24982  000C9E  D7FC               	goto	u12335
 24983  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24984  000CA2  12A8               	iorwf	4008,f,c	;volatile
 24985                           
 24986                           ; BSR set to: 0
 24987                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 24988  000CA4  EE20 F001          	lfsr	2,1
 24989  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24990  000CAA  26D9               	addwf	fsr2l,f,c
 24991  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24992  000CAE  22DA               	addwfc	fsr2h,f,c
 24993  000CB0  50DF               	movf	indf2,w,c
 24994  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24995  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24996  000CB6  0BF0               	andlw	240
 24997  000CB8  12A8               	iorwf	4008,f,c	;volatile
 24998                           
 24999                           ; BSR set to: 0
 25000                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 25001  000CBA  EE20 F008          	lfsr	2,8
 25002  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25003  000CC0  26D9               	addwf	fsr2l,f,c
 25004  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25005  000CC4  22DA               	addwfc	fsr2h,f,c
 25006  000CC6  50DF               	movf	indf2,w,c
 25007  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25008  000CCA  90D8               	bcf	status,0,c
 25009  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25010  000CCE  90D8               	bcf	status,0,c
 25011  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25012  000CD2  90D8               	bcf	status,0,c
 25013  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25014  000CD6  12A8               	iorwf	4008,f,c	;volatile
 25015                           
 25016                           ; BSR set to: 0
 25017                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 25018  000CD8  EE20 F003          	lfsr	2,3
 25019  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25020  000CDE  26D9               	addwf	fsr2l,f,c
 25021  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25022  000CE2  22DA               	addwfc	fsr2h,f,c
 25023  000CE4  50DF               	movf	indf2,w,c
 25024  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25025  000CE8  90D8               	bcf	status,0,c
 25026  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25027  000CEC  90D8               	bcf	status,0,c
 25028  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25029  000CF0  12A8               	iorwf	4008,f,c	;volatile
 25030                           
 25031                           ; BSR set to: 0
 25032                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 25033  000CF2  0E00               	movlw	0
 25034  000CF4  6E9C               	movwf	3996,c	;volatile
 25035                           
 25036                           ; BSR set to: 0
 25037                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 25038  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 25039  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 25040  000CFE  50DF               	movf	indf2,w,c
 25041  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25042  000D02  0E00               	movlw	0
 25043  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 25044  000D06  0E80               	movlw	128
 25045  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25046  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25047  000D0C  129C               	iorwf	3996,f,c	;volatile
 25048                           
 25049                           ; BSR set to: 0
 25050                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 25051  000D0E  EE20 F005          	lfsr	2,5
 25052  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25053  000D14  26D9               	addwf	fsr2l,f,c
 25054  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25055  000D18  22DA               	addwfc	fsr2h,f,c
 25056  000D1A  50DF               	movf	indf2,w,c
 25057  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25058  000D1E  0E06               	movlw	6
 25059  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25060  000D22                     u12345:
 25061  000D22  90D8               	bcf	status,0,c
 25062  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25063  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25064  000D28  D7FC               	goto	u12345
 25065  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25066  000D2C  129C               	iorwf	3996,f,c	;volatile
 25067                           
 25068                           ; BSR set to: 0
 25069                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 25070  000D2E  EE20 F007          	lfsr	2,7
 25071  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25072  000D34  26D9               	addwf	fsr2l,f,c
 25073  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25074  000D38  22DA               	addwfc	fsr2h,f,c
 25075  000D3A  50DF               	movf	indf2,w,c
 25076  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25077  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25078  000D40  0BF0               	andlw	240
 25079  000D42  129C               	iorwf	3996,f,c	;volatile
 25080                           
 25081                           ; BSR set to: 0
 25082                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 25083  000D44  0E00               	movlw	0
 25084  000D46  6E7C               	movwf	3964,c	;volatile
 25085                           
 25086                           ; BSR set to: 0
 25087                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 25088  000D48  EE20 F002          	lfsr	2,2
 25089  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25090  000D4E  26D9               	addwf	fsr2l,f,c
 25091  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25092  000D52  22DA               	addwfc	fsr2h,f,c
 25093  000D54  50DF               	movf	indf2,w,c
 25094  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25095  000D58  90D8               	bcf	status,0,c
 25096  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25097  000D5C  90D8               	bcf	status,0,c
 25098  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25099  000D60  90D8               	bcf	status,0,c
 25100  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25101  000D64  127C               	iorwf	3964,f,c	;volatile
 25102                           
 25103                           ; BSR set to: 0
 25104                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 25105  000D66  EE20 F00A          	lfsr	2,10
 25106  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25107  000D6C  26D9               	addwf	fsr2l,f,c
 25108  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25109  000D70  22DA               	addwfc	fsr2h,f,c
 25110  000D72  50DF               	movf	indf2,w,c
 25111  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25112  000D76  90D8               	bcf	status,0,c
 25113  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25114  000D7A  127C               	iorwf	3964,f,c	;volatile
 25115                           
 25116                           ; BSR set to: 0
 25117                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 25118  000D7C  EE20 F009          	lfsr	2,9
 25119  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25120  000D82  26D9               	addwf	fsr2l,f,c
 25121  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25122  000D86  22DA               	addwfc	fsr2h,f,c
 25123  000D88  50DF               	movf	indf2,w,c
 25124  000D8A  127C               	iorwf	3964,f,c	;volatile
 25125                           
 25126                           ; BSR set to: 0
 25127                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 25128  000D8C  EE20 F00B          	lfsr	2,11
 25129  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25130  000D92  26D9               	addwf	fsr2l,f,c
 25131  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25132  000D96  22DA               	addwfc	fsr2h,f,c
 25133  000D98  50DF               	movf	indf2,w,c
 25134  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25135  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25136  000D9E  50A3               	movf	4003,w,c	;volatile
 25137  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25138  000DA2  0BEF               	andlw	-17
 25139  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25140  000DA6  6EA3               	movwf	4003,c	;volatile
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 25144  000DA8  EE20 F00C          	lfsr	2,12
 25145  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25146  000DAE  26D9               	addwf	fsr2l,f,c
 25147  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25148  000DB2  22DA               	addwfc	fsr2h,f,c
 25149  000DB4  50DF               	movf	indf2,w,c
 25150  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25151  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25152  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 25153  000DBC  50A3               	movf	4003,w,c	;volatile
 25154  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25155  000DC0  0BDF               	andlw	-33
 25156  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25157  000DC4  6EA3               	movwf	4003,c	;volatile
 25158                           
 25159                           ; BSR set to: 0
 25160  000DC6  0012               	return	
 25161  000DC8                     __end_of_Uart_InitUartModule:
 25162                           	opt stack 0
 25163                           tosu	equ	0xFFF
 25164                           tosh	equ	0xFFE
 25165                           tosl	equ	0xFFD
 25166                           pclath	equ	0xFFA
 25167                           tblptru	equ	0xFF8
 25168                           tblptrh	equ	0xFF7
 25169                           tblptrl	equ	0xFF6
 25170                           tablat	equ	0xFF5
 25171                           prodh	equ	0xFF4
 25172                           prodl	equ	0xFF3
 25173                           intcon	equ	0xFF2
 25174                           intcon2	equ	0xFF1
 25175                           intcon3	equ	0xFF0
 25176                           indf0	equ	0xFEF
 25177                           postinc0	equ	0xFEE
 25178                           plusw0	equ	0xFEB
 25179                           fsr0h	equ	0xFEA
 25180                           fsr0l	equ	0xFE9
 25181                           wreg	equ	0xFE8
 25182                           indf1	equ	0xFE7
 25183                           postinc1	equ	0xFE6
 25184                           postdec1	equ	0xFE5
 25185                           plusw1	equ	0xFE3
 25186                           fsr1h	equ	0xFE2
 25187                           fsr1l	equ	0xFE1
 25188                           indf2	equ	0xFDF
 25189                           postinc2	equ	0xFDE
 25190                           postdec2	equ	0xFDD
 25191                           plusw2	equ	0xFDB
 25192                           fsr2h	equ	0xFDA
 25193                           fsr2l	equ	0xFD9
 25194                           status	equ	0xFD8
 25195                           
 25196 ;; *************** function _SetUartBaudRate *****************
 25197 ;; Defined at:
 25198 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25199 ;; Parameters:    Size  Location     Type
 25200 ;;  Module          1    wreg     unsigned char 
 25201 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 25202 ;;		 -> UartConfig(21), 
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;  Module          1   57[BANK0 ] unsigned char 
 25205 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 25206 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 25207 ;; Return value:  Size  Location     Type
 25208 ;;                  1    wreg      void 
 25209 ;; Registers used:
 25210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25211 ;; Tracked objects:
 25212 ;;		On entry : 0/0
 25213 ;;		On exit  : 0/0
 25214 ;;		Unchanged: 0/0
 25215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25217 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25219 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25220 ;;Total ram usage:        7 bytes
 25221 ;; Hardware stack levels used:    1
 25222 ;; Hardware stack levels required when called:   12
 25223 ;; This function calls:
 25224 ;;		___lldiv
 25225 ;;		___lmul
 25226 ;; This function is called by:
 25227 ;;		_Uart_InitUartModule
 25228 ;; This function uses a non-reentrant model
 25229 ;;
 25230                           
 25231                           	psect	text116
 25232  00295C                     __ptext116:
 25233                           	opt stack 0
 25234  00295C                     _SetUartBaudRate:
 25235                           	opt stack 14
 25236                           
 25237                           ; BSR set to: 0
 25238                           ;incstack = 0
 25239                           ;SetUartBaudRate@Module stored from wreg
 25240  00295C  0100               	movlb	0	; () banked
 25241  00295E  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 25242                           
 25243                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 25244  002960  0E00               	movlw	0
 25245  002962  0100               	movlb	0	; () banked
 25246  002964  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25247  002966  0E00               	movlw	0
 25248  002968  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25249                           
 25250                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 25251  00296A  0E00               	movlw	0
 25252  00296C  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25253                           
 25254                           ; BSR set to: 0
 25255                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 25256  00296E  EE20 F002          	lfsr	2,2
 25257  002972  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25258  002974  26D9               	addwf	fsr2l,f,c
 25259  002976  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25260  002978  22DA               	addwfc	fsr2h,f,c
 25261  00297A  50DF               	movf	indf2,w,c
 25262  00297C  A4D8               	btfss	status,2,c
 25263  00297E  D00B               	goto	l625
 25264                           
 25265                           ; BSR set to: 0
 25266  002980  EE20 F002          	lfsr	2,2
 25267  002984  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25268  002986  26D9               	addwf	fsr2l,f,c
 25269  002988  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25270  00298A  22DA               	addwfc	fsr2h,f,c
 25271  00298C  50DF               	movf	indf2,w,c
 25272  00298E  A4D8               	btfss	status,2,c
 25273  002990  D002               	goto	l625
 25274                           
 25275                           ; BSR set to: 0
 25276                           ;uart_drv.c: 128: {
 25277                           ;uart_drv.c: 129: DivisionFactor = 64;
 25278  002992  0E40               	movlw	64
 25279  002994  D039               	goto	L35
 25280  002996                     l625:
 25281                           
 25282                           ; BSR set to: 0
 25283                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 25284                           
 25285                           ; BSR set to: 0
 25286  002996  EE20 F002          	lfsr	2,2
 25287  00299A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25288  00299C  26D9               	addwf	fsr2l,f,c
 25289  00299E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25290  0029A0  22DA               	addwfc	fsr2h,f,c
 25291  0029A2  04DE               	decf	postinc2,w,c
 25292  0029A4  A4D8               	btfss	status,2,c
 25293  0029A6  D009               	goto	l627
 25294                           
 25295                           ; BSR set to: 0
 25296  0029A8  EE20 F002          	lfsr	2,2
 25297  0029AC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25298  0029AE  26D9               	addwf	fsr2l,f,c
 25299  0029B0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25300  0029B2  22DA               	addwfc	fsr2h,f,c
 25301  0029B4  50DF               	movf	indf2,w,c
 25302  0029B6  B4D8               	btfsc	status,2,c
 25303  0029B8  D012               	goto	u11470
 25304  0029BA                     l627:
 25305                           
 25306                           ; BSR set to: 0
 25307                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25308                           
 25309                           ; BSR set to: 0
 25310  0029BA  EE20 F002          	lfsr	2,2
 25311  0029BE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25312  0029C0  26D9               	addwf	fsr2l,f,c
 25313  0029C2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25314  0029C4  22DA               	addwfc	fsr2h,f,c
 25315  0029C6  50DF               	movf	indf2,w,c
 25316  0029C8  A4D8               	btfss	status,2,c
 25317  0029CA  D00B               	goto	l629
 25318                           
 25319                           ; BSR set to: 0
 25320  0029CC  EE20 F002          	lfsr	2,2
 25321  0029D0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25322  0029D2  26D9               	addwf	fsr2l,f,c
 25323  0029D4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25324  0029D6  22DA               	addwfc	fsr2h,f,c
 25325  0029D8  04DE               	decf	postinc2,w,c
 25326  0029DA  A4D8               	btfss	status,2,c
 25327  0029DC  D002               	goto	l629
 25328  0029DE                     u11470:
 25329                           
 25330                           ; BSR set to: 0
 25331                           ;uart_drv.c: 136: {
 25332                           ;uart_drv.c: 137: DivisionFactor = 16;
 25333  0029DE  0E10               	movlw	16
 25334  0029E0  D013               	goto	L35
 25335  0029E2                     l629:
 25336                           
 25337                           ; BSR set to: 0
 25338                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25339                           
 25340                           ; BSR set to: 0
 25341  0029E2  EE20 F002          	lfsr	2,2
 25342  0029E6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25343  0029E8  26D9               	addwf	fsr2l,f,c
 25344  0029EA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25345  0029EC  22DA               	addwfc	fsr2h,f,c
 25346  0029EE  04DE               	decf	postinc2,w,c
 25347  0029F0  A4D8               	btfss	status,2,c
 25348  0029F2  D00B               	goto	l631
 25349                           
 25350                           ; BSR set to: 0
 25351  0029F4  EE20 F002          	lfsr	2,2
 25352  0029F8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25353  0029FA  26D9               	addwf	fsr2l,f,c
 25354  0029FC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25355  0029FE  22DA               	addwfc	fsr2h,f,c
 25356  002A00  04DE               	decf	postinc2,w,c
 25357  002A02  A4D8               	btfss	status,2,c
 25358  002A04  D002               	goto	l631
 25359                           
 25360                           ; BSR set to: 0
 25361                           ;uart_drv.c: 140: {
 25362                           ;uart_drv.c: 141: DivisionFactor = 4;
 25363  002A06  0E04               	movlw	4
 25364  002A08                     L35:
 25365  002A08  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25366  002A0A                     l631:
 25367                           
 25368                           ; BSR set to: 0
 25369                           ;uart_drv.c: 146: }
 25370                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 25371                           
 25372                           ; BSR set to: 0
 25373                           
 25374                           ; BSR set to: 0
 25375                           
 25376                           ; BSR set to: 0
 25377                           
 25378                           ; BSR set to: 0
 25379                           
 25380                           ;uart_drv.c: 143: else
 25381                           ;uart_drv.c: 144: {
 25382                           
 25383                           ; BSR set to: 0
 25384  002A0A  EE20 F00D          	lfsr	2,13
 25385  002A0E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25386  002A10  26D9               	addwf	fsr2l,f,c
 25387  002A12  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25388  002A14  22DA               	addwfc	fsr2h,f,c
 25389  002A16  CFDE F089          	movff	postinc2,___lldiv@dividend
 25390  002A1A  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 25391  002A1E  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 25392  002A22  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 25393  002A26  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 25394  002A28  6F7D               	movwf	___lmul@multiplier& (0+255),b
 25395  002A2A  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 25396  002A2C  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 25397  002A2E  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 25398  002A30  EE20 F011          	lfsr	2,17
 25399  002A34  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25400  002A36  26D9               	addwf	fsr2l,f,c
 25401  002A38  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25402  002A3A  22DA               	addwfc	fsr2h,f,c
 25403  002A3C  CFDE F081          	movff	postinc2,___lmul@multiplicand
 25404  002A40  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 25405  002A44  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 25406  002A48  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 25407  002A4C  EC33  F029         	call	___lmul	;wreg free
 25408  002A50  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 25409  002A54  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 25410  002A58  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 25411  002A5C  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 25412  002A60  EC4B  F026         	call	___lldiv	;wreg free
 25413  002A64  0EFF               	movlw	255
 25414  002A66  0100               	movlb	0	; () banked
 25415  002A68  2589               	addwf	?___lldiv& (0+255),w,b
 25416  002A6A  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25417  002A6C  0EFF               	movlw	255
 25418  002A6E  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 25419  002A70  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25420                           
 25421                           ; BSR set to: 0
 25422                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 25423  002A72  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 25424  002A74  A4D8               	btfss	status,2,c
 25425  002A76  D005               	goto	l633
 25426                           
 25427                           ; BSR set to: 0
 25428                           ;uart_drv.c: 152: {
 25429                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25430  002A78  0E00               	movlw	0
 25431  002A7A  6E7F               	movwf	3967,c	;volatile
 25432                           
 25433                           ; BSR set to: 0
 25434                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25435  002A7C  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 25436                           
 25437                           ;uart_drv.c: 156: }
 25438  002A80  0012               	return	
 25439  002A82                     l633:
 25440                           
 25441                           ; BSR set to: 0
 25442                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 25443                           
 25444                           ; BSR set to: 0
 25445  002A82  0E02               	movlw	2
 25446  002A84  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 25447  002A86  A4D8               	btfss	status,2,c
 25448  002A88  0012               	return	
 25449                           
 25450                           ; BSR set to: 0
 25451                           ;uart_drv.c: 158: {
 25452                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25453  002A8A  0E00               	movlw	0
 25454  002A8C  6E7D               	movwf	3965,c	;volatile
 25455                           
 25456                           ; BSR set to: 0
 25457                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25458  002A8E  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 25459                           
 25460                           ; BSR set to: 0
 25461  002A92  0012               	return	
 25462  002A94                     __end_of_SetUartBaudRate:
 25463                           	opt stack 0
 25464                           tosu	equ	0xFFF
 25465                           tosh	equ	0xFFE
 25466                           tosl	equ	0xFFD
 25467                           pclath	equ	0xFFA
 25468                           tblptru	equ	0xFF8
 25469                           tblptrh	equ	0xFF7
 25470                           tblptrl	equ	0xFF6
 25471                           tablat	equ	0xFF5
 25472                           prodh	equ	0xFF4
 25473                           prodl	equ	0xFF3
 25474                           intcon	equ	0xFF2
 25475                           intcon2	equ	0xFF1
 25476                           intcon3	equ	0xFF0
 25477                           indf0	equ	0xFEF
 25478                           postinc0	equ	0xFEE
 25479                           plusw0	equ	0xFEB
 25480                           fsr0h	equ	0xFEA
 25481                           fsr0l	equ	0xFE9
 25482                           wreg	equ	0xFE8
 25483                           indf1	equ	0xFE7
 25484                           postinc1	equ	0xFE6
 25485                           postdec1	equ	0xFE5
 25486                           plusw1	equ	0xFE3
 25487                           fsr1h	equ	0xFE2
 25488                           fsr1l	equ	0xFE1
 25489                           indf2	equ	0xFDF
 25490                           postinc2	equ	0xFDE
 25491                           postdec2	equ	0xFDD
 25492                           plusw2	equ	0xFDB
 25493                           fsr2h	equ	0xFDA
 25494                           fsr2l	equ	0xFD9
 25495                           status	equ	0xFD8
 25496                           
 25497 ;; *************** function ___lmul *****************
 25498 ;; Defined at:
 25499 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 25500 ;; Parameters:    Size  Location     Type
 25501 ;;  multiplier      4   29[BANK0 ] unsigned long 
 25502 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 25503 ;; Auto vars:     Size  Location     Type
 25504 ;;  product         4   37[BANK0 ] unsigned long 
 25505 ;; Return value:  Size  Location     Type
 25506 ;;                  4   29[BANK0 ] unsigned long 
 25507 ;; Registers used:
 25508 ;;		wreg, status,2, status,0
 25509 ;; Tracked objects:
 25510 ;;		On entry : 0/0
 25511 ;;		On exit  : 0/0
 25512 ;;		Unchanged: 0/0
 25513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25514 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25515 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25517 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25518 ;;Total ram usage:       12 bytes
 25519 ;; Hardware stack levels used:    1
 25520 ;; Hardware stack levels required when called:   11
 25521 ;; This function calls:
 25522 ;;		Nothing
 25523 ;; This function is called by:
 25524 ;;		_Tmr_TmrBPrSet
 25525 ;;		_SetUartBaudRate
 25526 ;;		_strtol
 25527 ;; This function uses a non-reentrant model
 25528 ;;
 25529                           
 25530                           	psect	text117
 25531  005266                     __ptext117:
 25532                           	opt stack 0
 25533  005266                     ___lmul:
 25534                           	opt stack 15
 25535                           
 25536                           ; BSR set to: 0
 25537                           ;incstack = 0
 25538  005266  0E00               	movlw	0
 25539  005268  0100               	movlb	0	; () banked
 25540  00526A  6F85               	movwf	___lmul@product& (0+255),b
 25541  00526C  0E00               	movlw	0
 25542  00526E  6F86               	movwf	(___lmul@product+1)& (0+255),b
 25543  005270  0E00               	movlw	0
 25544  005272  6F87               	movwf	(___lmul@product+2)& (0+255),b
 25545  005274  0E00               	movlw	0
 25546  005276  6F88               	movwf	(___lmul@product+3)& (0+255),b
 25547  005278                     
 25548                           ; BSR set to: 0
 25549                           
 25550                           ; BSR set to: 0
 25551  005278  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 25552  00527A  D008               	goto	l2655
 25553                           
 25554                           ; BSR set to: 0
 25555  00527C  5181               	movf	___lmul@multiplicand& (0+255),w,b
 25556  00527E  2785               	addwf	___lmul@product& (0+255),f,b
 25557  005280  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25558  005282  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 25559  005284  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25560  005286  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 25561  005288  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25562  00528A  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 25563  00528C                     l2655:
 25564                           
 25565                           ; BSR set to: 0
 25566                           
 25567                           ; BSR set to: 0
 25568  00528C  90D8               	bcf	status,0,c
 25569  00528E  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 25570  005290  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25571  005292  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25572  005294  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25573                           
 25574                           ; BSR set to: 0
 25575  005296  90D8               	bcf	status,0,c
 25576  005298  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25577  00529A  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 25578  00529C  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 25579  00529E  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 25580  0052A0  517D               	movf	___lmul@multiplier& (0+255),w,b
 25581  0052A2  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 25582  0052A4  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 25583  0052A6  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 25584  0052A8  A4D8               	btfss	status,2,c
 25585  0052AA  D7E6               	goto	l2654
 25586                           
 25587                           ; BSR set to: 0
 25588  0052AC  C085  F07D         	movff	___lmul@product,?___lmul
 25589  0052B0  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 25590  0052B4  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 25591  0052B8  C088  F080         	movff	___lmul@product+3,?___lmul+3
 25592                           
 25593                           ; BSR set to: 0
 25594  0052BC  0012               	return		;funcret
 25595  0052BE                     __end_of___lmul:
 25596                           	opt stack 0
 25597                           tosu	equ	0xFFF
 25598                           tosh	equ	0xFFE
 25599                           tosl	equ	0xFFD
 25600                           pclath	equ	0xFFA
 25601                           tblptru	equ	0xFF8
 25602                           tblptrh	equ	0xFF7
 25603                           tblptrl	equ	0xFF6
 25604                           tablat	equ	0xFF5
 25605                           prodh	equ	0xFF4
 25606                           prodl	equ	0xFF3
 25607                           intcon	equ	0xFF2
 25608                           intcon2	equ	0xFF1
 25609                           intcon3	equ	0xFF0
 25610                           indf0	equ	0xFEF
 25611                           postinc0	equ	0xFEE
 25612                           plusw0	equ	0xFEB
 25613                           fsr0h	equ	0xFEA
 25614                           fsr0l	equ	0xFE9
 25615                           wreg	equ	0xFE8
 25616                           indf1	equ	0xFE7
 25617                           postinc1	equ	0xFE6
 25618                           postdec1	equ	0xFE5
 25619                           plusw1	equ	0xFE3
 25620                           fsr1h	equ	0xFE2
 25621                           fsr1l	equ	0xFE1
 25622                           indf2	equ	0xFDF
 25623                           postinc2	equ	0xFDE
 25624                           postdec2	equ	0xFDD
 25625                           plusw2	equ	0xFDB
 25626                           fsr2h	equ	0xFDA
 25627                           fsr2l	equ	0xFD9
 25628                           status	equ	0xFD8
 25629                           
 25630 ;; *************** function _UartSetConfigLow *****************
 25631 ;; Defined at:
 25632 ;;		line 228 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25633 ;; Parameters:    Size  Location     Type
 25634 ;;		None
 25635 ;; Auto vars:     Size  Location     Type
 25636 ;;		None
 25637 ;; Return value:  Size  Location     Type
 25638 ;;                  1    wreg      void 
 25639 ;; Registers used:
 25640 ;;		wreg, status,2
 25641 ;; Tracked objects:
 25642 ;;		On entry : 0/0
 25643 ;;		On exit  : 0/0
 25644 ;;		Unchanged: 0/0
 25645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25650 ;;Total ram usage:        0 bytes
 25651 ;; Hardware stack levels used:    1
 25652 ;; Hardware stack levels required when called:   11
 25653 ;; This function calls:
 25654 ;;		Nothing
 25655 ;; This function is called by:
 25656 ;;		_ConfigureModem
 25657 ;; This function uses a non-reentrant model
 25658 ;;
 25659                           
 25660                           	psect	text118
 25661  0052BE                     __ptext118:
 25662                           	opt stack 0
 25663  0052BE                     _UartSetConfigLow:
 25664                           	opt stack 15
 25665                           
 25666                           ;mdm_gsm_gprs.c: 230: UartConfig.UartEnable = ((UINT8)(1));
 25667                           
 25668                           ; BSR set to: 0
 25669                           ;incstack = 0
 25670  0052BE  0E01               	movlw	1
 25671  0052C0  0103               	movlb	3	; () banked
 25672  0052C2  6F24               	movwf	_UartConfig& (0+255),b
 25673                           
 25674                           ;mdm_gsm_gprs.c: 231: UartConfig.UartMode = ((UINT8)(0));
 25675  0052C4  0E00               	movlw	0
 25676  0052C6  6F25               	movwf	(_UartConfig+1)& (0+255),b
 25677                           
 25678                           ;mdm_gsm_gprs.c: 232: UartConfig.BaudRateMode = ((UINT8)(0));
 25679  0052C8  0E00               	movlw	0
 25680  0052CA  6F26               	movwf	(_UartConfig+2)& (0+255),b
 25681                           
 25682                           ;mdm_gsm_gprs.c: 233: UartConfig.HighBaudMode = ((UINT8)(0));
 25683  0052CC  0E00               	movlw	0
 25684  0052CE  6F27               	movwf	(_UartConfig+3)& (0+255),b
 25685                           
 25686                           ;mdm_gsm_gprs.c: 234: UartConfig.Tx9bitMode = ((UINT8)(0));
 25687  0052D0  0E00               	movlw	0
 25688  0052D2  6F28               	movwf	(_UartConfig+4)& (0+255),b
 25689                           
 25690                           ;mdm_gsm_gprs.c: 235: UartConfig.Rx9bitMode = ((UINT8)(0));
 25691  0052D4  0E00               	movlw	0
 25692  0052D6  6F29               	movwf	(_UartConfig+5)& (0+255),b
 25693                           
 25694                           ;mdm_gsm_gprs.c: 236: UartConfig.TxEnable = ((UINT8)(1));
 25695  0052D8  0E01               	movlw	1
 25696  0052DA  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 25697                           
 25698                           ;mdm_gsm_gprs.c: 237: UartConfig.RxEnable = ((UINT8)(1));
 25699  0052DC  0E01               	movlw	1
 25700  0052DE  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 25701                           
 25702                           ;mdm_gsm_gprs.c: 238: UartConfig.SendBreakEnable = ((UINT8)(0));
 25703  0052E0  0E00               	movlw	0
 25704  0052E2  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 25705                           
 25706                           ;mdm_gsm_gprs.c: 239: UartConfig.AutobaudEnable = ((UINT8)(0));
 25707  0052E4  0E00               	movlw	0
 25708  0052E6  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 25709                           
 25710                           ;mdm_gsm_gprs.c: 240: UartConfig.WakeUpEnable = ((UINT8)(0));
 25711  0052E8  0E00               	movlw	0
 25712  0052EA  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 25713                           
 25714                           ;mdm_gsm_gprs.c: 241: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25715  0052EC  0E00               	movlw	0
 25716  0052EE  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 25717                           
 25718                           ;mdm_gsm_gprs.c: 242: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25719  0052F0  0E01               	movlw	1
 25720  0052F2  6F30               	movwf	(_UartConfig+12)& (0+255),b
 25721                           
 25722                           ;mdm_gsm_gprs.c: 243: UartConfig.McuBusClock = ((UINT32)(48000000));
 25723  0052F4  0E00               	movlw	0
 25724  0052F6  6F31               	movwf	(_UartConfig+13)& (0+255),b
 25725  0052F8  0E6C               	movlw	108
 25726  0052FA  6F32               	movwf	(_UartConfig+14)& (0+255),b
 25727  0052FC  0EDC               	movlw	220
 25728  0052FE  6F33               	movwf	(_UartConfig+15)& (0+255),b
 25729  005300  0E02               	movlw	2
 25730  005302  6F34               	movwf	(_UartConfig+16)& (0+255),b
 25731                           
 25732                           ;mdm_gsm_gprs.c: 244: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25733  005304  0E80               	movlw	128
 25734  005306  6F35               	movwf	(_UartConfig+17)& (0+255),b
 25735  005308  0E25               	movlw	37
 25736  00530A  6F36               	movwf	(_UartConfig+18)& (0+255),b
 25737  00530C  0E00               	movlw	0
 25738  00530E  6F37               	movwf	(_UartConfig+19)& (0+255),b
 25739  005310  0E00               	movlw	0
 25740  005312  6F38               	movwf	(_UartConfig+20)& (0+255),b
 25741                           
 25742                           ; BSR set to: 3
 25743  005314  0012               	return		;funcret
 25744  005316                     __end_of_UartSetConfigLow:
 25745                           	opt stack 0
 25746                           tosu	equ	0xFFF
 25747                           tosh	equ	0xFFE
 25748                           tosl	equ	0xFFD
 25749                           pclath	equ	0xFFA
 25750                           tblptru	equ	0xFF8
 25751                           tblptrh	equ	0xFF7
 25752                           tblptrl	equ	0xFF6
 25753                           tablat	equ	0xFF5
 25754                           prodh	equ	0xFF4
 25755                           prodl	equ	0xFF3
 25756                           intcon	equ	0xFF2
 25757                           intcon2	equ	0xFF1
 25758                           intcon3	equ	0xFF0
 25759                           indf0	equ	0xFEF
 25760                           postinc0	equ	0xFEE
 25761                           plusw0	equ	0xFEB
 25762                           fsr0h	equ	0xFEA
 25763                           fsr0l	equ	0xFE9
 25764                           wreg	equ	0xFE8
 25765                           indf1	equ	0xFE7
 25766                           postinc1	equ	0xFE6
 25767                           postdec1	equ	0xFE5
 25768                           plusw1	equ	0xFE3
 25769                           fsr1h	equ	0xFE2
 25770                           fsr1l	equ	0xFE1
 25771                           indf2	equ	0xFDF
 25772                           postinc2	equ	0xFDE
 25773                           postdec2	equ	0xFDD
 25774                           plusw2	equ	0xFDB
 25775                           fsr2h	equ	0xFDA
 25776                           fsr2l	equ	0xFD9
 25777                           status	equ	0xFD8
 25778                           
 25779 ;; *************** function _CheckModem *****************
 25780 ;; Defined at:
 25781 ;;		line 282 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25782 ;; Parameters:    Size  Location     Type
 25783 ;;		None
 25784 ;; Auto vars:     Size  Location     Type
 25785 ;;		None
 25786 ;; Return value:  Size  Location     Type
 25787 ;;                  1    wreg      void 
 25788 ;; Registers used:
 25789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25790 ;; Tracked objects:
 25791 ;;		On entry : 0/0
 25792 ;;		On exit  : 0/0
 25793 ;;		Unchanged: 0/0
 25794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25799 ;;Total ram usage:        0 bytes
 25800 ;; Hardware stack levels used:    1
 25801 ;; Hardware stack levels required when called:   14
 25802 ;; This function calls:
 25803 ;;		_GenerateEvt
 25804 ;;		_OsTmr_GetTimerStatus
 25805 ;;		_OsTmr_StartTimer
 25806 ;;		_ReceiveEvt
 25807 ;;		_Uart_WriteConstString
 25808 ;; This function is called by:
 25809 ;;		_Mdm_MainTask
 25810 ;; This function uses a non-reentrant model
 25811 ;;
 25812                           
 25813                           	psect	text119
 25814  002432                     __ptext119:
 25815                           	opt stack 0
 25816  002432                     _CheckModem:
 25817                           	opt stack 13
 25818                           
 25819                           ;mdm_gsm_gprs.c: 284: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 25820                           ;mdm_gsm_gprs.c: 285: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25821                           ;mdm_gsm_gprs.c: 287: switch (CheckMdmSts)
 25822                           
 25823                           ; BSR set to: 3
 25824                           ;incstack = 0
 25825  002432  D096               	goto	l982
 25826  002434                     
 25827                           ;mdm_gsm_gprs.c: 291: OsTmr_StartTimer(&Timeout,2000);
 25828  002434  0EEE               	movlw	low CheckModem@Timeout
 25829  002436  0100               	movlb	0	; () banked
 25830  002438  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25831  00243A  0E03               	movlw	high CheckModem@Timeout
 25832  00243C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25833  00243E  0ED0               	movlw	208
 25834  002440  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25835  002442  0E07               	movlw	7
 25836  002444  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25837  002446  0E00               	movlw	0
 25838  002448  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25839  00244A  0E00               	movlw	0
 25840  00244C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25841  00244E  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 25842                           
 25843                           ;mdm_gsm_gprs.c: 293: CheckMdmSts = MdmCh_InitialDelay;
 25844  002452  0E01               	movlw	1
 25845  002454  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25846                           
 25847                           ;mdm_gsm_gprs.c: 294: break;
 25848  002456  0012               	return	
 25849  002458                     
 25850                           ;mdm_gsm_gprs.c: 298: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25851  002458  0EEE               	movlw	low CheckModem@Timeout
 25852  00245A  0100               	movlb	0	; () banked
 25853  00245C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25854  00245E  0E03               	movlw	high CheckModem@Timeout
 25855  002460  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25856  002462  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 25857  002466  06E8               	decf	wreg,f,c
 25858  002468  A4D8               	btfss	status,2,c
 25859  00246A  0012               	return	
 25860                           
 25861                           ;mdm_gsm_gprs.c: 299: {
 25862                           ;mdm_gsm_gprs.c: 301: CheckMdmSts = MdmCh_SendATE1;
 25863  00246C  0E02               	movlw	2
 25864  00246E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25865                           
 25866                           ;mdm_gsm_gprs.c: 302: }
 25867                           ;mdm_gsm_gprs.c: 303: break;
 25868  002470  0012               	return	
 25869  002472                     
 25870                           ;mdm_gsm_gprs.c: 307: Uart_WriteConstString(1,"AT\r\n");
 25871  002472  0EE5               	movlw	low STR_1
 25872  002474  0100               	movlb	0	; () banked
 25873  002476  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25874  002478  0EFF               	movlw	high STR_1
 25875  00247A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25876  00247C  0E01               	movlw	1
 25877  00247E  EC90  F02C         	call	_Uart_WriteConstString
 25878                           
 25879                           ;mdm_gsm_gprs.c: 309: OsTmr_StartTimer(&Timeout,2000u);
 25880  002482  0EEE               	movlw	low CheckModem@Timeout
 25881  002484  0100               	movlb	0	; () banked
 25882  002486  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25883  002488  0E03               	movlw	high CheckModem@Timeout
 25884  00248A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25885  00248C  0ED0               	movlw	208
 25886  00248E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25887  002490  0E07               	movlw	7
 25888  002492  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25889  002494  0E00               	movlw	0
 25890  002496  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25891  002498  0E00               	movlw	0
 25892  00249A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25893  00249C  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 25894                           
 25895                           ;mdm_gsm_gprs.c: 311: CheckMdmSts = MdmCh_WaitEcho;
 25896  0024A0  0E03               	movlw	3
 25897  0024A2  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25898                           
 25899                           ;mdm_gsm_gprs.c: 312: break;
 25900  0024A4  0012               	return	
 25901  0024A6                     
 25902                           ;mdm_gsm_gprs.c: 316: if (ReceiveEvt(&NewStringReceived))
 25903  0024A6  0E3C               	movlw	low _NewStringReceived
 25904  0024A8  0100               	movlb	0	; () banked
 25905  0024AA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25906  0024AC  0E00               	movlw	high _NewStringReceived
 25907  0024AE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25908  0024B0  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 25909  0024B4  0900               	iorlw	0
 25910  0024B6  B4D8               	btfsc	status,2,c
 25911  0024B8  D02F               	goto	l989
 25912                           
 25913                           ;mdm_gsm_gprs.c: 317: {
 25914                           ;mdm_gsm_gprs.c: 319: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 25915  0024BA  CC58  FFE8         	movff	_RxBuffer,wreg
 25916  0024BE  0A4F               	xorlw	79
 25917  0024C0  A4D8               	btfss	status,2,c
 25918  0024C2  D005               	goto	u13310
 25919  0024C4  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25920  0024C8  0A4B               	xorlw	75
 25921  0024CA  B4D8               	btfsc	status,2,c
 25922  0024CC  D00A               	goto	u13330
 25923  0024CE                     u13310:
 25924  0024CE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25925  0024D2  0A4F               	xorlw	79
 25926  0024D4  A4D8               	btfss	status,2,c
 25927  0024D6  0012               	return	
 25928  0024D8  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25929  0024DC  0A4B               	xorlw	75
 25930  0024DE  A4D8               	btfss	status,2,c
 25931  0024E0  0012               	return	
 25932  0024E2                     u13330:
 25933                           
 25934                           ;mdm_gsm_gprs.c: 320: {
 25935                           ;mdm_gsm_gprs.c: 321: MdmStatus = ModemReady;
 25936  0024E2  0E02               	movlw	2
 25937  0024E4  0100               	movlb	0	; () banked
 25938  0024E6  6FD1               	movwf	_MdmStatus& (0+255),b
 25939                           
 25940                           ; BSR set to: 0
 25941                           ;mdm_gsm_gprs.c: 323: GenerateEvt(&MdmOnOffPulseRequest);
 25942  0024E8  0EE1               	movlw	low _MdmOnOffPulseRequest
 25943  0024EA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25944  0024EC  0E00               	movlw	high _MdmOnOffPulseRequest
 25945  0024EE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25946  0024F0  ECA2  F030         	call	_GenerateEvt	;wreg free
 25947                           
 25948                           ;mdm_gsm_gprs.c: 325: OsTmr_StartTimer(&Timeout,1000u);
 25949  0024F4  0EEE               	movlw	low CheckModem@Timeout
 25950  0024F6  0100               	movlb	0	; () banked
 25951  0024F8  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25952  0024FA  0E03               	movlw	high CheckModem@Timeout
 25953  0024FC  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25954  0024FE  0EE8               	movlw	232
 25955  002500  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25956  002502  0E03               	movlw	3
 25957  002504  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25958  002506  0E00               	movlw	0
 25959  002508  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25960  00250A  0E00               	movlw	0
 25961  00250C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25962  00250E  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 25963                           
 25964                           ;mdm_gsm_gprs.c: 327: CheckMdmSts = MdmCh_Delay;
 25965  002512  0E04               	movlw	4
 25966  002514  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25967                           
 25968                           ;mdm_gsm_gprs.c: 328: }
 25969                           ;mdm_gsm_gprs.c: 329: }
 25970  002516  0012               	return	
 25971  002518                     l989:
 25972                           
 25973                           ;mdm_gsm_gprs.c: 330: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25974  002518  0EEE               	movlw	low CheckModem@Timeout
 25975  00251A  0100               	movlb	0	; () banked
 25976  00251C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25977  00251E  0E03               	movlw	high CheckModem@Timeout
 25978  002520  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25979  002522  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 25980  002526  06E8               	decf	wreg,f,c
 25981  002528  A4D8               	btfss	status,2,c
 25982  00252A  0012               	return	
 25983                           
 25984                           ;mdm_gsm_gprs.c: 331: {
 25985                           ;mdm_gsm_gprs.c: 333: MdmStatus = ModemOff;
 25986  00252C  0E00               	movlw	0
 25987  00252E  0100               	movlb	0	; () banked
 25988  002530  6FD1               	movwf	_MdmStatus& (0+255),b
 25989                           
 25990                           ;mdm_gsm_gprs.c: 335: ComChecCompleted = 1u;
 25991  002532  0E01               	movlw	1
 25992  002534  6E2B               	movwf	_ComChecCompleted,c
 25993                           
 25994                           ;mdm_gsm_gprs.c: 337: CheckMdmSts = MdmCh_Done;
 25995  002536  0E05               	movlw	5
 25996  002538  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25997                           
 25998                           ; BSR set to: 0
 25999                           ;mdm_gsm_gprs.c: 342: }
 26000                           ;mdm_gsm_gprs.c: 343: break;
 26001                           
 26002                           ; BSR set to: 0
 26003                           
 26004                           ;mdm_gsm_gprs.c: 339: else
 26005                           ;mdm_gsm_gprs.c: 340: {
 26006                           
 26007                           ; BSR set to: 0
 26008                           
 26009                           ;mdm_gsm_gprs.c: 338: }
 26010  00253A  0012               	return	
 26011  00253C                     
 26012                           ;mdm_gsm_gprs.c: 347: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 26013                           
 26014                           ; BSR set to: 0
 26015  00253C  0EEE               	movlw	low CheckModem@Timeout
 26016  00253E  0100               	movlb	0	; () banked
 26017  002540  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26018  002542  0E03               	movlw	high CheckModem@Timeout
 26019  002544  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26020  002546  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26021  00254A  06E8               	decf	wreg,f,c
 26022  00254C  A4D8               	btfss	status,2,c
 26023  00254E  0012               	return	
 26024                           
 26025                           ;mdm_gsm_gprs.c: 348: {
 26026                           ;mdm_gsm_gprs.c: 350: MdmStatus = ModemOff;
 26027  002550  0E00               	movlw	0
 26028  002552  0100               	movlb	0	; () banked
 26029  002554  6FD1               	movwf	_MdmStatus& (0+255),b
 26030                           
 26031                           ;mdm_gsm_gprs.c: 352: ComChecCompleted = 1u;
 26032  002556  0E01               	movlw	1
 26033  002558  6E2B               	movwf	_ComChecCompleted,c
 26034                           
 26035                           ;mdm_gsm_gprs.c: 354: CheckMdmSts = MdmCh_Done;
 26036  00255A  0E05               	movlw	5
 26037  00255C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26038                           
 26039                           ; BSR set to: 0
 26040                           ;mdm_gsm_gprs.c: 364: }
 26041                           
 26042                           ; BSR set to: 0
 26043                           ;mdm_gsm_gprs.c: 363: break;
 26044                           
 26045                           ;mdm_gsm_gprs.c: 362: default:
 26046                           
 26047                           ; BSR set to: 0
 26048                           ;mdm_gsm_gprs.c: 360: break;
 26049                           
 26050                           ;mdm_gsm_gprs.c: 358: case MdmCh_Done:
 26051                           
 26052                           ; BSR set to: 0
 26053                           ;mdm_gsm_gprs.c: 355: }
 26054                           ;mdm_gsm_gprs.c: 356: break;
 26055  00255E  0012               	return	
 26056  002560                     l982:
 26057                           
 26058                           ; BSR set to: 0
 26059  002560  502A               	movf	CheckModem@CheckMdmSts,w,c
 26060                           
 26061                           ; Switch size 1, requested type "space"
 26062                           ; Number of cases is 6, Range of values is 0 to 5
 26063                           ; switch strategies available:
 26064                           ; Name         Instructions Cycles
 26065                           ; simple_byte           19    10 (average)
 26066                           ;	Chosen strategy is simple_byte
 26067  002562  0A00               	xorlw	0	; case 0
 26068  002564  B4D8               	btfsc	status,2,c
 26069  002566  D766               	goto	l983
 26070  002568  0A01               	xorlw	1	; case 1
 26071  00256A  B4D8               	btfsc	status,2,c
 26072  00256C  D775               	goto	l985
 26073  00256E  0A03               	xorlw	3	; case 2
 26074  002570  B4D8               	btfsc	status,2,c
 26075  002572  D77F               	goto	l987
 26076  002574  0A01               	xorlw	1	; case 3
 26077  002576  B4D8               	btfsc	status,2,c
 26078  002578  D796               	goto	l988
 26079  00257A  0A07               	xorlw	7	; case 4
 26080  00257C  B4D8               	btfsc	status,2,c
 26081  00257E  D7DE               	goto	l998
 26082  002580  0A01               	xorlw	1	; case 5
 26083  002582  0012               	return	
 26084  002584                     __end_of_CheckModem:
 26085                           	opt stack 0
 26086                           tosu	equ	0xFFF
 26087                           tosh	equ	0xFFE
 26088                           tosl	equ	0xFFD
 26089                           pclath	equ	0xFFA
 26090                           tblptru	equ	0xFF8
 26091                           tblptrh	equ	0xFF7
 26092                           tblptrl	equ	0xFF6
 26093                           tablat	equ	0xFF5
 26094                           prodh	equ	0xFF4
 26095                           prodl	equ	0xFF3
 26096                           intcon	equ	0xFF2
 26097                           intcon2	equ	0xFF1
 26098                           intcon3	equ	0xFF0
 26099                           indf0	equ	0xFEF
 26100                           postinc0	equ	0xFEE
 26101                           plusw0	equ	0xFEB
 26102                           fsr0h	equ	0xFEA
 26103                           fsr0l	equ	0xFE9
 26104                           wreg	equ	0xFE8
 26105                           indf1	equ	0xFE7
 26106                           postinc1	equ	0xFE6
 26107                           postdec1	equ	0xFE5
 26108                           plusw1	equ	0xFE3
 26109                           fsr1h	equ	0xFE2
 26110                           fsr1l	equ	0xFE1
 26111                           indf2	equ	0xFDF
 26112                           postinc2	equ	0xFDE
 26113                           postdec2	equ	0xFDD
 26114                           plusw2	equ	0xFDB
 26115                           fsr2h	equ	0xFDA
 26116                           fsr2l	equ	0xFD9
 26117                           status	equ	0xFD8
 26118                           
 26119 ;; *************** function _MdmCntSm *****************
 26120 ;; Defined at:
 26121 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26122 ;; Parameters:    Size  Location     Type
 26123 ;;		None
 26124 ;; Auto vars:     Size  Location     Type
 26125 ;;		None
 26126 ;; Return value:  Size  Location     Type
 26127 ;;                  1    wreg      void 
 26128 ;; Registers used:
 26129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26130 ;; Tracked objects:
 26131 ;;		On entry : 0/0
 26132 ;;		On exit  : 0/0
 26133 ;;		Unchanged: 0/0
 26134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26139 ;;Total ram usage:        0 bytes
 26140 ;; Hardware stack levels used:    1
 26141 ;; Hardware stack levels required when called:   12
 26142 ;; This function calls:
 26143 ;;		_InitModemInterface
 26144 ;;		_ReceiveEvt
 26145 ;; This function is called by:
 26146 ;;		_Mdm_DrvMainFn
 26147 ;; This function uses a non-reentrant model
 26148 ;;
 26149                           
 26150                           	psect	text120
 26151  0043AC                     __ptext120:
 26152                           	opt stack 0
 26153  0043AC                     _MdmCntSm:
 26154                           	opt stack 15
 26155                           
 26156                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 26157                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 26158                           ;mdm_drv.c: 204: switch (MdmCntState)
 26159                           
 26160                           ;incstack = 0
 26161  0043AC  D045               	goto	l315
 26162  0043AE                     
 26163                           ;mdm_drv.c: 208: InitModemInterface();
 26164  0043AE  EC54  F031         	call	_InitModemInterface	;wreg free
 26165                           
 26166                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 26167  0043B2  0E01               	movlw	1
 26168  0043B4  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26169                           
 26170                           ;mdm_drv.c: 211: break;
 26171  0043B6  0012               	return	
 26172  0043B8                     
 26173                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 26174  0043B8  0EE1               	movlw	low _MdmOnOffPulseRequest
 26175  0043BA  0100               	movlb	0	; () banked
 26176  0043BC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26177  0043BE  0E00               	movlw	high _MdmOnOffPulseRequest
 26178  0043C0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26179  0043C2  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 26180  0043C6  0900               	iorlw	0
 26181  0043C8  B4D8               	btfsc	status,2,c
 26182  0043CA  D009               	goto	l319
 26183                           
 26184                           ;mdm_drv.c: 216: {
 26185                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 26186  0043CC  0E02               	movlw	2
 26187  0043CE  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26188                           
 26189                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 26190  0043D0  8284               	bsf	3972,1,c	;volatile
 26191                           
 26192                           ;mdm_drv.c: 222: Counter = 0;
 26193  0043D2  0E00               	movlw	0
 26194  0043D4  0102               	movlb	2	; () banked
 26195  0043D6  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26196  0043D8  0E00               	movlw	0
 26197  0043DA  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 26198                           
 26199                           ;mdm_drv.c: 223: }
 26200  0043DC  0012               	return	
 26201  0043DE                     l319:
 26202                           
 26203                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 26204                           
 26205                           ; BSR set to: 2
 26206  0043DE  0E3D               	movlw	low _MdmResetRequest
 26207  0043E0  0100               	movlb	0	; () banked
 26208  0043E2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26209  0043E4  0E00               	movlw	high _MdmResetRequest
 26210  0043E6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26211  0043E8  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 26212  0043EC  0900               	iorlw	0
 26213  0043EE  B4D8               	btfsc	status,2,c
 26214  0043F0  0012               	return	
 26215                           
 26216                           ;mdm_drv.c: 225: {
 26217                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 26218  0043F2  0E03               	movlw	3
 26219  0043F4  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26220                           
 26221                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 26222  0043F6  8084               	bsf	3972,0,c	;volatile
 26223                           
 26224                           ;mdm_drv.c: 231: Counter = 0;
 26225  0043F8  0E00               	movlw	0
 26226  0043FA  0102               	movlb	2	; () banked
 26227  0043FC  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26228  0043FE  0E00               	movlw	0
 26229  004400  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 26230                           
 26231                           ; BSR set to: 2
 26232                           ;mdm_drv.c: 236: }
 26233                           ;mdm_drv.c: 237: break;
 26234                           
 26235                           ; BSR set to: 2
 26236                           
 26237                           ;mdm_drv.c: 233: else
 26238                           ;mdm_drv.c: 234: {
 26239                           
 26240                           ; BSR set to: 2
 26241                           
 26242                           ;mdm_drv.c: 232: }
 26243  004402  0012               	return	
 26244  004404                     
 26245                           ;mdm_drv.c: 241: Counter++;
 26246                           
 26247                           ; BSR set to: 2
 26248  004404  0102               	movlb	2	; () banked
 26249  004406  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26250  004408  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26251                           
 26252                           ; BSR set to: 2
 26253                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 26254  00440A  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26255  00440C  E104               	bnz	u13230
 26256  00440E  0E96               	movlw	150
 26257  004410  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 26258  004412  A0D8               	btfss	status,0,c
 26259  004414  0012               	return	
 26260  004416                     u13230:
 26261                           
 26262                           ; BSR set to: 2
 26263                           ;mdm_drv.c: 244: {
 26264                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 26265  004416  9284               	bcf	3972,1,c	;volatile
 26266                           
 26267                           ; BSR set to: 2
 26268                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 26269  004418  0E01               	movlw	1
 26270  00441A  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26271                           
 26272                           ; BSR set to: 2
 26273                           ;mdm_drv.c: 249: }
 26274                           ;mdm_drv.c: 250: break;
 26275  00441C  0012               	return	
 26276  00441E                     
 26277                           ;mdm_drv.c: 254: Counter++;
 26278                           
 26279                           ; BSR set to: 2
 26280  00441E  0102               	movlb	2	; () banked
 26281  004420  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26282  004422  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26283                           
 26284                           ; BSR set to: 2
 26285                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 26286  004424  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26287  004426  E104               	bnz	u13240
 26288  004428  0E0A               	movlw	10
 26289  00442A  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 26290  00442C  A0D8               	btfss	status,0,c
 26291  00442E  0012               	return	
 26292  004430                     u13240:
 26293                           
 26294                           ; BSR set to: 2
 26295                           ;mdm_drv.c: 257: {
 26296                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 26297  004430  9084               	bcf	3972,0,c	;volatile
 26298                           
 26299                           ; BSR set to: 2
 26300                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 26301  004432  0E01               	movlw	1
 26302  004434  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26303                           
 26304                           ; BSR set to: 2
 26305                           ;mdm_drv.c: 267: }
 26306                           
 26307                           ; BSR set to: 2
 26308                           ;mdm_drv.c: 266: break;
 26309                           
 26310                           ;mdm_drv.c: 265: default:
 26311                           
 26312                           ; BSR set to: 2
 26313                           ;mdm_drv.c: 262: }
 26314                           ;mdm_drv.c: 263: break;
 26315  004436  0012               	return	
 26316  004438                     l315:
 26317                           
 26318                           ; BSR set to: 2
 26319  004438  502E               	movf	MdmCntSm@MdmCntState,w,c
 26320                           
 26321                           ; Switch size 1, requested type "space"
 26322                           ; Number of cases is 4, Range of values is 0 to 3
 26323                           ; switch strategies available:
 26324                           ; Name         Instructions Cycles
 26325                           ; simple_byte           13     7 (average)
 26326                           ;	Chosen strategy is simple_byte
 26327  00443A  0A00               	xorlw	0	; case 0
 26328  00443C  B4D8               	btfsc	status,2,c
 26329  00443E  D7B7               	goto	l316
 26330  004440  0A01               	xorlw	1	; case 1
 26331  004442  B4D8               	btfsc	status,2,c
 26332  004444  D7B9               	goto	l318
 26333  004446  0A03               	xorlw	3	; case 2
 26334  004448  B4D8               	btfsc	status,2,c
 26335  00444A  D7DC               	goto	l323
 26336  00444C  0A01               	xorlw	1	; case 3
 26337  00444E  A4D8               	btfss	status,2,c
 26338  004450  0012               	return	
 26339  004452  D7E5               	goto	l325
 26340  004454                     __end_of_MdmCntSm:
 26341                           	opt stack 0
 26342                           tosu	equ	0xFFF
 26343                           tosh	equ	0xFFE
 26344                           tosl	equ	0xFFD
 26345                           pclath	equ	0xFFA
 26346                           tblptru	equ	0xFF8
 26347                           tblptrh	equ	0xFF7
 26348                           tblptrl	equ	0xFF6
 26349                           tablat	equ	0xFF5
 26350                           prodh	equ	0xFF4
 26351                           prodl	equ	0xFF3
 26352                           intcon	equ	0xFF2
 26353                           intcon2	equ	0xFF1
 26354                           intcon3	equ	0xFF0
 26355                           indf0	equ	0xFEF
 26356                           postinc0	equ	0xFEE
 26357                           plusw0	equ	0xFEB
 26358                           fsr0h	equ	0xFEA
 26359                           fsr0l	equ	0xFE9
 26360                           wreg	equ	0xFE8
 26361                           indf1	equ	0xFE7
 26362                           postinc1	equ	0xFE6
 26363                           postdec1	equ	0xFE5
 26364                           plusw1	equ	0xFE3
 26365                           fsr1h	equ	0xFE2
 26366                           fsr1l	equ	0xFE1
 26367                           indf2	equ	0xFDF
 26368                           postinc2	equ	0xFDE
 26369                           postdec2	equ	0xFDD
 26370                           plusw2	equ	0xFDB
 26371                           fsr2h	equ	0xFDA
 26372                           fsr2l	equ	0xFD9
 26373                           status	equ	0xFD8
 26374                           
 26375 ;; *************** function _InitModemInterface *****************
 26376 ;; Defined at:
 26377 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26378 ;; Parameters:    Size  Location     Type
 26379 ;;		None
 26380 ;; Auto vars:     Size  Location     Type
 26381 ;;		None
 26382 ;; Return value:  Size  Location     Type
 26383 ;;                  1    wreg      void 
 26384 ;; Registers used:
 26385 ;;		None
 26386 ;; Tracked objects:
 26387 ;;		On entry : 0/0
 26388 ;;		On exit  : 0/0
 26389 ;;		Unchanged: 0/0
 26390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26395 ;;Total ram usage:        0 bytes
 26396 ;; Hardware stack levels used:    1
 26397 ;; Hardware stack levels required when called:   11
 26398 ;; This function calls:
 26399 ;;		Nothing
 26400 ;; This function is called by:
 26401 ;;		_MdmCntSm
 26402 ;; This function uses a non-reentrant model
 26403 ;;
 26404                           
 26405                           	psect	text121
 26406  0062A8                     __ptext121:
 26407                           	opt stack 0
 26408  0062A8                     _InitModemInterface:
 26409                           	opt stack 15
 26410                           
 26411                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 26412                           
 26413                           ;incstack = 0
 26414  0062A8  9096               	bcf	3990,0,c	;volatile
 26415                           
 26416                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 26417  0062AA  9296               	bcf	3990,1,c	;volatile
 26418                           
 26419                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 26420  0062AC  8496               	bsf	3990,2,c	;volatile
 26421  0062AE  0012               	return		;funcret
 26422  0062B0                     __end_of_InitModemInterface:
 26423                           	opt stack 0
 26424                           tosu	equ	0xFFF
 26425                           tosh	equ	0xFFE
 26426                           tosl	equ	0xFFD
 26427                           pclath	equ	0xFFA
 26428                           tblptru	equ	0xFF8
 26429                           tblptrh	equ	0xFF7
 26430                           tblptrl	equ	0xFF6
 26431                           tablat	equ	0xFF5
 26432                           prodh	equ	0xFF4
 26433                           prodl	equ	0xFF3
 26434                           intcon	equ	0xFF2
 26435                           intcon2	equ	0xFF1
 26436                           intcon3	equ	0xFF0
 26437                           indf0	equ	0xFEF
 26438                           postinc0	equ	0xFEE
 26439                           plusw0	equ	0xFEB
 26440                           fsr0h	equ	0xFEA
 26441                           fsr0l	equ	0xFE9
 26442                           wreg	equ	0xFE8
 26443                           indf1	equ	0xFE7
 26444                           postinc1	equ	0xFE6
 26445                           postdec1	equ	0xFE5
 26446                           plusw1	equ	0xFE3
 26447                           fsr1h	equ	0xFE2
 26448                           fsr1l	equ	0xFE1
 26449                           indf2	equ	0xFDF
 26450                           postinc2	equ	0xFDE
 26451                           postdec2	equ	0xFDD
 26452                           plusw2	equ	0xFDB
 26453                           fsr2h	equ	0xFDA
 26454                           fsr2l	equ	0xFD9
 26455                           status	equ	0xFD8
 26456                           
 26457 ;; *************** function _InitGprsNetwork *****************
 26458 ;; Defined at:
 26459 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26460 ;; Parameters:    Size  Location     Type
 26461 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 26462 ;;		 -> NULL(0), 
 26463 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 26464 ;; Auto vars:     Size  Location     Type
 26465 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26466 ;;  Index           1   50[BANK1 ] unsigned char 
 26467 ;; Return value:  Size  Location     Type
 26468 ;;                  1    wreg      enum E8921
 26469 ;; Registers used:
 26470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26471 ;; Tracked objects:
 26472 ;;		On entry : 0/0
 26473 ;;		On exit  : 0/0
 26474 ;;		Unchanged: 0/0
 26475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26476 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26477 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26478 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26479 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26480 ;;Total ram usage:       56 bytes
 26481 ;; Hardware stack levels used:    1
 26482 ;; Hardware stack levels required when called:   14
 26483 ;; This function calls:
 26484 ;;		_ClearBuffer
 26485 ;;		_OsTmr_GetTimerStatus
 26486 ;;		_OsTmr_StartTimer
 26487 ;;		_ReceiveEvt
 26488 ;;		_StringCopy
 26489 ;;		_Uart_WriteConstString
 26490 ;;		_Uart_WriteString
 26491 ;; This function is called by:
 26492 ;;		_MdmHttp_MainTask
 26493 ;; This function uses a non-reentrant model
 26494 ;;
 26495                           
 26496                           	psect	text122
 26497  000DC8                     __ptext122:
 26498                           	opt stack 0
 26499  000DC8                     _InitGprsNetwork:
 26500                           	opt stack 13
 26501                           
 26502                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 26503                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 26504                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 26505                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 26506                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 26507                           
 26508                           ;incstack = 0
 26509  000DC8  0E00               	movlw	0
 26510  000DCA  0101               	movlb	1	; () banked
 26511  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26512                           
 26513                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 26514  000DCE  D154               	goto	l1216
 26515  000DD0                     
 26516                           ; BSR set to: 1
 26517                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 26518                           
 26519                           ; BSR set to: 1
 26520  000DD0  0EDA               	movlw	low _InitNetwork
 26521  000DD2  0100               	movlb	0	; () banked
 26522  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26523  000DD6  0E00               	movlw	high _InitNetwork
 26524  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26525  000DDA  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 26526  000DDE  0900               	iorlw	0
 26527  000DE0  B4D8               	btfsc	status,2,c
 26528  000DE2  D166               	goto	l1219
 26529                           
 26530                           ;mdm_gsm_gprs_http.c: 137: {
 26531                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 26532  000DE4  0E01               	movlw	1
 26533  000DE6  D141               	goto	L75
 26534  000DE8                     
 26535                           ; BSR set to: 1
 26536                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 26537                           
 26538                           ; BSR set to: 1
 26539  000DE8  0E96               	movlw	low STR_8
 26540  000DEA  0100               	movlb	0	; () banked
 26541  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26542  000DEE  0EFE               	movlw	high STR_8
 26543  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26544  000DF2  0E01               	movlw	1
 26545  000DF4  EC90  F02C         	call	_Uart_WriteConstString
 26546                           
 26547                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 26548  000DF8  0E07               	movlw	7
 26549  000DFA  0101               	movlb	1	; () banked
 26550  000DFC  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26551                           
 26552                           ; BSR set to: 1
 26553                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 26554  000DFE  0E02               	movlw	2
 26555  000E00  0100               	movlb	0	; () banked
 26556  000E02  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26557                           
 26558                           ; BSR set to: 0
 26559                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 26560  000E04  0EF5               	movlw	low _ConnTimeout
 26561  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26562  000E08  0E02               	movlw	high _ConnTimeout
 26563  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26564  000E0C  0E20               	movlw	32
 26565  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26566  000E10  0E4E               	movlw	78
 26567  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26568  000E14  0E00               	movlw	0
 26569  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26570  000E18  0E00               	movlw	0
 26571  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26572  000E1C  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 26573  000E20  D0C7               	goto	l14287
 26574  000E22                     
 26575                           ; BSR set to: 1
 26576                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 26577                           
 26578                           ; BSR set to: 1
 26579  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 26580  000E24  0100               	movlb	0	; () banked
 26581  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26582  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 26583  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26584  000E2C  0E00               	movlw	0
 26585  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26586  000E30  0E32               	movlw	50
 26587  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26588  000E34  EC00  F02E         	call	_ClearBuffer	;wreg free
 26589                           
 26590                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 26591  000E38  0ECA               	movlw	low STR_9
 26592  000E3A  0100               	movlb	0	; () banked
 26593  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26594  000E3E  0EFE               	movlw	high STR_9
 26595  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26596  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 26597  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26598  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 26599  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26600  000E4A  0E00               	movlw	0
 26601  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26602  000E4E  0E14               	movlw	20
 26603  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 26604  000E52  EC4A  F028         	call	_StringCopy	;wreg free
 26605                           
 26606                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 26607  000E56  0E00               	movlw	0
 26608  000E58  0101               	movlb	1	; () banked
 26609  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26610  000E5C  D01C               	goto	l1222
 26611  000E5E                     
 26612                           ; BSR set to: 1
 26613                           ;mdm_gsm_gprs_http.c: 161: {
 26614                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 26615                           
 26616                           ; BSR set to: 1
 26617  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26618  000E60  0D01               	mullw	1
 26619  000E62  50F3               	movf	prodl,w,c
 26620  000E64  0100               	movlb	0	; () banked
 26621  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 26622  000E68  6ED9               	movwf	fsr2l,c
 26623  000E6A  50F4               	movf	prodh,w,c
 26624  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 26625  000E6E  6EDA               	movwf	fsr2h,c
 26626  000E70  0101               	movlb	1	; () banked
 26627  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26628  000E74  0100               	movlb	0	; () banked
 26629  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26630  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26631  000E7A  0E14               	movlw	20
 26632  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26633  000E7E  0E00               	movlw	0
 26634  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26635  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 26636  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26637  000E86  6EE1               	movwf	fsr1l,c
 26638  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 26639  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26640  000E8C  6EE2               	movwf	fsr1h,c
 26641  000E8E  CFDF FFE7          	movff	indf2,indf1
 26642                           
 26643                           ; BSR set to: 0
 26644  000E92  0101               	movlb	1	; () banked
 26645  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 26646  000E96                     l1222:
 26647                           
 26648                           ; BSR set to: 1
 26649                           
 26650                           ; BSR set to: 1
 26651  000E96  0100               	movlb	0	; () banked
 26652  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 26653  000E9A  0101               	movlb	1	; () banked
 26654  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 26655  000E9E  A0D8               	btfss	status,0,c
 26656  000EA0  D7DE               	goto	l1223
 26657                           
 26658                           ; BSR set to: 1
 26659                           ;mdm_gsm_gprs_http.c: 163: }
 26660                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 26661                           
 26662                           ; BSR set to: 1
 26663  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26664  000EA4  0100               	movlb	0	; () banked
 26665  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26666  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26667  000EAA  0E14               	movlw	20
 26668  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26669  000EAE  0E00               	movlw	0
 26670  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26671  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 26672  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26673  000EB6  6ED9               	movwf	fsr2l,c
 26674  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 26675  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26676  000EBC  6EDA               	movwf	fsr2h,c
 26677  000EBE  0E22               	movlw	34
 26678  000EC0  6EDF               	movwf	indf2,c
 26679                           
 26680                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 26681  000EC2  0101               	movlb	1	; () banked
 26682  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26683  000EC6  0100               	movlb	0	; () banked
 26684  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26685  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26686  000ECC  0E15               	movlw	21
 26687  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26688  000ED0  0E00               	movlw	0
 26689  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26690  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 26691  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26692  000ED8  6ED9               	movwf	fsr2l,c
 26693  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 26694  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26695  000EDE  6EDA               	movwf	fsr2h,c
 26696  000EE0  0E0D               	movlw	13
 26697  000EE2  6EDF               	movwf	indf2,c
 26698                           
 26699                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 26700  000EE4  0101               	movlb	1	; () banked
 26701  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26702  000EE8  0100               	movlb	0	; () banked
 26703  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26704  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26705  000EEE  0E16               	movlw	22
 26706  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26707  000EF2  0E00               	movlw	0
 26708  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26709  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 26710  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26711  000EFA  6ED9               	movwf	fsr2l,c
 26712  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 26713  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26714  000F00  6EDA               	movwf	fsr2h,c
 26715  000F02  0E00               	movlw	0
 26716  000F04  6EDF               	movwf	indf2,c
 26717                           
 26718                           ; BSR set to: 0
 26719                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 26720  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 26721  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26722  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 26723  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26724  000F0E  0E01               	movlw	1
 26725  000F10  EC51  F02D         	call	_Uart_WriteString
 26726                           
 26727                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 26728  000F14  0E07               	movlw	7
 26729  000F16  0101               	movlb	1	; () banked
 26730  000F18  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26731                           
 26732                           ; BSR set to: 1
 26733                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 26734  000F1A  0E03               	movlw	3
 26735  000F1C  0100               	movlb	0	; () banked
 26736  000F1E  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26737                           
 26738                           ; BSR set to: 0
 26739                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 26740  000F20  0EF5               	movlw	low _ConnTimeout
 26741  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26742  000F24  0E02               	movlw	high _ConnTimeout
 26743  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26744  000F28  0E20               	movlw	32
 26745  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26746  000F2C  0E4E               	movlw	78
 26747  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26748  000F30  0E00               	movlw	0
 26749  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26750  000F34  0E00               	movlw	0
 26751  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26752  000F38  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 26753  000F3C  D039               	goto	l14287
 26754  000F3E                     
 26755                           ; BSR set to: 1
 26756                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 26757                           
 26758                           ; BSR set to: 1
 26759  000F3E  0E4A               	movlw	low STR_10
 26760  000F40  0100               	movlb	0	; () banked
 26761  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26762  000F44  0EFF               	movlw	high STR_10
 26763  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26764  000F48  0E01               	movlw	1
 26765  000F4A  EC90  F02C         	call	_Uart_WriteConstString
 26766                           
 26767                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 26768  000F4E  0E07               	movlw	7
 26769  000F50  0101               	movlb	1	; () banked
 26770  000F52  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26771                           
 26772                           ; BSR set to: 1
 26773                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 26774  000F54  0E05               	movlw	5
 26775  000F56  0100               	movlb	0	; () banked
 26776  000F58  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26777                           
 26778                           ; BSR set to: 0
 26779                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 26780  000F5A  0EF5               	movlw	low _ConnTimeout
 26781  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26782  000F5E  0E02               	movlw	high _ConnTimeout
 26783  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26784  000F62  0E20               	movlw	32
 26785  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26786  000F66  0E4E               	movlw	78
 26787  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26788  000F6A  0E00               	movlw	0
 26789  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26790  000F6E  0E00               	movlw	0
 26791  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26792  000F72  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 26793  000F76  D01C               	goto	l14287
 26794  000F78                     
 26795                           ; BSR set to: 1
 26796                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 26797                           
 26798                           ; BSR set to: 1
 26799  000F78  0E58               	movlw	low STR_11
 26800  000F7A  0100               	movlb	0	; () banked
 26801  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26802  000F7E  0EFF               	movlw	high STR_11
 26803  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26804  000F82  0E01               	movlw	1
 26805  000F84  EC90  F02C         	call	_Uart_WriteConstString
 26806                           
 26807                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 26808  000F88  0E08               	movlw	8
 26809  000F8A  0101               	movlb	1	; () banked
 26810  000F8C  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26811                           
 26812                           ; BSR set to: 1
 26813                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 26814  000F8E  0E05               	movlw	5
 26815  000F90  0100               	movlb	0	; () banked
 26816  000F92  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26817                           
 26818                           ; BSR set to: 0
 26819                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 26820  000F94  0EF5               	movlw	low _ConnTimeout
 26821  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26822  000F98  0E02               	movlw	high _ConnTimeout
 26823  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26824  000F9C  0E20               	movlw	32
 26825  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26826  000FA0  0E4E               	movlw	78
 26827  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26828  000FA4  0E00               	movlw	0
 26829  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26830  000FA8  0E00               	movlw	0
 26831  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26832  000FAC  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 26833  000FB0                     l14287:
 26834                           
 26835                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 26836  000FB0  0E01               	movlw	1
 26837  000FB2  0101               	movlb	1	; () banked
 26838  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26839                           
 26840                           ;mdm_gsm_gprs_http.c: 201: break;
 26841  000FB6  D07C               	goto	l1219
 26842  000FB8                     
 26843                           ; BSR set to: 1
 26844                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 26845                           
 26846                           ; BSR set to: 1
 26847  000FB8  0E02               	movlw	2
 26848  000FBA  D05A               	goto	L74
 26849  000FBC                     
 26850                           ; BSR set to: 1
 26851                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 26852                           
 26853                           ; BSR set to: 1
 26854  000FBC  0E3C               	movlw	low _NewStringReceived
 26855  000FBE  0100               	movlb	0	; () banked
 26856  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26857  000FC2  0E00               	movlw	high _NewStringReceived
 26858  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26859  000FC6  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 26860  000FCA  0900               	iorlw	0
 26861  000FCC  B4D8               	btfsc	status,2,c
 26862  000FCE  D018               	goto	l1229
 26863                           
 26864                           ;mdm_gsm_gprs_http.c: 212: {
 26865                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26866  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 26867  000FD4  0A4F               	xorlw	79
 26868  000FD6  A4D8               	btfss	status,2,c
 26869  000FD8  D06B               	goto	l1219
 26870  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26871  000FDE  0A4B               	xorlw	75
 26872  000FE0  A4D8               	btfss	status,2,c
 26873  000FE2  D066               	goto	l1219
 26874                           
 26875                           ;mdm_gsm_gprs_http.c: 215: {
 26876                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 26877  000FE4  C0D0  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26878                           
 26879                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 26880  000FE8  0E58               	movlw	low _RxBuffer
 26881  000FEA  0100               	movlb	0	; () banked
 26882  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26883  000FEE  0E0C               	movlw	high _RxBuffer
 26884  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26885  000FF2  0E01               	movlw	1
 26886  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26887  000FF6  0E90               	movlw	144
 26888  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26889  000FFA  EC00  F02E         	call	_ClearBuffer	;wreg free
 26890                           
 26891                           ;mdm_gsm_gprs_http.c: 220: }
 26892                           ;mdm_gsm_gprs_http.c: 221: }
 26893  000FFE  D058               	goto	l1219
 26894  001000                     l1229:
 26895                           
 26896                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26897  001000  0EF5               	movlw	low _ConnTimeout
 26898  001002  0100               	movlb	0	; () banked
 26899  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26900  001006  0E02               	movlw	high _ConnTimeout
 26901  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26902  00100A  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26903  00100E  D029               	goto	L39
 26904  001010                     
 26905                           ; BSR set to: 1
 26906                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 26907                           
 26908                           ; BSR set to: 1
 26909  001010  0E3C               	movlw	low _NewStringReceived
 26910  001012  0100               	movlb	0	; () banked
 26911  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26912  001016  0E00               	movlw	high _NewStringReceived
 26913  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26914  00101A  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 26915  00101E  0900               	iorlw	0
 26916  001020  B4D8               	btfsc	status,2,c
 26917  001022  D018               	goto	l1234
 26918                           
 26919                           ;mdm_gsm_gprs_http.c: 232: {
 26920                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 26921  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 26922  001028  0A2B               	xorlw	43
 26923  00102A  A4D8               	btfss	status,2,c
 26924  00102C  D041               	goto	l1219
 26925  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26926  001032  0A53               	xorlw	83
 26927  001034  A4D8               	btfss	status,2,c
 26928  001036  D03C               	goto	l1219
 26929                           
 26930                           ;mdm_gsm_gprs_http.c: 235: {
 26931                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 26932  001038  C0D0  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26933                           
 26934                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 26935  00103C  0E58               	movlw	low _RxBuffer
 26936  00103E  0100               	movlb	0	; () banked
 26937  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26938  001042  0E0C               	movlw	high _RxBuffer
 26939  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26940  001046  0E01               	movlw	1
 26941  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26942  00104A  0E90               	movlw	144
 26943  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26944  00104E  EC00  F02E         	call	_ClearBuffer	;wreg free
 26945                           
 26946                           ;mdm_gsm_gprs_http.c: 240: }
 26947                           ;mdm_gsm_gprs_http.c: 241: }
 26948  001052  D02E               	goto	l1219
 26949  001054                     l1234:
 26950                           
 26951                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26952  001054  0EF5               	movlw	low _ConnTimeout
 26953  001056  0100               	movlb	0	; () banked
 26954  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26955  00105A  0E02               	movlw	high _ConnTimeout
 26956  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26957  00105E  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26958  001062                     L39:
 26959  001062  06E8               	decf	wreg,f,c
 26960  001064  A4D8               	btfss	status,2,c
 26961  001066  D024               	goto	l1219
 26962                           
 26963                           ;mdm_gsm_gprs_http.c: 243: {
 26964                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 26965  001068  0E06               	movlw	6
 26966  00106A                     L75:
 26967  00106A  0101               	movlb	1	; () banked
 26968  00106C  D003               	goto	L38
 26969  00106E                     
 26970                           ; BSR set to: 1
 26971                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 26972                           
 26973                           ; BSR set to: 1
 26974  00106E  0E03               	movlw	3
 26975  001070                     L74:
 26976  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26977                           
 26978                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 26979  001072  0E00               	movlw	0
 26980  001074                     L38:
 26981  001074  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26982                           
 26983                           ; BSR set to: 1
 26984                           ;mdm_gsm_gprs_http.c: 257: }
 26985                           
 26986                           ; BSR set to: 1
 26987                           ;mdm_gsm_gprs_http.c: 256: break;
 26988                           
 26989                           ;mdm_gsm_gprs_http.c: 255: default:
 26990                           
 26991                           ;mdm_gsm_gprs_http.c: 253: break;
 26992  001076  D01C               	goto	l1219
 26993  001078                     l1216:
 26994                           
 26995                           ; BSR set to: 1
 26996                           
 26997                           ; BSR set to: 1
 26998  001078  51ED               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 26999                           
 27000                           ; Switch size 1, requested type "space"
 27001                           ; Number of cases is 9, Range of values is 0 to 8
 27002                           ; switch strategies available:
 27003                           ; Name         Instructions Cycles
 27004                           ; simple_byte           28    15 (average)
 27005                           ;	Chosen strategy is simple_byte
 27006  00107A  0A00               	xorlw	0	; case 0
 27007  00107C  B4D8               	btfsc	status,2,c
 27008  00107E  D6A8               	goto	l1217
 27009  001080  0A01               	xorlw	1	; case 1
 27010  001082  B4D8               	btfsc	status,2,c
 27011  001084  D6B1               	goto	l1220
 27012  001086  0A03               	xorlw	3	; case 2
 27013  001088  B4D8               	btfsc	status,2,c
 27014  00108A  D6CB               	goto	l1221
 27015  00108C  0A01               	xorlw	1	; case 3
 27016  00108E  B4D8               	btfsc	status,2,c
 27017  001090  D756               	goto	l1225
 27018  001092  0A07               	xorlw	7	; case 4
 27019  001094  B4D8               	btfsc	status,2,c
 27020  001096  D770               	goto	l1226
 27021  001098  0A01               	xorlw	1	; case 5
 27022  00109A  B4D8               	btfsc	status,2,c
 27023  00109C  D78D               	goto	l1227
 27024  00109E  0A03               	xorlw	3	; case 6
 27025  0010A0  B4D8               	btfsc	status,2,c
 27026  0010A2  D7E5               	goto	l1238
 27027  0010A4  0A01               	xorlw	1	; case 7
 27028  0010A6  B4D8               	btfsc	status,2,c
 27029  0010A8  D789               	goto	l1228
 27030  0010AA  0A0F               	xorlw	15	; case 8
 27031  0010AC  B4D8               	btfsc	status,2,c
 27032  0010AE  D7B0               	goto	l1233
 27033  0010B0                     l1219:
 27034                           
 27035                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 27036                           
 27037                           ; BSR set to: 1
 27038  0010B0  0101               	movlb	1	; () banked
 27039  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 27040  0010B4  0012               	return	
 27041  0010B6                     __end_of_InitGprsNetwork:
 27042                           	opt stack 0
 27043                           tosu	equ	0xFFF
 27044                           tosh	equ	0xFFE
 27045                           tosl	equ	0xFFD
 27046                           pclath	equ	0xFFA
 27047                           tblptru	equ	0xFF8
 27048                           tblptrh	equ	0xFF7
 27049                           tblptrl	equ	0xFF6
 27050                           tablat	equ	0xFF5
 27051                           prodh	equ	0xFF4
 27052                           prodl	equ	0xFF3
 27053                           intcon	equ	0xFF2
 27054                           intcon2	equ	0xFF1
 27055                           intcon3	equ	0xFF0
 27056                           indf0	equ	0xFEF
 27057                           postinc0	equ	0xFEE
 27058                           plusw0	equ	0xFEB
 27059                           fsr0h	equ	0xFEA
 27060                           fsr0l	equ	0xFE9
 27061                           wreg	equ	0xFE8
 27062                           indf1	equ	0xFE7
 27063                           postinc1	equ	0xFE6
 27064                           postdec1	equ	0xFE5
 27065                           plusw1	equ	0xFE3
 27066                           fsr1h	equ	0xFE2
 27067                           fsr1l	equ	0xFE1
 27068                           indf2	equ	0xFDF
 27069                           postinc2	equ	0xFDE
 27070                           postdec2	equ	0xFDD
 27071                           plusw2	equ	0xFDB
 27072                           fsr2h	equ	0xFDA
 27073                           fsr2l	equ	0xFD9
 27074                           status	equ	0xFD8
 27075                           
 27076 ;; *************** function _HttpGetMethod *****************
 27077 ;; Defined at:
 27078 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 27079 ;; Parameters:    Size  Location     Type
 27080 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 27081 ;;		 -> HttpGetDataLocal(5), 
 27082 ;; Auto vars:     Size  Location     Type
 27083 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 27084 ;;  Index           1  200[BANK1 ] unsigned char 
 27085 ;; Return value:  Size  Location     Type
 27086 ;;                  1    wreg      enum E8921
 27087 ;; Registers used:
 27088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27089 ;; Tracked objects:
 27090 ;;		On entry : 0/0
 27091 ;;		On exit  : 0/0
 27092 ;;		Unchanged: 0/0
 27093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27094 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27095 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27097 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27098 ;;Total ram usage:      207 bytes
 27099 ;; Hardware stack levels used:    1
 27100 ;; Hardware stack levels required when called:   14
 27101 ;; This function calls:
 27102 ;;		_ClearBuffer
 27103 ;;		_OsTmr_GetTimerStatus
 27104 ;;		_OsTmr_StartTimer
 27105 ;;		_ReceiveEvt
 27106 ;;		_StringCopy
 27107 ;;		_Uart_WriteConstString
 27108 ;;		_Uart_WriteString
 27109 ;; This function is called by:
 27110 ;;		_MdmHttp_MainTask
 27111 ;; This function uses a non-reentrant model
 27112 ;;
 27113                           
 27114                           	psect	text123
 27115  0005EC                     __ptext123:
 27116                           	opt stack 0
 27117  0005EC                     _HttpGetMethod:
 27118                           	opt stack 13
 27119                           
 27120                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 27121                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 27122                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 27123                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 27124                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 27125                           
 27126                           ; BSR set to: 1
 27127                           ;incstack = 0
 27128  0005EC  0E00               	movlw	0
 27129  0005EE  0101               	movlb	1	; () banked
 27130  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27131                           
 27132                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 27133  0005F2  D230               	goto	l1249
 27134  0005F4                     
 27135                           ; BSR set to: 1
 27136                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 27137                           
 27138                           ; BSR set to: 1
 27139  0005F4  0ED9               	movlw	low _GetMethod
 27140  0005F6  0100               	movlb	0	; () banked
 27141  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27142  0005FA  0E00               	movlw	high _GetMethod
 27143  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27144  0005FE  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 27145  000602  0900               	iorlw	0
 27146  000604  B4D8               	btfsc	status,2,c
 27147  000606  D257               	goto	l1252
 27148                           
 27149                           ;mdm_gsm_gprs_http.c: 284: {
 27150                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 27151  000608  0E01               	movlw	1
 27152  00060A  D18C               	goto	L41
 27153  00060C                     
 27154                           ; BSR set to: 1
 27155                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 27156                           
 27157                           ; BSR set to: 1
 27158  00060C  0E9C               	movlw	low STR_12
 27159  00060E  0100               	movlb	0	; () banked
 27160  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27161  000612  0EFF               	movlw	high STR_12
 27162  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27163  000616  0E01               	movlw	1
 27164  000618  EC90  F02C         	call	_Uart_WriteConstString
 27165                           
 27166                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 27167  00061C  0E0A               	movlw	10
 27168  00061E  0101               	movlb	1	; () banked
 27169  000620  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27170                           
 27171                           ; BSR set to: 1
 27172                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 27173  000622  0E02               	movlw	2
 27174  000624  0100               	movlb	0	; () banked
 27175  000626  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27176                           
 27177                           ; BSR set to: 0
 27178                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 27179  000628  0EF5               	movlw	low _ConnTimeout
 27180  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27181  00062C  0E02               	movlw	high _ConnTimeout
 27182  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27183  000630  0E20               	movlw	32
 27184  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27185  000634  0E4E               	movlw	78
 27186  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27187  000638  0E00               	movlw	0
 27188  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27189  00063C  0E00               	movlw	0
 27190  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27191  000640  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27192  000644  D1AF               	goto	l14453
 27193  000646                     
 27194                           ; BSR set to: 1
 27195                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 27196                           
 27197                           ; BSR set to: 1
 27198  000646  0E66               	movlw	low STR_13
 27199  000648  0100               	movlb	0	; () banked
 27200  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27201  00064C  0EFF               	movlw	high STR_13
 27202  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27203  000650  0E01               	movlw	1
 27204  000652  EC90  F02C         	call	_Uart_WriteConstString
 27205                           
 27206                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 27207  000656  0E0A               	movlw	10
 27208  000658  0101               	movlb	1	; () banked
 27209  00065A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27210                           
 27211                           ; BSR set to: 1
 27212                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 27213  00065C  0E03               	movlw	3
 27214  00065E  0100               	movlb	0	; () banked
 27215  000660  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27216                           
 27217                           ; BSR set to: 0
 27218                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 27219  000662  0EF5               	movlw	low _ConnTimeout
 27220  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27221  000666  0E02               	movlw	high _ConnTimeout
 27222  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27223  00066A  0E20               	movlw	32
 27224  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27225  00066E  0E4E               	movlw	78
 27226  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27227  000672  0E00               	movlw	0
 27228  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27229  000676  0E00               	movlw	0
 27230  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27231  00067A  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27232  00067E  D192               	goto	l14453
 27233  000680                     
 27234                           ; BSR set to: 1
 27235                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 27236                           
 27237                           ; BSR set to: 1
 27238  000680  0EB5               	movlw	low STR_14
 27239  000682  0100               	movlb	0	; () banked
 27240  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27241  000686  0EFE               	movlw	high STR_14
 27242  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27243  00068A  0E01               	movlw	1
 27244  00068C  EC90  F02C         	call	_Uart_WriteConstString
 27245                           
 27246                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 27247  000690  0E0A               	movlw	10
 27248  000692  0101               	movlb	1	; () banked
 27249  000694  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27250                           
 27251                           ; BSR set to: 1
 27252                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 27253  000696  0E04               	movlw	4
 27254  000698  0100               	movlb	0	; () banked
 27255  00069A  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27256                           
 27257                           ; BSR set to: 0
 27258                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 27259  00069C  0EF5               	movlw	low _ConnTimeout
 27260  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27261  0006A0  0E02               	movlw	high _ConnTimeout
 27262  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27263  0006A4  0E20               	movlw	32
 27264  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27265  0006A8  0E4E               	movlw	78
 27266  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27267  0006AC  0E00               	movlw	0
 27268  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27269  0006B0  0E00               	movlw	0
 27270  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27271  0006B4  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27272  0006B8  D175               	goto	l14453
 27273  0006BA                     
 27274                           ; BSR set to: 1
 27275                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 27276                           
 27277                           ; BSR set to: 1
 27278  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27279  0006BC  0100               	movlb	0	; () banked
 27280  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27281  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 27282  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27283  0006C4  0E00               	movlw	0
 27284  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27285  0006C8  0EC8               	movlw	200
 27286  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27287  0006CC  EC00  F02E         	call	_ClearBuffer	;wreg free
 27288                           
 27289                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 27290  0006D0  0EF3               	movlw	low STR_15
 27291  0006D2  0100               	movlb	0	; () banked
 27292  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27293  0006D6  0EFE               	movlw	high STR_15
 27294  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27295  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 27296  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27297  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 27298  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27299  0006E2  0E00               	movlw	0
 27300  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27301  0006E6  0E13               	movlw	19
 27302  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 27303  0006EA  EC4A  F028         	call	_StringCopy	;wreg free
 27304                           
 27305                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 27306  0006EE  0E00               	movlw	0
 27307  0006F0  0101               	movlb	1	; () banked
 27308  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27309  0006F4  D024               	goto	l1257
 27310  0006F6                     
 27311                           ; BSR set to: 1
 27312                           ;mdm_gsm_gprs_http.c: 332: {
 27313                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 27314                           
 27315                           ; BSR set to: 1
 27316  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27317  0006F8  0D01               	mullw	1
 27318  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 27319  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 27320  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 27321  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 27322  00070A  50F3               	movf	prodl,w,c
 27323  00070C  0100               	movlb	0	; () banked
 27324  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27325  000710  6ED9               	movwf	fsr2l,c
 27326  000712  50F4               	movf	prodh,w,c
 27327  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27328  000716  6EDA               	movwf	fsr2h,c
 27329  000718  0101               	movlb	1	; () banked
 27330  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27331  00071C  0100               	movlb	0	; () banked
 27332  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 27333  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 27334  000722  0E13               	movlw	19
 27335  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 27336  000726  0E00               	movlw	0
 27337  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 27338  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 27339  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 27340  00072E  6EE1               	movwf	fsr1l,c
 27341  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 27342  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 27343  000734  6EE2               	movwf	fsr1h,c
 27344  000736  CFDF FFE7          	movff	indf2,indf1
 27345                           
 27346                           ; BSR set to: 0
 27347  00073A  0101               	movlb	1	; () banked
 27348  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 27349  00073E                     l1257:
 27350                           
 27351                           ; BSR set to: 1
 27352                           
 27353                           ; BSR set to: 1
 27354  00073E  0100               	movlb	0	; () banked
 27355  000740  EE20 F002          	lfsr	2,2
 27356  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27357  000746  26D9               	addwf	fsr2l,f,c
 27358  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27359  00074A  22DA               	addwfc	fsr2h,f,c
 27360  00074C  50DE               	movf	postinc2,w,c
 27361  00074E  0101               	movlb	1	; () banked
 27362  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 27363  000752  A0D8               	btfss	status,0,c
 27364  000754  D7D0               	goto	l1258
 27365                           
 27366                           ; BSR set to: 1
 27367                           ;mdm_gsm_gprs_http.c: 334: }
 27368                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 27369                           
 27370                           ; BSR set to: 1
 27371  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27372  000758  0100               	movlb	0	; () banked
 27373  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27374  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27375  00075E  0E13               	movlw	19
 27376  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27377  000762  0E00               	movlw	0
 27378  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27379  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 27380  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27381  00076A  6ED9               	movwf	fsr2l,c
 27382  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 27383  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27384  000770  6EDA               	movwf	fsr2h,c
 27385  000772  0E22               	movlw	34
 27386  000774  6EDF               	movwf	indf2,c
 27387                           
 27388                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 27389  000776  0101               	movlb	1	; () banked
 27390  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27391  00077A  0100               	movlb	0	; () banked
 27392  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27393  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27394  000780  0E14               	movlw	20
 27395  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27396  000784  0E00               	movlw	0
 27397  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27398  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 27399  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27400  00078C  6ED9               	movwf	fsr2l,c
 27401  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 27402  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27403  000792  6EDA               	movwf	fsr2h,c
 27404  000794  0E0D               	movlw	13
 27405  000796  6EDF               	movwf	indf2,c
 27406                           
 27407                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 27408  000798  0101               	movlb	1	; () banked
 27409  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27410  00079C  0100               	movlb	0	; () banked
 27411  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27412  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27413  0007A2  0E15               	movlw	21
 27414  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27415  0007A6  0E00               	movlw	0
 27416  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27417  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 27418  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27419  0007AE  6ED9               	movwf	fsr2l,c
 27420  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 27421  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27422  0007B4  6EDA               	movwf	fsr2h,c
 27423  0007B6  0E00               	movlw	0
 27424  0007B8  6EDF               	movwf	indf2,c
 27425                           
 27426                           ; BSR set to: 0
 27427                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 27428  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27429  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27430  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 27431  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27432  0007C2  0E01               	movlw	1
 27433  0007C4  EC51  F02D         	call	_Uart_WriteString
 27434                           
 27435                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 27436  0007C8  0E0A               	movlw	10
 27437  0007CA  0101               	movlb	1	; () banked
 27438  0007CC  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27439                           
 27440                           ; BSR set to: 1
 27441                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 27442  0007CE  0E05               	movlw	5
 27443  0007D0  0100               	movlb	0	; () banked
 27444  0007D2  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27445                           
 27446                           ; BSR set to: 0
 27447                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 27448  0007D4  0EF5               	movlw	low _ConnTimeout
 27449  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27450  0007D8  0E02               	movlw	high _ConnTimeout
 27451  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27452  0007DC  0E20               	movlw	32
 27453  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27454  0007E0  0E4E               	movlw	78
 27455  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27456  0007E4  0E00               	movlw	0
 27457  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27458  0007E8  0E00               	movlw	0
 27459  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27460  0007EC  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27461  0007F0  D0D9               	goto	l14453
 27462  0007F2                     
 27463                           ; BSR set to: 1
 27464                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 27465                           
 27466                           ; BSR set to: 1
 27467  0007F2  0E2B               	movlw	low STR_16
 27468  0007F4  0100               	movlb	0	; () banked
 27469  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27470  0007F8  0EFF               	movlw	high STR_16
 27471  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27472  0007FC  0E01               	movlw	1
 27473  0007FE  EC90  F02C         	call	_Uart_WriteConstString
 27474                           
 27475                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 27476  000802  0E0A               	movlw	10
 27477  000804  0101               	movlb	1	; () banked
 27478  000806  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27479                           
 27480                           ; BSR set to: 1
 27481                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 27482  000808  0E06               	movlw	6
 27483  00080A  0100               	movlb	0	; () banked
 27484  00080C  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27485                           
 27486                           ; BSR set to: 0
 27487                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 27488  00080E  0EF5               	movlw	low _ConnTimeout
 27489  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27490  000812  0E02               	movlw	high _ConnTimeout
 27491  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27492  000816  0E20               	movlw	32
 27493  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27494  00081A  0E4E               	movlw	78
 27495  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27496  00081E  0E00               	movlw	0
 27497  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27498  000822  0E00               	movlw	0
 27499  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27500  000826  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27501                           
 27502                           ;mdm_gsm_gprs_http.c: 358: break;
 27503  00082A  D145               	goto	l1252
 27504  00082C                     
 27505                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 27506  00082C  0E07               	movlw	7
 27507  00082E  0101               	movlb	1	; () banked
 27508  000830  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27509                           
 27510                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 27511  000832  0E09               	movlw	9
 27512  000834  0100               	movlb	0	; () banked
 27513  000836  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27514                           
 27515                           ; BSR set to: 0
 27516                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 27517  000838  0EF5               	movlw	low _ConnTimeout
 27518  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27519  00083C  0E02               	movlw	high _ConnTimeout
 27520  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27521  000840  0E20               	movlw	32
 27522  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27523  000844  0E4E               	movlw	78
 27524  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27525  000848  0E00               	movlw	0
 27526  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27527  00084C  0E00               	movlw	0
 27528  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27529  000850  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27530                           
 27531                           ;mdm_gsm_gprs_http.c: 371: break;
 27532  000854  D130               	goto	l1252
 27533  000856                     
 27534                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 27535  000856  0E82               	movlw	low STR_17
 27536  000858  0100               	movlb	0	; () banked
 27537  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27538  00085C  0EFF               	movlw	high STR_17
 27539  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27540  000860  0E01               	movlw	1
 27541  000862  EC90  F02C         	call	_Uart_WriteConstString
 27542                           
 27543                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 27544  000866  0E0D               	movlw	13
 27545  000868  0101               	movlb	1	; () banked
 27546  00086A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27547                           
 27548                           ; BSR set to: 1
 27549                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 27550  00086C  0E09               	movlw	9
 27551  00086E  0100               	movlb	0	; () banked
 27552  000870  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27553                           
 27554                           ; BSR set to: 0
 27555                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 27556  000872  0EF5               	movlw	low _ConnTimeout
 27557  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27558  000876  0E02               	movlw	high _ConnTimeout
 27559  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27560  00087A  0E20               	movlw	32
 27561  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27562  00087E  0E4E               	movlw	78
 27563  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27564  000882  0E00               	movlw	0
 27565  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27566  000886  0E00               	movlw	0
 27567  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27568  00088A  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27569  00088E  D08A               	goto	l14453
 27570  000890                     
 27571                           ; BSR set to: 1
 27572                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 27573                           
 27574                           ; BSR set to: 1
 27575  000890  0E8F               	movlw	low STR_18
 27576  000892  0100               	movlb	0	; () banked
 27577  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27578  000896  0EFF               	movlw	high STR_18
 27579  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27580  00089A  0E01               	movlw	1
 27581  00089C  EC90  F02C         	call	_Uart_WriteConstString
 27582                           
 27583                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 27584  0008A0  0E0A               	movlw	10
 27585  0008A2  0101               	movlb	1	; () banked
 27586  0008A4  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27587                           
 27588                           ; BSR set to: 1
 27589                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 27590  0008A6  0E0E               	movlw	14
 27591  0008A8  0100               	movlb	0	; () banked
 27592  0008AA  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27593                           
 27594                           ; BSR set to: 0
 27595                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 27596  0008AC  0EF5               	movlw	low _ConnTimeout
 27597  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27598  0008B0  0E02               	movlw	high _ConnTimeout
 27599  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27600  0008B4  0E20               	movlw	32
 27601  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27602  0008B8  0E4E               	movlw	78
 27603  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27604  0008BC  0E00               	movlw	0
 27605  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27606  0008C0  0E00               	movlw	0
 27607  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27608  0008C4  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27609  0008C8  D06D               	goto	l14453
 27610  0008CA                     
 27611                           ; BSR set to: 1
 27612                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 27613                           
 27614                           ; BSR set to: 1
 27615  0008CA  0E3C               	movlw	low _NewStringReceived
 27616  0008CC  0100               	movlb	0	; () banked
 27617  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27618  0008D0  0E00               	movlw	high _NewStringReceived
 27619  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27620  0008D4  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 27621  0008D8  0900               	iorlw	0
 27622  0008DA  B4D8               	btfsc	status,2,c
 27623  0008DC  D018               	goto	l1265
 27624                           
 27625                           ;mdm_gsm_gprs_http.c: 400: {
 27626                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27627  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 27628  0008E2  0A4F               	xorlw	79
 27629  0008E4  A4D8               	btfss	status,2,c
 27630  0008E6  D0E7               	goto	l1252
 27631  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27632  0008EC  0A4B               	xorlw	75
 27633  0008EE  A4D8               	btfss	status,2,c
 27634  0008F0  D0E2               	goto	l1252
 27635                           
 27636                           ;mdm_gsm_gprs_http.c: 403: {
 27637                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 27638  0008F2  C0CF  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27639                           
 27640                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 27641  0008F6  0E58               	movlw	low _RxBuffer
 27642  0008F8  0100               	movlb	0	; () banked
 27643  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27644  0008FC  0E0C               	movlw	high _RxBuffer
 27645  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27646  000900  0E01               	movlw	1
 27647  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27648  000904  0E90               	movlw	144
 27649  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27650  000908  EC00  F02E         	call	_ClearBuffer	;wreg free
 27651                           
 27652                           ;mdm_gsm_gprs_http.c: 408: }
 27653                           ;mdm_gsm_gprs_http.c: 409: }
 27654  00090C  D0D4               	goto	l1252
 27655  00090E                     l1265:
 27656                           
 27657                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27658  00090E  0EF5               	movlw	low _ConnTimeout
 27659  000910  0100               	movlb	0	; () banked
 27660  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27661  000914  0E02               	movlw	high _ConnTimeout
 27662  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27663  000918  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27664  00091C                     L42:
 27665  00091C  06E8               	decf	wreg,f,c
 27666  00091E  A4D8               	btfss	status,2,c
 27667  000920  D0CA               	goto	l1252
 27668                           
 27669                           ;mdm_gsm_gprs_http.c: 411: {
 27670                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 27671  000922  0E0F               	movlw	15
 27672  000924                     L41:
 27673  000924  0101               	movlb	1	; () banked
 27674  000926  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27675                           
 27676                           ; BSR set to: 1
 27677                           ;mdm_gsm_gprs_http.c: 414: }
 27678                           ;mdm_gsm_gprs_http.c: 415: break;
 27679                           
 27680                           ; BSR set to: 1
 27681  000928  D0C6               	goto	l1252
 27682  00092A                     
 27683                           ; BSR set to: 1
 27684                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 27685                           
 27686                           ; BSR set to: 1
 27687  00092A  0E3C               	movlw	low _NewStringReceived
 27688  00092C  0100               	movlb	0	; () banked
 27689  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27690  000930  0E00               	movlw	high _NewStringReceived
 27691  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27692  000934  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 27693  000938  0900               	iorlw	0
 27694  00093A  B4D8               	btfsc	status,2,c
 27695  00093C  D018               	goto	l1270
 27696                           
 27697                           ;mdm_gsm_gprs_http.c: 420: {
 27698                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27699  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 27700  000942  0A2B               	xorlw	43
 27701  000944  A4D8               	btfss	status,2,c
 27702  000946  D0B7               	goto	l1252
 27703  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27704  00094C  0A48               	xorlw	72
 27705  00094E  A4D8               	btfss	status,2,c
 27706  000950  D0B2               	goto	l1252
 27707                           
 27708                           ;mdm_gsm_gprs_http.c: 423: {
 27709                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 27710  000952  C0CF  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27711                           
 27712                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 27713  000956  0E58               	movlw	low _RxBuffer
 27714  000958  0100               	movlb	0	; () banked
 27715  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27716  00095C  0E0C               	movlw	high _RxBuffer
 27717  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27718  000960  0E01               	movlw	1
 27719  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27720  000964  0E90               	movlw	144
 27721  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27722  000968  EC00  F02E         	call	_ClearBuffer	;wreg free
 27723                           
 27724                           ;mdm_gsm_gprs_http.c: 428: }
 27725                           ;mdm_gsm_gprs_http.c: 429: }
 27726  00096C  D0A4               	goto	l1252
 27727  00096E                     l1270:
 27728                           
 27729                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27730  00096E  0EF5               	movlw	low _ConnTimeout
 27731  000970  0100               	movlb	0	; () banked
 27732  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27733  000974  0E02               	movlw	high _ConnTimeout
 27734  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27735  000978  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27736  00097C  D7CF               	goto	L42
 27737  00097E                     
 27738                           ; BSR set to: 1
 27739                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 27740                           
 27741                           ; BSR set to: 1
 27742  00097E  0E0C               	movlw	12
 27743  000980  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27744                           
 27745                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 27746  000982  0E05               	movlw	5
 27747  000984  0100               	movlb	0	; () banked
 27748  000986  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27749                           
 27750                           ; BSR set to: 0
 27751                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 27752  000988  0ED8               	movlw	low _ConnWait
 27753  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27754  00098C  0E03               	movlw	high _ConnWait
 27755  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27756  000990  0EE8               	movlw	232
 27757  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27758  000994  0E03               	movlw	3
 27759  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27760  000998  0E00               	movlw	0
 27761  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27762  00099C  0E00               	movlw	0
 27763  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27764  0009A0  ECAA  F028         	call	_OsTmr_StartTimer	;wreg free
 27765  0009A4                     l14453:
 27766                           
 27767                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 27768  0009A4  0E01               	movlw	1
 27769  0009A6  0101               	movlb	1	; () banked
 27770  0009A8  D053               	goto	L44
 27771  0009AA                     
 27772                           ; BSR set to: 1
 27773                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 27774                           
 27775                           ; BSR set to: 1
 27776  0009AA  0ED8               	movlw	low _ConnWait
 27777  0009AC  0100               	movlb	0	; () banked
 27778  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27779  0009B0  0E03               	movlw	high _ConnWait
 27780  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27781  0009B4  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27782  0009B8  06E8               	decf	wreg,f,c
 27783  0009BA  A4D8               	btfss	status,2,c
 27784  0009BC  D07C               	goto	l1252
 27785                           
 27786                           ;mdm_gsm_gprs_http.c: 450: {
 27787                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 27788  0009BE  C0CF  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27789                           
 27790                           ;mdm_gsm_gprs_http.c: 453: }
 27791                           ;mdm_gsm_gprs_http.c: 454: break;
 27792  0009C2  D079               	goto	l1252
 27793  0009C4                     
 27794                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 27795  0009C4  0E3C               	movlw	low _NewStringReceived
 27796  0009C6  0100               	movlb	0	; () banked
 27797  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27798  0009CA  0E00               	movlw	high _NewStringReceived
 27799  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27800  0009CE  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 27801  0009D2  0900               	iorlw	0
 27802  0009D4  B4D8               	btfsc	status,2,c
 27803  0009D6  D02D               	goto	l1278
 27804                           
 27805                           ;mdm_gsm_gprs_http.c: 459: {
 27806                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27807  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 27808  0009DC  0A2B               	xorlw	43
 27809  0009DE  A4D8               	btfss	status,2,c
 27810  0009E0  D06A               	goto	l1252
 27811  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27812  0009E6  0A48               	xorlw	72
 27813  0009E8  A4D8               	btfss	status,2,c
 27814  0009EA  D065               	goto	l1252
 27815                           
 27816                           ;mdm_gsm_gprs_http.c: 462: {
 27817                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 27818  0009EC  C0CF  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27819                           
 27820                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 27821  0009F0  0E58               	movlw	low _RxBuffer
 27822  0009F2  0100               	movlb	0	; () banked
 27823  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27824  0009F6  0E0C               	movlw	high _RxBuffer
 27825  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27826  0009FA  EE20 F003          	lfsr	2,3
 27827  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27828  000A00  26D9               	addwf	fsr2l,f,c
 27829  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27830  000A04  22DA               	addwfc	fsr2h,f,c
 27831  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 27832  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 27833  000A0E  0E01               	movlw	1
 27834  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27835  000A12  0E90               	movlw	144
 27836  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 27837  000A16  EC4A  F028         	call	_StringCopy	;wreg free
 27838                           
 27839                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 27840  000A1A  0E58               	movlw	low _RxBuffer
 27841  000A1C  0100               	movlb	0	; () banked
 27842  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27843  000A20  0E0C               	movlw	high _RxBuffer
 27844  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27845  000A24  0E01               	movlw	1
 27846  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27847  000A28  0E90               	movlw	144
 27848  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27849  000A2C  EC00  F02E         	call	_ClearBuffer	;wreg free
 27850                           
 27851                           ;mdm_gsm_gprs_http.c: 469: }
 27852                           ;mdm_gsm_gprs_http.c: 470: }
 27853  000A30  D042               	goto	l1252
 27854  000A32                     l1278:
 27855                           
 27856                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27857  000A32  0EF5               	movlw	low _ConnTimeout
 27858  000A34  0100               	movlb	0	; () banked
 27859  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27860  000A38  0E02               	movlw	high _ConnTimeout
 27861  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27862  000A3C  EC33  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27863  000A40  D76D               	goto	L42
 27864  000A42                     
 27865                           ; BSR set to: 1
 27866                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 27867                           
 27868                           ; BSR set to: 1
 27869  000A42  0E00               	movlw	0
 27870  000A44  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27871                           
 27872                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 27873  000A46  0E02               	movlw	2
 27874  000A48  D003               	goto	L44
 27875  000A4A                     
 27876                           ; BSR set to: 1
 27877                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 27878                           
 27879                           ; BSR set to: 1
 27880  000A4A  0E00               	movlw	0
 27881  000A4C  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27882                           
 27883                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 27884  000A4E  0E03               	movlw	3
 27885  000A50                     L44:
 27886  000A50  6FEB               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 27887                           
 27888                           ; BSR set to: 1
 27889                           ;mdm_gsm_gprs_http.c: 494: }
 27890                           
 27891                           ; BSR set to: 1
 27892                           ;mdm_gsm_gprs_http.c: 493: break;
 27893                           
 27894                           ;mdm_gsm_gprs_http.c: 492: default:
 27895                           
 27896                           ;mdm_gsm_gprs_http.c: 490: break;
 27897  000A52  D031               	goto	l1252
 27898  000A54                     l1249:
 27899                           
 27900                           ; BSR set to: 1
 27901                           
 27902                           ; BSR set to: 1
 27903  000A54  51EC               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 27904                           
 27905                           ; Switch size 1, requested type "space"
 27906                           ; Number of cases is 16, Range of values is 0 to 15
 27907                           ; switch strategies available:
 27908                           ; Name         Instructions Cycles
 27909                           ; simple_byte           49    25 (average)
 27910                           ;	Chosen strategy is simple_byte
 27911  000A56  0A00               	xorlw	0	; case 0
 27912  000A58  B4D8               	btfsc	status,2,c
 27913  000A5A  D5CC               	goto	l1250
 27914  000A5C  0A01               	xorlw	1	; case 1
 27915  000A5E  B4D8               	btfsc	status,2,c
 27916  000A60  D5D5               	goto	l1253
 27917  000A62  0A03               	xorlw	3	; case 2
 27918  000A64  B4D8               	btfsc	status,2,c
 27919  000A66  D5EF               	goto	l1254
 27920  000A68  0A01               	xorlw	1	; case 3
 27921  000A6A  B4D8               	btfsc	status,2,c
 27922  000A6C  D609               	goto	l1255
 27923  000A6E  0A07               	xorlw	7	; case 4
 27924  000A70  B4D8               	btfsc	status,2,c
 27925  000A72  D623               	goto	l1256
 27926  000A74  0A01               	xorlw	1	; case 5
 27927  000A76  B4D8               	btfsc	status,2,c
 27928  000A78  D6BC               	goto	l1260
 27929  000A7A  0A03               	xorlw	3	; case 6
 27930  000A7C  B4D8               	btfsc	status,2,c
 27931  000A7E  D6D6               	goto	l1261
 27932  000A80  0A01               	xorlw	1	; case 7
 27933  000A82  B4D8               	btfsc	status,2,c
 27934  000A84  D752               	goto	l1269
 27935  000A86  0A0F               	xorlw	15	; case 8
 27936  000A88  B4D8               	btfsc	status,2,c
 27937  000A8A  D6E5               	goto	l1262
 27938  000A8C  0A01               	xorlw	1	; case 9
 27939  000A8E  B4D8               	btfsc	status,2,c
 27940  000A90  D6FF               	goto	l1263
 27941  000A92  0A03               	xorlw	3	; case 10
 27942  000A94  B4D8               	btfsc	status,2,c
 27943  000A96  D719               	goto	l1264
 27944  000A98  0A01               	xorlw	1	; case 11
 27945  000A9A  B4D8               	btfsc	status,2,c
 27946  000A9C  D770               	goto	l1274
 27947  000A9E  0A07               	xorlw	7	; case 12
 27948  000AA0  B4D8               	btfsc	status,2,c
 27949  000AA2  D783               	goto	l1275
 27950  000AA4  0A01               	xorlw	1	; case 13
 27951  000AA6  B4D8               	btfsc	status,2,c
 27952  000AA8  D78D               	goto	l1277
 27953  000AAA  0A03               	xorlw	3	; case 14
 27954  000AAC  B4D8               	btfsc	status,2,c
 27955  000AAE  D7C9               	goto	l1282
 27956  000AB0  0A01               	xorlw	1	; case 15
 27957  000AB2  B4D8               	btfsc	status,2,c
 27958  000AB4  D7CA               	goto	l1283
 27959  000AB6                     l1252:
 27960                           
 27961                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 27962                           
 27963                           ; BSR set to: 1
 27964  000AB6  0101               	movlb	1	; () banked
 27965  000AB8  51EB               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 27966  000ABA  0012               	return	
 27967  000ABC                     __end_of_HttpGetMethod:
 27968                           	opt stack 0
 27969                           tosu	equ	0xFFF
 27970                           tosh	equ	0xFFE
 27971                           tosl	equ	0xFFD
 27972                           pclath	equ	0xFFA
 27973                           tblptru	equ	0xFF8
 27974                           tblptrh	equ	0xFF7
 27975                           tblptrl	equ	0xFF6
 27976                           tablat	equ	0xFF5
 27977                           prodh	equ	0xFF4
 27978                           prodl	equ	0xFF3
 27979                           intcon	equ	0xFF2
 27980                           intcon2	equ	0xFF1
 27981                           intcon3	equ	0xFF0
 27982                           indf0	equ	0xFEF
 27983                           postinc0	equ	0xFEE
 27984                           plusw0	equ	0xFEB
 27985                           fsr0h	equ	0xFEA
 27986                           fsr0l	equ	0xFE9
 27987                           wreg	equ	0xFE8
 27988                           indf1	equ	0xFE7
 27989                           postinc1	equ	0xFE6
 27990                           postdec1	equ	0xFE5
 27991                           plusw1	equ	0xFE3
 27992                           fsr1h	equ	0xFE2
 27993                           fsr1l	equ	0xFE1
 27994                           indf2	equ	0xFDF
 27995                           postinc2	equ	0xFDE
 27996                           postdec2	equ	0xFDD
 27997                           plusw2	equ	0xFDB
 27998                           fsr2h	equ	0xFDA
 27999                           fsr2l	equ	0xFD9
 28000                           status	equ	0xFD8
 28001                           
 28002 ;; *************** function _Uart_WriteString *****************
 28003 ;; Defined at:
 28004 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28005 ;; Parameters:    Size  Location     Type
 28006 ;;  Module          1    wreg     unsigned char 
 28007 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 28008 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 28009 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 28010 ;; Auto vars:     Size  Location     Type
 28011 ;;  Module          1   34[BANK0 ] unsigned char 
 28012 ;; Return value:  Size  Location     Type
 28013 ;;                  1    wreg      void 
 28014 ;; Registers used:
 28015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28016 ;; Tracked objects:
 28017 ;;		On entry : 0/0
 28018 ;;		On exit  : 0/0
 28019 ;;		Unchanged: 0/0
 28020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28024 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28025 ;;Total ram usage:        3 bytes
 28026 ;; Hardware stack levels used:    1
 28027 ;; Hardware stack levels required when called:   12
 28028 ;; This function calls:
 28029 ;;		_UartTxBufferStatus
 28030 ;;		_UartWriteByte
 28031 ;; This function is called by:
 28032 ;;		_Mdm_SetSmsFormat
 28033 ;;		_InitGprsNetwork
 28034 ;;		_HttpGetMethod
 28035 ;;		_Mdm_PinUnlock
 28036 ;;		_Mdm_MakePhoneCall
 28037 ;; This function uses a non-reentrant model
 28038 ;;
 28039                           
 28040                           	psect	text124
 28041  005AA2                     __ptext124:
 28042                           	opt stack 0
 28043  005AA2                     _Uart_WriteString:
 28044                           	opt stack 13
 28045                           
 28046                           ; BSR set to: 1
 28047                           ;incstack = 0
 28048                           ;Uart_WriteString@Module stored from wreg
 28049  005AA2  0100               	movlb	0	; () banked
 28050  005AA4  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 28051                           
 28052                           ;uart_drv.c: 521: while (*StringToWrite)
 28053  005AA6  D014               	goto	u11520
 28054  005AA8                     
 28055                           ;uart_drv.c: 522: {
 28056                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 28057  005AA8  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28058  005AAC  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28059  005AB0  50DF               	movf	indf2,w,c
 28060  005AB2  0100               	movlb	0	; () banked
 28061  005AB4  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 28062  005AB6  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28063  005AB8  EC1A  F030         	call	_UartWriteByte
 28064                           
 28065                           ;uart_drv.c: 526: StringToWrite++;
 28066  005ABC  0100               	movlb	0	; () banked
 28067  005ABE  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 28068  005AC0  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 28069  005AC2                     
 28070                           ; BSR set to: 0
 28071                           
 28072                           ; BSR set to: 0
 28073  005AC2  0100               	movlb	0	; () banked
 28074  005AC4  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28075  005AC6  EC2A  F02B         	call	_UartTxBufferStatus
 28076  005ACA  06E8               	decf	wreg,f,c
 28077  005ACC  B4D8               	btfsc	status,2,c
 28078  005ACE  D7F9               	goto	l709
 28079  005AD0                     u11520:
 28080  005AD0  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28081  005AD4  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28082  005AD8  50DF               	movf	indf2,w,c
 28083  005ADA  B4D8               	btfsc	status,2,c
 28084  005ADC  0012               	return	
 28085  005ADE  D7E4               	goto	l707
 28086  005AE0                     __end_of_Uart_WriteString:
 28087                           	opt stack 0
 28088                           tosu	equ	0xFFF
 28089                           tosh	equ	0xFFE
 28090                           tosl	equ	0xFFD
 28091                           pclath	equ	0xFFA
 28092                           tblptru	equ	0xFF8
 28093                           tblptrh	equ	0xFF7
 28094                           tblptrl	equ	0xFF6
 28095                           tablat	equ	0xFF5
 28096                           prodh	equ	0xFF4
 28097                           prodl	equ	0xFF3
 28098                           intcon	equ	0xFF2
 28099                           intcon2	equ	0xFF1
 28100                           intcon3	equ	0xFF0
 28101                           indf0	equ	0xFEF
 28102                           postinc0	equ	0xFEE
 28103                           plusw0	equ	0xFEB
 28104                           fsr0h	equ	0xFEA
 28105                           fsr0l	equ	0xFE9
 28106                           wreg	equ	0xFE8
 28107                           indf1	equ	0xFE7
 28108                           postinc1	equ	0xFE6
 28109                           postdec1	equ	0xFE5
 28110                           plusw1	equ	0xFE3
 28111                           fsr1h	equ	0xFE2
 28112                           fsr1l	equ	0xFE1
 28113                           indf2	equ	0xFDF
 28114                           postinc2	equ	0xFDE
 28115                           postdec2	equ	0xFDD
 28116                           plusw2	equ	0xFDB
 28117                           fsr2h	equ	0xFDA
 28118                           fsr2l	equ	0xFD9
 28119                           status	equ	0xFD8
 28120                           
 28121 ;; *************** function _Uart_WriteConstString *****************
 28122 ;; Defined at:
 28123 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28124 ;; Parameters:    Size  Location     Type
 28125 ;;  Module          1    wreg     unsigned char 
 28126 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 28127 ;;		 -> STR_30(12), STR_29(19), STR_20(14), STR_19(14), 
 28128 ;;		 -> STR_18(13), STR_17(13), STR_16(17), STR_14(21), 
 28129 ;;		 -> STR_13(14), STR_12(13), STR_11(14), STR_10(14), 
 28130 ;;		 -> STR_8(31), STR_7(5), STR_6(5), STR_4(12), 
 28131 ;;		 -> STR_3(7), STR_2(14), STR_1(5), 
 28132 ;; Auto vars:     Size  Location     Type
 28133 ;;  Module          1   34[BANK0 ] unsigned char 
 28134 ;; Return value:  Size  Location     Type
 28135 ;;                  1    wreg      void 
 28136 ;; Registers used:
 28137 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28138 ;; Tracked objects:
 28139 ;;		On entry : 0/0
 28140 ;;		On exit  : 0/0
 28141 ;;		Unchanged: 0/0
 28142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28146 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28147 ;;Total ram usage:        3 bytes
 28148 ;; Hardware stack levels used:    1
 28149 ;; Hardware stack levels required when called:   12
 28150 ;; This function calls:
 28151 ;;		_UartTxBufferStatus
 28152 ;;		_UartWriteByte
 28153 ;; This function is called by:
 28154 ;;		_CheckModem
 28155 ;;		_ConfigureModem
 28156 ;;		_GetSmsSm
 28157 ;;		_Mdm_HangPhoneCall
 28158 ;;		_InitGprsNetwork
 28159 ;;		_HttpGetMethod
 28160 ;;		_initGprsModem
 28161 ;;		_Mdm_GetPhoneCall
 28162 ;;		_MdmHttp_SetSsl
 28163 ;; This function uses a non-reentrant model
 28164 ;;
 28165                           
 28166                           	psect	text125
 28167  005920                     __ptext125:
 28168                           	opt stack 0
 28169  005920                     _Uart_WriteConstString:
 28170                           	opt stack 14
 28171                           
 28172                           ;incstack = 0
 28173                           ;Uart_WriteConstString@Module stored from wreg
 28174  005920  0100               	movlb	0	; () banked
 28175  005922  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 28176                           
 28177                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 28178  005924  D015               	goto	u12350
 28179  005926                     
 28180                           ;uart_drv.c: 500: {
 28181                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 28182  005926  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28183  00592A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28184  00592E                     	if	0	;tblptru may be non-zero
 28185  00592E                     	endif
 28186  00592E                     	if	0	;tblptru may be non-zero
 28187  00592E                     	endif
 28188  00592E  0008               	tblrd		*
 28189  005930  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 28190  005934  0100               	movlb	0	; () banked
 28191  005936  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28192  005938  EC1A  F030         	call	_UartWriteByte
 28193                           
 28194                           ;uart_drv.c: 504: ConstStringToWrite++;
 28195  00593C  0100               	movlb	0	; () banked
 28196  00593E  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 28197  005940  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 28198  005942                     
 28199                           ; BSR set to: 0
 28200                           
 28201                           ; BSR set to: 0
 28202  005942  0100               	movlb	0	; () banked
 28203  005944  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28204  005946  EC2A  F02B         	call	_UartTxBufferStatus
 28205  00594A  06E8               	decf	wreg,f,c
 28206  00594C  B4D8               	btfsc	status,2,c
 28207  00594E  D7F9               	goto	l700
 28208  005950                     u12350:
 28209  005950  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28210  005954  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28211  005958                     	if	0	;tblptru may be non-zero
 28212  005958                     	endif
 28213  005958                     	if	0	;tblptru may be non-zero
 28214  005958                     	endif
 28215  005958  0008               	tblrd		*
 28216  00595A  50F5               	movf	tablat,w,c
 28217  00595C  0900               	iorlw	0
 28218  00595E  B4D8               	btfsc	status,2,c
 28219  005960  0012               	return	
 28220  005962  D7E1               	goto	l698
 28221  005964                     __end_of_Uart_WriteConstString:
 28222                           	opt stack 0
 28223                           tosu	equ	0xFFF
 28224                           tosh	equ	0xFFE
 28225                           tosl	equ	0xFFD
 28226                           pclath	equ	0xFFA
 28227                           tblptru	equ	0xFF8
 28228                           tblptrh	equ	0xFF7
 28229                           tblptrl	equ	0xFF6
 28230                           tablat	equ	0xFF5
 28231                           prodh	equ	0xFF4
 28232                           prodl	equ	0xFF3
 28233                           intcon	equ	0xFF2
 28234                           intcon2	equ	0xFF1
 28235                           intcon3	equ	0xFF0
 28236                           indf0	equ	0xFEF
 28237                           postinc0	equ	0xFEE
 28238                           plusw0	equ	0xFEB
 28239                           fsr0h	equ	0xFEA
 28240                           fsr0l	equ	0xFE9
 28241                           wreg	equ	0xFE8
 28242                           indf1	equ	0xFE7
 28243                           postinc1	equ	0xFE6
 28244                           postdec1	equ	0xFE5
 28245                           plusw1	equ	0xFE3
 28246                           fsr1h	equ	0xFE2
 28247                           fsr1l	equ	0xFE1
 28248                           indf2	equ	0xFDF
 28249                           postinc2	equ	0xFDE
 28250                           postdec2	equ	0xFDD
 28251                           plusw2	equ	0xFDB
 28252                           fsr2h	equ	0xFDA
 28253                           fsr2l	equ	0xFD9
 28254                           status	equ	0xFD8
 28255                           
 28256 ;; *************** function _UartWriteByte *****************
 28257 ;; Defined at:
 28258 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28259 ;; Parameters:    Size  Location     Type
 28260 ;;  Module          1    wreg     unsigned char 
 28261 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 28262 ;; Auto vars:     Size  Location     Type
 28263 ;;  Module          1   30[BANK0 ] unsigned char 
 28264 ;; Return value:  Size  Location     Type
 28265 ;;                  1    wreg      void 
 28266 ;; Registers used:
 28267 ;;		wreg, status,2, status,0
 28268 ;; Tracked objects:
 28269 ;;		On entry : 0/0
 28270 ;;		On exit  : 0/0
 28271 ;;		Unchanged: 0/0
 28272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28273 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28277 ;;Total ram usage:        2 bytes
 28278 ;; Hardware stack levels used:    1
 28279 ;; Hardware stack levels required when called:   11
 28280 ;; This function calls:
 28281 ;;		Nothing
 28282 ;; This function is called by:
 28283 ;;		_Uart_WriteConstString
 28284 ;;		_Uart_WriteString
 28285 ;;		_Uart_WriteStringLen
 28286 ;; This function uses a non-reentrant model
 28287 ;;
 28288                           
 28289                           	psect	text126
 28290  006034                     __ptext126:
 28291                           	opt stack 0
 28292  006034                     _UartWriteByte:
 28293                           	opt stack 14
 28294                           
 28295                           ;incstack = 0
 28296                           ;UartWriteByte@Module stored from wreg
 28297  006034  0100               	movlb	0	; () banked
 28298  006036  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 28299                           
 28300                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 28301  006038  0100               	movlb	0	; () banked
 28302  00603A  057E               	decf	UartWriteByte@Module& (0+255),w,b
 28303  00603C  A4D8               	btfss	status,2,c
 28304  00603E  D003               	goto	l639
 28305                           
 28306                           ; BSR set to: 0
 28307                           ;uart_drv.c: 176: {
 28308                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 28309  006040  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 28310                           
 28311                           ;uart_drv.c: 179: }
 28312  006044  0012               	return	
 28313  006046                     l639:
 28314                           
 28315                           ; BSR set to: 0
 28316                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 28317                           
 28318                           ; BSR set to: 0
 28319  006046  0E02               	movlw	2
 28320  006048  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 28321  00604A  A4D8               	btfss	status,2,c
 28322  00604C  0012               	return	
 28323                           
 28324                           ; BSR set to: 0
 28325                           ;uart_drv.c: 181: {
 28326                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 28327  00604E  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 28328                           
 28329                           ; BSR set to: 0
 28330  006052  0012               	return	
 28331  006054                     __end_of_UartWriteByte:
 28332                           	opt stack 0
 28333                           tosu	equ	0xFFF
 28334                           tosh	equ	0xFFE
 28335                           tosl	equ	0xFFD
 28336                           pclath	equ	0xFFA
 28337                           tblptru	equ	0xFF8
 28338                           tblptrh	equ	0xFF7
 28339                           tblptrl	equ	0xFF6
 28340                           tablat	equ	0xFF5
 28341                           prodh	equ	0xFF4
 28342                           prodl	equ	0xFF3
 28343                           intcon	equ	0xFF2
 28344                           intcon2	equ	0xFF1
 28345                           intcon3	equ	0xFF0
 28346                           indf0	equ	0xFEF
 28347                           postinc0	equ	0xFEE
 28348                           plusw0	equ	0xFEB
 28349                           fsr0h	equ	0xFEA
 28350                           fsr0l	equ	0xFE9
 28351                           wreg	equ	0xFE8
 28352                           indf1	equ	0xFE7
 28353                           postinc1	equ	0xFE6
 28354                           postdec1	equ	0xFE5
 28355                           plusw1	equ	0xFE3
 28356                           fsr1h	equ	0xFE2
 28357                           fsr1l	equ	0xFE1
 28358                           indf2	equ	0xFDF
 28359                           postinc2	equ	0xFDE
 28360                           postdec2	equ	0xFDD
 28361                           plusw2	equ	0xFDB
 28362                           fsr2h	equ	0xFDA
 28363                           fsr2l	equ	0xFD9
 28364                           status	equ	0xFD8
 28365                           
 28366 ;; *************** function _UartTxBufferStatus *****************
 28367 ;; Defined at:
 28368 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28369 ;; Parameters:    Size  Location     Type
 28370 ;;  Module          1    wreg     unsigned char 
 28371 ;; Auto vars:     Size  Location     Type
 28372 ;;  Module          1   30[BANK0 ] unsigned char 
 28373 ;;  TxBufferStat    1   31[BANK0 ] enum E9033
 28374 ;; Return value:  Size  Location     Type
 28375 ;;                  1    wreg      enum E9033
 28376 ;; Registers used:
 28377 ;;		wreg, status,2, status,0
 28378 ;; Tracked objects:
 28379 ;;		On entry : 0/0
 28380 ;;		On exit  : 0/0
 28381 ;;		Unchanged: 0/0
 28382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28387 ;;Total ram usage:        3 bytes
 28388 ;; Hardware stack levels used:    1
 28389 ;; Hardware stack levels required when called:   11
 28390 ;; This function calls:
 28391 ;;		Nothing
 28392 ;; This function is called by:
 28393 ;;		_Uart_WriteConstString
 28394 ;;		_Uart_WriteString
 28395 ;;		_Uart_WriteStringLen
 28396 ;; This function uses a non-reentrant model
 28397 ;;
 28398                           
 28399                           	psect	text127
 28400  005654                     __ptext127:
 28401                           	opt stack 0
 28402  005654                     _UartTxBufferStatus:
 28403                           	opt stack 14
 28404                           
 28405                           ; BSR set to: 0
 28406                           ;incstack = 0
 28407                           ;UartTxBufferStatus@Module stored from wreg
 28408  005654  0100               	movlb	0	; () banked
 28409  005656  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 28410                           
 28411                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 28412  005658  0E00               	movlw	0
 28413  00565A  0100               	movlb	0	; () banked
 28414  00565C  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28415                           
 28416                           ; BSR set to: 0
 28417                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 28418  00565E  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 28419  005660  A4D8               	btfss	status,2,c
 28420  005662  D00B               	goto	l651
 28421                           
 28422                           ; BSR set to: 0
 28423                           ;uart_drv.c: 228: {
 28424                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28425  005664  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28426  005668  90D8               	bcf	status,0,c
 28427  00566A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28428  00566C  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 28429  00566E  D002               	goto	l652
 28430  005670                     u10980:
 28431                           
 28432                           ; BSR set to: 0
 28433                           ;uart_drv.c: 231: {
 28434                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 28435  005670  0E01               	movlw	1
 28436  005672  D014               	goto	L47
 28437  005674                     l652:
 28438                           
 28439                           ; BSR set to: 0
 28440                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28441                           
 28442                           ; BSR set to: 0
 28443  005674  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28444  005678  D00C               	goto	L76
 28445  00567A                     l651:
 28446                           
 28447                           ; BSR set to: 0
 28448                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 28449                           
 28450                           ; BSR set to: 0
 28451  00567A  0E02               	movlw	2
 28452  00567C  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 28453  00567E  A4D8               	btfss	status,2,c
 28454  005680  D00E               	goto	l660
 28455                           
 28456                           ; BSR set to: 0
 28457                           ;uart_drv.c: 244: {
 28458                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28459  005682  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28460  005686  90D8               	bcf	status,0,c
 28461  005688  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28462  00568A  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28463  00568C  D7F1               	goto	u10980
 28464                           
 28465                           ; BSR set to: 0
 28466                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28467                           
 28468                           ; BSR set to: 0
 28469                           
 28470                           ;uart_drv.c: 249: }
 28471                           
 28472                           ; BSR set to: 0
 28473                           ;uart_drv.c: 247: {
 28474                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 28475  00568E  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28476  005692                     L76:
 28477  005692  90D8               	bcf	status,0,c
 28478  005694  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28479  005696  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28480  005698  D002               	goto	l660
 28481                           
 28482                           ; BSR set to: 0
 28483                           ;uart_drv.c: 251: {
 28484                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 28485  00569A  0E02               	movlw	2
 28486  00569C                     L47:
 28487  00569C  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28488  00569E                     l660:
 28489                           
 28490                           ; BSR set to: 0
 28491                           ;uart_drv.c: 257: }
 28492                           ;uart_drv.c: 258: }
 28493                           ;uart_drv.c: 260: return TxBufferStatus;
 28494                           
 28495                           ; BSR set to: 0
 28496                           
 28497                           ; BSR set to: 0
 28498                           
 28499                           ; BSR set to: 0
 28500                           
 28501                           ; BSR set to: 0
 28502                           
 28503                           ;uart_drv.c: 254: else
 28504                           ;uart_drv.c: 255: {
 28505                           
 28506                           ; BSR set to: 0
 28507  00569E  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 28508  0056A0  0012               	return	
 28509  0056A2                     __end_of_UartTxBufferStatus:
 28510                           	opt stack 0
 28511                           tosu	equ	0xFFF
 28512                           tosh	equ	0xFFE
 28513                           tosl	equ	0xFFD
 28514                           pclath	equ	0xFFA
 28515                           tblptru	equ	0xFF8
 28516                           tblptrh	equ	0xFF7
 28517                           tblptrl	equ	0xFF6
 28518                           tablat	equ	0xFF5
 28519                           prodh	equ	0xFF4
 28520                           prodl	equ	0xFF3
 28521                           intcon	equ	0xFF2
 28522                           intcon2	equ	0xFF1
 28523                           intcon3	equ	0xFF0
 28524                           indf0	equ	0xFEF
 28525                           postinc0	equ	0xFEE
 28526                           plusw0	equ	0xFEB
 28527                           fsr0h	equ	0xFEA
 28528                           fsr0l	equ	0xFE9
 28529                           wreg	equ	0xFE8
 28530                           indf1	equ	0xFE7
 28531                           postinc1	equ	0xFE6
 28532                           postdec1	equ	0xFE5
 28533                           plusw1	equ	0xFE3
 28534                           fsr1h	equ	0xFE2
 28535                           fsr1l	equ	0xFE1
 28536                           indf2	equ	0xFDF
 28537                           postinc2	equ	0xFDE
 28538                           postdec2	equ	0xFDD
 28539                           plusw2	equ	0xFDB
 28540                           fsr2h	equ	0xFDA
 28541                           fsr2l	equ	0xFD9
 28542                           status	equ	0xFD8
 28543                           
 28544 ;; *************** function _StringCopy *****************
 28545 ;; Defined at:
 28546 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28547 ;; Parameters:    Size  Location     Type
 28548 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 28549 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 28550 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), RxBuffer(400), 
 28551 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 28552 ;;		 -> EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), 
 28553 ;;		 -> PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), callerNumber(14), 
 28554 ;;  Len             2   33[BANK0 ] unsigned short 
 28555 ;; Auto vars:     Size  Location     Type
 28556 ;;  Index           2   37[BANK0 ] unsigned short 
 28557 ;; Return value:  Size  Location     Type
 28558 ;;                  1    wreg      void 
 28559 ;; Registers used:
 28560 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28561 ;; Tracked objects:
 28562 ;;		On entry : 0/0
 28563 ;;		On exit  : 0/0
 28564 ;;		Unchanged: 0/0
 28565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28566 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28567 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28568 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28569 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28570 ;;Total ram usage:       10 bytes
 28571 ;; Hardware stack levels used:    1
 28572 ;; Hardware stack levels required when called:   11
 28573 ;; This function calls:
 28574 ;;		Nothing
 28575 ;; This function is called by:
 28576 ;;		_ModemEvtParser
 28577 ;;		_GetSmsSm
 28578 ;;		_SendSmsSm
 28579 ;;		_InitGprsNetwork
 28580 ;;		_HttpGetMethod
 28581 ;;		_Mdm_GetSmsData
 28582 ;;		_Mdm_SendSmsData
 28583 ;;		_Eeprom_Write
 28584 ;; This function uses a non-reentrant model
 28585 ;;
 28586                           
 28587                           	psect	text128
 28588  005094                     __ptext128:
 28589                           	opt stack 0
 28590  005094                     _StringCopy:
 28591                           	opt stack 15
 28592                           
 28593                           ;sf.c: 106: UINT16 Index = 0;
 28594                           
 28595                           ; BSR set to: 0
 28596                           ;incstack = 0
 28597  005094  0E00               	movlw	0
 28598  005096  0100               	movlb	0	; () banked
 28599  005098  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28600  00509A  0E00               	movlw	0
 28601  00509C  6F85               	movwf	StringCopy@Index& (0+255),b
 28602                           
 28603                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 28604  00509E  0E00               	movlw	0
 28605  0050A0  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28606  0050A2  0E00               	movlw	0
 28607  0050A4  6F85               	movwf	StringCopy@Index& (0+255),b
 28608  0050A6  D020               	goto	l2218
 28609  0050A8                     
 28610                           ; BSR set to: 0
 28611                           ;sf.c: 110: {
 28612                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 28613                           
 28614                           ; BSR set to: 0
 28615  0050A8  5185               	movf	StringCopy@Index& (0+255),w,b
 28616  0050AA  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 28617  0050AC  6F83               	movwf	??_StringCopy& (0+255),b
 28618  0050AE  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28619  0050B0  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 28620  0050B2  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 28621  0050B4  C083  FFF6         	movff	??_StringCopy,tblptrl
 28622  0050B8  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 28623  0050BC  6AF8               	clrf	tblptru,c
 28624  0050BE  5185               	movf	StringCopy@Index& (0+255),w,b
 28625  0050C0  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 28626  0050C2  6ED9               	movwf	fsr2l,c
 28627  0050C4  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28628  0050C6  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 28629  0050C8  6EDA               	movwf	fsr2h,c
 28630  0050CA  0E0E               	movlw	(high __ramtop+-1)
 28631  0050CC  64F7               	cpfsgt	tblptrh,c
 28632  0050CE  D003               	bra	u12437
 28633  0050D0  0008               	tblrd		*
 28634  0050D2  50F5               	movf	tablat,w,c
 28635  0050D4  D005               	bra	u12430
 28636  0050D6                     u12437:
 28637  0050D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 28638  0050DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 28639  0050DE  50EF               	movf	indf0,w,c
 28640  0050E0                     u12430:
 28641  0050E0  6EDF               	movwf	indf2,c
 28642  0050E2  0100               	movlb	0	; () banked
 28643  0050E4  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 28644  0050E6  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 28645  0050E8                     l2218:
 28646                           
 28647                           ; BSR set to: 0
 28648                           
 28649                           ; BSR set to: 0
 28650  0050E8  5181               	movf	StringCopy@Len& (0+255),w,b
 28651  0050EA  5D85               	subwf	StringCopy@Index& (0+255),w,b
 28652  0050EC  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 28653  0050EE  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 28654  0050F0  B0D8               	btfsc	status,0,c
 28655  0050F2  0012               	return	
 28656  0050F4  D7D9               	goto	l2219
 28657  0050F6                     __end_of_StringCopy:
 28658                           	opt stack 0
 28659                           tosu	equ	0xFFF
 28660                           tosh	equ	0xFFE
 28661                           tosl	equ	0xFFD
 28662                           pclath	equ	0xFFA
 28663                           tblptru	equ	0xFF8
 28664                           tblptrh	equ	0xFF7
 28665                           tblptrl	equ	0xFF6
 28666                           tablat	equ	0xFF5
 28667                           prodh	equ	0xFF4
 28668                           prodl	equ	0xFF3
 28669                           intcon	equ	0xFF2
 28670                           intcon2	equ	0xFF1
 28671                           intcon3	equ	0xFF0
 28672                           indf0	equ	0xFEF
 28673                           postinc0	equ	0xFEE
 28674                           plusw0	equ	0xFEB
 28675                           fsr0h	equ	0xFEA
 28676                           fsr0l	equ	0xFE9
 28677                           wreg	equ	0xFE8
 28678                           indf1	equ	0xFE7
 28679                           postinc1	equ	0xFE6
 28680                           postdec1	equ	0xFE5
 28681                           plusw1	equ	0xFE3
 28682                           fsr1h	equ	0xFE2
 28683                           fsr1l	equ	0xFE1
 28684                           indf2	equ	0xFDF
 28685                           postinc2	equ	0xFDE
 28686                           postdec2	equ	0xFDD
 28687                           plusw2	equ	0xFDB
 28688                           fsr2h	equ	0xFDA
 28689                           fsr2l	equ	0xFD9
 28690                           status	equ	0xFD8
 28691                           
 28692 ;; *************** function _OsTmr_StartTimer *****************
 28693 ;; Defined at:
 28694 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28695 ;; Parameters:    Size  Location     Type
 28696 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 28697 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28698 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28699 ;;  Timeout         4   35[BANK0 ] unsigned long 
 28700 ;; Auto vars:     Size  Location     Type
 28701 ;;		None
 28702 ;; Return value:  Size  Location     Type
 28703 ;;                  1    wreg      void 
 28704 ;; Registers used:
 28705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28706 ;; Tracked objects:
 28707 ;;		On entry : 0/0
 28708 ;;		On exit  : 0/0
 28709 ;;		Unchanged: 0/0
 28710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28711 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28714 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28715 ;;Total ram usage:        6 bytes
 28716 ;; Hardware stack levels used:    1
 28717 ;; Hardware stack levels required when called:   12
 28718 ;; This function calls:
 28719 ;;		_GetOsTickCounter
 28720 ;; This function is called by:
 28721 ;;		_OsTmr_Wait
 28722 ;;		_CheckModem
 28723 ;;		_SendSmsSm
 28724 ;;		_InitGprsNetwork
 28725 ;;		_HttpGetMethod
 28726 ;;		_I2cSlv_QueryI2cData
 28727 ;;		_Term_MainSm
 28728 ;; This function uses a non-reentrant model
 28729 ;;
 28730                           
 28731                           	psect	text129
 28732  005154                     __ptext129:
 28733                           	opt stack 0
 28734  005154                     _OsTmr_StartTimer:
 28735                           	opt stack 12
 28736                           
 28737                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;incstack = 0
 28741  005154  0100               	movlb	0	; () banked
 28742  005156  EE20 F001          	lfsr	2,1
 28743  00515A  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28744  00515C  26D9               	addwf	fsr2l,f,c
 28745  00515E  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28746  005160  22DA               	addwfc	fsr2h,f,c
 28747  005162  0E00               	movlw	0
 28748  005164  6EDF               	movwf	indf2,c
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 28752  005166  ECF6  F030         	call	_GetOsTickCounter	;wreg free
 28753  00516A  0100               	movlb	0	; () banked
 28754  00516C  EE20 F002          	lfsr	2,2
 28755  005170  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28756  005172  26D9               	addwf	fsr2l,f,c
 28757  005174  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28758  005176  22DA               	addwfc	fsr2h,f,c
 28759  005178  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 28760  00517C  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 28761  005180  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 28762  005184  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 28763                           
 28764                           ; BSR set to: 0
 28765                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 28766  005188  EE20 F006          	lfsr	2,6
 28767  00518C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28768  00518E  26D9               	addwf	fsr2l,f,c
 28769  005190  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28770  005192  22DA               	addwfc	fsr2h,f,c
 28771  005194  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 28772  005198  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 28773  00519C  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 28774  0051A0  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 28775                           
 28776                           ; BSR set to: 0
 28777                           ;os_timers.c: 127: Timer->Enabled = 1u;
 28778  0051A4  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 28779  0051A8  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 28780  0051AC  0E01               	movlw	1
 28781  0051AE  6EDF               	movwf	indf2,c
 28782                           
 28783                           ; BSR set to: 0
 28784  0051B0  0012               	return		;funcret
 28785  0051B2                     __end_of_OsTmr_StartTimer:
 28786                           	opt stack 0
 28787                           tosu	equ	0xFFF
 28788                           tosh	equ	0xFFE
 28789                           tosl	equ	0xFFD
 28790                           pclath	equ	0xFFA
 28791                           tblptru	equ	0xFF8
 28792                           tblptrh	equ	0xFF7
 28793                           tblptrl	equ	0xFF6
 28794                           tablat	equ	0xFF5
 28795                           prodh	equ	0xFF4
 28796                           prodl	equ	0xFF3
 28797                           intcon	equ	0xFF2
 28798                           intcon2	equ	0xFF1
 28799                           intcon3	equ	0xFF0
 28800                           indf0	equ	0xFEF
 28801                           postinc0	equ	0xFEE
 28802                           plusw0	equ	0xFEB
 28803                           fsr0h	equ	0xFEA
 28804                           fsr0l	equ	0xFE9
 28805                           wreg	equ	0xFE8
 28806                           indf1	equ	0xFE7
 28807                           postinc1	equ	0xFE6
 28808                           postdec1	equ	0xFE5
 28809                           plusw1	equ	0xFE3
 28810                           fsr1h	equ	0xFE2
 28811                           fsr1l	equ	0xFE1
 28812                           indf2	equ	0xFDF
 28813                           postinc2	equ	0xFDE
 28814                           postdec2	equ	0xFDD
 28815                           plusw2	equ	0xFDB
 28816                           fsr2h	equ	0xFDA
 28817                           fsr2l	equ	0xFD9
 28818                           status	equ	0xFD8
 28819                           
 28820 ;; *************** function _OsTmr_GetTimerStatus *****************
 28821 ;; Defined at:
 28822 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28823 ;; Parameters:    Size  Location     Type
 28824 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 28825 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28826 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28827 ;; Auto vars:     Size  Location     Type
 28828 ;;		None
 28829 ;; Return value:  Size  Location     Type
 28830 ;;                  1    wreg      enum E7740
 28831 ;; Registers used:
 28832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28833 ;; Tracked objects:
 28834 ;;		On entry : 0/0
 28835 ;;		On exit  : 0/0
 28836 ;;		Unchanged: 0/0
 28837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28840 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28841 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28842 ;;Total ram usage:        6 bytes
 28843 ;; Hardware stack levels used:    1
 28844 ;; Hardware stack levels required when called:   13
 28845 ;; This function calls:
 28846 ;;		_GetElapsedTime
 28847 ;; This function is called by:
 28848 ;;		_OsTmr_Wait
 28849 ;;		_CheckModem
 28850 ;;		_SendSmsSm
 28851 ;;		_InitGprsNetwork
 28852 ;;		_HttpGetMethod
 28853 ;;		_I2cSlv_QueryI2cData
 28854 ;;		_Term_MainSm
 28855 ;; This function uses a non-reentrant model
 28856 ;;
 28857                           
 28858                           	psect	text130
 28859  004A66                     __ptext130:
 28860                           	opt stack 0
 28861  004A66                     _OsTmr_GetTimerStatus:
 28862                           	opt stack 11
 28863                           
 28864                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 28865                           
 28866                           ; BSR set to: 0
 28867                           ;incstack = 0
 28868  004A66  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28869  004A6A  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28870  004A6E  04DE               	decf	postinc2,w,c
 28871  004A70  A4D8               	btfss	status,2,c
 28872  004A72  D030               	goto	l864
 28873                           
 28874                           ;os_timers.c: 197: {
 28875                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 28876  004A74  0100               	movlb	0	; () banked
 28877  004A76  EE20 F006          	lfsr	2,6
 28878  004A7A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28879  004A7C  26D9               	addwf	fsr2l,f,c
 28880  004A7E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28881  004A80  22DA               	addwfc	fsr2h,f,c
 28882  004A82  EE10 F002          	lfsr	1,2
 28883  004A86  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28884  004A88  26E1               	addwf	fsr1l,f,c
 28885  004A8A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28886  004A8C  22E2               	addwfc	fsr1h,f,c
 28887  004A8E  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 28888  004A92  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 28889  004A96  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 28890  004A9A  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 28891  004A9E  EC90  F01E         	call	_GetElapsedTime	;wreg free
 28892  004AA2  50DE               	movf	postinc2,w,c
 28893  004AA4  0100               	movlb	0	; () banked
 28894  004AA6  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 28895  004AA8  50DE               	movf	postinc2,w,c
 28896  004AAA  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 28897  004AAC  50DE               	movf	postinc2,w,c
 28898  004AAE  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 28899  004AB0  50DE               	movf	postinc2,w,c
 28900  004AB2  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 28901  004AB4  A0D8               	btfss	status,0,c
 28902  004AB6  D017               	goto	l867
 28903                           
 28904                           ; BSR set to: 0
 28905                           ;os_timers.c: 200: {
 28906                           ;os_timers.c: 202: Timer->Enabled = 0u;
 28907  004AB8  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28908  004ABC  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28909  004AC0  0E00               	movlw	0
 28910  004AC2  6EDF               	movwf	indf2,c
 28911                           
 28912                           ; BSR set to: 0
 28913                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 28914  004AC4  EE20 F001          	lfsr	2,1
 28915  004AC8  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28916  004ACA  26D9               	addwf	fsr2l,f,c
 28917  004ACC  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28918  004ACE  22DA               	addwfc	fsr2h,f,c
 28919  004AD0  0E01               	movlw	1
 28920  004AD2  D008               	goto	L77
 28921  004AD4                     l864:
 28922                           
 28923                           ;os_timers.c: 211: else
 28924                           ;os_timers.c: 212: {
 28925                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 28926                           
 28927                           ; BSR set to: 0
 28928  004AD4  0100               	movlb	0	; () banked
 28929  004AD6  EE20 F001          	lfsr	2,1
 28930  004ADA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28931  004ADC  26D9               	addwf	fsr2l,f,c
 28932  004ADE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28933  004AE0  22DA               	addwfc	fsr2h,f,c
 28934  004AE2  0E02               	movlw	2
 28935  004AE4                     L77:
 28936  004AE4  6EDF               	movwf	indf2,c
 28937  004AE6                     l867:
 28938                           
 28939                           ; BSR set to: 0
 28940                           ;os_timers.c: 215: }
 28941                           ;os_timers.c: 218: return Timer->Status;
 28942  004AE6  EE20 F001          	lfsr	2,1
 28943  004AEA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28944  004AEC  26D9               	addwf	fsr2l,f,c
 28945  004AEE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28946  004AF0  22DA               	addwfc	fsr2h,f,c
 28947  004AF2  50DF               	movf	indf2,w,c
 28948  004AF4  0012               	return	
 28949  004AF6                     __end_of_OsTmr_GetTimerStatus:
 28950                           	opt stack 0
 28951                           tosu	equ	0xFFF
 28952                           tosh	equ	0xFFE
 28953                           tosl	equ	0xFFD
 28954                           pclath	equ	0xFFA
 28955                           tblptru	equ	0xFF8
 28956                           tblptrh	equ	0xFF7
 28957                           tblptrl	equ	0xFF6
 28958                           tablat	equ	0xFF5
 28959                           prodh	equ	0xFF4
 28960                           prodl	equ	0xFF3
 28961                           intcon	equ	0xFF2
 28962                           intcon2	equ	0xFF1
 28963                           intcon3	equ	0xFF0
 28964                           indf0	equ	0xFEF
 28965                           postinc0	equ	0xFEE
 28966                           plusw0	equ	0xFEB
 28967                           fsr0h	equ	0xFEA
 28968                           fsr0l	equ	0xFE9
 28969                           wreg	equ	0xFE8
 28970                           indf1	equ	0xFE7
 28971                           postinc1	equ	0xFE6
 28972                           postdec1	equ	0xFE5
 28973                           plusw1	equ	0xFE3
 28974                           fsr1h	equ	0xFE2
 28975                           fsr1l	equ	0xFE1
 28976                           indf2	equ	0xFDF
 28977                           postinc2	equ	0xFDE
 28978                           postdec2	equ	0xFDD
 28979                           plusw2	equ	0xFDB
 28980                           fsr2h	equ	0xFDA
 28981                           fsr2l	equ	0xFD9
 28982                           status	equ	0xFD8
 28983                           
 28984 ;; *************** function _GetElapsedTime *****************
 28985 ;; Defined at:
 28986 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28987 ;; Parameters:    Size  Location     Type
 28988 ;;  StartTime       4   33[BANK0 ] unsigned long 
 28989 ;; Auto vars:     Size  Location     Type
 28990 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 28991 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 28992 ;; Return value:  Size  Location     Type
 28993 ;;                  4   33[BANK0 ] unsigned long 
 28994 ;; Registers used:
 28995 ;;		wreg, status,2, status,0, cstack
 28996 ;; Tracked objects:
 28997 ;;		On entry : 0/0
 28998 ;;		On exit  : 0/0
 28999 ;;		Unchanged: 0/0
 29000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29002 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29003 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29004 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29005 ;;Total ram usage:       20 bytes
 29006 ;; Hardware stack levels used:    1
 29007 ;; Hardware stack levels required when called:   12
 29008 ;; This function calls:
 29009 ;;		_GetOsTickCounter
 29010 ;; This function is called by:
 29011 ;;		_OsTmr_GetTimerStatus
 29012 ;;		_OsTmr_GetRemainingTime
 29013 ;; This function uses a non-reentrant model
 29014 ;;
 29015                           
 29016                           	psect	text131
 29017  003D20                     __ptext131:
 29018                           	opt stack 0
 29019  003D20                     _GetElapsedTime:
 29020                           	opt stack 11
 29021                           
 29022                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 29023                           ;os_timers.c: 87: UINT32 TimeValue;
 29024                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 29025                           
 29026                           ; BSR set to: 0
 29027                           ;incstack = 0
 29028  003D20  ECF6  F030         	call	_GetOsTickCounter	;wreg free
 29029  003D24  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 29030  003D28  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 29031  003D2C  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 29032  003D30  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 29033                           
 29034                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 29035  003D34  0100               	movlb	0	; () banked
 29036  003D36  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 29037  003D38  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29038  003D3A  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 29039  003D3C  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29040  003D3E  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 29041  003D40  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29042  003D42  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 29043  003D44  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29044  003D46  A0D8               	btfss	status,0,c
 29045  003D48  D01D               	goto	l844
 29046                           
 29047                           ; BSR set to: 0
 29048                           ;os_timers.c: 94: {
 29049                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 29050  003D4A  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29051  003D4E  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29052  003D52  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29053  003D56  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29054  003D5A  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29055  003D5C  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29056  003D5E  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29057  003D60  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29058  003D62  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29059  003D64  0E00               	movlw	0
 29060  003D66  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29061  003D68  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29062  003D6A  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29063  003D6C  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29064  003D6E  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29065  003D70  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29066  003D72  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29067  003D74  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29068  003D76  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29069  003D78  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29070  003D7A  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29071  003D7C  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29072  003D7E  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29073  003D80  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29074  003D82  D028               	goto	L48
 29075  003D84                     l844:
 29076                           
 29077                           ; BSR set to: 0
 29078                           ;os_timers.c: 97: else
 29079                           ;os_timers.c: 98: {
 29080                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 29081                           
 29082                           ; BSR set to: 0
 29083  003D84  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29084  003D88  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29085  003D8C  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29086  003D90  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29087  003D94  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29088  003D96  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29089  003D98  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29090  003D9A  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29091  003D9C  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29092  003D9E  0E00               	movlw	0
 29093  003DA0  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29094  003DA2  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29095  003DA4  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29096  003DA6  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29097  003DA8  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29098  003DAA  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 29099  003DAC  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29100  003DAE  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29101  003DB0  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 29102  003DB2  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29103  003DB4  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29104  003DB6  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 29105  003DB8  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29106  003DBA  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29107  003DBC  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 29108  003DBE  0EFF               	movlw	255
 29109  003DC0  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 29110  003DC2  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29111  003DC4  0EFF               	movlw	255
 29112  003DC6  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 29113  003DC8  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29114  003DCA  0EFF               	movlw	255
 29115  003DCC  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 29116  003DCE  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29117  003DD0  0EFF               	movlw	255
 29118  003DD2  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 29119  003DD4                     L48:
 29120  003DD4  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 29121                           
 29122                           ; BSR set to: 0
 29123                           ;os_timers.c: 100: }
 29124                           ;os_timers.c: 102: return TimeValue;
 29125                           
 29126                           ; BSR set to: 0
 29127  003DD6  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 29128  003DDA  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 29129  003DDE  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 29130  003DE2  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 29131  003DE6  0012               	return	
 29132  003DE8                     __end_of_GetElapsedTime:
 29133                           	opt stack 0
 29134                           tosu	equ	0xFFF
 29135                           tosh	equ	0xFFE
 29136                           tosl	equ	0xFFD
 29137                           pclath	equ	0xFFA
 29138                           tblptru	equ	0xFF8
 29139                           tblptrh	equ	0xFF7
 29140                           tblptrl	equ	0xFF6
 29141                           tablat	equ	0xFF5
 29142                           prodh	equ	0xFF4
 29143                           prodl	equ	0xFF3
 29144                           intcon	equ	0xFF2
 29145                           intcon2	equ	0xFF1
 29146                           intcon3	equ	0xFF0
 29147                           indf0	equ	0xFEF
 29148                           postinc0	equ	0xFEE
 29149                           plusw0	equ	0xFEB
 29150                           fsr0h	equ	0xFEA
 29151                           fsr0l	equ	0xFE9
 29152                           wreg	equ	0xFE8
 29153                           indf1	equ	0xFE7
 29154                           postinc1	equ	0xFE6
 29155                           postdec1	equ	0xFE5
 29156                           plusw1	equ	0xFE3
 29157                           fsr1h	equ	0xFE2
 29158                           fsr1l	equ	0xFE1
 29159                           indf2	equ	0xFDF
 29160                           postinc2	equ	0xFDE
 29161                           postdec2	equ	0xFDD
 29162                           plusw2	equ	0xFDB
 29163                           fsr2h	equ	0xFDA
 29164                           fsr2l	equ	0xFD9
 29165                           status	equ	0xFD8
 29166                           
 29167 ;; *************** function _GetOsTickCounter *****************
 29168 ;; Defined at:
 29169 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29170 ;; Parameters:    Size  Location     Type
 29171 ;;		None
 29172 ;; Auto vars:     Size  Location     Type
 29173 ;;		None
 29174 ;; Return value:  Size  Location     Type
 29175 ;;                  4   29[BANK0 ] unsigned long 
 29176 ;; Registers used:
 29177 ;;		None
 29178 ;; Tracked objects:
 29179 ;;		On entry : 0/0
 29180 ;;		On exit  : 0/0
 29181 ;;		Unchanged: 0/0
 29182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29183 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29186 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29187 ;;Total ram usage:        4 bytes
 29188 ;; Hardware stack levels used:    1
 29189 ;; Hardware stack levels required when called:   11
 29190 ;; This function calls:
 29191 ;;		Nothing
 29192 ;; This function is called by:
 29193 ;;		_GetElapsedTime
 29194 ;;		_OsTmr_StartTimer
 29195 ;;		_OsTmr_GetElapsedTime
 29196 ;; This function uses a non-reentrant model
 29197 ;;
 29198                           
 29199                           	psect	text132
 29200  0061EC                     __ptext132:
 29201                           	opt stack 0
 29202  0061EC                     _GetOsTickCounter:
 29203                           	opt stack 12
 29204                           
 29205                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 29206                           
 29207                           ; BSR set to: 0
 29208                           ;incstack = 0
 29209  0061EC  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 29210  0061F0  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 29211  0061F4  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 29212  0061F8  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 29213  0061FC  0012               	return		;funcret
 29214  0061FE                     __end_of_GetOsTickCounter:
 29215                           	opt stack 0
 29216                           tosu	equ	0xFFF
 29217                           tosh	equ	0xFFE
 29218                           tosl	equ	0xFFD
 29219                           pclath	equ	0xFFA
 29220                           tblptru	equ	0xFF8
 29221                           tblptrh	equ	0xFF7
 29222                           tblptrl	equ	0xFF6
 29223                           tablat	equ	0xFF5
 29224                           prodh	equ	0xFF4
 29225                           prodl	equ	0xFF3
 29226                           intcon	equ	0xFF2
 29227                           intcon2	equ	0xFF1
 29228                           intcon3	equ	0xFF0
 29229                           indf0	equ	0xFEF
 29230                           postinc0	equ	0xFEE
 29231                           plusw0	equ	0xFEB
 29232                           fsr0h	equ	0xFEA
 29233                           fsr0l	equ	0xFE9
 29234                           wreg	equ	0xFE8
 29235                           indf1	equ	0xFE7
 29236                           postinc1	equ	0xFE6
 29237                           postdec1	equ	0xFE5
 29238                           plusw1	equ	0xFE3
 29239                           fsr1h	equ	0xFE2
 29240                           fsr1l	equ	0xFE1
 29241                           indf2	equ	0xFDF
 29242                           postinc2	equ	0xFDE
 29243                           postdec2	equ	0xFDD
 29244                           plusw2	equ	0xFDB
 29245                           fsr2h	equ	0xFDA
 29246                           fsr2l	equ	0xFD9
 29247                           status	equ	0xFD8
 29248                           
 29249 ;; *************** function _ClearBuffer *****************
 29250 ;; Defined at:
 29251 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 29252 ;; Parameters:    Size  Location     Type
 29253 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 29254 ;;		 -> MyApp_Task@phone(14), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessa
      +ge(50), 
 29255 ;;		 -> Mdm_SmsRx(102), callerNumber(14), RxBuffer(400), 
 29256 ;;  Len             2   31[BANK0 ] unsigned short 
 29257 ;; Auto vars:     Size  Location     Type
 29258 ;;  Index           2   33[BANK0 ] unsigned short 
 29259 ;; Return value:  Size  Location     Type
 29260 ;;                  1    wreg      void 
 29261 ;; Registers used:
 29262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29263 ;; Tracked objects:
 29264 ;;		On entry : 0/0
 29265 ;;		On exit  : 0/0
 29266 ;;		Unchanged: 0/0
 29267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29269 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29271 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29272 ;;Total ram usage:        6 bytes
 29273 ;; Hardware stack levels used:    1
 29274 ;; Hardware stack levels required when called:   11
 29275 ;; This function calls:
 29276 ;;		Nothing
 29277 ;; This function is called by:
 29278 ;;		_GetSmsSm
 29279 ;;		_GetCallerNumber
 29280 ;;		_InitGprsNetwork
 29281 ;;		_HttpGetMethod
 29282 ;;		_MyApp_Task
 29283 ;;		_GsmGprsTerminal
 29284 ;; This function uses a non-reentrant model
 29285 ;;
 29286                           
 29287                           	psect	text133
 29288  005C00                     __ptext133:
 29289                           	opt stack 0
 29290  005C00                     _ClearBuffer:
 29291                           	opt stack 15
 29292                           
 29293                           ;sf.c: 126: UINT16 Index = 0;
 29294                           
 29295                           ;incstack = 0
 29296  005C00  0E00               	movlw	0
 29297  005C02  0100               	movlb	0	; () banked
 29298  005C04  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29299  005C06  0E00               	movlw	0
 29300  005C08  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29301                           
 29302                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 29303  005C0A  0E00               	movlw	0
 29304  005C0C  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29305  005C0E  0E00               	movlw	0
 29306  005C10  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29307  005C12  D00A               	goto	l2224
 29308  005C14                     
 29309                           ; BSR set to: 0
 29310                           ;sf.c: 130: {
 29311                           ;sf.c: 131: *(Buffer + Index) = 0;
 29312                           
 29313                           ; BSR set to: 0
 29314  005C14  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29315  005C16  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 29316  005C18  6ED9               	movwf	fsr2l,c
 29317  005C1A  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29318  005C1C  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 29319  005C1E  6EDA               	movwf	fsr2h,c
 29320  005C20  0E00               	movlw	0
 29321  005C22  6EDF               	movwf	indf2,c
 29322                           
 29323                           ; BSR set to: 0
 29324  005C24  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 29325  005C26  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 29326  005C28                     l2224:
 29327                           
 29328                           ; BSR set to: 0
 29329                           
 29330                           ; BSR set to: 0
 29331  005C28  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29332  005C2A  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 29333  005C2C  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29334  005C2E  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 29335  005C30  A0D8               	btfss	status,0,c
 29336  005C32  0012               	return	
 29337  005C34  D7EF               	goto	l2225
 29338  005C36                     __end_of_ClearBuffer:
 29339                           	opt stack 0
 29340                           tosu	equ	0xFFF
 29341                           tosh	equ	0xFFE
 29342                           tosl	equ	0xFFD
 29343                           pclath	equ	0xFFA
 29344                           tblptru	equ	0xFF8
 29345                           tblptrh	equ	0xFF7
 29346                           tblptrl	equ	0xFF6
 29347                           tablat	equ	0xFF5
 29348                           prodh	equ	0xFF4
 29349                           prodl	equ	0xFF3
 29350                           intcon	equ	0xFF2
 29351                           intcon2	equ	0xFF1
 29352                           intcon3	equ	0xFF0
 29353                           indf0	equ	0xFEF
 29354                           postinc0	equ	0xFEE
 29355                           plusw0	equ	0xFEB
 29356                           fsr0h	equ	0xFEA
 29357                           fsr0l	equ	0xFE9
 29358                           wreg	equ	0xFE8
 29359                           indf1	equ	0xFE7
 29360                           postinc1	equ	0xFE6
 29361                           postdec1	equ	0xFE5
 29362                           plusw1	equ	0xFE3
 29363                           fsr1h	equ	0xFE2
 29364                           fsr1l	equ	0xFE1
 29365                           indf2	equ	0xFDF
 29366                           postinc2	equ	0xFDE
 29367                           postdec2	equ	0xFDD
 29368                           plusw2	equ	0xFDB
 29369                           fsr2h	equ	0xFDA
 29370                           fsr2l	equ	0xFD9
 29371                           status	equ	0xFD8
 29372                           
 29373 ;; *************** function _LedStateMachine *****************
 29374 ;; Defined at:
 29375 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29376 ;; Parameters:    Size  Location     Type
 29377 ;;  Led             1    wreg     unsigned char 
 29378 ;;  LedSts          2   47[BANK0 ] PTR enum E8950
 29379 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 29380 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 29381 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 29382 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 29383 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29384 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 29385 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29386 ;; Auto vars:     Size  Location     Type
 29387 ;;  Led             1   57[BANK0 ] unsigned char 
 29388 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 29389 ;; Return value:  Size  Location     Type
 29390 ;;                  1    wreg      unsigned char 
 29391 ;; Registers used:
 29392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29393 ;; Tracked objects:
 29394 ;;		On entry : 0/0
 29395 ;;		On exit  : 0/0
 29396 ;;		Unchanged: 0/0
 29397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29398 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29399 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29401 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29402 ;;Total ram usage:       11 bytes
 29403 ;; Hardware stack levels used:    1
 29404 ;; Hardware stack levels required when called:   13
 29405 ;; This function calls:
 29406 ;;		_LedBlinkStateMachine
 29407 ;;		_LedPulseStateMachine
 29408 ;;		_Led_SetLedStatus
 29409 ;; This function is called by:
 29410 ;;		_Led_MainTask
 29411 ;; This function uses a non-reentrant model
 29412 ;;
 29413                           
 29414                           	psect	text134
 29415  004454                     __ptext134:
 29416                           	opt stack 0
 29417  004454                     _LedStateMachine:
 29418                           	opt stack 14
 29419                           
 29420                           ; BSR set to: 0
 29421                           ;incstack = 0
 29422                           ;LedStateMachine@Led stored from wreg
 29423  004454  0100               	movlb	0	; () banked
 29424  004456  6F99               	movwf	LedStateMachine@Led& (0+255),b
 29425                           
 29426                           ;led.c: 238: UINT8 LedOutSts = 0u;
 29427  004458  0E00               	movlw	0
 29428  00445A  0100               	movlb	0	; () banked
 29429  00445C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29430                           
 29431                           ;led.c: 241: switch (*LedSts)
 29432  00445E  D037               	goto	l2083
 29433  004460                     
 29434                           ; BSR set to: 0
 29435                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 29436                           
 29437                           ; BSR set to: 0
 29438  004460  0E00               	movlw	0
 29439  004462  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29440                           
 29441                           ; BSR set to: 0
 29442                           ;led.c: 246: *LedOut = ((UINT8)(0));
 29443  004464  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29444  004468  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29445  00446C  0E00               	movlw	0
 29446  00446E  D007               	goto	L49
 29447  004470                     
 29448                           ; BSR set to: 0
 29449                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 29450                           
 29451                           ; BSR set to: 0
 29452  004470  0E01               	movlw	1
 29453  004472  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29454                           
 29455                           ; BSR set to: 0
 29456                           ;led.c: 252: *LedOut = ((UINT8)(1));
 29457  004474  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29458  004478  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29459  00447C  0E01               	movlw	1
 29460  00447E                     L49:
 29461  00447E  6EDF               	movwf	indf2,c
 29462                           
 29463                           ;led.c: 253: break;
 29464  004480  D03A               	goto	l2085
 29465  004482                     
 29466                           ; BSR set to: 0
 29467                           ;led.c: 257: if (*LedOut == 1)
 29468                           
 29469                           ; BSR set to: 0
 29470  004482  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29471  004486  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29472  00448A  04DE               	decf	postinc2,w,c
 29473  00448C  A4D8               	btfss	status,2,c
 29474  00448E  D006               	goto	l2088
 29475                           
 29476                           ; BSR set to: 0
 29477                           ;led.c: 258: {
 29478                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 29479  004490  0E00               	movlw	0
 29480  004492  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29481  004494  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29482  004496  ECAF  F02E         	call	_Led_SetLedStatus
 29483                           
 29484                           ;led.c: 261: }
 29485  00449A  D02D               	goto	l2085
 29486  00449C                     l2088:
 29487                           
 29488                           ;led.c: 262: else
 29489                           ;led.c: 263: {
 29490                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 29491  00449C  0E01               	movlw	1
 29492  00449E  0100               	movlb	0	; () banked
 29493  0044A0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29494  0044A2  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29495  0044A4  ECAF  F02E         	call	_Led_SetLedStatus
 29496                           
 29497                           ;led.c: 266: }
 29498                           ;led.c: 267: break;
 29499  0044A8  D026               	goto	l2085
 29500  0044AA                     
 29501                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 29502  0044AA  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 29503  0044AE  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 29504  0044B2  EC67  F013         	call	_LedBlinkStateMachine	;wreg free
 29505  0044B6  D008               	goto	L50
 29506  0044B8                     
 29507                           ; BSR set to: 0
 29508                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 29509                           
 29510                           ; BSR set to: 0
 29511  0044B8  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 29512  0044BC  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 29513  0044C0  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 29514  0044C4  EC20  F019         	call	_LedPulseStateMachine	;wreg free
 29515  0044C8                     L50:
 29516  0044C8  0100               	movlb	0	; () banked
 29517  0044CA  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29518                           
 29519                           ; BSR set to: 0
 29520                           ;led.c: 281: }
 29521                           
 29522                           ; BSR set to: 0
 29523                           ;led.c: 280: break;
 29524                           
 29525                           ;led.c: 279: default:
 29526                           
 29527                           ;led.c: 277: break;
 29528  0044CC  D014               	goto	l2085
 29529  0044CE                     l2083:
 29530                           
 29531                           ; BSR set to: 0
 29532                           
 29533                           ; BSR set to: 0
 29534  0044CE  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 29535  0044D2  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 29536  0044D6  50DF               	movf	indf2,w,c
 29537                           
 29538                           ; Switch size 1, requested type "space"
 29539                           ; Number of cases is 5, Range of values is 0 to 4
 29540                           ; switch strategies available:
 29541                           ; Name         Instructions Cycles
 29542                           ; simple_byte           16     9 (average)
 29543                           ;	Chosen strategy is simple_byte
 29544  0044D8  0A00               	xorlw	0	; case 0
 29545  0044DA  B4D8               	btfsc	status,2,c
 29546  0044DC  D7C1               	goto	l2084
 29547  0044DE  0A01               	xorlw	1	; case 1
 29548  0044E0  B4D8               	btfsc	status,2,c
 29549  0044E2  D7C6               	goto	l2086
 29550  0044E4  0A03               	xorlw	3	; case 2
 29551  0044E6  B4D8               	btfsc	status,2,c
 29552  0044E8  D7CC               	goto	l2087
 29553  0044EA  0A01               	xorlw	1	; case 3
 29554  0044EC  B4D8               	btfsc	status,2,c
 29555  0044EE  D7DD               	goto	l2090
 29556  0044F0  0A07               	xorlw	7	; case 4
 29557  0044F2  B4D8               	btfsc	status,2,c
 29558  0044F4  D7E1               	goto	l2091
 29559  0044F6                     l2085:
 29560                           
 29561                           ;led.c: 283: return LedOutSts;
 29562                           
 29563                           ; BSR set to: 0
 29564  0044F6  0100               	movlb	0	; () banked
 29565  0044F8  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 29566  0044FA  0012               	return	
 29567  0044FC                     __end_of_LedStateMachine:
 29568                           	opt stack 0
 29569                           tosu	equ	0xFFF
 29570                           tosh	equ	0xFFE
 29571                           tosl	equ	0xFFD
 29572                           pclath	equ	0xFFA
 29573                           tblptru	equ	0xFF8
 29574                           tblptrh	equ	0xFF7
 29575                           tblptrl	equ	0xFF6
 29576                           tablat	equ	0xFF5
 29577                           prodh	equ	0xFF4
 29578                           prodl	equ	0xFF3
 29579                           intcon	equ	0xFF2
 29580                           intcon2	equ	0xFF1
 29581                           intcon3	equ	0xFF0
 29582                           indf0	equ	0xFEF
 29583                           postinc0	equ	0xFEE
 29584                           plusw0	equ	0xFEB
 29585                           fsr0h	equ	0xFEA
 29586                           fsr0l	equ	0xFE9
 29587                           wreg	equ	0xFE8
 29588                           indf1	equ	0xFE7
 29589                           postinc1	equ	0xFE6
 29590                           postdec1	equ	0xFE5
 29591                           plusw1	equ	0xFE3
 29592                           fsr1h	equ	0xFE2
 29593                           fsr1l	equ	0xFE1
 29594                           indf2	equ	0xFDF
 29595                           postinc2	equ	0xFDE
 29596                           postdec2	equ	0xFDD
 29597                           plusw2	equ	0xFDB
 29598                           fsr2h	equ	0xFDA
 29599                           fsr2l	equ	0xFD9
 29600                           status	equ	0xFD8
 29601                           
 29602 ;; *************** function _LedPulseStateMachine *****************
 29603 ;; Defined at:
 29604 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29605 ;; Parameters:    Size  Location     Type
 29606 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 29607 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29608 ;;  Led             1   44[BANK0 ] unsigned char 
 29609 ;; Auto vars:     Size  Location     Type
 29610 ;;		None
 29611 ;; Return value:  Size  Location     Type
 29612 ;;                  1    wreg      unsigned char 
 29613 ;; Registers used:
 29614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29615 ;; Tracked objects:
 29616 ;;		On entry : 0/0
 29617 ;;		On exit  : 0/0
 29618 ;;		Unchanged: 0/0
 29619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29620 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29622 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29623 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29624 ;;Total ram usage:        5 bytes
 29625 ;; Hardware stack levels used:    1
 29626 ;; Hardware stack levels required when called:   12
 29627 ;; This function calls:
 29628 ;;		_Led_SetLedStatus
 29629 ;;		___lwdiv
 29630 ;; This function is called by:
 29631 ;;		_LedStateMachine
 29632 ;; This function uses a non-reentrant model
 29633 ;;
 29634                           
 29635                           	psect	text135
 29636  003240                     __ptext135:
 29637                           	opt stack 0
 29638  003240                     _LedPulseStateMachine:
 29639                           	opt stack 14
 29640                           
 29641                           ;led.c: 185: switch (LedPulse->LedPulseState)
 29642                           
 29643                           ; BSR set to: 0
 29644                           ;incstack = 0
 29645  003240  D05C               	goto	l2073
 29646  003242                     
 29647                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 29648  003242  0100               	movlb	0	; () banked
 29649  003244  EE20 F001          	lfsr	2,1
 29650  003248  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29651  00324A  26D9               	addwf	fsr2l,f,c
 29652  00324C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29653  00324E  22DA               	addwfc	fsr2h,f,c
 29654  003250  0E01               	movlw	1
 29655  003252  6EDF               	movwf	indf2,c
 29656                           
 29657                           ; BSR set to: 0
 29658                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 29659  003254  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29660  003258  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29661  00325C  0E01               	movlw	1
 29662  00325E  D036               	goto	L51
 29663  003260                     
 29664                           ;led.c: 196: LedPulse->LedPulseCounter++;
 29665                           
 29666                           ; BSR set to: 0
 29667  003260  0100               	movlb	0	; () banked
 29668  003262  EE20 F002          	lfsr	2,2
 29669  003266  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29670  003268  26D9               	addwf	fsr2l,f,c
 29671  00326A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29672  00326C  22DA               	addwfc	fsr2h,f,c
 29673  00326E  2ADE               	incf	postinc2,f,c
 29674  003270  0E00               	movlw	0
 29675  003272  22DD               	addwfc	postdec2,f,c
 29676                           
 29677                           ; BSR set to: 0
 29678                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 29679  003274  EE20 F004          	lfsr	2,4
 29680  003278  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29681  00327A  26D9               	addwf	fsr2l,f,c
 29682  00327C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29683  00327E  22DA               	addwfc	fsr2h,f,c
 29684  003280  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29685  003284  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29686  003288  0E00               	movlw	0
 29687  00328A  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29688  00328C  0E32               	movlw	50
 29689  00328E  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29690  003290  EC5F  F02A         	call	___lwdiv	;wreg free
 29691  003294  0100               	movlb	0	; () banked
 29692  003296  EE20 F002          	lfsr	2,2
 29693  00329A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29694  00329C  26D9               	addwf	fsr2l,f,c
 29695  00329E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29696  0032A0  22DA               	addwfc	fsr2h,f,c
 29697  0032A2  5183               	movf	?___lwdiv& (0+255),w,b
 29698  0032A4  5CDE               	subwf	postinc2,w,c
 29699  0032A6  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29700  0032A8  58DE               	subwfb	postinc2,w,c
 29701  0032AA  A0D8               	btfss	status,0,c
 29702  0032AC  D034               	goto	l2075
 29703                           
 29704                           ; BSR set to: 0
 29705                           ;led.c: 199: {
 29706                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 29707  0032AE  EE20 F002          	lfsr	2,2
 29708  0032B2  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29709  0032B4  26D9               	addwf	fsr2l,f,c
 29710  0032B6  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29711  0032B8  22DA               	addwfc	fsr2h,f,c
 29712  0032BA  0E00               	movlw	0
 29713  0032BC  6EDE               	movwf	postinc2,c
 29714  0032BE  0E00               	movlw	0
 29715  0032C0  6EDD               	movwf	postdec2,c
 29716                           
 29717                           ; BSR set to: 0
 29718                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 29719  0032C2  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29720  0032C6  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29721  0032CA  0E02               	movlw	2
 29722  0032CC                     L51:
 29723  0032CC  6EDF               	movwf	indf2,c
 29724                           
 29725                           ; BSR set to: 0
 29726                           ;led.c: 204: }
 29727                           ;led.c: 205: break;
 29728  0032CE  D023               	goto	l2075
 29729  0032D0                     
 29730                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 29731                           
 29732                           ; BSR set to: 0
 29733  0032D0  0100               	movlb	0	; () banked
 29734  0032D2  EE20 F001          	lfsr	2,1
 29735  0032D6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29736  0032D8  26D9               	addwf	fsr2l,f,c
 29737  0032DA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29738  0032DC  22DA               	addwfc	fsr2h,f,c
 29739  0032DE  0E00               	movlw	0
 29740  0032E0  6EDF               	movwf	indf2,c
 29741                           
 29742                           ; BSR set to: 0
 29743                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 29744  0032E2  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29745  0032E6  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29746  0032EA  0E00               	movlw	0
 29747  0032EC  6EDF               	movwf	indf2,c
 29748                           
 29749                           ; BSR set to: 0
 29750                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 29751  0032EE  0E00               	movlw	0
 29752  0032F0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29753  0032F2  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 29754  0032F4  ECAF  F02E         	call	_Led_SetLedStatus
 29755                           
 29756                           ;led.c: 218: }
 29757                           
 29758                           ;led.c: 217: break;
 29759                           
 29760                           ;led.c: 216: default:
 29761                           
 29762                           ;led.c: 214: break;
 29763  0032F8  D00E               	goto	l2075
 29764  0032FA                     l2073:
 29765  0032FA  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29766  0032FE  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29767  003302  50DF               	movf	indf2,w,c
 29768                           
 29769                           ; Switch size 1, requested type "space"
 29770                           ; Number of cases is 3, Range of values is 0 to 2
 29771                           ; switch strategies available:
 29772                           ; Name         Instructions Cycles
 29773                           ; simple_byte           10     6 (average)
 29774                           ;	Chosen strategy is simple_byte
 29775  003304  0A00               	xorlw	0	; case 0
 29776  003306  B4D8               	btfsc	status,2,c
 29777  003308  D79C               	goto	l2074
 29778  00330A  0A01               	xorlw	1	; case 1
 29779  00330C  B4D8               	btfsc	status,2,c
 29780  00330E  D7A8               	goto	l2076
 29781  003310  0A03               	xorlw	3	; case 2
 29782  003312  B4D8               	btfsc	status,2,c
 29783  003314  D7DD               	goto	l2078
 29784  003316                     l2075:
 29785                           
 29786                           ;led.c: 221: return (LedPulse->LedOutState);
 29787  003316  0100               	movlb	0	; () banked
 29788  003318  EE20 F001          	lfsr	2,1
 29789  00331C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29790  00331E  26D9               	addwf	fsr2l,f,c
 29791  003320  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29792  003322  22DA               	addwfc	fsr2h,f,c
 29793  003324  50DF               	movf	indf2,w,c
 29794  003326  0012               	return	
 29795  003328                     __end_of_LedPulseStateMachine:
 29796                           	opt stack 0
 29797                           tosu	equ	0xFFF
 29798                           tosh	equ	0xFFE
 29799                           tosl	equ	0xFFD
 29800                           pclath	equ	0xFFA
 29801                           tblptru	equ	0xFF8
 29802                           tblptrh	equ	0xFF7
 29803                           tblptrl	equ	0xFF6
 29804                           tablat	equ	0xFF5
 29805                           prodh	equ	0xFF4
 29806                           prodl	equ	0xFF3
 29807                           intcon	equ	0xFF2
 29808                           intcon2	equ	0xFF1
 29809                           intcon3	equ	0xFF0
 29810                           indf0	equ	0xFEF
 29811                           postinc0	equ	0xFEE
 29812                           plusw0	equ	0xFEB
 29813                           fsr0h	equ	0xFEA
 29814                           fsr0l	equ	0xFE9
 29815                           wreg	equ	0xFE8
 29816                           indf1	equ	0xFE7
 29817                           postinc1	equ	0xFE6
 29818                           postdec1	equ	0xFE5
 29819                           plusw1	equ	0xFE3
 29820                           fsr1h	equ	0xFE2
 29821                           fsr1l	equ	0xFE1
 29822                           indf2	equ	0xFDF
 29823                           postinc2	equ	0xFDE
 29824                           postdec2	equ	0xFDD
 29825                           plusw2	equ	0xFDB
 29826                           fsr2h	equ	0xFDA
 29827                           fsr2l	equ	0xFD9
 29828                           status	equ	0xFD8
 29829                           
 29830 ;; *************** function _Led_SetLedStatus *****************
 29831 ;; Defined at:
 29832 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29833 ;; Parameters:    Size  Location     Type
 29834 ;;  Led             1    wreg     unsigned char 
 29835 ;;  LedSts          1   29[BANK0 ] enum E8950
 29836 ;; Auto vars:     Size  Location     Type
 29837 ;;  Led             1   30[BANK0 ] unsigned char 
 29838 ;; Return value:  Size  Location     Type
 29839 ;;                  1    wreg      void 
 29840 ;; Registers used:
 29841 ;;		wreg, status,2, status,0
 29842 ;; Tracked objects:
 29843 ;;		On entry : 0/0
 29844 ;;		On exit  : 0/0
 29845 ;;		Unchanged: 0/0
 29846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29847 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29851 ;;Total ram usage:        2 bytes
 29852 ;; Hardware stack levels used:    1
 29853 ;; Hardware stack levels required when called:   11
 29854 ;; This function calls:
 29855 ;;		Nothing
 29856 ;; This function is called by:
 29857 ;;		_LedPulseStateMachine
 29858 ;;		_LedStateMachine
 29859 ;;		_initGprsModem
 29860 ;;		_blinkForSeconds
 29861 ;; This function uses a non-reentrant model
 29862 ;;
 29863                           
 29864                           	psect	text136
 29865  005D5E                     __ptext136:
 29866                           	opt stack 0
 29867  005D5E                     _Led_SetLedStatus:
 29868                           	opt stack 15
 29869                           
 29870                           ; BSR set to: 0
 29871                           ;incstack = 0
 29872                           ;Led_SetLedStatus@Led stored from wreg
 29873  005D5E  0100               	movlb	0	; () banked
 29874  005D60  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 29875                           
 29876                           ;led.c: 341: switch (Led)
 29877  005D62  D009               	goto	l2104
 29878  005D64                     l2105:
 29879                           
 29880                           ; BSR set to: 0
 29881                           ;led.c: 344: Led1Sts = LedSts;
 29882  005D64  C07D  F1FD         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 29883                           
 29884                           ;led.c: 345: break;
 29885  005D68  0012               	return	
 29886  005D6A                     l2107:
 29887                           
 29888                           ; BSR set to: 0
 29889                           ;led.c: 348: Led2Sts = LedSts;
 29890  005D6A  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 29891                           
 29892                           ;led.c: 349: break;
 29893  005D6E  0012               	return	
 29894  005D70                     l2108:
 29895                           
 29896                           ; BSR set to: 0
 29897                           ;led.c: 352: Led3Sts = LedSts;
 29898  005D70  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 29899                           
 29900                           ; BSR set to: 0
 29901                           ;led.c: 357: }
 29902                           
 29903                           ; BSR set to: 0
 29904                           ;led.c: 356: break;
 29905                           
 29906                           ;led.c: 355: default:
 29907                           
 29908                           ;led.c: 353: break;
 29909  005D74  0012               	return	
 29910  005D76                     l2104:
 29911                           
 29912                           ; BSR set to: 0
 29913  005D76  0100               	movlb	0	; () banked
 29914  005D78  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 29915                           
 29916                           ; Switch size 1, requested type "space"
 29917                           ; Number of cases is 3, Range of values is 1 to 3
 29918                           ; switch strategies available:
 29919                           ; Name         Instructions Cycles
 29920                           ; simple_byte           10     6 (average)
 29921                           ;	Chosen strategy is simple_byte
 29922  005D7A  0A01               	xorlw	1	; case 1
 29923  005D7C  B4D8               	btfsc	status,2,c
 29924  005D7E  D7F2               	goto	l2105
 29925  005D80  0A03               	xorlw	3	; case 2
 29926  005D82  B4D8               	btfsc	status,2,c
 29927  005D84  D7F2               	goto	l2107
 29928  005D86  0A01               	xorlw	1	; case 3
 29929  005D88  A4D8               	btfss	status,2,c
 29930  005D8A  0012               	return	
 29931  005D8C  D7F1               	goto	l2108
 29932  005D8E                     __end_of_Led_SetLedStatus:
 29933                           	opt stack 0
 29934                           tosu	equ	0xFFF
 29935                           tosh	equ	0xFFE
 29936                           tosl	equ	0xFFD
 29937                           pclath	equ	0xFFA
 29938                           tblptru	equ	0xFF8
 29939                           tblptrh	equ	0xFF7
 29940                           tblptrl	equ	0xFF6
 29941                           tablat	equ	0xFF5
 29942                           prodh	equ	0xFF4
 29943                           prodl	equ	0xFF3
 29944                           intcon	equ	0xFF2
 29945                           intcon2	equ	0xFF1
 29946                           intcon3	equ	0xFF0
 29947                           indf0	equ	0xFEF
 29948                           postinc0	equ	0xFEE
 29949                           plusw0	equ	0xFEB
 29950                           fsr0h	equ	0xFEA
 29951                           fsr0l	equ	0xFE9
 29952                           wreg	equ	0xFE8
 29953                           indf1	equ	0xFE7
 29954                           postinc1	equ	0xFE6
 29955                           postdec1	equ	0xFE5
 29956                           plusw1	equ	0xFE3
 29957                           fsr1h	equ	0xFE2
 29958                           fsr1l	equ	0xFE1
 29959                           indf2	equ	0xFDF
 29960                           postinc2	equ	0xFDE
 29961                           postdec2	equ	0xFDD
 29962                           plusw2	equ	0xFDB
 29963                           fsr2h	equ	0xFDA
 29964                           fsr2l	equ	0xFD9
 29965                           status	equ	0xFD8
 29966                           
 29967 ;; *************** function _LedBlinkStateMachine *****************
 29968 ;; Defined at:
 29969 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29970 ;; Parameters:    Size  Location     Type
 29971 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 29972 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29973 ;; Auto vars:     Size  Location     Type
 29974 ;;		None
 29975 ;; Return value:  Size  Location     Type
 29976 ;;                  1    wreg      unsigned char 
 29977 ;; Registers used:
 29978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29979 ;; Tracked objects:
 29980 ;;		On entry : 0/0
 29981 ;;		On exit  : 0/0
 29982 ;;		Unchanged: 0/0
 29983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29987 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29988 ;;Total ram usage:        4 bytes
 29989 ;; Hardware stack levels used:    1
 29990 ;; Hardware stack levels required when called:   12
 29991 ;; This function calls:
 29992 ;;		___lwdiv
 29993 ;; This function is called by:
 29994 ;;		_LedStateMachine
 29995 ;; This function uses a non-reentrant model
 29996 ;;
 29997                           
 29998                           	psect	text137
 29999  0026CE                     __ptext137:
 30000                           	opt stack 0
 30001  0026CE                     _LedBlinkStateMachine:
 30002                           	opt stack 14
 30003                           
 30004                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 30005                           
 30006                           ; BSR set to: 0
 30007                           ;incstack = 0
 30008  0026CE  D08F               	goto	l2060
 30009  0026D0                     
 30010                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 30011  0026D0  0100               	movlb	0	; () banked
 30012  0026D2  EE20 F008          	lfsr	2,8
 30013  0026D6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30014  0026D8  26D9               	addwf	fsr2l,f,c
 30015  0026DA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30016  0026DC  22DA               	addwfc	fsr2h,f,c
 30017  0026DE  EE10 F001          	lfsr	1,1
 30018  0026E2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30019  0026E4  26E1               	addwf	fsr1l,f,c
 30020  0026E6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30021  0026E8  22E2               	addwfc	fsr1h,f,c
 30022  0026EA  CFDF FFE7          	movff	indf2,indf1
 30023                           
 30024                           ; BSR set to: 0
 30025                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 30026  0026EE  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30027  0026F2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30028  0026F6  D040               	goto	L52
 30029  0026F8                     
 30030                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 30031                           
 30032                           ; BSR set to: 0
 30033  0026F8  0100               	movlb	0	; () banked
 30034  0026FA  EE20 F002          	lfsr	2,2
 30035  0026FE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30036  002700  26D9               	addwf	fsr2l,f,c
 30037  002702  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30038  002704  22DA               	addwfc	fsr2h,f,c
 30039  002706  2ADE               	incf	postinc2,f,c
 30040  002708  0E00               	movlw	0
 30041  00270A  22DD               	addwfc	postdec2,f,c
 30042                           
 30043                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 30044  00270C  EE20 F001          	lfsr	2,1
 30045  002710  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30046  002712  26D9               	addwf	fsr2l,f,c
 30047  002714  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30048  002716  22DA               	addwfc	fsr2h,f,c
 30049  002718  50DF               	movf	indf2,w,c
 30050  00271A  A4D8               	btfss	status,2,c
 30051  00271C  D02F               	goto	l2064
 30052                           
 30053                           ; BSR set to: 0
 30054                           ;led.c: 142: {
 30055                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 30056  00271E  EE20 F006          	lfsr	2,6
 30057  002722  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30058  002724  26D9               	addwf	fsr2l,f,c
 30059  002726  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30060  002728  22DA               	addwfc	fsr2h,f,c
 30061  00272A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30062  00272E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30063  002732  0E00               	movlw	0
 30064  002734  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30065  002736  0E32               	movlw	50
 30066  002738  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30067  00273A  EC5F  F02A         	call	___lwdiv	;wreg free
 30068  00273E  0100               	movlb	0	; () banked
 30069  002740  EE20 F002          	lfsr	2,2
 30070  002744  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30071  002746  26D9               	addwf	fsr2l,f,c
 30072  002748  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30073  00274A  22DA               	addwfc	fsr2h,f,c
 30074  00274C  5183               	movf	?___lwdiv& (0+255),w,b
 30075  00274E  5CDE               	subwf	postinc2,w,c
 30076  002750  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30077  002752  58DE               	subwfb	postinc2,w,c
 30078  002754  A0D8               	btfss	status,0,c
 30079  002756  D056               	goto	l2062
 30080                           
 30081                           ; BSR set to: 0
 30082                           ;led.c: 145: {
 30083                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 30084  002758  EE20 F002          	lfsr	2,2
 30085  00275C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30086  00275E  26D9               	addwf	fsr2l,f,c
 30087  002760  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30088  002762  22DA               	addwfc	fsr2h,f,c
 30089  002764  0E00               	movlw	0
 30090  002766  6EDE               	movwf	postinc2,c
 30091  002768  0E00               	movlw	0
 30092  00276A  6EDD               	movwf	postdec2,c
 30093                           
 30094                           ;led.c: 149: LedBlink->LedOutState = OnState;
 30095  00276C  EE20 F001          	lfsr	2,1
 30096  002770  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30097  002772  26D9               	addwf	fsr2l,f,c
 30098  002774  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30099  002776  22DA               	addwfc	fsr2h,f,c
 30100  002778                     L52:
 30101  002778  0E01               	movlw	1
 30102  00277A  D037               	goto	L53
 30103  00277C                     l2064:
 30104                           
 30105                           ; BSR set to: 0
 30106                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 30107                           
 30108                           ; BSR set to: 0
 30109  00277C  EE20 F001          	lfsr	2,1
 30110  002780  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30111  002782  26D9               	addwf	fsr2l,f,c
 30112  002784  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30113  002786  22DA               	addwfc	fsr2h,f,c
 30114  002788  04DE               	decf	postinc2,w,c
 30115  00278A  A4D8               	btfss	status,2,c
 30116  00278C  D03B               	goto	l2062
 30117                           
 30118                           ; BSR set to: 0
 30119                           ;led.c: 153: {
 30120                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 30121  00278E  EE20 F004          	lfsr	2,4
 30122  002792  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30123  002794  26D9               	addwf	fsr2l,f,c
 30124  002796  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30125  002798  22DA               	addwfc	fsr2h,f,c
 30126  00279A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30127  00279E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30128  0027A2  0E00               	movlw	0
 30129  0027A4  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30130  0027A6  0E32               	movlw	50
 30131  0027A8  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30132  0027AA  EC5F  F02A         	call	___lwdiv	;wreg free
 30133  0027AE  0100               	movlb	0	; () banked
 30134  0027B0  EE20 F002          	lfsr	2,2
 30135  0027B4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30136  0027B6  26D9               	addwf	fsr2l,f,c
 30137  0027B8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30138  0027BA  22DA               	addwfc	fsr2h,f,c
 30139  0027BC  5183               	movf	?___lwdiv& (0+255),w,b
 30140  0027BE  5CDE               	subwf	postinc2,w,c
 30141  0027C0  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30142  0027C2  58DE               	subwfb	postinc2,w,c
 30143  0027C4  A0D8               	btfss	status,0,c
 30144  0027C6  D01E               	goto	l2062
 30145                           
 30146                           ; BSR set to: 0
 30147                           ;led.c: 156: {
 30148                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 30149  0027C8  EE20 F002          	lfsr	2,2
 30150  0027CC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30151  0027CE  26D9               	addwf	fsr2l,f,c
 30152  0027D0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30153  0027D2  22DA               	addwfc	fsr2h,f,c
 30154  0027D4  0E00               	movlw	0
 30155  0027D6  6EDE               	movwf	postinc2,c
 30156  0027D8  0E00               	movlw	0
 30157  0027DA  6EDD               	movwf	postdec2,c
 30158                           
 30159                           ;led.c: 160: LedBlink->LedOutState = OffState;
 30160  0027DC  EE20 F001          	lfsr	2,1
 30161  0027E0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30162  0027E2  26D9               	addwf	fsr2l,f,c
 30163  0027E4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30164  0027E6  22DA               	addwfc	fsr2h,f,c
 30165  0027E8  0E00               	movlw	0
 30166  0027EA                     L53:
 30167  0027EA  6EDF               	movwf	indf2,c
 30168                           
 30169                           ; BSR set to: 0
 30170                           ;led.c: 167: }
 30171                           
 30172                           ; BSR set to: 0
 30173                           ;led.c: 166: break;
 30174                           
 30175                           ;led.c: 165: default:
 30176                           
 30177                           ; BSR set to: 0
 30178                           ;led.c: 161: }
 30179                           ;led.c: 162: }
 30180                           ;led.c: 163: break;
 30181                           
 30182                           ; BSR set to: 0
 30183                           
 30184                           ; BSR set to: 0
 30185  0027EC  D00B               	goto	l2062
 30186  0027EE                     l2060:
 30187                           
 30188                           ; BSR set to: 0
 30189  0027EE  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30190  0027F2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30191  0027F6  50DF               	movf	indf2,w,c
 30192                           
 30193                           ; Switch size 1, requested type "space"
 30194                           ; Number of cases is 2, Range of values is 0 to 1
 30195                           ; switch strategies available:
 30196                           ; Name         Instructions Cycles
 30197                           ; simple_byte            7     4 (average)
 30198                           ;	Chosen strategy is simple_byte
 30199  0027F8  0A00               	xorlw	0	; case 0
 30200  0027FA  B4D8               	btfsc	status,2,c
 30201  0027FC  D769               	goto	l2061
 30202  0027FE  0A01               	xorlw	1	; case 1
 30203  002800  B4D8               	btfsc	status,2,c
 30204  002802  D77A               	goto	l2063
 30205  002804                     l2062:
 30206                           
 30207                           ;led.c: 170: return (LedBlink->LedOutState);
 30208  002804  0100               	movlb	0	; () banked
 30209  002806  EE20 F001          	lfsr	2,1
 30210  00280A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30211  00280C  26D9               	addwf	fsr2l,f,c
 30212  00280E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30213  002810  22DA               	addwfc	fsr2h,f,c
 30214  002812  50DF               	movf	indf2,w,c
 30215  002814  0012               	return	
 30216  002816                     __end_of_LedBlinkStateMachine:
 30217                           	opt stack 0
 30218                           tosu	equ	0xFFF
 30219                           tosh	equ	0xFFE
 30220                           tosl	equ	0xFFD
 30221                           pclath	equ	0xFFA
 30222                           tblptru	equ	0xFF8
 30223                           tblptrh	equ	0xFF7
 30224                           tblptrl	equ	0xFF6
 30225                           tablat	equ	0xFF5
 30226                           prodh	equ	0xFF4
 30227                           prodl	equ	0xFF3
 30228                           intcon	equ	0xFF2
 30229                           intcon2	equ	0xFF1
 30230                           intcon3	equ	0xFF0
 30231                           indf0	equ	0xFEF
 30232                           postinc0	equ	0xFEE
 30233                           plusw0	equ	0xFEB
 30234                           fsr0h	equ	0xFEA
 30235                           fsr0l	equ	0xFE9
 30236                           wreg	equ	0xFE8
 30237                           indf1	equ	0xFE7
 30238                           postinc1	equ	0xFE6
 30239                           postdec1	equ	0xFE5
 30240                           plusw1	equ	0xFE3
 30241                           fsr1h	equ	0xFE2
 30242                           fsr1l	equ	0xFE1
 30243                           indf2	equ	0xFDF
 30244                           postinc2	equ	0xFDE
 30245                           postdec2	equ	0xFDD
 30246                           plusw2	equ	0xFDB
 30247                           fsr2h	equ	0xFDA
 30248                           fsr2l	equ	0xFD9
 30249                           status	equ	0xFD8
 30250                           
 30251 ;; *************** function ___lwdiv *****************
 30252 ;; Defined at:
 30253 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 30254 ;; Parameters:    Size  Location     Type
 30255 ;;  dividend        2   35[BANK0 ] unsigned int 
 30256 ;;  divisor         2   37[BANK0 ] unsigned int 
 30257 ;; Auto vars:     Size  Location     Type
 30258 ;;  quotient        2   40[BANK0 ] unsigned int 
 30259 ;;  counter         1   39[BANK0 ] unsigned char 
 30260 ;; Return value:  Size  Location     Type
 30261 ;;                  2   35[BANK0 ] unsigned int 
 30262 ;; Registers used:
 30263 ;;		wreg, status,2, status,0
 30264 ;; Tracked objects:
 30265 ;;		On entry : 0/0
 30266 ;;		On exit  : 0/0
 30267 ;;		Unchanged: 0/0
 30268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30270 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30272 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30273 ;;Total ram usage:        7 bytes
 30274 ;; Hardware stack levels used:    1
 30275 ;; Hardware stack levels required when called:   11
 30276 ;; This function calls:
 30277 ;;		Nothing
 30278 ;; This function is called by:
 30279 ;;		_LedBlinkStateMachine
 30280 ;;		_LedPulseStateMachine
 30281 ;;		_secondsAppTimer
 30282 ;;		_utoa
 30283 ;; This function uses a non-reentrant model
 30284 ;;
 30285                           
 30286                           	psect	text138
 30287  0054BE                     __ptext138:
 30288                           	opt stack 0
 30289  0054BE                     ___lwdiv:
 30290                           	opt stack 14
 30291                           
 30292                           ; BSR set to: 0
 30293                           ;incstack = 0
 30294  0054BE  0E00               	movlw	0
 30295  0054C0  0100               	movlb	0	; () banked
 30296  0054C2  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30297  0054C4  0E00               	movlw	0
 30298  0054C6  6F88               	movwf	___lwdiv@quotient& (0+255),b
 30299                           
 30300                           ; BSR set to: 0
 30301  0054C8  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30302  0054CA  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30303  0054CC  B4D8               	btfsc	status,2,c
 30304  0054CE  D01C               	goto	l3085
 30305                           
 30306                           ; BSR set to: 0
 30307  0054D0  0E01               	movlw	1
 30308  0054D2  6F87               	movwf	___lwdiv@counter& (0+255),b
 30309  0054D4  D004               	goto	l3080
 30310  0054D6                     
 30311                           ; BSR set to: 0
 30312                           
 30313                           ; BSR set to: 0
 30314  0054D6  90D8               	bcf	status,0,c
 30315  0054D8  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 30316  0054DA  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30317  0054DC  2B87               	incf	___lwdiv@counter& (0+255),f,b
 30318  0054DE                     l3080:
 30319                           
 30320                           ; BSR set to: 0
 30321                           
 30322                           ; BSR set to: 0
 30323  0054DE  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30324  0054E0  D7FA               	goto	l3081
 30325  0054E2                     u10870:
 30326                           
 30327                           ; BSR set to: 0
 30328                           
 30329                           ; BSR set to: 0
 30330                           
 30331                           ; BSR set to: 0
 30332  0054E2  90D8               	bcf	status,0,c
 30333  0054E4  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 30334  0054E6  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30335                           
 30336                           ; BSR set to: 0
 30337  0054E8  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30338  0054EA  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 30339  0054EC  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30340  0054EE  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30341  0054F0  A0D8               	btfss	status,0,c
 30342  0054F2  D005               	goto	l3084
 30343                           
 30344                           ; BSR set to: 0
 30345  0054F4  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30346  0054F6  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 30347  0054F8  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30348  0054FA  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30349                           
 30350                           ; BSR set to: 0
 30351  0054FC  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 30352  0054FE                     l3084:
 30353                           
 30354                           ; BSR set to: 0
 30355                           
 30356                           ; BSR set to: 0
 30357  0054FE  90D8               	bcf	status,0,c
 30358  005500  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30359  005502  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 30360                           
 30361                           ; BSR set to: 0
 30362  005504  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 30363  005506  D7ED               	goto	u10870
 30364  005508                     l3085:
 30365                           
 30366                           ; BSR set to: 0
 30367                           
 30368                           ; BSR set to: 0
 30369  005508  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 30370  00550C  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30371                           
 30372                           ; BSR set to: 0
 30373  005510  0012               	return		;funcret
 30374  005512                     __end_of___lwdiv:
 30375                           	opt stack 0
 30376                           tosu	equ	0xFFF
 30377                           tosh	equ	0xFFE
 30378                           tosl	equ	0xFFD
 30379                           pclath	equ	0xFFA
 30380                           tblptru	equ	0xFF8
 30381                           tblptrh	equ	0xFF7
 30382                           tblptrl	equ	0xFF6
 30383                           tablat	equ	0xFF5
 30384                           prodh	equ	0xFF4
 30385                           prodl	equ	0xFF3
 30386                           intcon	equ	0xFF2
 30387                           intcon2	equ	0xFF1
 30388                           intcon3	equ	0xFF0
 30389                           indf0	equ	0xFEF
 30390                           postinc0	equ	0xFEE
 30391                           plusw0	equ	0xFEB
 30392                           fsr0h	equ	0xFEA
 30393                           fsr0l	equ	0xFE9
 30394                           wreg	equ	0xFE8
 30395                           indf1	equ	0xFE7
 30396                           postinc1	equ	0xFE6
 30397                           postdec1	equ	0xFE5
 30398                           plusw1	equ	0xFE3
 30399                           fsr1h	equ	0xFE2
 30400                           fsr1l	equ	0xFE1
 30401                           indf2	equ	0xFDF
 30402                           postinc2	equ	0xFDE
 30403                           postdec2	equ	0xFDD
 30404                           plusw2	equ	0xFDB
 30405                           fsr2h	equ	0xFDA
 30406                           fsr2l	equ	0xFD9
 30407                           status	equ	0xFD8
 30408                           
 30409 ;; *************** function _OsAlrm_SetOsAlarm *****************
 30410 ;; Defined at:
 30411 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 30412 ;; Parameters:    Size  Location     Type
 30413 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 30414 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 30415 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 30416 ;;		 -> I2cDummyTx(1), 
 30417 ;; Auto vars:     Size  Location     Type
 30418 ;;		None
 30419 ;; Return value:  Size  Location     Type
 30420 ;;                  1    wreg      void 
 30421 ;; Registers used:
 30422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30423 ;; Tracked objects:
 30424 ;;		On entry : 0/0
 30425 ;;		On exit  : 0/0
 30426 ;;		Unchanged: 0/0
 30427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30428 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30431 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30432 ;;Total ram usage:        8 bytes
 30433 ;; Hardware stack levels used:    1
 30434 ;; Hardware stack levels required when called:   12
 30435 ;; This function calls:
 30436 ;;		___wmul
 30437 ;; This function is called by:
 30438 ;;		_I2cSlv_MainTask
 30439 ;; This function uses a non-reentrant model
 30440 ;;
 30441                           
 30442                           	psect	text139
 30443  003DE8                     __ptext139:
 30444                           	opt stack 0
 30445  003DE8                     _OsAlrm_SetOsAlarm:
 30446                           	opt stack 15
 30447                           
 30448                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 30449                           
 30450                           ; BSR set to: 0
 30451                           ;incstack = 0
 30452  003DE8  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30453  003DEC  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30454  003DF0  0E00               	movlw	0
 30455  003DF2  0100               	movlb	0	; () banked
 30456  003DF4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30457  003DF6  0E0B               	movlw	11
 30458  003DF8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30459  003DFA  EC35  F02F         	call	___wmul	;wreg free
 30460  003DFE  0E00               	movlw	low _OsAlarms
 30461  003E00  0100               	movlb	0	; () banked
 30462  003E02  257D               	addwf	?___wmul& (0+255),w,b
 30463  003E04  6ED9               	movwf	fsr2l,c
 30464  003E06  0E06               	movlw	high _OsAlarms
 30465  003E08  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30466  003E0A  6EDA               	movwf	fsr2h,c
 30467  003E0C  0E01               	movlw	1
 30468  003E0E  6EDF               	movwf	indf2,c
 30469                           
 30470                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 30471  003E10  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30472  003E14  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30473  003E18  0E00               	movlw	0
 30474  003E1A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30475  003E1C  0E0B               	movlw	11
 30476  003E1E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30477  003E20  EC35  F02F         	call	___wmul	;wreg free
 30478  003E24  0E01               	movlw	1
 30479  003E26  0100               	movlb	0	; () banked
 30480  003E28  277D               	addwf	?___wmul& (0+255),f,b
 30481  003E2A  0E00               	movlw	0
 30482  003E2C  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30483  003E2E  0E00               	movlw	low _OsAlarms
 30484  003E30  257D               	addwf	?___wmul& (0+255),w,b
 30485  003E32  6ED9               	movwf	fsr2l,c
 30486  003E34  0E06               	movlw	high _OsAlarms
 30487  003E36  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30488  003E38  6EDA               	movwf	fsr2h,c
 30489  003E3A  6ADE               	clrf	postinc2,c
 30490  003E3C  6ADE               	clrf	postinc2,c
 30491  003E3E  6ADE               	clrf	postinc2,c
 30492  003E40  6ADD               	clrf	postdec2,c
 30493                           
 30494                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 30495  003E42  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30496  003E46  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30497  003E4A  0E00               	movlw	0
 30498  003E4C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30499  003E4E  0E0B               	movlw	11
 30500  003E50  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30501  003E52  EC35  F02F         	call	___wmul	;wreg free
 30502  003E56  0E05               	movlw	5
 30503  003E58  0100               	movlb	0	; () banked
 30504  003E5A  277D               	addwf	?___wmul& (0+255),f,b
 30505  003E5C  0E00               	movlw	0
 30506  003E5E  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30507  003E60  0E00               	movlw	low _OsAlarms
 30508  003E62  257D               	addwf	?___wmul& (0+255),w,b
 30509  003E64  6ED9               	movwf	fsr2l,c
 30510  003E66  0E06               	movlw	high _OsAlarms
 30511  003E68  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30512  003E6A  6EDA               	movwf	fsr2h,c
 30513  003E6C  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 30514  003E70  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 30515  003E74  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 30516  003E78  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 30517                           
 30518                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 30519  003E7C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30520  003E80  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30521  003E84  0E00               	movlw	0
 30522  003E86  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30523  003E88  0E0B               	movlw	11
 30524  003E8A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30525  003E8C  EC35  F02F         	call	___wmul	;wreg free
 30526  003E90  0E09               	movlw	9
 30527  003E92  0100               	movlb	0	; () banked
 30528  003E94  277D               	addwf	?___wmul& (0+255),f,b
 30529  003E96  0E00               	movlw	0
 30530  003E98  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30531  003E9A  0E00               	movlw	low _OsAlarms
 30532  003E9C  257D               	addwf	?___wmul& (0+255),w,b
 30533  003E9E  6ED9               	movwf	fsr2l,c
 30534  003EA0  0E06               	movlw	high _OsAlarms
 30535  003EA2  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30536  003EA4  6EDA               	movwf	fsr2h,c
 30537  003EA6  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 30538  003EAA  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 30539                           
 30540                           ; BSR set to: 0
 30541  003EAE  0012               	return		;funcret
 30542  003EB0                     __end_of_OsAlrm_SetOsAlarm:
 30543                           	opt stack 0
 30544                           tosu	equ	0xFFF
 30545                           tosh	equ	0xFFE
 30546                           tosl	equ	0xFFD
 30547                           pclath	equ	0xFFA
 30548                           tblptru	equ	0xFF8
 30549                           tblptrh	equ	0xFF7
 30550                           tblptrl	equ	0xFF6
 30551                           tablat	equ	0xFF5
 30552                           prodh	equ	0xFF4
 30553                           prodl	equ	0xFF3
 30554                           intcon	equ	0xFF2
 30555                           intcon2	equ	0xFF1
 30556                           intcon3	equ	0xFF0
 30557                           indf0	equ	0xFEF
 30558                           postinc0	equ	0xFEE
 30559                           plusw0	equ	0xFEB
 30560                           fsr0h	equ	0xFEA
 30561                           fsr0l	equ	0xFE9
 30562                           wreg	equ	0xFE8
 30563                           indf1	equ	0xFE7
 30564                           postinc1	equ	0xFE6
 30565                           postdec1	equ	0xFE5
 30566                           plusw1	equ	0xFE3
 30567                           fsr1h	equ	0xFE2
 30568                           fsr1l	equ	0xFE1
 30569                           indf2	equ	0xFDF
 30570                           postinc2	equ	0xFDE
 30571                           postdec2	equ	0xFDD
 30572                           plusw2	equ	0xFDB
 30573                           fsr2h	equ	0xFDA
 30574                           fsr2l	equ	0xFD9
 30575                           status	equ	0xFD8
 30576                           
 30577 ;; *************** function ___wmul *****************
 30578 ;; Defined at:
 30579 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 30580 ;; Parameters:    Size  Location     Type
 30581 ;;  multiplier      2   29[BANK0 ] unsigned int 
 30582 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 30583 ;; Auto vars:     Size  Location     Type
 30584 ;;  product         2   33[BANK0 ] unsigned int 
 30585 ;; Return value:  Size  Location     Type
 30586 ;;                  2   29[BANK0 ] unsigned int 
 30587 ;; Registers used:
 30588 ;;		wreg, status,2, status,0, prodl, prodh
 30589 ;; Tracked objects:
 30590 ;;		On entry : 0/0
 30591 ;;		On exit  : 0/0
 30592 ;;		Unchanged: 0/0
 30593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30594 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30597 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30598 ;;Total ram usage:        6 bytes
 30599 ;; Hardware stack levels used:    1
 30600 ;; Hardware stack levels required when called:   11
 30601 ;; This function calls:
 30602 ;;		Nothing
 30603 ;; This function is called by:
 30604 ;;		_OsAlrm_SetOsAlarm
 30605 ;;		_secondsAppTimer
 30606 ;;		_atoi
 30607 ;; This function uses a non-reentrant model
 30608 ;;
 30609                           
 30610                           	psect	text140
 30611  005E6A                     __ptext140:
 30612                           	opt stack 0
 30613  005E6A                     ___wmul:
 30614                           	opt stack 13
 30615                           
 30616                           ; BSR set to: 0
 30617                           ;incstack = 0
 30618  005E6A  0100               	movlb	0	; () banked
 30619  005E6C  517D               	movf	___wmul@multiplier& (0+255),w,b
 30620  005E6E  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30621  005E70  CFF3 F081          	movff	prodl,___wmul@product
 30622  005E74  CFF4 F082          	movff	prodh,___wmul@product+1
 30623  005E78  517D               	movf	___wmul@multiplier& (0+255),w,b
 30624  005E7A  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 30625  005E7C  50F3               	movf	prodl,w,c
 30626  005E7E  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30627  005E80  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 30628  005E82  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30629  005E84  50F3               	movf	prodl,w,c
 30630  005E86  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30631                           
 30632                           ; BSR set to: 0
 30633  005E88  C081  F07D         	movff	___wmul@product,?___wmul
 30634  005E8C  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 30635  005E90  0012               	return	
 30636  005E92                     __end_of___wmul:
 30637                           	opt stack 0
 30638                           tosu	equ	0xFFF
 30639                           tosh	equ	0xFFE
 30640                           tosl	equ	0xFFD
 30641                           pclath	equ	0xFFA
 30642                           tblptru	equ	0xFF8
 30643                           tblptrh	equ	0xFF7
 30644                           tblptrl	equ	0xFF6
 30645                           tablat	equ	0xFF5
 30646                           prodh	equ	0xFF4
 30647                           prodl	equ	0xFF3
 30648                           intcon	equ	0xFF2
 30649                           intcon2	equ	0xFF1
 30650                           intcon3	equ	0xFF0
 30651                           indf0	equ	0xFEF
 30652                           postinc0	equ	0xFEE
 30653                           plusw0	equ	0xFEB
 30654                           fsr0h	equ	0xFEA
 30655                           fsr0l	equ	0xFE9
 30656                           wreg	equ	0xFE8
 30657                           indf1	equ	0xFE7
 30658                           postinc1	equ	0xFE6
 30659                           postdec1	equ	0xFE5
 30660                           plusw1	equ	0xFE3
 30661                           fsr1h	equ	0xFE2
 30662                           fsr1l	equ	0xFE1
 30663                           indf2	equ	0xFDF
 30664                           postinc2	equ	0xFDE
 30665                           postdec2	equ	0xFDD
 30666                           plusw2	equ	0xFDB
 30667                           fsr2h	equ	0xFDA
 30668                           fsr2l	equ	0xFD9
 30669                           status	equ	0xFD8
 30670                           
 30671 ;; *************** function _I2c_InitI2cModule *****************
 30672 ;; Defined at:
 30673 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30674 ;; Parameters:    Size  Location     Type
 30675 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 30676 ;;		 -> I2cConfig(10), 
 30677 ;; Auto vars:     Size  Location     Type
 30678 ;;		None
 30679 ;; Return value:  Size  Location     Type
 30680 ;;                  1    wreg      void 
 30681 ;; Registers used:
 30682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30683 ;; Tracked objects:
 30684 ;;		On entry : 0/0
 30685 ;;		On exit  : 0/0
 30686 ;;		Unchanged: 0/0
 30687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30688 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30690 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30691 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30692 ;;Total ram usage:        4 bytes
 30693 ;; Hardware stack levels used:    1
 30694 ;; Hardware stack levels required when called:   13
 30695 ;; This function calls:
 30696 ;;		_SetBaudRate
 30697 ;; This function is called by:
 30698 ;;		_I2cSlv_MainTask
 30699 ;; This function uses a non-reentrant model
 30700 ;;
 30701                           
 30702                           	psect	text141
 30703  004E0E                     __ptext141:
 30704                           	opt stack 0
 30705  004E0E                     _I2c_InitI2cModule:
 30706                           	opt stack 14
 30707                           
 30708                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 30709                           
 30710                           ; BSR set to: 0
 30711                           ;incstack = 0
 30712  004E0E  8295               	bsf	3989,1,c	;volatile
 30713                           
 30714                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 30715  004E10  8095               	bsf	3989,0,c	;volatile
 30716                           
 30717                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 30718  004E12  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 30719  004E16  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 30720  004E1A  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 30721  004E1E  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 30722  004E22  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 30723  004E26  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 30724  004E2A  0100               	movlb	0	; () banked
 30725  004E2C  EE20 F004          	lfsr	2,4
 30726  004E30  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30727  004E32  26D9               	addwf	fsr2l,f,c
 30728  004E34  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30729  004E36  22DA               	addwfc	fsr2h,f,c
 30730  004E38  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 30731  004E3C  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 30732  004E40  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 30733  004E44  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 30734  004E48  EC51  F02B         	call	_SetBaudRate	;wreg free
 30735                           
 30736                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 30737  004E4C  0100               	movlb	0	; () banked
 30738  004E4E  EE20 F008          	lfsr	2,8
 30739  004E52  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30740  004E54  26D9               	addwf	fsr2l,f,c
 30741  004E56  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30742  004E58  22DA               	addwfc	fsr2h,f,c
 30743  004E5A  50DF               	movf	indf2,w,c
 30744  004E5C  1272               	iorwf	3954,f,c	;volatile
 30745                           
 30746                           ; BSR set to: 0
 30747                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 30748  004E5E  EE20 F009          	lfsr	2,9
 30749  004E62  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30750  004E64  26D9               	addwf	fsr2l,f,c
 30751  004E66  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30752  004E68  22DA               	addwfc	fsr2h,f,c
 30753  004E6A  50DF               	movf	indf2,w,c
 30754  004E6C  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 30755  004E6E  0E05               	movlw	5
 30756  004E70  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 30757  004E72                     u13195:
 30758  004E72  90D8               	bcf	status,0,c
 30759  004E74  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 30760  004E76  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 30761  004E78  D7FC               	goto	u13195
 30762  004E7A  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 30763  004E7C  1272               	iorwf	3954,f,c	;volatile
 30764                           
 30765                           ; BSR set to: 0
 30766  004E7E  0012               	return		;funcret
 30767  004E80                     __end_of_I2c_InitI2cModule:
 30768                           	opt stack 0
 30769                           tosu	equ	0xFFF
 30770                           tosh	equ	0xFFE
 30771                           tosl	equ	0xFFD
 30772                           pclath	equ	0xFFA
 30773                           tblptru	equ	0xFF8
 30774                           tblptrh	equ	0xFF7
 30775                           tblptrl	equ	0xFF6
 30776                           tablat	equ	0xFF5
 30777                           prodh	equ	0xFF4
 30778                           prodl	equ	0xFF3
 30779                           intcon	equ	0xFF2
 30780                           intcon2	equ	0xFF1
 30781                           intcon3	equ	0xFF0
 30782                           indf0	equ	0xFEF
 30783                           postinc0	equ	0xFEE
 30784                           plusw0	equ	0xFEB
 30785                           fsr0h	equ	0xFEA
 30786                           fsr0l	equ	0xFE9
 30787                           wreg	equ	0xFE8
 30788                           indf1	equ	0xFE7
 30789                           postinc1	equ	0xFE6
 30790                           postdec1	equ	0xFE5
 30791                           plusw1	equ	0xFE3
 30792                           fsr1h	equ	0xFE2
 30793                           fsr1l	equ	0xFE1
 30794                           indf2	equ	0xFDF
 30795                           postinc2	equ	0xFDE
 30796                           postdec2	equ	0xFDD
 30797                           plusw2	equ	0xFDB
 30798                           fsr2h	equ	0xFDA
 30799                           fsr2l	equ	0xFD9
 30800                           status	equ	0xFD8
 30801                           
 30802 ;; *************** function _SetBaudRate *****************
 30803 ;; Defined at:
 30804 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30805 ;; Parameters:    Size  Location     Type
 30806 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 30807 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 30808 ;; Auto vars:     Size  Location     Type
 30809 ;;		None
 30810 ;; Return value:  Size  Location     Type
 30811 ;;                  1    wreg      void 
 30812 ;; Registers used:
 30813 ;;		wreg, status,2, status,0, cstack
 30814 ;; Tracked objects:
 30815 ;;		On entry : 0/0
 30816 ;;		On exit  : 0/0
 30817 ;;		Unchanged: 0/0
 30818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30819 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30821 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30822 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30823 ;;Total ram usage:       12 bytes
 30824 ;; Hardware stack levels used:    1
 30825 ;; Hardware stack levels required when called:   12
 30826 ;; This function calls:
 30827 ;;		___lldiv
 30828 ;; This function is called by:
 30829 ;;		_I2c_InitI2cModule
 30830 ;; This function uses a non-reentrant model
 30831 ;;
 30832                           
 30833                           	psect	text142
 30834  0056A2                     __ptext142:
 30835                           	opt stack 0
 30836  0056A2                     _SetBaudRate:
 30837                           	opt stack 14
 30838                           
 30839                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 30840                           
 30841                           ; BSR set to: 0
 30842                           ;incstack = 0
 30843  0056A2  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 30844  0056A6  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 30845  0056AA  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 30846  0056AE  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 30847  0056B2  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 30848  0056B6  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 30849  0056BA  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 30850  0056BE  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 30851  0056C2  0E02               	movlw	2
 30852  0056C4                     u12145:
 30853  0056C4  90D8               	bcf	status,0,c
 30854  0056C6  0100               	movlb	0	; () banked
 30855  0056C8  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 30856  0056CA  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 30857  0056CC  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 30858  0056CE  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 30859  0056D0  2EE8               	decfsz	wreg,f,c
 30860  0056D2  D7F8               	goto	u12145
 30861  0056D4  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 30862  0056D8  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 30863  0056DC  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 30864  0056E0  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 30865  0056E4  EC4B  F026         	call	___lldiv	;wreg free
 30866  0056E8  0100               	movlb	0	; () banked
 30867  0056EA  0589               	decf	?___lldiv& (0+255),w,b
 30868  0056EC  6E74               	movwf	3956,c	;volatile
 30869                           
 30870                           ; BSR set to: 0
 30871  0056EE  0012               	return		;funcret
 30872  0056F0                     __end_of_SetBaudRate:
 30873                           	opt stack 0
 30874                           tosu	equ	0xFFF
 30875                           tosh	equ	0xFFE
 30876                           tosl	equ	0xFFD
 30877                           pclath	equ	0xFFA
 30878                           tblptru	equ	0xFF8
 30879                           tblptrh	equ	0xFF7
 30880                           tblptrl	equ	0xFF6
 30881                           tablat	equ	0xFF5
 30882                           prodh	equ	0xFF4
 30883                           prodl	equ	0xFF3
 30884                           intcon	equ	0xFF2
 30885                           intcon2	equ	0xFF1
 30886                           intcon3	equ	0xFF0
 30887                           indf0	equ	0xFEF
 30888                           postinc0	equ	0xFEE
 30889                           plusw0	equ	0xFEB
 30890                           fsr0h	equ	0xFEA
 30891                           fsr0l	equ	0xFE9
 30892                           wreg	equ	0xFE8
 30893                           indf1	equ	0xFE7
 30894                           postinc1	equ	0xFE6
 30895                           postdec1	equ	0xFE5
 30896                           plusw1	equ	0xFE3
 30897                           fsr1h	equ	0xFE2
 30898                           fsr1l	equ	0xFE1
 30899                           indf2	equ	0xFDF
 30900                           postinc2	equ	0xFDE
 30901                           postdec2	equ	0xFDD
 30902                           plusw2	equ	0xFDB
 30903                           fsr2h	equ	0xFDA
 30904                           fsr2l	equ	0xFD9
 30905                           status	equ	0xFD8
 30906                           
 30907 ;; *************** function ___lldiv *****************
 30908 ;; Defined at:
 30909 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 30910 ;; Parameters:    Size  Location     Type
 30911 ;;  dividend        4   41[BANK0 ] unsigned long 
 30912 ;;  divisor         4   45[BANK0 ] unsigned long 
 30913 ;; Auto vars:     Size  Location     Type
 30914 ;;  quotient        4   49[BANK0 ] unsigned long 
 30915 ;;  counter         1   53[BANK0 ] unsigned char 
 30916 ;; Return value:  Size  Location     Type
 30917 ;;                  4   41[BANK0 ] unsigned long 
 30918 ;; Registers used:
 30919 ;;		wreg, status,2, status,0
 30920 ;; Tracked objects:
 30921 ;;		On entry : 0/0
 30922 ;;		On exit  : 0/0
 30923 ;;		Unchanged: 0/0
 30924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30925 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30926 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30928 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30929 ;;Total ram usage:       13 bytes
 30930 ;; Hardware stack levels used:    1
 30931 ;; Hardware stack levels required when called:   11
 30932 ;; This function calls:
 30933 ;;		Nothing
 30934 ;; This function is called by:
 30935 ;;		_SetBaudRate
 30936 ;;		_Tmr_TmrBPrSet
 30937 ;;		_SetUartBaudRate
 30938 ;; This function uses a non-reentrant model
 30939 ;;
 30940                           
 30941                           	psect	text143
 30942  004C96                     __ptext143:
 30943                           	opt stack 0
 30944  004C96                     ___lldiv:
 30945                           	opt stack 15
 30946                           
 30947                           ; BSR set to: 0
 30948                           ;incstack = 0
 30949  004C96  0E00               	movlw	0
 30950  004C98  0100               	movlb	0	; () banked
 30951  004C9A  6F91               	movwf	___lldiv@quotient& (0+255),b
 30952  004C9C  0E00               	movlw	0
 30953  004C9E  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 30954  004CA0  0E00               	movlw	0
 30955  004CA2  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 30956  004CA4  0E00               	movlw	0
 30957  004CA6  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 30958                           
 30959                           ; BSR set to: 0
 30960  004CA8  518D               	movf	___lldiv@divisor& (0+255),w,b
 30961  004CAA  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30962  004CAC  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30963  004CAE  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30964  004CB0  B4D8               	btfsc	status,2,c
 30965  004CB2  D02A               	goto	l3032
 30966                           
 30967                           ; BSR set to: 0
 30968  004CB4  0E01               	movlw	1
 30969  004CB6  6F95               	movwf	___lldiv@counter& (0+255),b
 30970  004CB8  D006               	goto	l3027
 30971  004CBA                     
 30972                           ; BSR set to: 0
 30973                           
 30974                           ; BSR set to: 0
 30975  004CBA  90D8               	bcf	status,0,c
 30976  004CBC  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 30977  004CBE  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30978  004CC0  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30979  004CC2  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30980  004CC4  2B95               	incf	___lldiv@counter& (0+255),f,b
 30981  004CC6                     l3027:
 30982                           
 30983                           ; BSR set to: 0
 30984                           
 30985                           ; BSR set to: 0
 30986  004CC6  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30987  004CC8  D7F8               	goto	l3028
 30988  004CCA                     u11240:
 30989                           
 30990                           ; BSR set to: 0
 30991                           
 30992                           ; BSR set to: 0
 30993                           
 30994                           ; BSR set to: 0
 30995  004CCA  90D8               	bcf	status,0,c
 30996  004CCC  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 30997  004CCE  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30998  004CD0  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30999  004CD2  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 31000                           
 31001                           ; BSR set to: 0
 31002  004CD4  518D               	movf	___lldiv@divisor& (0+255),w,b
 31003  004CD6  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 31004  004CD8  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 31005  004CDA  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 31006  004CDC  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 31007  004CDE  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 31008  004CE0  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 31009  004CE2  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 31010  004CE4  A0D8               	btfss	status,0,c
 31011  004CE6  D009               	goto	l3031
 31012                           
 31013                           ; BSR set to: 0
 31014  004CE8  518D               	movf	___lldiv@divisor& (0+255),w,b
 31015  004CEA  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 31016  004CEC  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 31017  004CEE  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 31018  004CF0  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 31019  004CF2  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 31020  004CF4  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 31021  004CF6  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 31022                           
 31023                           ; BSR set to: 0
 31024  004CF8  8191               	bsf	___lldiv@quotient& (0+255),0,b
 31025  004CFA                     l3031:
 31026                           
 31027                           ; BSR set to: 0
 31028                           
 31029                           ; BSR set to: 0
 31030  004CFA  90D8               	bcf	status,0,c
 31031  004CFC  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 31032  004CFE  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 31033  004D00  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 31034  004D02  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 31035                           
 31036                           ; BSR set to: 0
 31037  004D04  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 31038  004D06  D7E1               	goto	u11240
 31039  004D08                     l3032:
 31040                           
 31041                           ; BSR set to: 0
 31042                           
 31043                           ; BSR set to: 0
 31044  004D08  C091  F089         	movff	___lldiv@quotient,?___lldiv
 31045  004D0C  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 31046  004D10  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 31047  004D14  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 31048                           
 31049                           ; BSR set to: 0
 31050  004D18  0012               	return		;funcret
 31051  004D1A                     __end_of___lldiv:
 31052                           	opt stack 0
 31053                           tosu	equ	0xFFF
 31054                           tosh	equ	0xFFE
 31055                           tosl	equ	0xFFD
 31056                           pclath	equ	0xFFA
 31057                           tblptru	equ	0xFF8
 31058                           tblptrh	equ	0xFF7
 31059                           tblptrl	equ	0xFF6
 31060                           tablat	equ	0xFF5
 31061                           prodh	equ	0xFF4
 31062                           prodl	equ	0xFF3
 31063                           intcon	equ	0xFF2
 31064                           intcon2	equ	0xFF1
 31065                           intcon3	equ	0xFF0
 31066                           indf0	equ	0xFEF
 31067                           postinc0	equ	0xFEE
 31068                           plusw0	equ	0xFEB
 31069                           fsr0h	equ	0xFEA
 31070                           fsr0l	equ	0xFE9
 31071                           wreg	equ	0xFE8
 31072                           indf1	equ	0xFE7
 31073                           postinc1	equ	0xFE6
 31074                           postdec1	equ	0xFE5
 31075                           plusw1	equ	0xFE3
 31076                           fsr1h	equ	0xFE2
 31077                           fsr1l	equ	0xFE1
 31078                           indf2	equ	0xFDF
 31079                           postinc2	equ	0xFDE
 31080                           postdec2	equ	0xFDD
 31081                           plusw2	equ	0xFDB
 31082                           fsr2h	equ	0xFDA
 31083                           fsr2l	equ	0xFD9
 31084                           status	equ	0xFD8
 31085                           
 31086 ;; *************** function _I2cSetConfig *****************
 31087 ;; Defined at:
 31088 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31089 ;; Parameters:    Size  Location     Type
 31090 ;;		None
 31091 ;; Auto vars:     Size  Location     Type
 31092 ;;		None
 31093 ;; Return value:  Size  Location     Type
 31094 ;;                  1    wreg      void 
 31095 ;; Registers used:
 31096 ;;		wreg, status,2
 31097 ;; Tracked objects:
 31098 ;;		On entry : 0/0
 31099 ;;		On exit  : 0/0
 31100 ;;		Unchanged: 0/0
 31101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31106 ;;Total ram usage:        0 bytes
 31107 ;; Hardware stack levels used:    1
 31108 ;; Hardware stack levels required when called:   11
 31109 ;; This function calls:
 31110 ;;		Nothing
 31111 ;; This function is called by:
 31112 ;;		_I2cSlv_MainTask
 31113 ;; This function uses a non-reentrant model
 31114 ;;
 31115                           
 31116                           	psect	text144
 31117  005DEA                     __ptext144:
 31118                           	opt stack 0
 31119  005DEA                     _I2cSetConfig:
 31120                           	opt stack 16
 31121                           
 31122                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 31123                           
 31124                           ; BSR set to: 0
 31125                           ;incstack = 0
 31126  005DEA  0E80               	movlw	128
 31127  005DEC  0103               	movlb	3	; () banked
 31128  005DEE  6F52               	movwf	_I2cConfig& (0+255),b
 31129  005DF0  0E1A               	movlw	26
 31130  005DF2  6F53               	movwf	(_I2cConfig+1)& (0+255),b
 31131  005DF4  0E06               	movlw	6
 31132  005DF6  6F54               	movwf	(_I2cConfig+2)& (0+255),b
 31133  005DF8  0E00               	movlw	0
 31134  005DFA  6F55               	movwf	(_I2cConfig+3)& (0+255),b
 31135                           
 31136                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 31137  005DFC  0E00               	movlw	0
 31138  005DFE  6F56               	movwf	(_I2cConfig+4)& (0+255),b
 31139  005E00  0E6C               	movlw	108
 31140  005E02  6F57               	movwf	(_I2cConfig+5)& (0+255),b
 31141  005E04  0EDC               	movlw	220
 31142  005E06  6F58               	movwf	(_I2cConfig+6)& (0+255),b
 31143  005E08  0E02               	movlw	2
 31144  005E0A  6F59               	movwf	(_I2cConfig+7)& (0+255),b
 31145                           
 31146                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 31147  005E0C  0E08               	movlw	8
 31148  005E0E  6F5A               	movwf	(_I2cConfig+8)& (0+255),b
 31149                           
 31150                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 31151  005E10  0E01               	movlw	1
 31152  005E12  6F5B               	movwf	(_I2cConfig+9)& (0+255),b
 31153                           
 31154                           ; BSR set to: 3
 31155  005E14  0012               	return		;funcret
 31156  005E16                     __end_of_I2cSetConfig:
 31157                           	opt stack 0
 31158                           tosu	equ	0xFFF
 31159                           tosh	equ	0xFFE
 31160                           tosl	equ	0xFFD
 31161                           pclath	equ	0xFFA
 31162                           tblptru	equ	0xFF8
 31163                           tblptrh	equ	0xFF7
 31164                           tblptrl	equ	0xFF6
 31165                           tablat	equ	0xFF5
 31166                           prodh	equ	0xFF4
 31167                           prodl	equ	0xFF3
 31168                           intcon	equ	0xFF2
 31169                           intcon2	equ	0xFF1
 31170                           intcon3	equ	0xFF0
 31171                           indf0	equ	0xFEF
 31172                           postinc0	equ	0xFEE
 31173                           plusw0	equ	0xFEB
 31174                           fsr0h	equ	0xFEA
 31175                           fsr0l	equ	0xFE9
 31176                           wreg	equ	0xFE8
 31177                           indf1	equ	0xFE7
 31178                           postinc1	equ	0xFE6
 31179                           postdec1	equ	0xFE5
 31180                           plusw1	equ	0xFE3
 31181                           fsr1h	equ	0xFE2
 31182                           fsr1l	equ	0xFE1
 31183                           indf2	equ	0xFDF
 31184                           postinc2	equ	0xFDE
 31185                           postdec2	equ	0xFDD
 31186                           plusw2	equ	0xFDB
 31187                           fsr2h	equ	0xFDA
 31188                           fsr2l	equ	0xFD9
 31189                           status	equ	0xFD8
 31190                           
 31191 ;; *************** function _I2cSendMsgSm *****************
 31192 ;; Defined at:
 31193 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31194 ;; Parameters:    Size  Location     Type
 31195 ;;		None
 31196 ;; Auto vars:     Size  Location     Type
 31197 ;;		None
 31198 ;; Return value:  Size  Location     Type
 31199 ;;                  1    wreg      void 
 31200 ;; Registers used:
 31201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31202 ;; Tracked objects:
 31203 ;;		On entry : 0/0
 31204 ;;		On exit  : 0/0
 31205 ;;		Unchanged: 0/0
 31206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31211 ;;Total ram usage:        0 bytes
 31212 ;; Hardware stack levels used:    1
 31213 ;; Hardware stack levels required when called:   13
 31214 ;; This function calls:
 31215 ;;		_I2c_ReadData
 31216 ;;		_I2c_WriteData
 31217 ;;		_ReceiveEvt
 31218 ;; This function is called by:
 31219 ;;		_I2cSlv_MainTask
 31220 ;; This function uses a non-reentrant model
 31221 ;;
 31222                           
 31223                           	psect	text145
 31224  003EB0                     __ptext145:
 31225                           	opt stack 0
 31226  003EB0                     _I2cSendMsgSm:
 31227                           	opt stack 14
 31228                           
 31229                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 31230                           ;i2c_slv.c: 122: switch(I2cComState)
 31231                           
 31232                           ; BSR set to: 3
 31233                           ;incstack = 0
 31234  003EB0  D04F               	goto	l1379
 31235  003EB2                     
 31236                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 31237  003EB2  0ED8               	movlw	low _I2cWriteDataEvt
 31238  003EB4  0100               	movlb	0	; () banked
 31239  003EB6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31240  003EB8  0E00               	movlw	high _I2cWriteDataEvt
 31241  003EBA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31242  003EBC  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 31243  003EC0  0900               	iorlw	0
 31244  003EC2  B4D8               	btfsc	status,2,c
 31245  003EC4  D007               	goto	l1381
 31246                           
 31247                           ;i2c_slv.c: 127: {
 31248                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 31249  003EC6  0E01               	movlw	1
 31250  003EC8  0101               	movlb	1	; () banked
 31251  003ECA  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31252                           
 31253                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 31254  003ECC  0E01               	movlw	1
 31255  003ECE  0100               	movlb	0	; () banked
 31256  003ED0  6FCE               	movwf	_I2cComSts& (0+255),b
 31257                           
 31258                           ;i2c_slv.c: 132: }
 31259  003ED2  0012               	return	
 31260  003ED4                     l1381:
 31261                           
 31262                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 31263                           
 31264                           ; BSR set to: 0
 31265  003ED4  0ED7               	movlw	low _I2cReadDataEvt
 31266  003ED6  0100               	movlb	0	; () banked
 31267  003ED8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31268  003EDA  0E00               	movlw	high _I2cReadDataEvt
 31269  003EDC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31270  003EDE  ECDE  F02E         	call	_ReceiveEvt	;wreg free
 31271  003EE2  0900               	iorlw	0
 31272  003EE4  B4D8               	btfsc	status,2,c
 31273  003EE6  D007               	goto	l1383
 31274                           
 31275                           ;i2c_slv.c: 134: {
 31276                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 31277  003EE8  0E02               	movlw	2
 31278  003EEA  0101               	movlb	1	; () banked
 31279  003EEC  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31280                           
 31281                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 31282  003EEE  0E02               	movlw	2
 31283  003EF0  0100               	movlb	0	; () banked
 31284  003EF2  6FCE               	movwf	_I2cComSts& (0+255),b
 31285                           
 31286                           ;i2c_slv.c: 139: }
 31287  003EF4  0012               	return	
 31288  003EF6                     l1383:
 31289                           
 31290                           ;i2c_slv.c: 140: else
 31291                           ;i2c_slv.c: 141: {
 31292                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 31293                           
 31294                           ; BSR set to: 0
 31295  003EF6  0E00               	movlw	0
 31296  003EF8  0100               	movlb	0	; () banked
 31297  003EFA  6FCE               	movwf	_I2cComSts& (0+255),b
 31298                           
 31299                           ; BSR set to: 0
 31300                           ;i2c_slv.c: 144: }
 31301                           ;i2c_slv.c: 145: break;
 31302                           
 31303                           ; BSR set to: 0
 31304  003EFC  0012               	return	
 31305  003EFE                     
 31306                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 31307                           
 31308                           ; BSR set to: 0
 31309  003EFE  0E9E               	movlw	low _I2cTxPacket
 31310  003F00  0100               	movlb	0	; () banked
 31311  003F02  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 31312  003F04  0E03               	movlw	high _I2cTxPacket
 31313  003F06  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 31314  003F08  EC5D  F00F         	call	_I2c_WriteData	;wreg free
 31315  003F0C  0900               	iorlw	0
 31316  003F0E  B4D8               	btfsc	status,2,c
 31317  003F10  0012               	return	
 31318                           
 31319                           ;i2c_slv.c: 150: {
 31320                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 31321  003F12  0E03               	movlw	3
 31322  003F14  0101               	movlb	1	; () banked
 31323  003F16  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31324                           
 31325                           ; BSR set to: 1
 31326                           ;i2c_slv.c: 153: }
 31327                           ;i2c_slv.c: 154: break;
 31328  003F18  0012               	return	
 31329  003F1A                     
 31330                           ; BSR set to: 1
 31331                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 31332                           
 31333                           ; BSR set to: 1
 31334  003F1A  0E98               	movlw	low _I2cRxPacket
 31335  003F1C  0100               	movlb	0	; () banked
 31336  003F1E  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 31337  003F20  0E03               	movlw	high _I2cRxPacket
 31338  003F22  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 31339  003F24  EC14  F010         	call	_I2c_ReadData	;wreg free
 31340  003F28  0900               	iorlw	0
 31341  003F2A  B4D8               	btfsc	status,2,c
 31342  003F2C  0012               	return	
 31343                           
 31344                           ;i2c_slv.c: 159: {
 31345                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 31346  003F2E  0E04               	movlw	4
 31347  003F30  0101               	movlb	1	; () banked
 31348  003F32  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31349                           
 31350                           ; BSR set to: 1
 31351                           ;i2c_slv.c: 162: }
 31352                           ;i2c_slv.c: 164: break;
 31353  003F34  0012               	return	
 31354  003F36                     
 31355                           ; BSR set to: 1
 31356                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 31357                           
 31358                           ; BSR set to: 1
 31359  003F36  0E00               	movlw	0
 31360  003F38  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31361                           
 31362                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 31363  003F3A  0E00               	movlw	0
 31364  003F3C  0100               	movlb	0	; () banked
 31365  003F3E  6FCE               	movwf	_I2cComSts& (0+255),b
 31366                           
 31367                           ;i2c_slv.c: 171: break;
 31368  003F40  0012               	return	
 31369  003F42                     
 31370                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 31371                           
 31372                           ; BSR set to: 0
 31373  003F42  0E00               	movlw	0
 31374  003F44  0101               	movlb	1	; () banked
 31375  003F46  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31376                           
 31377                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 31378  003F48  0E00               	movlw	0
 31379  003F4A  0100               	movlb	0	; () banked
 31380  003F4C  6FCE               	movwf	_I2cComSts& (0+255),b
 31381                           
 31382                           ; BSR set to: 0
 31383                           ;i2c_slv.c: 182: }
 31384                           
 31385                           ; BSR set to: 0
 31386                           ;i2c_slv.c: 181: break;
 31387                           
 31388                           ;i2c_slv.c: 180: default:
 31389                           
 31390                           ;i2c_slv.c: 178: break;
 31391  003F4E  0012               	return	
 31392  003F50                     l1379:
 31393                           
 31394                           ; BSR set to: 0
 31395  003F50  0101               	movlb	1	; () banked
 31396  003F52  51E9               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 31397                           
 31398                           ; Switch size 1, requested type "space"
 31399                           ; Number of cases is 5, Range of values is 0 to 4
 31400                           ; switch strategies available:
 31401                           ; Name         Instructions Cycles
 31402                           ; simple_byte           16     9 (average)
 31403                           ;	Chosen strategy is simple_byte
 31404  003F54  0A00               	xorlw	0	; case 0
 31405  003F56  B4D8               	btfsc	status,2,c
 31406  003F58  D7AC               	goto	l1380
 31407  003F5A  0A01               	xorlw	1	; case 1
 31408  003F5C  B4D8               	btfsc	status,2,c
 31409  003F5E  D7CF               	goto	l1386
 31410  003F60  0A03               	xorlw	3	; case 2
 31411  003F62  B4D8               	btfsc	status,2,c
 31412  003F64  D7DA               	goto	l1388
 31413  003F66  0A01               	xorlw	1	; case 3
 31414  003F68  B4D8               	btfsc	status,2,c
 31415  003F6A  D7E5               	goto	l1390
 31416  003F6C  0A07               	xorlw	7	; case 4
 31417  003F6E  A4D8               	btfss	status,2,c
 31418  003F70  0012               	return	
 31419  003F72  D7E7               	goto	l1391
 31420  003F74                     __end_of_I2cSendMsgSm:
 31421                           	opt stack 0
 31422                           tosu	equ	0xFFF
 31423                           tosh	equ	0xFFE
 31424                           tosl	equ	0xFFD
 31425                           pclath	equ	0xFFA
 31426                           tblptru	equ	0xFF8
 31427                           tblptrh	equ	0xFF7
 31428                           tblptrl	equ	0xFF6
 31429                           tablat	equ	0xFF5
 31430                           prodh	equ	0xFF4
 31431                           prodl	equ	0xFF3
 31432                           intcon	equ	0xFF2
 31433                           intcon2	equ	0xFF1
 31434                           intcon3	equ	0xFF0
 31435                           indf0	equ	0xFEF
 31436                           postinc0	equ	0xFEE
 31437                           plusw0	equ	0xFEB
 31438                           fsr0h	equ	0xFEA
 31439                           fsr0l	equ	0xFE9
 31440                           wreg	equ	0xFE8
 31441                           indf1	equ	0xFE7
 31442                           postinc1	equ	0xFE6
 31443                           postdec1	equ	0xFE5
 31444                           plusw1	equ	0xFE3
 31445                           fsr1h	equ	0xFE2
 31446                           fsr1l	equ	0xFE1
 31447                           indf2	equ	0xFDF
 31448                           postinc2	equ	0xFDE
 31449                           postdec2	equ	0xFDD
 31450                           plusw2	equ	0xFDB
 31451                           fsr2h	equ	0xFDA
 31452                           fsr2l	equ	0xFD9
 31453                           status	equ	0xFD8
 31454                           
 31455 ;; *************** function _ReceiveEvt *****************
 31456 ;; Defined at:
 31457 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31458 ;; Parameters:    Size  Location     Type
 31459 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31460 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 31461 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 31462 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 31463 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 31464 ;;		 -> ActivateRiDetection(1), 
 31465 ;; Auto vars:     Size  Location     Type
 31466 ;;  EventStatus     1   32[BANK0 ] enum E7727
 31467 ;; Return value:  Size  Location     Type
 31468 ;;                  1    wreg      enum E7699
 31469 ;; Registers used:
 31470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31471 ;; Tracked objects:
 31472 ;;		On entry : 0/0
 31473 ;;		On exit  : 0/0
 31474 ;;		Unchanged: 0/0
 31475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31476 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31477 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31479 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31480 ;;Total ram usage:        4 bytes
 31481 ;; Hardware stack levels used:    1
 31482 ;; Hardware stack levels required when called:   11
 31483 ;; This function calls:
 31484 ;;		Nothing
 31485 ;; This function is called by:
 31486 ;;		_MdmCntSm
 31487 ;;		_CheckModem
 31488 ;;		_ModemEvtParser
 31489 ;;		_GetSmsSm
 31490 ;;		_SendSmsSm
 31491 ;;		_Mdm_IsSmsReceived
 31492 ;;		_Mdm_IsRinging
 31493 ;;		_GetCallerNumber
 31494 ;;		_InitGprsNetwork
 31495 ;;		_HttpGetMethod
 31496 ;;		_I2cSendMsgSm
 31497 ;;		_I2cSlv_I2cReadMsgSts
 31498 ;;		_RiSm
 31499 ;;		_Mdm_GetSmsData
 31500 ;;		_GsmGprsTerminal
 31501 ;; This function uses a non-reentrant model
 31502 ;;
 31503                           
 31504                           	psect	text146
 31505  005DBC                     __ptext146:
 31506                           	opt stack 0
 31507  005DBC                     _ReceiveEvt:
 31508                           	opt stack 13
 31509                           
 31510                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 31511                           
 31512                           ;incstack = 0
 31513  005DBC  0E00               	movlw	0
 31514  005DBE  0100               	movlb	0	; () banked
 31515  005DC0  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31516                           
 31517                           ; BSR set to: 0
 31518                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 31519  005DC2  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31520  005DC6  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31521  005DCA  0E02               	movlw	2
 31522  005DCC  18DE               	xorwf	postinc2,w,c
 31523  005DCE  A4D8               	btfss	status,2,c
 31524  005DD0  D008               	goto	l832
 31525                           
 31526                           ; BSR set to: 0
 31527                           ;os_ser.c: 106: {
 31528                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 31529  005DD2  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31530  005DD6  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31531  005DDA  0E01               	movlw	1
 31532  005DDC  6EDF               	movwf	indf2,c
 31533                           
 31534                           ; BSR set to: 0
 31535                           ;os_ser.c: 110: EventStatus = EventReceived;
 31536  005DDE  0E01               	movlw	1
 31537  005DE0  D001               	goto	L54
 31538  005DE2                     l832:
 31539                           
 31540                           ; BSR set to: 0
 31541                           ;os_ser.c: 112: else
 31542                           ;os_ser.c: 113: {
 31543                           ;os_ser.c: 115: EventStatus = EventIdle;
 31544                           
 31545                           ; BSR set to: 0
 31546  005DE2  0E00               	movlw	0
 31547  005DE4                     L54:
 31548  005DE4  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31549                           
 31550                           ; BSR set to: 0
 31551                           ;os_ser.c: 116: }
 31552                           ;os_ser.c: 119: return(EventStatus);
 31553  005DE6  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 31554  005DE8  0012               	return	
 31555  005DEA                     __end_of_ReceiveEvt:
 31556                           	opt stack 0
 31557                           tosu	equ	0xFFF
 31558                           tosh	equ	0xFFE
 31559                           tosl	equ	0xFFD
 31560                           pclath	equ	0xFFA
 31561                           tblptru	equ	0xFF8
 31562                           tblptrh	equ	0xFF7
 31563                           tblptrl	equ	0xFF6
 31564                           tablat	equ	0xFF5
 31565                           prodh	equ	0xFF4
 31566                           prodl	equ	0xFF3
 31567                           intcon	equ	0xFF2
 31568                           intcon2	equ	0xFF1
 31569                           intcon3	equ	0xFF0
 31570                           indf0	equ	0xFEF
 31571                           postinc0	equ	0xFEE
 31572                           plusw0	equ	0xFEB
 31573                           fsr0h	equ	0xFEA
 31574                           fsr0l	equ	0xFE9
 31575                           wreg	equ	0xFE8
 31576                           indf1	equ	0xFE7
 31577                           postinc1	equ	0xFE6
 31578                           postdec1	equ	0xFE5
 31579                           plusw1	equ	0xFE3
 31580                           fsr1h	equ	0xFE2
 31581                           fsr1l	equ	0xFE1
 31582                           indf2	equ	0xFDF
 31583                           postinc2	equ	0xFDE
 31584                           postdec2	equ	0xFDD
 31585                           plusw2	equ	0xFDB
 31586                           fsr2h	equ	0xFDA
 31587                           fsr2l	equ	0xFD9
 31588                           status	equ	0xFD8
 31589                           
 31590 ;; *************** function _I2c_WriteData *****************
 31591 ;; Defined at:
 31592 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31593 ;; Parameters:    Size  Location     Type
 31594 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 31595 ;;		 -> I2cTxPacket(5), 
 31596 ;; Auto vars:     Size  Location     Type
 31597 ;;		None
 31598 ;; Return value:  Size  Location     Type
 31599 ;;                  1    wreg      enum E7740
 31600 ;; Registers used:
 31601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31602 ;; Tracked objects:
 31603 ;;		On entry : 0/0
 31604 ;;		On exit  : 0/0
 31605 ;;		Unchanged: 0/0
 31606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31607 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31610 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31611 ;;Total ram usage:        4 bytes
 31612 ;; Hardware stack levels used:    1
 31613 ;; Hardware stack levels required when called:   12
 31614 ;; This function calls:
 31615 ;;		_CheckAckStatus
 31616 ;;		_CheckTxStatus
 31617 ;;		_StartCondition
 31618 ;;		_StopCondition
 31619 ;;		_WriteByte
 31620 ;; This function is called by:
 31621 ;;		_I2cSendMsgSm
 31622 ;; This function uses a non-reentrant model
 31623 ;;
 31624                           
 31625                           	psect	text147
 31626  001EBA                     __ptext147:
 31627                           	opt stack 0
 31628  001EBA                     _I2c_WriteData:
 31629                           	opt stack 14
 31630                           
 31631                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 31632                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 31633                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 31634                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 31635                           ;i2c_drv.c: 260: switch (I2cWriteState)
 31636                           
 31637                           ; BSR set to: 0
 31638                           ;incstack = 0
 31639  001EBA  D095               	goto	l160
 31640  001EBC                     
 31641                           ;i2c_drv.c: 264: StartCondition();
 31642  001EBC  EC62  F031         	call	_StartCondition	;wreg free
 31643                           
 31644                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 31645  001EC0  0E00               	movlw	0
 31646  001EC2  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31647                           
 31648                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 31649  001EC4  0E01               	movlw	1
 31650  001EC6  D084               	goto	L61
 31651  001EC8                     
 31652                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 31653  001EC8  0100               	movlb	0	; () banked
 31654  001ECA  EE20 F001          	lfsr	2,1
 31655  001ECE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31656  001ED0  26D9               	addwf	fsr2l,f,c
 31657  001ED2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31658  001ED4  22DA               	addwfc	fsr2h,f,c
 31659  001ED6  50DF               	movf	indf2,w,c
 31660  001ED8  6F80               	movwf	??_I2c_WriteData& (0+255),b
 31661  001EDA  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31662  001EDE  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31663  001EE2  50DF               	movf	indf2,w,c
 31664  001EE4  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 31665  001EE6  90D8               	bcf	status,0,c
 31666  001EE8  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 31667  001EEA  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 31668  001EEC  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31669  001EF0  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31670  001EF4  6EDF               	movwf	indf2,c
 31671                           
 31672                           ; BSR set to: 0
 31673                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 31674  001EF6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31675  001EFA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31676  001EFE  50DF               	movf	indf2,w,c
 31677  001F00  EC40  F031         	call	_WriteByte
 31678                           
 31679                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 31680  001F04  0E02               	movlw	2
 31681  001F06  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31682  001F08                     
 31683                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 31684  001F08  EC4A  F031         	call	_CheckTxStatus	;wreg free
 31685  001F0C  0900               	iorlw	0
 31686  001F0E  A4D8               	btfss	status,2,c
 31687  001F10  D089               	goto	l162
 31688                           
 31689                           ;i2c_drv.c: 282: {
 31690                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 31691  001F12  0E03               	movlw	3
 31692  001F14  D01A               	goto	L63
 31693  001F16                     
 31694                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 31695  001F16  0100               	movlb	0	; () banked
 31696  001F18  EE20 F002          	lfsr	2,2
 31697  001F1C  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31698  001F1E  26D9               	addwf	fsr2l,f,c
 31699  001F20  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31700  001F22  22DA               	addwfc	fsr2h,f,c
 31701  001F24  CFDE F080          	movff	postinc2,??_I2c_WriteData
 31702  001F28  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 31703  001F2C  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 31704  001F30  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 31705  001F34  50DF               	movf	indf2,w,c
 31706  001F36  EC40  F031         	call	_WriteByte
 31707                           
 31708                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 31709  001F3A  0E04               	movlw	4
 31710  001F3C  D049               	goto	L61
 31711  001F3E                     
 31712                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 31713  001F3E  EC4A  F031         	call	_CheckTxStatus	;wreg free
 31714  001F42  0900               	iorlw	0
 31715  001F44  A4D8               	btfss	status,2,c
 31716  001F46  D06E               	goto	l162
 31717                           
 31718                           ;i2c_drv.c: 300: {
 31719                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 31720  001F48  0E05               	movlw	5
 31721  001F4A                     L63:
 31722  001F4A  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31723                           
 31724                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 31725  001F4C  0E08               	movlw	8
 31726  001F4E  D040               	goto	L61
 31727  001F50                     
 31728                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 31729  001F50  0100               	movlb	0	; () banked
 31730  001F52  EE20 F004          	lfsr	2,4
 31731  001F56  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31732  001F58  26D9               	addwf	fsr2l,f,c
 31733  001F5A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31734  001F5C  22DA               	addwfc	fsr2h,f,c
 31735  001F5E  50DF               	movf	indf2,w,c
 31736  001F60  B4D8               	btfsc	status,2,c
 31737  001F62  D010               	goto	l170
 31738                           
 31739                           ; BSR set to: 0
 31740                           ;i2c_drv.c: 310: {
 31741                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 31742  001F64  EE20 F004          	lfsr	2,4
 31743  001F68  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31744  001F6A  26D9               	addwf	fsr2l,f,c
 31745  001F6C  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31746  001F6E  22DA               	addwfc	fsr2h,f,c
 31747  001F70  06DF               	decf	indf2,f,c
 31748                           
 31749                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 31750  001F72  EE20 F002          	lfsr	2,2
 31751  001F76  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31752  001F78  26D9               	addwf	fsr2l,f,c
 31753  001F7A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31754  001F7C  22DA               	addwfc	fsr2h,f,c
 31755  001F7E  2ADE               	incf	postinc2,f,c
 31756  001F80  0E00               	movlw	0
 31757  001F82  22DD               	addwfc	postdec2,f,c
 31758  001F84                     l170:
 31759                           
 31760                           ; BSR set to: 0
 31761                           ;i2c_drv.c: 315: }
 31762                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 31763  001F84  EE20 F004          	lfsr	2,4
 31764  001F88  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31765  001F8A  26D9               	addwf	fsr2l,f,c
 31766  001F8C  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31767  001F8E  22DA               	addwfc	fsr2h,f,c
 31768  001F90  50DF               	movf	indf2,w,c
 31769  001F92  A4D8               	btfss	status,2,c
 31770  001F94  D002               	goto	l171
 31771                           
 31772                           ; BSR set to: 0
 31773                           ;i2c_drv.c: 319: {
 31774                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 31775  001F96  0E06               	movlw	6
 31776  001F98  D01B               	goto	L61
 31777  001F9A                     l171:
 31778                           
 31779                           ; BSR set to: 0
 31780                           ;i2c_drv.c: 323: else
 31781                           ;i2c_drv.c: 324: {
 31782                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 31783                           
 31784                           ; BSR set to: 0
 31785  001F9A  0E03               	movlw	3
 31786  001F9C  D019               	goto	L61
 31787  001F9E                     
 31788                           ;i2c_drv.c: 332: StopCondition();
 31789                           
 31790                           ; BSR set to: 0
 31791  001F9E  EC60  F031         	call	_StopCondition	;wreg free
 31792                           
 31793                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 31794  001FA2  0E07               	movlw	7
 31795  001FA4  D015               	goto	L61
 31796  001FA6                     
 31797                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 31798  001FA6  0E00               	movlw	0
 31799  001FA8  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31800                           
 31801                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 31802  001FAA  0E00               	movlw	0
 31803  001FAC  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31804                           
 31805                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 31806  001FAE  0E02               	movlw	2
 31807  001FB0  D018               	goto	L62
 31808  001FB2                     
 31809                           ;i2c_drv.c: 347: TentativeCounter++;
 31810  001FB2  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 31811                           
 31812                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 31813  001FB4  EC4F  F031         	call	_CheckAckStatus	;wreg free
 31814  001FB8  0900               	iorlw	0
 31815  001FBA  A4D8               	btfss	status,2,c
 31816  001FBC  D005               	goto	l176
 31817                           
 31818                           ;i2c_drv.c: 350: {
 31819                           ;i2c_drv.c: 352: TentativeCounter = 0;
 31820  001FBE  0E00               	movlw	0
 31821  001FC0  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31822                           
 31823                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 31824  001FC2  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 31825                           
 31826                           ;i2c_drv.c: 355: }
 31827  001FC6  D02E               	goto	l162
 31828  001FC8                     l176:
 31829                           
 31830                           ;i2c_drv.c: 356: else
 31831                           ;i2c_drv.c: 357: {
 31832                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 31833  001FC8  0E02               	movlw	2
 31834  001FCA  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 31835  001FCC  D02B               	goto	l162
 31836                           
 31837                           ;i2c_drv.c: 360: {
 31838                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 31839  001FCE  0E09               	movlw	9
 31840  001FD0                     L61:
 31841  001FD0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31842                           
 31843                           ;i2c_drv.c: 363: }
 31844                           ;i2c_drv.c: 364: }
 31845                           ;i2c_drv.c: 365: break;
 31846  001FD2  D028               	goto	l162
 31847  001FD4                     
 31848                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 31849  001FD4  0E00               	movlw	0
 31850  001FD6  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31851                           
 31852                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 31853  001FD8  0E00               	movlw	0
 31854  001FDA  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31855                           
 31856                           ;i2c_drv.c: 372: TentativeCounter = 0;
 31857  001FDC  0E00               	movlw	0
 31858  001FDE  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31859                           
 31860                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 31861  001FE0  0E01               	movlw	1
 31862  001FE2                     L62:
 31863  001FE2  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31864                           
 31865                           ;i2c_drv.c: 379: }
 31866                           
 31867                           ;i2c_drv.c: 378: break;
 31868                           
 31869                           ;i2c_drv.c: 377: default:
 31870                           
 31871                           ;i2c_drv.c: 375: break;
 31872  001FE4  D01F               	goto	l162
 31873  001FE6                     l160:
 31874  001FE6  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 31875                           
 31876                           ; Switch size 1, requested type "space"
 31877                           ; Number of cases is 10, Range of values is 0 to 9
 31878                           ; switch strategies available:
 31879                           ; Name         Instructions Cycles
 31880                           ; simple_byte           31    16 (average)
 31881                           ;	Chosen strategy is simple_byte
 31882  001FE8  0A00               	xorlw	0	; case 0
 31883  001FEA  B4D8               	btfsc	status,2,c
 31884  001FEC  D767               	goto	l161
 31885  001FEE  0A01               	xorlw	1	; case 1
 31886  001FF0  B4D8               	btfsc	status,2,c
 31887  001FF2  D76A               	goto	l163
 31888  001FF4  0A03               	xorlw	3	; case 2
 31889  001FF6  B4D8               	btfsc	status,2,c
 31890  001FF8  D787               	goto	l164
 31891  001FFA  0A01               	xorlw	1	; case 3
 31892  001FFC  B4D8               	btfsc	status,2,c
 31893  001FFE  D78B               	goto	l166
 31894  002000  0A07               	xorlw	7	; case 4
 31895  002002  B4D8               	btfsc	status,2,c
 31896  002004  D79C               	goto	l167
 31897  002006  0A01               	xorlw	1	; case 5
 31898  002008  B4D8               	btfsc	status,2,c
 31899  00200A  D7A2               	goto	l169
 31900  00200C  0A03               	xorlw	3	; case 6
 31901  00200E  B4D8               	btfsc	status,2,c
 31902  002010  D7C6               	goto	l173
 31903  002012  0A01               	xorlw	1	; case 7
 31904  002014  B4D8               	btfsc	status,2,c
 31905  002016  D7C7               	goto	l174
 31906  002018  0A0F               	xorlw	15	; case 8
 31907  00201A  B4D8               	btfsc	status,2,c
 31908  00201C  D7CA               	goto	l175
 31909  00201E  0A01               	xorlw	1	; case 9
 31910  002020  B4D8               	btfsc	status,2,c
 31911  002022  D7D8               	goto	l179
 31912  002024                     l162:
 31913                           
 31914                           ;i2c_drv.c: 382: return WriteStatus;
 31915  002024  5035               	movf	I2c_WriteData@WriteStatus,w,c
 31916  002026  0012               	return	
 31917  002028                     __end_of_I2c_WriteData:
 31918                           	opt stack 0
 31919                           tosu	equ	0xFFF
 31920                           tosh	equ	0xFFE
 31921                           tosl	equ	0xFFD
 31922                           pclath	equ	0xFFA
 31923                           tblptru	equ	0xFF8
 31924                           tblptrh	equ	0xFF7
 31925                           tblptrl	equ	0xFF6
 31926                           tablat	equ	0xFF5
 31927                           prodh	equ	0xFF4
 31928                           prodl	equ	0xFF3
 31929                           intcon	equ	0xFF2
 31930                           intcon2	equ	0xFF1
 31931                           intcon3	equ	0xFF0
 31932                           indf0	equ	0xFEF
 31933                           postinc0	equ	0xFEE
 31934                           plusw0	equ	0xFEB
 31935                           fsr0h	equ	0xFEA
 31936                           fsr0l	equ	0xFE9
 31937                           wreg	equ	0xFE8
 31938                           indf1	equ	0xFE7
 31939                           postinc1	equ	0xFE6
 31940                           postdec1	equ	0xFE5
 31941                           plusw1	equ	0xFE3
 31942                           fsr1h	equ	0xFE2
 31943                           fsr1l	equ	0xFE1
 31944                           indf2	equ	0xFDF
 31945                           postinc2	equ	0xFDE
 31946                           postdec2	equ	0xFDD
 31947                           plusw2	equ	0xFDB
 31948                           fsr2h	equ	0xFDA
 31949                           fsr2l	equ	0xFD9
 31950                           status	equ	0xFD8
 31951                           
 31952 ;; *************** function _I2c_ReadData *****************
 31953 ;; Defined at:
 31954 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31955 ;; Parameters:    Size  Location     Type
 31956 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 31957 ;;		 -> I2cRxPacket(6), 
 31958 ;; Auto vars:     Size  Location     Type
 31959 ;;		None
 31960 ;; Return value:  Size  Location     Type
 31961 ;;                  1    wreg      enum E7787
 31962 ;; Registers used:
 31963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31964 ;; Tracked objects:
 31965 ;;		On entry : 0/0
 31966 ;;		On exit  : 0/0
 31967 ;;		Unchanged: 0/0
 31968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31971 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31972 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31973 ;;Total ram usage:        4 bytes
 31974 ;; Hardware stack levels used:    1
 31975 ;; Hardware stack levels required when called:   12
 31976 ;; This function calls:
 31977 ;;		_CheckAckStatus
 31978 ;;		_CheckTxStatus
 31979 ;;		_EnableReceiver
 31980 ;;		_GenerateEvt
 31981 ;;		_ReadByte
 31982 ;;		_SetAckStatus
 31983 ;;		_StartCondition
 31984 ;;		_StopCondition
 31985 ;;		_WriteByte
 31986 ;; This function is called by:
 31987 ;;		_I2cSendMsgSm
 31988 ;; This function uses a non-reentrant model
 31989 ;;
 31990                           
 31991                           	psect	text148
 31992  002028                     __ptext148:
 31993                           	opt stack 0
 31994  002028                     _I2c_ReadData:
 31995                           	opt stack 14
 31996                           
 31997                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 31998                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 31999                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 32000                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 32001                           ;i2c_drv.c: 402: switch (I2cReadState)
 32002                           
 32003                           ;incstack = 0
 32004  002028  D090               	goto	l192
 32005  00202A                     
 32006                           ;i2c_drv.c: 406: StartCondition();
 32007  00202A  EC62  F031         	call	_StartCondition	;wreg free
 32008                           
 32009                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 32010  00202E  0E00               	movlw	0
 32011  002030  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32012                           
 32013                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 32014  002032  0E01               	movlw	1
 32015  002034  D083               	goto	L71
 32016  002036                     
 32017                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 32018  002036  0100               	movlb	0	; () banked
 32019  002038  EE20 F001          	lfsr	2,1
 32020  00203C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32021  00203E  26D9               	addwf	fsr2l,f,c
 32022  002040  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32023  002042  22DA               	addwfc	fsr2h,f,c
 32024  002044  50DF               	movf	indf2,w,c
 32025  002046  6F82               	movwf	??_I2c_ReadData& (0+255),b
 32026  002048  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32027  00204C  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32028  002050  50DF               	movf	indf2,w,c
 32029  002052  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 32030  002054  90D8               	bcf	status,0,c
 32031  002056  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 32032  002058  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 32033  00205A  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32034  00205E  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32035  002062  6EDF               	movwf	indf2,c
 32036                           
 32037                           ; BSR set to: 0
 32038                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 32039  002064  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32040  002068  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32041  00206C  50DF               	movf	indf2,w,c
 32042  00206E  EC40  F031         	call	_WriteByte
 32043                           
 32044                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 32045  002072  0E02               	movlw	2
 32046  002074  D063               	goto	L71
 32047  002076                     
 32048                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 32049  002076  EC4A  F031         	call	_CheckTxStatus	;wreg free
 32050  00207A  0900               	iorlw	0
 32051  00207C  A4D8               	btfss	status,2,c
 32052  00207E  D081               	goto	l194
 32053                           
 32054                           ;i2c_drv.c: 425: {
 32055                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 32056  002080  0E03               	movlw	3
 32057  002082  D05C               	goto	L71
 32058  002084                     
 32059                           ;i2c_drv.c: 433: TentativeCounter++;
 32060  002084  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 32061                           
 32062                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 32063  002086  EC4F  F031         	call	_CheckAckStatus	;wreg free
 32064  00208A  0900               	iorlw	0
 32065  00208C  A4D8               	btfss	status,2,c
 32066  00208E  D004               	goto	l199
 32067                           
 32068                           ;i2c_drv.c: 436: {
 32069                           ;i2c_drv.c: 438: TentativeCounter = 0;
 32070  002090  0E00               	movlw	0
 32071  002092  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 32072  002094                     
 32073                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 32074  002094  0E04               	movlw	4
 32075  002096  D052               	goto	L71
 32076  002098                     l199:
 32077                           
 32078                           ;i2c_drv.c: 442: else
 32079                           ;i2c_drv.c: 443: {
 32080                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 32081  002098  0E02               	movlw	2
 32082  00209A  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 32083  00209C  D072               	goto	l194
 32084                           
 32085                           ;i2c_drv.c: 446: {
 32086                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 32087  00209E  0E08               	movlw	8
 32088  0020A0  D04D               	goto	L71
 32089  0020A2                     
 32090                           ;i2c_drv.c: 455: EnableReceiver();
 32091  0020A2  EC64  F031         	call	_EnableReceiver	;wreg free
 32092                           
 32093                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 32094  0020A6  0E05               	movlw	5
 32095  0020A8  D049               	goto	L71
 32096  0020AA                     
 32097                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 32098  0020AA  EC4A  F031         	call	_CheckTxStatus	;wreg free
 32099  0020AE  0900               	iorlw	0
 32100  0020B0  A4D8               	btfss	status,2,c
 32101  0020B2  D067               	goto	l194
 32102                           
 32103                           ;i2c_drv.c: 463: {
 32104                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 32105  0020B4  0100               	movlb	0	; () banked
 32106  0020B6  EE20 F002          	lfsr	2,2
 32107  0020BA  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32108  0020BC  26D9               	addwf	fsr2l,f,c
 32109  0020BE  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32110  0020C0  22DA               	addwfc	fsr2h,f,c
 32111  0020C2  CFDE F082          	movff	postinc2,??_I2c_ReadData
 32112  0020C6  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 32113  0020CA  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 32114  0020CE  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 32115  0020D2  EC45  F031         	call	_ReadByte	;wreg free
 32116  0020D6  6EDF               	movwf	indf2,c
 32117                           
 32118                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 32119  0020D8  0100               	movlb	0	; () banked
 32120  0020DA  EE20 F002          	lfsr	2,2
 32121  0020DE  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32122  0020E0  26D9               	addwf	fsr2l,f,c
 32123  0020E2  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32124  0020E4  22DA               	addwfc	fsr2h,f,c
 32125  0020E6  2ADE               	incf	postinc2,f,c
 32126  0020E8  0E00               	movlw	0
 32127  0020EA  22DD               	addwfc	postdec2,f,c
 32128                           
 32129                           ; BSR set to: 0
 32130                           ;i2c_drv.c: 469: DataCounter++;
 32131  0020EC  2A33               	incf	I2c_ReadData@DataCounter,f,c
 32132                           
 32133                           ; BSR set to: 0
 32134                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 32135  0020EE  0E06               	movlw	6
 32136  0020F0  D025               	goto	L71
 32137  0020F2                     
 32138                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 32139                           
 32140                           ; BSR set to: 0
 32141  0020F2  0100               	movlb	0	; () banked
 32142  0020F4  EE20 F004          	lfsr	2,4
 32143  0020F8  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32144  0020FA  26D9               	addwf	fsr2l,f,c
 32145  0020FC  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32146  0020FE  22DA               	addwfc	fsr2h,f,c
 32147  002100  50DE               	movf	postinc2,w,c
 32148  002102  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 32149  002104  A0D8               	btfss	status,0,c
 32150  002106  D008               	goto	l206
 32151                           
 32152                           ; BSR set to: 0
 32153                           ;i2c_drv.c: 478: {
 32154                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 32155  002108  0E01               	movlw	1
 32156  00210A  ECDA  F030         	call	_SetAckStatus
 32157                           
 32158                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 32159  00210E  0E07               	movlw	7
 32160  002110  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32161                           
 32162                           ;i2c_drv.c: 484: DataCounter = 0;
 32163  002112  0E00               	movlw	0
 32164  002114  6E33               	movwf	I2c_ReadData@DataCounter,c
 32165                           
 32166                           ;i2c_drv.c: 485: }
 32167  002116  D035               	goto	l194
 32168  002118                     l206:
 32169                           
 32170                           ;i2c_drv.c: 486: else
 32171                           ;i2c_drv.c: 487: {
 32172                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 32173  002118  0E00               	movlw	0
 32174  00211A  ECDA  F030         	call	_SetAckStatus
 32175  00211E  D7BA               	goto	L72
 32176  002120                     
 32177                           ;i2c_drv.c: 497: StopCondition();
 32178  002120  EC60  F031         	call	_StopCondition	;wreg free
 32179                           
 32180                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 32181  002124  0E02               	movlw	2
 32182  002126  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32183                           
 32184                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 32185  002128  0E05               	movlw	5
 32186  00212A  0100               	movlb	0	; () banked
 32187  00212C  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 32188  00212E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 32189  002130  0E00               	movlw	0
 32190  002132  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32191  002134  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 32192  002136  ECA2  F030         	call	_GenerateEvt	;wreg free
 32193                           
 32194                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 32195  00213A  0E00               	movlw	0
 32196  00213C                     L71:
 32197  00213C  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32198                           
 32199                           ;i2c_drv.c: 504: break;
 32200  00213E  D021               	goto	l194
 32201  002140                     
 32202                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 32203  002140  0E00               	movlw	0
 32204  002142  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32205                           
 32206                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 32207  002144  0E01               	movlw	1
 32208  002146  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32209                           
 32210                           ;i2c_drv.c: 515: }
 32211                           
 32212                           ;i2c_drv.c: 514: break;
 32213                           
 32214                           ;i2c_drv.c: 513: default:
 32215                           
 32216                           ;i2c_drv.c: 511: break;
 32217  002148  D01C               	goto	l194
 32218  00214A                     l192:
 32219  00214A  5034               	movf	I2c_ReadData@I2cReadState,w,c
 32220                           
 32221                           ; Switch size 1, requested type "space"
 32222                           ; Number of cases is 9, Range of values is 0 to 8
 32223                           ; switch strategies available:
 32224                           ; Name         Instructions Cycles
 32225                           ; simple_byte           28    15 (average)
 32226                           ;	Chosen strategy is simple_byte
 32227  00214C  0A00               	xorlw	0	; case 0
 32228  00214E  B4D8               	btfsc	status,2,c
 32229  002150  D76C               	goto	l193
 32230  002152  0A01               	xorlw	1	; case 1
 32231  002154  B4D8               	btfsc	status,2,c
 32232  002156  D76F               	goto	l195
 32233  002158  0A03               	xorlw	3	; case 2
 32234  00215A  B4D8               	btfsc	status,2,c
 32235  00215C  D78C               	goto	l196
 32236  00215E  0A01               	xorlw	1	; case 3
 32237  002160  B4D8               	btfsc	status,2,c
 32238  002162  D790               	goto	l198
 32239  002164  0A07               	xorlw	7	; case 4
 32240  002166  B4D8               	btfsc	status,2,c
 32241  002168  D79C               	goto	l202
 32242  00216A  0A01               	xorlw	1	; case 5
 32243  00216C  B4D8               	btfsc	status,2,c
 32244  00216E  D79D               	goto	l203
 32245  002170  0A03               	xorlw	3	; case 6
 32246  002172  B4D8               	btfsc	status,2,c
 32247  002174  D7BE               	goto	l205
 32248  002176  0A01               	xorlw	1	; case 7
 32249  002178  B4D8               	btfsc	status,2,c
 32250  00217A  D7D2               	goto	l208
 32251  00217C  0A0F               	xorlw	15	; case 8
 32252  00217E  B4D8               	btfsc	status,2,c
 32253  002180  D7DF               	goto	l209
 32254  002182                     l194:
 32255                           
 32256                           ;i2c_drv.c: 518: return ReadStatus;
 32257  002182  5031               	movf	I2c_ReadData@ReadStatus,w,c
 32258  002184  0012               	return	
 32259  002186                     __end_of_I2c_ReadData:
 32260                           	opt stack 0
 32261                           tosu	equ	0xFFF
 32262                           tosh	equ	0xFFE
 32263                           tosl	equ	0xFFD
 32264                           pclath	equ	0xFFA
 32265                           tblptru	equ	0xFF8
 32266                           tblptrh	equ	0xFF7
 32267                           tblptrl	equ	0xFF6
 32268                           tablat	equ	0xFF5
 32269                           prodh	equ	0xFF4
 32270                           prodl	equ	0xFF3
 32271                           intcon	equ	0xFF2
 32272                           intcon2	equ	0xFF1
 32273                           intcon3	equ	0xFF0
 32274                           indf0	equ	0xFEF
 32275                           postinc0	equ	0xFEE
 32276                           plusw0	equ	0xFEB
 32277                           fsr0h	equ	0xFEA
 32278                           fsr0l	equ	0xFE9
 32279                           wreg	equ	0xFE8
 32280                           indf1	equ	0xFE7
 32281                           postinc1	equ	0xFE6
 32282                           postdec1	equ	0xFE5
 32283                           plusw1	equ	0xFE3
 32284                           fsr1h	equ	0xFE2
 32285                           fsr1l	equ	0xFE1
 32286                           indf2	equ	0xFDF
 32287                           postinc2	equ	0xFDE
 32288                           postdec2	equ	0xFDD
 32289                           plusw2	equ	0xFDB
 32290                           fsr2h	equ	0xFDA
 32291                           fsr2l	equ	0xFD9
 32292                           status	equ	0xFD8
 32293                           
 32294 ;; *************** function _WriteByte *****************
 32295 ;; Defined at:
 32296 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32297 ;; Parameters:    Size  Location     Type
 32298 ;;  Byte            1    wreg     unsigned char 
 32299 ;; Auto vars:     Size  Location     Type
 32300 ;;  Byte            1   29[BANK0 ] unsigned char 
 32301 ;; Return value:  Size  Location     Type
 32302 ;;                  1    wreg      void 
 32303 ;; Registers used:
 32304 ;;		wreg
 32305 ;; Tracked objects:
 32306 ;;		On entry : 0/0
 32307 ;;		On exit  : 0/0
 32308 ;;		Unchanged: 0/0
 32309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32314 ;;Total ram usage:        1 bytes
 32315 ;; Hardware stack levels used:    1
 32316 ;; Hardware stack levels required when called:   11
 32317 ;; This function calls:
 32318 ;;		Nothing
 32319 ;; This function is called by:
 32320 ;;		_I2c_WriteData
 32321 ;;		_I2c_ReadData
 32322 ;; This function uses a non-reentrant model
 32323 ;;
 32324                           
 32325                           	psect	text149
 32326  006280                     __ptext149:
 32327                           	opt stack 0
 32328  006280                     _WriteByte:
 32329                           	opt stack 14
 32330                           
 32331                           ;incstack = 0
 32332                           ;WriteByte@Byte stored from wreg
 32333  006280  0100               	movlb	0	; () banked
 32334  006282  6F7D               	movwf	WriteByte@Byte& (0+255),b
 32335                           
 32336                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 32337  006284  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 32338  006288  0012               	return		;funcret
 32339  00628A                     __end_of_WriteByte:
 32340                           	opt stack 0
 32341                           tosu	equ	0xFFF
 32342                           tosh	equ	0xFFE
 32343                           tosl	equ	0xFFD
 32344                           pclath	equ	0xFFA
 32345                           tblptru	equ	0xFF8
 32346                           tblptrh	equ	0xFF7
 32347                           tblptrl	equ	0xFF6
 32348                           tablat	equ	0xFF5
 32349                           prodh	equ	0xFF4
 32350                           prodl	equ	0xFF3
 32351                           intcon	equ	0xFF2
 32352                           intcon2	equ	0xFF1
 32353                           intcon3	equ	0xFF0
 32354                           indf0	equ	0xFEF
 32355                           postinc0	equ	0xFEE
 32356                           plusw0	equ	0xFEB
 32357                           fsr0h	equ	0xFEA
 32358                           fsr0l	equ	0xFE9
 32359                           wreg	equ	0xFE8
 32360                           indf1	equ	0xFE7
 32361                           postinc1	equ	0xFE6
 32362                           postdec1	equ	0xFE5
 32363                           plusw1	equ	0xFE3
 32364                           fsr1h	equ	0xFE2
 32365                           fsr1l	equ	0xFE1
 32366                           indf2	equ	0xFDF
 32367                           postinc2	equ	0xFDE
 32368                           postdec2	equ	0xFDD
 32369                           plusw2	equ	0xFDB
 32370                           fsr2h	equ	0xFDA
 32371                           fsr2l	equ	0xFD9
 32372                           status	equ	0xFD8
 32373                           
 32374 ;; *************** function _StopCondition *****************
 32375 ;; Defined at:
 32376 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32377 ;; Parameters:    Size  Location     Type
 32378 ;;		None
 32379 ;; Auto vars:     Size  Location     Type
 32380 ;;		None
 32381 ;; Return value:  Size  Location     Type
 32382 ;;                  1    wreg      void 
 32383 ;; Registers used:
 32384 ;;		status,2, status,0
 32385 ;; Tracked objects:
 32386 ;;		On entry : 0/0
 32387 ;;		On exit  : 0/0
 32388 ;;		Unchanged: 0/0
 32389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32394 ;;Total ram usage:        0 bytes
 32395 ;; Hardware stack levels used:    1
 32396 ;; Hardware stack levels required when called:   11
 32397 ;; This function calls:
 32398 ;;		Nothing
 32399 ;; This function is called by:
 32400 ;;		_I2c_WriteData
 32401 ;;		_I2c_ReadData
 32402 ;; This function uses a non-reentrant model
 32403 ;;
 32404                           
 32405                           	psect	text150
 32406  0062C0                     __ptext150:
 32407                           	opt stack 0
 32408  0062C0                     _StopCondition:
 32409                           	opt stack 14
 32410                           
 32411                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 32412                           
 32413                           ;incstack = 0
 32414  0062C0  8471               	bsf	3953,2,c	;volatile
 32415  0062C2  0012               	return		;funcret
 32416  0062C4                     __end_of_StopCondition:
 32417                           	opt stack 0
 32418                           tosu	equ	0xFFF
 32419                           tosh	equ	0xFFE
 32420                           tosl	equ	0xFFD
 32421                           pclath	equ	0xFFA
 32422                           tblptru	equ	0xFF8
 32423                           tblptrh	equ	0xFF7
 32424                           tblptrl	equ	0xFF6
 32425                           tablat	equ	0xFF5
 32426                           prodh	equ	0xFF4
 32427                           prodl	equ	0xFF3
 32428                           intcon	equ	0xFF2
 32429                           intcon2	equ	0xFF1
 32430                           intcon3	equ	0xFF0
 32431                           indf0	equ	0xFEF
 32432                           postinc0	equ	0xFEE
 32433                           plusw0	equ	0xFEB
 32434                           fsr0h	equ	0xFEA
 32435                           fsr0l	equ	0xFE9
 32436                           wreg	equ	0xFE8
 32437                           indf1	equ	0xFE7
 32438                           postinc1	equ	0xFE6
 32439                           postdec1	equ	0xFE5
 32440                           plusw1	equ	0xFE3
 32441                           fsr1h	equ	0xFE2
 32442                           fsr1l	equ	0xFE1
 32443                           indf2	equ	0xFDF
 32444                           postinc2	equ	0xFDE
 32445                           postdec2	equ	0xFDD
 32446                           plusw2	equ	0xFDB
 32447                           fsr2h	equ	0xFDA
 32448                           fsr2l	equ	0xFD9
 32449                           status	equ	0xFD8
 32450                           
 32451 ;; *************** function _StartCondition *****************
 32452 ;; Defined at:
 32453 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32454 ;; Parameters:    Size  Location     Type
 32455 ;;		None
 32456 ;; Auto vars:     Size  Location     Type
 32457 ;;		None
 32458 ;; Return value:  Size  Location     Type
 32459 ;;                  1    wreg      void 
 32460 ;; Registers used:
 32461 ;;		status,2, status,0
 32462 ;; Tracked objects:
 32463 ;;		On entry : 0/0
 32464 ;;		On exit  : 0/0
 32465 ;;		Unchanged: 0/0
 32466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32471 ;;Total ram usage:        0 bytes
 32472 ;; Hardware stack levels used:    1
 32473 ;; Hardware stack levels required when called:   11
 32474 ;; This function calls:
 32475 ;;		Nothing
 32476 ;; This function is called by:
 32477 ;;		_I2c_WriteData
 32478 ;;		_I2c_ReadData
 32479 ;; This function uses a non-reentrant model
 32480 ;;
 32481                           
 32482                           	psect	text151
 32483  0062C4                     __ptext151:
 32484                           	opt stack 0
 32485  0062C4                     _StartCondition:
 32486                           	opt stack 14
 32487                           
 32488                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 32489                           
 32490                           ;incstack = 0
 32491  0062C4  8071               	bsf	3953,0,c	;volatile
 32492  0062C6  0012               	return		;funcret
 32493  0062C8                     __end_of_StartCondition:
 32494                           	opt stack 0
 32495                           tosu	equ	0xFFF
 32496                           tosh	equ	0xFFE
 32497                           tosl	equ	0xFFD
 32498                           pclath	equ	0xFFA
 32499                           tblptru	equ	0xFF8
 32500                           tblptrh	equ	0xFF7
 32501                           tblptrl	equ	0xFF6
 32502                           tablat	equ	0xFF5
 32503                           prodh	equ	0xFF4
 32504                           prodl	equ	0xFF3
 32505                           intcon	equ	0xFF2
 32506                           intcon2	equ	0xFF1
 32507                           intcon3	equ	0xFF0
 32508                           indf0	equ	0xFEF
 32509                           postinc0	equ	0xFEE
 32510                           plusw0	equ	0xFEB
 32511                           fsr0h	equ	0xFEA
 32512                           fsr0l	equ	0xFE9
 32513                           wreg	equ	0xFE8
 32514                           indf1	equ	0xFE7
 32515                           postinc1	equ	0xFE6
 32516                           postdec1	equ	0xFE5
 32517                           plusw1	equ	0xFE3
 32518                           fsr1h	equ	0xFE2
 32519                           fsr1l	equ	0xFE1
 32520                           indf2	equ	0xFDF
 32521                           postinc2	equ	0xFDE
 32522                           postdec2	equ	0xFDD
 32523                           plusw2	equ	0xFDB
 32524                           fsr2h	equ	0xFDA
 32525                           fsr2l	equ	0xFD9
 32526                           status	equ	0xFD8
 32527                           
 32528 ;; *************** function _SetAckStatus *****************
 32529 ;; Defined at:
 32530 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32531 ;; Parameters:    Size  Location     Type
 32532 ;;  AckSts          1    wreg     unsigned char 
 32533 ;; Auto vars:     Size  Location     Type
 32534 ;;  AckSts          1   29[BANK0 ] unsigned char 
 32535 ;; Return value:  Size  Location     Type
 32536 ;;                  1    wreg      void 
 32537 ;; Registers used:
 32538 ;;		wreg
 32539 ;; Tracked objects:
 32540 ;;		On entry : 0/0
 32541 ;;		On exit  : 0/0
 32542 ;;		Unchanged: 0/0
 32543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32547 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32548 ;;Total ram usage:        1 bytes
 32549 ;; Hardware stack levels used:    1
 32550 ;; Hardware stack levels required when called:   11
 32551 ;; This function calls:
 32552 ;;		Nothing
 32553 ;; This function is called by:
 32554 ;;		_I2c_ReadData
 32555 ;; This function uses a non-reentrant model
 32556 ;;
 32557                           
 32558                           	psect	text152
 32559  0061B4                     __ptext152:
 32560                           	opt stack 0
 32561  0061B4                     _SetAckStatus:
 32562                           	opt stack 14
 32563                           
 32564                           ;incstack = 0
 32565                           ;SetAckStatus@AckSts stored from wreg
 32566  0061B4  0100               	movlb	0	; () banked
 32567  0061B6  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 32568                           
 32569                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 32570  0061B8  0100               	movlb	0	; () banked
 32571  0061BA  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 32572  0061BC  D002               	bra	u11415
 32573  0061BE  9A71               	bcf	3953,5,c	;volatile
 32574  0061C0  D001               	bra	u11416
 32575  0061C2                     u11415:
 32576  0061C2  8A71               	bsf	3953,5,c	;volatile
 32577  0061C4                     u11416:
 32578                           
 32579                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 32580  0061C4  8871               	bsf	3953,4,c	;volatile
 32581  0061C6  0012               	return		;funcret
 32582  0061C8                     __end_of_SetAckStatus:
 32583                           	opt stack 0
 32584                           tosu	equ	0xFFF
 32585                           tosh	equ	0xFFE
 32586                           tosl	equ	0xFFD
 32587                           pclath	equ	0xFFA
 32588                           tblptru	equ	0xFF8
 32589                           tblptrh	equ	0xFF7
 32590                           tblptrl	equ	0xFF6
 32591                           tablat	equ	0xFF5
 32592                           prodh	equ	0xFF4
 32593                           prodl	equ	0xFF3
 32594                           intcon	equ	0xFF2
 32595                           intcon2	equ	0xFF1
 32596                           intcon3	equ	0xFF0
 32597                           indf0	equ	0xFEF
 32598                           postinc0	equ	0xFEE
 32599                           plusw0	equ	0xFEB
 32600                           fsr0h	equ	0xFEA
 32601                           fsr0l	equ	0xFE9
 32602                           wreg	equ	0xFE8
 32603                           indf1	equ	0xFE7
 32604                           postinc1	equ	0xFE6
 32605                           postdec1	equ	0xFE5
 32606                           plusw1	equ	0xFE3
 32607                           fsr1h	equ	0xFE2
 32608                           fsr1l	equ	0xFE1
 32609                           indf2	equ	0xFDF
 32610                           postinc2	equ	0xFDE
 32611                           postdec2	equ	0xFDD
 32612                           plusw2	equ	0xFDB
 32613                           fsr2h	equ	0xFDA
 32614                           fsr2l	equ	0xFD9
 32615                           status	equ	0xFD8
 32616                           
 32617 ;; *************** function _ReadByte *****************
 32618 ;; Defined at:
 32619 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32620 ;; Parameters:    Size  Location     Type
 32621 ;;		None
 32622 ;; Auto vars:     Size  Location     Type
 32623 ;;  Byte            1   29[BANK0 ] unsigned char 
 32624 ;; Return value:  Size  Location     Type
 32625 ;;                  1    wreg      unsigned char 
 32626 ;; Registers used:
 32627 ;;		wreg, status,2
 32628 ;; Tracked objects:
 32629 ;;		On entry : 0/0
 32630 ;;		On exit  : 0/0
 32631 ;;		Unchanged: 0/0
 32632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32636 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32637 ;;Total ram usage:        1 bytes
 32638 ;; Hardware stack levels used:    1
 32639 ;; Hardware stack levels required when called:   11
 32640 ;; This function calls:
 32641 ;;		Nothing
 32642 ;; This function is called by:
 32643 ;;		_I2c_ReadData
 32644 ;; This function uses a non-reentrant model
 32645 ;;
 32646                           
 32647                           	psect	text153
 32648  00628A                     __ptext153:
 32649                           	opt stack 0
 32650  00628A                     _ReadByte:
 32651                           	opt stack 14
 32652                           
 32653                           ;i2c_drv.c: 207: UINT8 Byte;
 32654                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 32655                           
 32656                           ;incstack = 0
 32657  00628A  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 32658                           
 32659                           ;i2c_drv.c: 213: return Byte;
 32660  00628E  0100               	movlb	0	; () banked
 32661  006290  517D               	movf	ReadByte@Byte& (0+255),w,b
 32662  006292  0012               	return	
 32663  006294                     __end_of_ReadByte:
 32664                           	opt stack 0
 32665                           tosu	equ	0xFFF
 32666                           tosh	equ	0xFFE
 32667                           tosl	equ	0xFFD
 32668                           pclath	equ	0xFFA
 32669                           tblptru	equ	0xFF8
 32670                           tblptrh	equ	0xFF7
 32671                           tblptrl	equ	0xFF6
 32672                           tablat	equ	0xFF5
 32673                           prodh	equ	0xFF4
 32674                           prodl	equ	0xFF3
 32675                           intcon	equ	0xFF2
 32676                           intcon2	equ	0xFF1
 32677                           intcon3	equ	0xFF0
 32678                           indf0	equ	0xFEF
 32679                           postinc0	equ	0xFEE
 32680                           plusw0	equ	0xFEB
 32681                           fsr0h	equ	0xFEA
 32682                           fsr0l	equ	0xFE9
 32683                           wreg	equ	0xFE8
 32684                           indf1	equ	0xFE7
 32685                           postinc1	equ	0xFE6
 32686                           postdec1	equ	0xFE5
 32687                           plusw1	equ	0xFE3
 32688                           fsr1h	equ	0xFE2
 32689                           fsr1l	equ	0xFE1
 32690                           indf2	equ	0xFDF
 32691                           postinc2	equ	0xFDE
 32692                           postdec2	equ	0xFDD
 32693                           plusw2	equ	0xFDB
 32694                           fsr2h	equ	0xFDA
 32695                           fsr2l	equ	0xFD9
 32696                           status	equ	0xFD8
 32697                           
 32698 ;; *************** function _GenerateEvt *****************
 32699 ;; Defined at:
 32700 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32701 ;; Parameters:    Size  Location     Type
 32702 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32703 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32704 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32705 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 32706 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 32707 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32708 ;; Auto vars:     Size  Location     Type
 32709 ;;  EventStatus     1   31[BANK0 ] enum E7727
 32710 ;; Return value:  Size  Location     Type
 32711 ;;                  1    wreg      enum E7699
 32712 ;; Registers used:
 32713 ;;		wreg, fsr2l, fsr2h, status,2
 32714 ;; Tracked objects:
 32715 ;;		On entry : 0/0
 32716 ;;		On exit  : 0/0
 32717 ;;		Unchanged: 0/0
 32718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32722 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32723 ;;Total ram usage:        3 bytes
 32724 ;; Hardware stack levels used:    1
 32725 ;; Hardware stack levels required when called:   11
 32726 ;; This function calls:
 32727 ;;		Nothing
 32728 ;; This function is called by:
 32729 ;;		_I2c_ReadData
 32730 ;;		_CheckModem
 32731 ;;		_TurnOnModem
 32732 ;;		_ConfigureModem
 32733 ;;		_ModemEvtParser
 32734 ;;		_GetSmsSm
 32735 ;;		_Mdm_RequestSmsData
 32736 ;;		_I2cSlv_SendI2cMsg
 32737 ;;		_I2cSlv_ReceiveI2cMsg
 32738 ;;		_RiSm
 32739 ;;		_Mdm_SendSmsData
 32740 ;;		_MdmHttp_InitGprsNetwork
 32741 ;;		_MdmHttp_GetMethod
 32742 ;;		_Alarm
 32743 ;; This function uses a non-reentrant model
 32744 ;;
 32745                           
 32746                           	psect	text154
 32747  006144                     __ptext154:
 32748                           	opt stack 0
 32749  006144                     _GenerateEvt:
 32750                           	opt stack 13
 32751                           
 32752                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32753                           
 32754                           ; BSR set to: 0
 32755                           ;incstack = 0
 32756  006144  0E00               	movlw	0
 32757  006146  0100               	movlb	0	; () banked
 32758  006148  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32759                           
 32760                           ; BSR set to: 0
 32761                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32762  00614A  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 32763  00614E  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 32764  006152  0E02               	movlw	2
 32765  006154  6EDF               	movwf	indf2,c
 32766                           
 32767                           ; BSR set to: 0
 32768                           ;os_ser.c: 83: EventStatus = EventSent;
 32769  006156  0E02               	movlw	2
 32770  006158  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32771  00615A  0012               	return	
 32772  00615C                     __end_of_GenerateEvt:
 32773                           	opt stack 0
 32774                           tosu	equ	0xFFF
 32775                           tosh	equ	0xFFE
 32776                           tosl	equ	0xFFD
 32777                           pclath	equ	0xFFA
 32778                           tblptru	equ	0xFF8
 32779                           tblptrh	equ	0xFF7
 32780                           tblptrl	equ	0xFF6
 32781                           tablat	equ	0xFF5
 32782                           prodh	equ	0xFF4
 32783                           prodl	equ	0xFF3
 32784                           intcon	equ	0xFF2
 32785                           intcon2	equ	0xFF1
 32786                           intcon3	equ	0xFF0
 32787                           indf0	equ	0xFEF
 32788                           postinc0	equ	0xFEE
 32789                           plusw0	equ	0xFEB
 32790                           fsr0h	equ	0xFEA
 32791                           fsr0l	equ	0xFE9
 32792                           wreg	equ	0xFE8
 32793                           indf1	equ	0xFE7
 32794                           postinc1	equ	0xFE6
 32795                           postdec1	equ	0xFE5
 32796                           plusw1	equ	0xFE3
 32797                           fsr1h	equ	0xFE2
 32798                           fsr1l	equ	0xFE1
 32799                           indf2	equ	0xFDF
 32800                           postinc2	equ	0xFDE
 32801                           postdec2	equ	0xFDD
 32802                           plusw2	equ	0xFDB
 32803                           fsr2h	equ	0xFDA
 32804                           fsr2l	equ	0xFD9
 32805                           status	equ	0xFD8
 32806                           
 32807 ;; *************** function _EnableReceiver *****************
 32808 ;; Defined at:
 32809 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32810 ;; Parameters:    Size  Location     Type
 32811 ;;		None
 32812 ;; Auto vars:     Size  Location     Type
 32813 ;;		None
 32814 ;; Return value:  Size  Location     Type
 32815 ;;                  1    wreg      void 
 32816 ;; Registers used:
 32817 ;;		status,2, status,0
 32818 ;; Tracked objects:
 32819 ;;		On entry : 0/0
 32820 ;;		On exit  : 0/0
 32821 ;;		Unchanged: 0/0
 32822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32827 ;;Total ram usage:        0 bytes
 32828 ;; Hardware stack levels used:    1
 32829 ;; Hardware stack levels required when called:   11
 32830 ;; This function calls:
 32831 ;;		Nothing
 32832 ;; This function is called by:
 32833 ;;		_I2c_ReadData
 32834 ;; This function uses a non-reentrant model
 32835 ;;
 32836                           
 32837                           	psect	text155
 32838  0062C8                     __ptext155:
 32839                           	opt stack 0
 32840  0062C8                     _EnableReceiver:
 32841                           	opt stack 14
 32842                           
 32843                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 32844                           
 32845                           ; BSR set to: 0
 32846                           ;incstack = 0
 32847  0062C8  8671               	bsf	3953,3,c	;volatile
 32848  0062CA  0012               	return		;funcret
 32849  0062CC                     __end_of_EnableReceiver:
 32850                           	opt stack 0
 32851                           tosu	equ	0xFFF
 32852                           tosh	equ	0xFFE
 32853                           tosl	equ	0xFFD
 32854                           pclath	equ	0xFFA
 32855                           tblptru	equ	0xFF8
 32856                           tblptrh	equ	0xFF7
 32857                           tblptrl	equ	0xFF6
 32858                           tablat	equ	0xFF5
 32859                           prodh	equ	0xFF4
 32860                           prodl	equ	0xFF3
 32861                           intcon	equ	0xFF2
 32862                           intcon2	equ	0xFF1
 32863                           intcon3	equ	0xFF0
 32864                           indf0	equ	0xFEF
 32865                           postinc0	equ	0xFEE
 32866                           plusw0	equ	0xFEB
 32867                           fsr0h	equ	0xFEA
 32868                           fsr0l	equ	0xFE9
 32869                           wreg	equ	0xFE8
 32870                           indf1	equ	0xFE7
 32871                           postinc1	equ	0xFE6
 32872                           postdec1	equ	0xFE5
 32873                           plusw1	equ	0xFE3
 32874                           fsr1h	equ	0xFE2
 32875                           fsr1l	equ	0xFE1
 32876                           indf2	equ	0xFDF
 32877                           postinc2	equ	0xFDE
 32878                           postdec2	equ	0xFDD
 32879                           plusw2	equ	0xFDB
 32880                           fsr2h	equ	0xFDA
 32881                           fsr2l	equ	0xFD9
 32882                           status	equ	0xFD8
 32883                           
 32884 ;; *************** function _CheckTxStatus *****************
 32885 ;; Defined at:
 32886 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32887 ;; Parameters:    Size  Location     Type
 32888 ;;		None
 32889 ;; Auto vars:     Size  Location     Type
 32890 ;;		None
 32891 ;; Return value:  Size  Location     Type
 32892 ;;                  1    wreg      unsigned char 
 32893 ;; Registers used:
 32894 ;;		wreg, status,2, status,0
 32895 ;; Tracked objects:
 32896 ;;		On entry : 0/0
 32897 ;;		On exit  : 0/0
 32898 ;;		Unchanged: 0/0
 32899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32904 ;;Total ram usage:        0 bytes
 32905 ;; Hardware stack levels used:    1
 32906 ;; Hardware stack levels required when called:   11
 32907 ;; This function calls:
 32908 ;;		Nothing
 32909 ;; This function is called by:
 32910 ;;		_I2c_WriteData
 32911 ;;		_I2c_ReadData
 32912 ;; This function uses a non-reentrant model
 32913 ;;
 32914                           
 32915                           	psect	text156
 32916  006294                     __ptext156:
 32917                           	opt stack 0
 32918  006294                     _CheckTxStatus:
 32919                           	opt stack 14
 32920                           
 32921                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 32922                           
 32923                           ;incstack = 0
 32924  006294  4073               	rrncf	3955,w,c	;volatile
 32925  006296  42E8               	rrncf	wreg,f,c
 32926  006298  0B3F               	andlw	63
 32927  00629A  0B01               	andlw	1
 32928  00629C  0012               	return	
 32929  00629E                     __end_of_CheckTxStatus:
 32930                           	opt stack 0
 32931                           tosu	equ	0xFFF
 32932                           tosh	equ	0xFFE
 32933                           tosl	equ	0xFFD
 32934                           pclath	equ	0xFFA
 32935                           tblptru	equ	0xFF8
 32936                           tblptrh	equ	0xFF7
 32937                           tblptrl	equ	0xFF6
 32938                           tablat	equ	0xFF5
 32939                           prodh	equ	0xFF4
 32940                           prodl	equ	0xFF3
 32941                           intcon	equ	0xFF2
 32942                           intcon2	equ	0xFF1
 32943                           intcon3	equ	0xFF0
 32944                           indf0	equ	0xFEF
 32945                           postinc0	equ	0xFEE
 32946                           plusw0	equ	0xFEB
 32947                           fsr0h	equ	0xFEA
 32948                           fsr0l	equ	0xFE9
 32949                           wreg	equ	0xFE8
 32950                           indf1	equ	0xFE7
 32951                           postinc1	equ	0xFE6
 32952                           postdec1	equ	0xFE5
 32953                           plusw1	equ	0xFE3
 32954                           fsr1h	equ	0xFE2
 32955                           fsr1l	equ	0xFE1
 32956                           indf2	equ	0xFDF
 32957                           postinc2	equ	0xFDE
 32958                           postdec2	equ	0xFDD
 32959                           plusw2	equ	0xFDB
 32960                           fsr2h	equ	0xFDA
 32961                           fsr2l	equ	0xFD9
 32962                           status	equ	0xFD8
 32963                           
 32964 ;; *************** function _CheckAckStatus *****************
 32965 ;; Defined at:
 32966 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32967 ;; Parameters:    Size  Location     Type
 32968 ;;		None
 32969 ;; Auto vars:     Size  Location     Type
 32970 ;;		None
 32971 ;; Return value:  Size  Location     Type
 32972 ;;                  1    wreg      unsigned char 
 32973 ;; Registers used:
 32974 ;;		wreg, status,2, status,0
 32975 ;; Tracked objects:
 32976 ;;		On entry : 0/0
 32977 ;;		On exit  : 0/0
 32978 ;;		Unchanged: 0/0
 32979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32984 ;;Total ram usage:        0 bytes
 32985 ;; Hardware stack levels used:    1
 32986 ;; Hardware stack levels required when called:   11
 32987 ;; This function calls:
 32988 ;;		Nothing
 32989 ;; This function is called by:
 32990 ;;		_I2c_WriteData
 32991 ;;		_I2c_ReadData
 32992 ;; This function uses a non-reentrant model
 32993 ;;
 32994                           
 32995                           	psect	text157
 32996  00629E                     __ptext157:
 32997                           	opt stack 0
 32998  00629E                     _CheckAckStatus:
 32999                           	opt stack 14
 33000                           
 33001                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 33002                           
 33003                           ;incstack = 0
 33004  00629E  4471               	rlncf	3953,w,c	;volatile
 33005  0062A0  46E8               	rlncf	wreg,f,c
 33006  0062A2  0B03               	andlw	3
 33007  0062A4  0B01               	andlw	1
 33008  0062A6  0012               	return	
 33009  0062A8                     __end_of_CheckAckStatus:
 33010                           	opt stack 0
 33011                           tosu	equ	0xFFF
 33012                           tosh	equ	0xFFE
 33013                           tosl	equ	0xFFD
 33014                           pclath	equ	0xFFA
 33015                           tblptru	equ	0xFF8
 33016                           tblptrh	equ	0xFF7
 33017                           tblptrl	equ	0xFF6
 33018                           tablat	equ	0xFF5
 33019                           prodh	equ	0xFF4
 33020                           prodl	equ	0xFF3
 33021                           intcon	equ	0xFF2
 33022                           intcon2	equ	0xFF1
 33023                           intcon3	equ	0xFF0
 33024                           indf0	equ	0xFEF
 33025                           postinc0	equ	0xFEE
 33026                           plusw0	equ	0xFEB
 33027                           fsr0h	equ	0xFEA
 33028                           fsr0l	equ	0xFE9
 33029                           wreg	equ	0xFE8
 33030                           indf1	equ	0xFE7
 33031                           postinc1	equ	0xFE6
 33032                           postdec1	equ	0xFE5
 33033                           plusw1	equ	0xFE3
 33034                           fsr1h	equ	0xFE2
 33035                           fsr1l	equ	0xFE1
 33036                           indf2	equ	0xFDF
 33037                           postinc2	equ	0xFDE
 33038                           postdec2	equ	0xFDD
 33039                           plusw2	equ	0xFDB
 33040                           fsr2h	equ	0xFDA
 33041                           fsr2l	equ	0xFD9
 33042                           status	equ	0xFD8
 33043                           
 33044 ;; *************** function _LowPriorityIsr *****************
 33045 ;; Defined at:
 33046 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33047 ;; Parameters:    Size  Location     Type
 33048 ;;		None
 33049 ;; Auto vars:     Size  Location     Type
 33050 ;;		None
 33051 ;; Return value:  Size  Location     Type
 33052 ;;                  1    wreg      void 
 33053 ;; Registers used:
 33054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33055 ;; Tracked objects:
 33056 ;;		On entry : 0/0
 33057 ;;		On exit  : 0/0
 33058 ;;		Unchanged: 0/0
 33059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33062 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33063 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33064 ;;Total ram usage:       21 bytes
 33065 ;; Hardware stack levels used:    1
 33066 ;; Hardware stack levels required when called:   10
 33067 ;; This function calls:
 33068 ;;		_Tmr_Tmr2Isr
 33069 ;; This function is called by:
 33070 ;;		Interrupt level 1
 33071 ;; This function uses a non-reentrant model
 33072 ;;
 33073                           
 33074                           	psect	intcodelo
 33075  000018                     __pintcodelo:
 33076                           	opt stack 0
 33077  000018                     _LowPriorityIsr:
 33078                           	opt stack 8
 33079                           
 33080                           ;incstack = 0
 33081  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 33082  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 33083  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 33084  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 33085  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 33086  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 33087  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 33088  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 33089  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 33090  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 33091  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 33092  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 33093  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 33094  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 33095  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 33096  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 33097  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 33098  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 33099  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 33100  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 33101  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 33102  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 33103                           
 33104                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 33105  00006E  B29E               	btfsc	3998,1,c	;volatile
 33106                           
 33107                           ;irq.c: 259: {
 33108                           ;irq.c: 261: Tmr_Tmr2Isr();
 33109  000070  EC92  F02F         	call	_Tmr_Tmr2Isr	;wreg free
 33110  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 33111  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 33112  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 33113  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 33114  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 33115  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 33116  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 33117  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 33118  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 33119  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 33120  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 33121  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 33122  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 33123  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 33124  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 33125  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 33126  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 33127  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 33128  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 33129  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 33130  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 33131  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 33132  0000CA  0010               	retfie	
 33133  0000CC                     __end_of_LowPriorityIsr:
 33134                           	opt stack 0
 33135                           tosu	equ	0xFFF
 33136                           tosh	equ	0xFFE
 33137                           tosl	equ	0xFFD
 33138                           pclatu	equ	0xFFB
 33139                           pclath	equ	0xFFA
 33140                           tblptru	equ	0xFF8
 33141                           tblptrh	equ	0xFF7
 33142                           tblptrl	equ	0xFF6
 33143                           tablat	equ	0xFF5
 33144                           prodh	equ	0xFF4
 33145                           prodl	equ	0xFF3
 33146                           intcon	equ	0xFF2
 33147                           intcon2	equ	0xFF1
 33148                           intcon3	equ	0xFF0
 33149                           indf0	equ	0xFEF
 33150                           postinc0	equ	0xFEE
 33151                           plusw0	equ	0xFEB
 33152                           fsr0h	equ	0xFEA
 33153                           fsr0l	equ	0xFE9
 33154                           wreg	equ	0xFE8
 33155                           indf1	equ	0xFE7
 33156                           postinc1	equ	0xFE6
 33157                           postdec1	equ	0xFE5
 33158                           plusw1	equ	0xFE3
 33159                           fsr1h	equ	0xFE2
 33160                           fsr1l	equ	0xFE1
 33161                           bsr	equ	0xFE0
 33162                           indf2	equ	0xFDF
 33163                           postinc2	equ	0xFDE
 33164                           postdec2	equ	0xFDD
 33165                           plusw2	equ	0xFDB
 33166                           fsr2h	equ	0xFDA
 33167                           fsr2l	equ	0xFD9
 33168                           status	equ	0xFD8
 33169                           
 33170 ;; *************** function _Tmr_Tmr2Isr *****************
 33171 ;; Defined at:
 33172 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 33173 ;; Parameters:    Size  Location     Type
 33174 ;;		None
 33175 ;; Auto vars:     Size  Location     Type
 33176 ;;		None
 33177 ;; Return value:  Size  Location     Type
 33178 ;;                  1    wreg      void 
 33179 ;; Registers used:
 33180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33181 ;; Tracked objects:
 33182 ;;		On entry : 0/0
 33183 ;;		On exit  : 0/0
 33184 ;;		Unchanged: 0/0
 33185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33190 ;;Total ram usage:        0 bytes
 33191 ;; Hardware stack levels used:    1
 33192 ;; Hardware stack levels required when called:    9
 33193 ;; This function calls:
 33194 ;;		Absolute function
 33195 ;;		_Sch_SchmIntService
 33196 ;; This function is called by:
 33197 ;;		_LowPriorityIsr
 33198 ;; This function uses a non-reentrant model
 33199 ;;
 33200                           
 33201                           	psect	text159
 33202  005F24                     __ptext159:
 33203                           	opt stack 0
 33204  005F24                     _Tmr_Tmr2Isr:
 33205                           	opt stack 8
 33206                           
 33207                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 33208                           
 33209                           ;incstack = 0
 33210  005F24  929E               	bcf	3998,1,c	;volatile
 33211                           
 33212                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 33213  005F26  0101               	movlb	1	; () banked
 33214  005F28  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 33215  005F2A  11D4               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33216  005F2C  B4D8               	btfsc	status,2,c
 33217  005F2E  0012               	return	
 33218                           
 33219                           ; BSR set to: 1
 33220                           ;tmr_drv.c: 315: {
 33221                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 33222  005F30  D801               	call	i1u1481_28
 33223  005F32  0012               	return	
 33224  005F34                     i1u1481_28:
 33225  005F34  0005               	push	
 33226  005F36  6EFA               	movwf	pclath,c
 33227  005F38  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 33228  005F3A  6EFD               	movwf	tosl,c
 33229  005F3C  51D4               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33230  005F3E  6EFE               	movwf	tosh,c
 33231  005F40  50F8               	movf	tblptru,w,c
 33232  005F42  6EFF               	movwf	tosu,c
 33233  005F44  50FA               	movf	pclath,w,c
 33234  005F46  0012               	return		;indir
 33235  005F48                     __end_of_Tmr_Tmr2Isr:
 33236                           	opt stack 0
 33237                           tosu	equ	0xFFF
 33238                           tosh	equ	0xFFE
 33239                           tosl	equ	0xFFD
 33240                           pclatu	equ	0xFFB
 33241                           pclath	equ	0xFFA
 33242                           tblptru	equ	0xFF8
 33243                           tblptrh	equ	0xFF7
 33244                           tblptrl	equ	0xFF6
 33245                           tablat	equ	0xFF5
 33246                           prodh	equ	0xFF4
 33247                           prodl	equ	0xFF3
 33248                           intcon	equ	0xFF2
 33249                           intcon2	equ	0xFF1
 33250                           intcon3	equ	0xFF0
 33251                           indf0	equ	0xFEF
 33252                           postinc0	equ	0xFEE
 33253                           plusw0	equ	0xFEB
 33254                           fsr0h	equ	0xFEA
 33255                           fsr0l	equ	0xFE9
 33256                           wreg	equ	0xFE8
 33257                           indf1	equ	0xFE7
 33258                           postinc1	equ	0xFE6
 33259                           postdec1	equ	0xFE5
 33260                           plusw1	equ	0xFE3
 33261                           fsr1h	equ	0xFE2
 33262                           fsr1l	equ	0xFE1
 33263                           bsr	equ	0xFE0
 33264                           indf2	equ	0xFDF
 33265                           postinc2	equ	0xFDE
 33266                           postdec2	equ	0xFDD
 33267                           plusw2	equ	0xFDB
 33268                           fsr2h	equ	0xFDA
 33269                           fsr2l	equ	0xFD9
 33270                           status	equ	0xFD8
 33271                           
 33272 ;; *************** function _Sch_SchmIntService *****************
 33273 ;; Defined at:
 33274 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33275 ;; Parameters:    Size  Location     Type
 33276 ;;		None
 33277 ;; Auto vars:     Size  Location     Type
 33278 ;;		None
 33279 ;; Return value:  Size  Location     Type
 33280 ;;                  1    wreg      void 
 33281 ;; Registers used:
 33282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33283 ;; Tracked objects:
 33284 ;;		On entry : 0/0
 33285 ;;		On exit  : 0/0
 33286 ;;		Unchanged: 0/0
 33287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33292 ;;Total ram usage:        0 bytes
 33293 ;; Hardware stack levels used:    1
 33294 ;; Hardware stack levels required when called:    8
 33295 ;; This function calls:
 33296 ;;		_OsAlrm_ProcessOsAlarms
 33297 ;;		_UpdateOsCounters
 33298 ;;		_UpdateSchFlag
 33299 ;; This function is called by:
 33300 ;;		_SystemInit
 33301 ;;		_Tmr_Tmr2Isr
 33302 ;; This function uses a non-reentrant model
 33303 ;;
 33304                           
 33305                           	psect	text160
 33306  00624E                     __ptext160:
 33307                           	opt stack 0
 33308  00624E                     _Sch_SchmIntService:
 33309                           	opt stack 8
 33310                           
 33311                           ;os_sched.c: 217: UpdateSchFlag();
 33312                           
 33313                           ;incstack = 0
 33314  00624E  EC48  F030         	call	_UpdateSchFlag	;wreg free
 33315                           
 33316                           ;os_sched.c: 219: UpdateOsCounters();
 33317  006252  EC17  F031         	call	_UpdateOsCounters	;wreg free
 33318                           
 33319                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 33320  006256  EC6E  F011         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 33321  00625A  0012               	return		;funcret
 33322  00625C                     __end_of_Sch_SchmIntService:
 33323                           	opt stack 0
 33324                           tosu	equ	0xFFF
 33325                           tosh	equ	0xFFE
 33326                           tosl	equ	0xFFD
 33327                           pclatu	equ	0xFFB
 33328                           pclath	equ	0xFFA
 33329                           tblptru	equ	0xFF8
 33330                           tblptrh	equ	0xFF7
 33331                           tblptrl	equ	0xFF6
 33332                           tablat	equ	0xFF5
 33333                           prodh	equ	0xFF4
 33334                           prodl	equ	0xFF3
 33335                           intcon	equ	0xFF2
 33336                           intcon2	equ	0xFF1
 33337                           intcon3	equ	0xFF0
 33338                           indf0	equ	0xFEF
 33339                           postinc0	equ	0xFEE
 33340                           plusw0	equ	0xFEB
 33341                           fsr0h	equ	0xFEA
 33342                           fsr0l	equ	0xFE9
 33343                           wreg	equ	0xFE8
 33344                           indf1	equ	0xFE7
 33345                           postinc1	equ	0xFE6
 33346                           postdec1	equ	0xFE5
 33347                           plusw1	equ	0xFE3
 33348                           fsr1h	equ	0xFE2
 33349                           fsr1l	equ	0xFE1
 33350                           bsr	equ	0xFE0
 33351                           indf2	equ	0xFDF
 33352                           postinc2	equ	0xFDE
 33353                           postdec2	equ	0xFDD
 33354                           plusw2	equ	0xFDB
 33355                           fsr2h	equ	0xFDA
 33356                           fsr2l	equ	0xFD9
 33357                           status	equ	0xFD8
 33358                           
 33359 ;; *************** function _UpdateSchFlag *****************
 33360 ;; Defined at:
 33361 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33362 ;; Parameters:    Size  Location     Type
 33363 ;;		None
 33364 ;; Auto vars:     Size  Location     Type
 33365 ;;		None
 33366 ;; Return value:  Size  Location     Type
 33367 ;;                  1    wreg      void 
 33368 ;; Registers used:
 33369 ;;		wreg, status,2, status,0
 33370 ;; Tracked objects:
 33371 ;;		On entry : 0/0
 33372 ;;		On exit  : 0/0
 33373 ;;		Unchanged: 0/0
 33374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33379 ;;Total ram usage:        0 bytes
 33380 ;; Hardware stack levels used:    1
 33381 ;; Hardware stack levels required when called:    4
 33382 ;; This function calls:
 33383 ;;		Nothing
 33384 ;; This function is called by:
 33385 ;;		_Sch_SchmIntService
 33386 ;; This function uses a non-reentrant model
 33387 ;;
 33388                           
 33389                           	psect	text161
 33390  006090                     __ptext161:
 33391                           	opt stack 0
 33392  006090                     _UpdateSchFlag:
 33393                           	opt stack 11
 33394                           
 33395                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 33396                           ;os_sched.c: 138: InterruptCounter++;
 33397                           
 33398                           ;incstack = 0
 33399  006090  0102               	movlb	2	; () banked
 33400  006092  4BDE               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 33401  006094  2BDF               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 33402                           
 33403                           ; BSR set to: 2
 33404                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 33405  006096  51DE               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 33406  006098  11DF               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 33407  00609A  B4D8               	btfsc	status,2,c
 33408  00609C  0012               	return	
 33409                           
 33410                           ; BSR set to: 2
 33411                           ;os_sched.c: 141: {
 33412                           ;os_sched.c: 143: InterruptCounter = 0;
 33413  00609E  0E00               	movlw	0
 33414  0060A0  6FDF               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 33415  0060A2  0E00               	movlw	0
 33416  0060A4  6FDE               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 33417                           
 33418                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 33419  0060A6  0E00               	movlw	0
 33420  0060A8  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 33421  0060AA  0012               	return	
 33422  0060AC                     __end_of_UpdateSchFlag:
 33423                           	opt stack 0
 33424                           tosu	equ	0xFFF
 33425                           tosh	equ	0xFFE
 33426                           tosl	equ	0xFFD
 33427                           pclatu	equ	0xFFB
 33428                           pclath	equ	0xFFA
 33429                           tblptru	equ	0xFF8
 33430                           tblptrh	equ	0xFF7
 33431                           tblptrl	equ	0xFF6
 33432                           tablat	equ	0xFF5
 33433                           prodh	equ	0xFF4
 33434                           prodl	equ	0xFF3
 33435                           intcon	equ	0xFF2
 33436                           intcon2	equ	0xFF1
 33437                           intcon3	equ	0xFF0
 33438                           indf0	equ	0xFEF
 33439                           postinc0	equ	0xFEE
 33440                           plusw0	equ	0xFEB
 33441                           fsr0h	equ	0xFEA
 33442                           fsr0l	equ	0xFE9
 33443                           wreg	equ	0xFE8
 33444                           indf1	equ	0xFE7
 33445                           postinc1	equ	0xFE6
 33446                           postdec1	equ	0xFE5
 33447                           plusw1	equ	0xFE3
 33448                           fsr1h	equ	0xFE2
 33449                           fsr1l	equ	0xFE1
 33450                           bsr	equ	0xFE0
 33451                           indf2	equ	0xFDF
 33452                           postinc2	equ	0xFDE
 33453                           postdec2	equ	0xFDD
 33454                           plusw2	equ	0xFDB
 33455                           fsr2h	equ	0xFDA
 33456                           fsr2l	equ	0xFD9
 33457                           status	equ	0xFD8
 33458                           
 33459 ;; *************** function _UpdateOsCounters *****************
 33460 ;; Defined at:
 33461 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33462 ;; Parameters:    Size  Location     Type
 33463 ;;		None
 33464 ;; Auto vars:     Size  Location     Type
 33465 ;;		None
 33466 ;; Return value:  Size  Location     Type
 33467 ;;                  1    wreg      void 
 33468 ;; Registers used:
 33469 ;;		wreg, status,2, status,0
 33470 ;; Tracked objects:
 33471 ;;		On entry : 0/0
 33472 ;;		On exit  : 0/0
 33473 ;;		Unchanged: 0/0
 33474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33479 ;;Total ram usage:        0 bytes
 33480 ;; Hardware stack levels used:    1
 33481 ;; Hardware stack levels required when called:    4
 33482 ;; This function calls:
 33483 ;;		Nothing
 33484 ;; This function is called by:
 33485 ;;		_Sch_SchmIntService
 33486 ;; This function uses a non-reentrant model
 33487 ;;
 33488                           
 33489                           	psect	text162
 33490  00622E                     __ptext162:
 33491                           	opt stack 0
 33492  00622E                     _UpdateOsCounters:
 33493                           	opt stack 11
 33494                           
 33495                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 33496                           
 33497                           ; BSR set to: 2
 33498                           ;incstack = 0
 33499  00622E  0E01               	movlw	1
 33500  006230  0103               	movlb	3	; () banked
 33501  006232  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 33502  006234  0E00               	movlw	0
 33503  006236  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 33504  006238  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 33505  00623A  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 33506                           
 33507                           ; BSR set to: 3
 33508  00623C  0012               	return		;funcret
 33509  00623E                     __end_of_UpdateOsCounters:
 33510                           	opt stack 0
 33511                           tosu	equ	0xFFF
 33512                           tosh	equ	0xFFE
 33513                           tosl	equ	0xFFD
 33514                           pclatu	equ	0xFFB
 33515                           pclath	equ	0xFFA
 33516                           tblptru	equ	0xFF8
 33517                           tblptrh	equ	0xFF7
 33518                           tblptrl	equ	0xFF6
 33519                           tablat	equ	0xFF5
 33520                           prodh	equ	0xFF4
 33521                           prodl	equ	0xFF3
 33522                           intcon	equ	0xFF2
 33523                           intcon2	equ	0xFF1
 33524                           intcon3	equ	0xFF0
 33525                           indf0	equ	0xFEF
 33526                           postinc0	equ	0xFEE
 33527                           plusw0	equ	0xFEB
 33528                           fsr0h	equ	0xFEA
 33529                           fsr0l	equ	0xFE9
 33530                           wreg	equ	0xFE8
 33531                           indf1	equ	0xFE7
 33532                           postinc1	equ	0xFE6
 33533                           postdec1	equ	0xFE5
 33534                           plusw1	equ	0xFE3
 33535                           fsr1h	equ	0xFE2
 33536                           fsr1l	equ	0xFE1
 33537                           bsr	equ	0xFE0
 33538                           indf2	equ	0xFDF
 33539                           postinc2	equ	0xFDE
 33540                           postdec2	equ	0xFDD
 33541                           plusw2	equ	0xFDB
 33542                           fsr2h	equ	0xFDA
 33543                           fsr2l	equ	0xFD9
 33544                           status	equ	0xFD8
 33545                           
 33546 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 33547 ;; Defined at:
 33548 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33549 ;; Parameters:    Size  Location     Type
 33550 ;;		None
 33551 ;; Auto vars:     Size  Location     Type
 33552 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 33553 ;; Return value:  Size  Location     Type
 33554 ;;                  1    wreg      void 
 33555 ;; Registers used:
 33556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33557 ;; Tracked objects:
 33558 ;;		On entry : 0/0
 33559 ;;		On exit  : 0/0
 33560 ;;		Unchanged: 0/0
 33561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33564 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33565 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33566 ;;Total ram usage:       10 bytes
 33567 ;; Hardware stack levels used:    1
 33568 ;; Hardware stack levels required when called:    7
 33569 ;; This function calls:
 33570 ;;		_I2cDummyTx
 33571 ;;		_OsAlrm_ClearOsAlarm
 33572 ;;		i1___wmul
 33573 ;; This function is called by:
 33574 ;;		_Sch_SchmIntService
 33575 ;; This function uses a non-reentrant model
 33576 ;;
 33577                           
 33578                           	psect	text163
 33579  0022DC                     __ptext163:
 33580                           	opt stack 0
 33581  0022DC                     _OsAlrm_ProcessOsAlarms:
 33582                           	opt stack 8
 33583                           
 33584                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 33585                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 33586                           
 33587                           ; BSR set to: 3
 33588                           ;incstack = 0
 33589  0022DC  0E00               	movlw	0
 33590  0022DE  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 33591  0022E0  0E00               	movlw	0
 33592  0022E2  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 33593  0022E4  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33594  0022E6  E105               	bnz	i1u1452_20
 33595  0022E8  0E14               	movlw	20
 33596  0022EA  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33597  0022EC  B0D8               	btfsc	status,0,c
 33598  0022EE  0012               	return	
 33599  0022F0  D001               	goto	i1l742
 33600  0022F2                     i1u1452_20:
 33601  0022F2  0012               	return	
 33602  0022F4                     i1l742:
 33603                           
 33604                           ;os_alarms.c: 121: {
 33605                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 33606  0022F4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33607  0022F8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33608  0022FC  0E00               	movlw	0
 33609  0022FE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33610  002300  0E0B               	movlw	11
 33611  002302  6E1B               	movwf	i1___wmul@multiplicand,c
 33612  002304  EC49  F02F         	call	i1___wmul	;wreg free
 33613  002308  0E00               	movlw	low _OsAlarms
 33614  00230A  2419               	addwf	?i1___wmul,w,c
 33615  00230C  6ED9               	movwf	fsr2l,c
 33616  00230E  0E06               	movlw	high _OsAlarms
 33617  002310  201A               	addwfc	?i1___wmul+1,w,c
 33618  002312  6EDA               	movwf	fsr2h,c
 33619  002314  04DE               	decf	postinc2,w,c
 33620  002316  A4D8               	btfss	status,2,c
 33621  002318  D086               	goto	i1u1456_29
 33622                           
 33623                           ;os_alarms.c: 124: {
 33624                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 33625  00231A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33626  00231E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33627  002322  0E00               	movlw	0
 33628  002324  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33629  002326  0E0B               	movlw	11
 33630  002328  6E1B               	movwf	i1___wmul@multiplicand,c
 33631  00232A  EC49  F02F         	call	i1___wmul	;wreg free
 33632  00232E  0E01               	movlw	1
 33633  002330  2619               	addwf	?i1___wmul,f,c
 33634  002332  0E00               	movlw	0
 33635  002334  221A               	addwfc	?i1___wmul+1,f,c
 33636  002336  0E00               	movlw	low _OsAlarms
 33637  002338  2419               	addwf	?i1___wmul,w,c
 33638  00233A  6ED9               	movwf	fsr2l,c
 33639  00233C  0E06               	movlw	high _OsAlarms
 33640  00233E  201A               	addwfc	?i1___wmul+1,w,c
 33641  002340  6EDA               	movwf	fsr2h,c
 33642  002342  2ADE               	incf	postinc2,f,c
 33643  002344  0E00               	movlw	0
 33644  002346  22DE               	addwfc	postinc2,f,c
 33645  002348  22DE               	addwfc	postinc2,f,c
 33646  00234A  22DE               	addwfc	postinc2,f,c
 33647                           
 33648                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 33649  00234C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33650  002350  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33651  002354  0E00               	movlw	0
 33652  002356  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33653  002358  0E0B               	movlw	11
 33654  00235A  6E1B               	movwf	i1___wmul@multiplicand,c
 33655  00235C  EC49  F02F         	call	i1___wmul	;wreg free
 33656  002360  0E05               	movlw	5
 33657  002362  2619               	addwf	?i1___wmul,f,c
 33658  002364  0E00               	movlw	0
 33659  002366  221A               	addwfc	?i1___wmul+1,f,c
 33660  002368  0E00               	movlw	low _OsAlarms
 33661  00236A  2419               	addwf	?i1___wmul,w,c
 33662  00236C  6ED9               	movwf	fsr2l,c
 33663  00236E  0E06               	movlw	high _OsAlarms
 33664  002370  201A               	addwfc	?i1___wmul+1,w,c
 33665  002372  6EDA               	movwf	fsr2h,c
 33666  002374  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33667  002378  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33668  00237C  0E00               	movlw	0
 33669  00237E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33670  002380  0E0B               	movlw	11
 33671  002382  6E1B               	movwf	i1___wmul@multiplicand,c
 33672  002384  EC49  F02F         	call	i1___wmul	;wreg free
 33673  002388  0E01               	movlw	1
 33674  00238A  2619               	addwf	?i1___wmul,f,c
 33675  00238C  0E00               	movlw	0
 33676  00238E  221A               	addwfc	?i1___wmul+1,f,c
 33677  002390  0E00               	movlw	low _OsAlarms
 33678  002392  2419               	addwf	?i1___wmul,w,c
 33679  002394  6EE1               	movwf	fsr1l,c
 33680  002396  0E06               	movlw	high _OsAlarms
 33681  002398  201A               	addwfc	?i1___wmul+1,w,c
 33682  00239A  6EE2               	movwf	fsr1h,c
 33683  00239C  50DE               	movf	postinc2,w,c
 33684  00239E  5CE6               	subwf	postinc1,w,c
 33685  0023A0  50DE               	movf	postinc2,w,c
 33686  0023A2  58E6               	subwfb	postinc1,w,c
 33687  0023A4  50DE               	movf	postinc2,w,c
 33688  0023A6  58E6               	subwfb	postinc1,w,c
 33689  0023A8  50DE               	movf	postinc2,w,c
 33690  0023AA  58E6               	subwfb	postinc1,w,c
 33691  0023AC  A0D8               	btfss	status,0,c
 33692  0023AE  D03B               	goto	i1u1456_29
 33693                           
 33694                           ;os_alarms.c: 129: {
 33695                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 33696  0023B0  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33697  0023B2  EC8B  F029         	call	_OsAlrm_ClearOsAlarm
 33698                           
 33699                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 33700  0023B6  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33701  0023BA  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33702  0023BE  0E00               	movlw	0
 33703  0023C0  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33704  0023C2  0E0B               	movlw	11
 33705  0023C4  6E1B               	movwf	i1___wmul@multiplicand,c
 33706  0023C6  EC49  F02F         	call	i1___wmul	;wreg free
 33707  0023CA  0E09               	movlw	9
 33708  0023CC  2619               	addwf	?i1___wmul,f,c
 33709  0023CE  0E00               	movlw	0
 33710  0023D0  221A               	addwfc	?i1___wmul+1,f,c
 33711  0023D2  0E00               	movlw	low _OsAlarms
 33712  0023D4  2419               	addwf	?i1___wmul,w,c
 33713  0023D6  6ED9               	movwf	fsr2l,c
 33714  0023D8  0E06               	movlw	high _OsAlarms
 33715  0023DA  201A               	addwfc	?i1___wmul+1,w,c
 33716  0023DC  6EDA               	movwf	fsr2h,c
 33717  0023DE  50DE               	movf	postinc2,w,c
 33718  0023E0  10DE               	iorwf	postinc2,w,c
 33719  0023E2  B4D8               	btfsc	status,2,c
 33720  0023E4  D020               	goto	i1u1456_29
 33721                           
 33722                           ;os_alarms.c: 134: {
 33723                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 33724  0023E6  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33725  0023EA  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33726  0023EE  0E00               	movlw	0
 33727  0023F0  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33728  0023F2  0E0B               	movlw	11
 33729  0023F4  6E1B               	movwf	i1___wmul@multiplicand,c
 33730  0023F6  EC49  F02F         	call	i1___wmul	;wreg free
 33731  0023FA  0E09               	movlw	9
 33732  0023FC  2619               	addwf	?i1___wmul,f,c
 33733  0023FE  0E00               	movlw	0
 33734  002400  221A               	addwfc	?i1___wmul+1,f,c
 33735  002402  0E00               	movlw	low _OsAlarms
 33736  002404  2419               	addwf	?i1___wmul,w,c
 33737  002406  6ED9               	movwf	fsr2l,c
 33738  002408  0E06               	movlw	high _OsAlarms
 33739  00240A  201A               	addwfc	?i1___wmul+1,w,c
 33740  00240C  6EDA               	movwf	fsr2h,c
 33741  00240E  D801               	call	i1u1456_28
 33742  002410  D00A               	goto	i1u1456_29
 33743  002412                     i1u1456_28:
 33744  002412  0005               	push	
 33745  002414  6EFA               	movwf	pclath,c
 33746  002416  50DE               	movf	postinc2,w,c
 33747  002418  6EFD               	movwf	tosl,c
 33748  00241A  50DE               	movf	postinc2,w,c
 33749  00241C  6EFE               	movwf	tosh,c
 33750  00241E  50F8               	movf	tblptru,w,c
 33751  002420  6EFF               	movwf	tosu,c
 33752  002422  50FA               	movf	pclath,w,c
 33753  002424  0012               	return		;indir
 33754  002426                     i1u1456_29:
 33755  002426  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 33756  002428  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 33757  00242A  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33758  00242C  E101               	bnz	i1l747
 33759  00242E  D75C               	goto	L73
 33760  002430                     i1l747:
 33761  002430  0012               	return		;funcret
 33762  002432                     __end_of_OsAlrm_ProcessOsAlarms:
 33763                           	opt stack 0
 33764                           tosu	equ	0xFFF
 33765                           tosh	equ	0xFFE
 33766                           tosl	equ	0xFFD
 33767                           pclatu	equ	0xFFB
 33768                           pclath	equ	0xFFA
 33769                           tblptru	equ	0xFF8
 33770                           tblptrh	equ	0xFF7
 33771                           tblptrl	equ	0xFF6
 33772                           tablat	equ	0xFF5
 33773                           prodh	equ	0xFF4
 33774                           prodl	equ	0xFF3
 33775                           intcon	equ	0xFF2
 33776                           intcon2	equ	0xFF1
 33777                           intcon3	equ	0xFF0
 33778                           indf0	equ	0xFEF
 33779                           postinc0	equ	0xFEE
 33780                           plusw0	equ	0xFEB
 33781                           fsr0h	equ	0xFEA
 33782                           fsr0l	equ	0xFE9
 33783                           wreg	equ	0xFE8
 33784                           indf1	equ	0xFE7
 33785                           postinc1	equ	0xFE6
 33786                           postdec1	equ	0xFE5
 33787                           plusw1	equ	0xFE3
 33788                           fsr1h	equ	0xFE2
 33789                           fsr1l	equ	0xFE1
 33790                           bsr	equ	0xFE0
 33791                           indf2	equ	0xFDF
 33792                           postinc2	equ	0xFDE
 33793                           postdec2	equ	0xFDD
 33794                           plusw2	equ	0xFDB
 33795                           fsr2h	equ	0xFDA
 33796                           fsr2l	equ	0xFD9
 33797                           status	equ	0xFD8
 33798                           
 33799 ;; *************** function i1___wmul *****************
 33800 ;; Defined at:
 33801 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33802 ;; Parameters:    Size  Location     Type
 33803 ;;  multiplier      2   24[COMRAM] unsigned int 
 33804 ;;  multiplicand    2   26[COMRAM] unsigned int 
 33805 ;; Auto vars:     Size  Location     Type
 33806 ;;  __wmul          2   28[COMRAM] unsigned int 
 33807 ;; Return value:  Size  Location     Type
 33808 ;;                  2   24[COMRAM] unsigned int 
 33809 ;; Registers used:
 33810 ;;		wreg, status,2, status,0, prodl, prodh
 33811 ;; Tracked objects:
 33812 ;;		On entry : 0/0
 33813 ;;		On exit  : 0/0
 33814 ;;		Unchanged: 0/0
 33815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33819 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33820 ;;Total ram usage:        6 bytes
 33821 ;; Hardware stack levels used:    1
 33822 ;; Hardware stack levels required when called:    4
 33823 ;; This function calls:
 33824 ;;		Nothing
 33825 ;; This function is called by:
 33826 ;;		_OsAlrm_ProcessOsAlarms
 33827 ;; This function uses a non-reentrant model
 33828 ;;
 33829                           
 33830                           	psect	text164
 33831  005E92                     __ptext164:
 33832                           	opt stack 0
 33833  005E92                     i1___wmul:
 33834                           	opt stack 10
 33835                           
 33836                           ;incstack = 0
 33837  005E92  5019               	movf	i1___wmul@multiplier,w,c
 33838  005E94  021B               	mulwf	i1___wmul@multiplicand,c
 33839  005E96  CFF3 F01D          	movff	prodl,i1___wmul@product
 33840  005E9A  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 33841  005E9E  5019               	movf	i1___wmul@multiplier,w,c
 33842  005EA0  021C               	mulwf	i1___wmul@multiplicand+1,c
 33843  005EA2  50F3               	movf	prodl,w,c
 33844  005EA4  261E               	addwf	i1___wmul@product+1,f,c
 33845  005EA6  501A               	movf	i1___wmul@multiplier+1,w,c
 33846  005EA8  021B               	mulwf	i1___wmul@multiplicand,c
 33847  005EAA  50F3               	movf	prodl,w,c
 33848  005EAC  261E               	addwf	i1___wmul@product+1,f,c
 33849  005EAE  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 33850  005EB2  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 33851  005EB6  0012               	return	
 33852  005EB8                     __end_ofi1___wmul:
 33853                           	opt stack 0
 33854                           tosu	equ	0xFFF
 33855                           tosh	equ	0xFFE
 33856                           tosl	equ	0xFFD
 33857                           pclatu	equ	0xFFB
 33858                           pclath	equ	0xFFA
 33859                           tblptru	equ	0xFF8
 33860                           tblptrh	equ	0xFF7
 33861                           tblptrl	equ	0xFF6
 33862                           tablat	equ	0xFF5
 33863                           prodh	equ	0xFF4
 33864                           prodl	equ	0xFF3
 33865                           intcon	equ	0xFF2
 33866                           intcon2	equ	0xFF1
 33867                           intcon3	equ	0xFF0
 33868                           indf0	equ	0xFEF
 33869                           postinc0	equ	0xFEE
 33870                           plusw0	equ	0xFEB
 33871                           fsr0h	equ	0xFEA
 33872                           fsr0l	equ	0xFE9
 33873                           wreg	equ	0xFE8
 33874                           indf1	equ	0xFE7
 33875                           postinc1	equ	0xFE6
 33876                           postdec1	equ	0xFE5
 33877                           plusw1	equ	0xFE3
 33878                           fsr1h	equ	0xFE2
 33879                           fsr1l	equ	0xFE1
 33880                           bsr	equ	0xFE0
 33881                           indf2	equ	0xFDF
 33882                           postinc2	equ	0xFDE
 33883                           postdec2	equ	0xFDD
 33884                           plusw2	equ	0xFDB
 33885                           fsr2h	equ	0xFDA
 33886                           fsr2l	equ	0xFD9
 33887                           status	equ	0xFD8
 33888                           
 33889 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 33890 ;; Defined at:
 33891 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33892 ;; Parameters:    Size  Location     Type
 33893 ;;  OsAlarmId       1    wreg     unsigned char 
 33894 ;; Auto vars:     Size  Location     Type
 33895 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 33896 ;; Return value:  Size  Location     Type
 33897 ;;                  1    wreg      void 
 33898 ;; Registers used:
 33899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33900 ;; Tracked objects:
 33901 ;;		On entry : 0/0
 33902 ;;		On exit  : 0/0
 33903 ;;		Unchanged: 0/0
 33904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33909 ;;Total ram usage:        1 bytes
 33910 ;; Hardware stack levels used:    1
 33911 ;; Hardware stack levels required when called:    4
 33912 ;; This function calls:
 33913 ;;		Nothing
 33914 ;; This function is called by:
 33915 ;;		_OsAlrm_ProcessOsAlarms
 33916 ;; This function uses a non-reentrant model
 33917 ;;
 33918                           
 33919                           	psect	text165
 33920  005316                     __ptext165:
 33921                           	opt stack 0
 33922  005316                     _OsAlrm_ClearOsAlarm:
 33923                           	opt stack 10
 33924                           
 33925                           ;incstack = 0
 33926                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 33927  005316  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 33928                           
 33929                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 33930  005318  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33931  00531A  0D0B               	mullw	11
 33932  00531C  0E00               	movlw	low _OsAlarms
 33933  00531E  24F3               	addwf	prodl,w,c
 33934  005320  6ED9               	movwf	fsr2l,c
 33935  005322  0E06               	movlw	high _OsAlarms
 33936  005324  20F4               	addwfc	prodh,w,c
 33937  005326  6EDA               	movwf	fsr2h,c
 33938  005328  0E00               	movlw	0
 33939  00532A  6EDF               	movwf	indf2,c
 33940                           
 33941                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 33942  00532C  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33943  00532E  0D0B               	mullw	11
 33944  005330  0E01               	movlw	1
 33945  005332  26F3               	addwf	prodl,f,c
 33946  005334  0E00               	movlw	0
 33947  005336  22F4               	addwfc	prodh,f,c
 33948  005338  0E00               	movlw	low _OsAlarms
 33949  00533A  24F3               	addwf	prodl,w,c
 33950  00533C  6ED9               	movwf	fsr2l,c
 33951  00533E  0E06               	movlw	high _OsAlarms
 33952  005340  20F4               	addwfc	prodh,w,c
 33953  005342  6EDA               	movwf	fsr2h,c
 33954  005344  6ADE               	clrf	postinc2,c
 33955  005346  6ADE               	clrf	postinc2,c
 33956  005348  6ADE               	clrf	postinc2,c
 33957  00534A  6ADD               	clrf	postdec2,c
 33958                           
 33959                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 33960  00534C  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33961  00534E  0D0B               	mullw	11
 33962  005350  0E05               	movlw	5
 33963  005352  26F3               	addwf	prodl,f,c
 33964  005354  0E00               	movlw	0
 33965  005356  22F4               	addwfc	prodh,f,c
 33966  005358  0E00               	movlw	low _OsAlarms
 33967  00535A  24F3               	addwf	prodl,w,c
 33968  00535C  6ED9               	movwf	fsr2l,c
 33969  00535E  0E06               	movlw	high _OsAlarms
 33970  005360  20F4               	addwfc	prodh,w,c
 33971  005362  6EDA               	movwf	fsr2h,c
 33972  005364  6ADE               	clrf	postinc2,c
 33973  005366  6ADE               	clrf	postinc2,c
 33974  005368  6ADE               	clrf	postinc2,c
 33975  00536A  6ADD               	clrf	postdec2,c
 33976  00536C  0012               	return		;funcret
 33977  00536E                     __end_of_OsAlrm_ClearOsAlarm:
 33978                           	opt stack 0
 33979                           tosu	equ	0xFFF
 33980                           tosh	equ	0xFFE
 33981                           tosl	equ	0xFFD
 33982                           pclatu	equ	0xFFB
 33983                           pclath	equ	0xFFA
 33984                           tblptru	equ	0xFF8
 33985                           tblptrh	equ	0xFF7
 33986                           tblptrl	equ	0xFF6
 33987                           tablat	equ	0xFF5
 33988                           prodh	equ	0xFF4
 33989                           prodl	equ	0xFF3
 33990                           intcon	equ	0xFF2
 33991                           intcon2	equ	0xFF1
 33992                           intcon3	equ	0xFF0
 33993                           indf0	equ	0xFEF
 33994                           postinc0	equ	0xFEE
 33995                           plusw0	equ	0xFEB
 33996                           fsr0h	equ	0xFEA
 33997                           fsr0l	equ	0xFE9
 33998                           wreg	equ	0xFE8
 33999                           indf1	equ	0xFE7
 34000                           postinc1	equ	0xFE6
 34001                           postdec1	equ	0xFE5
 34002                           plusw1	equ	0xFE3
 34003                           fsr1h	equ	0xFE2
 34004                           fsr1l	equ	0xFE1
 34005                           bsr	equ	0xFE0
 34006                           indf2	equ	0xFDF
 34007                           postinc2	equ	0xFDE
 34008                           postdec2	equ	0xFDD
 34009                           plusw2	equ	0xFDB
 34010                           fsr2h	equ	0xFDA
 34011                           fsr2l	equ	0xFD9
 34012                           status	equ	0xFD8
 34013                           
 34014 ;; *************** function _I2cDummyTx *****************
 34015 ;; Defined at:
 34016 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34017 ;; Parameters:    Size  Location     Type
 34018 ;;		None
 34019 ;; Auto vars:     Size  Location     Type
 34020 ;;		None
 34021 ;; Return value:  Size  Location     Type
 34022 ;;                  1    wreg      void 
 34023 ;; Registers used:
 34024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34025 ;; Tracked objects:
 34026 ;;		On entry : 0/0
 34027 ;;		On exit  : 0/0
 34028 ;;		Unchanged: 0/0
 34029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34034 ;;Total ram usage:        0 bytes
 34035 ;; Hardware stack levels used:    1
 34036 ;; Hardware stack levels required when called:    6
 34037 ;; This function calls:
 34038 ;;		i1_I2cSlv_SendI2cMsg
 34039 ;; This function is called by:
 34040 ;;		_I2cSlv_MainTask
 34041 ;;		_OsAlrm_ProcessOsAlarms
 34042 ;; This function uses a non-reentrant model
 34043 ;;
 34044                           
 34045                           	psect	text166
 34046  0060AC                     __ptext166:
 34047                           	opt stack 0
 34048  0060AC                     _I2cDummyTx:
 34049                           	opt stack 8
 34050                           
 34051                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 34052                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 34053                           
 34054                           ;incstack = 0
 34055  0060AC  0EFE               	movlw	low I2cDummyTx@DummyBuffer
 34056  0060AE  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 34057  0060B0  0E01               	movlw	high I2cDummyTx@DummyBuffer
 34058  0060B2  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 34059  0060B4  0E00               	movlw	0
 34060  0060B6  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 34061  0060B8  0E01               	movlw	1
 34062  0060BA  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 34063  0060BC  ECC8  F02D         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 34064                           
 34065                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 34066  0060C0  0E01               	movlw	1
 34067  0060C2  0101               	movlb	1	; () banked
 34068  0060C4  6FEA               	movwf	_I2cBusStatus& (0+255),b
 34069                           
 34070                           ; BSR set to: 1
 34071  0060C6  0012               	return		;funcret
 34072  0060C8                     __end_of_I2cDummyTx:
 34073                           	opt stack 0
 34074                           tosu	equ	0xFFF
 34075                           tosh	equ	0xFFE
 34076                           tosl	equ	0xFFD
 34077                           pclatu	equ	0xFFB
 34078                           pclath	equ	0xFFA
 34079                           tblptru	equ	0xFF8
 34080                           tblptrh	equ	0xFF7
 34081                           tblptrl	equ	0xFF6
 34082                           tablat	equ	0xFF5
 34083                           prodh	equ	0xFF4
 34084                           prodl	equ	0xFF3
 34085                           intcon	equ	0xFF2
 34086                           intcon2	equ	0xFF1
 34087                           intcon3	equ	0xFF0
 34088                           indf0	equ	0xFEF
 34089                           postinc0	equ	0xFEE
 34090                           plusw0	equ	0xFEB
 34091                           fsr0h	equ	0xFEA
 34092                           fsr0l	equ	0xFE9
 34093                           wreg	equ	0xFE8
 34094                           indf1	equ	0xFE7
 34095                           postinc1	equ	0xFE6
 34096                           postdec1	equ	0xFE5
 34097                           plusw1	equ	0xFE3
 34098                           fsr1h	equ	0xFE2
 34099                           fsr1l	equ	0xFE1
 34100                           bsr	equ	0xFE0
 34101                           indf2	equ	0xFDF
 34102                           postinc2	equ	0xFDE
 34103                           postdec2	equ	0xFDD
 34104                           plusw2	equ	0xFDB
 34105                           fsr2h	equ	0xFDA
 34106                           fsr2l	equ	0xFD9
 34107                           status	equ	0xFD8
 34108                           
 34109 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 34110 ;; Defined at:
 34111 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34112 ;; Parameters:    Size  Location     Type
 34113 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 34114 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 34115 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 34116 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 34117 ;;  DataLenght      1   30[COMRAM] unsigned char 
 34118 ;; Auto vars:     Size  Location     Type
 34119 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 34120 ;; Return value:  Size  Location     Type
 34121 ;;                  1    wreg      unsigned char 
 34122 ;; Registers used:
 34123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34124 ;; Tracked objects:
 34125 ;;		On entry : 0/0
 34126 ;;		On exit  : 0/0
 34127 ;;		Unchanged: 0/0
 34128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34132 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34133 ;;Total ram usage:        5 bytes
 34134 ;; Hardware stack levels used:    1
 34135 ;; Hardware stack levels required when called:    5
 34136 ;; This function calls:
 34137 ;;		i1_GenerateEvt
 34138 ;; This function is called by:
 34139 ;;		_I2cDummyTx
 34140 ;; This function uses a non-reentrant model
 34141 ;;
 34142                           
 34143                           	psect	text167
 34144  005B90                     __ptext167:
 34145                           	opt stack 0
 34146  005B90                     i1_I2cSlv_SendI2cMsg:
 34147                           	opt stack 8
 34148                           
 34149                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 34150                           
 34151                           ; BSR set to: 1
 34152                           ;incstack = 0
 34153  005B90  0E00               	movlw	0
 34154  005B92  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34155                           
 34156                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 34157  005B94  0100               	movlb	0	; () banked
 34158  005B96  05CE               	decf	_I2cComSts& (0+255),w,b
 34159  005B98  B4D8               	btfsc	status,2,c
 34160  005B9A  D014               	goto	i1l1409
 34161                           
 34162                           ; BSR set to: 0
 34163                           ;i2c_slv.c: 257: {
 34164                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 34165  005B9C  C01E  F39E         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 34166                           
 34167                           ; BSR set to: 0
 34168                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 34169  005BA0  0E00               	movlw	0
 34170  005BA2  0103               	movlb	3	; () banked
 34171  005BA4  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 34172                           
 34173                           ; BSR set to: 3
 34174                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 34175  005BA6  C01F  F3A2         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 34176                           
 34177                           ; BSR set to: 3
 34178                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 34179  005BAA  C01C  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 34180  005BAE  C01D  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 34181                           
 34182                           ; BSR set to: 3
 34183                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 34184  005BB2  0ED8               	movlw	low _I2cWriteDataEvt
 34185  005BB4  6E19               	movwf	i1GenerateEvt@Event,c
 34186  005BB6  0E00               	movlw	high _I2cWriteDataEvt
 34187  005BB8  6E1A               	movwf	i1GenerateEvt@Event+1,c
 34188  005BBA  ECC4  F030         	call	i1_GenerateEvt	;wreg free
 34189                           
 34190                           ;i2c_slv.c: 267: TxSts = 1u;
 34191  005BBE  0E01               	movlw	1
 34192  005BC0  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34193                           
 34194                           ;i2c_slv.c: 268: }
 34195  005BC2  0012               	return	
 34196  005BC4                     i1l1409:
 34197                           
 34198                           ;i2c_slv.c: 269: else
 34199                           ;i2c_slv.c: 270: {
 34200                           ;i2c_slv.c: 272: TxSts = 0u;
 34201  005BC4  0E00               	movlw	0
 34202  005BC6  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34203  005BC8  0012               	return	
 34204  005BCA                     __end_ofi1_I2cSlv_SendI2cMsg:
 34205                           	opt stack 0
 34206                           tosu	equ	0xFFF
 34207                           tosh	equ	0xFFE
 34208                           tosl	equ	0xFFD
 34209                           pclatu	equ	0xFFB
 34210                           pclath	equ	0xFFA
 34211                           tblptru	equ	0xFF8
 34212                           tblptrh	equ	0xFF7
 34213                           tblptrl	equ	0xFF6
 34214                           tablat	equ	0xFF5
 34215                           prodh	equ	0xFF4
 34216                           prodl	equ	0xFF3
 34217                           intcon	equ	0xFF2
 34218                           intcon2	equ	0xFF1
 34219                           intcon3	equ	0xFF0
 34220                           indf0	equ	0xFEF
 34221                           postinc0	equ	0xFEE
 34222                           plusw0	equ	0xFEB
 34223                           fsr0h	equ	0xFEA
 34224                           fsr0l	equ	0xFE9
 34225                           wreg	equ	0xFE8
 34226                           indf1	equ	0xFE7
 34227                           postinc1	equ	0xFE6
 34228                           postdec1	equ	0xFE5
 34229                           plusw1	equ	0xFE3
 34230                           fsr1h	equ	0xFE2
 34231                           fsr1l	equ	0xFE1
 34232                           bsr	equ	0xFE0
 34233                           indf2	equ	0xFDF
 34234                           postinc2	equ	0xFDE
 34235                           postdec2	equ	0xFDD
 34236                           plusw2	equ	0xFDB
 34237                           fsr2h	equ	0xFDA
 34238                           fsr2l	equ	0xFD9
 34239                           status	equ	0xFD8
 34240                           
 34241 ;; *************** function i1_GenerateEvt *****************
 34242 ;; Defined at:
 34243 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34244 ;; Parameters:    Size  Location     Type
 34245 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 34246 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34247 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34248 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34249 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34250 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34251 ;; Auto vars:     Size  Location     Type
 34252 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 34253 ;; Return value:  Size  Location     Type
 34254 ;;                  1    wreg      enum E7699
 34255 ;; Registers used:
 34256 ;;		wreg, fsr2l, fsr2h, status,2
 34257 ;; Tracked objects:
 34258 ;;		On entry : 0/0
 34259 ;;		On exit  : 0/0
 34260 ;;		Unchanged: 0/0
 34261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34266 ;;Total ram usage:        3 bytes
 34267 ;; Hardware stack levels used:    1
 34268 ;; Hardware stack levels required when called:    4
 34269 ;; This function calls:
 34270 ;;		Nothing
 34271 ;; This function is called by:
 34272 ;;		i1_I2cSlv_SendI2cMsg
 34273 ;; This function uses a non-reentrant model
 34274 ;;
 34275                           
 34276                           	psect	text168
 34277  006188                     __ptext168:
 34278                           	opt stack 0
 34279  006188                     i1_GenerateEvt:
 34280                           	opt stack 8
 34281                           
 34282                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34283                           
 34284                           ;incstack = 0
 34285  006188  0E00               	movlw	0
 34286  00618A  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34287                           
 34288                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34289  00618C  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 34290  006190  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 34291  006194  0E02               	movlw	2
 34292  006196  6EDF               	movwf	indf2,c
 34293                           
 34294                           ;os_ser.c: 83: EventStatus = EventSent;
 34295  006198  0E02               	movlw	2
 34296  00619A  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34297  00619C  0012               	return	
 34298  00619E                     __end_ofi1_GenerateEvt:
 34299                           	opt stack 0
 34300                           tosu	equ	0xFFF
 34301                           tosh	equ	0xFFE
 34302                           tosl	equ	0xFFD
 34303                           pclatu	equ	0xFFB
 34304                           pclath	equ	0xFFA
 34305                           tblptru	equ	0xFF8
 34306                           tblptrh	equ	0xFF7
 34307                           tblptrl	equ	0xFF6
 34308                           tablat	equ	0xFF5
 34309                           prodh	equ	0xFF4
 34310                           prodl	equ	0xFF3
 34311                           intcon	equ	0xFF2
 34312                           intcon2	equ	0xFF1
 34313                           intcon3	equ	0xFF0
 34314                           indf0	equ	0xFEF
 34315                           postinc0	equ	0xFEE
 34316                           plusw0	equ	0xFEB
 34317                           fsr0h	equ	0xFEA
 34318                           fsr0l	equ	0xFE9
 34319                           wreg	equ	0xFE8
 34320                           indf1	equ	0xFE7
 34321                           postinc1	equ	0xFE6
 34322                           postdec1	equ	0xFE5
 34323                           plusw1	equ	0xFE3
 34324                           fsr1h	equ	0xFE2
 34325                           fsr1l	equ	0xFE1
 34326                           bsr	equ	0xFE0
 34327                           indf2	equ	0xFDF
 34328                           postinc2	equ	0xFDE
 34329                           postdec2	equ	0xFDD
 34330                           plusw2	equ	0xFDB
 34331                           fsr2h	equ	0xFDA
 34332                           fsr2l	equ	0xFD9
 34333                           status	equ	0xFD8
 34334                           
 34335 ;; *************** function _HighPriorityIsr *****************
 34336 ;; Defined at:
 34337 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 34338 ;; Parameters:    Size  Location     Type
 34339 ;;		None
 34340 ;; Auto vars:     Size  Location     Type
 34341 ;;		None
 34342 ;; Return value:  Size  Location     Type
 34343 ;;                  1    wreg      void 
 34344 ;; Registers used:
 34345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34346 ;; Tracked objects:
 34347 ;;		On entry : 0/0
 34348 ;;		On exit  : 0/0
 34349 ;;		Unchanged: 0/0
 34350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34353 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34354 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34355 ;;Total ram usage:       18 bytes
 34356 ;; Hardware stack levels used:    1
 34357 ;; Hardware stack levels required when called:    3
 34358 ;; This function calls:
 34359 ;;		_Mcu_Int0Isr
 34360 ;;		_Mcu_Int1Isr
 34361 ;;		_Rtcc_RtcIsr
 34362 ;;		_Uart_Uart1RxIsr
 34363 ;; This function is called by:
 34364 ;;		Interrupt level 2
 34365 ;; This function uses a non-reentrant model
 34366 ;;
 34367                           
 34368                           	psect	intcode
 34369  000008                     __pintcode:
 34370                           	opt stack 0
 34371  000008                     _HighPriorityIsr:
 34372                           	opt stack 8
 34373                           
 34374                           ;incstack = 0
 34375  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34376  00000A  EF2B  F021         	goto	int_func
 34377                           tosu	equ	0xFFF
 34378                           tosh	equ	0xFFE
 34379                           tosl	equ	0xFFD
 34380                           pclatu	equ	0xFFB
 34381                           pclath	equ	0xFFA
 34382                           tblptru	equ	0xFF8
 34383                           tblptrh	equ	0xFF7
 34384                           tblptrl	equ	0xFF6
 34385                           tablat	equ	0xFF5
 34386                           prodh	equ	0xFF4
 34387                           prodl	equ	0xFF3
 34388                           intcon	equ	0xFF2
 34389                           intcon2	equ	0xFF1
 34390                           intcon3	equ	0xFF0
 34391                           indf0	equ	0xFEF
 34392                           postinc0	equ	0xFEE
 34393                           plusw0	equ	0xFEB
 34394                           fsr0h	equ	0xFEA
 34395                           fsr0l	equ	0xFE9
 34396                           wreg	equ	0xFE8
 34397                           indf1	equ	0xFE7
 34398                           postinc1	equ	0xFE6
 34399                           postdec1	equ	0xFE5
 34400                           plusw1	equ	0xFE3
 34401                           fsr1h	equ	0xFE2
 34402                           fsr1l	equ	0xFE1
 34403                           bsr	equ	0xFE0
 34404                           indf2	equ	0xFDF
 34405                           postinc2	equ	0xFDE
 34406                           postdec2	equ	0xFDD
 34407                           plusw2	equ	0xFDB
 34408                           fsr2h	equ	0xFDA
 34409                           fsr2l	equ	0xFD9
 34410                           status	equ	0xFD8
 34411                           
 34412                           	psect	intcode_body
 34413  004256                     __pintcode_body:
 34414                           	opt stack 8
 34415  004256                     int_func:
 34416                           	opt stack 8
 34417  004256  CFFA F007          	movff	pclath,??_HighPriorityIsr
 34418  00425A  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 34419  00425E  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 34420  004262  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 34421  004266  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 34422  00426A  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 34423  00426E  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 34424  004272  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 34425  004276  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 34426  00427A  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 34427  00427E  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 34428  004282  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 34429  004286  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 34430  00428A  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 34431  00428E  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 34432  004292  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 34433  004296  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 34434  00429A  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 34435                           
 34436                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 34437  00429E  B2F2               	btfsc	intcon,1,c	;volatile
 34438                           
 34439                           ;irq.c: 158: {
 34440                           ;irq.c: 160: Mcu_Int0Isr();
 34441  0042A0  EC6A  F031         	call	_Mcu_Int0Isr	;wreg free
 34442                           
 34443                           ;irq.c: 161: }
 34444                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 34445  0042A4  B0F0               	btfsc	intcon3,0,c	;volatile
 34446                           
 34447                           ;irq.c: 167: {
 34448                           ;irq.c: 169: Mcu_Int1Isr();
 34449  0042A6  EC68  F031         	call	_Mcu_Int1Isr	;wreg free
 34450                           
 34451                           ;irq.c: 170: }
 34452                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 34453  0042AA  B0A4               	btfsc	4004,0,c	;volatile
 34454                           
 34455                           ;irq.c: 203: {
 34456                           ;irq.c: 205: Rtcc_RtcIsr();
 34457  0042AC  EC66  F031         	call	_Rtcc_RtcIsr	;wreg free
 34458                           
 34459                           ;irq.c: 206: }
 34460                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 34461  0042B0  BA9E               	btfsc	3998,5,c	;volatile
 34462                           
 34463                           ;irq.c: 212: {
 34464                           ;irq.c: 214: Uart_Uart1RxIsr();
 34465  0042B2  EC1F  F031         	call	_Uart_Uart1RxIsr	;wreg free
 34466  0042B6  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 34467  0042BA  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 34468  0042BE  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 34469  0042C2  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 34470  0042C6  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 34471  0042CA  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 34472  0042CE  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 34473  0042D2  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 34474  0042D6  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 34475  0042DA  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 34476  0042DE  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 34477  0042E2  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 34478  0042E6  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 34479  0042EA  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 34480  0042EE  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 34481  0042F2  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 34482  0042F6  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 34483  0042FA  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 34484  0042FE  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34485  004300  0011               	retfie		f
 34486  004302                     __end_of_HighPriorityIsr:
 34487                           	opt stack 0
 34488                           tosu	equ	0xFFF
 34489                           tosh	equ	0xFFE
 34490                           tosl	equ	0xFFD
 34491                           pclatu	equ	0xFFB
 34492                           pclath	equ	0xFFA
 34493                           tblptru	equ	0xFF8
 34494                           tblptrh	equ	0xFF7
 34495                           tblptrl	equ	0xFF6
 34496                           tablat	equ	0xFF5
 34497                           prodh	equ	0xFF4
 34498                           prodl	equ	0xFF3
 34499                           intcon	equ	0xFF2
 34500                           intcon2	equ	0xFF1
 34501                           intcon3	equ	0xFF0
 34502                           indf0	equ	0xFEF
 34503                           postinc0	equ	0xFEE
 34504                           plusw0	equ	0xFEB
 34505                           fsr0h	equ	0xFEA
 34506                           fsr0l	equ	0xFE9
 34507                           wreg	equ	0xFE8
 34508                           indf1	equ	0xFE7
 34509                           postinc1	equ	0xFE6
 34510                           postdec1	equ	0xFE5
 34511                           plusw1	equ	0xFE3
 34512                           fsr1h	equ	0xFE2
 34513                           fsr1l	equ	0xFE1
 34514                           bsr	equ	0xFE0
 34515                           indf2	equ	0xFDF
 34516                           postinc2	equ	0xFDE
 34517                           postdec2	equ	0xFDD
 34518                           plusw2	equ	0xFDB
 34519                           fsr2h	equ	0xFDA
 34520                           fsr2l	equ	0xFD9
 34521                           status	equ	0xFD8
 34522                           
 34523 ;; *************** function _Uart_Uart1RxIsr *****************
 34524 ;; Defined at:
 34525 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34526 ;; Parameters:    Size  Location     Type
 34527 ;;		None
 34528 ;; Auto vars:     Size  Location     Type
 34529 ;;		None
 34530 ;; Return value:  Size  Location     Type
 34531 ;;                  1    wreg      void 
 34532 ;; Registers used:
 34533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34534 ;; Tracked objects:
 34535 ;;		On entry : 0/0
 34536 ;;		On exit  : 0/0
 34537 ;;		Unchanged: 0/0
 34538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34543 ;;Total ram usage:        0 bytes
 34544 ;; Hardware stack levels used:    1
 34545 ;; Hardware stack levels required when called:    2
 34546 ;; This function calls:
 34547 ;;		_Uart_MdmGsmGprsReadService
 34548 ;; This function is called by:
 34549 ;;		_HighPriorityIsr
 34550 ;; This function uses a non-reentrant model
 34551 ;;
 34552                           
 34553                           	psect	text170
 34554  00623E                     __ptext170:
 34555                           	opt stack 0
 34556  00623E                     _Uart_Uart1RxIsr:
 34557                           	opt stack 8
 34558                           
 34559                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 34560                           ;uart_drv.c: 590: UartRxData = RCREG1;
 34561                           
 34562                           ;incstack = 0
 34563  00623E  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 34564                           
 34565                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 34566  006242  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 34567  006246  0E01               	movlw	1
 34568  006248  ECC7  F01D         	call	_Uart_MdmGsmGprsReadService
 34569  00624C  0012               	return		;funcret
 34570  00624E                     __end_of_Uart_Uart1RxIsr:
 34571                           	opt stack 0
 34572                           tosu	equ	0xFFF
 34573                           tosh	equ	0xFFE
 34574                           tosl	equ	0xFFD
 34575                           pclatu	equ	0xFFB
 34576                           pclath	equ	0xFFA
 34577                           tblptru	equ	0xFF8
 34578                           tblptrh	equ	0xFF7
 34579                           tblptrl	equ	0xFF6
 34580                           tablat	equ	0xFF5
 34581                           prodh	equ	0xFF4
 34582                           prodl	equ	0xFF3
 34583                           intcon	equ	0xFF2
 34584                           intcon2	equ	0xFF1
 34585                           intcon3	equ	0xFF0
 34586                           indf0	equ	0xFEF
 34587                           postinc0	equ	0xFEE
 34588                           plusw0	equ	0xFEB
 34589                           fsr0h	equ	0xFEA
 34590                           fsr0l	equ	0xFE9
 34591                           wreg	equ	0xFE8
 34592                           indf1	equ	0xFE7
 34593                           postinc1	equ	0xFE6
 34594                           postdec1	equ	0xFE5
 34595                           plusw1	equ	0xFE3
 34596                           fsr1h	equ	0xFE2
 34597                           fsr1l	equ	0xFE1
 34598                           bsr	equ	0xFE0
 34599                           indf2	equ	0xFDF
 34600                           postinc2	equ	0xFDE
 34601                           postdec2	equ	0xFDD
 34602                           plusw2	equ	0xFDB
 34603                           fsr2h	equ	0xFDA
 34604                           fsr2l	equ	0xFD9
 34605                           status	equ	0xFD8
 34606                           
 34607 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 34608 ;; Defined at:
 34609 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34610 ;; Parameters:    Size  Location     Type
 34611 ;;  Module          1    wreg     unsigned char 
 34612 ;;  UartData        1    3[COMRAM] unsigned char 
 34613 ;; Auto vars:     Size  Location     Type
 34614 ;;  Module          1    0[COMRAM] unsigned char 
 34615 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 34616 ;; Return value:  Size  Location     Type
 34617 ;;                  1    wreg      void 
 34618 ;; Registers used:
 34619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34620 ;; Tracked objects:
 34621 ;;		On entry : 0/0
 34622 ;;		On exit  : 0/0
 34623 ;;		Unchanged: 0/0
 34624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34628 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34629 ;;Total ram usage:        3 bytes
 34630 ;; Hardware stack levels used:    1
 34631 ;; Hardware stack levels required when called:    1
 34632 ;; This function calls:
 34633 ;;		i2_GenerateEvt
 34634 ;; This function is called by:
 34635 ;;		_Uart_Uart1RxIsr
 34636 ;; This function uses a non-reentrant model
 34637 ;;
 34638                           
 34639                           	psect	text171
 34640  003B8E                     __ptext171:
 34641                           	opt stack 0
 34642  003B8E                     _Uart_MdmGsmGprsReadService:
 34643                           	opt stack 8
 34644                           
 34645                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 34646                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 34647                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 34648                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 34649                           
 34650                           ;incstack = 0
 34651  003B8E  0E00               	movlw	0
 34652  003B90  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34653  003B92  0E00               	movlw	0
 34654  003B94  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34655                           
 34656                           ;uart_drv.c: 383: switch (RxState)
 34657  003B96  D058               	goto	i2l680
 34658  003B98                     
 34659                           ;uart_drv.c: 387: if (UartData == '\r')
 34660  003B98  0E0D               	movlw	13
 34661  003B9A  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34662  003B9C  A4D8               	btfss	status,2,c
 34663  003B9E  D003               	goto	i2l682
 34664                           
 34665                           ;uart_drv.c: 388: {
 34666                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 34667  003BA0  0E01               	movlw	1
 34668  003BA2  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34669                           
 34670                           ;uart_drv.c: 391: }
 34671  003BA4  0012               	return	
 34672  003BA6                     i2l682:
 34673                           
 34674                           ;uart_drv.c: 392: else
 34675                           ;uart_drv.c: 393: {
 34676                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 34677  003BA6  0E90               	movlw	144
 34678  003BA8  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34679  003BAA  0E01               	movlw	1
 34680  003BAC  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34681  003BAE  B0D8               	btfsc	status,0,c
 34682  003BB0  0012               	return	
 34683                           
 34684                           ;uart_drv.c: 395: {
 34685                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 34686  003BB2  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34687  003BB4  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34688  003BB6  6ED9               	movwf	fsr2l,c
 34689  003BB8  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34690  003BBA  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34691  003BBC  6EDA               	movwf	fsr2h,c
 34692  003BBE  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 34693                           
 34694                           ;uart_drv.c: 399: RxCounter++;
 34695  003BC2  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 34696  003BC4  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 34697                           
 34698                           ;uart_drv.c: 400: }
 34699                           ;uart_drv.c: 401: }
 34700                           ;uart_drv.c: 402: break;
 34701  003BC6  0012               	return	
 34702  003BC8                     
 34703                           ;uart_drv.c: 406: if (UartData == '\n')
 34704  003BC8  0E0A               	movlw	10
 34705  003BCA  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34706  003BCC  A4D8               	btfss	status,2,c
 34707  003BCE  D035               	goto	i2l688
 34708                           
 34709                           ;uart_drv.c: 407: {
 34710                           ;uart_drv.c: 409: if (RxCounter > 0)
 34711  003BD0  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34712  003BD2  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34713  003BD4  B4D8               	btfsc	status,2,c
 34714  003BD6  D031               	goto	i2l688
 34715                           
 34716                           ;uart_drv.c: 410: {
 34717                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 34718  003BD8  0E00               	movlw	0
 34719  003BDA  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34720  003BDC  0E00               	movlw	0
 34721  003BDE  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34722  003BE0  D010               	goto	i2l689
 34723  003BE2                     
 34724                           ;uart_drv.c: 413: {
 34725                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 34726  003BE2  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34727  003BE4  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34728  003BE6  6ED9               	movwf	fsr2l,c
 34729  003BE8  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34730  003BEA  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34731  003BEC  6EDA               	movwf	fsr2h,c
 34732  003BEE  0E58               	movlw	low _RxBuffer
 34733  003BF0  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34734  003BF2  6EE1               	movwf	fsr1l,c
 34735  003BF4  0E0C               	movlw	high _RxBuffer
 34736  003BF6  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34737  003BF8  6EE2               	movwf	fsr1h,c
 34738  003BFA  CFDF FFE7          	movff	indf2,indf1
 34739  003BFE  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 34740  003C00  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 34741  003C02                     i2l689:
 34742  003C02  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34743  003C04  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34744  003C06  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34745  003C08  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34746  003C0A  A0D8               	btfss	status,0,c
 34747  003C0C  D7EA               	goto	i2l690
 34748                           
 34749                           ;uart_drv.c: 415: }
 34750                           ;uart_drv.c: 417: RxLen = RxCounter;
 34751  003C0E  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 34752  003C12  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 34753                           
 34754                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 34755  003C16  0E3C               	movlw	low _NewStringReceived
 34756  003C18  6E01               	movwf	i2GenerateEvt@Event,c
 34757  003C1A  0E00               	movlw	high _NewStringReceived
 34758  003C1C  6E02               	movwf	i2GenerateEvt@Event+1,c
 34759  003C1E  ECCF  F030         	call	i2_GenerateEvt	;wreg free
 34760                           
 34761                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 34762  003C22  0E3B               	movlw	low _NewMdmEvtParserRequest
 34763  003C24  6E01               	movwf	i2GenerateEvt@Event,c
 34764  003C26  0E00               	movlw	high _NewMdmEvtParserRequest
 34765  003C28  6E02               	movwf	i2GenerateEvt@Event+1,c
 34766  003C2A  ECCF  F030         	call	i2_GenerateEvt	;wreg free
 34767                           
 34768                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 34769  003C2E  0E3A               	movlw	low _NewStringMdmTerminal
 34770  003C30  6E01               	movwf	i2GenerateEvt@Event,c
 34771  003C32  0E00               	movlw	high _NewStringMdmTerminal
 34772  003C34  6E02               	movwf	i2GenerateEvt@Event+1,c
 34773  003C36  ECCF  F030         	call	i2_GenerateEvt	;wreg free
 34774  003C3A                     i2l688:
 34775                           
 34776                           ;uart_drv.c: 427: }
 34777                           ;uart_drv.c: 429: RxState = ReadData;
 34778                           
 34779                           ;uart_drv.c: 424: else
 34780                           ;uart_drv.c: 425: {
 34781                           
 34782                           ;uart_drv.c: 422: }
 34783                           ;uart_drv.c: 423: }
 34784  003C3A  0E00               	movlw	0
 34785  003C3C  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34786                           
 34787                           ;uart_drv.c: 431: RxCounter = 0;
 34788  003C3E  0E00               	movlw	0
 34789  003C40  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 34790  003C42  0E00               	movlw	0
 34791  003C44  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 34792                           
 34793                           ;uart_drv.c: 436: }
 34794                           
 34795                           ;uart_drv.c: 435: break;
 34796                           
 34797                           ;uart_drv.c: 434: default:
 34798                           
 34799                           ;uart_drv.c: 432: break;
 34800  003C46  0012               	return	
 34801  003C48                     i2l680:
 34802  003C48  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 34803                           
 34804                           ; Switch size 1, requested type "space"
 34805                           ; Number of cases is 2, Range of values is 0 to 1
 34806                           ; switch strategies available:
 34807                           ; Name         Instructions Cycles
 34808                           ; simple_byte            7     4 (average)
 34809                           ;	Chosen strategy is simple_byte
 34810  003C4A  0A00               	xorlw	0	; case 0
 34811  003C4C  B4D8               	btfsc	status,2,c
 34812  003C4E  D7A4               	goto	i2l681
 34813  003C50  0A01               	xorlw	1	; case 1
 34814  003C52  A4D8               	btfss	status,2,c
 34815  003C54  0012               	return	
 34816  003C56  D7B8               	goto	i2l686
 34817  003C58                     __end_of_Uart_MdmGsmGprsReadService:
 34818                           	opt stack 0
 34819                           tosu	equ	0xFFF
 34820                           tosh	equ	0xFFE
 34821                           tosl	equ	0xFFD
 34822                           pclatu	equ	0xFFB
 34823                           pclath	equ	0xFFA
 34824                           tblptru	equ	0xFF8
 34825                           tblptrh	equ	0xFF7
 34826                           tblptrl	equ	0xFF6
 34827                           tablat	equ	0xFF5
 34828                           prodh	equ	0xFF4
 34829                           prodl	equ	0xFF3
 34830                           intcon	equ	0xFF2
 34831                           intcon2	equ	0xFF1
 34832                           intcon3	equ	0xFF0
 34833                           indf0	equ	0xFEF
 34834                           postinc0	equ	0xFEE
 34835                           plusw0	equ	0xFEB
 34836                           fsr0h	equ	0xFEA
 34837                           fsr0l	equ	0xFE9
 34838                           wreg	equ	0xFE8
 34839                           indf1	equ	0xFE7
 34840                           postinc1	equ	0xFE6
 34841                           postdec1	equ	0xFE5
 34842                           plusw1	equ	0xFE3
 34843                           fsr1h	equ	0xFE2
 34844                           fsr1l	equ	0xFE1
 34845                           bsr	equ	0xFE0
 34846                           indf2	equ	0xFDF
 34847                           postinc2	equ	0xFDE
 34848                           postdec2	equ	0xFDD
 34849                           plusw2	equ	0xFDB
 34850                           fsr2h	equ	0xFDA
 34851                           fsr2l	equ	0xFD9
 34852                           status	equ	0xFD8
 34853                           
 34854 ;; *************** function i2_GenerateEvt *****************
 34855 ;; Defined at:
 34856 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34857 ;; Parameters:    Size  Location     Type
 34858 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 34859 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34860 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34861 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34862 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34863 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34864 ;; Auto vars:     Size  Location     Type
 34865 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 34866 ;; Return value:  Size  Location     Type
 34867 ;;                  1    wreg      enum E7699
 34868 ;; Registers used:
 34869 ;;		wreg, fsr2l, fsr2h, status,2
 34870 ;; Tracked objects:
 34871 ;;		On entry : 0/0
 34872 ;;		On exit  : 0/0
 34873 ;;		Unchanged: 0/0
 34874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34878 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34879 ;;Total ram usage:        3 bytes
 34880 ;; Hardware stack levels used:    1
 34881 ;; This function calls:
 34882 ;;		Nothing
 34883 ;; This function is called by:
 34884 ;;		_Uart_MdmGsmGprsReadService
 34885 ;; This function uses a non-reentrant model
 34886 ;;
 34887                           
 34888                           	psect	text172
 34889  00619E                     __ptext172:
 34890                           	opt stack 0
 34891  00619E                     i2_GenerateEvt:
 34892                           	opt stack 8
 34893                           
 34894                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34895                           
 34896                           ;incstack = 0
 34897  00619E  0E00               	movlw	0
 34898  0061A0  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34899                           
 34900                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34901  0061A2  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 34902  0061A6  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 34903  0061AA  0E02               	movlw	2
 34904  0061AC  6EDF               	movwf	indf2,c
 34905                           
 34906                           ;os_ser.c: 83: EventStatus = EventSent;
 34907  0061AE  0E02               	movlw	2
 34908  0061B0  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34909  0061B2  0012               	return	
 34910  0061B4                     __end_ofi2_GenerateEvt:
 34911                           	opt stack 0
 34912                           tosu	equ	0xFFF
 34913                           tosh	equ	0xFFE
 34914                           tosl	equ	0xFFD
 34915                           pclatu	equ	0xFFB
 34916                           pclath	equ	0xFFA
 34917                           tblptru	equ	0xFF8
 34918                           tblptrh	equ	0xFF7
 34919                           tblptrl	equ	0xFF6
 34920                           tablat	equ	0xFF5
 34921                           prodh	equ	0xFF4
 34922                           prodl	equ	0xFF3
 34923                           intcon	equ	0xFF2
 34924                           intcon2	equ	0xFF1
 34925                           intcon3	equ	0xFF0
 34926                           indf0	equ	0xFEF
 34927                           postinc0	equ	0xFEE
 34928                           plusw0	equ	0xFEB
 34929                           fsr0h	equ	0xFEA
 34930                           fsr0l	equ	0xFE9
 34931                           wreg	equ	0xFE8
 34932                           indf1	equ	0xFE7
 34933                           postinc1	equ	0xFE6
 34934                           postdec1	equ	0xFE5
 34935                           plusw1	equ	0xFE3
 34936                           fsr1h	equ	0xFE2
 34937                           fsr1l	equ	0xFE1
 34938                           bsr	equ	0xFE0
 34939                           indf2	equ	0xFDF
 34940                           postinc2	equ	0xFDE
 34941                           postdec2	equ	0xFDD
 34942                           plusw2	equ	0xFDB
 34943                           fsr2h	equ	0xFDA
 34944                           fsr2l	equ	0xFD9
 34945                           status	equ	0xFD8
 34946                           
 34947 ;; *************** function _Rtcc_RtcIsr *****************
 34948 ;; Defined at:
 34949 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 34950 ;; Parameters:    Size  Location     Type
 34951 ;;		None
 34952 ;; Auto vars:     Size  Location     Type
 34953 ;;		None
 34954 ;; Return value:  Size  Location     Type
 34955 ;;                  1    wreg      void 
 34956 ;; Registers used:
 34957 ;;		wreg, status,2, status,0
 34958 ;; Tracked objects:
 34959 ;;		On entry : 0/0
 34960 ;;		On exit  : 0/0
 34961 ;;		Unchanged: 0/0
 34962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34967 ;;Total ram usage:        0 bytes
 34968 ;; Hardware stack levels used:    1
 34969 ;; This function calls:
 34970 ;;		Nothing
 34971 ;; This function is called by:
 34972 ;;		_HighPriorityIsr
 34973 ;; This function uses a non-reentrant model
 34974 ;;
 34975                           
 34976                           	psect	text173
 34977  0062CC                     __ptext173:
 34978                           	opt stack 0
 34979  0062CC                     _Rtcc_RtcIsr:
 34980                           	opt stack 10
 34981                           
 34982                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 34983                           
 34984                           ;incstack = 0
 34985  0062CC  90A4               	bcf	4004,0,c	;volatile
 34986  0062CE  0012               	return	
 34987  0062D0                     __end_of_Rtcc_RtcIsr:
 34988                           	opt stack 0
 34989                           tosu	equ	0xFFF
 34990                           tosh	equ	0xFFE
 34991                           tosl	equ	0xFFD
 34992                           pclatu	equ	0xFFB
 34993                           pclath	equ	0xFFA
 34994                           tblptru	equ	0xFF8
 34995                           tblptrh	equ	0xFF7
 34996                           tblptrl	equ	0xFF6
 34997                           tablat	equ	0xFF5
 34998                           prodh	equ	0xFF4
 34999                           prodl	equ	0xFF3
 35000                           intcon	equ	0xFF2
 35001                           intcon2	equ	0xFF1
 35002                           intcon3	equ	0xFF0
 35003                           indf0	equ	0xFEF
 35004                           postinc0	equ	0xFEE
 35005                           plusw0	equ	0xFEB
 35006                           fsr0h	equ	0xFEA
 35007                           fsr0l	equ	0xFE9
 35008                           wreg	equ	0xFE8
 35009                           indf1	equ	0xFE7
 35010                           postinc1	equ	0xFE6
 35011                           postdec1	equ	0xFE5
 35012                           plusw1	equ	0xFE3
 35013                           fsr1h	equ	0xFE2
 35014                           fsr1l	equ	0xFE1
 35015                           bsr	equ	0xFE0
 35016                           indf2	equ	0xFDF
 35017                           postinc2	equ	0xFDE
 35018                           postdec2	equ	0xFDD
 35019                           plusw2	equ	0xFDB
 35020                           fsr2h	equ	0xFDA
 35021                           fsr2l	equ	0xFD9
 35022                           status	equ	0xFD8
 35023                           
 35024 ;; *************** function _Mcu_Int1Isr *****************
 35025 ;; Defined at:
 35026 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35027 ;; Parameters:    Size  Location     Type
 35028 ;;		None
 35029 ;; Auto vars:     Size  Location     Type
 35030 ;;		None
 35031 ;; Return value:  Size  Location     Type
 35032 ;;                  1    wreg      void 
 35033 ;; Registers used:
 35034 ;;		wreg, status,2, status,0
 35035 ;; Tracked objects:
 35036 ;;		On entry : 0/0
 35037 ;;		On exit  : 0/0
 35038 ;;		Unchanged: 0/0
 35039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35044 ;;Total ram usage:        0 bytes
 35045 ;; Hardware stack levels used:    1
 35046 ;; This function calls:
 35047 ;;		Nothing
 35048 ;; This function is called by:
 35049 ;;		_HighPriorityIsr
 35050 ;; This function uses a non-reentrant model
 35051 ;;
 35052                           
 35053                           	psect	text174
 35054  0062D0                     __ptext174:
 35055                           	opt stack 0
 35056  0062D0                     _Mcu_Int1Isr:
 35057                           	opt stack 10
 35058                           
 35059                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 35060                           
 35061                           ;incstack = 0
 35062  0062D0  90F0               	bcf	intcon3,0,c	;volatile
 35063  0062D2  0012               	return	
 35064  0062D4                     __end_of_Mcu_Int1Isr:
 35065                           	opt stack 0
 35066                           tosu	equ	0xFFF
 35067                           tosh	equ	0xFFE
 35068                           tosl	equ	0xFFD
 35069                           pclatu	equ	0xFFB
 35070                           pclath	equ	0xFFA
 35071                           tblptru	equ	0xFF8
 35072                           tblptrh	equ	0xFF7
 35073                           tblptrl	equ	0xFF6
 35074                           tablat	equ	0xFF5
 35075                           prodh	equ	0xFF4
 35076                           prodl	equ	0xFF3
 35077                           intcon	equ	0xFF2
 35078                           intcon2	equ	0xFF1
 35079                           intcon3	equ	0xFF0
 35080                           indf0	equ	0xFEF
 35081                           postinc0	equ	0xFEE
 35082                           plusw0	equ	0xFEB
 35083                           fsr0h	equ	0xFEA
 35084                           fsr0l	equ	0xFE9
 35085                           wreg	equ	0xFE8
 35086                           indf1	equ	0xFE7
 35087                           postinc1	equ	0xFE6
 35088                           postdec1	equ	0xFE5
 35089                           plusw1	equ	0xFE3
 35090                           fsr1h	equ	0xFE2
 35091                           fsr1l	equ	0xFE1
 35092                           bsr	equ	0xFE0
 35093                           indf2	equ	0xFDF
 35094                           postinc2	equ	0xFDE
 35095                           postdec2	equ	0xFDD
 35096                           plusw2	equ	0xFDB
 35097                           fsr2h	equ	0xFDA
 35098                           fsr2l	equ	0xFD9
 35099                           status	equ	0xFD8
 35100                           
 35101 ;; *************** function _Mcu_Int0Isr *****************
 35102 ;; Defined at:
 35103 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35104 ;; Parameters:    Size  Location     Type
 35105 ;;		None
 35106 ;; Auto vars:     Size  Location     Type
 35107 ;;		None
 35108 ;; Return value:  Size  Location     Type
 35109 ;;                  1    wreg      void 
 35110 ;; Registers used:
 35111 ;;		wreg, status,2, status,0
 35112 ;; Tracked objects:
 35113 ;;		On entry : 0/0
 35114 ;;		On exit  : 0/0
 35115 ;;		Unchanged: 0/0
 35116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35121 ;;Total ram usage:        0 bytes
 35122 ;; Hardware stack levels used:    1
 35123 ;; This function calls:
 35124 ;;		Nothing
 35125 ;; This function is called by:
 35126 ;;		_HighPriorityIsr
 35127 ;; This function uses a non-reentrant model
 35128 ;;
 35129                           
 35130                           	psect	text175
 35131  0062D4                     __ptext175:
 35132                           	opt stack 0
 35133  0062D4                     _Mcu_Int0Isr:
 35134                           	opt stack 10
 35135                           
 35136                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 35137                           
 35138                           ;incstack = 0
 35139  0062D4  92F2               	bcf	intcon,1,c	;volatile
 35140  0062D6  0012               	return	
 35141  0062D8                     __end_of_Mcu_Int0Isr:
 35142                           	opt stack 0
 35143                           tosu	equ	0xFFF
 35144                           tosh	equ	0xFFE
 35145                           tosl	equ	0xFFD
 35146                           pclatu	equ	0xFFB
 35147                           pclath	equ	0xFFA
 35148                           tblptru	equ	0xFF8
 35149                           tblptrh	equ	0xFF7
 35150                           tblptrl	equ	0xFF6
 35151                           tablat	equ	0xFF5
 35152                           prodh	equ	0xFF4
 35153                           prodl	equ	0xFF3
 35154                           intcon	equ	0xFF2
 35155                           intcon2	equ	0xFF1
 35156                           intcon3	equ	0xFF0
 35157                           indf0	equ	0xFEF
 35158                           postinc0	equ	0xFEE
 35159                           plusw0	equ	0xFEB
 35160                           fsr0h	equ	0xFEA
 35161                           fsr0l	equ	0xFE9
 35162                           wreg	equ	0xFE8
 35163                           indf1	equ	0xFE7
 35164                           postinc1	equ	0xFE6
 35165                           postdec1	equ	0xFE5
 35166                           plusw1	equ	0xFE3
 35167                           fsr1h	equ	0xFE2
 35168                           fsr1l	equ	0xFE1
 35169                           bsr	equ	0xFE0
 35170                           indf2	equ	0xFDF
 35171                           postinc2	equ	0xFDE
 35172                           postdec2	equ	0xFDD
 35173                           plusw2	equ	0xFDB
 35174                           fsr2h	equ	0xFDA
 35175                           fsr2l	equ	0xFD9
 35176                           status	equ	0xFD8
 35177                           tosu	equ	0xFFF
 35178                           tosh	equ	0xFFE
 35179                           tosl	equ	0xFFD
 35180                           pclatu	equ	0xFFB
 35181                           pclath	equ	0xFFA
 35182                           tblptru	equ	0xFF8
 35183                           tblptrh	equ	0xFF7
 35184                           tblptrl	equ	0xFF6
 35185                           tablat	equ	0xFF5
 35186                           prodh	equ	0xFF4
 35187                           prodl	equ	0xFF3
 35188                           intcon	equ	0xFF2
 35189                           intcon2	equ	0xFF1
 35190                           intcon3	equ	0xFF0
 35191                           indf0	equ	0xFEF
 35192                           postinc0	equ	0xFEE
 35193                           plusw0	equ	0xFEB
 35194                           fsr0h	equ	0xFEA
 35195                           fsr0l	equ	0xFE9
 35196                           wreg	equ	0xFE8
 35197                           indf1	equ	0xFE7
 35198                           postinc1	equ	0xFE6
 35199                           postdec1	equ	0xFE5
 35200                           plusw1	equ	0xFE3
 35201                           fsr1h	equ	0xFE2
 35202                           fsr1l	equ	0xFE1
 35203                           bsr	equ	0xFE0
 35204                           indf2	equ	0xFDF
 35205                           postinc2	equ	0xFDE
 35206                           postdec2	equ	0xFDD
 35207                           plusw2	equ	0xFDB
 35208                           fsr2h	equ	0xFDA
 35209                           fsr2l	equ	0xFD9
 35210                           status	equ	0xFD8
 35211                           
 35212                           	psect	text176
 35213  000000                     __ptext176:
 35214                           	opt stack 0
 35215                           tosu	equ	0xFFF
 35216                           tosh	equ	0xFFE
 35217                           tosl	equ	0xFFD
 35218                           pclatu	equ	0xFFB
 35219                           pclath	equ	0xFFA
 35220                           tblptru	equ	0xFF8
 35221                           tblptrh	equ	0xFF7
 35222                           tblptrl	equ	0xFF6
 35223                           tablat	equ	0xFF5
 35224                           prodh	equ	0xFF4
 35225                           prodl	equ	0xFF3
 35226                           intcon	equ	0xFF2
 35227                           intcon2	equ	0xFF1
 35228                           intcon3	equ	0xFF0
 35229                           indf0	equ	0xFEF
 35230                           postinc0	equ	0xFEE
 35231                           plusw0	equ	0xFEB
 35232                           fsr0h	equ	0xFEA
 35233                           fsr0l	equ	0xFE9
 35234                           wreg	equ	0xFE8
 35235                           indf1	equ	0xFE7
 35236                           postinc1	equ	0xFE6
 35237                           postdec1	equ	0xFE5
 35238                           plusw1	equ	0xFE3
 35239                           fsr1h	equ	0xFE2
 35240                           fsr1l	equ	0xFE1
 35241                           bsr	equ	0xFE0
 35242                           indf2	equ	0xFDF
 35243                           postinc2	equ	0xFDE
 35244                           postdec2	equ	0xFDD
 35245                           plusw2	equ	0xFDB
 35246                           fsr2h	equ	0xFDA
 35247                           fsr2l	equ	0xFD9
 35248                           status	equ	0xFD8
 35249                           
 35250                           	psect	rparam
 35251  0000                     tosu	equ	0xFFF
 35252                           tosh	equ	0xFFE
 35253                           tosl	equ	0xFFD
 35254                           pclatu	equ	0xFFB
 35255                           pclath	equ	0xFFA
 35256                           tblptru	equ	0xFF8
 35257                           tblptrh	equ	0xFF7
 35258                           tblptrl	equ	0xFF6
 35259                           tablat	equ	0xFF5
 35260                           prodh	equ	0xFF4
 35261                           prodl	equ	0xFF3
 35262                           intcon	equ	0xFF2
 35263                           intcon2	equ	0xFF1
 35264                           intcon3	equ	0xFF0
 35265                           indf0	equ	0xFEF
 35266                           postinc0	equ	0xFEE
 35267                           plusw0	equ	0xFEB
 35268                           fsr0h	equ	0xFEA
 35269                           fsr0l	equ	0xFE9
 35270                           wreg	equ	0xFE8
 35271                           indf1	equ	0xFE7
 35272                           postinc1	equ	0xFE6
 35273                           postdec1	equ	0xFE5
 35274                           plusw1	equ	0xFE3
 35275                           fsr1h	equ	0xFE2
 35276                           fsr1l	equ	0xFE1
 35277                           bsr	equ	0xFE0
 35278                           indf2	equ	0xFDF
 35279                           postinc2	equ	0xFDE
 35280                           postdec2	equ	0xFDD
 35281                           plusw2	equ	0xFDB
 35282                           fsr2h	equ	0xFDA
 35283                           fsr2l	equ	0xFD9
 35284                           status	equ	0xFD8
 35285                           
 35286                           	psect	temp
 35287  000042                     btemp:
 35288                           	opt stack 0
 35289  000042                     	ds	1
 35290  0000                     int$flags	set	btemp
 35291  0000                     wtemp6	set	btemp+1
 35292                           tosu	equ	0xFFF
 35293                           tosh	equ	0xFFE
 35294                           tosl	equ	0xFFD
 35295                           pclatu	equ	0xFFB
 35296                           pclath	equ	0xFFA
 35297                           tblptru	equ	0xFF8
 35298                           tblptrh	equ	0xFF7
 35299                           tblptrl	equ	0xFF6
 35300                           tablat	equ	0xFF5
 35301                           prodh	equ	0xFF4
 35302                           prodl	equ	0xFF3
 35303                           intcon	equ	0xFF2
 35304                           intcon2	equ	0xFF1
 35305                           intcon3	equ	0xFF0
 35306                           indf0	equ	0xFEF
 35307                           postinc0	equ	0xFEE
 35308                           plusw0	equ	0xFEB
 35309                           fsr0h	equ	0xFEA
 35310                           fsr0l	equ	0xFE9
 35311                           wreg	equ	0xFE8
 35312                           indf1	equ	0xFE7
 35313                           postinc1	equ	0xFE6
 35314                           postdec1	equ	0xFE5
 35315                           plusw1	equ	0xFE3
 35316                           fsr1h	equ	0xFE2
 35317                           fsr1l	equ	0xFE1
 35318                           bsr	equ	0xFE0
 35319                           indf2	equ	0xFDF
 35320                           postinc2	equ	0xFDE
 35321                           postdec2	equ	0xFDD
 35322                           plusw2	equ	0xFDB
 35323                           fsr2h	equ	0xFDA
 35324                           fsr2l	equ	0xFD9
 35325                           status	equ	0xFD8


Data Sizes:
    Strings     394
    Constant    567
    Data        184
    BSS         2321
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      5     256
    BANK4           192      0     151
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), 

    blinkForSeconds@blinkTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@phone(BANK4[14]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[14]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), 
		 -> PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[14]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> callerNumber(BANK3[14]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@ClipString(BANK0[5]), 
		 -> ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8950 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4613$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4613$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4613$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4613$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3066$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3056$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3056$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3032$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3032$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3032$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3032$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2533_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2533_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 14
		 -> callerNumber(BANK3[14]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_30(CODE[12]), STR_29(CODE[19]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), 
		 -> STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_Eeprom_Read
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _GetCallerNumber->_ClearBuffer
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _StringCompare->_GetCallerNumber
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  670393
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  665762
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  332974
                                              0 BANK3      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  332788
                                              0 BANK3      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          25    25      0   72412
                                              0 BANK1      4     4      0
                        _ClearBuffer
                        _Eeprom_Read
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   16081
                   _Led_SetLedStatus
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11928
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_HangPhoneCall                                    0     0      0    2647
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Read                                          7     4      3   23938
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (5) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   70348
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   11578
                                             48 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    1792
                                             37 BANK0     11     5      6
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8643
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13894
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2647
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6931
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6931
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2669
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      5     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      97      14       78.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     979       8        0.0%
DATA                 0      0     C99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 19 17:21:31 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5316  
                              _USB_SD_Ptr FC35                 __size_of_Mdm_SetSmsFormat 0050  
                    __size_of_TurnOnModem 0046                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 6054               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 2186  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 20A2                                       l203 20AA  
                                     l205 20F2                                       l206 2118  
                                     l208 2120                                       l160 1FE6  
                                     l209 2140                                       l161 1EBC  
                                     l162 2024                                       l170 1F84  
                                     l171 1F9A                                       l163 1EC8  
                                     l315 4438                                       l323 4404  
                                     l164 1F08                                       l316 43AE  
                                     l420 49E6                                       l500 4896  
                                     l173 1F9E                                       l325 441E  
                                     l421 4A06                                       l237 6060  
                                     l174 1FA6                                       l166 1F16  
                                     l318 43B8                                       l422 4A12  
             __end_of_USBStdGetDscHandler 2CF4                                       l510 4868  
                                     l502 4828                                       l175 1FB2  
                                     l167 1F3E                                       l319 43DE  
                                     l423 4A1E                                       l511 4858  
                                     l503 4818                                       l192 214A  
                                     l176 1FC8                                       l416 4A32  
                                     l424 4A2A                                       l512 487C  
                                     l504 483E                                       l520 572A  
                                     l193 202A                                       l169 1F50  
                                     l417 49D8                                       l441 17EC  
                                     l513 485C                                       l505 481C  
                                     l521 56F6                                       l194 2182  
                                     l418 4A60                                       l442 15F4  
                                     l514 4862                                       l506 4822  
                                     l530 31CE                                       l195 2036  
                                     l179 1FD4                                       l419 49E0  
                                     l523 5710                                       l531 3234  
                                     l196 2076                                       l700 5942  
                                     l444 163C                                       l532 31FA  
                                     l445 1684                                       l541 601E  
                                     l198 2084                                       l446 16CC  
                                     l199 2098                                       l631 2A0A  
                                     l447 1714                                       l448 175C  
                                     l528 323A                                       l633 2A82  
                                     l625 2996                                       l449 17A4  
                                     l529 3226                                       l538 6022  
                                     l546 3CB0                                       l651 567A  
                                     l707 5AA8                                       l627 29BA  
                                     l715 5A1C                                       l539 601A  
                                     l547 3CCC                                       l660 569E  
                                     l652 5674                                       l716 59F2  
                                     l709 5AC2                                       l629 29E2  
                                     l718 5A0A                                       l639 6046  
                                     l832 5DE2                                       l844 3D84  
                                     l668 0C44                                       _BDT 000400  
                                     l790 607C                                       l855 4D7C  
                                     l775 2F36                                       l864 4AD4  
                                     l856 4D22                                       l857 4D96  
                                     l698 5926                                       l858 4D52  
                                     l867 4AE6                                       l982 2560  
                                     l983 2434                                       l985 2458  
                                     l987 2472                                       l988 24A6  
                                     l989 2518                                       l998 253C  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                        ?_blinkForSeconds 0093                   __end_of_HighPriorityIsr 4302  
                          ??_Mdm_MainTask 00AA                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 5C6A                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CD  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 59E6  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2432  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 57CC  
         InitGprsNetwork@GprsNetInitState 01ED                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 57E4  
                                    l1110 55CC                               RiSm@Counter 02E2  
                                    l1031 393A                                      l1111 55E0  
                                    l1032 3974                                      l1033 399A  
                                    l1009 57FE                                      l1121 5638  
                                    l1027 39D2                                      l1035 39BA  
                                    l2003 50F8                                      l1107 55F2  
                                    l1220 0DE8                                      l1028 392A  
                                    l1052 1E8E                                      l1060 1E60  
                                    l1108 55B6                                      l1221 0E22  
                                    l1053 1DA2                                      l2005 50FE  
                                    l1222 0E96                                      l1070 2BA8  
                                    l1223 0E5E                                      l1071 2AA0  
                                    l1055 1EA8                                      l2104 5D76  
                                    l1216 1078                                      l1056 1DD4  
                                    l1152 5F1E                                      l1136 5EFA  
                                    l3000 4388                                      l2105 5D64  
                                    l1233 1010                                      l1225 0F3E  
                                    l1217 0DD0                                      l2113 5452  
                                    l1401 53B0                                      l1250 05F4  
                                    l1234 1054                                      l1226 0F78  
                                    l1074 2ABC                                      l1058 1E2A  
                                    l2114 541C                                      l1402 5370  
                                    l2107 5D6A                                      l1219 10B0  
                                    l1227 0FB8                                      l1075 2AD4  
                                    l2211 5554                                      l1091 1B80  
                                    l2060 27EE                                      l2108 5D70  
                                    l1252 0AB6                                      l1260 07F2  
                                    l1228 0FBC                                      l2212 552A  
                                    l1092 19FE                                      l1156 5BF4  
                                    l2116 542E                                      l1404 53AA  
                                    l2061 26D0                                      l1261 082C  
                                    l1253 060C                                      l1229 1000  
                                    l2213 5550                                      l2117 5440  
                                    l2062 2804                                      l1270 096E  
                                    l1262 0856                                      l1254 0646  
                                    l1238 106E                                      l1078 2B46  
                                    l1414 59E0                                      l3110 5D1A  
                                    l3031 4CFA                                      l2063 26F8  
                                    l1263 0890                                      l1255 0680  
                                    l1095 1A1A                                      l3111 5D08  
                                    l3032 4D08                                      l2064 277C  
                                    l2224 5C28                                      l1264 08CA  
                                    l1256 06BA                                      l1096 1AD0  
                                    l1440 37A8                                      l3104 5770  
                                    l2073 32FA                                      l2225 5C14  
                                    l1249 0A54                                      l1265 090E  
                                    l1257 073E                                      l1097 1AF4  
                                    l1409 5A9A                                      l3105 574E  
                                    l1601 21D0                                      l2074 3242  
                                    l2090 44AA                                      l2218 50E8  
                                    l1282 0A42                                      l1274 097E  
                                    l1258 06F6                                      l1442 3806  
                                    l3027 4CC6                                      l2075 3316  
                                    l2083 44CE                                      l2091 44B8  
                                    l2219 50A8                                      l1283 0A4A  
                                    l1275 09AA                                      l1419 600A  
                                    l1443 381A                                      l2403 041E  
                                    l1603 21F8                                      l1291 5786  
                                    l1380 3EB2                                      l3028 4CBA  
                                    l2076 3260                                      l2084 4460  
                                    l2412 0524                                      l1700 362C  
                                    l1620 1C20                                      l1612 1BD6  
                                    l1381 3ED4                                      l2085 44F6  
                                    l1277 09C4                                      l1269 092A  
                                    l1437 3840                                      l1445 3838  
                                    l2413 0570                                      l2405 045E  
                                    l1605 2238                                      l1621 1C2C  
                                    l1613 1BCC                                      l1390 3F36  
                                    l2078 32D0                                      l2086 4470  
                                    l1278 0A32                                      l1438 378A  
                                    l2406 0578                                      l2430 10DE  
                                    l1710 2D50                                      l1630 1CC0  
                                    l1614 1BCA                                      l2182 4B72  
                                    l1391 3F42                                      l1383 3EF6  
                                    l2087 4482                                      l1439 3856  
                                    l3311 34AC                                      l1703 36A8  
                                    l1711 2D2A                                      l1623 1C54  
                                    l2183 4AF8                                      l3080 54DE  
                                    l2088 449C                                      l3312 3464  
                                    l2408 04B4                                      l3240 51D2  
                                    l2432 10FA                                      l1704 366E  
                                    l1640 5868                                      l1288 57B8  
                                    l2096 3AB0                                      l3081 54D6  
                                    l3313 347C                                      l3305 3424  
                                    l2409 0478                                      l2441 114E  
                                    l1713 2DC8                                      l1641 5878  
                                    l1633 1CE6                                      l1625 1C6A  
                                    l1617 1BF2                                      l2097 39F8  
                                    l2185 4B5E                                      l1386 3EFE  
                                    l3090 58F4                                      l3314 348C  
                                    l3306 341E                                      l1714 2DAE  
                                    l1730 2CDC                                      l1722 3376  
                                    l1810 351A                                      l1626 1C76  
                                    l1618 1C02                                      l1379 3F50  
                                    l3091 58EC                                      l2371 0152  
                                    l3251 5A36                                      l2427 131E  
                                    l2443 128E                                      l1731 2BD8  
                                    l1811 352E                                      l1635 1D0A  
                                    l1627 1CA0                                      l1619 1C0A  
                                    l2099 3A06                                      l1388 3F1A  
                                    l3084 54FE                                      l2620 54BA  
                                    l2540 455E                                      l3308 344C  
                                    l2372 01E2                                      l2380 01D0  
                                    l3236 51C2                                      l3252 5A30  
                                    l2428 10B8                                      l1900 41CC  
                                    l1724 33EA                                      l1812 3534  
                                    l1628 1CAC                                      l2452 60EA  
              USBConfigureEndpoint@handle 0083                                      l3085 5508  
                                    l1645 4050                                      l3245 5CB0  
                                    l3317 34EA                                      l3237 51BC  
                                    l2445 12F8                                      l2437 110E  
                                    l1733 2BEC                                      l1805 3594  
                                    l1637 1D28                                      l2542 458A  
                                    l3094 590C                                      l3246 5CA6  
                                    l2390 0304                                      l2374 01AE  
                                    l2630 3880                                      l1902 41E4  
                                    l1822 137E                                      l1734 2C74  
                                    l1750 4138                                      l1814 353A  
                                    l1806 3504                                      l1670 468E  
                                    l2543 459A                                      l1647 407A  
                                    l3095 5916                                      l3343 5D54  
                                    l3271 18C8                                      l2367 05D2  
                                    l2391 02C6                                      l2375 019C  
                                    l2631 38E2                                      l3239 51DC  
                                    l2447 1318                                      l2439 112E  
                                    l1903 41F2                                      l1831 14EA  
                                    l1823 1384                                      l1743 417A  
                                    l1815 3558                                      l2455 60E4  
                                    l2560 471C                                      l3280 1902  
                                    l3360 5B12                                      l2368 00E2  
                                    l2640 3902                                      l1664 3B0A  
                                    l1904 4210                                      l1736 2C7C  
                                    l1744 4100                                      l1816 3574  
                                    l1808 350E                                      l1672 46A8  
                                    l2472 5F58                                      l2553 475E  
                                    l2561 4734                                      l1649 40D6  
                                    l1921 4938                                      l3353 5FA6  
                                    l2385 0392                                      l1905 4228  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2CCC  
                                    l1809 3514                                      l1681 30D2  
                                    l2473 5F4A                                      l2618 54AE  
                                    l2554 46DE                                      l2386 0326  
                                    l2634 3886                                      l1834 14D0  
                                    l1682 307A                                      l3291 6140  
                                    l3283 1914                                      l3267 185C  
                                    l2387 02B4                                      l1843 15C6  
                                    l1827 143E                                      l1739 2CD4  
                                    l1747 4190                                      l1771 49C0  
                                    l2475 5F52                                      l2812 374A  
                                    l1924 48E6                                      l3348 5E62  
                                    l3284 1980                                      l3364 6128  
                                    l2388 0250                                      l2636 38CE  
                                    l1676 47E0                                      l1836 1532  
                                    l1828 1440                                      l1748 4112  
                                    l1772 49BA                                      l2813 370C  
                                    l1925 4912                                      l3277 18D8  
                                    l3269 1874                                      l2397 0402  
                                    l2637 38B0                                      l2629 3866  
                                    l1837 153E                                      l1829 145C  
                                    l1749 4118                                      l1757 5850  
                                    l1765 5B4A                                      l2581 3040  
                                    l2654 5278                                      l2566 5B82  
                                    l2806 36B8                                      l1926 48EC  
                                    l3286 19A6                                      l3278 18E8  
                                    l2398 03D2                                      l1790 3FA6  
                                    l1782 4FD8                                      l1838 15BA  
                                    l1686 30FC                                      l1758 584E  
                                    l1766 5B48                                      l2582 2F4E  
                                    l2655 528C                                      l2559 4774  
                                    l2815 377E                                      l2807 36B2  
                                    l3287 19E0                                      l1951 283A  
                                    l1695 35F8                                      l1791 3FAC  
                                    l2832 4C74                                      l1960 28A4  
                                    l1792 4028                                      l1784 5026  
                                    l2592 303C                                      l2584 2F68  
                                    l2833 4C7E                                      l2825 4C26  
                                    l2841 4DD4                                      l2809 36FA  
                                    l1953 286E                                      l1697 3602  
                                    l1793 3FEE                                      l2834 4C8C  
                                    l2826 4C36                                      l2842 4DCC  
                                    l2586 2FC6                                      l1963 291E  
                                    l1699 3666                                      l1795 400E  
                                    l2587 2FB6                                      l2828 4C54  
                                    l1964 28E6                                      l1956 2880  
                                    l2829 4C4C                                      l2845 4DEC  
                                    l1957 2884                                      l1949 282C  
                                    l2589 3006                                      l2846 4DF6  
                                    l2838 4DB2                                      l1990 5EBA  
                                    l2847 4E04                                      l2839 4DBE  
                                    l1967 2938                                      l1959 28DC  
              __size_of_Mdm_IsSmsReceived 0024                                      l1968 293C  
                                    l1992 5EC0                                _Led1OutSts 01FC  
                                    l1899 4232                                      l1997 5104  
                                    l1989 5ECA                                      l2993 58BE  
                                    l2987 5FEA                                      l2997 430A  
                                    l2999 4346                                      STR_1 FFE5  
                                    STR_2 FF74                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE96                                      STR_9 FECA  
                              _Led2OutSts 01FA                                _Led3OutSts 01F8  
                                    u8205 5726                                      u8206 5728  
                   ??_USBCtrlTrfTxService 007D                                      u8175 5700  
                                    _UCFG 000F39                                      u8176 5702  
                                    u8185 570C                                      u8186 570E  
                                    u8195 571A                                      u8196 571C  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9675 5E24                                      u9676 5E26  
                                    u9685 5E30                                      u9686 5E32  
                                    u9695 5E3C                                      u9696 5E3E  
                              _AlarmEvent 01F7                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 62A8  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 36B0  
                                    _main 626A                           ??_Mdm_IsRinging 0081  
                                    _itoa 5898                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 5C00                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4302                                      _xtoi 340E  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 62B0  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 49D2  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5A26                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 54BE   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 615C  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 35D8                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 61FE  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 008E                            _GetElapsedTime 3D20  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 536E                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
                     __size_of_I2cDummyTx 001C                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 5AA2  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDB8  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DC                                     l11133 6060  
                                   l13323 5C48                                     l11805 5D08  
                                   l13423 21C8                                     l14065 1D9A  
                                   l13187 49EC                                     l11843 3602  
                                   l13451 2230                                     l12821 3746  
                                   l12671 574E                                     l14089 1E5A  
                                   l15081 4E8A                                     l14453 09A4  
                                   l11949 336E                                     l14605 1CB8  
                                   l15093 2E22                                     l14287 0FB0  
                                   l15441 514E                                     l15439 511E  
                                   l13859 459A                                     l13939 323A  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4C96  
                                   STR_10 FF4A                                     STR_11 FF58  
                                   STR_12 FF9C                                     STR_20 FF3C  
                                   STR_13 FF66                                     STR_21 FE6C  
                                   STR_30 FFA9                                     STR_14 FEB5  
                                   STR_31 FFD7                                     STR_15 FEF3  
                                   STR_23 FEDF                                     STR_24 FFF4  
                                   STR_16 FF2B                                     STR_25 FFF4  
                                   STR_17 FF82                                     STR_26 FE93  
                                   STR_18 FF8F                                     STR_27 FF1A  
                                   STR_28 FFB5                           __end_of___awmod 4E0E  
                                   STR_29 FF07         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 4D1A                                     ?_utoa 008A  
                                   u10410 3654                                     u11300 5D44  
                                   u12110 4DD8                                     u10430 3696  
                                   u11240 4CCA                                     u10600 2CC0  
                                   u10417 364A                                     u12050 4C58  
                                   u10530 33A2                           ___awdiv@divisor 007F  
                                   u10437 368C                                     u13030 04BE  
                                   u11415 61C2                                     u10607 2CB6  
                                   u11416 61C4                                     u11520 5AD0  
                                   u11280 5E5E                                     u12145 56C4  
                                   u12305 0B9E                                     u11370 5AF6  
                                   u10570 2C3E                    __end_of_USBDeviceTasks 1D32  
                                   u12420 5560                                     u10900 58F8  
                                   u10820 1554                                     u10580 2C6E  
                                   u12325 0C78                                     u13205 61D6  
                                   u12430 50E0                                     u12350 5950  
                                   u13230 4416                                     u13310 24CE  
                                   u11470 29DE                                     u11390 5B02  
                                   u13150 391A                                     u12510 21EC  
                                   u13206 61D8                                     u12335 0C98  
                                   ?_xtoi 0083                                     u13240 4430  
                                   u12345 0D22                                     u13401 1D5E  
                                   u12265 6182                                     u10577 2C34  
                                   u13330 24E2                                     u12266 6184  
                                   u13090 5204                                     u13411 1D70  
                                   u10587 2C64                                     u11900 189E  
                                   u14300 290E                                     u12540 2294  
                                   u12437 50D6                                     u12285 0AF4  
                                   u10870 54E2                                     u14310 2926  
                                   u12295 0B14                                     u11680 48C2  
                                   u11920 18AE                                     u13265 616C  
                                   u13097 51FA                                     u13266 6170  
                                   u13195 4E72                                     u14307 2904  
                                   u10980 5670                                     u11870 1864  
                                   u14190 1D2E                                     u13391 1D4C  
                                   u14351 508A                                     u13480 1EAE  
                                   u14280 28CC                                     u14450 46EE  
               ?_USBCtrlEPServiceComplete 0001                                     u14611 4B50  
                                   u14621 4B68                                     u14287 28C2  
                                   u14738 4EBC                                     u14739 4EEA  
                                   u14778 2EEA                                     u14779 2F18  
                         __end_of___lwdiv 5512                           __end_of___lwmod 5920  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 22F4                                     i1l747 2430  
                                   i2l680 3C48                                     i2l681 3B98  
                                   i2l690 3BE2                                     i2l682 3BA6  
                                   i2l686 3BC8                                     i2l688 3C3A  
                                   i2l689 3C02                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B0  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E9  
                                   _USTAT 000F64                   __end_of_LedStateMachine 44FC  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 46DC                             _StringCompare 5512  
                                   _sd000 FE68                                     _sd001 FE21  
                                   _sd002 FDFB            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3AC2  
                             _ApnLenLocal 01F1                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5D5E  
                         __end_of_isdigit 5FF2                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 5C00  
                         __end_of_isspace 5E6A               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0038                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 5FAE  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 5EB8                 __end_of_Rtcc_GetRtccValue 4A66  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4F5C                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 536E  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 3928  
                         __end_of_tolower 612C                       __end_of_Mcu_Int0Isr 62D8  
                     __end_of_Mcu_Int1Isr 62D4                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 6144  
                  __end_of_GetElapsedTime 3DE8                     __end_of_UartSetConfig 5266  
                  __size_of_initGprsModem 009E               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 60FC  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2BC6  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 5E16                            _InitSchedTimer 5D8E  
                         __initialization 2584                          __end_of_MdmCntSm 4454  
                    __end_of_I2c_ReadData 2186                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 3F74                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 2F3A                              __end_of_atoi 3788  
                            __end_of_main 6276                       StringCompare@Result 008D  
                            __end_of_itoa 58DC                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01E1                              __end_of_utoa 43AC  
                            __end_of_xtoi 34F4                  __end_of_Rtcm_SetRtccDate 5416  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6294                      initGprsModem@initMdm 01D6  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03CD  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE56  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 48A8  
                              _ReceiveEvt 5DBC          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 621E  
                          ?_StringCompare 0085                          __end_of_Terminal 05EC  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4D1A                              _cdc_mem_type 01E2  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03EE  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3C58                _Uart_MdmGsmGprsReadService 3B8E  
              __end_of_UsbDevice_MainTask 5EDC                           getsUSBUSART@len 0086  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6054  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 546A  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1409 5BC4                               _GenerateEvt 6144  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC3D  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 4FC8                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 5DBC                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 62C8  
                              _UartConfig 0324                      __end_of_Mdm_MainTask 5604  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CC  
                           ??_Term_MainSm 00A7                                    _Relay1 01DC  
                                  _Relay2 01DB                                    _Relay3 01DA  
                                  _Relay4 01D9                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 57CA  
                                  _SmsLen 00D3                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 56F0                                    ___lmul 5266  
                    _I2cSlv_ReceiveI2cMsg 59A6                        TurnOnModem@Counter 02DC  
                            ?_putUSBUSART 0083                                    ___wmul 5E6A  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5604  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5416  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 493E  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5854           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 573C                    __size_of_HttpGetMethod 04D0  
                                  _memset 5CFE                                    clear_0 2630  
                                  clear_1 2642                                    clear_2 264E  
                                  clear_3 265A                                    clear_4 2666  
                                  clear_5 2672                                    clear_6 267E  
                                  clear_7 268A                                    clear_8 2696  
                                  clear_9 26A2                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E6                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EE                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F4  
                      ?_USBEnableEndpoint 0085                                    _strcat 51B2  
                                  _strcpy 5C9C                                    _strlen 5A26  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5B1C  
                HttpGetMethod@UartMessage 0100                             _initGprsModem 46DC  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 04BF  
                     ModemEvtParser@F9104 03C4                       ModemEvtParser@F9106 03BF  
                     ModemEvtParser@F9108 03BA                              _CDCTxService 2816  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC34  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 0339                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 62C0  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 53C2                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 62D4  
                             _Mcu_Int1Isr 62D0                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A8  
                    _controlTransferState 00CB                     __end_ofi1_GenerateEvt 619E  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4B84  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 02E4  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 26C0                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 62CC                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0188               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01F6                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 56A2  
         I2cSlv_QueryI2cData@TimeoutTimer 0347                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5094  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FE  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02E0  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 5898                               _InitNetwork 00DA  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE6C                             __end_of_sd001 FE3F  
                           __end_of_sd002 FE21                              __pidataBANK0 62D8  
                            __pidataBANK1 62D9                              __pidataBANK2 625C  
                            __pidataBANK3 5964                              __pidataBANK4 60FC  
                            __pidataBANK5 5564                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 5920  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 5C6A  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 60C8               __end_of_USBCtrlTrfInHandler 4036  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 0085  
                    StringCompare@String2 0087                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 6188                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 008B             I2cSlv_QueryI2cData@I2cOpState 01E8  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 5CCE                                _cdc_notice 044A  
                   __end_of_Tmr_TmrBPrSet 3240                       __end_of_Rtcc_RtcIsr 62D0  
                              _cdc_rx_len 00C6                         __end_of_MsgFormat FD2F  
                              _cdc_tx_len 00C4                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 5BCA                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E3                            ClearBuffer@Len 007F  
                         _secondsAppTimer 44FC                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 5E16                    _USBStdGetStatusHandler 40F4  
                       __end_of_SendSmsSm 1BAA       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01F0                            _Rtcc_RtcConfig 459E  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 0572                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 61B4                  __end_of_Uart_WriteString 5AE0  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 5F48                               _SetBaudRate 56A2  
               initGprsModem@modemCounter 03B8               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01F2                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 3152  
                               ?_TmrBInit 007D                             _CheckTxStatus 6294  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                       MyApp_Task@cmpString 0100  
                               ?_Terminal 0001                                   ?___lmul 007D  
                            _Led_MainTask 39F6                            _Rtcc_UnlockRtc 61FE  
                            _I2cBusStatus 01EA                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2E18  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2028  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE56                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 493E                     __end_of_UpdateSchFlag 60AC  
                            _EepromBuffer 049A                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00D8                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 2E18                         __end_of_WriteByte 628A  
                      _USBCheckStdRequest 34F4                         _configDescriptor1 FDB8  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 0486  
             __end_of_USBCtrlTrfTxService 36B0                       _USBStdSetCfgHandler 3328  
                       triggerRelay@F8982 03CB                   __size_of_ConfigureModem 00CE  
                  I2cSlv_QueryI2cData@Ret 01E7                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 5DEA                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 463E  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 0087  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2028  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 3EB0                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DF            __end_of_Pm_DsReleasePinControl 62B6  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 0118                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E1                  __size_of_blinkForSeconds 003A  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 002A  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FD  
                     _I2cSlv_QueryI2cData 3788                                   _Led2Sts 01FB  
                                 _Led3Sts 01F9                __end_of_Sch_SchmIntService 625C  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0090  
                           _cdc_trf_state 00C5                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 62BC  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   __end_of_Mdm_IsRinging 5F24                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CB                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DE                                   _RelayB2 01DD  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D7                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4EF0  
                  __end_of_Rtcc_UnlockRtc 620E                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 61C8  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD2F                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6072                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6172             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 4C10                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 4D9C                                   ___lldiv 4C96  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 54BE                         ??_USBStallHandler 007D  
                                 ___lwmod 58DC                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 62CC                      __size_of_putUSBUSART 0022  
                                 __pcinit 2584                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CE  
                     __end_of_TurnOnModem 5810                           __size_of_memset 0030  
                               _I2cConfig 0352                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDFB                                   __ramtop 0F00  
                             Terminal@Len 03AC                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 626A                                   __ptext1 5CCE  
                                 __ptext2 6276                                   __ptext3 62B0  
                                 __ptext4 6054                                   __ptext5 60C8  
                                 __ptext6 5E16                                   __ptext7 5D8E  
                                 __ptext8 3C58                                   __ptext9 3152  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 459E  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 5D2E                                   _isdigit 5FD0  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 26AE  
                                 clear_11 26BA                          ___awmod@dividend 007D  
                       ??_InitializeTasks 03FB                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 01D3       __end_of_Tmr_RegisterTmr2IsrCallback 6280  
             _Tmr_RegisterTmr2IsrCallback 6276                                   _isspace 5E40  
                            _Mdm_MainTask 55B4                                   _isupper 5F8C  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 22DC  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC3D  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 5F24  
                                 _sprintf 385A                                   _tolower 6114  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 623E  
                        _HttpGetDataLocal 03A3                  __end_of_Mdm_SetSmsFormat 5654  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 4256  
                                 _toupper 612C           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 26C0  
                            _getsUSBUSART 48A8                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DB  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC3B  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC34  
                          _ModemEvtParser 1D32                                   int_func 4256  
                         _USB1msTickCount 0318           _dummy_encapsulated_cmd_response 0377  
                               i1u1452_20 22F2                                 i1u1456_28 2412  
                               i1u1456_29 2426                                 i1u1481_28 5F34  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 6090  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 615C  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 5C9C  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 463E  
                      _UsbDevice_MainTask 5EB8                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 62BC                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 3052  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01EB  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2584  
                         _RtccIsrCallback 02E8          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C7  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 5F6A                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 61DA                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 6014                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02EA                          _HttpGetMethodSts 01EF  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E4                           ??_HttpGetMethod 009D  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 1EBA                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D5  
                   __end_of_StopCondition 62C4                  __size_of_HighPriorityIsr 42FA  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 036E                                 _Led2Blink 0365  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 035C  
            __end_of_USBTransferOnePacket 40F4                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0392                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 181C  
               __end_of_Rtcc_SetRtcStatus 6172                                 _Led2Pulse 038C  
                               _Led3Pulse 0386                         _I2cSlv_SendI2cMsg 5A64  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                       ??_blinkForSeconds 0095                           ??_ScheduleTasks 03FB  
                          _Tmr_TmrBConfig 3C58                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 61DA                         _OsAlrm_SetOsAlarm 3DE8  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 56F0  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 57CA  
                               _ClipEvent 00DE                              ??_MyApp_Task 00B0  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00D9  
                  _USBCtrlTrfSetupHandler 4B84                        ?_OsAlrm_SetOsAlarm 0083  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 22DC  
   __end_of_USBIncrement1msInternalTimers 5F8C    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 5F6A               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 52BE                            _CheckAckStatus 629E  
                          __end_of___wmul 5E92                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 61EC                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 5784                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 5D2E  
                      _UartTxBufferStatus 5654                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E5                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 624E                                 _MdmStatus 00D1  
                          __end_of_strcat 520E                            __end_of_strcpy 5CCE  
                          __end_of_strlen 5A64                            __end_of_strtol 19F2  
                     start_initialization 2584                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3928  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 5C36  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4812           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC3F                        __end_of_MyApp_Task 3052  
                        _UpdateOsCounters 622E                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3B8E                 __end_of_I2cSlv_SendI2cMsg 5AA2  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 49D2                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 621E  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3D20                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3EB0                    __end_of_Tmr_TmrBIrqSet 573C  
                               _TaskTable 05A4                                 _RingEvent 00DF  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D4                         __size_of_ReadByte 000A  
                               _RtcConfig 03B4                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 520E  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 5DEA  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 60E2  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 62A8  
                                ??___lmul 0085                             _isxdigit$6469 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BC6                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 4D9C                        HttpGetMethod@Index 01C8  
                             __pdataBANK0 00E2                               __pdataBANK1 01FF  
                             __pdataBANK2 02F3                               __pdataBANK3 03BA  
                             __pdataBANK4 04BF                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 546A  
                  __end_of_ConfigureModem 39F6                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D6            __end_of_USBStdGetStatusHandler 41A6  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC3F  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5564                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03FB  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002F  
                  MyApp_Task@blinkSeconds 01D5                              _SetAckStatus 61B4  
                            _isalpha$6459 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6280                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6193 007E             UpdateSchFlag@InterruptCounter 02DE  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 59E6  
     InitGprsNetwork@GprsNetInitNextState 00D0                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 6034                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5B56              __end_of_LedBlinkStateMachine 2816  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 5810                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 60C8  
              __end_of_USBCheckCDCRequest 4256              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5316                           ?_Tmr_TmrBIrqSet 007D  
                    MyApp_Task@blinkTicks 03F9                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 6034  
                            ??_StringCopy 0083                          _Led_SetLedStatus 5D5E  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 5FF2                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC34                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 546A                                 __ptext101 3788  
                               __ptext110 1D32                                 __ptext102 4D1A  
                               __ptext111 5C36                                 __ptext103 5A64  
                               __ptext120 43AC                                 __ptext112 5512  
                               __ptext104 59A6                                 __ptext121 62A8  
                               __ptext113 2A94                                 __ptext105 5FF2  
                               __ptext130 4A66                                 __ptext122 0DC8  
                               __ptext114 3928                                 __ptext106 520E  
                           Terminal@Index 00A6                                 __ptext131 3D20  
                               __ptext123 05EC                                 __ptext115 0ABC  
                               __ptext107 57CA                                 __ptext140 5E6A  
                               __ptext132 61EC                                 __ptext124 5AA2  
                               __ptext116 295C                                 __ptext108 19F2  
                               __ptext141 4E0E                                 __ptext133 5C00  
                               __ptext125 5920                                 __ptext117 5266  
                               __ptext109 59E6                                 __ptext150 62C0  
                               __ptext142 56A2                                 __ptext134 4454  
                               __ptext126 6034                                 __ptext118 52BE  
                               __ptext151 62C4                                 __ptext143 4C96  
                               __ptext135 3240                                 __ptext127 5654  
                               __ptext119 2432                                 __ptext160 624E  
                               __ptext152 61B4                                 __ptext144 5DEA  
                               __ptext136 5D5E                                 __ptext128 5094  
                               __ptext161 6090                                 __ptext153 628A  
                               __ptext145 3EB0                                 __ptext137 26CE  
                               __ptext129 5154                                 __ptext170 623E  
                               __ptext162 622E                                 __ptext154 6144  
                               __ptext146 5DBC                                 __ptext138 54BE  
                               __ptext171 3B8E                                 __ptext163 22DC  
                               __ptext155 62C8                                 __ptext147 1EBA  
                               __ptext139 3DE8                                 __ptext172 619E  
                               __ptext164 5E92                                 __ptext156 6294  
                               __ptext148 2028                                 __ptext173 62CC  
                               __ptext165 5316                                 __ptext157 629E  
                               __ptext149 6280                                 __ptext174 62D0  
                               __ptext166 60AC                                 __ptext175 62D4  
                               __ptext167 5B90                                 __ptext159 5F24  
                               __ptext176 0000                                 __ptext168 6188  
                                ?___awmod 007D                        _Sch_SchmIntService 624E  
                         _InitializeTasks 4E80                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04B4                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0398  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 4036                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 0440                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039E  
          InitializeTasks@ActiveTaskIndex 03FD                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 502E                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 502E  
              ConfigureModem@DelayCounter 02D8                        __end_of_StringCopy 50F6  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00E0  
                         Terminal@SwTimer 04A9                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 01D8  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02DA  
                        _OsTmr_StartTimer 5154                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6188  
              __end_of_Mcu_StartSystemPll 6072                              _PhoneNumbLen 00D2  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 5F48  
                           _Rtcm_MainTask 4AF6                            ___wmul@product 0081  
                ModemEvtParser@ClipString 009A                          SendSmsSm@SwTimer 03E3  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 0028  
         HttpGetMethod@GetMethodNextState 00CF                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 4E0E                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 5CFE                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      MyApp_Task@memoryFlag 00E2  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4AF6  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A9                      _USBConfigureEndpoint 477A  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2432                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5E92                     __end_of_initGprsModem 477A  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 62B0                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E6                                  _ApnLocal 02D6  
                          _StartCondition 62C4                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0089               HttpGetMethod@GetMethodState 01EC  
                           _Tmr_TmrBPrSet 3152                         _NewStringReceived 003C  
                            _isspace$6462 007E                          _UartSetConfigLow 52BE  
                                _GetSmsSm 2A94                   __end_of_USBStallHandler 5854  
                    Mdm_DrvMainFn@Options 0001                           _blinkForSeconds 5B56  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03D8  
                                _MdmCntSm 43AC                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 2598  
                               copy_data1 25B8                                 copy_data2 25D8  
                               copy_data3 260A              __end_of_LedPulseStateMachine 3328  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 340E                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 628A  
                           i2_GenerateEvt 619E                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE68  
               __end_of_I2c_InitI2cModule 4E80                                  _MsgReady FE3F  
                         ??_Term_MainTask 00A7                   __end_of_InitializeTasks 4EF0  
              initGprsModem@isInitialized 01D7                   ?_USBCtrlTrfSetupHandler 0001  
             __end_of_I2cSlv_QueryI2cData 385A                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 4812  
                    __size_of_SetBaudRate 004E                              ?_TurnOnModem 0001  
                                _TxBuffer 0320                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DD  
                         _SetUartBaudRate 295C              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EBA                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                           MyApp_Task@F9007 03C8  
                __end_of_UpdateOsCounters 623E                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02F0                             _UpdateSchFlag 6090  
                     __end_of_putUSBUSART 5FD0                               _line_coding 037F  
                            _Rtcc_LockRtc 620E              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 26CE                    __end_of_StartCondition 62C8  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F3                 Rtcm_GetRtccDate@LocalDate 008A  
                I2c_WriteData@WriteStatus 0035                              _isupper$6465 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0090  
                        _GetOsTickCounter 61EC                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A8  
                ModemEvtParser@RingString 00A4                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                         MyApp_Task@phone 04C9                                  __ptext10 56F0  
                                __ptext11 6014                                  __ptext20 5EB8  
                                __ptext12 4812                                  __ptext21 5784  
                                __ptext13 6072                           ??_UartWriteByte 007E  
                                __ptext30 5C6A                                  __ptext22 55B4  
                                __ptext14 2E18                                  __ptext31 5810  
                                __ptext23 536E                                  __ptext15 4E80  
                                __ptext40 3328                                  __ptext32 5F6A  
                                __ptext24 62B6                                  __ptext16 2F3A  
                                __ptext41 40F4                                  __ptext33 2186  
                                __ptext25 5F48                                  __ptext17 60E2  
                                __ptext50 2CF4                                  __ptext42 2BC6  
                                __ptext34 493E                                  __ptext26 61C8  
                                __ptext18 4AF6                                  __ptext51 3AC2  
                                __ptext43 135A                                  __ptext35 573C  
                                __ptext27 62BC                                  __ptext19 39F6  
                                __ptext60 00D0                                  __ptext52 3F74  
                                __ptext44 50F6                                  __ptext36 4B84  
                                __ptext28 1BAA                                  __ptext61 340E  
                                __ptext53 35D8                                  __ptext45 41A6  
                                __ptext37 3052                                  __ptext29 5B1C  
                                __ptext70 5FAE                                  __ptext62 6114  
                                __ptext54 2816                                  __ptext46 4EF0  
                                __ptext38 463E                                  __ptext71 5898  
                                __ptext63 5AE0                                  __ptext55 10B6  
                                __ptext47 5854                                  __ptext39 34F4  
                                __ptext80 15EE                                  __ptext72 4302  
                                __ptext64 181C                                  __ptext56 5A26  
                                __ptext48 477A                                  __ptext81 4D9C  
                                __ptext73 58DC                                  __ptext65 612C  
                                __ptext57 51B2                                  __ptext49 4FC8  
                                __ptext90 46DC                                  __ptext82 4C10  
                                __ptext74 48A8                                  __ptext66 5E40  
                                __ptext58 385A                                  __ptext91 5604  
                                __ptext83 620E                                  __ptext75 4036  
                                __ptext67 5D2E                                  __ptext59 5CFE  
                                __ptext92 5B56                                  __ptext84 502E  
                                __ptext76 36B0                                  __ptext68 5F8C  
                                __ptext93 44FC                                  __ptext85 49D2  
                                __ptext77 5FD0                                  __ptext69 5C9C  
                                __ptext94 621E                                  __ptext86 615C  
                                __ptext78 53C2                                  __ptext95 5EDC  
                                __ptext87 459E                                  __ptext79 61FE  
                                __ptext96 5F00                                  __ptext88 6172  
                                __ptext97 61DA                                  __ptext89 4F5C  
                                __ptext98 5416                                  __ptext99 5BCA  
                        __size_of_isupper 0022                                _I2cDummyTx 60AC  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 5EDC  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4C10  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 629E                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 62B6                        ??_USBCtrlEPService 0097  
                                _isxdigit 5AE0                             _Mdm_IsRinging 5F00  
                     _USBCtrlTrfInHandler 3F74                  I2c_ReadData@I2cReadState 0034  
              __end_of_Mdm_RequestSmsData 622E                     __end_of_ScheduleTasks 2F3A  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4FC8  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3AC2  
                     ??_Mdm_IsSmsReceived 0081                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 03FF                                strtol@sign 0093  
                         Term_MainSm@Data 0454                            _PhoneNumberLen 0322  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                 blinkForSeconds@blinkTicks 0093  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5B90  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5B90  
                __end_of_Mcu_ConfigExtInt 60E2                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C8                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 6014                  __end_of_Led_SetLedStatus 5D8E  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 53C2  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 5F00  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 4A66                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0156   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5154  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 50F6  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2A94                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009F                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5964                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 5BCA  
                __end_of_Rtcm_GetRtccDate 5094                               _putUSBUSART 5FAE  
                     _USBCtrlTrfRxService 2CF4                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 5B1C  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 51B2  
                    _LedPulseStateMachine 3240                        _USBCheckCDCRequest 41A6  
                     _USBCtrlTrfTxService 35D8                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                          _Rtcc_AlarmConfig 4F5C  
                         ??_Tmr_TmrBPrSet 009A                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01E0  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5784  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5E40                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CA                                _WDTCONbits 000FC0  
                  MyApp_Task@memoryResult 0103                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 4454  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 62C0  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00C9                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 5C36  
                    __end_of_CDCTxService 295C                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC3B  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F5                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 61C8  
