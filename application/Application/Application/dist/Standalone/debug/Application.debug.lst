

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 19 17:23:48 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   207                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   208                           	psect	text170,global,reloc=2,class=CODE,delta=1
   209                           	psect	text171,global,reloc=2,class=CODE,delta=1
   210                           	psect	text172,global,reloc=2,class=CODE,delta=1
   211                           	psect	text173,global,reloc=2,class=CODE,delta=1
   212                           	psect	text174,global,reloc=2,class=CODE,delta=1
   213                           	psect	text175,global,reloc=2,class=CODE,delta=1
   214                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   215                           	psect	text176,global,reloc=2,class=CODE,delta=1
   216                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   217                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   218                           	dabs	1,0x400,48,_BDT
   219                           	dabs	1,0x438,8,_CtrlTrfData
   220                           	dabs	1,0x430,8,_SetupPkt
   221  0000                     
   222                           ; Version 1.45
   223                           ; Generated 16/11/2017 GMT
   224                           ; 
   225                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   226                           ; All rights reserved.
   227                           ; 
   228                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   229                           ; 
   230                           ; Redistribution and use in source and binary forms, with or without modification, are
   231                           ; permitted provided that the following conditions are met:
   232                           ; 
   233                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   234                           ;        conditions and the following disclaimer.
   235                           ; 
   236                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   237                           ;        of conditions and the following disclaimer in the documentation and/or other
   238                           ;        materials provided with the distribution.
   239                           ; 
   240                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   241                           ;        software without specific prior written permission.
   242                           ; 
   243                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   244                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   245                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   246                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   247                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   248                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   249                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   250                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   251                           ; 
   252                           ; 
   253                           ; Code-generator required, PIC18F46J50 Definitions
   254                           ; 
   255                           ; SFR Addresses
   256  0000                     
   257                           	psect	idataBANK0
   258  0062DA                     __pidataBANK0:
   259                           	opt stack 0
   260                           
   261                           ;initializer for MyApp_Task@memoryFlag
   262  0062DA  01                 	db	1
   263                           
   264                           	psect	idataBANK1
   265  0062DB                     __pidataBANK1:
   266                           	opt stack 0
   267                           
   268                           ;initializer for InitGprsNetwork@GprsInitSts
   269  0062DB  01                 	db	1
   270                           
   271                           	psect	idataBANK2
   272  00625E                     __pidataBANK2:
   273                           	opt stack 0
   274                           
   275                           ;initializer for Terminal@EchoOption
   276  00625E  01                 	db	1
   277                           
   278                           ;initializer for _MainSystemTimebaseFlag
   279  00625F  01                 	db	1
   280                           
   281                           ;initializer for _ConnTimeout
   282  006260  00                 	db	0
   283  006261  01                 	db	1
   284  006262  0000               	dw	0
   285  006264  0000               	dw	0
   286  006266  0000               	dw	0
   287  006268  0000               	dw	0
   288  00626A  00                 	db	0
   289                           
   290                           	psect	idataBANK3
   291  005966                     __pidataBANK3:
   292                           	opt stack 0
   293                           
   294                           ;initializer for ModemEvtParser@F9108
   295  005966  2B                 	db	43
   296  005967  43                 	db	67
   297  005968  4D                 	db	77
   298  005969  54                 	db	84
   299  00596A  49                 	db	73
   300                           
   301                           ;initializer for ModemEvtParser@F9106
   302  00596B  2B                 	db	43
   303  00596C  43                 	db	67
   304  00596D  4C                 	db	76
   305  00596E  49                 	db	73
   306  00596F  50                 	db	80
   307                           
   308                           ;initializer for ModemEvtParser@F9104
   309  005970  52                 	db	82
   310  005971  49                 	db	73
   311  005972  4E                 	db	78
   312  005973  47                 	db	71
   313                           
   314                           ;initializer for MyApp_Task@F9007
   315  005974  63                 	db	99
   316  005975  61                 	db	97
   317  005976  74                 	db	116
   318                           
   319                           ;initializer for triggerRelay@F8982
   320  005977  50                 	db	80
   321  005978  00                 	db	0
   322                           
   323                           ;initializer for Term_MainSm@TermDelay
   324  005979  01                 	db	1
   325  00597A  01                 	db	1
   326  00597B  0000               	dw	0
   327  00597D  0000               	dw	0
   328  00597F  0000               	dw	0
   329  005981  0000               	dw	0
   330  005983  00                 	db	0
   331                           
   332                           ;initializer for _ConnWait
   333  005984  00                 	db	0
   334  005985  01                 	db	1
   335  005986  0000               	dw	0
   336  005988  0000               	dw	0
   337  00598A  0000               	dw	0
   338  00598C  0000               	dw	0
   339  00598E  00                 	db	0
   340                           
   341                           ;initializer for SendSmsSm@SwTimer
   342  00598F  01                 	db	1
   343  005990  01                 	db	1
   344  005991  0000               	dw	0
   345  005993  0000               	dw	0
   346  005995  0000               	dw	0
   347  005997  0000               	dw	0
   348  005999  00                 	db	0
   349                           
   350                           ;initializer for CheckModem@Timeout
   351  00599A  00                 	db	0
   352  00599B  01                 	db	1
   353  00599C  0000               	dw	0
   354  00599E  0000               	dw	0
   355  0059A0  0000               	dw	0
   356  0059A2  0000               	dw	0
   357  0059A4  00                 	db	0
   358                           
   359                           ;initializer for MyApp_Task@blinkTicks
   360  0059A5  FFFF               	dw	65535
   361                           
   362                           	psect	idataBANK4
   363  0060FE                     __pidataBANK4:
   364                           	opt stack 0
   365                           
   366                           ;initializer for ModemEvtParser@F9110
   367  0060FE  43                 	db	67
   368  0060FF  61                 	db	97
   369  006100  6C                 	db	108
   370  006101  6C                 	db	108
   371  006102  20                 	db	32
   372  006103  52                 	db	82
   373  006104  65                 	db	101
   374  006105  61                 	db	97
   375  006106  64                 	db	100
   376  006107  79                 	db	121
   377                           
   378                           ;initializer for MyApp_Task@phone
   379  006108  2B                 	db	43
   380  006109  33                 	db	51
   381  00610A  39                 	db	57
   382  00610B  30                 	db	48
   383  00610C  31                 	db	49
   384  00610D  32                 	db	50
   385  00610E  33                 	db	51
   386  00610F  34                 	db	52
   387  006110  35                 	db	53
   388  006111  36                 	db	54
   389  006112  37                 	db	55
   390  006113  38                 	db	56
   391  006114  39                 	db	57
   392  006115  00                 	db	0
   393                           
   394                           	psect	idataBANK5
   395  005566                     __pidataBANK5:
   396                           	opt stack 0
   397                           
   398                           ;initializer for _TaskTable
   399  005566  B8                 	db	low _Mdm_DrvMainFn
   400  005567  62                 	db	high _Mdm_DrvMainFn
   401  005568  00                 	db	0
   402  005569  0000               	dw	0
   403  00556B  000A               	dw	10
   404  00556D  00                 	db	0
   405  00556E  70                 	db	low _I2cSlv_MainTask
   406  00556F  53                 	db	high _I2cSlv_MainTask
   407  005570  00                 	db	0
   408  005571  0000               	dw	0
   409  005573  0001               	dw	1
   410  005575  00                 	db	0
   411  005576  B6                 	db	low _Mdm_MainTask
   412  005577  55                 	db	high _Mdm_MainTask
   413  005578  00                 	db	0
   414  005579  0000               	dw	0
   415  00557B  0001               	dw	1
   416  00557D  00                 	db	0
   417  00557E  86                 	db	low _MdmHttp_MainTask
   418  00557F  57                 	db	high _MdmHttp_MainTask
   419  005580  00                 	db	0
   420  005581  0000               	dw	0
   421  005583  0001               	dw	1
   422  005585  00                 	db	0
   423  005586  BA                 	db	low _UsbDevice_MainTask
   424  005587  5E                 	db	high _UsbDevice_MainTask
   425  005588  00                 	db	0
   426  005589  0000               	dw	0
   427  00558B  0001               	dw	1
   428  00558D  00                 	db	0
   429  00558E  4A                 	db	low _Wdg_MainTask
   430  00558F  5F                 	db	high _Wdg_MainTask
   431  005590  00                 	db	0
   432  005591  0000               	dw	0
   433  005593  0064               	dw	100
   434  005595  00                 	db	0
   435  005596  F8                 	db	low _Led_MainTask
   436  005597  39                 	db	high _Led_MainTask
   437  005598  00                 	db	0
   438  005599  0000               	dw	0
   439  00559B  0032               	dw	50
   440  00559D  00                 	db	0
   441  00559E  F8                 	db	low _Rtcm_MainTask
   442  00559F  4A                 	db	high _Rtcm_MainTask
   443  0055A0  00                 	db	0
   444  0055A1  0000               	dw	0
   445  0055A3  0064               	dw	100
   446  0055A5  00                 	db	0
   447  0055A6  E4                 	db	low _Term_MainTask
   448  0055A7  60                 	db	high _Term_MainTask
   449  0055A8  00                 	db	0
   450  0055A9  0000               	dw	0
   451  0055AB  0001               	dw	1
   452  0055AD  00                 	db	0
   453  0055AE  3A                 	db	low _MyApp_Task
   454  0055AF  2F                 	db	high _MyApp_Task
   455  0055B0  00                 	db	0
   456  0055B1  0000               	dw	0
   457  0055B3  0064               	dw	100
   458  0055B5  00                 	db	0
   459                           
   460                           	psect	mediumconst
   461  00FC34                     __pmediumconst:
   462                           	opt stack 0
   463  00FC34  00                 	db	0
   464  00FC35                     _USB_SD_Ptr:
   465                           	opt stack 0
   466  00FC35  68                 	db	low _sd000
   467  00FC36  FE                 	db	high _sd000
   468  00FC37  21                 	db	low _sd001
   469  00FC38  FE                 	db	high _sd001
   470  00FC39  FB                 	db	low _sd002
   471  00FC3A  FD                 	db	high _sd002
   472  00FC3B                     __end_of_USB_SD_Ptr:
   473                           	opt stack 0
   474  00FC3B                     _USB_CD_Ptr:
   475                           	opt stack 0
   476  00FC3B  B8                 	db	low _configDescriptor1
   477  00FC3C  FD                 	db	high _configDescriptor1
   478  00FC3D                     __end_of_USB_CD_Ptr:
   479                           	opt stack 0
   480  00FC3D                     _TaskNumber:
   481                           	opt stack 0
   482  00FC3D  000A               	dw	10
   483  00FC3F                     __end_of_TaskNumber:
   484                           	opt stack 0
   485  00FC3F                     _MsgFormat:
   486                           	opt stack 0
   487  00FC3F  48                 	db	72
   488  00FC40  6F                 	db	111
   489  00FC41  73                 	db	115
   490  00FC42  74                 	db	116
   491  00FC43  20                 	db	32
   492  00FC44  6D                 	db	109
   493  00FC45  65                 	db	101
   494  00FC46  73                 	db	115
   495  00FC47  73                 	db	115
   496  00FC48  61                 	db	97
   497  00FC49  67                 	db	103
   498  00FC4A  65                 	db	101
   499  00FC4B  20                 	db	32
   500  00FC4C  66                 	db	102
   501  00FC4D  6F                 	db	111
   502  00FC4E  72                 	db	114
   503  00FC4F  6D                 	db	109
   504  00FC50  61                 	db	97
   505  00FC51  74                 	db	116
   506  00FC52  3A                 	db	58
   507  00FC53  20                 	db	32
   508  00FC54  0D                 	db	13
   509  00FC55  0A                 	db	10
   510  00FC56  5B                 	db	91
   511  00FC57  6F                 	db	111
   512  00FC58  70                 	db	112
   513  00FC59  5F                 	db	95
   514  00FC5A  74                 	db	116
   515  00FC5B  79                 	db	121
   516  00FC5C  70                 	db	112
   517  00FC5D  65                 	db	101
   518  00FC5E  5D                 	db	93
   519  00FC5F  3A                 	db	58
   520  00FC60  5B                 	db	91
   521  00FC61  6F                 	db	111
   522  00FC62  70                 	db	112
   523  00FC63  5D                 	db	93
   524  00FC64  3A                 	db	58
   525  00FC65  5B                 	db	91
   526  00FC66  6C                 	db	108
   527  00FC67  65                 	db	101
   528  00FC68  6E                 	db	110
   529  00FC69  5D                 	db	93
   530  00FC6A  3A                 	db	58
   531  00FC6B  5B                 	db	91
   532  00FC6C  61                 	db	97
   533  00FC6D  64                 	db	100
   534  00FC6E  64                 	db	100
   535  00FC6F  72                 	db	114
   536  00FC70  5D                 	db	93
   537  00FC71  3A                 	db	58
   538  00FC72  5B                 	db	91
   539  00FC73  70                 	db	112
   540  00FC74  61                 	db	97
   541  00FC75  79                 	db	121
   542  00FC76  6C                 	db	108
   543  00FC77  6F                 	db	111
   544  00FC78  61                 	db	97
   545  00FC79  64                 	db	100
   546  00FC7A  5D                 	db	93
   547  00FC7B  0D                 	db	13
   548  00FC7C  0A                 	db	10
   549  00FC7D  0D                 	db	13
   550  00FC7E  0A                 	db	10
   551  00FC7F  5B                 	db	91
   552  00FC80  6F                 	db	111
   553  00FC81  70                 	db	112
   554  00FC82  5F                 	db	95
   555  00FC83  74                 	db	116
   556  00FC84  79                 	db	121
   557  00FC85  70                 	db	112
   558  00FC86  65                 	db	101
   559  00FC87  5D                 	db	93
   560  00FC88  20                 	db	32
   561  00FC89  3D                 	db	61
   562  00FC8A  20                 	db	32
   563  00FC8B  53                 	db	83
   564  00FC8C  4F                 	db	79
   565  00FC8D  2C                 	db	44
   566  00FC8E  53                 	db	83
   567  00FC8F  42                 	db	66
   568  00FC90  0D                 	db	13
   569  00FC91  0A                 	db	10
   570  00FC92  5B                 	db	91
   571  00FC93  6F                 	db	111
   572  00FC94  70                 	db	112
   573  00FC95  5D                 	db	93
   574  00FC96  20                 	db	32
   575  00FC97  3D                 	db	61
   576  00FC98  20                 	db	32
   577  00FC99  52                 	db	82
   578  00FC9A  3A                 	db	58
   579  00FC9B  20                 	db	32
   580  00FC9C  72                 	db	114
   581  00FC9D  65                 	db	101
   582  00FC9E  61                 	db	97
   583  00FC9F  64                 	db	100
   584  00FCA0  2C                 	db	44
   585  00FCA1  57                 	db	87
   586  00FCA2  3A                 	db	58
   587  00FCA3  20                 	db	32
   588  00FCA4  77                 	db	119
   589  00FCA5  72                 	db	114
   590  00FCA6  69                 	db	105
   591  00FCA7  74                 	db	116
   592  00FCA8  65                 	db	101
   593  00FCA9  0D                 	db	13
   594  00FCAA  0A                 	db	10
   595  00FCAB  5B                 	db	91
   596  00FCAC  6C                 	db	108
   597  00FCAD  65                 	db	101
   598  00FCAE  6E                 	db	110
   599  00FCAF  5D                 	db	93
   600  00FCB0  20                 	db	32
   601  00FCB1  3D                 	db	61
   602  00FCB2  20                 	db	32
   603  00FCB3  32                 	db	50
   604  00FCB4  20                 	db	32
   605  00FCB5  62                 	db	98
   606  00FCB6  79                 	db	121
   607  00FCB7  74                 	db	116
   608  00FCB8  65                 	db	101
   609  00FCB9  20                 	db	32
   610  00FCBA  41                 	db	65
   611  00FCBB  53                 	db	83
   612  00FCBC  43                 	db	67
   613  00FCBD  49                 	db	73
   614  00FCBE  49                 	db	73
   615  00FCBF  0D                 	db	13
   616  00FCC0  0A                 	db	10
   617  00FCC1  5B                 	db	91
   618  00FCC2  61                 	db	97
   619  00FCC3  64                 	db	100
   620  00FCC4  64                 	db	100
   621  00FCC5  72                 	db	114
   622  00FCC6  5D                 	db	93
   623  00FCC7  20                 	db	32
   624  00FCC8  3D                 	db	61
   625  00FCC9  20                 	db	32
   626  00FCCA  32                 	db	50
   627  00FCCB  20                 	db	32
   628  00FCCC  62                 	db	98
   629  00FCCD  79                 	db	121
   630  00FCCE  74                 	db	116
   631  00FCCF  65                 	db	101
   632  00FCD0  20                 	db	32
   633  00FCD1  41                 	db	65
   634  00FCD2  53                 	db	83
   635  00FCD3  43                 	db	67
   636  00FCD4  49                 	db	73
   637  00FCD5  49                 	db	73
   638  00FCD6  0D                 	db	13
   639  00FCD7  0A                 	db	10
   640  00FCD8  5B                 	db	91
   641  00FCD9  70                 	db	112
   642  00FCDA  61                 	db	97
   643  00FCDB  79                 	db	121
   644  00FCDC  6C                 	db	108
   645  00FCDD  6F                 	db	111
   646  00FCDE  61                 	db	97
   647  00FCDF  64                 	db	100
   648  00FCE0  5D                 	db	93
   649  00FCE1  20                 	db	32
   650  00FCE2  3D                 	db	61
   651  00FCE3  20                 	db	32
   652  00FCE4  6D                 	db	109
   653  00FCE5  61                 	db	97
   654  00FCE6  78                 	db	120
   655  00FCE7  20                 	db	32
   656  00FCE8  32                 	db	50
   657  00FCE9  30                 	db	48
   658  00FCEA  20                 	db	32
   659  00FCEB  62                 	db	98
   660  00FCEC  79                 	db	121
   661  00FCED  74                 	db	116
   662  00FCEE  65                 	db	101
   663  00FCEF  20                 	db	32
   664  00FCF0  41                 	db	65
   665  00FCF1  53                 	db	83
   666  00FCF2  43                 	db	67
   667  00FCF3  49                 	db	73
   668  00FCF4  49                 	db	73
   669  00FCF5  0D                 	db	13
   670  00FCF6  0A                 	db	10
   671  00FCF7  0D                 	db	13
   672  00FCF8  0A                 	db	10
   673  00FCF9  54                 	db	84
   674  00FCFA  65                 	db	101
   675  00FCFB  72                 	db	114
   676  00FCFC  6D                 	db	109
   677  00FCFD  69                 	db	105
   678  00FCFE  6E                 	db	110
   679  00FCFF  61                 	db	97
   680  00FD00  6C                 	db	108
   681  00FD01  20                 	db	32
   682  00FD02  4D                 	db	77
   683  00FD03  6F                 	db	111
   684  00FD04  64                 	db	100
   685  00FD05  65                 	db	101
   686  00FD06  3A                 	db	58
   687  00FD07  20                 	db	32
   688  00FD08  43                 	db	67
   689  00FD09  4F                 	db	79
   690  00FD0A  4D                 	db	77
   691  00FD0B  4D                 	db	77
   692  00FD0C  41                 	db	65
   693  00FD0D  4E                 	db	78
   694  00FD0E  44                 	db	68
   695  00FD0F  20                 	db	32
   696  00FD10  4D                 	db	77
   697  00FD11  4F                 	db	79
   698  00FD12  44                 	db	68
   699  00FD13  45                 	db	69
   700  00FD14  0D                 	db	13
   701  00FD15  0A                 	db	10
   702  00FD16  4D                 	db	77
   703  00FD17  6F                 	db	111
   704  00FD18  64                 	db	100
   705  00FD19  65                 	db	101
   706  00FD1A  6D                 	db	109
   707  00FD1B  20                 	db	32
   708  00FD1C  54                 	db	84
   709  00FD1D  79                 	db	121
   710  00FD1E  70                 	db	112
   711  00FD1F  65                 	db	101
   712  00FD20  3A                 	db	58
   713  00FD21  20                 	db	32
   714  00FD22  47                 	db	71
   715  00FD23  53                 	db	83
   716  00FD24  4D                 	db	77
   717  00FD25  2F                 	db	47
   718  00FD26  47                 	db	71
   719  00FD27  50                 	db	80
   720  00FD28  52                 	db	82
   721  00FD29  53                 	db	83
   722  00FD2A  0D                 	db	13
   723  00FD2B  0A                 	db	10
   724  00FD2C  0D                 	db	13
   725  00FD2D  0A                 	db	10
   726  00FD2E  00                 	db	0
   727  00FD2F                     __end_of_MsgFormat:
   728                           	opt stack 0
   729  00FD2F                     _Welcome:
   730                           	opt stack 0
   731  00FD2F  2A                 	db	42
   732  00FD30  2A                 	db	42
   733  00FD31  2A                 	db	42
   734  00FD32  2A                 	db	42
   735  00FD33  2A                 	db	42
   736  00FD34  2A                 	db	42
   737  00FD35  2A                 	db	42
   738  00FD36  2A                 	db	42
   739  00FD37  2A                 	db	42
   740  00FD38  2A                 	db	42
   741  00FD39  2A                 	db	42
   742  00FD3A  2A                 	db	42
   743  00FD3B  2A                 	db	42
   744  00FD3C  2A                 	db	42
   745  00FD3D  2A                 	db	42
   746  00FD3E  2A                 	db	42
   747  00FD3F  2A                 	db	42
   748  00FD40  2A                 	db	42
   749  00FD41  2A                 	db	42
   750  00FD42  2A                 	db	42
   751  00FD43  2A                 	db	42
   752  00FD44  2A                 	db	42
   753  00FD45  2A                 	db	42
   754  00FD46  2A                 	db	42
   755  00FD47  2A                 	db	42
   756  00FD48  2A                 	db	42
   757  00FD49  2A                 	db	42
   758  00FD4A  2A                 	db	42
   759  00FD4B  2A                 	db	42
   760  00FD4C  2A                 	db	42
   761  00FD4D  2A                 	db	42
   762  00FD4E  2A                 	db	42
   763  00FD4F  2A                 	db	42
   764  00FD50  2A                 	db	42
   765  00FD51  2A                 	db	42
   766  00FD52  2A                 	db	42
   767  00FD53  2A                 	db	42
   768  00FD54  2A                 	db	42
   769  00FD55  2A                 	db	42
   770  00FD56  2A                 	db	42
   771  00FD57  2A                 	db	42
   772  00FD58  2A                 	db	42
   773  00FD59  2A                 	db	42
   774  00FD5A  2A                 	db	42
   775  00FD5B  2A                 	db	42
   776  00FD5C  2A                 	db	42
   777  00FD5D  2A                 	db	42
   778  00FD5E  2A                 	db	42
   779  00FD5F  2A                 	db	42
   780  00FD60  0D                 	db	13
   781  00FD61  0A                 	db	10
   782  00FD62  20                 	db	32
   783  00FD63  20                 	db	32
   784  00FD64  20                 	db	32
   785  00FD65  20                 	db	32
   786  00FD66  20                 	db	32
   787  00FD67  20                 	db	32
   788  00FD68  20                 	db	32
   789  00FD69  20                 	db	32
   790  00FD6A  20                 	db	32
   791  00FD6B  20                 	db	32
   792  00FD6C  20                 	db	32
   793  00FD6D  20                 	db	32
   794  00FD6E  20                 	db	32
   795  00FD6F  20                 	db	32
   796  00FD70  20                 	db	32
   797  00FD71  20                 	db	32
   798  00FD72  20                 	db	32
   799  00FD73  20                 	db	32
   800  00FD74  4D                 	db	77
   801  00FD75  45                 	db	69
   802  00FD76  52                 	db	82
   803  00FD77  43                 	db	67
   804  00FD78  55                 	db	85
   805  00FD79  52                 	db	82
   806  00FD7A  59                 	db	89
   807  00FD7B  20                 	db	32
   808  00FD7C  53                 	db	83
   809  00FD7D  59                 	db	89
   810  00FD7E  53                 	db	83
   811  00FD7F  54                 	db	84
   812  00FD80  45                 	db	69
   813  00FD81  4D                 	db	77
   814  00FD82  0D                 	db	13
   815  00FD83  0A                 	db	10
   816  00FD84  2A                 	db	42
   817  00FD85  2A                 	db	42
   818  00FD86  2A                 	db	42
   819  00FD87  2A                 	db	42
   820  00FD88  2A                 	db	42
   821  00FD89  2A                 	db	42
   822  00FD8A  2A                 	db	42
   823  00FD8B  2A                 	db	42
   824  00FD8C  2A                 	db	42
   825  00FD8D  2A                 	db	42
   826  00FD8E  2A                 	db	42
   827  00FD8F  2A                 	db	42
   828  00FD90  2A                 	db	42
   829  00FD91  2A                 	db	42
   830  00FD92  2A                 	db	42
   831  00FD93  2A                 	db	42
   832  00FD94  2A                 	db	42
   833  00FD95  2A                 	db	42
   834  00FD96  2A                 	db	42
   835  00FD97  2A                 	db	42
   836  00FD98  2A                 	db	42
   837  00FD99  2A                 	db	42
   838  00FD9A  2A                 	db	42
   839  00FD9B  2A                 	db	42
   840  00FD9C  2A                 	db	42
   841  00FD9D  2A                 	db	42
   842  00FD9E  2A                 	db	42
   843  00FD9F  2A                 	db	42
   844  00FDA0  2A                 	db	42
   845  00FDA1  2A                 	db	42
   846  00FDA2  2A                 	db	42
   847  00FDA3  2A                 	db	42
   848  00FDA4  2A                 	db	42
   849  00FDA5  2A                 	db	42
   850  00FDA6  2A                 	db	42
   851  00FDA7  2A                 	db	42
   852  00FDA8  2A                 	db	42
   853  00FDA9  2A                 	db	42
   854  00FDAA  2A                 	db	42
   855  00FDAB  2A                 	db	42
   856  00FDAC  2A                 	db	42
   857  00FDAD  2A                 	db	42
   858  00FDAE  2A                 	db	42
   859  00FDAF  2A                 	db	42
   860  00FDB0  2A                 	db	42
   861  00FDB1  2A                 	db	42
   862  00FDB2  2A                 	db	42
   863  00FDB3  2A                 	db	42
   864  00FDB4  2A                 	db	42
   865  00FDB5  0D                 	db	13
   866  00FDB6  0A                 	db	10
   867  00FDB7  00                 	db	0
   868  00FDB8                     __end_of_Welcome:
   869                           	opt stack 0
   870  00FDB8                     _configDescriptor1:
   871                           	opt stack 0
   872  00FDB8  09                 	db	9
   873  00FDB9  02                 	db	2
   874  00FDBA  43                 	db	67
   875  00FDBB  00                 	db	0
   876  00FDBC  02                 	db	2
   877  00FDBD  01                 	db	1
   878  00FDBE  00                 	db	0
   879  00FDBF  C0                 	db	192
   880  00FDC0  32                 	db	50
   881  00FDC1  09                 	db	9
   882  00FDC2  04                 	db	4
   883  00FDC3  00                 	db	0
   884  00FDC4  00                 	db	0
   885  00FDC5  01                 	db	1
   886  00FDC6  02                 	db	2
   887  00FDC7  02                 	db	2
   888  00FDC8  01                 	db	1
   889  00FDC9  00                 	db	0
   890  00FDCA  05                 	db	5
   891  00FDCB  24                 	db	36
   892  00FDCC  00                 	db	0
   893  00FDCD  10                 	db	16
   894  00FDCE  01                 	db	1
   895  00FDCF  04                 	db	4
   896  00FDD0  24                 	db	36
   897  00FDD1  02                 	db	2
   898  00FDD2  02                 	db	2
   899  00FDD3  05                 	db	5
   900  00FDD4  24                 	db	36
   901  00FDD5  06                 	db	6
   902  00FDD6  00                 	db	0
   903  00FDD7  01                 	db	1
   904  00FDD8  05                 	db	5
   905  00FDD9  24                 	db	36
   906  00FDDA  01                 	db	1
   907  00FDDB  00                 	db	0
   908  00FDDC  01                 	db	1
   909  00FDDD  07                 	db	7
   910  00FDDE  05                 	db	5
   911  00FDDF  81                 	db	129
   912  00FDE0  03                 	db	3
   913  00FDE1  08                 	db	8
   914  00FDE2  00                 	db	0
   915  00FDE3  02                 	db	2
   916  00FDE4  09                 	db	9
   917  00FDE5  04                 	db	4
   918  00FDE6  01                 	db	1
   919  00FDE7  00                 	db	0
   920  00FDE8  02                 	db	2
   921  00FDE9  0A                 	db	10
   922  00FDEA  00                 	db	0
   923  00FDEB  00                 	db	0
   924  00FDEC  00                 	db	0
   925  00FDED  07                 	db	7
   926  00FDEE  05                 	db	5
   927  00FDEF  02                 	db	2
   928  00FDF0  02                 	db	2
   929  00FDF1  40                 	db	64
   930  00FDF2  00                 	db	0
   931  00FDF3  00                 	db	0
   932  00FDF4  07                 	db	7
   933  00FDF5  05                 	db	5
   934  00FDF6  82                 	db	130
   935  00FDF7  02                 	db	2
   936  00FDF8  40                 	db	64
   937  00FDF9  00                 	db	0
   938  00FDFA  00                 	db	0
   939  00FDFB                     __end_of_configDescriptor1:
   940                           	opt stack 0
   941  00FDFB                     _sd002:
   942                           	opt stack 0
   943  00FDFB  26                 	db	38
   944  00FDFC  03                 	db	3
   945  00FDFD  0054               	dw	84
   946  00FDFF  0065               	dw	101
   947  00FE01  0072               	dw	114
   948  00FE03  006D               	dw	109
   949  00FE05  0069               	dw	105
   950  00FE07  006E               	dw	110
   951  00FE09  0061               	dw	97
   952  00FE0B  006C               	dw	108
   953  00FE0D  0020               	dw	32
   954  00FE0F  0049               	dw	73
   955  00FE11  006E               	dw	110
   956  00FE13  0074               	dw	116
   957  00FE15  0065               	dw	101
   958  00FE17  0072               	dw	114
   959  00FE19  0066               	dw	102
   960  00FE1B  0061               	dw	97
   961  00FE1D  0063               	dw	99
   962  00FE1F  0065               	dw	101
   963  00FE21                     __end_of_sd002:
   964                           	opt stack 0
   965  00FE21                     _sd001:
   966                           	opt stack 0
   967  00FE21  1E                 	db	30
   968  00FE22  03                 	db	3
   969  00FE23  004D               	dw	77
   970  00FE25  0065               	dw	101
   971  00FE27  0072               	dw	114
   972  00FE29  0063               	dw	99
   973  00FE2B  0075               	dw	117
   974  00FE2D  0072               	dw	114
   975  00FE2F  0079               	dw	121
   976  00FE31  0020               	dw	32
   977  00FE33  0053               	dw	83
   978  00FE35  0079               	dw	121
   979  00FE37  0073               	dw	115
   980  00FE39  0074               	dw	116
   981  00FE3B  0065               	dw	101
   982  00FE3D  006D               	dw	109
   983  00FE3F                     __end_of_sd001:
   984                           	opt stack 0
   985  00FE3F                     _MsgReady:
   986                           	opt stack 0
   987  00FE3F  0D                 	db	13
   988  00FE40  0A                 	db	10
   989  00FE41  53                 	db	83
   990  00FE42  79                 	db	121
   991  00FE43  73                 	db	115
   992  00FE44  74                 	db	116
   993  00FE45  65                 	db	101
   994  00FE46  6D                 	db	109
   995  00FE47  20                 	db	32
   996  00FE48  52                 	db	82
   997  00FE49  65                 	db	101
   998  00FE4A  61                 	db	97
   999  00FE4B  64                 	db	100
  1000  00FE4C  79                 	db	121
  1001  00FE4D  2E                 	db	46
  1002  00FE4E  2E                 	db	46
  1003  00FE4F  2E                 	db	46
  1004  00FE50  20                 	db	32
  1005  00FE51  0D                 	db	13
  1006  00FE52  0A                 	db	10
  1007  00FE53  0D                 	db	13
  1008  00FE54  0A                 	db	10
  1009  00FE55  00                 	db	0
  1010  00FE56                     __end_of_MsgReady:
  1011                           	opt stack 0
  1012  00FE56                     _device_dsc:
  1013                           	opt stack 0
  1014  00FE56  12                 	db	18
  1015  00FE57  01                 	db	1
  1016  00FE58  0200               	dw	512
  1017  00FE5A  02                 	db	2
  1018  00FE5B  00                 	db	0
  1019  00FE5C  00                 	db	0
  1020  00FE5D  08                 	db	8
  1021  00FE5E  04D8               	dw	1240
  1022  00FE60  000A               	dw	10
  1023  00FE62  0100               	dw	256
  1024  00FE64  01                 	db	1
  1025  00FE65  02                 	db	2
  1026  00FE66  00                 	db	0
  1027  00FE67  01                 	db	1
  1028  00FE68                     __end_of_device_dsc:
  1029                           	opt stack 0
  1030  00FE68                     _sd000:
  1031                           	opt stack 0
  1032  00FE68  04                 	db	4
  1033  00FE69  03                 	db	3
  1034  00FE6A  0409               	dw	1033
  1035  00FE6C                     __end_of_sd000:
  1036                           	opt stack 0
  1037  0000                     _RPINR1	set	3815
  1038  0000                     _UEP0bits	set	3878
  1039  0000                     _UIEbits	set	3894
  1040  0000                     _UADDR	set	3896
  1041  0000                     _UIE	set	3894
  1042  0000                     _UEIE	set	3895
  1043  0000                     _UCFG	set	3897
  1044  0000                     _RTCCAL	set	3902
  1045  0000                     _PADCFG1bits	set	3900
  1046  0000                     _RTCCFGbits	set	3903
  1047  0000                     _DSCONLbits	set	3916
  1048  0000                     _DSGPR1	set	3919
  1049  0000                     _DSGPR0	set	3918
  1050  0000                     _DSCONHbits	set	3917
  1051  0000                     _ANCON1bits	set	3913
  1052  0000                     _UEP1	set	3879
  1053  0000                     _UEP0	set	3878
  1054  0000                     _T1CONbits	set	4045
  1055  0000                     _PORTDbits	set	3971
  1056  0000                     _USTAT	set	3940
  1057  0000                     _PIR2bits	set	4001
  1058  0000                     _UCON	set	3941
  1059  0000                     _UIRbits	set	3938
  1060  0000                     _UCONbits	set	3941
  1061  0000                     _UIR	set	3938
  1062  0000                     _UEIR	set	3939
  1063  0000                     _PIE2bits	set	4000
  1064  0000                     _BAUDCON2	set	3964
  1065  0000                     _RCSTA2	set	3996
  1066  0000                     _BAUDCON1	set	3966
  1067  0000                     _RCSTA1	set	4012
  1068  0000                     _TRISCbits	set	3988
  1069  0000                     _TXSTA2	set	4008
  1070  0000                     _TXSTA1	set	4013
  1071  0000                     _RCREG2	set	4010
  1072  0000                     _RCREG1	set	4015
  1073  0000                     _TXREG2	set	4009
  1074  0000                     _TXREG1	set	4014
  1075  0000                     _SPBRG2	set	4011
  1076  0000                     _SPBRGH2	set	3965
  1077  0000                     _SPBRG1	set	4016
  1078  0000                     _SPBRGH1	set	3967
  1079  0000                     _PR4	set	3959
  1080  0000                     _PR2	set	4043
  1081  0000                     _PIE1bits	set	3997
  1082  0000                     _IPR1bits	set	3999
  1083  0000                     _T4CONbits	set	3958
  1084  0000                     _T2CONbits	set	4042
  1085  0000                     _ALRMVALL	set	3982
  1086  0000                     _ALRMVALH	set	3983
  1087  0000                     _RTCVALH	set	3993
  1088  0000                     _RTCVALL	set	3992
  1089  0000                     _ALRMRPTbits	set	3984
  1090  0000                     _ALRMCFGbits	set	3985
  1091  0000                     _PIE3bits	set	4003
  1092  0000                     _IPR3bits	set	4005
  1093  0000                     _OSCCONbits	set	4051
  1094  0000                     _PORTEbits	set	3972
  1095  0000                     _TRISEbits	set	3990
  1096  0000                     _WDTCONbits	set	4032
  1097  0000                     _INTCON2bits	set	4081
  1098  0000                     _TRISBbits	set	3987
  1099  0000                     _OSCTUNEbits	set	3995
  1100  0000                     _SSP2CON1	set	3954
  1101  0000                     _TRISDbits	set	3989
  1102  0000                     _SSP2BUF	set	3957
  1103  0000                     _SSP2CON2bits	set	3953
  1104  0000                     _SSP2STAT	set	3955
  1105  0000                     _SSP2CON2	set	3953
  1106  0000                     _SSP2ADD	set	3956
  1107  0000                     _PIR1bits	set	3998
  1108  0000                     _PIR3bits	set	4004
  1109  0000                     _INTCON3bits	set	4080
  1110  0000                     _INTCONbits	set	4082
  1111  0000                     _RCONbits	set	4048
  1112  00FE6C                     STR_21:
  1113  00FE6C  20                 	db	32
  1114  00FE6D  4C                 	db	76	;'L'
  1115  00FE6E  61                 	db	97	;'a'
  1116  00FE6F  7A                 	db	122	;'z'
  1117  00FE70  79                 	db	121	;'y'
  1118  00FE71  20                 	db	32
  1119  00FE72  64                 	db	100	;'d'
  1120  00FE73  65                 	db	101	;'e'
  1121  00FE74  76                 	db	118	;'v'
  1122  00FE75  69                 	db	105	;'i'
  1123  00FE76  63                 	db	99	;'c'
  1124  00FE77  65                 	db	101	;'e'
  1125  00FE78  2E                 	db	46
  1126  00FE79  2E                 	db	46
  1127  00FE7A  2E                 	db	46
  1128  00FE7B  79                 	db	121	;'y'
  1129  00FE7C  6F                 	db	111	;'o'
  1130  00FE7D  75                 	db	117	;'u'
  1131  00FE7E  27                 	db	39
  1132  00FE7F  76                 	db	118	;'v'
  1133  00FE80  65                 	db	101	;'e'
  1134  00FE81  20                 	db	32
  1135  00FE82  62                 	db	98	;'b'
  1136  00FE83  65                 	db	101	;'e'
  1137  00FE84  65                 	db	101	;'e'
  1138  00FE85  6E                 	db	110	;'n'
  1139  00FE86  20                 	db	32
  1140  00FE87  74                 	db	116	;'t'
  1141  00FE88  69                 	db	105	;'i'
  1142  00FE89  6D                 	db	109	;'m'
  1143  00FE8A  65                 	db	101	;'e'
  1144  00FE8B  64                 	db	100	;'d'
  1145  00FE8C  2D                 	db	45
  1146  00FE8D  6F                 	db	111	;'o'
  1147  00FE8E  75                 	db	117	;'u'
  1148  00FE8F  74                 	db	116	;'t'
  1149  00FE90  21                 	db	33
  1150  00FE91  21                 	db	33
  1151  00FE92  21                 	db	33
  1152  00FE93  0D                 	db	13
  1153  00FE94  0A                 	db	10
  1154  00FE95  00                 	db	0
  1155  00FE96                     STR_8:
  1156  00FE96  41                 	db	65	;'A'
  1157  00FE97  54                 	db	84	;'T'
  1158  00FE98  2B                 	db	43
  1159  00FE99  53                 	db	83	;'S'
  1160  00FE9A  41                 	db	65	;'A'
  1161  00FE9B  50                 	db	80	;'P'
  1162  00FE9C  42                 	db	66	;'B'
  1163  00FE9D  52                 	db	82	;'R'
  1164  00FE9E  3D                 	db	61	;'='
  1165  00FE9F  33                 	db	51	;'3'
  1166  00FEA0  2C                 	db	44
  1167  00FEA1  31                 	db	49	;'1'
  1168  00FEA2  2C                 	db	44
  1169  00FEA3  22                 	db	34
  1170  00FEA4  43                 	db	67	;'C'
  1171  00FEA5  6F                 	db	111	;'o'
  1172  00FEA6  6E                 	db	110	;'n'
  1173  00FEA7  74                 	db	116	;'t'
  1174  00FEA8  79                 	db	121	;'y'
  1175  00FEA9  70                 	db	112	;'p'
  1176  00FEAA  65                 	db	101	;'e'
  1177  00FEAB  22                 	db	34
  1178  00FEAC  2C                 	db	44
  1179  00FEAD  22                 	db	34
  1180  00FEAE  47                 	db	71	;'G'
  1181  00FEAF  50                 	db	80	;'P'
  1182  00FEB0  52                 	db	82	;'R'
  1183  00FEB1  53                 	db	83	;'S'
  1184  00FEB2  22                 	db	34
  1185  00FEB3  0D                 	db	13
  1186  00FEB4  00                 	db	0
  1187  00FEB5                     STR_14:
  1188  00FEB5  41                 	db	65	;'A'
  1189  00FEB6  54                 	db	84	;'T'
  1190  00FEB7  2B                 	db	43
  1191  00FEB8  48                 	db	72	;'H'
  1192  00FEB9  54                 	db	84	;'T'
  1193  00FEBA  54                 	db	84	;'T'
  1194  00FEBB  50                 	db	80	;'P'
  1195  00FEBC  50                 	db	80	;'P'
  1196  00FEBD  41                 	db	65	;'A'
  1197  00FEBE  52                 	db	82	;'R'
  1198  00FEBF  41                 	db	65	;'A'
  1199  00FEC0  3D                 	db	61	;'='
  1200  00FEC1  22                 	db	34
  1201  00FEC2  43                 	db	67	;'C'
  1202  00FEC3  49                 	db	73	;'I'
  1203  00FEC4  44                 	db	68	;'D'
  1204  00FEC5  22                 	db	34
  1205  00FEC6  2C                 	db	44
  1206  00FEC7  31                 	db	49	;'1'
  1207  00FEC8  0D                 	db	13
  1208  00FEC9  00                 	db	0
  1209  00FECA                     STR_9:
  1210  00FECA  41                 	db	65	;'A'
  1211  00FECB  54                 	db	84	;'T'
  1212  00FECC  2B                 	db	43
  1213  00FECD  53                 	db	83	;'S'
  1214  00FECE  41                 	db	65	;'A'
  1215  00FECF  50                 	db	80	;'P'
  1216  00FED0  42                 	db	66	;'B'
  1217  00FED1  52                 	db	82	;'R'
  1218  00FED2  3D                 	db	61	;'='
  1219  00FED3  33                 	db	51	;'3'
  1220  00FED4  2C                 	db	44
  1221  00FED5  31                 	db	49	;'1'
  1222  00FED6  2C                 	db	44
  1223  00FED7  22                 	db	34
  1224  00FED8  41                 	db	65	;'A'
  1225  00FED9  50                 	db	80	;'P'
  1226  00FEDA  4E                 	db	78	;'N'
  1227  00FEDB  22                 	db	34
  1228  00FEDC  2C                 	db	44
  1229  00FEDD  22                 	db	34
  1230  00FEDE  00                 	db	0
  1231  00FEDF                     STR_23:
  1232  00FEDF  46                 	db	70	;'F'
  1233  00FEE0  72                 	db	114	;'r'
  1234  00FEE1  61                 	db	97	;'a'
  1235  00FEE2  6D                 	db	109	;'m'
  1236  00FEE3  65                 	db	101	;'e'
  1237  00FEE4  77                 	db	119	;'w'
  1238  00FEE5  6F                 	db	111	;'o'
  1239  00FEE6  72                 	db	114	;'r'
  1240  00FEE7  6B                 	db	107	;'k'
  1241  00FEE8  20                 	db	32
  1242  00FEE9  56                 	db	86	;'V'
  1243  00FEEA  65                 	db	101	;'e'
  1244  00FEEB  72                 	db	114	;'r'
  1245  00FEEC  73                 	db	115	;'s'
  1246  00FEED  69                 	db	105	;'i'
  1247  00FEEE  6F                 	db	111	;'o'
  1248  00FEEF  6E                 	db	110	;'n'
  1249  00FEF0  3A                 	db	58	;':'
  1250  00FEF1  20                 	db	32
  1251  00FEF2  00                 	db	0
  1252  00FEF3                     STR_15:
  1253  00FEF3  41                 	db	65	;'A'
  1254  00FEF4  54                 	db	84	;'T'
  1255  00FEF5  2B                 	db	43
  1256  00FEF6  48                 	db	72	;'H'
  1257  00FEF7  54                 	db	84	;'T'
  1258  00FEF8  54                 	db	84	;'T'
  1259  00FEF9  50                 	db	80	;'P'
  1260  00FEFA  50                 	db	80	;'P'
  1261  00FEFB  41                 	db	65	;'A'
  1262  00FEFC  52                 	db	82	;'R'
  1263  00FEFD  41                 	db	65	;'A'
  1264  00FEFE  3D                 	db	61	;'='
  1265  00FEFF  22                 	db	34
  1266  00FF00  55                 	db	85	;'U'
  1267  00FF01  52                 	db	82	;'R'
  1268  00FF02  4C                 	db	76	;'L'
  1269  00FF03  22                 	db	34
  1270  00FF04  2C                 	db	44
  1271  00FF05  22                 	db	34
  1272  00FF06  00                 	db	0
  1273  00FF07                     STR_29:
  1274  00FF07  41                 	db	65	;'A'
  1275  00FF08  54                 	db	84	;'T'
  1276  00FF09  2B                 	db	43
  1277  00FF0A  43                 	db	67	;'C'
  1278  00FF0B  4D                 	db	77	;'M'
  1279  00FF0C  47                 	db	71	;'G'
  1280  00FF0D  44                 	db	68	;'D'
  1281  00FF0E  41                 	db	65	;'A'
  1282  00FF0F  3D                 	db	61	;'='
  1283  00FF10  44                 	db	68	;'D'
  1284  00FF11  45                 	db	69	;'E'
  1285  00FF12  4C                 	db	76	;'L'
  1286  00FF13  20                 	db	32
  1287  00FF14  41                 	db	65	;'A'
  1288  00FF15  4C                 	db	76	;'L'
  1289  00FF16  4C                 	db	76	;'L'
  1290  00FF17  0D                 	db	13
  1291  00FF18  0A                 	db	10
  1292  00FF19  00                 	db	0
  1293  00FF1A                     STR_27:
  1294  00FF1A  42                 	db	66	;'B'
  1295  00FF1B  75                 	db	117	;'u'
  1296  00FF1C  69                 	db	105	;'i'
  1297  00FF1D  6C                 	db	108	;'l'
  1298  00FF1E  64                 	db	100	;'d'
  1299  00FF1F  20                 	db	32
  1300  00FF20  44                 	db	68	;'D'
  1301  00FF21  61                 	db	97	;'a'
  1302  00FF22  74                 	db	116	;'t'
  1303  00FF23  65                 	db	101	;'e'
  1304  00FF24  3A                 	db	58	;':'
  1305  00FF25  20                 	db	32
  1306  00FF26  25                 	db	37
  1307  00FF27  73                 	db	115	;'s'
  1308  00FF28  0D                 	db	13
  1309  00FF29  0A                 	db	10
  1310  00FF2A  00                 	db	0
  1311  00FF2B                     STR_16:
  1312  00FF2B  41                 	db	65	;'A'
  1313  00FF2C  54                 	db	84	;'T'
  1314  00FF2D  2B                 	db	43
  1315  00FF2E  48                 	db	72	;'H'
  1316  00FF2F  54                 	db	84	;'T'
  1317  00FF30  54                 	db	84	;'T'
  1318  00FF31  50                 	db	80	;'P'
  1319  00FF32  41                 	db	65	;'A'
  1320  00FF33  43                 	db	67	;'C'
  1321  00FF34  54                 	db	84	;'T'
  1322  00FF35  49                 	db	73	;'I'
  1323  00FF36  4F                 	db	79	;'O'
  1324  00FF37  4E                 	db	78	;'N'
  1325  00FF38  3D                 	db	61	;'='
  1326  00FF39  30                 	db	48	;'0'
  1327  00FF3A  0D                 	db	13
  1328  00FF3B  00                 	db	0
  1329  00FF3C  41                 	db	65	;'A'
  1330  00FF3D  54                 	db	84	;'T'
  1331  00FF3E  2B                 	db	43
  1332  00FF3F  48                 	db	72	;'H'
  1333  00FF40  54                 	db	84	;'T'
  1334  00FF41  54                 	db	84	;'T'
  1335  00FF42  50                 	db	80	;'P'
  1336  00FF43  53                 	db	83	;'S'
  1337  00FF44  53                 	db	83	;'S'
  1338  00FF45  4C                 	db	76	;'L'
  1339  00FF46  3D                 	db	61	;'='
  1340  00FF47  30                 	db	48	;'0'
  1341  00FF48  0D                 	db	13
  1342  00FF49  00                 	db	0
  1343  00FF4A                     STR_10:
  1344  00FF4A  41                 	db	65	;'A'
  1345  00FF4B  54                 	db	84	;'T'
  1346  00FF4C  2B                 	db	43
  1347  00FF4D  53                 	db	83	;'S'
  1348  00FF4E  41                 	db	65	;'A'
  1349  00FF4F  50                 	db	80	;'P'
  1350  00FF50  42                 	db	66	;'B'
  1351  00FF51  52                 	db	82	;'R'
  1352  00FF52  3D                 	db	61	;'='
  1353  00FF53  31                 	db	49	;'1'
  1354  00FF54  2C                 	db	44
  1355  00FF55  31                 	db	49	;'1'
  1356  00FF56  0D                 	db	13
  1357  00FF57  00                 	db	0
  1358  00FF58                     STR_11:
  1359  00FF58  41                 	db	65	;'A'
  1360  00FF59  54                 	db	84	;'T'
  1361  00FF5A  2B                 	db	43
  1362  00FF5B  53                 	db	83	;'S'
  1363  00FF5C  41                 	db	65	;'A'
  1364  00FF5D  50                 	db	80	;'P'
  1365  00FF5E  42                 	db	66	;'B'
  1366  00FF5F  52                 	db	82	;'R'
  1367  00FF60  3D                 	db	61	;'='
  1368  00FF61  32                 	db	50	;'2'
  1369  00FF62  2C                 	db	44
  1370  00FF63  31                 	db	49	;'1'
  1371  00FF64  0D                 	db	13
  1372  00FF65  00                 	db	0
  1373  00FF66                     STR_13:
  1374  00FF66  41                 	db	65	;'A'
  1375  00FF67  54                 	db	84	;'T'
  1376  00FF68  2B                 	db	43
  1377  00FF69  48                 	db	72	;'H'
  1378  00FF6A  54                 	db	84	;'T'
  1379  00FF6B  54                 	db	84	;'T'
  1380  00FF6C  50                 	db	80	;'P'
  1381  00FF6D  53                 	db	83	;'S'
  1382  00FF6E  53                 	db	83	;'S'
  1383  00FF6F  4C                 	db	76	;'L'
  1384  00FF70  3D                 	db	61	;'='
  1385  00FF71  31                 	db	49	;'1'
  1386  00FF72  0D                 	db	13
  1387  00FF73  00                 	db	0
  1388  00FF74                     STR_2:
  1389  00FF74  41                 	db	65	;'A'
  1390  00FF75  54                 	db	84	;'T'
  1391  00FF76  2B                 	db	43
  1392  00FF77  49                 	db	73	;'I'
  1393  00FF78  50                 	db	80	;'P'
  1394  00FF79  52                 	db	82	;'R'
  1395  00FF7A  3D                 	db	61	;'='
  1396  00FF7B  39                 	db	57	;'9'
  1397  00FF7C  36                 	db	54	;'6'
  1398  00FF7D  30                 	db	48	;'0'
  1399  00FF7E  30                 	db	48	;'0'
  1400  00FF7F  0D                 	db	13
  1401  00FF80  0A                 	db	10
  1402  00FF81  00                 	db	0
  1403  00FF82                     STR_17:
  1404  00FF82  41                 	db	65	;'A'
  1405  00FF83  54                 	db	84	;'T'
  1406  00FF84  2B                 	db	43
  1407  00FF85  48                 	db	72	;'H'
  1408  00FF86  54                 	db	84	;'T'
  1409  00FF87  54                 	db	84	;'T'
  1410  00FF88  50                 	db	80	;'P'
  1411  00FF89  52                 	db	82	;'R'
  1412  00FF8A  45                 	db	69	;'E'
  1413  00FF8B  41                 	db	65	;'A'
  1414  00FF8C  44                 	db	68	;'D'
  1415  00FF8D  0D                 	db	13
  1416  00FF8E  00                 	db	0
  1417  00FF8F                     STR_18:
  1418  00FF8F  41                 	db	65	;'A'
  1419  00FF90  54                 	db	84	;'T'
  1420  00FF91  2B                 	db	43
  1421  00FF92  48                 	db	72	;'H'
  1422  00FF93  54                 	db	84	;'T'
  1423  00FF94  54                 	db	84	;'T'
  1424  00FF95  50                 	db	80	;'P'
  1425  00FF96  54                 	db	84	;'T'
  1426  00FF97  45                 	db	69	;'E'
  1427  00FF98  52                 	db	82	;'R'
  1428  00FF99  4D                 	db	77	;'M'
  1429  00FF9A  0D                 	db	13
  1430  00FF9B  00                 	db	0
  1431  00FF9C                     STR_12:
  1432  00FF9C  41                 	db	65	;'A'
  1433  00FF9D  54                 	db	84	;'T'
  1434  00FF9E  2B                 	db	43
  1435  00FF9F  48                 	db	72	;'H'
  1436  00FFA0  54                 	db	84	;'T'
  1437  00FFA1  54                 	db	84	;'T'
  1438  00FFA2  50                 	db	80	;'P'
  1439  00FFA3  49                 	db	73	;'I'
  1440  00FFA4  4E                 	db	78	;'N'
  1441  00FFA5  49                 	db	73	;'I'
  1442  00FFA6  54                 	db	84	;'T'
  1443  00FFA7  0D                 	db	13
  1444  00FFA8  00                 	db	0
  1445  00FFA9                     STR_30:
  1446  00FFA9  41                 	db	65	;'A'
  1447  00FFAA  54                 	db	84	;'T'
  1448  00FFAB  2B                 	db	43
  1449  00FFAC  43                 	db	67	;'C'
  1450  00FFAD  4C                 	db	76	;'L'
  1451  00FFAE  49                 	db	73	;'I'
  1452  00FFAF  50                 	db	80	;'P'
  1453  00FFB0  3D                 	db	61	;'='
  1454  00FFB1  31                 	db	49	;'1'
  1455  00FFB2  0D                 	db	13
  1456  00FFB3  0A                 	db	10
  1457  00FFB4  00                 	db	0
  1458  00FFB5                     STR_28:
  1459  00FFB5  4D                 	db	77	;'M'
  1460  00FFB6  61                 	db	97	;'a'
  1461  00FFB7  72                 	db	114	;'r'
  1462  00FFB8  20                 	db	32
  1463  00FFB9  31                 	db	49	;'1'
  1464  00FFBA  39                 	db	57	;'9'
  1465  00FFBB  20                 	db	32
  1466  00FFBC  32                 	db	50	;'2'
  1467  00FFBD  30                 	db	48	;'0'
  1468  00FFBE  32                 	db	50	;'2'
  1469  00FFBF  32                 	db	50	;'2'
  1470  00FFC0  00                 	db	0
  1471  00FFC1                     STR_4:
  1472  00FFC1  41                 	db	65	;'A'
  1473  00FFC2  54                 	db	84	;'T'
  1474  00FFC3  2B                 	db	43
  1475  00FFC4  43                 	db	67	;'C'
  1476  00FFC5  4D                 	db	77	;'M'
  1477  00FFC6  47                 	db	71	;'G'
  1478  00FFC7  52                 	db	82	;'R'
  1479  00FFC8  3D                 	db	61	;'='
  1480  00FFC9  31                 	db	49	;'1'
  1481  00FFCA  0D                 	db	13
  1482  00FFCB  0A                 	db	10
  1483  00FFCC  00                 	db	0
  1484  00FFCD                     STR_5:
  1485  00FFCD  41                 	db	65	;'A'
  1486  00FFCE  54                 	db	84	;'T'
  1487  00FFCF  2B                 	db	43
  1488  00FFD0  43                 	db	67	;'C'
  1489  00FFD1  4D                 	db	77	;'M'
  1490  00FFD2  47                 	db	71	;'G'
  1491  00FFD3  53                 	db	83	;'S'
  1492  00FFD4  3D                 	db	61	;'='
  1493  00FFD5  22                 	db	34
  1494  00FFD6  00                 	db	0
  1495  00FFD7                     STR_31:
  1496  00FFD7  28                 	db	40
  1497  00FFD8  6E                 	db	110	;'n'
  1498  00FFD9  75                 	db	117	;'u'
  1499  00FFDA  6C                 	db	108	;'l'
  1500  00FFDB  6C                 	db	108	;'l'
  1501  00FFDC  29                 	db	41
  1502  00FFDD  00                 	db	0
  1503  00FFDE                     STR_3:
  1504  00FFDE  41                 	db	65	;'A'
  1505  00FFDF  54                 	db	84	;'T'
  1506  00FFE0  45                 	db	69	;'E'
  1507  00FFE1  30                 	db	48	;'0'
  1508  00FFE2  0D                 	db	13
  1509  00FFE3  0A                 	db	10
  1510  00FFE4  00                 	db	0
  1511  00FFE5                     STR_1:
  1512  00FFE5  41                 	db	65	;'A'
  1513  00FFE6  54                 	db	84	;'T'
  1514  00FFE7  0D                 	db	13
  1515  00FFE8  0A                 	db	10
  1516  00FFE9  00                 	db	0
  1517  00FFEA  41                 	db	65	;'A'
  1518  00FFEB  54                 	db	84	;'T'
  1519  00FFEC  41                 	db	65	;'A'
  1520  00FFED  0D                 	db	13
  1521  00FFEE  00                 	db	0
  1522  00FFEF                     STR_6:
  1523  00FFEF  41                 	db	65	;'A'
  1524  00FFF0  54                 	db	84	;'T'
  1525  00FFF1  48                 	db	72	;'H'
  1526  00FFF2  0D                 	db	13
  1527  00FFF3  00                 	db	0
  1528  00FFF4                     STR_24:
  1529  00FFF4  2E                 	db	46
  1530  00FFF5  00                 	db	0
  1531  0000                     
  1532                           ; #config settings
  1533  00FFF6  00                 	db	0	; dummy byte at the end
  1534  0000                     
  1535                           	psect	cinit
  1536  002584                     __pcinit:
  1537                           	opt stack 0
  1538  002584                     start_initialization:
  1539                           	opt stack 0
  1540  002584                     __initialization:
  1541                           	opt stack 0
  1542                           
  1543                           ; Initialize objects allocated to BANK5 (80 bytes)
  1544                           ; load TBLPTR registers with __pidataBANK5
  1545  002584  0E66               	movlw	low __pidataBANK5
  1546  002586  6EF6               	movwf	tblptrl,c
  1547  002588  0E55               	movlw	high __pidataBANK5
  1548  00258A  6EF7               	movwf	tblptrh,c
  1549  00258C  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1550  00258E  6EF8               	movwf	tblptru,c
  1551  002590  EE05  F0A4         	lfsr	0,__pdataBANK5
  1552  002594  EE10 F050          	lfsr	1,80
  1553  002598                     copy_data0:
  1554  002598  0009               	tblrd		*+
  1555  00259A  CFF5 FFEE          	movff	tablat,postinc0
  1556  00259E  50E5               	movf	postdec1,w,c
  1557  0025A0  50E1               	movf	fsr1l,w,c
  1558  0025A2  E1FA               	bnz	copy_data0
  1559                           
  1560                           ; Initialize objects allocated to BANK3 (65 bytes)
  1561                           ; load TBLPTR registers with __pidataBANK3
  1562  0025A4  0E66               	movlw	low __pidataBANK3
  1563  0025A6  6EF6               	movwf	tblptrl,c
  1564  0025A8  0E59               	movlw	high __pidataBANK3
  1565  0025AA  6EF7               	movwf	tblptrh,c
  1566  0025AC  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1567  0025AE  6EF8               	movwf	tblptru,c
  1568  0025B0  EE03  F0BA         	lfsr	0,__pdataBANK3
  1569  0025B4  EE10 F041          	lfsr	1,65
  1570  0025B8                     copy_data1:
  1571  0025B8  0009               	tblrd		*+
  1572  0025BA  CFF5 FFEE          	movff	tablat,postinc0
  1573  0025BE  50E5               	movf	postdec1,w,c
  1574  0025C0  50E1               	movf	fsr1l,w,c
  1575  0025C2  E1FA               	bnz	copy_data1
  1576                           
  1577                           ; Initialize objects allocated to BANK2 (13 bytes)
  1578                           ; load TBLPTR registers with __pidataBANK2
  1579  0025C4  0E5E               	movlw	low __pidataBANK2
  1580  0025C6  6EF6               	movwf	tblptrl,c
  1581  0025C8  0E62               	movlw	high __pidataBANK2
  1582  0025CA  6EF7               	movwf	tblptrh,c
  1583  0025CC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1584  0025CE  6EF8               	movwf	tblptru,c
  1585  0025D0  EE02  F0F3         	lfsr	0,__pdataBANK2
  1586  0025D4  EE10 F00D          	lfsr	1,13
  1587  0025D8                     copy_data2:
  1588  0025D8  0009               	tblrd		*+
  1589  0025DA  CFF5 FFEE          	movff	tablat,postinc0
  1590  0025DE  50E5               	movf	postdec1,w,c
  1591  0025E0  50E1               	movf	fsr1l,w,c
  1592  0025E2  E1FA               	bnz	copy_data2
  1593                           
  1594                           ; Initialize objects allocated to BANK1 (1 bytes)
  1595                           ; load TBLPTR registers with __pidataBANK1
  1596  0025E4  0EDB               	movlw	low __pidataBANK1
  1597  0025E6  6EF6               	movwf	tblptrl,c
  1598  0025E8  0E62               	movlw	high __pidataBANK1
  1599  0025EA  6EF7               	movwf	tblptrh,c
  1600  0025EC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1601  0025EE  6EF8               	movwf	tblptru,c
  1602  0025F0  0009               	tblrd		*+	;fetch initializer
  1603  0025F2  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1604                           
  1605                           ; Initialize objects allocated to BANK4 (24 bytes)
  1606                           ; load TBLPTR registers with __pidataBANK4
  1607  0025F6  0EFE               	movlw	low __pidataBANK4
  1608  0025F8  6EF6               	movwf	tblptrl,c
  1609  0025FA  0E60               	movlw	high __pidataBANK4
  1610  0025FC  6EF7               	movwf	tblptrh,c
  1611  0025FE  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1612  002600  6EF8               	movwf	tblptru,c
  1613  002602  EE04  F0BF         	lfsr	0,__pdataBANK4
  1614  002606  EE10 F018          	lfsr	1,24
  1615  00260A                     copy_data3:
  1616  00260A  0009               	tblrd		*+
  1617  00260C  CFF5 FFEE          	movff	tablat,postinc0
  1618  002610  50E5               	movf	postdec1,w,c
  1619  002612  50E1               	movf	fsr1l,w,c
  1620  002614  E1FA               	bnz	copy_data3
  1621                           
  1622                           ; Initialize objects allocated to BANK0 (1 bytes)
  1623                           ; load TBLPTR registers with __pidataBANK0
  1624  002616  0EDA               	movlw	low __pidataBANK0
  1625  002618  6EF6               	movwf	tblptrl,c
  1626  00261A  0E62               	movlw	high __pidataBANK0
  1627  00261C  6EF7               	movwf	tblptrh,c
  1628  00261E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1629  002620  6EF8               	movwf	tblptru,c
  1630  002622  0009               	tblrd		*+	;fetch initializer
  1631  002624  CFF5 F0E2          	movff	tablat,__pdataBANK0
  1632                           
  1633                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1634  002628  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1635  00262C  EE13 F020          	lfsr	1,800
  1636  002630                     clear_0:
  1637  002630  6AEE               	clrf	postinc0,c
  1638  002632  50E5               	movf	postdec1,w,c
  1639  002634  50E1               	movf	fsr1l,w,c
  1640  002636  E1FC               	bnz	clear_0
  1641  002638  50E2               	movf	fsr1h,w,c
  1642  00263A  E1FA               	bnz	clear_0
  1643                           
  1644                           ; Clear objects allocated to BANK9 (200 bytes)
  1645  00263C  EE09  F000         	lfsr	0,__pbssBANK9
  1646  002640  0EC8               	movlw	200
  1647  002642                     clear_1:
  1648  002642  6AEE               	clrf	postinc0,c
  1649  002644  06E8               	decf	wreg,f,c
  1650  002646  E1FD               	bnz	clear_1
  1651                           
  1652                           ; Clear objects allocated to BANK8 (200 bytes)
  1653  002648  EE08  F000         	lfsr	0,__pbssBANK8
  1654  00264C  0EC8               	movlw	200
  1655  00264E                     clear_2:
  1656  00264E  6AEE               	clrf	postinc0,c
  1657  002650  06E8               	decf	wreg,f,c
  1658  002652  E1FD               	bnz	clear_2
  1659                           
  1660                           ; Clear objects allocated to BANK7 (246 bytes)
  1661  002654  EE07  F000         	lfsr	0,__pbssBANK7
  1662  002658  0EF6               	movlw	246
  1663  00265A                     clear_3:
  1664  00265A  6AEE               	clrf	postinc0,c
  1665  00265C  06E8               	decf	wreg,f,c
  1666  00265E  E1FD               	bnz	clear_3
  1667                           
  1668                           ; Clear objects allocated to BANK6 (220 bytes)
  1669  002660  EE06  F000         	lfsr	0,__pbssBANK6
  1670  002664  0EDC               	movlw	220
  1671  002666                     clear_4:
  1672  002666  6AEE               	clrf	postinc0,c
  1673  002668  06E8               	decf	wreg,f,c
  1674  00266A  E1FD               	bnz	clear_4
  1675                           
  1676                           ; Clear objects allocated to BANK5 (164 bytes)
  1677  00266C  EE05  F000         	lfsr	0,__pbssBANK5
  1678  002670  0EA4               	movlw	164
  1679  002672                     clear_5:
  1680  002672  6AEE               	clrf	postinc0,c
  1681  002674  06E8               	decf	wreg,f,c
  1682  002676  E1FD               	bnz	clear_5
  1683                           
  1684                           ; Clear objects allocated to BANK3 (186 bytes)
  1685  002678  EE03  F000         	lfsr	0,__pbssBANK3
  1686  00267C  0EBA               	movlw	186
  1687  00267E                     clear_6:
  1688  00267E  6AEE               	clrf	postinc0,c
  1689  002680  06E8               	decf	wreg,f,c
  1690  002682  E1FD               	bnz	clear_6
  1691                           
  1692                           ; Clear objects allocated to BANK2 (43 bytes)
  1693  002684  EE02  F0C8         	lfsr	0,__pbssBANK2
  1694  002688  0E2B               	movlw	43
  1695  00268A                     clear_7:
  1696  00268A  6AEE               	clrf	postinc0,c
  1697  00268C  06E8               	decf	wreg,f,c
  1698  00268E  E1FD               	bnz	clear_7
  1699                           
  1700                           ; Clear objects allocated to BANK1 (54 bytes)
  1701  002690  EE01  F0C9         	lfsr	0,__pbssBANK1
  1702  002694  0E36               	movlw	54
  1703  002696                     clear_8:
  1704  002696  6AEE               	clrf	postinc0,c
  1705  002698  06E8               	decf	wreg,f,c
  1706  00269A  E1FD               	bnz	clear_8
  1707                           
  1708                           ; Clear objects allocated to BANK4 (127 bytes)
  1709  00269C  EE04  F040         	lfsr	0,__pbssBANK4
  1710  0026A0  0E7F               	movlw	127
  1711  0026A2                     clear_9:
  1712  0026A2  6AEE               	clrf	postinc0,c
  1713  0026A4  06E8               	decf	wreg,f,c
  1714  0026A6  E1FD               	bnz	clear_9
  1715                           
  1716                           ; Clear objects allocated to BANK0 (50 bytes)
  1717  0026A8  EE00  F0B0         	lfsr	0,__pbssBANK0
  1718  0026AC  0E32               	movlw	50
  1719  0026AE                     clear_10:
  1720  0026AE  6AEE               	clrf	postinc0,c
  1721  0026B0  06E8               	decf	wreg,f,c
  1722  0026B2  E1FD               	bnz	clear_10
  1723                           
  1724                           ; Clear objects allocated to COMRAM (31 bytes)
  1725  0026B4  EE00  F023         	lfsr	0,__pbssCOMRAM
  1726  0026B8  0E1F               	movlw	31
  1727  0026BA                     clear_11:
  1728  0026BA  6AEE               	clrf	postinc0,c
  1729  0026BC  06E8               	decf	wreg,f,c
  1730  0026BE  E1FD               	bnz	clear_11
  1731  0026C0                     end_of_initialization:
  1732                           	opt stack 0
  1733  0026C0                     __end_of__initialization:
  1734                           	opt stack 0
  1735  0026C0  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1736  0026C2  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1737  0026C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1738  0026C6  6EF8               	movwf	tblptru,c
  1739  0026C8  0100               	movlb	0
  1740  0026CA  EF36  F031         	goto	_main	;jump to C main() function
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1h	equ	0xFE2
  1749                           fsr1l	equ	0xFE1
  1750                           
  1751                           	psect	bssCOMRAM
  1752  000023                     __pbssCOMRAM:
  1753                           	opt stack 0
  1754  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1755                           	opt stack 0
  1756  000023                     	ds	2
  1757  000025                     _USBDeferOUTDataStagePackets:
  1758                           	opt stack 0
  1759  000025                     	ds	1
  1760  000026                     _USBDeferINDataStagePackets:
  1761                           	opt stack 0
  1762  000026                     	ds	1
  1763  000027                     _USBStatusStageEnabledFlag2:
  1764                           	opt stack 0
  1765  000027                     	ds	1
  1766  000028                     ConfigureModem@MdmConfigState:
  1767                           	opt stack 0
  1768  000028                     	ds	1
  1769  000029                     TurnOnModem@TurnOnMdmState:
  1770                           	opt stack 0
  1771  000029                     	ds	1
  1772  00002A                     CheckModem@CheckMdmSts:
  1773                           	opt stack 0
  1774  00002A                     	ds	1
  1775  00002B                     _ComChecCompleted:
  1776                           	opt stack 0
  1777  00002B                     	ds	1
  1778  00002C                     Uart_Uart1RxIsr@UartRxData:
  1779                           	opt stack 0
  1780  00002C                     	ds	1
  1781  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1782                           	opt stack 0
  1783  00002D                     	ds	1
  1784  00002E                     MdmCntSm@MdmCntState:
  1785                           	opt stack 0
  1786  00002E                     	ds	1
  1787  00002F                     RiSm@MdmDrvState:
  1788                           	opt stack 0
  1789  00002F                     	ds	1
  1790  000030                     _Mmd_RingIndicator:
  1791                           	opt stack 0
  1792  000030                     	ds	1
  1793  000031                     I2c_ReadData@ReadStatus:
  1794                           	opt stack 0
  1795  000031                     	ds	1
  1796  000032                     I2c_ReadData@TentativeCounter:
  1797                           	opt stack 0
  1798  000032                     	ds	1
  1799  000033                     I2c_ReadData@DataCounter:
  1800                           	opt stack 0
  1801  000033                     	ds	1
  1802  000034                     I2c_ReadData@I2cReadState:
  1803                           	opt stack 0
  1804  000034                     	ds	1
  1805  000035                     I2c_WriteData@WriteStatus:
  1806                           	opt stack 0
  1807  000035                     	ds	1
  1808  000036                     I2c_WriteData@TentativeCounter:
  1809                           	opt stack 0
  1810  000036                     	ds	1
  1811  000037                     I2c_WriteData@I2cNextState:
  1812                           	opt stack 0
  1813  000037                     	ds	1
  1814  000038                     I2c_WriteData@I2cWriteState:
  1815                           	opt stack 0
  1816  000038                     	ds	1
  1817  000039                     _MdmStsReady:
  1818                           	opt stack 0
  1819  000039                     	ds	1
  1820  00003A                     _NewStringMdmTerminal:
  1821                           	opt stack 0
  1822  00003A                     	ds	1
  1823  00003B                     _NewMdmEvtParserRequest:
  1824                           	opt stack 0
  1825  00003B                     	ds	1
  1826  00003C                     _NewStringReceived:
  1827                           	opt stack 0
  1828  00003C                     	ds	1
  1829  00003D                     _MdmResetRequest:
  1830                           	opt stack 0
  1831  00003D                     	ds	1
  1832  00003E                     _CallClosedEvent:
  1833                           	opt stack 0
  1834  00003E                     	ds	1
  1835  00003F                     _IncomingCallEvent:
  1836                           	opt stack 0
  1837  00003F                     	ds	1
  1838  000040                     _NewSmsEvent:
  1839                           	opt stack 0
  1840  000040                     	ds	1
  1841  000041                     _ActivateRiDetection:
  1842                           	opt stack 0
  1843  000041                     	ds	1
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           postdec1	equ	0xFE5
  1851                           fsr1h	equ	0xFE2
  1852                           fsr1l	equ	0xFE1
  1853                           
  1854                           	psect	bssBANK0
  1855  0000B0                     __pbssBANK0:
  1856                           	opt stack 0
  1857  0000B0                     _inPipes:
  1858                           	opt stack 0
  1859  0000B0                     	ds	6
  1860  0000B6                     _pBDTEntryIn:
  1861                           	opt stack 0
  1862  0000B6                     	ds	6
  1863  0000BC                     _CDCDataOutHandle:
  1864                           	opt stack 0
  1865  0000BC                     	ds	2
  1866  0000BE                     _pBDTEntryEP0OutNext:
  1867                           	opt stack 0
  1868  0000BE                     	ds	2
  1869  0000C0                     _pBDTEntryEP0OutCurrent:
  1870                           	opt stack 0
  1871  0000C0                     	ds	2
  1872  0000C2                     _RxLen:
  1873                           	opt stack 0
  1874  0000C2                     	ds	2
  1875  0000C4                     _cdc_tx_len:
  1876                           	opt stack 0
  1877  0000C4                     	ds	1
  1878  0000C5                     _cdc_trf_state:
  1879                           	opt stack 0
  1880  0000C5                     	ds	1
  1881  0000C6                     _cdc_rx_len:
  1882                           	opt stack 0
  1883  0000C6                     	ds	1
  1884  0000C7                     _USBStatusStageEnabledFlag1:
  1885                           	opt stack 0
  1886  0000C7                     	ds	1
  1887  0000C8                     _USBDeferStatusStagePacket:
  1888                           	opt stack 0
  1889  0000C8                     	ds	1
  1890  0000C9                     _USBStatusStageTimeoutCounter:
  1891                           	opt stack 0
  1892  0000C9                     	ds	1
  1893  0000CA                     _endpoint_number:
  1894                           	opt stack 0
  1895  0000CA                     	ds	1
  1896  0000CB                     _controlTransferState:
  1897                           	opt stack 0
  1898  0000CB                     	ds	1
  1899  0000CC                     _shortPacketStatus:
  1900                           	opt stack 0
  1901  0000CC                     	ds	1
  1902  0000CD                     _USBDeviceState:
  1903                           	opt stack 0
  1904  0000CD                     	ds	1
  1905  0000CE                     _I2cComSts:
  1906                           	opt stack 0
  1907  0000CE                     	ds	1
  1908  0000CF                     HttpGetMethod@GetMethodNextState:
  1909                           	opt stack 0
  1910  0000CF                     	ds	1
  1911  0000D0                     InitGprsNetwork@GprsNetInitNextState:
  1912                           	opt stack 0
  1913  0000D0                     	ds	1
  1914  0000D1                     _MdmStatus:
  1915                           	opt stack 0
  1916  0000D1                     	ds	1
  1917  0000D2                     _PhoneNumbLen:
  1918                           	opt stack 0
  1919  0000D2                     	ds	1
  1920  0000D3                     _SmsLen:
  1921                           	opt stack 0
  1922  0000D3                     	ds	1
  1923  0000D4                     _SystemState:
  1924                           	opt stack 0
  1925  0000D4                     	ds	1
  1926  0000D5                     _USTATcopy:
  1927                           	opt stack 0
  1928  0000D5                     	ds	1
  1929  0000D6                     _USBActiveConfiguration:
  1930                           	opt stack 0
  1931  0000D6                     	ds	1
  1932  0000D7                     _I2cReadDataEvt:
  1933                           	opt stack 0
  1934  0000D7                     	ds	1
  1935  0000D8                     _I2cWriteDataEvt:
  1936                           	opt stack 0
  1937  0000D8                     	ds	1
  1938  0000D9                     _GetMethod:
  1939                           	opt stack 0
  1940  0000D9                     	ds	1
  1941  0000DA                     _InitNetwork:
  1942                           	opt stack 0
  1943  0000DA                     	ds	1
  1944  0000DB                     _SmsTxtReady:
  1945                           	opt stack 0
  1946  0000DB                     	ds	1
  1947  0000DC                     _GetSmsText:
  1948                           	opt stack 0
  1949  0000DC                     	ds	1
  1950  0000DD                     _SmsEvent:
  1951                           	opt stack 0
  1952  0000DD                     	ds	1
  1953  0000DE                     _ClipEvent:
  1954                           	opt stack 0
  1955  0000DE                     	ds	1
  1956  0000DF                     _RingEvent:
  1957                           	opt stack 0
  1958  0000DF                     	ds	1
  1959  0000E0                     _SendSmsEvent:
  1960                           	opt stack 0
  1961  0000E0                     	ds	1
  1962  0000E1                     _MdmOnOffPulseRequest:
  1963                           	opt stack 0
  1964  0000E1                     	ds	1
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           postdec1	equ	0xFE5
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           
  1975                           	psect	dataBANK0
  1976  0000E2                     __pdataBANK0:
  1977                           	opt stack 0
  1978  0000E2                     MyApp_Task@memoryFlag:
  1979                           	opt stack 0
  1980  0000E2                     	ds	1
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           postdec1	equ	0xFE5
  1988                           fsr1h	equ	0xFE2
  1989                           fsr1l	equ	0xFE1
  1990                           
  1991                           	psect	bssBANK1
  1992  0001C9                     __pbssBANK1:
  1993                           	opt stack 0
  1994  0001C9                     _outPipes:
  1995                           	opt stack 0
  1996  0001C9                     	ds	8
  1997  0001D1                     _CDCDataInHandle:
  1998                           	opt stack 0
  1999  0001D1                     	ds	2
  2000  0001D3                     _Tmr2IsrCallback:
  2001                           	opt stack 0
  2002  0001D3                     	ds	2
  2003  0001D5                     MyApp_Task@blinkSeconds:
  2004                           	opt stack 0
  2005  0001D5                     	ds	1
  2006  0001D6                     initGprsModem@initMdm:
  2007                           	opt stack 0
  2008  0001D6                     	ds	1
  2009  0001D7                     initGprsModem@isInitialized:
  2010                           	opt stack 0
  2011  0001D7                     	ds	1
  2012  0001D8                     	ds	1
  2013  0001D9                     	ds	1
  2014  0001DA                     	ds	1
  2015  0001DB                     	ds	1
  2016  0001DC                     	ds	1
  2017  0001DD                     	ds	1
  2018  0001DE                     	ds	1
  2019  0001DF                     GsmGprsTerminal@SMS:
  2020                           	opt stack 0
  2021  0001DF                     	ds	1
  2022  0001E0                     	ds	1
  2023  0001E1                     _control_signal_bitmap:
  2024                           	opt stack 0
  2025  0001E1                     	ds	1
  2026  0001E2                     _cdc_mem_type:
  2027                           	opt stack 0
  2028  0001E2                     	ds	1
  2029  0001E3                     _USBTicksSinceSuspendEnd:
  2030                           	opt stack 0
  2031  0001E3                     	ds	1
  2032  0001E4                     _BothEP0OutUOWNsSet:
  2033                           	opt stack 0
  2034  0001E4                     	ds	1
  2035  0001E5                     _USBBusIsSuspended:
  2036                           	opt stack 0
  2037  0001E5                     	ds	1
  2038  0001E6                     _RemoteWakeup:
  2039                           	opt stack 0
  2040  0001E6                     	ds	1
  2041  0001E7                     I2cSlv_QueryI2cData@Ret:
  2042                           	opt stack 0
  2043  0001E7                     	ds	1
  2044  0001E8                     I2cSlv_QueryI2cData@I2cOpState:
  2045                           	opt stack 0
  2046  0001E8                     	ds	1
  2047  0001E9                     I2cSendMsgSm@I2cComState:
  2048                           	opt stack 0
  2049  0001E9                     	ds	1
  2050  0001EA                     _I2cBusStatus:
  2051                           	opt stack 0
  2052  0001EA                     	ds	1
  2053  0001EB                     HttpGetMethod@GetMOutSts:
  2054                           	opt stack 0
  2055  0001EB                     	ds	1
  2056  0001EC                     HttpGetMethod@GetMethodState:
  2057                           	opt stack 0
  2058  0001EC                     	ds	1
  2059  0001ED                     InitGprsNetwork@GprsNetInitState:
  2060                           	opt stack 0
  2061  0001ED                     	ds	1
  2062  0001EE                     _PostMethod:
  2063                           	opt stack 0
  2064  0001EE                     	ds	1
  2065  0001EF                     _HttpGetMethodSts:
  2066                           	opt stack 0
  2067  0001EF                     	ds	1
  2068  0001F0                     _GprsNetworkSts:
  2069                           	opt stack 0
  2070  0001F0                     	ds	1
  2071  0001F1                     _ApnLenLocal:
  2072                           	opt stack 0
  2073  0001F1                     	ds	1
  2074  0001F2                     SendSmsSm@SendSms_NextState:
  2075                           	opt stack 0
  2076  0001F2                     	ds	1
  2077  0001F3                     SendSmsSm@SendSms_State:
  2078                           	opt stack 0
  2079  0001F3                     	ds	1
  2080  0001F4                     GetSmsSm@GetSmsState:
  2081                           	opt stack 0
  2082  0001F4                     	ds	1
  2083  0001F5                     ConfigureModem@NextState:
  2084                           	opt stack 0
  2085  0001F5                     	ds	1
  2086  0001F6                     _ReadAddress:
  2087                           	opt stack 0
  2088  0001F6                     	ds	1
  2089  0001F7                     _AlarmEvent:
  2090                           	opt stack 0
  2091  0001F7                     	ds	1
  2092  0001F8                     _Led3OutSts:
  2093                           	opt stack 0
  2094  0001F8                     	ds	1
  2095  0001F9                     _Led3Sts:
  2096                           	opt stack 0
  2097  0001F9                     	ds	1
  2098  0001FA                     _Led2OutSts:
  2099                           	opt stack 0
  2100  0001FA                     	ds	1
  2101  0001FB                     _Led2Sts:
  2102                           	opt stack 0
  2103  0001FB                     	ds	1
  2104  0001FC                     _Led1OutSts:
  2105                           	opt stack 0
  2106  0001FC                     	ds	1
  2107  0001FD                     _Led1Sts:
  2108                           	opt stack 0
  2109  0001FD                     	ds	1
  2110  0001FE                     I2cDummyTx@DummyBuffer:
  2111                           	opt stack 0
  2112  0001FE                     	ds	1
  2113                           tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           
  2123                           	psect	dataBANK1
  2124  0001FF                     __pdataBANK1:
  2125                           	opt stack 0
  2126  0001FF                     InitGprsNetwork@GprsInitSts:
  2127                           	opt stack 0
  2128  0001FF                     	ds	1
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1h	equ	0xFE2
  2137                           fsr1l	equ	0xFE1
  2138                           
  2139                           	psect	bssBANK2
  2140  0002C8                     __pbssBANK2:
  2141                           	opt stack 0
  2142  0002C8                     _pCDCDst:
  2143                           	opt stack 0
  2144  0002C8                     	ds	3
  2145  0002CB                     _pCDCSrc:
  2146                           	opt stack 0
  2147  0002CB                     	ds	3
  2148  0002CE                     _ep_data_out:
  2149                           	opt stack 0
  2150  0002CE                     	ds	3
  2151  0002D1                     _ep_data_in:
  2152                           	opt stack 0
  2153  0002D1                     	ds	3
  2154  0002D4                     _pDst:
  2155                           	opt stack 0
  2156  0002D4                     	ds	2
  2157  0002D6                     _ApnLocal:
  2158                           	opt stack 0
  2159  0002D6                     	ds	2
  2160  0002D8                     ConfigureModem@DelayCounter:
  2161                           	opt stack 0
  2162  0002D8                     	ds	2
  2163  0002DA                     ConfigureModem@DelayValueMs:
  2164                           	opt stack 0
  2165  0002DA                     	ds	2
  2166  0002DC                     TurnOnModem@Counter:
  2167                           	opt stack 0
  2168  0002DC                     	ds	2
  2169  0002DE                     UpdateSchFlag@InterruptCounter:
  2170                           	opt stack 0
  2171  0002DE                     	ds	2
  2172  0002E0                     MdmCntSm@Counter:
  2173                           	opt stack 0
  2174  0002E0                     	ds	2
  2175  0002E2                     RiSm@Counter:
  2176                           	opt stack 0
  2177  0002E2                     	ds	2
  2178  0002E4                     _ExtInt1IsrCallback:
  2179                           	opt stack 0
  2180  0002E4                     	ds	2
  2181  0002E6                     _ExtInt0IsrCallback:
  2182                           	opt stack 0
  2183  0002E6                     	ds	2
  2184  0002E8                     _RtccIsrCallback:
  2185                           	opt stack 0
  2186  0002E8                     	ds	2
  2187  0002EA                     _Tmr4IsrCallback:
  2188                           	opt stack 0
  2189  0002EA                     	ds	2
  2190  0002EC                     Term_MainSm@TermMainSmState:
  2191                           	opt stack 0
  2192  0002EC                     	ds	1
  2193  0002ED                     Terminal@FormatOption:
  2194                           	opt stack 0
  2195  0002ED                     	ds	1
  2196  0002EE                     Terminal@SlaveAddr:
  2197                           	opt stack 0
  2198  0002EE                     	ds	1
  2199  0002EF                     Terminal@PackageLen:
  2200                           	opt stack 0
  2201  0002EF                     	ds	1
  2202  0002F0                     Terminal@TermState:
  2203                           	opt stack 0
  2204  0002F0                     	ds	1
  2205  0002F1                     _USBAlternateInterface:
  2206                           	opt stack 0
  2207  0002F1                     	ds	2
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           
  2218                           	psect	dataBANK2
  2219  0002F3                     __pdataBANK2:
  2220                           	opt stack 0
  2221  0002F3                     Terminal@EchoOption:
  2222                           	opt stack 0
  2223  0002F3                     	ds	1
  2224  0002F4                     _MainSystemTimebaseFlag:
  2225                           	opt stack 0
  2226  0002F4                     	ds	1
  2227  0002F5                     _ConnTimeout:
  2228                           	opt stack 0
  2229  0002F5                     	ds	11
  2230                           tblptru	equ	0xFF8
  2231                           tblptrh	equ	0xFF7
  2232                           tblptrl	equ	0xFF6
  2233                           tablat	equ	0xFF5
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           postdec1	equ	0xFE5
  2237                           fsr1h	equ	0xFE2
  2238                           fsr1l	equ	0xFE1
  2239                           
  2240                           	psect	bssBANK3
  2241  000300                     __pbssBANK3:
  2242                           	opt stack 0
  2243  000300                     _Rtcm_SystemDate:
  2244                           	opt stack 0
  2245  000300                     	ds	8
  2246  000308                     _Rtcm_RtccAlarm:
  2247                           	opt stack 0
  2248  000308                     	ds	6
  2249  00030E                     _pBDTEntryOut:
  2250                           	opt stack 0
  2251  00030E                     	ds	6
  2252  000314                     _BaudRateGen:
  2253                           	opt stack 0
  2254  000314                     	ds	4
  2255  000318                     _USB1msTickCount:
  2256                           	opt stack 0
  2257  000318                     	ds	4
  2258  00031C                     _OsTmr_OsTickCounter:
  2259                           	opt stack 0
  2260  00031C                     	ds	4
  2261  000320                     	ds	2
  2262  000322                     _PhoneNumberLen:
  2263                           	opt stack 0
  2264  000322                     	ds	2
  2265  000324                     _UartConfig:
  2266                           	opt stack 0
  2267  000324                     	ds	21
  2268  000339                     _callerNumber:
  2269                           	opt stack 0
  2270  000339                     	ds	14
  2271  000347                     I2cSlv_QueryI2cData@TimeoutTimer:
  2272                           	opt stack 0
  2273  000347                     	ds	11
  2274  000352                     _I2cConfig:
  2275                           	opt stack 0
  2276  000352                     	ds	10
  2277  00035C                     _Led3Blink:
  2278                           	opt stack 0
  2279  00035C                     	ds	9
  2280  000365                     _Led2Blink:
  2281                           	opt stack 0
  2282  000365                     	ds	9
  2283  00036E                     _Led1Blink:
  2284                           	opt stack 0
  2285  00036E                     	ds	9
  2286  000377                     _dummy_encapsulated_cmd_response:
  2287                           	opt stack 0
  2288  000377                     	ds	8
  2289  00037F                     _line_coding:
  2290                           	opt stack 0
  2291  00037F                     	ds	7
  2292  000386                     _Led3Pulse:
  2293                           	opt stack 0
  2294  000386                     	ds	6
  2295  00038C                     _Led2Pulse:
  2296                           	opt stack 0
  2297  00038C                     	ds	6
  2298  000392                     _Led1Pulse:
  2299                           	opt stack 0
  2300  000392                     	ds	6
  2301  000398                     _I2cRxPacket:
  2302                           	opt stack 0
  2303  000398                     	ds	6
  2304  00039E                     _I2cTxPacket:
  2305                           	opt stack 0
  2306  00039E                     	ds	5
  2307  0003A3                     _HttpGetDataLocal:
  2308                           	opt stack 0
  2309  0003A3                     	ds	5
  2310  0003A8                     Terminal@Addr:
  2311                           	opt stack 0
  2312  0003A8                     	ds	4
  2313  0003AC                     Terminal@Len:
  2314                           	opt stack 0
  2315  0003AC                     	ds	4
  2316  0003B0                     _AlCfg:
  2317                           	opt stack 0
  2318  0003B0                     	ds	4
  2319  0003B4                     _RtcConfig:
  2320                           	opt stack 0
  2321  0003B4                     	ds	4
  2322  0003B8                     initGprsModem@modemCounter:
  2323                           	opt stack 0
  2324  0003B8                     	ds	2
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           
  2335                           	psect	dataBANK3
  2336  0003BA                     __pdataBANK3:
  2337                           	opt stack 0
  2338  0003BA                     ModemEvtParser@F9108:
  2339                           	opt stack 0
  2340  0003BA                     	ds	5
  2341  0003BF                     ModemEvtParser@F9106:
  2342                           	opt stack 0
  2343  0003BF                     	ds	5
  2344  0003C4                     ModemEvtParser@F9104:
  2345                           	opt stack 0
  2346  0003C4                     	ds	4
  2347  0003C8                     MyApp_Task@F9007:
  2348                           	opt stack 0
  2349  0003C8                     	ds	3
  2350  0003CB                     triggerRelay@F8982:
  2351                           	opt stack 0
  2352  0003CB                     	ds	2
  2353  0003CD                     Term_MainSm@TermDelay:
  2354                           	opt stack 0
  2355  0003CD                     	ds	11
  2356  0003D8                     _ConnWait:
  2357                           	opt stack 0
  2358  0003D8                     	ds	11
  2359  0003E3                     SendSmsSm@SwTimer:
  2360                           	opt stack 0
  2361  0003E3                     	ds	11
  2362  0003EE                     CheckModem@Timeout:
  2363                           	opt stack 0
  2364  0003EE                     	ds	11
  2365  0003F9                     MyApp_Task@blinkTicks:
  2366                           	opt stack 0
  2367  0003F9                     	ds	2
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           postdec1	equ	0xFE5
  2375                           fsr1h	equ	0xFE2
  2376                           fsr1l	equ	0xFE1
  2377                           
  2378                           	psect	bssBANK4
  2379  000440                     __pbssBANK4:
  2380                           	opt stack 0
  2381  000440                     	ds	10
  2382  00044A                     _cdc_notice:
  2383                           	opt stack 0
  2384  00044A                     	ds	10
  2385  000454                     Term_MainSm@Data:
  2386                           	opt stack 0
  2387  000454                     	ds	50
  2388  000486                     _PhoneNumber:
  2389                           	opt stack 0
  2390  000486                     	ds	20
  2391  00049A                     _EepromBuffer:
  2392                           	opt stack 0
  2393  00049A                     	ds	15
  2394  0004A9                     Terminal@SwTimer:
  2395                           	opt stack 0
  2396  0004A9                     	ds	11
  2397  0004B4                     I2cSlv_QueryI2cData@QueryTimer:
  2398                           	opt stack 0
  2399  0004B4                     	ds	11
  2400                           tblptru	equ	0xFF8
  2401                           tblptrh	equ	0xFF7
  2402                           tblptrl	equ	0xFF6
  2403                           tablat	equ	0xFF5
  2404                           postinc0	equ	0xFEE
  2405                           wreg	equ	0xFE8
  2406                           postdec1	equ	0xFE5
  2407                           fsr1h	equ	0xFE2
  2408                           fsr1l	equ	0xFE1
  2409                           
  2410                           	psect	dataBANK4
  2411  0004BF                     __pdataBANK4:
  2412                           	opt stack 0
  2413  0004BF                     ModemEvtParser@F9110:
  2414                           	opt stack 0
  2415  0004BF                     	ds	10
  2416  0004C9                     MyApp_Task@phone:
  2417                           	opt stack 0
  2418  0004C9                     	ds	14
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1h	equ	0xFE2
  2427                           fsr1l	equ	0xFE1
  2428                           
  2429                           	psect	bssBANK5
  2430  000500                     __pbssBANK5:
  2431                           	opt stack 0
  2432  000500                     _cdc_data_rx:
  2433                           	opt stack 0
  2434  000500                     	ds	64
  2435  000540                     Terminal@TermRxBuffer:
  2436                           	opt stack 0
  2437  000540                     	ds	50
  2438  000572                     _MessageText:
  2439                           	opt stack 0
  2440  000572                     	ds	50
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           postinc0	equ	0xFEE
  2446                           wreg	equ	0xFE8
  2447                           postdec1	equ	0xFE5
  2448                           fsr1h	equ	0xFE2
  2449                           fsr1l	equ	0xFE1
  2450                           
  2451                           	psect	dataBANK5
  2452  0005A4                     __pdataBANK5:
  2453                           	opt stack 0
  2454  0005A4                     _TaskTable:
  2455                           	opt stack 0
  2456  0005A4                     	ds	80
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           postdec1	equ	0xFE5
  2464                           fsr1h	equ	0xFE2
  2465                           fsr1l	equ	0xFE1
  2466                           
  2467                           	psect	bssBANK6
  2468  000600                     __pbssBANK6:
  2469                           	opt stack 0
  2470  000600                     _OsAlarms:
  2471                           	opt stack 0
  2472  000600                     	ds	220
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           postdec1	equ	0xFE5
  2480                           fsr1h	equ	0xFE2
  2481                           fsr1l	equ	0xFE1
  2482                           
  2483                           	psect	bssBANK7
  2484  000700                     __pbssBANK7:
  2485                           	opt stack 0
  2486  000700                     _Mdm_SmsRx:
  2487                           	opt stack 0
  2488  000700                     	ds	102
  2489  000766                     Terminal@Payload:
  2490                           	opt stack 0
  2491  000766                     	ds	80
  2492  0007B6                     _cdc_data_tx:
  2493                           	opt stack 0
  2494  0007B6                     	ds	64
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           postdec1	equ	0xFE5
  2502                           fsr1h	equ	0xFE2
  2503                           fsr1l	equ	0xFE1
  2504                           
  2505                           	psect	bssBANK8
  2506  000800                     __pbssBANK8:
  2507                           	opt stack 0
  2508  000800                     GsmGprsTerminal@UsbBuffer:
  2509                           	opt stack 0
  2510  000800                     	ds	200
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           postinc0	equ	0xFEE
  2516                           wreg	equ	0xFE8
  2517                           postdec1	equ	0xFE5
  2518                           fsr1h	equ	0xFE2
  2519                           fsr1l	equ	0xFE1
  2520                           
  2521                           	psect	bssBANK9
  2522  000900                     __pbssBANK9:
  2523                           	opt stack 0
  2524  000900                     GsmGprsTerminal@UartBuffer:
  2525                           	opt stack 0
  2526  000900                     	ds	200
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           
  2537                           	psect	bssBIGRAMl
  2538  000AC8                     __pbssBIGRAMl:
  2539                           	opt stack 0
  2540  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2541                           	opt stack 0
  2542  000AC8                     	ds	400
  2543  000C58                     _RxBuffer:
  2544                           	opt stack 0
  2545  000C58                     	ds	400
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec1	equ	0xFE5
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           
  2556                           	psect	cstackBANK10
  2557  000A00                     __pcstackBANK10:
  2558                           	opt stack 0
  2559  000A00                     Terminal@UsbRxBuffer:
  2560                           	opt stack 0
  2561                           
  2562                           ; 200 bytes @ 0x0
  2563  000A00                     	ds	200
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           
  2574                           	psect	cstackBANK3
  2575  0003FB                     __pcstackBANK3:
  2576                           	opt stack 0
  2577  0003FB                     ??_InitializeTasks:
  2578  0003FB                     ??_ScheduleTasks:
  2579                           
  2580                           ; 1 bytes @ 0x0
  2581  0003FB                     	ds	2
  2582  0003FD                     InitializeTasks@ActiveTaskIndex:
  2583                           	opt stack 0
  2584                           
  2585                           ; 1 bytes @ 0x2
  2586  0003FD                     	ds	2
  2587  0003FF                     ScheduleTasks@ActiveTaskIndex:
  2588                           	opt stack 0
  2589                           
  2590                           ; 1 bytes @ 0x4
  2591  0003FF                     	ds	1
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           
  2602                           	psect	cstackBANK2
  2603  000200                     __pcstackBANK2:
  2604                           	opt stack 0
  2605  000200                     Terminal@UsbTxBuffer:
  2606                           	opt stack 0
  2607                           
  2608                           ; 200 bytes @ 0x0
  2609  000200                     	ds	200
  2610                           tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1h	equ	0xFE2
  2618                           fsr1l	equ	0xFE1
  2619                           
  2620                           	psect	cstackBANK1
  2621  000100                     __pcstackBANK1:
  2622                           	opt stack 0
  2623  000100                     MyApp_Task@cmpString:
  2624                           	opt stack 0
  2625  000100                     SendSmsSm@UartMessage:
  2626                           	opt stack 0
  2627  000100                     InitGprsNetwork@UartMessage:
  2628                           	opt stack 0
  2629  000100                     Terminal@TermTxBuffer:
  2630                           	opt stack 0
  2631  000100                     HttpGetMethod@UartMessage:
  2632                           	opt stack 0
  2633                           
  2634                           ; 200 bytes @ 0x0
  2635  000100                     	ds	3
  2636  000103                     MyApp_Task@memoryResult:
  2637                           	opt stack 0
  2638                           
  2639                           ; 1 bytes @ 0x3
  2640  000103                     	ds	47
  2641  000132                     InitGprsNetwork@Index:
  2642                           	opt stack 0
  2643  000132                     Term_MainSm@FwkMajorStr:
  2644                           	opt stack 0
  2645                           
  2646                           ; 4 bytes @ 0x32
  2647  000132                     	ds	4
  2648  000136                     Term_MainSm@FwkMinorStr:
  2649                           	opt stack 0
  2650                           
  2651                           ; 4 bytes @ 0x36
  2652  000136                     	ds	4
  2653  00013A                     Term_MainSm@FwkBuildStr:
  2654                           	opt stack 0
  2655                           
  2656                           ; 4 bytes @ 0x3A
  2657  00013A                     	ds	142
  2658  0001C8                     HttpGetMethod@Index:
  2659                           	opt stack 0
  2660                           
  2661                           ; 1 bytes @ 0xC8
  2662  0001C8                     	ds	1
  2663                           tblptru	equ	0xFF8
  2664                           tblptrh	equ	0xFF7
  2665                           tblptrl	equ	0xFF6
  2666                           tablat	equ	0xFF5
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           postdec1	equ	0xFE5
  2670                           fsr1h	equ	0xFE2
  2671                           fsr1l	equ	0xFE1
  2672                           
  2673                           	psect	cstackBANK0
  2674  000060                     __pcstackBANK0:
  2675                           	opt stack 0
  2676  000060                     
  2677                           ; 1 bytes @ 0x0
  2678  000060                     	ds	8
  2679  000068                     ??_LowPriorityIsr:
  2680                           
  2681                           ; 1 bytes @ 0x8
  2682  000068                     	ds	21
  2683  00007D                     ??_isdigit:
  2684  00007D                     ??_isspace:
  2685  00007D                     ??_isupper:
  2686  00007D                     ??_Rtcc_GetRtccValue:
  2687  00007D                     ??_UartTxBufferStatus:
  2688  00007D                     ??_USBStdGetDscHandler:
  2689  00007D                     ??_USBStdGetStatusHandler:
  2690  00007D                     ?_USBTransferOnePacket:
  2691                           	opt stack 0
  2692  00007D                     ?_strlen:
  2693                           	opt stack 0
  2694  00007D                     ?_sprintf:
  2695                           	opt stack 0
  2696  00007D                     ?___wmul:
  2697                           	opt stack 0
  2698  00007D                     ?___awdiv:
  2699                           	opt stack 0
  2700  00007D                     ?___awmod:
  2701                           	opt stack 0
  2702  00007D                     ?___lwmod:
  2703                           	opt stack 0
  2704  00007D                     ?_GetOsTickCounter:
  2705                           	opt stack 0
  2706  00007D                     ?___lmul:
  2707                           	opt stack 0
  2708  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2709                           	opt stack 0
  2710  00007D                     SetAckStatus@AckSts:
  2711                           	opt stack 0
  2712  00007D                     WriteByte@Byte:
  2713                           	opt stack 0
  2714  00007D                     ReadByte@Byte:
  2715                           	opt stack 0
  2716  00007D                     Mcu_SetWdgSts@WdgSts:
  2717                           	opt stack 0
  2718  00007D                     RtccIrqInit@Priority:
  2719                           	opt stack 0
  2720  00007D                     Rtcc_SetRtcStatus@Status:
  2721                           	opt stack 0
  2722  00007D                     TmrBInit@Prescaler:
  2723                           	opt stack 0
  2724  00007D                     Tmr_TmrBIrqSet@Priority:
  2725                           	opt stack 0
  2726  00007D                     Tmr_StartTmr@TmrNumb:
  2727                           	opt stack 0
  2728  00007D                     UartWriteByte@ByteToWrite:
  2729                           	opt stack 0
  2730  00007D                     USBTransferOnePacket@dir:
  2731                           	opt stack 0
  2732  00007D                     USBConfigureEndpoint@direction:
  2733                           	opt stack 0
  2734  00007D                     USBCtrlTrfTxService@byteToSend:
  2735                           	opt stack 0
  2736  00007D                     USBCtrlTrfRxService@i:
  2737                           	opt stack 0
  2738  00007D                     Led_SetLedStatus@LedSts:
  2739                           	opt stack 0
  2740  00007D                     toupper@c:
  2741                           	opt stack 0
  2742  00007D                     tolower@c:
  2743                           	opt stack 0
  2744  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2745                           	opt stack 0
  2746  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2747                           	opt stack 0
  2748  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2749                           	opt stack 0
  2750  00007D                     Uart_ClearRxBuffer@Index:
  2751                           	opt stack 0
  2752  00007D                     GenerateEvt@Event:
  2753                           	opt stack 0
  2754  00007D                     ReceiveEvt@Event:
  2755                           	opt stack 0
  2756  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2757                           	opt stack 0
  2758  00007D                     StringCopy@SourceStr:
  2759                           	opt stack 0
  2760  00007D                     ClearBuffer@Buffer:
  2761                           	opt stack 0
  2762  00007D                     sprintf@sp:
  2763                           	opt stack 0
  2764  00007D                     ___wmul@multiplier:
  2765                           	opt stack 0
  2766  00007D                     ___awdiv@dividend:
  2767                           	opt stack 0
  2768  00007D                     ___awmod@dividend:
  2769                           	opt stack 0
  2770  00007D                     ___lwmod@dividend:
  2771                           	opt stack 0
  2772  00007D                     memcpy@d1:
  2773                           	opt stack 0
  2774  00007D                     memset@p1:
  2775                           	opt stack 0
  2776  00007D                     strcat@to:
  2777                           	opt stack 0
  2778  00007D                     strcpy@to:
  2779                           	opt stack 0
  2780  00007D                     strlen@s:
  2781                           	opt stack 0
  2782  00007D                     ___lmul@multiplier:
  2783                           	opt stack 0
  2784                           
  2785                           ; 4 bytes @ 0x1D
  2786  00007D                     	ds	1
  2787  00007E                     ??_USBConfigureEndpoint:
  2788  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2789                           	opt stack 0
  2790  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2791                           	opt stack 0
  2792  00007E                     TmrBInit@Postscaler:
  2793                           	opt stack 0
  2794  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2795                           	opt stack 0
  2796  00007E                     UartWriteByte@Module:
  2797                           	opt stack 0
  2798  00007E                     UartTxBufferStatus@Module:
  2799                           	opt stack 0
  2800  00007E                     USBCtrlTrfRxService@byteToRead:
  2801                           	opt stack 0
  2802  00007E                     USBCtrlTrfInHandler@lastDTS:
  2803                           	opt stack 0
  2804  00007E                     Led_SetLedStatus@Led:
  2805                           	opt stack 0
  2806  00007E                     _isdigit$6193:
  2807                           	opt stack 0
  2808  00007E                     _isspace$6462:
  2809                           	opt stack 0
  2810  00007E                     _isupper$6465:
  2811                           	opt stack 0
  2812  00007E                     I2c_WriteData@WritePacket:
  2813                           	opt stack 0
  2814  00007E                     Rtcc_RtcConfig@RtcConfig:
  2815                           	opt stack 0
  2816  00007E                     USBTransferOnePacket@data:
  2817                           	opt stack 0
  2818  00007E                     USBStdGetStatusHandler@p:
  2819                           	opt stack 0
  2820                           
  2821                           ; 2 bytes @ 0x1E
  2822  00007E                     	ds	1
  2823  00007F                     ??_strlen:
  2824  00007F                     ??_Rtcc_AlarmConfig:
  2825  00007F                     ??_TmrBInit:
  2826  00007F                     Irq_InitIntController@IntPriorityEn:
  2827                           	opt stack 0
  2828  00007F                     Rtcc_GetRtccValue@RetValue:
  2829                           	opt stack 0
  2830  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2831                           	opt stack 0
  2832  00007F                     UartTxBufferStatus@TxBufferStatus:
  2833                           	opt stack 0
  2834  00007F                     GenerateEvt@EventStatus:
  2835                           	opt stack 0
  2836  00007F                     isdigit@c:
  2837                           	opt stack 0
  2838  00007F                     isspace@c:
  2839                           	opt stack 0
  2840  00007F                     isupper@c:
  2841                           	opt stack 0
  2842  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2843                           	opt stack 0
  2844  00007F                     StringCopy@DestStr:
  2845                           	opt stack 0
  2846  00007F                     ClearBuffer@Len:
  2847                           	opt stack 0
  2848  00007F                     sprintf@f:
  2849                           	opt stack 0
  2850  00007F                     ___wmul@multiplicand:
  2851                           	opt stack 0
  2852  00007F                     ___awdiv@divisor:
  2853                           	opt stack 0
  2854  00007F                     ___awmod@divisor:
  2855                           	opt stack 0
  2856  00007F                     ___lwmod@divisor:
  2857                           	opt stack 0
  2858  00007F                     memcpy@s1:
  2859                           	opt stack 0
  2860  00007F                     memset@c:
  2861                           	opt stack 0
  2862  00007F                     strcat@from:
  2863                           	opt stack 0
  2864  00007F                     strcpy@from:
  2865                           	opt stack 0
  2866                           
  2867                           ; 2 bytes @ 0x1F
  2868  00007F                     	ds	1
  2869  000080                     ??_isalpha:
  2870  000080                     ??_isxdigit:
  2871  000080                     ??_I2c_WriteData:
  2872  000080                     ??_Rtcc_RtcConfig:
  2873  000080                     Rtcc_GetRtccValue@RegValue:
  2874                           	opt stack 0
  2875  000080                     TmrBInit@TmrNumb:
  2876                           	opt stack 0
  2877  000080                     ReceiveEvt@EventStatus:
  2878                           	opt stack 0
  2879  000080                     USBTransferOnePacket@len:
  2880                           	opt stack 0
  2881  000080                     I2c_ReadData@ReadPacket:
  2882                           	opt stack 0
  2883  000080                     Uart_WriteConstString@ConstStringToWrite:
  2884                           	opt stack 0
  2885  000080                     Uart_WriteString@StringToWrite:
  2886                           	opt stack 0
  2887  000080                     Uart_WriteStringLen@StringToWrite:
  2888                           	opt stack 0
  2889  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2890                           	opt stack 0
  2891  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2892                           	opt stack 0
  2893                           
  2894                           ; 2 bytes @ 0x20
  2895  000080                     	ds	1
  2896  000081                     ?_GetElapsedTime:
  2897                           	opt stack 0
  2898  000081                     ?_Rtcm_GetRtccDate:
  2899                           	opt stack 0
  2900  000081                     Mdm_IsSmsReceived@Ret:
  2901                           	opt stack 0
  2902  000081                     Mdm_IsRinging@Ret:
  2903                           	opt stack 0
  2904  000081                     I2cSlv_I2cReadMsgSts@Result:
  2905                           	opt stack 0
  2906  000081                     USBTransferOnePacket@ep:
  2907                           	opt stack 0
  2908  000081                     Led_SetLedBlinkTime@Led:
  2909                           	opt stack 0
  2910  000081                     ___awdiv@counter:
  2911                           	opt stack 0
  2912  000081                     ___awmod@counter:
  2913                           	opt stack 0
  2914  000081                     ___lwmod@counter:
  2915                           	opt stack 0
  2916  000081                     _isalpha$6459:
  2917                           	opt stack 0
  2918  000081                     _isxdigit$6469:
  2919                           	opt stack 0
  2920  000081                     OsTmr_StartTimer@Timer:
  2921                           	opt stack 0
  2922  000081                     StringCopy@Len:
  2923                           	opt stack 0
  2924  000081                     ClearBuffer@Index:
  2925                           	opt stack 0
  2926  000081                     ___wmul@product:
  2927                           	opt stack 0
  2928  000081                     memcpy@n:
  2929                           	opt stack 0
  2930  000081                     memset@n:
  2931                           	opt stack 0
  2932  000081                     strcat@cp:
  2933                           	opt stack 0
  2934  000081                     strcpy@cp:
  2935                           	opt stack 0
  2936  000081                     strlen@cp:
  2937                           	opt stack 0
  2938  000081                     GetElapsedTime@StartTime:
  2939                           	opt stack 0
  2940  000081                     ___lmul@multiplicand:
  2941                           	opt stack 0
  2942                           
  2943                           ; 4 bytes @ 0x21
  2944  000081                     	ds	1
  2945  000082                     ??_I2c_ReadData:
  2946  000082                     Uart_WriteConstString@Module:
  2947                           	opt stack 0
  2948  000082                     Uart_WriteString@Module:
  2949                           	opt stack 0
  2950  000082                     Uart_WriteStringLen@Len:
  2951                           	opt stack 0
  2952  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2953                           	opt stack 0
  2954  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2955                           	opt stack 0
  2956  000082                     USBConfigureEndpoint@EPNum:
  2957                           	opt stack 0
  2958  000082                     ___awdiv@sign:
  2959                           	opt stack 0
  2960  000082                     ___awmod@sign:
  2961                           	opt stack 0
  2962  000082                     isalpha@c:
  2963                           	opt stack 0
  2964  000082                     isxdigit@c:
  2965                           	opt stack 0
  2966  000082                     USBTransferOnePacket@handle:
  2967                           	opt stack 0
  2968                           
  2969                           ; 2 bytes @ 0x22
  2970  000082                     	ds	1
  2971  000083                     ??_StringCopy:
  2972  000083                     ?_GetCallerNumber:
  2973                           	opt stack 0
  2974  000083                     ?_atoi:
  2975                           	opt stack 0
  2976  000083                     ?_xtoi:
  2977                           	opt stack 0
  2978  000083                     ?___lwdiv:
  2979                           	opt stack 0
  2980  000083                     Uart_WriteStringLen@Index:
  2981                           	opt stack 0
  2982  000083                     Mdm_SetSmsFormat@Index:
  2983                           	opt stack 0
  2984  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2985                           	opt stack 0
  2986  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2987                           	opt stack 0
  2988  000083                     sprintf@flag:
  2989                           	opt stack 0
  2990  000083                     memcpy@tmp:
  2991                           	opt stack 0
  2992  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2993                           	opt stack 0
  2994  000083                     USBConfigureEndpoint@handle:
  2995                           	opt stack 0
  2996  000083                     putUSBUSART@data:
  2997                           	opt stack 0
  2998  000083                     atoi@s:
  2999                           	opt stack 0
  3000  000083                     ___awdiv@quotient:
  3001                           	opt stack 0
  3002  000083                     ___lwdiv@dividend:
  3003                           	opt stack 0
  3004  000083                     memset@p:
  3005                           	opt stack 0
  3006  000083                     xtoi@s:
  3007                           	opt stack 0
  3008  000083                     OsTmr_StartTimer@Timeout:
  3009                           	opt stack 0
  3010                           
  3011                           ; 4 bytes @ 0x23
  3012  000083                     	ds	1
  3013  000084                     Uart_WriteStringLen@Module:
  3014                           	opt stack 0
  3015  000084                     I2cSlv_SendI2cMsg@TxSts:
  3016                           	opt stack 0
  3017  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3018                           	opt stack 0
  3019  000084                     CDCTxService@i:
  3020                           	opt stack 0
  3021  000084                     getsUSBUSART@buffer:
  3022                           	opt stack 0
  3023  000084                     sprintf@ap:
  3024                           	opt stack 0
  3025  000084                     memcpy@d:
  3026                           	opt stack 0
  3027  000084                     Mdm_SetSmsFormat@UartMessage:
  3028                           	opt stack 0
  3029                           
  3030                           ; 20 bytes @ 0x24
  3031  000084                     	ds	1
  3032  000085                     ??_atoi:
  3033  000085                     ??_xtoi:
  3034  000085                     ??_GetElapsedTime:
  3035  000085                     Rtcc_SetRtccValue@Value:
  3036                           	opt stack 0
  3037  000085                     USBDeviceInit@i:
  3038                           	opt stack 0
  3039  000085                     USBEnableEndpoint@options:
  3040                           	opt stack 0
  3041  000085                     putUSBUSART@length:
  3042                           	opt stack 0
  3043  000085                     CDCTxService@byte_to_send:
  3044                           	opt stack 0
  3045  000085                     StringCompare@String1:
  3046                           	opt stack 0
  3047  000085                     StringCopy@Index:
  3048                           	opt stack 0
  3049  000085                     ___lwdiv@divisor:
  3050                           	opt stack 0
  3051  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3052                           	opt stack 0
  3053  000085                     ___lmul@product:
  3054                           	opt stack 0
  3055                           
  3056                           ; 4 bytes @ 0x25
  3057  000085                     	ds	1
  3058  000086                     ??_Rtcc_SetRtccValue:
  3059  000086                     getsUSBUSART@len:
  3060                           	opt stack 0
  3061  000086                     sprintf@c:
  3062                           	opt stack 0
  3063  000086                     USBEnableEndpoint@p:
  3064                           	opt stack 0
  3065  000086                     memcpy@s:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x26
  3069  000086                     	ds	1
  3070  000087                     atoi@sign:
  3071                           	opt stack 0
  3072  000087                     ___lwdiv@counter:
  3073                           	opt stack 0
  3074  000087                     xtoi@sign:
  3075                           	opt stack 0
  3076  000087                     StringCompare@String2:
  3077                           	opt stack 0
  3078  000087                     sprintf@cp:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x27
  3082  000087                     	ds	1
  3083  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3084                           	opt stack 0
  3085  000088                     USBEnableEndpoint@ep:
  3086                           	opt stack 0
  3087  000088                     atoi@a:
  3088                           	opt stack 0
  3089  000088                     ___lwdiv@quotient:
  3090                           	opt stack 0
  3091  000088                     xtoi@val:
  3092                           	opt stack 0
  3093                           
  3094                           ; 2 bytes @ 0x28
  3095  000088                     	ds	1
  3096  000089                     ??_Rtcm_GetRtccDate:
  3097  000089                     ?_strtol:
  3098                           	opt stack 0
  3099  000089                     ?___lldiv:
  3100                           	opt stack 0
  3101  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3102                           	opt stack 0
  3103  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3104                           	opt stack 0
  3105  000089                     StringCompare@Len:
  3106                           	opt stack 0
  3107  000089                     strtol@s:
  3108                           	opt stack 0
  3109  000089                     ___lldiv@dividend:
  3110                           	opt stack 0
  3111  000089                     Rtcm_SetRtccDate@Date:
  3112                           	opt stack 0
  3113                           
  3114                           ; 8 bytes @ 0x29
  3115  000089                     	ds	1
  3116  00008A                     xtoi@c:
  3117                           	opt stack 0
  3118  00008A                     LedBlinkStateMachine@LedBlink:
  3119                           	opt stack 0
  3120  00008A                     LedPulseStateMachine@LedPulse:
  3121                           	opt stack 0
  3122  00008A                     secondsAppTimer@counter:
  3123                           	opt stack 0
  3124  00008A                     utoa@buf:
  3125                           	opt stack 0
  3126  00008A                     Rtcm_GetRtccDate@LocalDate:
  3127                           	opt stack 0
  3128                           
  3129                           ; 8 bytes @ 0x2A
  3130  00008A                     	ds	1
  3131  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3132                           	opt stack 0
  3133  00008B                     strtol@endptr:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x2B
  3137  00008B                     	ds	1
  3138  00008C                     LedPulseStateMachine@Led:
  3139                           	opt stack 0
  3140  00008C                     secondsAppTimer@isCyclic:
  3141                           	opt stack 0
  3142  00008C                     utoa@val:
  3143                           	opt stack 0
  3144                           
  3145                           ; 2 bytes @ 0x2C
  3146  00008C                     	ds	1
  3147  00008D                     StringCompare@Result:
  3148                           	opt stack 0
  3149  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3150                           	opt stack 0
  3151  00008D                     strtol@base:
  3152                           	opt stack 0
  3153  00008D                     GetElapsedTime@TimeValue:
  3154                           	opt stack 0
  3155  00008D                     ___lldiv@divisor:
  3156                           	opt stack 0
  3157                           
  3158                           ; 4 bytes @ 0x2D
  3159  00008D                     	ds	1
  3160  00008E                     StringCompare@Index:
  3161                           	opt stack 0
  3162  00008E                     utoa@base:
  3163                           	opt stack 0
  3164                           
  3165                           ; 2 bytes @ 0x2E
  3166  00008E                     	ds	1
  3167  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3168  00008F                     ??_strtol:
  3169  00008F                     secondsAppTimer@seconds:
  3170                           	opt stack 0
  3171  00008F                     LedStateMachine@LedSts:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x2F
  3175  00008F                     	ds	1
  3176  000090                     secondsAppTimer@isExpired:
  3177                           	opt stack 0
  3178  000090                     utoa@v:
  3179                           	opt stack 0
  3180  000090                     ModemEvtParser@CallReadyString:
  3181                           	opt stack 0
  3182                           
  3183                           ; 10 bytes @ 0x30
  3184  000090                     	ds	1
  3185  000091                     ??_USBStdFeatureReqHandler:
  3186  000091                     USBStdSetCfgHandler@i:
  3187                           	opt stack 0
  3188  000091                     LedStateMachine@LedOut:
  3189                           	opt stack 0
  3190  000091                     secondsAppTimer@destinationTicks:
  3191                           	opt stack 0
  3192  000091                     GetElapsedTime@CurrentTimestamp:
  3193                           	opt stack 0
  3194  000091                     ___lldiv@quotient:
  3195                           	opt stack 0
  3196                           
  3197                           ; 4 bytes @ 0x31
  3198  000091                     	ds	1
  3199  000092                     utoa@c:
  3200                           	opt stack 0
  3201  000092                     USBStdFeatureReqHandler@pUEP:
  3202                           	opt stack 0
  3203                           
  3204                           ; 2 bytes @ 0x32
  3205  000092                     	ds	1
  3206  000093                     strtol@sign:
  3207                           	opt stack 0
  3208  000093                     LedStateMachine@LedBlink:
  3209                           	opt stack 0
  3210  000093                     blinkForSeconds@blinkTicks:
  3211                           	opt stack 0
  3212  000093                     itoa@buf:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x33
  3216  000093                     	ds	1
  3217  000094                     USBStdFeatureReqHandler@current_ep_data:
  3218                           	opt stack 0
  3219  000094                     strtol@a:
  3220                           	opt stack 0
  3221                           
  3222                           ; 4 bytes @ 0x34
  3223  000094                     	ds	1
  3224  000095                     blinkForSeconds@seconds:
  3225                           	opt stack 0
  3226  000095                     ___lldiv@counter:
  3227                           	opt stack 0
  3228  000095                     OsTmr_GetTimerStatus@Timer:
  3229                           	opt stack 0
  3230  000095                     USBStdFeatureReqHandler@p:
  3231                           	opt stack 0
  3232  000095                     LedStateMachine@LedPulse:
  3233                           	opt stack 0
  3234  000095                     itoa@val:
  3235                           	opt stack 0
  3236                           
  3237                           ; 2 bytes @ 0x35
  3238  000095                     	ds	1
  3239  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3240                           	opt stack 0
  3241  000096                     SetUartBaudRate@UartConfig:
  3242                           	opt stack 0
  3243  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3244                           	opt stack 0
  3245                           
  3246                           ; 4 bytes @ 0x36
  3247  000096                     	ds	1
  3248  000097                     ??_USBCtrlEPService:
  3249  000097                     itoa@base:
  3250                           	opt stack 0
  3251                           
  3252                           ; 2 bytes @ 0x37
  3253  000097                     	ds	1
  3254  000098                     Tmr_TmrBPrSet@Prescaler:
  3255                           	opt stack 0
  3256  000098                     Mdm_SetSmsFormat@TextFormat:
  3257                           	opt stack 0
  3258  000098                     USBDeviceTasks@i:
  3259                           	opt stack 0
  3260  000098                     LedStateMachine@LedOutSts:
  3261                           	opt stack 0
  3262  000098                     strtol@c:
  3263                           	opt stack 0
  3264                           
  3265                           ; 1 bytes @ 0x38
  3266  000098                     	ds	1
  3267  000099                     Tmr_TmrBPrSet@Postscaler:
  3268                           	opt stack 0
  3269  000099                     SetUartBaudRate@Module:
  3270                           	opt stack 0
  3271  000099                     LedStateMachine@Led:
  3272                           	opt stack 0
  3273  000099                     itoa@cp:
  3274                           	opt stack 0
  3275                           
  3276                           ; 2 bytes @ 0x39
  3277  000099                     	ds	1
  3278  00009A                     ??_Led_MainTask:
  3279  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3280                           	opt stack 0
  3281  00009A                     SetUartBaudRate@BaudRateRegister:
  3282                           	opt stack 0
  3283  00009A                     SetBaudRate@McuClockHz:
  3284                           	opt stack 0
  3285  00009A                     ModemEvtParser@ClipString:
  3286                           	opt stack 0
  3287                           
  3288                           ; 5 bytes @ 0x3A
  3289  00009A                     	ds	1
  3290  00009B                     ??_SendSmsSm:
  3291  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3292                           	opt stack 0
  3293  00009B                     OsTmr_Wait@WaitTimer:
  3294                           	opt stack 0
  3295  00009B                     InitGprsNetwork@Apn:
  3296                           	opt stack 0
  3297  00009B                     HttpGetMethod@GetData:
  3298                           	opt stack 0
  3299                           
  3300                           ; 2 bytes @ 0x3B
  3301  00009B                     	ds	1
  3302  00009C                     SetUartBaudRate@DivisionFactor:
  3303                           	opt stack 0
  3304  00009C                     Tmr_TmrBPrSet@Divisor:
  3305                           	opt stack 0
  3306                           
  3307                           ; 4 bytes @ 0x3C
  3308  00009C                     	ds	1
  3309  00009D                     ??_HttpGetMethod:
  3310  00009D                     InitGprsNetwork@ApnLen:
  3311                           	opt stack 0
  3312  00009D                     Uart_InitUartModule@UartConfig:
  3313                           	opt stack 0
  3314  00009D                     OsTmr_Wait@DelayMs:
  3315                           	opt stack 0
  3316                           
  3317                           ; 4 bytes @ 0x3D
  3318  00009D                     	ds	1
  3319  00009E                     ??_SetBaudRate:
  3320  00009E                     ??_InitGprsNetwork:
  3321                           
  3322                           ; 1 bytes @ 0x3E
  3323  00009E                     	ds	1
  3324  00009F                     ??_Uart_InitUartModule:
  3325  00009F                     ModemEvtParser@SmsString:
  3326                           	opt stack 0
  3327                           
  3328                           ; 5 bytes @ 0x3F
  3329  00009F                     	ds	1
  3330  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3331                           	opt stack 0
  3332                           
  3333                           ; 2 bytes @ 0x40
  3334  0000A0                     	ds	1
  3335  0000A1                     Uart_InitUartModule@Module:
  3336                           	opt stack 0
  3337  0000A1                     OsTmr_Wait@Ret:
  3338                           	opt stack 0
  3339                           
  3340                           ; 1 bytes @ 0x41
  3341  0000A1                     	ds	1
  3342  0000A2                     ??_Terminal:
  3343  0000A2                     I2c_InitI2cModule@I2cConfig:
  3344                           	opt stack 0
  3345  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3346                           	opt stack 0
  3347                           
  3348                           ; 2 bytes @ 0x42
  3349  0000A2                     	ds	1
  3350  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3351                           	opt stack 0
  3352                           
  3353                           ; 1 bytes @ 0x43
  3354  0000A3                     	ds	1
  3355  0000A4                     ??_I2c_InitI2cModule:
  3356  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3357                           	opt stack 0
  3358  0000A4                     Terminal@i:
  3359                           	opt stack 0
  3360  0000A4                     ModemEvtParser@RingString:
  3361                           	opt stack 0
  3362  0000A4                     InitSchedTimer@TmrBConfig:
  3363                           	opt stack 0
  3364                           
  3365                           ; 7 bytes @ 0x44
  3366  0000A4                     	ds	1
  3367  0000A5                     Terminal@ReceivedBytes:
  3368                           	opt stack 0
  3369  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3370                           	opt stack 0
  3371                           
  3372                           ; 2 bytes @ 0x45
  3373  0000A5                     	ds	1
  3374  0000A6                     Terminal@Index:
  3375                           	opt stack 0
  3376                           
  3377                           ; 1 bytes @ 0x46
  3378  0000A6                     	ds	1
  3379  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3380                           	opt stack 0
  3381                           
  3382                           ; 1 bytes @ 0x47
  3383  0000A7                     	ds	1
  3384  0000A8                     ModemEvtParser@Match:
  3385                           	opt stack 0
  3386  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3387                           	opt stack 0
  3388                           
  3389                           ; 1 bytes @ 0x48
  3390  0000A8                     	ds	1
  3391  0000A9                     ModemEvtParser@CompareIdx:
  3392                           	opt stack 0
  3393  0000A9                     Eeprom_Read@ReadBuffer:
  3394                           	opt stack 0
  3395                           
  3396                           ; 2 bytes @ 0x49
  3397  0000A9                     	ds	1
  3398  0000AA                     
  3399                           ; 1 bytes @ 0x4A
  3400  0000AA                     	ds	1
  3401  0000AB                     Eeprom_Read@DataLength:
  3402                           	opt stack 0
  3403                           
  3404                           ; 1 bytes @ 0x4B
  3405  0000AB                     	ds	1
  3406  0000AC                     Eeprom_Read@MemoryAddress:
  3407                           	opt stack 0
  3408                           
  3409                           ; 1 bytes @ 0x4C
  3410  0000AC                     	ds	1
  3411  0000AD                     Eeprom_Read@SlaveAddress:
  3412                           	opt stack 0
  3413                           
  3414                           ; 1 bytes @ 0x4D
  3415  0000AD                     	ds	1
  3416  0000AE                     Eeprom_Read@ReadSts:
  3417                           	opt stack 0
  3418                           
  3419                           ; 1 bytes @ 0x4E
  3420  0000AE                     	ds	1
  3421  0000AF                     Eeprom_Read@QuerySts:
  3422                           	opt stack 0
  3423                           
  3424                           ; 1 bytes @ 0x4F
  3425  0000AF                     	ds	1
  3426  0000B0                     tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           postdec1	equ	0xFE5
  3433                           fsr1h	equ	0xFE2
  3434                           fsr1l	equ	0xFE1
  3435                           
  3436                           ; 1 bytes @ 0x50
  3437                           
  3438                           	psect	cstackCOMRAM
  3439  000001                     __pcstackCOMRAM:
  3440                           	opt stack 0
  3441  000001                     i2GenerateEvt@Event:
  3442                           	opt stack 0
  3443                           
  3444                           ; 2 bytes @ 0x0
  3445  000001                     	ds	2
  3446  000003                     i2GenerateEvt@EventStatus:
  3447                           	opt stack 0
  3448                           
  3449                           ; 1 bytes @ 0x2
  3450  000003                     	ds	1
  3451  000004                     Uart_MdmGsmGprsReadService@UartData:
  3452                           	opt stack 0
  3453                           
  3454                           ; 1 bytes @ 0x3
  3455  000004                     	ds	1
  3456  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x4
  3460  000005                     	ds	2
  3461  000007                     ??_HighPriorityIsr:
  3462                           
  3463                           ; 1 bytes @ 0x6
  3464  000007                     	ds	18
  3465  000019                     ?i1___wmul:
  3466                           	opt stack 0
  3467  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3468                           	opt stack 0
  3469  000019                     i1GenerateEvt@Event:
  3470                           	opt stack 0
  3471  000019                     i1___wmul@multiplier:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0x18
  3475  000019                     	ds	2
  3476  00001B                     i1GenerateEvt@EventStatus:
  3477                           	opt stack 0
  3478  00001B                     i1___wmul@multiplicand:
  3479                           	opt stack 0
  3480                           
  3481                           ; 2 bytes @ 0x1A
  3482  00001B                     	ds	1
  3483  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3484                           	opt stack 0
  3485                           
  3486                           ; 2 bytes @ 0x1B
  3487  00001C                     	ds	1
  3488  00001D                     i1___wmul@product:
  3489                           	opt stack 0
  3490                           
  3491                           ; 2 bytes @ 0x1C
  3492  00001D                     	ds	1
  3493  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3494                           	opt stack 0
  3495                           
  3496                           ; 1 bytes @ 0x1D
  3497  00001E                     	ds	1
  3498  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3499                           	opt stack 0
  3500                           
  3501                           ; 1 bytes @ 0x1E
  3502  00001F                     	ds	1
  3503  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3504                           	opt stack 0
  3505                           
  3506                           ; 1 bytes @ 0x1F
  3507  000020                     	ds	1
  3508  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3509                           	opt stack 0
  3510                           
  3511                           ; 2 bytes @ 0x20
  3512  000021                     	ds	2
  3513  000023                     tblptru	equ	0xFF8
  3514                           tblptrh	equ	0xFF7
  3515                           tblptrl	equ	0xFF6
  3516                           tablat	equ	0xFF5
  3517                           postinc0	equ	0xFEE
  3518                           wreg	equ	0xFE8
  3519                           postdec1	equ	0xFE5
  3520                           fsr1h	equ	0xFE2
  3521                           fsr1l	equ	0xFE1
  3522                           
  3523                           ; 1 bytes @ 0x22
  3524 ;;
  3525 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3526 ;;
  3527 ;; *************** function _main *****************
  3528 ;; Defined at:
  3529 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  2   14[None  ] short 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels required when called:   23
  3549 ;; This function calls:
  3550 ;;		_Sch_MainScheduler
  3551 ;;		_SystemInit
  3552 ;; This function is called by:
  3553 ;;		Startup code after reset
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text0
  3558  00626C                     __ptext0:
  3559                           	opt stack 0
  3560  00626C                     _main:
  3561                           	opt stack 8
  3562                           
  3563                           ;main.c: 61: SystemInit();
  3564                           
  3565                           ;incstack = 0
  3566  00626C  EC68  F02E         	call	_SystemInit	;wreg free
  3567                           
  3568                           ;main.c: 64: Sch_MainScheduler();
  3569  006270  EC3A  F030         	call	_Sch_MainScheduler	;wreg free
  3570                           
  3571                           ;main.c: 67: return 0;
  3572                           ;	Return value of _main is never used
  3573  006274  EF66  F000         	goto	start
  3574  006278                     __end_of_main:
  3575                           	opt stack 0
  3576                           tblptru	equ	0xFF8
  3577                           tblptrh	equ	0xFF7
  3578                           tblptrl	equ	0xFF6
  3579                           tablat	equ	0xFF5
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           postdec1	equ	0xFE5
  3583                           fsr1h	equ	0xFE2
  3584                           fsr1l	equ	0xFE1
  3585                           
  3586 ;; *************** function _SystemInit *****************
  3587 ;; Defined at:
  3588 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:   15
  3609 ;; This function calls:
  3610 ;;		_InitSchedTimer
  3611 ;;		_Irq_InitIntController
  3612 ;;		_Mcu_ConfigExtInt
  3613 ;;		_Mcu_StartSystemPll
  3614 ;;		_Pm_DsReleasePinControl
  3615 ;;		_Tmr_RegisterTmr2IsrCallback
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text1
  3622  005CD0                     __ptext1:
  3623                           	opt stack 0
  3624  005CD0                     _SystemInit:
  3625                           	opt stack 15
  3626                           
  3627                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3628                           
  3629                           ;incstack = 0
  3630  005CD0  EC59  F031         	call	_Pm_DsReleasePinControl	;wreg free
  3631                           
  3632                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3633  005CD4  EC2B  F030         	call	_Mcu_StartSystemPll	;wreg free
  3634                           
  3635                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3636  005CD8  0E01               	movlw	1
  3637  005CDA  0100               	movlb	0	; () banked
  3638  005CDC  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3639  005CDE  0E01               	movlw	1
  3640  005CE0  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3641  005CE2  0E01               	movlw	1
  3642  005CE4  EC0C  F02F         	call	_Irq_InitIntController
  3643                           
  3644                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3645  005CE8  0E50               	movlw	low _Sch_SchmIntService
  3646  005CEA  0100               	movlb	0	; () banked
  3647  005CEC  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3648  005CEE  0E62               	movlw	high _Sch_SchmIntService
  3649  005CF0  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3650  005CF2  EC3C  F031         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3651                           
  3652                           ;sys_init.c: 132: InitSchedTimer();
  3653  005CF6  ECC8  F02E         	call	_InitSchedTimer	;wreg free
  3654                           
  3655                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3656  005CFA  EC65  F030         	call	_Mcu_ConfigExtInt	;wreg free
  3657  005CFE  0012               	return		;funcret
  3658  005D00                     __end_of_SystemInit:
  3659                           	opt stack 0
  3660                           tblptru	equ	0xFF8
  3661                           tblptrh	equ	0xFF7
  3662                           tblptrl	equ	0xFF6
  3663                           tablat	equ	0xFF5
  3664                           postinc0	equ	0xFEE
  3665                           wreg	equ	0xFE8
  3666                           postdec1	equ	0xFE5
  3667                           fsr1h	equ	0xFE2
  3668                           fsr1l	equ	0xFE1
  3669                           
  3670 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3671 ;; Defined at:
  3672 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3675 ;;		 -> Sch_SchmIntService(1), 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:   11
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_SystemInit
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text2
  3702  006278                     __ptext2:
  3703                           	opt stack 0
  3704  006278                     _Tmr_RegisterTmr2IsrCallback:
  3705                           	opt stack 18
  3706                           
  3707                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3708                           
  3709                           ;incstack = 0
  3710  006278  C07D  F1D3         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3711  00627C  C07E  F1D4         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3712  006280  0012               	return		;funcret
  3713  006282                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3714                           	opt stack 0
  3715                           tblptru	equ	0xFF8
  3716                           tblptrh	equ	0xFF7
  3717                           tblptrl	equ	0xFF6
  3718                           tablat	equ	0xFF5
  3719                           postinc0	equ	0xFEE
  3720                           wreg	equ	0xFE8
  3721                           postdec1	equ	0xFE5
  3722                           fsr1h	equ	0xFE2
  3723                           fsr1l	equ	0xFE1
  3724                           
  3725 ;; *************** function _Pm_DsReleasePinControl *****************
  3726 ;; Defined at:
  3727 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		None
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3745 ;;Total ram usage:        0 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:   11
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_SystemInit
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text3
  3756  0062B2                     __ptext3:
  3757                           	opt stack 0
  3758  0062B2                     _Pm_DsReleasePinControl:
  3759                           	opt stack 18
  3760                           
  3761                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3762                           
  3763                           ;incstack = 0
  3764  0062B2  010F               	movlb	15	; () banked
  3765  0062B4  914C               	bcf	76,0,b	;volatile
  3766                           
  3767                           ; BSR set to: 15
  3768  0062B6  0012               	return		;funcret
  3769  0062B8                     __end_of_Pm_DsReleasePinControl:
  3770                           	opt stack 0
  3771                           tblptru	equ	0xFF8
  3772                           tblptrh	equ	0xFF7
  3773                           tblptrl	equ	0xFF6
  3774                           tablat	equ	0xFF5
  3775                           postinc0	equ	0xFEE
  3776                           wreg	equ	0xFE8
  3777                           postdec1	equ	0xFE5
  3778                           fsr1h	equ	0xFE2
  3779                           fsr1l	equ	0xFE1
  3780                           
  3781 ;; *************** function _Mcu_StartSystemPll *****************
  3782 ;; Defined at:
  3783 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3798 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3801 ;;Total ram usage:        2 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:   11
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_SystemInit
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text4
  3812  006056                     __ptext4:
  3813                           	opt stack 0
  3814  006056                     _Mcu_StartSystemPll:
  3815                           	opt stack 18
  3816                           
  3817                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3818                           
  3819                           ; BSR set to: 15
  3820                           ;incstack = 0
  3821  006056  0E03               	movlw	3
  3822  006058  0100               	movlb	0	; () banked
  3823  00605A  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3824  00605C  0EE8               	movlw	232
  3825  00605E  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3829  006060  8C9B               	bsf	3995,6,c	;volatile
  3830  006062                     l11133:
  3831                           
  3832                           ; BSR set to: 0
  3833  006062  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3834  006064  A0D8               	btfss	status,0,c
  3835  006066  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3836  006068  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3837  00606A  E1FB               	bnz	l11133
  3838  00606C  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3839  00606E  B4D8               	btfsc	status,2,c
  3840  006070  0012               	return	
  3841  006072  D7F7               	goto	l237
  3842  006074                     __end_of_Mcu_StartSystemPll:
  3843                           	opt stack 0
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postdec1	equ	0xFE5
  3851                           fsr1h	equ	0xFE2
  3852                           fsr1l	equ	0xFE1
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function _Mcu_ConfigExtInt *****************
  3856 ;; Defined at:
  3857 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:   11
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_SystemInit
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text5
  3886  0060CA                     __ptext5:
  3887                           	opt stack 0
  3888  0060CA                     _Mcu_ConfigExtInt:
  3889                           	opt stack 18
  3890                           
  3891                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;incstack = 0
  3895  0060CA  8093               	bsf	3987,0,c	;volatile
  3896                           
  3897                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3898  0060CC  8695               	bsf	3989,3,c	;volatile
  3899                           
  3900                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3901  0060CE  010F               	movlb	15	; () banked
  3902  0060D0  8949               	bsf	73,4,b	;volatile
  3903                           
  3904                           ; BSR set to: 15
  3905                           ;mcu_drv.c: 108: RPINR1 = 20;
  3906  0060D2  0E14               	movlw	20
  3907  0060D4  010E               	movlb	14	; () banked
  3908  0060D6  6FE7               	movwf	231,b	;volatile
  3909                           
  3910                           ; BSR set to: 14
  3911                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3912  0060D8  88F2               	bsf	intcon,4,c	;volatile
  3913                           
  3914                           ; BSR set to: 14
  3915                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3916  0060DA  86F0               	bsf	intcon3,3,c	;volatile
  3917                           
  3918                           ; BSR set to: 14
  3919                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3920  0060DC  8CF0               	bsf	intcon3,6,c	;volatile
  3921                           
  3922                           ; BSR set to: 14
  3923                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3924  0060DE  9CF1               	bcf	intcon2,6,c	;volatile
  3925                           
  3926                           ; BSR set to: 14
  3927                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3928  0060E0  9AF1               	bcf	intcon2,5,c	;volatile
  3929                           
  3930                           ; BSR set to: 14
  3931  0060E2  0012               	return		;funcret
  3932  0060E4                     __end_of_Mcu_ConfigExtInt:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           tblptrh	equ	0xFF7
  3936                           tblptrl	equ	0xFF6
  3937                           tablat	equ	0xFF5
  3938                           intcon	equ	0xFF2
  3939                           intcon2	equ	0xFF1
  3940                           intcon3	equ	0xFF0
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           postdec1	equ	0xFE5
  3944                           fsr1h	equ	0xFE2
  3945                           fsr1l	equ	0xFE1
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _Irq_InitIntController *****************
  3949 ;; Defined at:
  3950 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  IntPriorityE    1    wreg     enum E7720
  3953 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3954 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3966 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;Total ram usage:        3 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:   11
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_SystemInit
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text6
  3981  005E18                     __ptext6:
  3982                           	opt stack 0
  3983  005E18                     _Irq_InitIntController:
  3984                           	opt stack 18
  3985                           
  3986                           ; BSR set to: 14
  3987                           ;incstack = 0
  3988                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3989  005E18  0100               	movlb	0	; () banked
  3990  005E1A  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3991                           
  3992                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3993  005E1C  0100               	movlb	0	; () banked
  3994  005E1E  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3995  005E20  D002               	bra	u9675
  3996  005E22  9ED0               	bcf	4048,7,c	;volatile
  3997  005E24  D001               	bra	u9676
  3998  005E26                     u9675:
  3999  005E26  8ED0               	bsf	4048,7,c	;volatile
  4000  005E28                     u9676:
  4001                           
  4002                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4003  005E28  0100               	movlb	0	; () banked
  4004  005E2A  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4005  005E2C  D002               	bra	u9685
  4006  005E2E  9EF2               	bcf	intcon,7,c	;volatile
  4007  005E30  D001               	bra	u9686
  4008  005E32                     u9685:
  4009  005E32  8EF2               	bsf	intcon,7,c	;volatile
  4010  005E34                     u9686:
  4011                           
  4012                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4013  005E34  0100               	movlb	0	; () banked
  4014  005E36  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4015  005E38  D002               	bra	u9695
  4016  005E3A  9CF2               	bcf	intcon,6,c	;volatile
  4017  005E3C  D001               	bra	u9696
  4018  005E3E                     u9695:
  4019  005E3E  8CF2               	bsf	intcon,6,c	;volatile
  4020  005E40                     u9696:
  4021  005E40  0012               	return		;funcret
  4022  005E42                     __end_of_Irq_InitIntController:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           intcon	equ	0xFF2
  4029                           intcon2	equ	0xFF1
  4030                           intcon3	equ	0xFF0
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           postdec1	equ	0xFE5
  4034                           fsr1h	equ	0xFE2
  4035                           fsr1l	equ	0xFE1
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function _InitSchedTimer *****************
  4039 ;; Defined at:
  4040 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4055 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4057 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4058 ;;Total ram usage:        7 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:   14
  4061 ;; This function calls:
  4062 ;;		_Tmr_TmrBConfig
  4063 ;; This function is called by:
  4064 ;;		_SystemInit
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text7
  4069  005D90                     __ptext7:
  4070                           	opt stack 0
  4071  005D90                     _InitSchedTimer:
  4072                           	opt stack 15
  4073                           
  4074                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4075                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4076                           
  4077                           ;incstack = 0
  4078  005D90  0E04               	movlw	4
  4079  005D92  0100               	movlb	0	; () banked
  4080  005D94  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4081                           
  4082                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4083  005D96  0E0C               	movlw	12
  4084  005D98  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4085                           
  4086                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4087  005D9A  0E00               	movlw	0
  4088  005D9C  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4089                           
  4090                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4091  005D9E  0E01               	movlw	1
  4092  005DA0  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4093                           
  4094                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4095  005DA2  0E03               	movlw	3
  4096  005DA4  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4097  005DA6  0EE8               	movlw	232
  4098  005DA8  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4099                           
  4100                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4101  005DAA  0E01               	movlw	1
  4102  005DAC  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4106  005DAE  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4107  005DB0  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4108  005DB2  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4109  005DB4  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4110  005DB6  0E02               	movlw	2
  4111  005DB8  EC2D  F01E         	call	_Tmr_TmrBConfig
  4112  005DBC  0012               	return		;funcret
  4113  005DBE                     __end_of_InitSchedTimer:
  4114                           	opt stack 0
  4115                           tblptru	equ	0xFF8
  4116                           tblptrh	equ	0xFF7
  4117                           tblptrl	equ	0xFF6
  4118                           tablat	equ	0xFF5
  4119                           intcon	equ	0xFF2
  4120                           intcon2	equ	0xFF1
  4121                           intcon3	equ	0xFF0
  4122                           postinc0	equ	0xFEE
  4123                           wreg	equ	0xFE8
  4124                           postdec1	equ	0xFE5
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           status	equ	0xFD8
  4128                           
  4129 ;; *************** function _Tmr_TmrBConfig *****************
  4130 ;; Defined at:
  4131 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  TmrNumb         1    wreg     unsigned char 
  4134 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4135 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4150 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;Total ram usage:        4 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:   13
  4154 ;; This function calls:
  4155 ;;		_TmrBInit
  4156 ;;		_Tmr_StartTmr
  4157 ;;		_Tmr_TmrBIrqSet
  4158 ;;		_Tmr_TmrBPrSet
  4159 ;; This function is called by:
  4160 ;;		_InitSchedTimer
  4161 ;;		_InitAuxTimer
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text8
  4166  003C5A                     __ptext8:
  4167                           	opt stack 0
  4168  003C5A                     _Tmr_TmrBConfig:
  4169                           	opt stack 15
  4170                           
  4171                           ;incstack = 0
  4172                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4173  003C5A  0100               	movlb	0	; () banked
  4174  003C5C  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4175                           
  4176                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4177  003C5E  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4178  003C62  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4179  003C66  50DF               	movf	indf2,w,c
  4180  003C68  0100               	movlb	0	; () banked
  4181  003C6A  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4182  003C6C  EE20 F001          	lfsr	2,1
  4183  003C70  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4184  003C72  26D9               	addwf	fsr2l,f,c
  4185  003C74  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4186  003C76  22DA               	addwfc	fsr2h,f,c
  4187  003C78  50DF               	movf	indf2,w,c
  4188  003C7A  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4189  003C7C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4190  003C7E  EC0A  F024         	call	_TmrBInit
  4191                           
  4192                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4193  003C82  0100               	movlb	0	; () banked
  4194  003C84  EE20 F002          	lfsr	2,2
  4195  003C88  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4196  003C8A  26D9               	addwf	fsr2l,f,c
  4197  003C8C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4198  003C8E  22DA               	addwfc	fsr2h,f,c
  4199  003C90  04DE               	decf	postinc2,w,c
  4200  003C92  A4D8               	btfss	status,2,c
  4201  003C94  D00E               	goto	l546
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;tmr_drv.c: 277: {
  4205                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4206  003C96  EE20 F003          	lfsr	2,3
  4207  003C9A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4208  003C9C  26D9               	addwf	fsr2l,f,c
  4209  003C9E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4210  003CA0  22DA               	addwfc	fsr2h,f,c
  4211  003CA2  50DF               	movf	indf2,w,c
  4212  003CA4  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4213  003CA6  0E01               	movlw	1
  4214  003CA8  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4215  003CAA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4216  003CAC  EC79  F02B         	call	_Tmr_TmrBIrqSet
  4217                           
  4218                           ;tmr_drv.c: 280: }
  4219  003CB0  D00E               	goto	l547
  4220  003CB2                     l546:
  4221                           
  4222                           ;tmr_drv.c: 281: else
  4223                           ;tmr_drv.c: 282: {
  4224                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4225  003CB2  0100               	movlb	0	; () banked
  4226  003CB4  EE20 F003          	lfsr	2,3
  4227  003CB8  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4228  003CBA  26D9               	addwf	fsr2l,f,c
  4229  003CBC  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4230  003CBE  22DA               	addwfc	fsr2h,f,c
  4231  003CC0  50DF               	movf	indf2,w,c
  4232  003CC2  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4233  003CC4  0E00               	movlw	0
  4234  003CC6  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4235  003CC8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4236  003CCA  EC79  F02B         	call	_Tmr_TmrBIrqSet
  4237  003CCE                     l547:
  4238                           
  4239                           ;tmr_drv.c: 285: }
  4240                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4241  003CCE  0100               	movlb	0	; () banked
  4242  003CD0  EE20 F004          	lfsr	2,4
  4243  003CD4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4244  003CD6  26D9               	addwf	fsr2l,f,c
  4245  003CD8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4246  003CDA  22DA               	addwfc	fsr2h,f,c
  4247  003CDC  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4248  003CE0  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4249  003CE4  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4250  003CE8  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4251  003CEC  50DF               	movf	indf2,w,c
  4252  003CEE  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4253  003CF0  EE20 F001          	lfsr	2,1
  4254  003CF4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4255  003CF6  26D9               	addwf	fsr2l,f,c
  4256  003CF8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4257  003CFA  22DA               	addwfc	fsr2h,f,c
  4258  003CFC  50DF               	movf	indf2,w,c
  4259  003CFE  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4260  003D00  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4261  003D02  ECAA  F018         	call	_Tmr_TmrBPrSet
  4262                           
  4263                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4264  003D06  0100               	movlb	0	; () banked
  4265  003D08  EE20 F006          	lfsr	2,6
  4266  003D0C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4267  003D0E  26D9               	addwf	fsr2l,f,c
  4268  003D10  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4269  003D12  22DA               	addwfc	fsr2h,f,c
  4270  003D14  04DE               	decf	postinc2,w,c
  4271  003D16  A4D8               	btfss	status,2,c
  4272  003D18  0012               	return	
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;tmr_drv.c: 290: {
  4276                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4277  003D1A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4278  003D1C  EC0B  F030         	call	_Tmr_StartTmr
  4279                           
  4280                           ;tmr_drv.c: 293: }
  4281  003D20  0012               	return	
  4282  003D22                     __end_of_Tmr_TmrBConfig:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           tblptrh	equ	0xFF7
  4286                           tblptrl	equ	0xFF6
  4287                           tablat	equ	0xFF5
  4288                           intcon	equ	0xFF2
  4289                           intcon2	equ	0xFF1
  4290                           intcon3	equ	0xFF0
  4291                           postinc0	equ	0xFEE
  4292                           wreg	equ	0xFE8
  4293                           postdec1	equ	0xFE5
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           indf2	equ	0xFDF
  4297                           postinc2	equ	0xFDE
  4298                           postdec2	equ	0xFDD
  4299                           fsr2h	equ	0xFDA
  4300                           fsr2l	equ	0xFD9
  4301                           status	equ	0xFD8
  4302                           
  4303 ;; *************** function _Tmr_TmrBPrSet *****************
  4304 ;; Defined at:
  4305 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  TmrNumb         1    wreg     unsigned char 
  4308 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4309 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4310 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4313 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4314 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      enum E7736
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4325 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4327 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4328 ;;Total ram usage:       10 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:   12
  4331 ;; This function calls:
  4332 ;;		___lldiv
  4333 ;;		___lmul
  4334 ;; This function is called by:
  4335 ;;		_Tmr_TmrBConfig
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text9
  4340  003154                     __ptext9:
  4341                           	opt stack 0
  4342  003154                     _Tmr_TmrBPrSet:
  4343                           	opt stack 15
  4344                           
  4345                           ;incstack = 0
  4346                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4347  003154  0100               	movlb	0	; () banked
  4348  003156  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4349                           
  4350                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4351                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4352  003158  0E00               	movlw	0
  4353  00315A  0100               	movlb	0	; () banked
  4354  00315C  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4355  00315E  0E00               	movlw	0
  4356  003160  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4357  003162  0E00               	movlw	0
  4358  003164  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4359  003166  0E00               	movlw	0
  4360  003168  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4364  00316A  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4365  00316C  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4366  00316E  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4367  003172  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4368  003176  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4369  003178  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4370  00317A  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4371  00317E  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4372  003182  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4373  003184  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4374  003186  EC34  F029         	call	___lmul	;wreg free
  4375  00318A  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4376  00318E  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4377  003192  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4378  003196  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4379                           
  4380                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4381  00319A  0E00               	movlw	0
  4382  00319C  0100               	movlb	0	; () banked
  4383  00319E  6F89               	movwf	___lldiv@dividend& (0+255),b
  4384  0031A0  0E1B               	movlw	27
  4385  0031A2  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4386  0031A4  0EB7               	movlw	183
  4387  0031A6  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4388  0031A8  0E00               	movlw	0
  4389  0031AA  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4390  0031AC  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4391  0031B0  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4392  0031B4  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4393  0031B8  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4394  0031BC  EC4C  F026         	call	___lldiv	;wreg free
  4395  0031C0  0100               	movlb	0	; () banked
  4396  0031C2  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4397  0031C4  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4398  0031C6  E13A               	bnz	l13939
  4399  0031C8  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4400  0031CA  A0D8               	btfss	status,0,c
  4401  0031CC  D02D               	goto	l529
  4402  0031CE  D036               	goto	l528
  4403  0031D0                     
  4404                           ; BSR set to: 0
  4405                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4406                           
  4407                           ; BSR set to: 0
  4408  0031D0  0E00               	movlw	0
  4409  0031D2  6F89               	movwf	___lldiv@dividend& (0+255),b
  4410  0031D4  0E1B               	movlw	27
  4411  0031D6  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4412  0031D8  0EB7               	movlw	183
  4413  0031DA  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4414  0031DC  0E00               	movlw	0
  4415  0031DE  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4416  0031E0  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4417  0031E4  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4418  0031E8  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4419  0031EC  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4420  0031F0  EC4C  F026         	call	___lldiv	;wreg free
  4421  0031F4  0100               	movlb	0	; () banked
  4422  0031F6  5189               	movf	?___lldiv& (0+255),w,b
  4423  0031F8  6ECB               	movwf	4043,c	;volatile
  4424                           
  4425                           ;tmr_drv.c: 210: break;
  4426  0031FA  D01D               	goto	l531
  4427  0031FC                     
  4428                           ; BSR set to: 0
  4429                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4430                           
  4431                           ; BSR set to: 0
  4432  0031FC  0E00               	movlw	0
  4433  0031FE  6F89               	movwf	___lldiv@dividend& (0+255),b
  4434  003200  0E1B               	movlw	27
  4435  003202  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4436  003204  0EB7               	movlw	183
  4437  003206  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4438  003208  0E00               	movlw	0
  4439  00320A  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4440  00320C  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4441  003210  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4442  003214  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4443  003218  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4444  00321C  EC4C  F026         	call	___lldiv	;wreg free
  4445  003220  0100               	movlb	0	; () banked
  4446  003222  5189               	movf	?___lldiv& (0+255),w,b
  4447  003224  6E77               	movwf	3959,c	;volatile
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;tmr_drv.c: 219: }
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;tmr_drv.c: 218: break;
  4454                           
  4455                           ;tmr_drv.c: 217: default:
  4456                           
  4457                           ;tmr_drv.c: 215: break;
  4458  003226  D007               	goto	l531
  4459  003228                     l529:
  4460                           
  4461                           ; BSR set to: 0
  4462                           
  4463                           ; BSR set to: 0
  4464  003228  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4465                           
  4466                           ; Switch size 1, requested type "space"
  4467                           ; Number of cases is 2, Range of values is 2 to 4
  4468                           ; switch strategies available:
  4469                           ; Name         Instructions Cycles
  4470                           ; simple_byte            7     4 (average)
  4471                           ;	Chosen strategy is simple_byte
  4472  00322A  0A02               	xorlw	2	; case 2
  4473  00322C  B4D8               	btfsc	status,2,c
  4474  00322E  D7D0               	goto	l530
  4475  003230  0A06               	xorlw	6	; case 4
  4476  003232  B4D8               	btfsc	status,2,c
  4477  003234  D7E3               	goto	l532
  4478  003236                     l531:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4482                           
  4483                           ; BSR set to: 0
  4484  003236  0E00               	movlw	0
  4485  003238  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4486                           
  4487                           ;tmr_drv.c: 223: }
  4488  00323A  0012               	return	
  4489  00323C                     l528:
  4490  00323C                     l13939:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;tmr_drv.c: 224: else
  4494                           ;tmr_drv.c: 225: {
  4495                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4496  00323C  0E01               	movlw	1
  4497  00323E  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4498                           
  4499                           ; BSR set to: 0
  4500  003240  0012               	return	
  4501  003242                     __end_of_Tmr_TmrBPrSet:
  4502                           	opt stack 0
  4503                           tblptru	equ	0xFF8
  4504                           tblptrh	equ	0xFF7
  4505                           tblptrl	equ	0xFF6
  4506                           tablat	equ	0xFF5
  4507                           prodh	equ	0xFF4
  4508                           prodl	equ	0xFF3
  4509                           intcon	equ	0xFF2
  4510                           intcon2	equ	0xFF1
  4511                           intcon3	equ	0xFF0
  4512                           postinc0	equ	0xFEE
  4513                           wreg	equ	0xFE8
  4514                           postdec1	equ	0xFE5
  4515                           fsr1h	equ	0xFE2
  4516                           fsr1l	equ	0xFE1
  4517                           indf2	equ	0xFDF
  4518                           postinc2	equ	0xFDE
  4519                           postdec2	equ	0xFDD
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function _Tmr_TmrBIrqSet *****************
  4525 ;; Defined at:
  4526 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  TmrNumb         1    wreg     unsigned char 
  4529 ;;  Priority        1   29[BANK0 ] enum E7716
  4530 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4546 ;;Total ram usage:        3 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:   11
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_Tmr_TmrBConfig
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text10
  4557  0056F2                     __ptext10:
  4558                           	opt stack 0
  4559  0056F2                     _Tmr_TmrBIrqSet:
  4560                           	opt stack 16
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;incstack = 0
  4564                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4565  0056F2  0100               	movlb	0	; () banked
  4566  0056F4  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4567                           
  4568                           ;tmr_drv.c: 156: switch (TmrNumb)
  4569  0056F6  D01A               	goto	l520
  4570  0056F8                     l521:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4574  0056F8  929E               	bcf	3998,1,c	;volatile
  4575                           
  4576                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4577  0056FA  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4578  0056FC  D002               	bra	u8175
  4579  0056FE  929F               	bcf	3999,1,c	;volatile
  4580  005700  D001               	bra	u8176
  4581  005702                     u8175:
  4582  005702  829F               	bsf	3999,1,c	;volatile
  4583  005704                     u8176:
  4584                           
  4585                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4586  005704  0100               	movlb	0	; () banked
  4587  005706  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4588  005708  D002               	bra	u8185
  4589  00570A  929D               	bcf	3997,1,c	;volatile
  4590  00570C  D001               	bra	u8186
  4591  00570E                     u8185:
  4592  00570E  829D               	bsf	3997,1,c	;volatile
  4593  005710                     u8186:
  4594                           
  4595                           ;tmr_drv.c: 165: break;
  4596  005710  0012               	return	
  4597  005712                     l523:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4601  005712  96A4               	bcf	4004,3,c	;volatile
  4602                           
  4603                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4604  005714  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4605  005716  D002               	bra	u8195
  4606  005718  96A5               	bcf	4005,3,c	;volatile
  4607  00571A  D001               	bra	u8196
  4608  00571C                     u8195:
  4609  00571C  86A5               	bsf	4005,3,c	;volatile
  4610  00571E                     u8196:
  4611                           
  4612                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4613  00571E  0100               	movlb	0	; () banked
  4614  005720  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4615  005722  D002               	bra	u8205
  4616  005724  96A3               	bcf	4003,3,c	;volatile
  4617  005726  D001               	bra	u8206
  4618  005728                     u8205:
  4619  005728  86A3               	bsf	4003,3,c	;volatile
  4620  00572A                     u8206:
  4621                           
  4622                           ;tmr_drv.c: 178: }
  4623                           
  4624                           ;tmr_drv.c: 177: break;
  4625                           
  4626                           ;tmr_drv.c: 176: default:
  4627                           
  4628                           ;tmr_drv.c: 174: break;
  4629  00572A  0012               	return	
  4630  00572C                     l520:
  4631  00572C  0100               	movlb	0	; () banked
  4632  00572E  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4633                           
  4634                           ; Switch size 1, requested type "space"
  4635                           ; Number of cases is 2, Range of values is 2 to 4
  4636                           ; switch strategies available:
  4637                           ; Name         Instructions Cycles
  4638                           ; simple_byte            7     4 (average)
  4639                           ;	Chosen strategy is simple_byte
  4640  005730  0A02               	xorlw	2	; case 2
  4641  005732  B4D8               	btfsc	status,2,c
  4642  005734  D7E1               	goto	l521
  4643  005736  0A06               	xorlw	6	; case 4
  4644  005738  A4D8               	btfss	status,2,c
  4645  00573A  0012               	return	
  4646  00573C  D7EA               	goto	l523
  4647  00573E                     __end_of_Tmr_TmrBIrqSet:
  4648                           	opt stack 0
  4649                           tblptru	equ	0xFF8
  4650                           tblptrh	equ	0xFF7
  4651                           tblptrl	equ	0xFF6
  4652                           tablat	equ	0xFF5
  4653                           prodh	equ	0xFF4
  4654                           prodl	equ	0xFF3
  4655                           intcon	equ	0xFF2
  4656                           intcon2	equ	0xFF1
  4657                           intcon3	equ	0xFF0
  4658                           postinc0	equ	0xFEE
  4659                           wreg	equ	0xFE8
  4660                           postdec1	equ	0xFE5
  4661                           fsr1h	equ	0xFE2
  4662                           fsr1l	equ	0xFE1
  4663                           indf2	equ	0xFDF
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function _Tmr_StartTmr *****************
  4671 ;; Defined at:
  4672 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  TmrNumb         1    wreg     unsigned char 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;Total ram usage:        1 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:   11
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_Tmr_TmrBConfig
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text11
  4701  006016                     __ptext11:
  4702                           	opt stack 0
  4703  006016                     _Tmr_StartTmr:
  4704                           	opt stack 16
  4705                           
  4706                           ;incstack = 0
  4707                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4708  006016  0100               	movlb	0	; () banked
  4709  006018  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4710                           
  4711                           ;tmr_drv.c: 245: switch (TmrNumb)
  4712  00601A  D004               	goto	l538
  4713  00601C                     l539:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4717  00601C  84CA               	bsf	4042,2,c	;volatile
  4718                           
  4719                           ;tmr_drv.c: 250: break;
  4720  00601E  0012               	return	
  4721  006020                     l541:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4725  006020  8476               	bsf	3958,2,c	;volatile
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;tmr_drv.c: 259: }
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;tmr_drv.c: 258: break;
  4732                           
  4733                           ;tmr_drv.c: 257: default:
  4734                           
  4735                           ;tmr_drv.c: 255: break;
  4736  006022  0012               	return	
  4737  006024                     l538:
  4738                           
  4739                           ; BSR set to: 0
  4740  006024  0100               	movlb	0	; () banked
  4741  006026  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4742                           
  4743                           ; Switch size 1, requested type "space"
  4744                           ; Number of cases is 2, Range of values is 2 to 4
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte            7     4 (average)
  4748                           ;	Chosen strategy is simple_byte
  4749  006028  0A02               	xorlw	2	; case 2
  4750  00602A  B4D8               	btfsc	status,2,c
  4751  00602C  D7F7               	goto	l539
  4752  00602E  0A06               	xorlw	6	; case 4
  4753  006030  A4D8               	btfss	status,2,c
  4754  006032  0012               	return	
  4755  006034  D7F5               	goto	l541
  4756  006036                     __end_of_Tmr_StartTmr:
  4757                           	opt stack 0
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           prodh	equ	0xFF4
  4763                           prodl	equ	0xFF3
  4764                           intcon	equ	0xFF2
  4765                           intcon2	equ	0xFF1
  4766                           intcon3	equ	0xFF0
  4767                           postinc0	equ	0xFEE
  4768                           wreg	equ	0xFE8
  4769                           postdec1	equ	0xFE5
  4770                           fsr1h	equ	0xFE2
  4771                           fsr1l	equ	0xFE1
  4772                           indf2	equ	0xFDF
  4773                           postinc2	equ	0xFDE
  4774                           postdec2	equ	0xFDD
  4775                           fsr2h	equ	0xFDA
  4776                           fsr2l	equ	0xFD9
  4777                           status	equ	0xFD8
  4778                           
  4779 ;; *************** function _TmrBInit *****************
  4780 ;; Defined at:
  4781 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  TmrNumb         1    wreg     unsigned char 
  4784 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4785 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4800 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4801 ;;Total ram usage:        4 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:   11
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_Tmr_TmrBConfig
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text12
  4812  004814                     __ptext12:
  4813                           	opt stack 0
  4814  004814                     _TmrBInit:
  4815                           	opt stack 16
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;incstack = 0
  4819                           ;TmrBInit@TmrNumb stored from wreg
  4820  004814  0100               	movlb	0	; () banked
  4821  004816  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4822                           
  4823                           ;tmr_drv.c: 75: switch (TmrNumb)
  4824  004818  D03F               	goto	l500
  4825  00481A                     l503:
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4829  00481A  90CA               	bcf	4042,0,c	;volatile
  4830  00481C  D001               	goto	L1
  4831  00481E                     l505:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4835  00481E  80CA               	bsf	4042,0,c	;volatile
  4836  004820                     L1:
  4837                           
  4838                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4839  004820  92CA               	bcf	4042,1,c	;volatile
  4840                           
  4841                           ;tmr_drv.c: 91: break;
  4842  004822  D00E               	goto	l504
  4843  004824                     l506:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4847  004824  80CA               	bsf	4042,0,c	;volatile
  4848                           
  4849                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4850  004826  82CA               	bsf	4042,1,c	;volatile
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;tmr_drv.c: 100: }
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;tmr_drv.c: 99: break;
  4857                           
  4858                           ;tmr_drv.c: 98: default:
  4859                           
  4860                           ;tmr_drv.c: 96: break;
  4861  004828  D00B               	goto	l504
  4862  00482A                     
  4863                           ; BSR set to: 0
  4864  00482A  0100               	movlb	0	; () banked
  4865  00482C  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4866                           
  4867                           ; Switch size 1, requested type "space"
  4868                           ; Number of cases is 3, Range of values is 1 to 16
  4869                           ; switch strategies available:
  4870                           ; Name         Instructions Cycles
  4871                           ; simple_byte           10     6 (average)
  4872                           ;	Chosen strategy is simple_byte
  4873  00482E  0A01               	xorlw	1	; case 1
  4874  004830  B4D8               	btfsc	status,2,c
  4875  004832  D7F3               	goto	l503
  4876  004834  0A05               	xorlw	5	; case 4
  4877  004836  B4D8               	btfsc	status,2,c
  4878  004838  D7F2               	goto	l505
  4879  00483A  0A14               	xorlw	20	; case 16
  4880  00483C  B4D8               	btfsc	status,2,c
  4881  00483E  D7F2               	goto	l506
  4882  004840                     l504:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4886                           
  4887                           ; BSR set to: 0
  4888  004840  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4889  004844  0EFF               	movlw	255
  4890  004846  277F               	addwf	??_TmrBInit& (0+255),f,b
  4891  004848  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4892  00484A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4893  00484C  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4894  00484E  50CA               	movf	4042,w,c	;volatile
  4895  004850  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4896  004852  0B87               	andlw	-121
  4897  004854  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4898  004856  6ECA               	movwf	4042,c	;volatile
  4899                           
  4900                           ;tmr_drv.c: 104: break;
  4901  004858  0012               	return	
  4902  00485A                     l511:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4906  00485A  9076               	bcf	3958,0,c	;volatile
  4907  00485C  D001               	goto	L2
  4908  00485E                     l513:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4912  00485E  8076               	bsf	3958,0,c	;volatile
  4913  004860                     L2:
  4914                           
  4915                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4916  004860  9276               	bcf	3958,1,c	;volatile
  4917                           
  4918                           ;tmr_drv.c: 120: break;
  4919  004862  D00D               	goto	l512
  4920  004864                     l514:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4924  004864  8076               	bsf	3958,0,c	;volatile
  4925                           
  4926                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4927  004866  8276               	bsf	3958,1,c	;volatile
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;tmr_drv.c: 129: }
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;tmr_drv.c: 128: break;
  4934                           
  4935                           ;tmr_drv.c: 127: default:
  4936                           
  4937                           ;tmr_drv.c: 125: break;
  4938  004868  D00A               	goto	l512
  4939  00486A                     
  4940                           ; BSR set to: 0
  4941                           
  4942                           ; BSR set to: 0
  4943  00486A  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4944                           
  4945                           ; Switch size 1, requested type "space"
  4946                           ; Number of cases is 3, Range of values is 1 to 16
  4947                           ; switch strategies available:
  4948                           ; Name         Instructions Cycles
  4949                           ; simple_byte           10     6 (average)
  4950                           ;	Chosen strategy is simple_byte
  4951  00486C  0A01               	xorlw	1	; case 1
  4952  00486E  B4D8               	btfsc	status,2,c
  4953  004870  D7F4               	goto	l511
  4954  004872  0A05               	xorlw	5	; case 4
  4955  004874  B4D8               	btfsc	status,2,c
  4956  004876  D7F3               	goto	l513
  4957  004878  0A14               	xorlw	20	; case 16
  4958  00487A  B4D8               	btfsc	status,2,c
  4959  00487C  D7F3               	goto	l514
  4960  00487E                     l512:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4964                           
  4965                           ; BSR set to: 0
  4966  00487E  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4967  004882  0EFF               	movlw	255
  4968  004884  277F               	addwf	??_TmrBInit& (0+255),f,b
  4969  004886  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4970  004888  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4971  00488A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4972  00488C  5076               	movf	3958,w,c	;volatile
  4973  00488E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4974  004890  0B87               	andlw	-121
  4975  004892  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4976  004894  6E76               	movwf	3958,c	;volatile
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;tmr_drv.c: 137: }
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;tmr_drv.c: 136: break;
  4983                           
  4984                           ;tmr_drv.c: 135: default:
  4985                           
  4986                           ;tmr_drv.c: 133: break;
  4987  004896  0012               	return	
  4988  004898                     l500:
  4989                           
  4990                           ; BSR set to: 0
  4991  004898  0100               	movlb	0	; () banked
  4992  00489A  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4993                           
  4994                           ; Switch size 1, requested type "space"
  4995                           ; Number of cases is 2, Range of values is 2 to 4
  4996                           ; switch strategies available:
  4997                           ; Name         Instructions Cycles
  4998                           ; simple_byte            7     4 (average)
  4999                           ;	Chosen strategy is simple_byte
  5000  00489C  0A02               	xorlw	2	; case 2
  5001  00489E  B4D8               	btfsc	status,2,c
  5002  0048A0  D7C4               	goto	l502
  5003  0048A2  0A06               	xorlw	6	; case 4
  5004  0048A4  A4D8               	btfss	status,2,c
  5005  0048A6  0012               	return	
  5006  0048A8  D7E0               	goto	l510
  5007  0048AA                     __end_of_TmrBInit:
  5008                           	opt stack 0
  5009                           tblptru	equ	0xFF8
  5010                           tblptrh	equ	0xFF7
  5011                           tblptrl	equ	0xFF6
  5012                           tablat	equ	0xFF5
  5013                           prodh	equ	0xFF4
  5014                           prodl	equ	0xFF3
  5015                           intcon	equ	0xFF2
  5016                           intcon2	equ	0xFF1
  5017                           intcon3	equ	0xFF0
  5018                           postinc0	equ	0xFEE
  5019                           wreg	equ	0xFE8
  5020                           postdec1	equ	0xFE5
  5021                           fsr1h	equ	0xFE2
  5022                           fsr1l	equ	0xFE1
  5023                           indf2	equ	0xFDF
  5024                           postinc2	equ	0xFDE
  5025                           postdec2	equ	0xFDD
  5026                           fsr2h	equ	0xFDA
  5027                           fsr2l	equ	0xFD9
  5028                           status	equ	0xFD8
  5029                           
  5030 ;; *************** function _Sch_MainScheduler *****************
  5031 ;; Defined at:
  5032 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:   22
  5053 ;; This function calls:
  5054 ;;		_InitializeTasks
  5055 ;;		_ScheduleTasks
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text13
  5062  006074                     __ptext13:
  5063                           	opt stack 0
  5064  006074                     _Sch_MainScheduler:
  5065                           	opt stack 8
  5066                           
  5067                           ;os_sched.c: 178: InitializeTasks();
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;incstack = 0
  5071  006074  EC41  F027         	call	_InitializeTasks	;wreg free
  5072                           
  5073                           ;os_sched.c: 180: SystemState = RunningState;
  5074  006078  0E01               	movlw	1
  5075  00607A  0100               	movlb	0	; () banked
  5076  00607C  6FD4               	movwf	_SystemState& (0+255),b
  5077  00607E                     
  5078                           ;os_sched.c: 188: {
  5079                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5080                           
  5081                           ; BSR set to: 0
  5082  00607E  0102               	movlb	2	; () banked
  5083  006080  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5084  006082  A4D8               	btfss	status,2,c
  5085  006084  D7FC               	goto	l790
  5086                           
  5087                           ; BSR set to: 2
  5088                           ;os_sched.c: 191: {
  5089                           ;os_sched.c: 196: ScheduleTasks();
  5090  006086  EC0C  F017         	call	_ScheduleTasks	;wreg free
  5091                           
  5092                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5093  00608A  0E01               	movlw	1
  5094  00608C  0102               	movlb	2	; () banked
  5095  00608E  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5096                           
  5097                           ; BSR set to: 2
  5098                           
  5099                           ; BSR set to: 2
  5100  006090  D7F6               	goto	l790
  5101  006092                     __end_of_Sch_MainScheduler:
  5102                           	opt stack 0
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           intcon	equ	0xFF2
  5110                           intcon2	equ	0xFF1
  5111                           intcon3	equ	0xFF0
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           postdec1	equ	0xFE5
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _ScheduleTasks *****************
  5125 ;; Defined at:
  5126 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  ActiveTaskIn    1    4[BANK3 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5141 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
  5144 ;;Total ram usage:        5 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:   21
  5147 ;; This function calls:
  5148 ;;		_I2cSlv_MainTask
  5149 ;;		_Led_MainTask
  5150 ;;		_MdmHttp_MainTask
  5151 ;;		_Mdm_DrvMainFn
  5152 ;;		_Mdm_MainTask
  5153 ;;		_MyApp_Task
  5154 ;;		_Rtcm_MainTask
  5155 ;;		_Term_MainTask
  5156 ;;		_UsbDevice_MainTask
  5157 ;;		_Wdg_MainTask
  5158 ;; This function is called by:
  5159 ;;		_Sch_MainScheduler
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text14
  5164  002E18                     __ptext14:
  5165                           	opt stack 0
  5166  002E18                     _ScheduleTasks:
  5167                           	opt stack 8
  5168                           
  5169                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5170                           
  5171                           ; BSR set to: 2
  5172                           ;incstack = 0
  5173  002E18  0E00               	movlw	0
  5174  002E1A  0103               	movlb	3	; () banked
  5175  002E1C  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5176                           
  5177                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5178  002E1E  0E00               	movlw	0
  5179  002E20  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5180  002E22                     l15093:
  5181                           
  5182                           ; BSR set to: 3
  5183  002E22  0E3D               	movlw	low _TaskNumber
  5184  002E24  6EF6               	movwf	tblptrl,c
  5185  002E26                     	if	1	;There is more than 1 active tblptr byte
  5186  002E26  0EFC               	movlw	high _TaskNumber
  5187  002E28  6EF7               	movwf	tblptrh,c
  5188  002E2A                     	endif
  5189  002E2A                     	if	0	;There are less than 3 active tblptr bytes
  5190  002E2A                     	endif
  5191  002E2A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5192  002E2C  6FFB               	movwf	??_ScheduleTasks& (0+255),b
  5193  002E2E  6BFC               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5194  002E30  0009               	tblrd		*+
  5195  002E32  50F5               	movf	tablat,w,c
  5196  002E34  5DFB               	subwf	??_ScheduleTasks& (0+255),w,b
  5197  002E36  0009               	tblrd		*+
  5198  002E38  50F5               	movf	tablat,w,c
  5199  002E3A  59FC               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5200  002E3C  B0D8               	btfsc	status,0,c
  5201  002E3E  0012               	return	
  5202                           
  5203                           ; BSR set to: 3
  5204                           ;os_sched.c: 106: {
  5205                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5206                           
  5207                           ; BSR set to: 3
  5208                           
  5209                           ; BSR set to: 3
  5210  002E40  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5211  002E42  0D08               	mullw	8
  5212  002E44  0E03               	movlw	3
  5213  002E46  26F3               	addwf	prodl,f,c
  5214  002E48  0E00               	movlw	0
  5215  002E4A  22F4               	addwfc	prodh,f,c
  5216  002E4C  0EA4               	movlw	low _TaskTable
  5217  002E4E  24F3               	addwf	prodl,w,c
  5218  002E50  6ED9               	movwf	fsr2l,c
  5219  002E52  0E05               	movlw	high _TaskTable
  5220  002E54  20F4               	addwfc	prodh,w,c
  5221  002E56  6EDA               	movwf	fsr2h,c
  5222  002E58  2ADE               	incf	postinc2,f,c
  5223  002E5A  0E00               	movlw	0
  5224  002E5C  22DD               	addwfc	postdec2,f,c
  5225                           
  5226                           ; BSR set to: 3
  5227                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5228  002E5E  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5229  002E60  0D08               	mullw	8
  5230  002E62  0E05               	movlw	5
  5231  002E64  26F3               	addwf	prodl,f,c
  5232  002E66  0E00               	movlw	0
  5233  002E68  22F4               	addwfc	prodh,f,c
  5234  002E6A  0EA4               	movlw	low _TaskTable
  5235  002E6C  24F3               	addwf	prodl,w,c
  5236  002E6E  6ED9               	movwf	fsr2l,c
  5237  002E70  0E05               	movlw	high _TaskTable
  5238  002E72  20F4               	addwfc	prodh,w,c
  5239  002E74  6EDA               	movwf	fsr2h,c
  5240  002E76  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5241  002E78  0D08               	mullw	8
  5242  002E7A  0E03               	movlw	3
  5243  002E7C  26F3               	addwf	prodl,f,c
  5244  002E7E  0E00               	movlw	0
  5245  002E80  22F4               	addwfc	prodh,f,c
  5246  002E82  0EA4               	movlw	low _TaskTable
  5247  002E84  24F3               	addwf	prodl,w,c
  5248  002E86  6EE1               	movwf	fsr1l,c
  5249  002E88  0E05               	movlw	high _TaskTable
  5250  002E8A  20F4               	addwfc	prodh,w,c
  5251  002E8C  6EE2               	movwf	fsr1h,c
  5252  002E8E  50DE               	movf	postinc2,w,c
  5253  002E90  5CE6               	subwf	postinc1,w,c
  5254  002E92  50DE               	movf	postinc2,w,c
  5255  002E94  58E6               	subwfb	postinc1,w,c
  5256  002E96  A0D8               	btfss	status,0,c
  5257  002E98  D04E               	goto	l775
  5258                           
  5259                           ; BSR set to: 3
  5260                           ;os_sched.c: 111: {
  5261                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5262  002E9A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5263  002E9C  0D08               	mullw	8
  5264  002E9E  0E03               	movlw	3
  5265  002EA0  26F3               	addwf	prodl,f,c
  5266  002EA2  0E00               	movlw	0
  5267  002EA4  22F4               	addwfc	prodh,f,c
  5268  002EA6  0EA4               	movlw	low _TaskTable
  5269  002EA8  24F3               	addwf	prodl,w,c
  5270  002EAA  6ED9               	movwf	fsr2l,c
  5271  002EAC  0E05               	movlw	high _TaskTable
  5272  002EAE  20F4               	addwfc	prodh,w,c
  5273  002EB0  6EDA               	movwf	fsr2h,c
  5274  002EB2  0E00               	movlw	0
  5275  002EB4  6EDE               	movwf	postinc2,c
  5276  002EB6  0E00               	movlw	0
  5277  002EB8  6EDD               	movwf	postdec2,c
  5278                           
  5279                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5280  002EBA  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5281  002EBC  0D08               	mullw	8
  5282  002EBE  0E02               	movlw	2
  5283  002EC0  26F3               	addwf	prodl,f,c
  5284  002EC2  0E00               	movlw	0
  5285  002EC4  22F4               	addwfc	prodh,f,c
  5286  002EC6  0EA4               	movlw	low _TaskTable
  5287  002EC8  24F3               	addwf	prodl,w,c
  5288  002ECA  6ED9               	movwf	fsr2l,c
  5289  002ECC  0E05               	movlw	high _TaskTable
  5290  002ECE  20F4               	addwfc	prodh,w,c
  5291  002ED0  6EDA               	movwf	fsr2h,c
  5292  002ED2  0E01               	movlw	1
  5293  002ED4  6EDF               	movwf	indf2,c
  5294                           
  5295                           ; BSR set to: 3
  5296                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5297  002ED6  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5298  002ED8  0D08               	mullw	8
  5299  002EDA  0EA4               	movlw	low _TaskTable
  5300  002EDC  24F3               	addwf	prodl,w,c
  5301  002EDE  6ED9               	movwf	fsr2l,c
  5302  002EE0  0E05               	movlw	high _TaskTable
  5303  002EE2  20F4               	addwfc	prodh,w,c
  5304  002EE4  6EDA               	movwf	fsr2h,c
  5305  002EE6  D801               	call	u14778
  5306  002EE8  D017               	goto	u14779
  5307  002EEA                     u14778:
  5308  002EEA  0005               	push	
  5309  002EEC  6EFA               	movwf	pclath,c
  5310  002EEE  50DE               	movf	postinc2,w,c
  5311  002EF0  6EFD               	movwf	tosl,c
  5312  002EF2  50DE               	movf	postinc2,w,c
  5313  002EF4  6EFE               	movwf	tosh,c
  5314  002EF6  50F8               	movf	tblptru,w,c
  5315  002EF8  6EFF               	movwf	tosu,c
  5316  002EFA  50FA               	movf	pclath,w,c
  5317  002EFC  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5318  002EFE  0D08               	mullw	8
  5319  002F00  0E07               	movlw	7
  5320  002F02  26F3               	addwf	prodl,f,c
  5321  002F04  0E00               	movlw	0
  5322  002F06  22F4               	addwfc	prodh,f,c
  5323  002F08  0EA4               	movlw	low _TaskTable
  5324  002F0A  24F3               	addwf	prodl,w,c
  5325  002F0C  6ED9               	movwf	fsr2l,c
  5326  002F0E  0E05               	movlw	high _TaskTable
  5327  002F10  20F4               	addwfc	prodh,w,c
  5328  002F12  6EDA               	movwf	fsr2h,c
  5329  002F14  50DF               	movf	indf2,w,c
  5330  002F16  0012               	return		;indir
  5331  002F18                     u14779:
  5332                           
  5333                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5334  002F18  0103               	movlb	3	; () banked
  5335  002F1A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5336  002F1C  0D08               	mullw	8
  5337  002F1E  0E02               	movlw	2
  5338  002F20  26F3               	addwf	prodl,f,c
  5339  002F22  0E00               	movlw	0
  5340  002F24  22F4               	addwfc	prodh,f,c
  5341  002F26  0EA4               	movlw	low _TaskTable
  5342  002F28  24F3               	addwf	prodl,w,c
  5343  002F2A  6ED9               	movwf	fsr2l,c
  5344  002F2C  0E05               	movlw	high _TaskTable
  5345  002F2E  20F4               	addwfc	prodh,w,c
  5346  002F30  6EDA               	movwf	fsr2h,c
  5347  002F32  0E00               	movlw	0
  5348  002F34  6EDF               	movwf	indf2,c
  5349  002F36                     l775:
  5350                           
  5351                           ; BSR set to: 3
  5352                           
  5353                           ; BSR set to: 3
  5354                           
  5355                           ;os_sched.c: 117: else
  5356                           ;os_sched.c: 118: {
  5357                           
  5358                           ; BSR set to: 3
  5359  002F36  2BFF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5360  002F38  D774               	goto	l15093
  5361  002F3A                     __end_of_ScheduleTasks:
  5362                           	opt stack 0
  5363                           tosu	equ	0xFFF
  5364                           tosh	equ	0xFFE
  5365                           tosl	equ	0xFFD
  5366                           pclath	equ	0xFFA
  5367                           tblptru	equ	0xFF8
  5368                           tblptrh	equ	0xFF7
  5369                           tblptrl	equ	0xFF6
  5370                           tablat	equ	0xFF5
  5371                           prodh	equ	0xFF4
  5372                           prodl	equ	0xFF3
  5373                           intcon	equ	0xFF2
  5374                           intcon2	equ	0xFF1
  5375                           intcon3	equ	0xFF0
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           postinc1	equ	0xFE6
  5379                           postdec1	equ	0xFE5
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           indf2	equ	0xFDF
  5383                           postinc2	equ	0xFDE
  5384                           postdec2	equ	0xFDD
  5385                           fsr2h	equ	0xFDA
  5386                           fsr2l	equ	0xFD9
  5387                           status	equ	0xFD8
  5388                           
  5389 ;; *************** function _InitializeTasks *****************
  5390 ;; Defined at:
  5391 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  ActiveTaskIn    1    2[BANK3 ] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5408 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
  5409 ;;Total ram usage:        3 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:   21
  5412 ;; This function calls:
  5413 ;;		_I2cSlv_MainTask
  5414 ;;		_Led_MainTask
  5415 ;;		_MdmHttp_MainTask
  5416 ;;		_Mdm_DrvMainFn
  5417 ;;		_Mdm_MainTask
  5418 ;;		_MyApp_Task
  5419 ;;		_Rtcm_MainTask
  5420 ;;		_Term_MainTask
  5421 ;;		_UsbDevice_MainTask
  5422 ;;		_Wdg_MainTask
  5423 ;; This function is called by:
  5424 ;;		_Sch_MainScheduler
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text15
  5429  004E82                     __ptext15:
  5430                           	opt stack 0
  5431  004E82                     _InitializeTasks:
  5432                           	opt stack 8
  5433                           
  5434                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5435                           
  5436                           ; BSR set to: 3
  5437                           ;incstack = 0
  5438  004E82  0E00               	movlw	0
  5439  004E84  0103               	movlb	3	; () banked
  5440  004E86  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5441                           
  5442                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5443  004E88  0E00               	movlw	0
  5444  004E8A  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5445  004E8C                     l15081:
  5446                           
  5447                           ; BSR set to: 3
  5448  004E8C  0E3D               	movlw	low _TaskNumber
  5449  004E8E  6EF6               	movwf	tblptrl,c
  5450  004E90                     	if	1	;There is more than 1 active tblptr byte
  5451  004E90  0EFC               	movlw	high _TaskNumber
  5452  004E92  6EF7               	movwf	tblptrh,c
  5453  004E94                     	endif
  5454  004E94                     	if	0	;There are less than 3 active tblptr bytes
  5455  004E94                     	endif
  5456  004E94  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5457  004E96  6FFB               	movwf	??_InitializeTasks& (0+255),b
  5458  004E98  6BFC               	clrf	(??_InitializeTasks+1)& (0+255),b
  5459  004E9A  0009               	tblrd		*+
  5460  004E9C  50F5               	movf	tablat,w,c
  5461  004E9E  5DFB               	subwf	??_InitializeTasks& (0+255),w,b
  5462  004EA0  0009               	tblrd		*+
  5463  004EA2  50F5               	movf	tablat,w,c
  5464  004EA4  59FC               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5465  004EA6  B0D8               	btfsc	status,0,c
  5466  004EA8  0012               	return	
  5467                           
  5468                           ; BSR set to: 3
  5469                           ;os_sched.c: 86: {
  5470                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5471                           
  5472                           ; BSR set to: 3
  5473                           
  5474                           ; BSR set to: 3
  5475  004EAA  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5476  004EAC  0D08               	mullw	8
  5477  004EAE  0EA4               	movlw	low _TaskTable
  5478  004EB0  24F3               	addwf	prodl,w,c
  5479  004EB2  6ED9               	movwf	fsr2l,c
  5480  004EB4  0E05               	movlw	high _TaskTable
  5481  004EB6  20F4               	addwfc	prodh,w,c
  5482  004EB8  6EDA               	movwf	fsr2h,c
  5483  004EBA  D801               	call	u14738
  5484  004EBC  D017               	goto	u14739
  5485  004EBE                     u14738:
  5486  004EBE  0005               	push	
  5487  004EC0  6EFA               	movwf	pclath,c
  5488  004EC2  50DE               	movf	postinc2,w,c
  5489  004EC4  6EFD               	movwf	tosl,c
  5490  004EC6  50DE               	movf	postinc2,w,c
  5491  004EC8  6EFE               	movwf	tosh,c
  5492  004ECA  50F8               	movf	tblptru,w,c
  5493  004ECC  6EFF               	movwf	tosu,c
  5494  004ECE  50FA               	movf	pclath,w,c
  5495  004ED0  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5496  004ED2  0D08               	mullw	8
  5497  004ED4  0E07               	movlw	7
  5498  004ED6  26F3               	addwf	prodl,f,c
  5499  004ED8  0E00               	movlw	0
  5500  004EDA  22F4               	addwfc	prodh,f,c
  5501  004EDC  0EA4               	movlw	low _TaskTable
  5502  004EDE  24F3               	addwf	prodl,w,c
  5503  004EE0  6ED9               	movwf	fsr2l,c
  5504  004EE2  0E05               	movlw	high _TaskTable
  5505  004EE4  20F4               	addwfc	prodh,w,c
  5506  004EE6  6EDA               	movwf	fsr2h,c
  5507  004EE8  50DF               	movf	indf2,w,c
  5508  004EEA  0012               	return		;indir
  5509  004EEC                     u14739:
  5510  004EEC  0103               	movlb	3	; () banked
  5511  004EEE  2BFD               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5512  004EF0  D7CD               	goto	l15081
  5513  004EF2                     __end_of_InitializeTasks:
  5514                           	opt stack 0
  5515                           tosu	equ	0xFFF
  5516                           tosh	equ	0xFFE
  5517                           tosl	equ	0xFFD
  5518                           pclath	equ	0xFFA
  5519                           tblptru	equ	0xFF8
  5520                           tblptrh	equ	0xFF7
  5521                           tblptrl	equ	0xFF6
  5522                           tablat	equ	0xFF5
  5523                           prodh	equ	0xFF4
  5524                           prodl	equ	0xFF3
  5525                           intcon	equ	0xFF2
  5526                           intcon2	equ	0xFF1
  5527                           intcon3	equ	0xFF0
  5528                           postinc0	equ	0xFEE
  5529                           wreg	equ	0xFE8
  5530                           postinc1	equ	0xFE6
  5531                           postdec1	equ	0xFE5
  5532                           fsr1h	equ	0xFE2
  5533                           fsr1l	equ	0xFE1
  5534                           indf2	equ	0xFDF
  5535                           postinc2	equ	0xFDE
  5536                           postdec2	equ	0xFDD
  5537                           fsr2h	equ	0xFDA
  5538                           fsr2l	equ	0xFD9
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function _MyApp_Task *****************
  5542 ;; Defined at:
  5543 ;;		line 167 in file "../Source/c/04_App/app.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  Options         1    wreg     unsigned char 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  Options         1    0[COMRAM] unsigned char 
  5548 ;;  smsText        20    0        unsigned char [20]
  5549 ;;  cmpString       3    0[BANK1 ] unsigned char [3]
  5550 ;;  memoryResult    1    3[BANK1 ] enum E8114
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  1    wreg      void 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5561 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5563 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5564 ;;Total ram usage:        4 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:   17
  5567 ;; This function calls:
  5568 ;;		_ClearBuffer
  5569 ;;		_Eeprom_Read
  5570 ;;		_GetCallerNumber
  5571 ;;		_Led_SetLedBlinkTime
  5572 ;;		_Mdm_HangPhoneCall
  5573 ;;		_Mdm_IsRinging
  5574 ;;		_Mdm_IsSmsReceived
  5575 ;;		_Mdm_RequestSmsData
  5576 ;;		_StringCompare
  5577 ;;		_blinkForSeconds
  5578 ;;		_initGprsModem
  5579 ;; This function is called by:
  5580 ;;		_InitializeTasks
  5581 ;;		_ScheduleTasks
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text16
  5586  002F3A                     __ptext16:
  5587                           	opt stack 0
  5588  002F3A                     _MyApp_Task:
  5589                           	opt stack 11
  5590                           
  5591                           ;app.c: 169: static UINT8 phone[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5', '6', '
      +                          7', '8', '9', '\0'};
  5592                           ;app.c: 171: static uint16_t blinkTicks = 0xFFFF;
  5593                           ;app.c: 172: static uint8_t blinkSeconds = 0;
  5594                           ;app.c: 174: uint8_t smsText[((UINT8)(20))];
  5595                           ;app.c: 175: uint8_t cmpString[] = {'c', 'a', 't'};
  5596                           
  5597                           ; BSR set to: 3
  5598                           ;incstack = 0
  5599  002F3A  C3C8  F100         	movff	MyApp_Task@F9007,MyApp_Task@cmpString
  5600  002F3E  C3C9  F101         	movff	MyApp_Task@F9007+1,MyApp_Task@cmpString+1
  5601  002F42  C3CA  F102         	movff	MyApp_Task@F9007+2,MyApp_Task@cmpString+2
  5602                           
  5603                           ;app.c: 177: static uint8_t memoryFlag = 1;
  5604                           ;app.c: 178: I2cOpStsType memoryResult = OP_COMPLETE;
  5605  002F46  0E01               	movlw	1
  5606  002F48  0101               	movlb	1	; () banked
  5607  002F4A  6F03               	movwf	MyApp_Task@memoryResult& (0+255),b
  5608                           
  5609                           ;app.c: 180: switch (SystemState)
  5610  002F4C  D07A               	goto	l2581
  5611  002F4E                     
  5612                           ;app.c: 185: Led_SetLedBlinkTime(1u,100,900);
  5613                           
  5614                           ; BSR set to: 1
  5615  002F4E  0E00               	movlw	0
  5616  002F50  0100               	movlb	0	; () banked
  5617  002F52  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5618  002F54  0E64               	movlw	100
  5619  002F56  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5620  002F58  0E03               	movlw	3
  5621  002F5A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5622  002F5C  0E84               	movlw	132
  5623  002F5E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5624  002F60  0E01               	movlw	1
  5625  002F62  EC0C  F02A         	call	_Led_SetLedBlinkTime
  5626                           
  5627                           ;app.c: 186: break;
  5628  002F66  0012               	return	
  5629  002F68                     
  5630                           ;app.c: 190: if (initGprsModem())
  5631  002F68  EC6F  F023         	call	_initGprsModem	;wreg free
  5632  002F6C  0900               	iorlw	0
  5633  002F6E  B4D8               	btfsc	status,2,c
  5634  002F70  0012               	return	
  5635                           
  5636                           ;app.c: 191: {
  5637                           ;app.c: 193: if (Mdm_IsRinging())
  5638  002F72  EC81  F02F         	call	_Mdm_IsRinging	;wreg free
  5639  002F76  0900               	iorlw	0
  5640  002F78  B4D8               	btfsc	status,2,c
  5641  002F7A  D025               	goto	l2586
  5642                           
  5643                           ;app.c: 194: {
  5644                           ;app.c: 195: blinkTicks = 0;
  5645  002F7C  0E00               	movlw	0
  5646  002F7E  0103               	movlb	3	; () banked
  5647  002F80  6FFA               	movwf	(MyApp_Task@blinkTicks+1)& (0+255),b
  5648  002F82  0E00               	movlw	0
  5649  002F84  6FF9               	movwf	MyApp_Task@blinkTicks& (0+255),b
  5650                           
  5651                           ; BSR set to: 3
  5652                           ;app.c: 196: if (StringCompare(phone, GetCallerNumber(), 14))
  5653  002F86  0EC9               	movlw	low MyApp_Task@phone
  5654  002F88  0100               	movlb	0	; () banked
  5655  002F8A  6F85               	movwf	StringCompare@String1& (0+255),b
  5656  002F8C  0E04               	movlw	high MyApp_Task@phone
  5657  002F8E  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5658  002F90  ECE6  F02D         	call	_GetCallerNumber	;wreg free
  5659  002F94  C083  F087         	movff	?_GetCallerNumber,StringCompare@String2
  5660  002F98  C084  F088         	movff	?_GetCallerNumber+1,StringCompare@String2+1
  5661  002F9C  0E00               	movlw	0
  5662  002F9E  0100               	movlb	0	; () banked
  5663  002FA0  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5664  002FA2  0E0E               	movlw	14
  5665  002FA4  6F89               	movwf	StringCompare@Len& (0+255),b
  5666  002FA6  EC8A  F02A         	call	_StringCompare	;wreg free
  5667  002FAA  0900               	iorlw	0
  5668  002FAC  B4D8               	btfsc	status,2,c
  5669  002FAE  D003               	goto	l2587
  5670                           
  5671                           ;app.c: 197: {
  5672                           ;app.c: 198: blinkSeconds = 5;
  5673  002FB0  0E05               	movlw	5
  5674  002FB2  0101               	movlb	1	; () banked
  5675  002FB4  6FD5               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5676  002FB6                     l2587:
  5677                           
  5678                           ;app.c: 199: }
  5679                           ;app.c: 200: blinkSeconds = 3;
  5680  002FB6  0E03               	movlw	3
  5681  002FB8  0101               	movlb	1	; () banked
  5682  002FBA  6FD5               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;app.c: 201: Mdm_HangPhoneCall();
  5686  002FBC  ECEE  F030         	call	_Mdm_HangPhoneCall	;wreg free
  5687                           
  5688                           ;app.c: 202: memoryFlag = 1;
  5689  002FC0  0E01               	movlw	1
  5690  002FC2  0100               	movlb	0	; () banked
  5691  002FC4  6FE2               	movwf	MyApp_Task@memoryFlag& (0+255),b
  5692  002FC6                     l2586:
  5693                           
  5694                           ;app.c: 203: }
  5695                           ;app.c: 204: if (Mdm_IsSmsReceived())
  5696                           
  5697                           ; BSR set to: 0
  5698  002FC6  EC6F  F02F         	call	_Mdm_IsSmsReceived	;wreg free
  5699  002FCA  0900               	iorlw	0
  5700  002FCC  A4D8               	btfss	status,2,c
  5701                           
  5702                           ;app.c: 205: {
  5703                           ;app.c: 206: Mdm_RequestSmsData();
  5704  002FCE  EC10  F031         	call	_Mdm_RequestSmsData	;wreg free
  5705                           
  5706                           ;app.c: 207: }
  5707                           ;app.c: 224: blinkForSeconds(blinkSeconds, &blinkTicks);
  5708  002FD2  0EF9               	movlw	low MyApp_Task@blinkTicks
  5709  002FD4  0100               	movlb	0	; () banked
  5710  002FD6  6F93               	movwf	blinkForSeconds@blinkTicks& (0+255),b
  5711  002FD8  0E03               	movlw	high MyApp_Task@blinkTicks
  5712  002FDA  6F94               	movwf	(blinkForSeconds@blinkTicks+1)& (0+255),b
  5713  002FDC  0101               	movlb	1	; () banked
  5714  002FDE  51D5               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5715  002FE0  ECAC  F02D         	call	_blinkForSeconds
  5716                           
  5717                           ;app.c: 226: if (memoryFlag == 1)
  5718  002FE4  0100               	movlb	0	; () banked
  5719  002FE6  05E2               	decf	MyApp_Task@memoryFlag& (0+255),w,b
  5720  002FE8  A4D8               	btfss	status,2,c
  5721  002FEA  D00D               	goto	l2589
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;app.c: 227: {
  5725                           ;app.c: 229: ClearBuffer(phone, 14);
  5726  002FEC  0EC9               	movlw	low MyApp_Task@phone
  5727  002FEE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5728  002FF0  0E04               	movlw	high MyApp_Task@phone
  5729  002FF2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5730  002FF4  0E00               	movlw	0
  5731  002FF6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5732  002FF8  0E0E               	movlw	14
  5733  002FFA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5734  002FFC  EC01  F02E         	call	_ClearBuffer	;wreg free
  5735                           
  5736                           ;app.c: 230: memoryFlag++;
  5737  003000  0100               	movlb	0	; () banked
  5738  003002  2BE2               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5739                           
  5740                           ;app.c: 231: }
  5741  003004  0012               	return	
  5742  003006                     l2589:
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;app.c: 232: else if (memoryFlag >= 2 && memoryFlag <= 250)
  5746                           
  5747                           ; BSR set to: 0
  5748  003006  0E01               	movlw	1
  5749  003008  65E2               	cpfsgt	MyApp_Task@memoryFlag& (0+255),b
  5750  00300A  0012               	return	
  5751                           
  5752                           ; BSR set to: 0
  5753  00300C  0EFB               	movlw	251
  5754  00300E  61E2               	cpfslt	MyApp_Task@memoryFlag& (0+255),b
  5755  003010  0012               	return	
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;app.c: 233: {
  5759                           ;app.c: 234: if (memoryFlag == 100)
  5760  003012  0E64               	movlw	100
  5761  003014  19E2               	xorwf	MyApp_Task@memoryFlag& (0+255),w,b
  5762  003016  A4D8               	btfss	status,2,c
  5763  003018  D012               	goto	l2592
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;app.c: 235: {
  5767                           ;app.c: 236: memoryResult = Eeprom_Read(0, phone, 13);
  5768  00301A  0EC9               	movlw	low MyApp_Task@phone
  5769  00301C  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
  5770  00301E  0E04               	movlw	high MyApp_Task@phone
  5771  003020  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
  5772  003022  0E0D               	movlw	13
  5773  003024  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
  5774  003026  0E00               	movlw	0
  5775  003028  EC36  F02A         	call	_Eeprom_Read
  5776  00302C  0101               	movlb	1	; () banked
  5777  00302E  6F03               	movwf	MyApp_Task@memoryResult& (0+255),b
  5778                           
  5779                           ; BSR set to: 1
  5780                           ;app.c: 237: if (memoryResult != OP_PENDING)
  5781  003030  0E02               	movlw	2
  5782  003032  1903               	xorwf	MyApp_Task@memoryResult& (0+255),w,b
  5783  003034  B4D8               	btfsc	status,2,c
  5784  003036  0012               	return	
  5785                           
  5786                           ; BSR set to: 1
  5787                           ;app.c: 238: {
  5788                           ;app.c: 239: memoryFlag++;
  5789  003038  0100               	movlb	0	; () banked
  5790  00303A  2BE2               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;app.c: 240: }
  5794                           ;app.c: 241: }
  5795  00303C  0012               	return	
  5796  00303E                     l2592:
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;app.c: 242: else
  5800                           ;app.c: 243: {
  5801                           ;app.c: 244: memoryFlag++;
  5802                           
  5803                           ; BSR set to: 0
  5804  00303E  2BE2               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;app.c: 253: }
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;app.c: 252: break;
  5811                           
  5812                           ;app.c: 251: default:
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;app.c: 245: }
  5816                           ;app.c: 246: }
  5817                           ;app.c: 247: }
  5818                           ;app.c: 248: break;
  5819                           
  5820                           ; BSR set to: 0
  5821                           
  5822                           ; BSR set to: 0
  5823                           
  5824                           ; BSR set to: 0
  5825  003040  0012               	return	
  5826  003042                     l2581:
  5827                           
  5828                           ; BSR set to: 0
  5829  003042  0100               	movlb	0	; () banked
  5830  003044  51D4               	movf	_SystemState& (0+255),w,b
  5831                           
  5832                           ; Switch size 1, requested type "space"
  5833                           ; Number of cases is 2, Range of values is 0 to 1
  5834                           ; switch strategies available:
  5835                           ; Name         Instructions Cycles
  5836                           ; simple_byte            7     4 (average)
  5837                           ;	Chosen strategy is simple_byte
  5838  003046  0A00               	xorlw	0	; case 0
  5839  003048  B4D8               	btfsc	status,2,c
  5840  00304A  D781               	goto	l2582
  5841  00304C  0A01               	xorlw	1	; case 1
  5842  00304E  A4D8               	btfss	status,2,c
  5843  003050  0012               	return	
  5844  003052  D78A               	goto	l2584
  5845  003054                     __end_of_MyApp_Task:
  5846                           	opt stack 0
  5847                           tosu	equ	0xFFF
  5848                           tosh	equ	0xFFE
  5849                           tosl	equ	0xFFD
  5850                           pclath	equ	0xFFA
  5851                           tblptru	equ	0xFF8
  5852                           tblptrh	equ	0xFF7
  5853                           tblptrl	equ	0xFF6
  5854                           tablat	equ	0xFF5
  5855                           prodh	equ	0xFF4
  5856                           prodl	equ	0xFF3
  5857                           intcon	equ	0xFF2
  5858                           intcon2	equ	0xFF1
  5859                           intcon3	equ	0xFF0
  5860                           postinc0	equ	0xFEE
  5861                           wreg	equ	0xFE8
  5862                           postinc1	equ	0xFE6
  5863                           postdec1	equ	0xFE5
  5864                           fsr1h	equ	0xFE2
  5865                           fsr1l	equ	0xFE1
  5866                           indf2	equ	0xFDF
  5867                           postinc2	equ	0xFDE
  5868                           postdec2	equ	0xFDD
  5869                           fsr2h	equ	0xFDA
  5870                           fsr2l	equ	0xFD9
  5871                           status	equ	0xFD8
  5872                           
  5873 ;; *************** function _Term_MainTask *****************
  5874 ;; Defined at:
  5875 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  Options         1    wreg     unsigned char 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  Options         1    0[COMRAM] unsigned char 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:   17
  5896 ;; This function calls:
  5897 ;;		_Term_MainSm
  5898 ;; This function is called by:
  5899 ;;		_InitializeTasks
  5900 ;;		_ScheduleTasks
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text17
  5905  0060E4                     __ptext17:
  5906                           	opt stack 0
  5907  0060E4                     _Term_MainTask:
  5908                           	opt stack 11
  5909                           
  5910                           ;term.c: 847: switch (SystemState)
  5911                           
  5912                           ;incstack = 0
  5913  0060E4  D003               	goto	l2452
  5914  0060E6                     
  5915                           ;term.c: 858: Term_MainSm();
  5916  0060E6  EC5B  F008         	call	_Term_MainSm	;wreg free
  5917                           
  5918                           ;term.c: 865: }
  5919                           
  5920                           ;term.c: 864: break;
  5921                           
  5922                           ;term.c: 863: default:
  5923                           
  5924                           ;term.c: 860: break;
  5925  0060EA  0012               	return	
  5926  0060EC                     l2452:
  5927  0060EC  0100               	movlb	0	; () banked
  5928  0060EE  51D4               	movf	_SystemState& (0+255),w,b
  5929                           
  5930                           ; Switch size 1, requested type "space"
  5931                           ; Number of cases is 2, Range of values is 0 to 1
  5932                           ; switch strategies available:
  5933                           ; Name         Instructions Cycles
  5934                           ; simple_byte            7     4 (average)
  5935                           ;	Chosen strategy is simple_byte
  5936  0060F0  0A00               	xorlw	0	; case 0
  5937  0060F2  B4D8               	btfsc	status,2,c
  5938  0060F4  0012               	return	
  5939  0060F6  0A01               	xorlw	1	; case 1
  5940  0060F8  A4D8               	btfss	status,2,c
  5941  0060FA  0012               	return	
  5942  0060FC  D7F4               	goto	l2455
  5943  0060FE                     __end_of_Term_MainTask:
  5944                           	opt stack 0
  5945                           tosu	equ	0xFFF
  5946                           tosh	equ	0xFFE
  5947                           tosl	equ	0xFFD
  5948                           pclath	equ	0xFFA
  5949                           tblptru	equ	0xFF8
  5950                           tblptrh	equ	0xFF7
  5951                           tblptrl	equ	0xFF6
  5952                           tablat	equ	0xFF5
  5953                           prodh	equ	0xFF4
  5954                           prodl	equ	0xFF3
  5955                           intcon	equ	0xFF2
  5956                           intcon2	equ	0xFF1
  5957                           intcon3	equ	0xFF0
  5958                           postinc0	equ	0xFEE
  5959                           wreg	equ	0xFE8
  5960                           postinc1	equ	0xFE6
  5961                           postdec1	equ	0xFE5
  5962                           fsr1h	equ	0xFE2
  5963                           fsr1l	equ	0xFE1
  5964                           indf2	equ	0xFDF
  5965                           postinc2	equ	0xFDE
  5966                           postdec2	equ	0xFDD
  5967                           fsr2h	equ	0xFDA
  5968                           fsr2l	equ	0xFD9
  5969                           status	equ	0xFD8
  5970                           
  5971 ;; *************** function _Rtcm_MainTask *****************
  5972 ;; Defined at:
  5973 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  Options         1    wreg     unsigned char 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  Options         1    0[COMRAM] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1    wreg      void 
  5980 ;; Registers used:
  5981 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5991 ;;Total ram usage:        0 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:   14
  5994 ;; This function calls:
  5995 ;;		_Rtcc_AlarmConfig
  5996 ;;		_Rtcc_LockRtc
  5997 ;;		_Rtcc_RtcConfig
  5998 ;;		_Rtcc_SetRtcStatus
  5999 ;;		_Rtcc_UnlockRtc
  6000 ;;		_Rtcm_GetRtccDate
  6001 ;;		_Rtcm_SetRtccDate
  6002 ;; This function is called by:
  6003 ;;		_InitializeTasks
  6004 ;;		_ScheduleTasks
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text18
  6009  004AF8                     __ptext18:
  6010                           	opt stack 0
  6011  004AF8                     _Rtcm_MainTask:
  6012                           	opt stack 14
  6013                           
  6014                           ;rtcm.c: 101: switch (SystemState)
  6015                           
  6016                           ;incstack = 0
  6017  004AF8  D03D               	goto	l2182
  6018  004AFA                     l2183:
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6022  004AFA  86CD               	bsf	4045,3,c	;volatile
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6026  004AFC  0E00               	movlw	0
  6027  004AFE  0103               	movlb	3	; () banked
  6028  004B00  6FB4               	movwf	_RtcConfig& (0+255),b
  6029                           
  6030                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6031  004B02  0E00               	movlw	0
  6032  004B04  6FB5               	movwf	(_RtcConfig+1)& (0+255),b
  6033                           
  6034                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6035  004B06  0E01               	movlw	1
  6036  004B08  6FB6               	movwf	(_RtcConfig+2)& (0+255),b
  6037                           
  6038                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6039  004B0A  0E01               	movlw	1
  6040  004B0C  6FB7               	movwf	(_RtcConfig+3)& (0+255),b
  6041                           
  6042                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6043  004B0E  0E01               	movlw	1
  6044  004B10  6FB0               	movwf	_AlCfg& (0+255),b
  6045                           
  6046                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6047  004B12  0E01               	movlw	1
  6048  004B14  6FB1               	movwf	(_AlCfg+1)& (0+255),b
  6049                           
  6050                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6051  004B16  0E01               	movlw	1
  6052  004B18  6FB2               	movwf	(_AlCfg+2)& (0+255),b
  6053                           
  6054                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6055  004B1A  0E00               	movlw	0
  6056  004B1C  6FB3               	movwf	(_AlCfg+3)& (0+255),b
  6057                           
  6058                           ; BSR set to: 3
  6059                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6060  004B1E  EC00  F031         	call	_Rtcc_UnlockRtc	;wreg free
  6061                           
  6062                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6063  004B22  0EB4               	movlw	low _RtcConfig
  6064  004B24  0100               	movlb	0	; () banked
  6065  004B26  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6066  004B28  0E03               	movlw	high _RtcConfig
  6067  004B2A  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6068  004B2C  ECD0  F022         	call	_Rtcc_RtcConfig	;wreg free
  6069                           
  6070                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6071  004B30  0EB0               	movlw	low _AlCfg
  6072  004B32  0100               	movlb	0	; () banked
  6073  004B34  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6074  004B36  0E03               	movlw	high _AlCfg
  6075  004B38  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6076  004B3A  ECAF  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6077                           
  6078                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6079  004B3E  0E01               	movlw	1
  6080  004B40  ECAF  F030         	call	_Rtcc_SetRtcStatus
  6081                           
  6082                           ;rtcm.c: 127: Rtcc_LockRtc();
  6083  004B44  EC08  F031         	call	_Rtcc_LockRtc	;wreg free
  6084                           
  6085                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6086  004B48  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6087  004B4C  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6088  004B50  0E07               	movlw	7
  6089  004B52                     u14611:
  6090  004B52  CFDB FFEB          	movff	plusw2,plusw0
  6091  004B56  06E8               	decf	wreg,f,c
  6092  004B58  E2FC               	bc	u14611
  6093  004B5A  ECE2  F029         	call	_Rtcm_SetRtccDate	;wreg free
  6094                           
  6095                           ;rtcm.c: 154: break;
  6096  004B5E  0012               	return	
  6097  004B60                     
  6098                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6099  004B60  EC18  F028         	call	_Rtcm_GetRtccDate	;wreg free
  6100  004B64  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6101  004B68  0E07               	movlw	7
  6102  004B6A                     u14621:
  6103  004B6A  CFEB FFDB          	movff	plusw0,plusw2
  6104  004B6E  06E8               	decf	wreg,f,c
  6105  004B70  E2FC               	bc	u14621
  6106                           
  6107                           ;rtcm.c: 165: }
  6108                           
  6109                           ;rtcm.c: 164: break;
  6110                           
  6111                           ;rtcm.c: 163: default:
  6112                           
  6113                           ;rtcm.c: 160: break;
  6114  004B72  0012               	return	
  6115  004B74                     l2182:
  6116  004B74  0100               	movlb	0	; () banked
  6117  004B76  51D4               	movf	_SystemState& (0+255),w,b
  6118                           
  6119                           ; Switch size 1, requested type "space"
  6120                           ; Number of cases is 2, Range of values is 0 to 1
  6121                           ; switch strategies available:
  6122                           ; Name         Instructions Cycles
  6123                           ; simple_byte            7     4 (average)
  6124                           ;	Chosen strategy is simple_byte
  6125  004B78  0A00               	xorlw	0	; case 0
  6126  004B7A  B4D8               	btfsc	status,2,c
  6127  004B7C  D7BE               	goto	l2183
  6128  004B7E  0A01               	xorlw	1	; case 1
  6129  004B80  A4D8               	btfss	status,2,c
  6130  004B82  0012               	return	
  6131  004B84  D7ED               	goto	l2185
  6132  004B86                     __end_of_Rtcm_MainTask:
  6133                           	opt stack 0
  6134                           tosu	equ	0xFFF
  6135                           tosh	equ	0xFFE
  6136                           tosl	equ	0xFFD
  6137                           pclath	equ	0xFFA
  6138                           tblptru	equ	0xFF8
  6139                           tblptrh	equ	0xFF7
  6140                           tblptrl	equ	0xFF6
  6141                           tablat	equ	0xFF5
  6142                           prodh	equ	0xFF4
  6143                           prodl	equ	0xFF3
  6144                           intcon	equ	0xFF2
  6145                           intcon2	equ	0xFF1
  6146                           intcon3	equ	0xFF0
  6147                           postinc0	equ	0xFEE
  6148                           plusw0	equ	0xFEB
  6149                           wreg	equ	0xFE8
  6150                           postinc1	equ	0xFE6
  6151                           postdec1	equ	0xFE5
  6152                           fsr1h	equ	0xFE2
  6153                           fsr1l	equ	0xFE1
  6154                           indf2	equ	0xFDF
  6155                           postinc2	equ	0xFDE
  6156                           postdec2	equ	0xFDD
  6157                           plusw2	equ	0xFDB
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function _Led_MainTask *****************
  6163 ;; Defined at:
  6164 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  Options         1    wreg     unsigned char 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  Options         1    0[COMRAM] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6182 ;;Total ram usage:        1 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:   14
  6185 ;; This function calls:
  6186 ;;		_LedStateMachine
  6187 ;; This function is called by:
  6188 ;;		_InitializeTasks
  6189 ;;		_ScheduleTasks
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text19
  6194  0039F8                     __ptext19:
  6195                           	opt stack 0
  6196  0039F8                     _Led_MainTask:
  6197                           	opt stack 14
  6198                           
  6199                           ;led.c: 300: switch (SystemState)
  6200                           
  6201                           ;incstack = 0
  6202  0039F8  D05C               	goto	l2096
  6203  0039FA                     l2097:
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6207  0039FA  9895               	bcf	3989,4,c	;volatile
  6208                           
  6209                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6210  0039FC  9A95               	bcf	3989,5,c	;volatile
  6211                           
  6212                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6213  0039FE  9C95               	bcf	3989,6,c	;volatile
  6214                           
  6215                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6216  003A00  9883               	bcf	3971,4,c	;volatile
  6217                           
  6218                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6219  003A02  9A83               	bcf	3971,5,c	;volatile
  6220                           
  6221                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6222  003A04  9C83               	bcf	3971,6,c	;volatile
  6223                           
  6224                           ;led.c: 311: break;
  6225  003A06  0012               	return	
  6226  003A08                     
  6227                           ; BSR set to: 0
  6228                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6229                           
  6230                           ; BSR set to: 0
  6231  003A08  0EFD               	movlw	low _Led1Sts
  6232  003A0A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6233  003A0C  0E01               	movlw	high _Led1Sts
  6234  003A0E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6235  003A10  0EFC               	movlw	low _Led1OutSts
  6236  003A12  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6237  003A14  0E01               	movlw	high _Led1OutSts
  6238  003A16  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6239  003A18  0E6E               	movlw	low _Led1Blink
  6240  003A1A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6241  003A1C  0E03               	movlw	high _Led1Blink
  6242  003A1E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6243  003A20  0E92               	movlw	low _Led1Pulse
  6244  003A22  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6245  003A24  0E03               	movlw	high _Led1Pulse
  6246  003A26  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6247  003A28  0E01               	movlw	1
  6248  003A2A  EC2B  F022         	call	_LedStateMachine
  6249  003A2E  0100               	movlb	0	; () banked
  6250  003A30  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6251  003A32  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6252  003A34  5083               	movf	3971,w,c	;volatile
  6253  003A36  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6254  003A38  0BEF               	andlw	-17
  6255  003A3A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6256  003A3C  6E83               	movwf	3971,c	;volatile
  6257                           
  6258                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6259  003A3E  0EFB               	movlw	low _Led2Sts
  6260  003A40  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6261  003A42  0E01               	movlw	high _Led2Sts
  6262  003A44  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6263  003A46  0EFA               	movlw	low _Led2OutSts
  6264  003A48  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6265  003A4A  0E01               	movlw	high _Led2OutSts
  6266  003A4C  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6267  003A4E  0E65               	movlw	low _Led2Blink
  6268  003A50  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6269  003A52  0E03               	movlw	high _Led2Blink
  6270  003A54  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6271  003A56  0E8C               	movlw	low _Led2Pulse
  6272  003A58  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6273  003A5A  0E03               	movlw	high _Led2Pulse
  6274  003A5C  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6275  003A5E  0E02               	movlw	2
  6276  003A60  EC2B  F022         	call	_LedStateMachine
  6277  003A64  0100               	movlb	0	; () banked
  6278  003A66  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6279  003A68  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6280  003A6A  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6281  003A6C  5083               	movf	3971,w,c	;volatile
  6282  003A6E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6283  003A70  0BDF               	andlw	-33
  6284  003A72  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6285  003A74  6E83               	movwf	3971,c	;volatile
  6286                           
  6287                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6288  003A76  0EF9               	movlw	low _Led3Sts
  6289  003A78  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6290  003A7A  0E01               	movlw	high _Led3Sts
  6291  003A7C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6292  003A7E  0EF8               	movlw	low _Led3OutSts
  6293  003A80  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6294  003A82  0E01               	movlw	high _Led3OutSts
  6295  003A84  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6296  003A86  0E5C               	movlw	low _Led3Blink
  6297  003A88  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6298  003A8A  0E03               	movlw	high _Led3Blink
  6299  003A8C  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6300  003A8E  0E86               	movlw	low _Led3Pulse
  6301  003A90  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6302  003A92  0E03               	movlw	high _Led3Pulse
  6303  003A94  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6304  003A96  0E03               	movlw	3
  6305  003A98  EC2B  F022         	call	_LedStateMachine
  6306  003A9C  0100               	movlb	0	; () banked
  6307  003A9E  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6308  003AA0  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6309  003AA2  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6310  003AA4  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6311  003AA6  5083               	movf	3971,w,c	;volatile
  6312  003AA8  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6313  003AAA  0BBF               	andlw	-65
  6314  003AAC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6315  003AAE  6E83               	movwf	3971,c	;volatile
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;led.c: 326: }
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;led.c: 325: break;
  6322                           
  6323                           ;led.c: 324: default:
  6324                           
  6325                           ;led.c: 321: break;
  6326  003AB0  0012               	return	
  6327  003AB2                     l2096:
  6328                           
  6329                           ; BSR set to: 0
  6330  003AB2  0100               	movlb	0	; () banked
  6331  003AB4  51D4               	movf	_SystemState& (0+255),w,b
  6332                           
  6333                           ; Switch size 1, requested type "space"
  6334                           ; Number of cases is 2, Range of values is 0 to 1
  6335                           ; switch strategies available:
  6336                           ; Name         Instructions Cycles
  6337                           ; simple_byte            7     4 (average)
  6338                           ;	Chosen strategy is simple_byte
  6339  003AB6  0A00               	xorlw	0	; case 0
  6340  003AB8  B4D8               	btfsc	status,2,c
  6341  003ABA  D79F               	goto	l2097
  6342  003ABC  0A01               	xorlw	1	; case 1
  6343  003ABE  A4D8               	btfss	status,2,c
  6344  003AC0  0012               	return	
  6345  003AC2  D7A2               	goto	l2099
  6346  003AC4                     __end_of_Led_MainTask:
  6347                           	opt stack 0
  6348                           tosu	equ	0xFFF
  6349                           tosh	equ	0xFFE
  6350                           tosl	equ	0xFFD
  6351                           pclath	equ	0xFFA
  6352                           tblptru	equ	0xFF8
  6353                           tblptrh	equ	0xFF7
  6354                           tblptrl	equ	0xFF6
  6355                           tablat	equ	0xFF5
  6356                           prodh	equ	0xFF4
  6357                           prodl	equ	0xFF3
  6358                           intcon	equ	0xFF2
  6359                           intcon2	equ	0xFF1
  6360                           intcon3	equ	0xFF0
  6361                           postinc0	equ	0xFEE
  6362                           plusw0	equ	0xFEB
  6363                           wreg	equ	0xFE8
  6364                           postinc1	equ	0xFE6
  6365                           postdec1	equ	0xFE5
  6366                           fsr1h	equ	0xFE2
  6367                           fsr1l	equ	0xFE1
  6368                           indf2	equ	0xFDF
  6369                           postinc2	equ	0xFDE
  6370                           postdec2	equ	0xFDD
  6371                           plusw2	equ	0xFDB
  6372                           fsr2h	equ	0xFDA
  6373                           fsr2l	equ	0xFD9
  6374                           status	equ	0xFD8
  6375                           
  6376 ;; *************** function _UsbDevice_MainTask *****************
  6377 ;; Defined at:
  6378 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  Options         1    wreg     unsigned char 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  Options         1    0[COMRAM] unsigned char 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:   20
  6399 ;; This function calls:
  6400 ;;		_CDCTxService
  6401 ;;		_USBDeviceInit
  6402 ;;		_USBDeviceTasks
  6403 ;; This function is called by:
  6404 ;;		_InitializeTasks
  6405 ;;		_ScheduleTasks
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text20
  6410  005EBA                     __ptext20:
  6411                           	opt stack 0
  6412  005EBA                     _UsbDevice_MainTask:
  6413                           	opt stack 8
  6414                           
  6415                           ;usb_device_mgr.c: 74: switch (SystemState)
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;incstack = 0
  6419  005EBA  D008               	goto	l1989
  6420  005EBC                     
  6421                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6422  005EBC  ECC3  F010         	call	_USBDeviceInit	;wreg free
  6423                           
  6424                           ;usb_device_mgr.c: 80: ;
  6425                           ;usb_device_mgr.c: 81: break;
  6426  005EC0  0012               	return	
  6427  005EC2                     
  6428                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6429  005EC2  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6430                           
  6431                           ;usb_device_mgr.c: 90: CDCTxService();
  6432  005EC6  EC0B  F014         	call	_CDCTxService	;wreg free
  6433                           
  6434                           ;usb_device_mgr.c: 101: }
  6435                           
  6436                           ;usb_device_mgr.c: 100: break;
  6437                           
  6438                           ;usb_device_mgr.c: 99: default:
  6439                           
  6440                           ;usb_device_mgr.c: 96: break;
  6441  005ECA  0012               	return	
  6442  005ECC                     l1989:
  6443  005ECC  0100               	movlb	0	; () banked
  6444  005ECE  51D4               	movf	_SystemState& (0+255),w,b
  6445                           
  6446                           ; Switch size 1, requested type "space"
  6447                           ; Number of cases is 2, Range of values is 0 to 1
  6448                           ; switch strategies available:
  6449                           ; Name         Instructions Cycles
  6450                           ; simple_byte            7     4 (average)
  6451                           ;	Chosen strategy is simple_byte
  6452  005ED0  0A00               	xorlw	0	; case 0
  6453  005ED2  B4D8               	btfsc	status,2,c
  6454  005ED4  D7F3               	goto	l1990
  6455  005ED6  0A01               	xorlw	1	; case 1
  6456  005ED8  A4D8               	btfss	status,2,c
  6457  005EDA  0012               	return	
  6458  005EDC  D7F2               	goto	l1992
  6459  005EDE                     __end_of_UsbDevice_MainTask:
  6460                           	opt stack 0
  6461                           tosu	equ	0xFFF
  6462                           tosh	equ	0xFFE
  6463                           tosl	equ	0xFFD
  6464                           pclath	equ	0xFFA
  6465                           tblptru	equ	0xFF8
  6466                           tblptrh	equ	0xFF7
  6467                           tblptrl	equ	0xFF6
  6468                           tablat	equ	0xFF5
  6469                           prodh	equ	0xFF4
  6470                           prodl	equ	0xFF3
  6471                           intcon	equ	0xFF2
  6472                           intcon2	equ	0xFF1
  6473                           intcon3	equ	0xFF0
  6474                           postinc0	equ	0xFEE
  6475                           plusw0	equ	0xFEB
  6476                           wreg	equ	0xFE8
  6477                           postinc1	equ	0xFE6
  6478                           postdec1	equ	0xFE5
  6479                           fsr1h	equ	0xFE2
  6480                           fsr1l	equ	0xFE1
  6481                           indf2	equ	0xFDF
  6482                           postinc2	equ	0xFDE
  6483                           postdec2	equ	0xFDD
  6484                           plusw2	equ	0xFDB
  6485                           fsr2h	equ	0xFDA
  6486                           fsr2l	equ	0xFD9
  6487                           status	equ	0xFD8
  6488                           
  6489 ;; *************** function _MdmHttp_MainTask *****************
  6490 ;; Defined at:
  6491 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  Options         1    wreg     unsigned char 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  Options         1    0[COMRAM] unsigned char 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;Total ram usage:        0 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:   15
  6512 ;; This function calls:
  6513 ;;		_HttpGetMethod
  6514 ;;		_InitGprsNetwork
  6515 ;; This function is called by:
  6516 ;;		_InitializeTasks
  6517 ;;		_ScheduleTasks
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text21
  6522  005786                     __ptext21:
  6523                           	opt stack 0
  6524  005786                     _MdmHttp_MainTask:
  6525                           	opt stack 13
  6526                           
  6527                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6528                           
  6529                           ;incstack = 0
  6530  005786  D019               	goto	l1288
  6531  005788                     
  6532                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6533  005788  0E03               	movlw	3
  6534  00578A  0100               	movlb	0	; () banked
  6535  00578C  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6536  00578E  A4D8               	btfss	status,2,c
  6537  005790  0012               	return	
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;mdm_gsm_gprs_http.c: 570: {
  6541                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6542  005792  C2D6  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6543  005796  C2D7  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6544  00579A  C1F1  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6545  00579E  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6546  0057A2  0101               	movlb	1	; () banked
  6547  0057A4  6FF0               	movwf	_GprsNetworkSts& (0+255),b
  6548                           
  6549                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6550  0057A6  0EA3               	movlw	low _HttpGetDataLocal
  6551  0057A8  0100               	movlb	0	; () banked
  6552  0057AA  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6553  0057AC  0E03               	movlw	high _HttpGetDataLocal
  6554  0057AE  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6555  0057B0  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6556  0057B4  0101               	movlb	1	; () banked
  6557  0057B6  6FEF               	movwf	_HttpGetMethodSts& (0+255),b
  6558                           
  6559                           ; BSR set to: 1
  6560                           ;mdm_gsm_gprs_http.c: 581: }
  6561                           
  6562                           ; BSR set to: 1
  6563                           ;mdm_gsm_gprs_http.c: 580: break;
  6564                           
  6565                           ;mdm_gsm_gprs_http.c: 579: default:
  6566                           
  6567                           ; BSR set to: 1
  6568                           ;mdm_gsm_gprs_http.c: 575: }
  6569                           ;mdm_gsm_gprs_http.c: 576: break;
  6570  0057B8  0012               	return	
  6571  0057BA                     l1288:
  6572                           
  6573                           ; BSR set to: 1
  6574  0057BA  0100               	movlb	0	; () banked
  6575  0057BC  51D4               	movf	_SystemState& (0+255),w,b
  6576                           
  6577                           ; Switch size 1, requested type "space"
  6578                           ; Number of cases is 2, Range of values is 0 to 1
  6579                           ; switch strategies available:
  6580                           ; Name         Instructions Cycles
  6581                           ; simple_byte            7     4 (average)
  6582                           ;	Chosen strategy is simple_byte
  6583  0057BE  0A00               	xorlw	0	; case 0
  6584  0057C0  B4D8               	btfsc	status,2,c
  6585  0057C2  0012               	return	
  6586  0057C4  0A01               	xorlw	1	; case 1
  6587  0057C6  A4D8               	btfss	status,2,c
  6588  0057C8  0012               	return	
  6589  0057CA  D7DE               	goto	l1291
  6590  0057CC                     __end_of_MdmHttp_MainTask:
  6591                           	opt stack 0
  6592                           tosu	equ	0xFFF
  6593                           tosh	equ	0xFFE
  6594                           tosl	equ	0xFFD
  6595                           pclath	equ	0xFFA
  6596                           tblptru	equ	0xFF8
  6597                           tblptrh	equ	0xFF7
  6598                           tblptrl	equ	0xFF6
  6599                           tablat	equ	0xFF5
  6600                           prodh	equ	0xFF4
  6601                           prodl	equ	0xFF3
  6602                           intcon	equ	0xFF2
  6603                           intcon2	equ	0xFF1
  6604                           intcon3	equ	0xFF0
  6605                           postinc0	equ	0xFEE
  6606                           plusw0	equ	0xFEB
  6607                           wreg	equ	0xFE8
  6608                           postinc1	equ	0xFE6
  6609                           postdec1	equ	0xFE5
  6610                           fsr1h	equ	0xFE2
  6611                           fsr1l	equ	0xFE1
  6612                           indf2	equ	0xFDF
  6613                           postinc2	equ	0xFDE
  6614                           postdec2	equ	0xFDD
  6615                           plusw2	equ	0xFDB
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function _Mdm_MainTask *****************
  6621 ;; Defined at:
  6622 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  Options         1    wreg     unsigned char 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  Options         1    0[COMRAM] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:   15
  6643 ;; This function calls:
  6644 ;;		_CheckModem
  6645 ;;		_ConfigureModem
  6646 ;;		_GetSmsSm
  6647 ;;		_ModemEvtParser
  6648 ;;		_SendSmsSm
  6649 ;;		_TurnOnModem
  6650 ;;		_UartSetConfig
  6651 ;;		_Uart_InitUartModule
  6652 ;; This function is called by:
  6653 ;;		_InitializeTasks
  6654 ;;		_ScheduleTasks
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text22
  6659  0055B6                     __ptext22:
  6660                           	opt stack 0
  6661  0055B6                     _Mdm_MainTask:
  6662                           	opt stack 13
  6663                           
  6664                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6665                           
  6666                           ;incstack = 0
  6667  0055B6  D01E               	goto	l1107
  6668  0055B8                     
  6669                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6670  0055B8  EC08  F029         	call	_UartSetConfig	;wreg free
  6671                           
  6672                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6673  0055BC  0E24               	movlw	low _UartConfig
  6674  0055BE  0100               	movlb	0	; () banked
  6675  0055C0  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6676  0055C2  0E03               	movlw	high _UartConfig
  6677  0055C4  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6678  0055C6  0E01               	movlw	1
  6679  0055C8  EC5E  F005         	call	_Uart_InitUartModule
  6680                           
  6681                           ;mdm_gsm_gprs.c: 764: break;
  6682  0055CC  0012               	return	
  6683  0055CE                     
  6684                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6685  0055CE  EC19  F012         	call	_CheckModem	;wreg free
  6686                           
  6687                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6688  0055D2  042B               	decf	_ComChecCompleted,w,c
  6689  0055D4  A4D8               	btfss	status,2,c
  6690  0055D6  D005               	goto	l1111
  6691  0055D8  0100               	movlb	0	; () banked
  6692  0055DA  51D1               	movf	_MdmStatus& (0+255),w,b
  6693  0055DC  B4D8               	btfsc	status,2,c
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;mdm_gsm_gprs.c: 772: {
  6697                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6698  0055DE  ECE6  F02B         	call	_TurnOnModem	;wreg free
  6699  0055E2                     l1111:
  6700                           
  6701                           ;mdm_gsm_gprs.c: 775: }
  6702                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6703  0055E2  EC95  F01C         	call	_ConfigureModem	;wreg free
  6704                           
  6705                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6706  0055E6  EC99  F00E         	call	_ModemEvtParser	;wreg free
  6707                           
  6708                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6709  0055EA  EC4A  F015         	call	_GetSmsSm	;wreg free
  6710                           
  6711                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6712  0055EE  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6713                           
  6714                           ;mdm_gsm_gprs.c: 789: }
  6715                           
  6716                           ;mdm_gsm_gprs.c: 788: break;
  6717                           
  6718                           ;mdm_gsm_gprs.c: 787: default:
  6719                           
  6720                           ;mdm_gsm_gprs.c: 784: break;
  6721  0055F2  0012               	return	
  6722  0055F4                     l1107:
  6723  0055F4  0100               	movlb	0	; () banked
  6724  0055F6  51D4               	movf	_SystemState& (0+255),w,b
  6725                           
  6726                           ; Switch size 1, requested type "space"
  6727                           ; Number of cases is 2, Range of values is 0 to 1
  6728                           ; switch strategies available:
  6729                           ; Name         Instructions Cycles
  6730                           ; simple_byte            7     4 (average)
  6731                           ;	Chosen strategy is simple_byte
  6732  0055F8  0A00               	xorlw	0	; case 0
  6733  0055FA  B4D8               	btfsc	status,2,c
  6734  0055FC  D7DD               	goto	l1108
  6735  0055FE  0A01               	xorlw	1	; case 1
  6736  005600  A4D8               	btfss	status,2,c
  6737  005602  0012               	return	
  6738  005604  D7E4               	goto	l1110
  6739  005606                     __end_of_Mdm_MainTask:
  6740                           	opt stack 0
  6741                           tosu	equ	0xFFF
  6742                           tosh	equ	0xFFE
  6743                           tosl	equ	0xFFD
  6744                           pclath	equ	0xFFA
  6745                           tblptru	equ	0xFF8
  6746                           tblptrh	equ	0xFF7
  6747                           tblptrl	equ	0xFF6
  6748                           tablat	equ	0xFF5
  6749                           prodh	equ	0xFF4
  6750                           prodl	equ	0xFF3
  6751                           intcon	equ	0xFF2
  6752                           intcon2	equ	0xFF1
  6753                           intcon3	equ	0xFF0
  6754                           postinc0	equ	0xFEE
  6755                           plusw0	equ	0xFEB
  6756                           wreg	equ	0xFE8
  6757                           postinc1	equ	0xFE6
  6758                           postdec1	equ	0xFE5
  6759                           fsr1h	equ	0xFE2
  6760                           fsr1l	equ	0xFE1
  6761                           indf2	equ	0xFDF
  6762                           postinc2	equ	0xFDE
  6763                           postdec2	equ	0xFDD
  6764                           plusw2	equ	0xFDB
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8
  6768                           
  6769 ;; *************** function _I2cSlv_MainTask *****************
  6770 ;; Defined at:
  6771 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  Options         1    wreg     unsigned char 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  Options         1    0[COMRAM] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6789 ;;Total ram usage:        0 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:   14
  6792 ;; This function calls:
  6793 ;;		_I2cSendMsgSm
  6794 ;;		_I2cSetConfig
  6795 ;;		_I2c_InitI2cModule
  6796 ;;		_OsAlrm_SetOsAlarm
  6797 ;; This function is called by:
  6798 ;;		_InitializeTasks
  6799 ;;		_ScheduleTasks
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text23
  6804  005370                     __ptext23:
  6805                           	opt stack 0
  6806  005370                     _I2cSlv_MainTask:
  6807                           	opt stack 14
  6808                           
  6809                           ;i2c_slv.c: 217: switch (SystemState)
  6810                           
  6811                           ;incstack = 0
  6812  005370  D020               	goto	l1401
  6813  005372                     
  6814                           ;i2c_slv.c: 222: I2cSetConfig();
  6815  005372  ECF6  F02E         	call	_I2cSetConfig	;wreg free
  6816                           
  6817                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6818  005376  0E52               	movlw	low _I2cConfig
  6819  005378  0100               	movlb	0	; () banked
  6820  00537A  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6821  00537C  0E03               	movlw	high _I2cConfig
  6822  00537E  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6823  005380  EC08  F027         	call	_I2c_InitI2cModule	;wreg free
  6824                           
  6825                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6826  005384  0E00               	movlw	0
  6827  005386  0100               	movlb	0	; () banked
  6828  005388  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6829  00538A  0E00               	movlw	0
  6830  00538C  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6831  00538E  0E32               	movlw	50
  6832  005390  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6833  005392  0E00               	movlw	0
  6834  005394  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6835  005396  0E00               	movlw	0
  6836  005398  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6837  00539A  0E00               	movlw	0
  6838  00539C  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6839  00539E  0EAE               	movlw	low _I2cDummyTx
  6840  0053A0  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6841  0053A2  0E60               	movlw	high _I2cDummyTx
  6842  0053A4  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6843  0053A6  ECF5  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6844                           
  6845                           ;i2c_slv.c: 227: break;
  6846  0053AA  0012               	return	
  6847  0053AC                     
  6848                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6849  0053AC  EC59  F01F         	call	_I2cSendMsgSm	;wreg free
  6850                           
  6851                           ;i2c_slv.c: 238: }
  6852                           
  6853                           ;i2c_slv.c: 237: break;
  6854                           
  6855                           ;i2c_slv.c: 236: default:
  6856                           
  6857                           ;i2c_slv.c: 233: break;
  6858  0053B0  0012               	return	
  6859  0053B2                     l1401:
  6860  0053B2  0100               	movlb	0	; () banked
  6861  0053B4  51D4               	movf	_SystemState& (0+255),w,b
  6862                           
  6863                           ; Switch size 1, requested type "space"
  6864                           ; Number of cases is 2, Range of values is 0 to 1
  6865                           ; switch strategies available:
  6866                           ; Name         Instructions Cycles
  6867                           ; simple_byte            7     4 (average)
  6868                           ;	Chosen strategy is simple_byte
  6869  0053B6  0A00               	xorlw	0	; case 0
  6870  0053B8  B4D8               	btfsc	status,2,c
  6871  0053BA  D7DB               	goto	l1402
  6872  0053BC  0A01               	xorlw	1	; case 1
  6873  0053BE  A4D8               	btfss	status,2,c
  6874  0053C0  0012               	return	
  6875  0053C2  D7F4               	goto	l1404
  6876  0053C4                     __end_of_I2cSlv_MainTask:
  6877                           	opt stack 0
  6878                           tosu	equ	0xFFF
  6879                           tosh	equ	0xFFE
  6880                           tosl	equ	0xFFD
  6881                           pclath	equ	0xFFA
  6882                           tblptru	equ	0xFF8
  6883                           tblptrh	equ	0xFF7
  6884                           tblptrl	equ	0xFF6
  6885                           tablat	equ	0xFF5
  6886                           prodh	equ	0xFF4
  6887                           prodl	equ	0xFF3
  6888                           intcon	equ	0xFF2
  6889                           intcon2	equ	0xFF1
  6890                           intcon3	equ	0xFF0
  6891                           postinc0	equ	0xFEE
  6892                           plusw0	equ	0xFEB
  6893                           wreg	equ	0xFE8
  6894                           postinc1	equ	0xFE6
  6895                           postdec1	equ	0xFE5
  6896                           fsr1h	equ	0xFE2
  6897                           fsr1l	equ	0xFE1
  6898                           indf2	equ	0xFDF
  6899                           postinc2	equ	0xFDE
  6900                           postdec2	equ	0xFDD
  6901                           plusw2	equ	0xFDB
  6902                           fsr2h	equ	0xFDA
  6903                           fsr2l	equ	0xFD9
  6904                           status	equ	0xFD8
  6905                           
  6906 ;; *************** function _Mdm_DrvMainFn *****************
  6907 ;; Defined at:
  6908 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  Options         1    wreg     unsigned char 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  Options         1    0[COMRAM] unsigned char 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6926 ;;Total ram usage:        0 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:   13
  6929 ;; This function calls:
  6930 ;;		_MdmCntSm
  6931 ;; This function is called by:
  6932 ;;		_InitializeTasks
  6933 ;;		_ScheduleTasks
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text24
  6938  0062B8                     __ptext24:
  6939                           	opt stack 0
  6940  0062B8                     _Mdm_DrvMainFn:
  6941                           	opt stack 15
  6942                           
  6943                           ;mdm_drv.c: 307: MdmCntSm();
  6944                           
  6945                           ;incstack = 0
  6946  0062B8  ECD7  F021         	call	_MdmCntSm	;wreg free
  6947  0062BC  0012               	return		;funcret
  6948  0062BE                     __end_of_Mdm_DrvMainFn:
  6949                           	opt stack 0
  6950                           tosu	equ	0xFFF
  6951                           tosh	equ	0xFFE
  6952                           tosl	equ	0xFFD
  6953                           pclath	equ	0xFFA
  6954                           tblptru	equ	0xFF8
  6955                           tblptrh	equ	0xFF7
  6956                           tblptrl	equ	0xFF6
  6957                           tablat	equ	0xFF5
  6958                           prodh	equ	0xFF4
  6959                           prodl	equ	0xFF3
  6960                           intcon	equ	0xFF2
  6961                           intcon2	equ	0xFF1
  6962                           intcon3	equ	0xFF0
  6963                           postinc0	equ	0xFEE
  6964                           plusw0	equ	0xFEB
  6965                           wreg	equ	0xFE8
  6966                           postinc1	equ	0xFE6
  6967                           postdec1	equ	0xFE5
  6968                           fsr1h	equ	0xFE2
  6969                           fsr1l	equ	0xFE1
  6970                           indf2	equ	0xFDF
  6971                           postinc2	equ	0xFDE
  6972                           postdec2	equ	0xFDD
  6973                           plusw2	equ	0xFDB
  6974                           fsr2h	equ	0xFDA
  6975                           fsr2l	equ	0xFD9
  6976                           status	equ	0xFD8
  6977                           
  6978 ;; *************** function _Wdg_MainTask *****************
  6979 ;; Defined at:
  6980 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  Options         1    wreg     unsigned char 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  Options         1    0[COMRAM] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;Total ram usage:        0 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:   12
  7001 ;; This function calls:
  7002 ;;		_Mcu_ClearWdg
  7003 ;;		_Mcu_SetWdgSts
  7004 ;; This function is called by:
  7005 ;;		_InitializeTasks
  7006 ;;		_ScheduleTasks
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text25
  7011  005F4A                     __ptext25:
  7012                           	opt stack 0
  7013  005F4A                     _Wdg_MainTask:
  7014                           	opt stack 16
  7015                           
  7016                           ;wdg.c: 75: switch (SystemState)
  7017                           
  7018                           ;incstack = 0
  7019  005F4A  D007               	goto	l2472
  7020  005F4C                     
  7021                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7022  005F4C  0E01               	movlw	1
  7023  005F4E  ECE5  F030         	call	_Mcu_SetWdgSts
  7024                           
  7025                           ;wdg.c: 81: break;
  7026  005F52  0012               	return	
  7027  005F54                     
  7028                           ;wdg.c: 86: Mcu_ClearWdg();
  7029  005F54  EC5F  F031         	call	_Mcu_ClearWdg	;wreg free
  7030                           
  7031                           ;wdg.c: 92: }
  7032                           
  7033                           ;wdg.c: 91: break;
  7034                           
  7035                           ;wdg.c: 90: default:
  7036                           
  7037                           ;wdg.c: 87: break;
  7038  005F58  0012               	return	
  7039  005F5A                     l2472:
  7040  005F5A  0100               	movlb	0	; () banked
  7041  005F5C  51D4               	movf	_SystemState& (0+255),w,b
  7042                           
  7043                           ; Switch size 1, requested type "space"
  7044                           ; Number of cases is 2, Range of values is 0 to 1
  7045                           ; switch strategies available:
  7046                           ; Name         Instructions Cycles
  7047                           ; simple_byte            7     4 (average)
  7048                           ;	Chosen strategy is simple_byte
  7049  005F5E  0A00               	xorlw	0	; case 0
  7050  005F60  B4D8               	btfsc	status,2,c
  7051  005F62  D7F4               	goto	l2473
  7052  005F64  0A01               	xorlw	1	; case 1
  7053  005F66  A4D8               	btfss	status,2,c
  7054  005F68  0012               	return	
  7055  005F6A  D7F4               	goto	l2475
  7056  005F6C                     __end_of_Wdg_MainTask:
  7057                           	opt stack 0
  7058                           tosu	equ	0xFFF
  7059                           tosh	equ	0xFFE
  7060                           tosl	equ	0xFFD
  7061                           pclath	equ	0xFFA
  7062                           tblptru	equ	0xFF8
  7063                           tblptrh	equ	0xFF7
  7064                           tblptrl	equ	0xFF6
  7065                           tablat	equ	0xFF5
  7066                           prodh	equ	0xFF4
  7067                           prodl	equ	0xFF3
  7068                           intcon	equ	0xFF2
  7069                           intcon2	equ	0xFF1
  7070                           intcon3	equ	0xFF0
  7071                           postinc0	equ	0xFEE
  7072                           plusw0	equ	0xFEB
  7073                           wreg	equ	0xFE8
  7074                           postinc1	equ	0xFE6
  7075                           postdec1	equ	0xFE5
  7076                           fsr1h	equ	0xFE2
  7077                           fsr1l	equ	0xFE1
  7078                           indf2	equ	0xFDF
  7079                           postinc2	equ	0xFDE
  7080                           postdec2	equ	0xFDD
  7081                           plusw2	equ	0xFDB
  7082                           fsr2h	equ	0xFDA
  7083                           fsr2l	equ	0xFD9
  7084                           status	equ	0xFD8
  7085                           
  7086 ;; *************** function _Mcu_SetWdgSts *****************
  7087 ;; Defined at:
  7088 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  WdgSts          1    wreg     unsigned char 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;Total ram usage:        1 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:   11
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_Wdg_MainTask
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text26
  7117  0061CA                     __ptext26:
  7118                           	opt stack 0
  7119  0061CA                     _Mcu_SetWdgSts:
  7120                           	opt stack 16
  7121                           
  7122                           ;incstack = 0
  7123                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7124  0061CA  0100               	movlb	0	; () banked
  7125  0061CC  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7126                           
  7127                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7128  0061CE  0100               	movlb	0	; () banked
  7129  0061D0  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7130  0061D2  D002               	bra	u13205
  7131  0061D4  90C0               	bcf	4032,0,c	;volatile
  7132  0061D6  D001               	bra	u13206
  7133  0061D8                     u13205:
  7134  0061D8  80C0               	bsf	4032,0,c	;volatile
  7135  0061DA                     u13206:
  7136  0061DA  0012               	return		;funcret
  7137  0061DC                     __end_of_Mcu_SetWdgSts:
  7138                           	opt stack 0
  7139                           tosu	equ	0xFFF
  7140                           tosh	equ	0xFFE
  7141                           tosl	equ	0xFFD
  7142                           pclath	equ	0xFFA
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           intcon2	equ	0xFF1
  7151                           intcon3	equ	0xFF0
  7152                           postinc0	equ	0xFEE
  7153                           plusw0	equ	0xFEB
  7154                           wreg	equ	0xFE8
  7155                           postinc1	equ	0xFE6
  7156                           postdec1	equ	0xFE5
  7157                           fsr1h	equ	0xFE2
  7158                           fsr1l	equ	0xFE1
  7159                           indf2	equ	0xFDF
  7160                           postinc2	equ	0xFDE
  7161                           postdec2	equ	0xFDD
  7162                           plusw2	equ	0xFDB
  7163                           fsr2h	equ	0xFDA
  7164                           fsr2l	equ	0xFD9
  7165                           status	equ	0xFD8
  7166                           
  7167 ;; *************** function _Mcu_ClearWdg *****************
  7168 ;; Defined at:
  7169 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      void 
  7176 ;; Registers used:
  7177 ;;		None
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;Total ram usage:        0 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:   11
  7190 ;; This function calls:
  7191 ;;		Nothing
  7192 ;; This function is called by:
  7193 ;;		_Wdg_MainTask
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text27
  7198  0062BE                     __ptext27:
  7199                           	opt stack 0
  7200  0062BE                     _Mcu_ClearWdg:
  7201                           	opt stack 16
  7202                           
  7203                           ;incstack = 0
  7204  0062BE  0004               	clrwdt		;# 
  7205  0062C0  0012               	return		;funcret
  7206  0062C2                     __end_of_Mcu_ClearWdg:
  7207                           	opt stack 0
  7208                           tosu	equ	0xFFF
  7209                           tosh	equ	0xFFE
  7210                           tosl	equ	0xFFD
  7211                           pclath	equ	0xFFA
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           intcon	equ	0xFF2
  7219                           intcon2	equ	0xFF1
  7220                           intcon3	equ	0xFF0
  7221                           postinc0	equ	0xFEE
  7222                           plusw0	equ	0xFEB
  7223                           wreg	equ	0xFE8
  7224                           postinc1	equ	0xFE6
  7225                           postdec1	equ	0xFE5
  7226                           fsr1h	equ	0xFE2
  7227                           fsr1l	equ	0xFE1
  7228                           indf2	equ	0xFDF
  7229                           postinc2	equ	0xFDE
  7230                           postdec2	equ	0xFDD
  7231                           plusw2	equ	0xFDB
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function _USBDeviceTasks *****************
  7237 ;; Defined at:
  7238 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;		None
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  i               1   56[BANK0 ] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      void 
  7245 ;; Registers used:
  7246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7255 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7256 ;;Total ram usage:        1 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; Hardware stack levels required when called:   19
  7259 ;; This function calls:
  7260 ;;		_USBCtrlEPAllowStatusStage
  7261 ;;		_USBCtrlEPService
  7262 ;;		_USBDeviceInit
  7263 ;;		_USBIncrement1msInternalTimers
  7264 ;;		_USBStallHandler
  7265 ;;		_USBSuspend
  7266 ;;		_USBWakeFromSuspend
  7267 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7268 ;; This function is called by:
  7269 ;;		_UsbDevice_MainTask
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text28
  7274  001BAA                     __ptext28:
  7275                           	opt stack 0
  7276  001BAA                     _USBDeviceTasks:
  7277                           	opt stack 8
  7278                           
  7279                           ;usb_device.c: 562: }
  7280                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7281                           
  7282                           ; BSR set to: 0
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;usb_device.c: 561: return;
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7289                           
  7290                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7291                           
  7292                           ;usb_device.c: 529: UIE = 0;
  7293                           
  7294                           ;usb_device.c: 524: {
  7295                           ;usb_device.c: 526: UCON = 0;
  7296                           
  7297                           ;usb_device.c: 497: uint8_t i;
  7298                           ;usb_device.c: 523: if (1 != 1)
  7299                           
  7300                           ;incstack = 0
  7301  001BAA  0100               	movlb	0	; () banked
  7302  001BAC  51CD               	movf	_USBDeviceState& (0+255),w,b
  7303  001BAE  A4D8               	btfss	status,2,c
  7304  001BB0  D012               	goto	l1612
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;usb_device.c: 585: {
  7308                           ;usb_device.c: 587: UCON = 0;
  7309  001BB2  0E00               	movlw	0
  7310  001BB4  6E65               	movwf	3941,c	;volatile
  7311                           
  7312                           ;usb_device.c: 590: UIE = 0;
  7313  001BB6  0E00               	movlw	0
  7314  001BB8  010F               	movlb	15	; () banked
  7315  001BBA  6F36               	movwf	54,b	;volatile
  7316                           
  7317                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7318  001BBC  0E16               	movlw	22
  7319  001BBE  6F39               	movwf	57,b	;volatile
  7320  001BC0  0E9F               	movlw	159
  7321  001BC2  6F37               	movwf	55,b	;volatile
  7322  001BC4  0E7B               	movlw	123
  7323  001BC6  6F36               	movwf	54,b	;volatile
  7324                           
  7325                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7326  001BC8  D001               	goto	l1613
  7327  001BCA                     l1614:
  7328  001BCA  8665               	bsf	3941,3,c	;volatile
  7329  001BCC                     l1613:
  7330  001BCC  A665               	btfss	3941,3,c	;volatile
  7331  001BCE  D7FD               	goto	l1614
  7332                           
  7333                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7334  001BD0  0E01               	movlw	1
  7335  001BD2  0100               	movlb	0	; () banked
  7336  001BD4  6FCD               	movwf	_USBDeviceState& (0+255),b
  7337  001BD6                     l1612:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;usb_device.c: 605: }
  7341                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7342                           
  7343                           ; BSR set to: 0
  7344  001BD6  05CD               	decf	_USBDeviceState& (0+255),w,b
  7345  001BD8  B4D8               	btfsc	status,2,c
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;usb_device.c: 609: {
  7349                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7350  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7351  001BDC  D00A               	goto	l1617
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;usb_device.c: 620: {
  7355                           ;usb_device.c: 626: {UIR = 0;};
  7356  001BDE  0E00               	movlw	0
  7357  001BE0  6E62               	movwf	3938,c	;volatile
  7358                           
  7359                           ;usb_device.c: 630: UIE=0;
  7360  001BE2  0E00               	movlw	0
  7361  001BE4  010F               	movlb	15	; () banked
  7362  001BE6  6F36               	movwf	54,b	;volatile
  7363                           
  7364                           ; BSR set to: 15
  7365                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7366  001BE8  8136               	bsf	54,0,b	;volatile
  7367                           
  7368                           ; BSR set to: 15
  7369                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7370  001BEA  8936               	bsf	54,4,b	;volatile
  7371                           
  7372                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7373  001BEC  0E02               	movlw	2
  7374  001BEE  0100               	movlb	0	; () banked
  7375  001BF0  6FCD               	movwf	_USBDeviceState& (0+255),b
  7376  001BF2                     l1617:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;usb_device.c: 635: }
  7380                           ;usb_device.c: 636: }
  7381                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7382                           
  7383                           ; BSR set to: 0
  7384                           
  7385                           ; BSR set to: 0
  7386  001BF2  A462               	btfss	3938,2,c	;volatile
  7387  001BF4  D006               	goto	l1618
  7388                           
  7389                           ; BSR set to: 0
  7390  001BF6  010F               	movlb	15	; () banked
  7391  001BF8  A536               	btfss	54,2,b	;volatile
  7392  001BFA  D003               	goto	l1618
  7393                           
  7394                           ; BSR set to: 15
  7395                           ;usb_device.c: 653: {
  7396                           ;usb_device.c: 654: (UIR &= 0xFB);
  7397  001BFC  9462               	bcf	3938,2,c	;volatile
  7398                           
  7399                           ; BSR set to: 15
  7400                           ;usb_device.c: 658: USBWakeFromSuspend();
  7401  001BFE  EC8F  F02D         	call	_USBWakeFromSuspend	;wreg free
  7402  001C02                     l1618:
  7403                           
  7404                           ;usb_device.c: 660: }
  7405                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7406  001C02  A265               	btfss	3941,1,c	;volatile
  7407  001C04  D002               	goto	l1619
  7408                           
  7409                           ;usb_device.c: 666: {
  7410                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7411  001C06  98A1               	bcf	4001,4,c	;volatile
  7412                           
  7413                           ;usb_device.c: 668: return;
  7414  001C08  0012               	return	
  7415  001C0A                     l1619:
  7416                           
  7417                           ;usb_device.c: 669: }
  7418                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7419  001C0A  A062               	btfss	3938,0,c	;volatile
  7420  001C0C  D009               	goto	l1620
  7421  001C0E  010F               	movlb	15	; () banked
  7422  001C10  A136               	btfss	54,0,b	;volatile
  7423  001C12  D006               	goto	l1620
  7424                           
  7425                           ; BSR set to: 15
  7426                           ;usb_device.c: 682: {
  7427                           ;usb_device.c: 683: USBDeviceInit();
  7428  001C14  ECC3  F010         	call	_USBDeviceInit	;wreg free
  7429                           
  7430                           ;usb_device.c: 687: ;
  7431                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7432  001C18  0E04               	movlw	4
  7433  001C1A  0100               	movlb	0	; () banked
  7434  001C1C  6FCD               	movwf	_USBDeviceState& (0+255),b
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;usb_device.c: 699: (UIR &= 0xFE);
  7438  001C1E  9062               	bcf	3938,0,c	;volatile
  7439  001C20                     l1620:
  7440                           
  7441                           ;usb_device.c: 700: }
  7442                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7443                           
  7444                           ; BSR set to: 0
  7445  001C20  A862               	btfss	3938,4,c	;volatile
  7446  001C22  D004               	goto	l1621
  7447  001C24  010F               	movlb	15	; () banked
  7448  001C26  B936               	btfsc	54,4,b	;volatile
  7449                           
  7450                           ; BSR set to: 15
  7451                           ;usb_device.c: 706: {
  7452                           ;usb_device.c: 712: USBSuspend();
  7453  001C28  EC36  F02E         	call	_USBSuspend	;wreg free
  7454  001C2C                     l1621:
  7455                           
  7456                           ;usb_device.c: 714: }
  7457                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7458  001C2C  AC62               	btfss	3938,6,c	;volatile
  7459  001C2E  D01D               	goto	l1625
  7460                           
  7461                           ;usb_device.c: 727: {
  7462                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7463  001C30  010F               	movlb	15	; () banked
  7464  001C32  AD36               	btfss	54,6,b	;volatile
  7465  001C34  D00F               	goto	l1623
  7466                           
  7467                           ; BSR set to: 15
  7468                           ;usb_device.c: 730: {
  7469                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7470  001C36  0E00               	movlw	0
  7471  001C38  0100               	movlb	0	; () banked
  7472  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7473  001C3C  0E73               	movlw	115
  7474  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7475  001C40  0E00               	movlw	0
  7476  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7477  001C44  0E00               	movlw	0
  7478  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7479  001C48  0E00               	movlw	0
  7480  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7481  001C4C  0E01               	movlw	1
  7482  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7483  001C50  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7484  001C54                     l1623:
  7485                           
  7486                           ;usb_device.c: 732: }
  7487                           ;usb_device.c: 733: (UIR &= 0xBF);
  7488  001C54  9C62               	bcf	3938,6,c	;volatile
  7489                           
  7490                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7491  001C56  ECB6  F02F         	call	_USBIncrement1msInternalTimers	;wreg free
  7492                           
  7493                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7494  001C5A  0100               	movlb	0	; () banked
  7495  001C5C  51C9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7496  001C5E  A4D8               	btfss	status,2,c
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;usb_device.c: 754: {
  7500                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7501  001C60  07C9               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;usb_device.c: 756: }
  7505                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7506                           
  7507                           ; BSR set to: 0
  7508  001C62  51C9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7509  001C64  B4D8               	btfsc	status,2,c
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;usb_device.c: 763: {
  7513                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7514  001C66  EC62  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7515  001C6A                     l1625:
  7516                           
  7517                           ;usb_device.c: 765: }
  7518                           ;usb_device.c: 767: }
  7519                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7520  001C6A  AA62               	btfss	3938,5,c	;volatile
  7521  001C6C  D004               	goto	l1626
  7522  001C6E  010F               	movlb	15	; () banked
  7523  001C70  BB36               	btfsc	54,5,b	;volatile
  7524                           
  7525                           ; BSR set to: 15
  7526                           ;usb_device.c: 770: {
  7527                           ;usb_device.c: 771: USBStallHandler();
  7528  001C72  EC09  F02C         	call	_USBStallHandler	;wreg free
  7529  001C76                     l1626:
  7530                           
  7531                           ;usb_device.c: 772: }
  7532                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7533  001C76  A262               	btfss	3938,1,c	;volatile
  7534  001C78  D013               	goto	l1627
  7535  001C7A  010F               	movlb	15	; () banked
  7536  001C7C  A336               	btfss	54,1,b	;volatile
  7537  001C7E  D010               	goto	l1627
  7538                           
  7539                           ; BSR set to: 15
  7540                           ;usb_device.c: 775: {
  7541                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7542  001C80  0E7F               	movlw	127
  7543  001C82  0100               	movlb	0	; () banked
  7544  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7545  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7546  001C88  0E00               	movlw	0
  7547  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7548  001C8C  0E00               	movlw	0
  7549  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7550  001C90  0E00               	movlw	0
  7551  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7552  001C94  0E01               	movlw	1
  7553  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7554  001C98  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7555                           
  7556                           ;usb_device.c: 777: {UEIR = 0;};
  7557  001C9C  0E00               	movlw	0
  7558  001C9E  6E63               	movwf	3939,c	;volatile
  7559  001CA0                     l1627:
  7560                           
  7561                           ;usb_device.c: 785: }
  7562                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7563  001CA0  0E04               	movlw	4
  7564  001CA2  0100               	movlb	0	; () banked
  7565  001CA4  61CD               	cpfslt	_USBDeviceState& (0+255),b
  7566  001CA6  D002               	goto	l1628
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;usb_device.c: 793: {
  7570                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7571  001CA8  98A1               	bcf	4001,4,c	;volatile
  7572                           
  7573                           ;usb_device.c: 795: return;
  7574  001CAA  0012               	return	
  7575  001CAC                     l1628:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;usb_device.c: 796: }
  7579                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7580  001CAC  010F               	movlb	15	; () banked
  7581  001CAE  A736               	btfss	54,3,b	;volatile
  7582  001CB0  D03E               	goto	u14190
  7583                           
  7584                           ; BSR set to: 15
  7585                           ;usb_device.c: 802: {
  7586                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7587  001CB2  0E00               	movlw	0
  7588  001CB4  0100               	movlb	0	; () banked
  7589  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7590  001CB8                     l14605:
  7591                           
  7592                           ; BSR set to: 0
  7593  001CB8  0E03               	movlw	3
  7594  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7595  001CBC  D001               	goto	l1630
  7596  001CBE  D037               	goto	u14190
  7597  001CC0                     l1630:
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;usb_device.c: 804: {
  7601                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7602  001CC0  A662               	btfss	3938,3,c	;volatile
  7603  001CC2  D035               	goto	u14190
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;usb_device.c: 806: {
  7607                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7608  001CC4  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7612  001CC8  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7613  001CCA  32E8               	rrcf	wreg,f,c
  7614  001CCC  32E8               	rrcf	wreg,f,c
  7615  001CCE  0B0F               	andlw	15
  7616  001CD0  6FCA               	movwf	_endpoint_number& (0+255),b
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;usb_device.c: 811: (UIR &= 0xF7);
  7620  001CD2  9662               	bcf	3938,3,c	;volatile
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7624  001CD4  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7625  001CD6  D007               	goto	l1633
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;usb_device.c: 817: {
  7629                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7630  001CD8  51CA               	movf	_endpoint_number& (0+255),w,b
  7631  001CDA  0D01               	mullw	1
  7632  001CDC  0ECE               	movlw	low _ep_data_out
  7633  001CDE  24F3               	addwf	prodl,w,c
  7634  001CE0  6ED9               	movwf	fsr2l,c
  7635  001CE2  0E02               	movlw	high _ep_data_out
  7636  001CE4  D007               	goto	L3
  7637  001CE6                     l1633:
  7638                           
  7639                           ;usb_device.c: 820: else
  7640                           ;usb_device.c: 821: {
  7641                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7642                           
  7643                           ; BSR set to: 2
  7644  001CE6  0100               	movlb	0	; () banked
  7645  001CE8  51CA               	movf	_endpoint_number& (0+255),w,b
  7646  001CEA  0D01               	mullw	1
  7647  001CEC  0ED1               	movlw	low _ep_data_in
  7648  001CEE  24F3               	addwf	prodl,w,c
  7649  001CF0  6ED9               	movwf	fsr2l,c
  7650  001CF2  0E02               	movlw	high _ep_data_in
  7651  001CF4                     L3:
  7652  001CF4  20F4               	addwfc	prodh,w,c
  7653  001CF6  6EDA               	movwf	fsr2h,c
  7654  001CF8  0102               	movlb	2	; () banked
  7655  001CFA  70DF               	btg	indf2,0,c
  7656                           
  7657                           ; BSR set to: 2
  7658                           ;usb_device.c: 823: }
  7659                           ;usb_device.c: 828: if(endpoint_number == 0)
  7660                           
  7661                           ; BSR set to: 2
  7662  001CFC  0100               	movlb	0	; () banked
  7663  001CFE  51CA               	movf	_endpoint_number& (0+255),w,b
  7664  001D00  A4D8               	btfss	status,2,c
  7665  001D02  D003               	goto	l1635
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;usb_device.c: 829: {
  7669                           ;usb_device.c: 830: USBCtrlEPService();
  7670  001D04  ECA0  F024         	call	_USBCtrlEPService	;wreg free
  7671                           
  7672                           ;usb_device.c: 831: }
  7673  001D08  D00F               	goto	l1637
  7674  001D0A                     l1635:
  7675                           
  7676                           ;usb_device.c: 832: else
  7677                           ;usb_device.c: 833: {
  7678                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7679  001D0A  0E00               	movlw	0
  7680  001D0C  0100               	movlb	0	; () banked
  7681  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7682  001D10  0E72               	movlw	114
  7683  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7684  001D14  0ED5               	movlw	low _USTATcopy
  7685  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7686  001D18  0E00               	movlw	high _USTATcopy
  7687  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7688  001D1C  0E00               	movlw	0
  7689  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7690  001D20  0E00               	movlw	0
  7691  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7692  001D24  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7693  001D28                     l1637:
  7694  001D28  0100               	movlb	0	; () banked
  7695  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7696  001D2C  D7C5               	goto	l14605
  7697  001D2E                     u14190:
  7698                           
  7699                           ;usb_device.c: 840: }
  7700                           ;usb_device.c: 841: }
  7701                           ;usb_device.c: 842: }
  7702                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7703                           
  7704                           ; BSR set to: 0
  7705  001D2E  98A1               	bcf	4001,4,c	;volatile
  7706  001D30  0012               	return		;funcret
  7707  001D32                     __end_of_USBDeviceTasks:
  7708                           	opt stack 0
  7709                           tosu	equ	0xFFF
  7710                           tosh	equ	0xFFE
  7711                           tosl	equ	0xFFD
  7712                           pclath	equ	0xFFA
  7713                           tblptru	equ	0xFF8
  7714                           tblptrh	equ	0xFF7
  7715                           tblptrl	equ	0xFF6
  7716                           tablat	equ	0xFF5
  7717                           prodh	equ	0xFF4
  7718                           prodl	equ	0xFF3
  7719                           intcon	equ	0xFF2
  7720                           intcon2	equ	0xFF1
  7721                           intcon3	equ	0xFF0
  7722                           postinc0	equ	0xFEE
  7723                           plusw0	equ	0xFEB
  7724                           wreg	equ	0xFE8
  7725                           postinc1	equ	0xFE6
  7726                           postdec1	equ	0xFE5
  7727                           fsr1h	equ	0xFE2
  7728                           fsr1l	equ	0xFE1
  7729                           indf2	equ	0xFDF
  7730                           postinc2	equ	0xFDE
  7731                           postdec2	equ	0xFDD
  7732                           plusw2	equ	0xFDB
  7733                           fsr2h	equ	0xFDA
  7734                           fsr2l	equ	0xFD9
  7735                           status	equ	0xFD8
  7736                           
  7737 ;; *************** function _USBWakeFromSuspend *****************
  7738 ;; Defined at:
  7739 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;		None
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;		None
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  1    wreg      void 
  7746 ;; Registers used:
  7747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;Total ram usage:        0 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:   15
  7760 ;; This function calls:
  7761 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7762 ;; This function is called by:
  7763 ;;		_USBDeviceTasks
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text29
  7768  005B1E                     __ptext29:
  7769                           	opt stack 0
  7770  005B1E                     _USBWakeFromSuspend:
  7771                           	opt stack 11
  7772                           
  7773                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7774                           
  7775                           ;incstack = 0
  7776  005B1E  0E00               	movlw	0
  7777  005B20  0101               	movlb	1	; () banked
  7778  005B22  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7779                           
  7780                           ; BSR set to: 1
  7781                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7782  005B24  0E00               	movlw	0
  7783  005B26  0100               	movlb	0	; () banked
  7784  005B28  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7785  005B2A  0E74               	movlw	116
  7786  005B2C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7787  005B2E  0E00               	movlw	0
  7788  005B30  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7789  005B32  0E00               	movlw	0
  7790  005B34  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7791  005B36  0E00               	movlw	0
  7792  005B38  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7793  005B3A  0E00               	movlw	0
  7794  005B3C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7795  005B3E  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7796                           
  7797                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7798  005B42  9265               	bcf	3941,1,c	;volatile
  7799                           
  7800                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7801  005B44  010F               	movlb	15	; () banked
  7802  005B46  9536               	bcf	54,2,b	;volatile
  7803                           
  7804                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7805  005B48  D001               	goto	l1765
  7806  005B4A                     
  7807                           ;usb_device.c: 2361: {
  7808                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7809                           
  7810                           ; BSR set to: 15
  7811  005B4A  9462               	bcf	3938,2,c	;volatile
  7812  005B4C                     l1765:
  7813  005B4C  B462               	btfsc	3938,2,c	;volatile
  7814  005B4E  D7FD               	goto	l1766
  7815                           
  7816                           ;usb_device.c: 2363: }
  7817                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7818  005B50  0E00               	movlw	0
  7819  005B52  0101               	movlb	1	; () banked
  7820  005B54  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7821                           
  7822                           ; BSR set to: 1
  7823  005B56  0012               	return		;funcret
  7824  005B58                     __end_of_USBWakeFromSuspend:
  7825                           	opt stack 0
  7826                           tosu	equ	0xFFF
  7827                           tosh	equ	0xFFE
  7828                           tosl	equ	0xFFD
  7829                           pclath	equ	0xFFA
  7830                           tblptru	equ	0xFF8
  7831                           tblptrh	equ	0xFF7
  7832                           tblptrl	equ	0xFF6
  7833                           tablat	equ	0xFF5
  7834                           prodh	equ	0xFF4
  7835                           prodl	equ	0xFF3
  7836                           intcon	equ	0xFF2
  7837                           intcon2	equ	0xFF1
  7838                           intcon3	equ	0xFF0
  7839                           postinc0	equ	0xFEE
  7840                           plusw0	equ	0xFEB
  7841                           wreg	equ	0xFE8
  7842                           postinc1	equ	0xFE6
  7843                           postdec1	equ	0xFE5
  7844                           fsr1h	equ	0xFE2
  7845                           fsr1l	equ	0xFE1
  7846                           indf2	equ	0xFDF
  7847                           postinc2	equ	0xFDE
  7848                           postdec2	equ	0xFDD
  7849                           plusw2	equ	0xFDB
  7850                           fsr2h	equ	0xFDA
  7851                           fsr2l	equ	0xFD9
  7852                           status	equ	0xFD8
  7853                           
  7854 ;; *************** function _USBSuspend *****************
  7855 ;; Defined at:
  7856 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;		None
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;		None
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  1    wreg      void 
  7863 ;; Registers used:
  7864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;Total ram usage:        0 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:   15
  7877 ;; This function calls:
  7878 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7879 ;; This function is called by:
  7880 ;;		_USBDeviceTasks
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text30
  7885  005C6C                     __ptext30:
  7886                           	opt stack 0
  7887  005C6C                     _USBSuspend:
  7888                           	opt stack 11
  7889                           
  7890                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7891                           
  7892                           ; BSR set to: 1
  7893                           ;incstack = 0
  7894  005C6C  010F               	movlb	15	; () banked
  7895  005C6E  8536               	bsf	54,2,b	;volatile
  7896                           
  7897                           ; BSR set to: 15
  7898                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7899  005C70  9862               	bcf	3938,4,c	;volatile
  7900                           
  7901                           ; BSR set to: 15
  7902                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7903  005C72  8265               	bsf	3941,1,c	;volatile
  7904                           
  7905                           ; BSR set to: 15
  7906                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7907  005C74  0E01               	movlw	1
  7908  005C76  0101               	movlb	1	; () banked
  7909  005C78  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7910                           
  7911                           ; BSR set to: 1
  7912                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7913  005C7A  0E00               	movlw	0
  7914  005C7C  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7915                           
  7916                           ; BSR set to: 1
  7917                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7918  005C7E  0E00               	movlw	0
  7919  005C80  0100               	movlb	0	; () banked
  7920  005C82  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7921  005C84  0E75               	movlw	117
  7922  005C86  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7923  005C88  0E00               	movlw	0
  7924  005C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7925  005C8C  0E00               	movlw	0
  7926  005C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7927  005C90  0E00               	movlw	0
  7928  005C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7929  005C94  0E00               	movlw	0
  7930  005C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7931  005C98  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7932  005C9C  0012               	return		;funcret
  7933  005C9E                     __end_of_USBSuspend:
  7934                           	opt stack 0
  7935                           tosu	equ	0xFFF
  7936                           tosh	equ	0xFFE
  7937                           tosl	equ	0xFFD
  7938                           pclath	equ	0xFFA
  7939                           tblptru	equ	0xFF8
  7940                           tblptrh	equ	0xFF7
  7941                           tblptrl	equ	0xFF6
  7942                           tablat	equ	0xFF5
  7943                           prodh	equ	0xFF4
  7944                           prodl	equ	0xFF3
  7945                           intcon	equ	0xFF2
  7946                           intcon2	equ	0xFF1
  7947                           intcon3	equ	0xFF0
  7948                           postinc0	equ	0xFEE
  7949                           plusw0	equ	0xFEB
  7950                           wreg	equ	0xFE8
  7951                           postinc1	equ	0xFE6
  7952                           postdec1	equ	0xFE5
  7953                           fsr1h	equ	0xFE2
  7954                           fsr1l	equ	0xFE1
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           plusw2	equ	0xFDB
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963 ;; *************** function _USBStallHandler *****************
  7964 ;; Defined at:
  7965 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      void 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7983 ;;Total ram usage:        1 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:   11
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_USBDeviceTasks
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text31
  7994  005812                     __ptext31:
  7995                           	opt stack 0
  7996  005812                     _USBStallHandler:
  7997                           	opt stack 15
  7998                           
  7999                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8000                           
  8001                           ;incstack = 0
  8002  005812  010F               	movlb	15	; () banked
  8003  005814  A126               	btfss	38,0,b	;volatile
  8004  005816  D01D               	goto	l1757
  8005                           
  8006                           ; BSR set to: 15
  8007                           ;usb_device.c: 2233: {
  8008                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8009  005818  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8010  00581C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8011  005820  0E80               	movlw	128
  8012  005822  18DE               	xorwf	postinc2,w,c
  8013  005824  A4D8               	btfss	status,2,c
  8014  005826  D014               	goto	l1758
  8015                           
  8016                           ; BSR set to: 15
  8017  005828  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8018  00582C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8019  005830  0E84               	movlw	132
  8020  005832  18DE               	xorwf	postinc2,w,c
  8021  005834  A4D8               	btfss	status,2,c
  8022  005836  D00C               	goto	l1758
  8023                           
  8024                           ; BSR set to: 15
  8025                           ;usb_device.c: 2236: {
  8026                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8027  005838  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8028  00583C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8029  005840  0E0C               	movlw	12
  8030  005842  6EDF               	movwf	indf2,c
  8031                           
  8032                           ; BSR set to: 15
  8033                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8034  005844  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8035  005848  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8036  00584C  0E00               	movlw	0
  8037  00584E  8EDB               	bsf	plusw2,7,c
  8038  005850                     l1758:
  8039                           
  8040                           ; BSR set to: 15
  8041                           ;usb_device.c: 2240: }
  8042                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8043                           
  8044                           ; BSR set to: 15
  8045  005850  9126               	bcf	38,0,b	;volatile
  8046  005852                     l1757:
  8047                           
  8048                           ; BSR set to: 15
  8049                           ;usb_device.c: 2242: }
  8050                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8051  005852  9A62               	bcf	3938,5,c	;volatile
  8052                           
  8053                           ; BSR set to: 15
  8054  005854  0012               	return		;funcret
  8055  005856                     __end_of_USBStallHandler:
  8056                           	opt stack 0
  8057                           tosu	equ	0xFFF
  8058                           tosh	equ	0xFFE
  8059                           tosl	equ	0xFFD
  8060                           pclath	equ	0xFFA
  8061                           tblptru	equ	0xFF8
  8062                           tblptrh	equ	0xFF7
  8063                           tblptrl	equ	0xFF6
  8064                           tablat	equ	0xFF5
  8065                           prodh	equ	0xFF4
  8066                           prodl	equ	0xFF3
  8067                           intcon	equ	0xFF2
  8068                           intcon2	equ	0xFF1
  8069                           intcon3	equ	0xFF0
  8070                           postinc0	equ	0xFEE
  8071                           plusw0	equ	0xFEB
  8072                           wreg	equ	0xFE8
  8073                           postinc1	equ	0xFE6
  8074                           postdec1	equ	0xFE5
  8075                           fsr1h	equ	0xFE2
  8076                           fsr1l	equ	0xFE1
  8077                           indf2	equ	0xFDF
  8078                           postinc2	equ	0xFDE
  8079                           postdec2	equ	0xFDD
  8080                           plusw2	equ	0xFDB
  8081                           fsr2h	equ	0xFDA
  8082                           fsr2l	equ	0xFD9
  8083                           status	equ	0xFD8
  8084                           
  8085 ;; *************** function _USBIncrement1msInternalTimers *****************
  8086 ;; Defined at:
  8087 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;		None
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;		None
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  1    wreg      void 
  8094 ;; Registers used:
  8095 ;;		wreg, status,2, status,0
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;Total ram usage:        0 bytes
  8106 ;; Hardware stack levels used:    1
  8107 ;; Hardware stack levels required when called:   11
  8108 ;; This function calls:
  8109 ;;		Nothing
  8110 ;; This function is called by:
  8111 ;;		_USBDeviceTasks
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text32
  8116  005F6C                     __ptext32:
  8117                           	opt stack 0
  8118  005F6C                     _USBIncrement1msInternalTimers:
  8119                           	opt stack 15
  8120                           
  8121                           ;usb_device.c: 3050: USB1msTickCount++;
  8122                           
  8123                           ; BSR set to: 15
  8124                           ;incstack = 0
  8125  005F6C  0E01               	movlw	1
  8126  005F6E  0103               	movlb	3	; () banked
  8127  005F70  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8128  005F72  0E00               	movlw	0
  8129  005F74  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8130  005F76  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8131  005F78  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8132                           
  8133                           ; BSR set to: 3
  8134                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8135  005F7A  0101               	movlb	1	; () banked
  8136  005F7C  51E5               	movf	_USBBusIsSuspended& (0+255),w,b
  8137  005F7E  A4D8               	btfss	status,2,c
  8138  005F80  0012               	return	
  8139                           
  8140                           ; BSR set to: 1
  8141                           ;usb_device.c: 3052: {
  8142                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8143  005F82  2BE3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8144                           
  8145                           ; BSR set to: 1
  8146                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8147  005F84  51E3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8148  005F86  A4D8               	btfss	status,2,c
  8149  005F88  0012               	return	
  8150                           
  8151                           ; BSR set to: 1
  8152                           ;usb_device.c: 3056: {
  8153                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8154  005F8A  69E3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8155                           
  8156                           ; BSR set to: 1
  8157  005F8C  0012               	return	
  8158  005F8E                     __end_of_USBIncrement1msInternalTimers:
  8159                           	opt stack 0
  8160                           tosu	equ	0xFFF
  8161                           tosh	equ	0xFFE
  8162                           tosl	equ	0xFFD
  8163                           pclath	equ	0xFFA
  8164                           tblptru	equ	0xFF8
  8165                           tblptrh	equ	0xFF7
  8166                           tblptrl	equ	0xFF6
  8167                           tablat	equ	0xFF5
  8168                           prodh	equ	0xFF4
  8169                           prodl	equ	0xFF3
  8170                           intcon	equ	0xFF2
  8171                           intcon2	equ	0xFF1
  8172                           intcon3	equ	0xFF0
  8173                           postinc0	equ	0xFEE
  8174                           plusw0	equ	0xFEB
  8175                           wreg	equ	0xFE8
  8176                           postinc1	equ	0xFE6
  8177                           postdec1	equ	0xFE5
  8178                           fsr1h	equ	0xFE2
  8179                           fsr1l	equ	0xFE1
  8180                           indf2	equ	0xFDF
  8181                           postinc2	equ	0xFDE
  8182                           postdec2	equ	0xFDD
  8183                           plusw2	equ	0xFDB
  8184                           fsr2h	equ	0xFDA
  8185                           fsr2l	equ	0xFD9
  8186                           status	equ	0xFD8
  8187                           
  8188 ;; *************** function _USBDeviceInit *****************
  8189 ;; Defined at:
  8190 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;		None
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  i               1   37[BANK0 ] unsigned char 
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  1    wreg      void 
  8197 ;; Registers used:
  8198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8207 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;Total ram usage:        1 bytes
  8209 ;; Hardware stack levels used:    1
  8210 ;; Hardware stack levels required when called:   12
  8211 ;; This function calls:
  8212 ;;		_memset
  8213 ;; This function is called by:
  8214 ;;		_USBDeviceTasks
  8215 ;;		_UsbDevice_MainTask
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text33
  8220  002186                     __ptext33:
  8221                           	opt stack 0
  8222  002186                     _USBDeviceInit:
  8223                           	opt stack 14
  8224                           
  8225                           ;usb_device.c: 297: uint8_t i;
  8226                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;incstack = 0
  8230  002186  98A0               	bcf	4000,4,c	;volatile
  8231                           
  8232                           ;usb_device.c: 303: ;
  8233                           ;usb_device.c: 306: {UEIR = 0;};
  8234  002188  0E00               	movlw	0
  8235  00218A  6E63               	movwf	3939,c	;volatile
  8236                           
  8237                           ;usb_device.c: 309: {UIR = 0;};
  8238  00218C  0E00               	movlw	0
  8239  00218E  6E62               	movwf	3938,c	;volatile
  8240                           
  8241                           ;usb_device.c: 312: UEP0 = 0;
  8242  002190  0E00               	movlw	0
  8243  002192  010F               	movlb	15	; () banked
  8244  002194  6F26               	movwf	38,b	;volatile
  8245                           
  8246                           ; BSR set to: 15
  8247                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8248  002196  0E27               	movlw	39
  8249  002198  0100               	movlb	0	; () banked
  8250  00219A  6F7D               	movwf	memset@p1& (0+255),b
  8251  00219C  0E0F               	movlw	15
  8252  00219E  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8253  0021A0  0E00               	movlw	0
  8254  0021A2  6F80               	movwf	(memset@c+1)& (0+255),b
  8255  0021A4  0E00               	movlw	0
  8256  0021A6  6F7F               	movwf	memset@c& (0+255),b
  8257  0021A8  0E00               	movlw	0
  8258  0021AA  6F82               	movwf	(memset@n+1)& (0+255),b
  8259  0021AC  0E02               	movlw	2
  8260  0021AE  6F81               	movwf	memset@n& (0+255),b
  8261  0021B0  EC80  F02E         	call	_memset	;wreg free
  8262                           
  8263                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8264  0021B4  0E16               	movlw	22
  8265  0021B6  010F               	movlb	15	; () banked
  8266  0021B8  6F39               	movwf	57,b	;volatile
  8267                           
  8268                           ; BSR set to: 15
  8269  0021BA  0E9F               	movlw	159
  8270  0021BC  6F37               	movwf	55,b	;volatile
  8271                           
  8272                           ; BSR set to: 15
  8273  0021BE  0E7B               	movlw	123
  8274  0021C0  6F36               	movwf	54,b	;volatile
  8275                           
  8276                           ; BSR set to: 15
  8277                           ;usb_device.c: 319: ;
  8278                           ;usb_device.c: 322: ;
  8279                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8280  0021C2  0E00               	movlw	0
  8281  0021C4  0100               	movlb	0	; () banked
  8282  0021C6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8283  0021C8                     l13423:
  8284                           
  8285                           ; BSR set to: 0
  8286  0021C8  0E0B               	movlw	11
  8287  0021CA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8288  0021CC  D001               	goto	l1601
  8289  0021CE  D00E               	goto	u12510
  8290  0021D0                     l1601:
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;usb_device.c: 326: {
  8294                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8295                           
  8296                           ; BSR set to: 0
  8297  0021D0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8298  0021D2  0D04               	mullw	4
  8299  0021D4  0E00               	movlw	0
  8300  0021D6  24F3               	addwf	prodl,w,c
  8301  0021D8  6ED9               	movwf	fsr2l,c
  8302  0021DA  0E04               	movlw	4
  8303  0021DC  20F4               	addwfc	prodh,w,c
  8304  0021DE  6EDA               	movwf	fsr2h,c
  8305  0021E0  6ADE               	clrf	postinc2,c
  8306  0021E2  6ADE               	clrf	postinc2,c
  8307  0021E4  6ADE               	clrf	postinc2,c
  8308  0021E6  6ADD               	clrf	postdec2,c
  8309                           
  8310                           ; BSR set to: 0
  8311  0021E8  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8312  0021EA  D7EE               	goto	l13423
  8313  0021EC                     u12510:
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;usb_device.c: 328: }
  8317                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8318  0021EC  8C65               	bsf	3941,6,c	;volatile
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;usb_device.c: 334: UADDR = 0x00;
  8322  0021EE  0E00               	movlw	0
  8323  0021F0  010F               	movlb	15	; () banked
  8324  0021F2  6F38               	movwf	56,b	;volatile
  8325                           
  8326                           ; BSR set to: 15
  8327                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8328  0021F4  9865               	bcf	3941,4,c	;volatile
  8329                           
  8330                           ; BSR set to: 15
  8331                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8332  0021F6  9C65               	bcf	3941,6,c	;volatile
  8333  0021F8                     
  8334                           ;usb_device.c: 344: {
  8335                           ;usb_device.c: 345: (UIR &= 0xF7);
  8336                           
  8337                           ; BSR set to: 15
  8338  0021F8  9662               	bcf	3938,3,c	;volatile
  8339                           
  8340                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8341  0021FA  0E00               	movlw	0
  8342  0021FC  0100               	movlb	0	; () banked
  8343  0021FE  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8347  002200  0E00               	movlw	0
  8348  002202  0101               	movlb	1	; () banked
  8349  002204  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8353  002206  0E00               	movlw	0
  8354  002208  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8355  00220A  0E00               	movlw	0
  8356  00220C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8357                           
  8358                           ; BSR set to: 1
  8359                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8360  00220E  B662               	btfsc	3938,3,c	;volatile
  8361  002210  D7F3               	goto	l1603
  8362                           
  8363                           ; BSR set to: 1
  8364                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8365                           
  8366                           ; BSR set to: 1
  8367  002212  0E01               	movlw	1
  8368  002214  0100               	movlb	0	; () banked
  8369  002216  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8370                           
  8371                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8372  002218  0E01               	movlw	1
  8373  00221A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8374                           
  8375                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8376  00221C  0E00               	movlw	0
  8377  00221E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8378                           
  8379                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8380  002220  0E00               	movlw	0
  8381  002222  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8382                           
  8383                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8384  002224  0E00               	movlw	0
  8385  002226  0101               	movlb	1	; () banked
  8386  002228  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  8387                           
  8388                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8389  00222A  0E00               	movlw	0
  8390  00222C  0100               	movlb	0	; () banked
  8391  00222E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8392  002230                     l13451:
  8393                           
  8394                           ; BSR set to: 0
  8395  002230  0E02               	movlw	2
  8396  002232  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8397  002234  D001               	goto	l1605
  8398  002236  D02E               	goto	u12540
  8399  002238                     l1605:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;usb_device.c: 364: {
  8403                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8404                           
  8405                           ; BSR set to: 0
  8406  002238  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8407  00223A  0D02               	mullw	2
  8408  00223C  0EB6               	movlw	low _pBDTEntryIn
  8409  00223E  24F3               	addwf	prodl,w,c
  8410  002240  6ED9               	movwf	fsr2l,c
  8411  002242  0E00               	movlw	high _pBDTEntryIn
  8412  002244  20F4               	addwfc	prodh,w,c
  8413  002246  6EDA               	movwf	fsr2h,c
  8414  002248  0E00               	movlw	0
  8415  00224A  6EDE               	movwf	postinc2,c
  8416  00224C  0E00               	movlw	0
  8417  00224E  6EDD               	movwf	postdec2,c
  8418                           
  8419                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8420  002250  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8421  002252  0D02               	mullw	2
  8422  002254  0E0E               	movlw	low _pBDTEntryOut
  8423  002256  24F3               	addwf	prodl,w,c
  8424  002258  6ED9               	movwf	fsr2l,c
  8425  00225A  0E03               	movlw	high _pBDTEntryOut
  8426  00225C  20F4               	addwfc	prodh,w,c
  8427  00225E  6EDA               	movwf	fsr2h,c
  8428  002260  0E00               	movlw	0
  8429  002262  6EDE               	movwf	postinc2,c
  8430  002264  0E00               	movlw	0
  8431  002266  6EDD               	movwf	postdec2,c
  8432                           
  8433                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8434  002268  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8435  00226A  0D01               	mullw	1
  8436  00226C  0ED1               	movlw	low _ep_data_in
  8437  00226E  24F3               	addwf	prodl,w,c
  8438  002270  6ED9               	movwf	fsr2l,c
  8439  002272  0E02               	movlw	high _ep_data_in
  8440  002274  20F4               	addwfc	prodh,w,c
  8441  002276  6EDA               	movwf	fsr2h,c
  8442  002278  0E00               	movlw	0
  8443  00227A  6EDF               	movwf	indf2,c
  8444                           
  8445                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8446  00227C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8447  00227E  0D01               	mullw	1
  8448  002280  0ECE               	movlw	low _ep_data_out
  8449  002282  24F3               	addwf	prodl,w,c
  8450  002284  6ED9               	movwf	fsr2l,c
  8451  002286  0E02               	movlw	high _ep_data_out
  8452  002288  20F4               	addwfc	prodh,w,c
  8453  00228A  6EDA               	movwf	fsr2h,c
  8454  00228C  0E00               	movlw	0
  8455  00228E  6EDF               	movwf	indf2,c
  8456                           
  8457                           ; BSR set to: 0
  8458  002290  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8459  002292  D7CE               	goto	l13451
  8460  002294                     u12540:
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;usb_device.c: 369: }
  8464                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8465                           
  8466                           ; BSR set to: 0
  8467  002294  0E08               	movlw	8
  8468  002296  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8469  002298  0E04               	movlw	4
  8470  00229A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8474  00229C  0E16               	movlw	22
  8475  00229E  010F               	movlb	15	; () banked
  8476  0022A0  6F26               	movwf	38,b	;volatile
  8477                           
  8478                           ; BSR set to: 15
  8479                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8480  0022A2  0E04               	movlw	4
  8481  0022A4  0104               	movlb	4	; () banked
  8482  0022A6  6F03               	movwf	3,b	;volatile
  8483  0022A8  0E30               	movlw	48
  8484  0022AA  6F02               	movwf	2,b	;volatile
  8485                           
  8486                           ; BSR set to: 4
  8487                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8488  0022AC  0E08               	movlw	8
  8489  0022AE  6F01               	movwf	1,b	;volatile
  8490                           
  8491                           ; BSR set to: 4
  8492                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8493  0022B0  0E04               	movlw	4
  8494  0022B2  6F00               	movwf	0,b	;volatile
  8495                           
  8496                           ; BSR set to: 4
  8497                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8498  0022B4  8F00               	bsf	0,7,b	;volatile
  8499                           
  8500                           ; BSR set to: 4
  8501                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8502  0022B6  0E00               	movlw	0
  8503  0022B8  0100               	movlb	0	; () banked
  8504  0022BA  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;usb_device.c: 384: USB1msTickCount = 0;
  8508  0022BC  0E00               	movlw	0
  8509  0022BE  0103               	movlb	3	; () banked
  8510  0022C0  6F18               	movwf	_USB1msTickCount& (0+255),b
  8511  0022C2  0E00               	movlw	0
  8512  0022C4  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8513  0022C6  0E00               	movlw	0
  8514  0022C8  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8515  0022CA  0E00               	movlw	0
  8516  0022CC  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8517                           
  8518                           ; BSR set to: 3
  8519                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8520  0022CE  0E00               	movlw	0
  8521  0022D0  0101               	movlb	1	; () banked
  8522  0022D2  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8523                           
  8524                           ; BSR set to: 1
  8525                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8526  0022D4  0E00               	movlw	0
  8527  0022D6  0100               	movlb	0	; () banked
  8528  0022D8  6FCD               	movwf	_USBDeviceState& (0+255),b
  8529                           
  8530                           ; BSR set to: 0
  8531  0022DA  0012               	return		;funcret
  8532  0022DC                     __end_of_USBDeviceInit:
  8533                           	opt stack 0
  8534                           tosu	equ	0xFFF
  8535                           tosh	equ	0xFFE
  8536                           tosl	equ	0xFFD
  8537                           pclath	equ	0xFFA
  8538                           tblptru	equ	0xFF8
  8539                           tblptrh	equ	0xFF7
  8540                           tblptrl	equ	0xFF6
  8541                           tablat	equ	0xFF5
  8542                           prodh	equ	0xFF4
  8543                           prodl	equ	0xFF3
  8544                           intcon	equ	0xFF2
  8545                           intcon2	equ	0xFF1
  8546                           intcon3	equ	0xFF0
  8547                           postinc0	equ	0xFEE
  8548                           plusw0	equ	0xFEB
  8549                           wreg	equ	0xFE8
  8550                           postinc1	equ	0xFE6
  8551                           postdec1	equ	0xFE5
  8552                           fsr1h	equ	0xFE2
  8553                           fsr1l	equ	0xFE1
  8554                           indf2	equ	0xFDF
  8555                           postinc2	equ	0xFDE
  8556                           postdec2	equ	0xFDD
  8557                           plusw2	equ	0xFDB
  8558                           fsr2h	equ	0xFDA
  8559                           fsr2l	equ	0xFD9
  8560                           status	equ	0xFD8
  8561                           
  8562 ;; *************** function _USBCtrlEPService *****************
  8563 ;; Defined at:
  8564 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;		None
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8580 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8582 ;;Total ram usage:        1 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:   18
  8585 ;; This function calls:
  8586 ;;		_USBCtrlTrfInHandler
  8587 ;;		_USBCtrlTrfOutHandler
  8588 ;;		_USBCtrlTrfSetupHandler
  8589 ;;		_memcpy
  8590 ;; This function is called by:
  8591 ;;		_USBDeviceTasks
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text34
  8596  004940                     __ptext34:
  8597                           	opt stack 0
  8598  004940                     _USBCtrlEPService:
  8599                           	opt stack 8
  8600                           
  8601                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;incstack = 0
  8605  004940  0E2D               	movlw	45
  8606  004942  0100               	movlb	0	; () banked
  8607  004944  6FC9               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8611  004946  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8612  00494A  0EFD               	movlw	253
  8613  00494C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8614  00494E  A4D8               	btfss	status,2,c
  8615  004950  D038               	goto	l1771
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;usb_device.c: 2401: {
  8619                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8620  004952  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8621  004956  90D8               	bcf	status,0,c
  8622  004958  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8623  00495A  0E3F               	movlw	63
  8624  00495C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8625  00495E  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8626  004960  0D04               	mullw	4
  8627  004962  0E00               	movlw	0
  8628  004964  24F3               	addwf	prodl,w,c
  8629  004966  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8630  004968  0E04               	movlw	4
  8631  00496A  20F4               	addwfc	prodh,w,c
  8632  00496C  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8636  00496E  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8637  004972  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8641  004976  0E04               	movlw	4
  8642  004978  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8646  00497A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8647  00497E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8648  004982  30DF               	rrcf	223,w,c
  8649  004984  32E8               	rrcf	wreg,f,c
  8650  004986  0B0F               	andlw	15
  8651  004988  0A0D               	xorlw	13
  8652  00498A  A4D8               	btfss	status,2,c
  8653  00498C  D017               	goto	l1772
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;usb_device.c: 2418: {
  8657                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8658  00498E  0E30               	movlw	48
  8659  004990  6F7D               	movwf	memcpy@d1& (0+255),b
  8660  004992  0E04               	movlw	4
  8661  004994  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8662  004996  EE20 F002          	lfsr	2,2
  8663  00499A  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8664  00499C  26D9               	addwf	fsr2l,f,c
  8665  00499E  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8666  0049A0  22DA               	addwfc	fsr2h,f,c
  8667  0049A2  CFDE F07F          	movff	postinc2,memcpy@s1
  8668  0049A6  CFDD F080          	movff	postdec2,memcpy@s1+1
  8669  0049AA  0E00               	movlw	0
  8670  0049AC  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8671  0049AE  0E08               	movlw	8
  8672  0049B0  6F81               	movwf	memcpy@n& (0+255),b
  8673  0049B2  EC9F  F02B         	call	_memcpy	;wreg free
  8674                           
  8675                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8676  0049B6  ECC3  F025         	call	_USBCtrlTrfSetupHandler	;wreg free
  8677                           
  8678                           ;usb_device.c: 2427: }
  8679  0049BA  0012               	return	
  8680  0049BC                     l1772:
  8681                           
  8682                           ;usb_device.c: 2428: else
  8683                           ;usb_device.c: 2429: {
  8684                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8685  0049BC  ECE5  F027         	call	_USBCtrlTrfOutHandler	;wreg free
  8686                           
  8687                           ;usb_device.c: 2432: }
  8688                           ;usb_device.c: 2433: }
  8689  0049C0  0012               	return	
  8690  0049C2                     l1771:
  8691                           
  8692                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8693  0049C2  0100               	movlb	0	; () banked
  8694  0049C4  51D5               	movf	_USTATcopy& (0+255),w,b
  8695  0049C6  0BFD               	andlw	253
  8696  0049C8  0A04               	xorlw	4
  8697  0049CA  A4D8               	btfss	status,2,c
  8698  0049CC  0012               	return	
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;usb_device.c: 2435: {
  8702                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8703  0049CE  ECBB  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8704  0049D2  0012               	return	
  8705  0049D4                     __end_of_USBCtrlEPService:
  8706                           	opt stack 0
  8707                           tosu	equ	0xFFF
  8708                           tosh	equ	0xFFE
  8709                           tosl	equ	0xFFD
  8710                           pclath	equ	0xFFA
  8711                           tblptru	equ	0xFF8
  8712                           tblptrh	equ	0xFF7
  8713                           tblptrl	equ	0xFF6
  8714                           tablat	equ	0xFF5
  8715                           prodh	equ	0xFF4
  8716                           prodl	equ	0xFF3
  8717                           intcon	equ	0xFF2
  8718                           intcon2	equ	0xFF1
  8719                           intcon3	equ	0xFF0
  8720                           postinc0	equ	0xFEE
  8721                           plusw0	equ	0xFEB
  8722                           wreg	equ	0xFE8
  8723                           postinc1	equ	0xFE6
  8724                           postdec1	equ	0xFE5
  8725                           fsr1h	equ	0xFE2
  8726                           fsr1l	equ	0xFE1
  8727                           indf2	equ	0xFDF
  8728                           postinc2	equ	0xFDE
  8729                           postdec2	equ	0xFDD
  8730                           plusw2	equ	0xFDB
  8731                           fsr2h	equ	0xFDA
  8732                           fsr2l	equ	0xFD9
  8733                           status	equ	0xFD8
  8734                           
  8735 ;; *************** function _memcpy *****************
  8736 ;; Defined at:
  8737 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  d1              2   29[BANK0 ] PTR void 
  8740 ;;		 -> SetupPkt(8), 
  8741 ;;  s1              2   31[BANK0 ] PTR const void 
  8742 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8743 ;;  n               2   33[BANK0 ] unsigned int 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8746 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8747 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8748 ;;		 -> SetupPkt(8), 
  8749 ;;  tmp             1   35[BANK0 ] unsigned char 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  2   29[BANK0 ] PTR void 
  8752 ;; Registers used:
  8753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8759 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8760 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8762 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8763 ;;Total ram usage:       11 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:   11
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_USBCtrlEPService
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text35
  8774  00573E                     __ptext35:
  8775                           	opt stack 0
  8776  00573E                     _memcpy:
  8777                           	opt stack 14
  8778                           
  8779                           ;incstack = 0
  8780  00573E  C07F  F086         	movff	memcpy@s1,memcpy@s
  8781  005742  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8782  005746  C07D  F084         	movff	memcpy@d1,memcpy@d
  8783  00574A  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8784  00574E  D011               	goto	l3104
  8785  005750                     l12671:
  8786  005750  C086  FFD9         	movff	memcpy@s,fsr2l
  8787  005754  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8788  005758  50DF               	movf	indf2,w,c
  8789  00575A  0100               	movlb	0	; () banked
  8790  00575C  6F83               	movwf	memcpy@tmp& (0+255),b
  8791                           
  8792                           ; BSR set to: 0
  8793  00575E  4B86               	infsnz	memcpy@s& (0+255),f,b
  8794  005760  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8795                           
  8796                           ; BSR set to: 0
  8797  005762  C084  FFD9         	movff	memcpy@d,fsr2l
  8798  005766  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8799  00576A  C083  FFDF         	movff	memcpy@tmp,indf2
  8800                           
  8801                           ; BSR set to: 0
  8802  00576E  4B84               	infsnz	memcpy@d& (0+255),f,b
  8803  005770  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8804  005772                     l3104:
  8805                           
  8806                           ; BSR set to: 0
  8807  005772  0100               	movlb	0	; () banked
  8808  005774  0781               	decf	memcpy@n& (0+255),f,b
  8809  005776  A0D8               	btfss	status,0,c
  8810  005778  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8811  00577A  2981               	incf	memcpy@n& (0+255),w,b
  8812  00577C  E1E9               	bnz	l12671
  8813  00577E  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8814  005780  B4D8               	btfsc	status,2,c
  8815  005782  0012               	return	
  8816  005784  D7E5               	goto	l3105
  8817  005786                     __end_of_memcpy:
  8818                           	opt stack 0
  8819                           tosu	equ	0xFFF
  8820                           tosh	equ	0xFFE
  8821                           tosl	equ	0xFFD
  8822                           pclath	equ	0xFFA
  8823                           tblptru	equ	0xFF8
  8824                           tblptrh	equ	0xFF7
  8825                           tblptrl	equ	0xFF6
  8826                           tablat	equ	0xFF5
  8827                           prodh	equ	0xFF4
  8828                           prodl	equ	0xFF3
  8829                           intcon	equ	0xFF2
  8830                           intcon2	equ	0xFF1
  8831                           intcon3	equ	0xFF0
  8832                           postinc0	equ	0xFEE
  8833                           plusw0	equ	0xFEB
  8834                           wreg	equ	0xFE8
  8835                           postinc1	equ	0xFE6
  8836                           postdec1	equ	0xFE5
  8837                           fsr1h	equ	0xFE2
  8838                           fsr1l	equ	0xFE1
  8839                           indf2	equ	0xFDF
  8840                           postinc2	equ	0xFDE
  8841                           postdec2	equ	0xFDD
  8842                           plusw2	equ	0xFDB
  8843                           fsr2h	equ	0xFDA
  8844                           fsr2l	equ	0xFD9
  8845                           status	equ	0xFD8
  8846                           
  8847 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8848 ;; Defined at:
  8849 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; Hardware stack levels required when called:   17
  8870 ;; This function calls:
  8871 ;;		_USBCheckStdRequest
  8872 ;;		_USBCtrlEPServiceComplete
  8873 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8874 ;; This function is called by:
  8875 ;;		_USBCtrlEPService
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text36
  8880  004B86                     __ptext36:
  8881                           	opt stack 0
  8882  004B86                     _USBCtrlTrfSetupHandler:
  8883                           	opt stack 8
  8884                           
  8885                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;incstack = 0
  8889  004B86  0E00               	movlw	0
  8890  004B88  0100               	movlb	0	; () banked
  8891  004B8A  6FCC               	movwf	_shortPacketStatus& (0+255),b
  8892                           
  8893                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8894  004B8C  0E00               	movlw	0
  8895  004B8E  6FC8               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8896                           
  8897                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8898  004B90  0E00               	movlw	0
  8899  004B92  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8900                           
  8901                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8902  004B94  0E00               	movlw	0
  8903  004B96  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8904                           
  8905                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8906  004B98  0E00               	movlw	0
  8907  004B9A  0101               	movlb	1	; () banked
  8908  004B9C  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8909                           
  8910                           ;usb_device.c: 2493: controlTransferState = 0;
  8911  004B9E  0E00               	movlw	0
  8912  004BA0  0100               	movlb	0	; () banked
  8913  004BA2  6FCB               	movwf	_controlTransferState& (0+255),b
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8917  004BA4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8918  004BA8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8919  004BAC  0E7F               	movlw	127
  8920  004BAE  16DF               	andwf	indf2,f,c
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8924  004BB0  0E04               	movlw	4
  8925  004BB2  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8929  004BB4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8930  004BB8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8931  004BBC  0E7F               	movlw	127
  8932  004BBE  16DF               	andwf	indf2,f,c
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8936  004BC0  0E04               	movlw	4
  8937  004BC2  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8941  004BC4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8942  004BC8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8943  004BCC  0E7F               	movlw	127
  8944  004BCE  16DF               	andwf	indf2,f,c
  8945                           
  8946                           ; BSR set to: 0
  8947                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8948  004BD0  0E00               	movlw	0
  8949  004BD2  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8953  004BD4  0E00               	movlw	0
  8954  004BD6  6FB5               	movwf	(_inPipes+5)& (0+255),b
  8955  004BD8  0E00               	movlw	0
  8956  004BDA  6FB4               	movwf	(_inPipes+4)& (0+255),b
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8960  004BDC  0E00               	movlw	0
  8961  004BDE  0101               	movlb	1	; () banked
  8962  004BE0  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8963                           
  8964                           ; BSR set to: 1
  8965                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8966  004BE2  0E00               	movlw	0
  8967  004BE4  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8968  004BE6  0E00               	movlw	0
  8969  004BE8  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8970                           
  8971                           ; BSR set to: 1
  8972                           ;usb_device.c: 2517: USBCheckStdRequest();
  8973  004BEA  EC7B  F01A         	call	_USBCheckStdRequest	;wreg free
  8974                           
  8975                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8976  004BEE  0E00               	movlw	0
  8977  004BF0  0100               	movlb	0	; () banked
  8978  004BF2  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8979  004BF4  0E03               	movlw	3
  8980  004BF6  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8981  004BF8  0E00               	movlw	0
  8982  004BFA  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8983  004BFC  0E00               	movlw	0
  8984  004BFE  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8985  004C00  0E00               	movlw	0
  8986  004C02  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8987  004C04  0E00               	movlw	0
  8988  004C06  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8989  004C08  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8990                           
  8991                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8992  004C0C  EC2A  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  8993  004C10  0012               	return		;funcret
  8994  004C12                     __end_of_USBCtrlTrfSetupHandler:
  8995                           	opt stack 0
  8996                           tosu	equ	0xFFF
  8997                           tosh	equ	0xFFE
  8998                           tosl	equ	0xFFD
  8999                           pclath	equ	0xFFA
  9000                           tblptru	equ	0xFF8
  9001                           tblptrh	equ	0xFF7
  9002                           tblptrl	equ	0xFF6
  9003                           tablat	equ	0xFF5
  9004                           prodh	equ	0xFF4
  9005                           prodl	equ	0xFF3
  9006                           intcon	equ	0xFF2
  9007                           intcon2	equ	0xFF1
  9008                           intcon3	equ	0xFF0
  9009                           postinc0	equ	0xFEE
  9010                           plusw0	equ	0xFEB
  9011                           wreg	equ	0xFE8
  9012                           postinc1	equ	0xFE6
  9013                           postdec1	equ	0xFE5
  9014                           fsr1h	equ	0xFE2
  9015                           fsr1l	equ	0xFE1
  9016                           indf2	equ	0xFDF
  9017                           postinc2	equ	0xFDE
  9018                           postdec2	equ	0xFDD
  9019                           plusw2	equ	0xFDB
  9020                           fsr2h	equ	0xFDA
  9021                           fsr2l	equ	0xFD9
  9022                           status	equ	0xFD8
  9023                           
  9024 ;; *************** function _USBCtrlEPServiceComplete *****************
  9025 ;; Defined at:
  9026 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;		None
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9044 ;;Total ram usage:        0 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:   13
  9047 ;; This function calls:
  9048 ;;		_USBCtrlEPAllowDataStage
  9049 ;;		_USBCtrlEPAllowStatusStage
  9050 ;; This function is called by:
  9051 ;;		_USBCtrlTrfSetupHandler
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text37
  9056  003054                     __ptext37:
  9057                           	opt stack 0
  9058  003054                     _USBCtrlEPServiceComplete:
  9059                           	opt stack 11
  9060                           
  9061                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9062                           
  9063                           ;incstack = 0
  9064  003054  9865               	bcf	3941,4,c	;volatile
  9065                           
  9066                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9067  003056  0100               	movlb	0	; () banked
  9068  003058  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9069  00305A  D03C               	goto	l1681
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;usb_device.c: 1647: {
  9073                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9074  00305C  0101               	movlb	1	; () banked
  9075  00305E  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9076  003060  D00D               	goto	l1682
  9077                           
  9078                           ; BSR set to: 1
  9079                           ;usb_device.c: 1649: {
  9080                           ;usb_device.c: 1650: controlTransferState = 2;
  9081  003062  0E02               	movlw	2
  9082  003064  0100               	movlb	0	; () banked
  9083  003066  6FCB               	movwf	_controlTransferState& (0+255),b
  9084                           
  9085                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9086  003068  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9087  00306A  B4D8               	btfsc	status,2,c
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;usb_device.c: 1662: {
  9091                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9092  00306C  EC20  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9093                           
  9094                           ;usb_device.c: 1664: }
  9095                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9096  003070  0E00               	movlw	0
  9097  003072  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9098                           
  9099                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9100  003074  0E00               	movlw	0
  9101  003076  0100               	movlb	0	; () banked
  9102  003078  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9103                           
  9104                           ;usb_device.c: 1670: }
  9105  00307A  0012               	return	
  9106  00307C                     l1682:
  9107                           
  9108                           ;usb_device.c: 1671: else
  9109                           ;usb_device.c: 1672: {
  9110                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9111                           
  9112                           ; BSR set to: 0
  9113  00307C  0100               	movlb	0	; () banked
  9114  00307E  EE20 F001          	lfsr	2,1
  9115  003082  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9116  003084  26D9               	addwf	fsr2l,f,c
  9117  003086  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9118  003088  22DA               	addwfc	fsr2h,f,c
  9119  00308A  0E08               	movlw	8
  9120  00308C  6EDF               	movwf	indf2,c
  9121                           
  9122                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9123  00308E  EE20 F002          	lfsr	2,2
  9124  003092  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9125  003094  26D9               	addwf	fsr2l,f,c
  9126  003096  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9127  003098  22DA               	addwfc	fsr2h,f,c
  9128  00309A  0E30               	movlw	48
  9129  00309C  6EDE               	movwf	postinc2,c
  9130  00309E  0E04               	movlw	4
  9131  0030A0  6EDD               	movwf	postdec2,c
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9135  0030A2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9136  0030A6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9137  0030AA  0E0C               	movlw	12
  9138  0030AC  6EDF               	movwf	indf2,c
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9142  0030AE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9143  0030B2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9144  0030B6  0E00               	movlw	0
  9145  0030B8  8EDB               	bsf	plusw2,7,c
  9146                           
  9147                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9148  0030BA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9149  0030BE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9150  0030C2  0E04               	movlw	4
  9151  0030C4  6EDF               	movwf	indf2,c
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9155  0030C6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9156  0030CA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9157  0030CE  0E00               	movlw	0
  9158  0030D0  8EDB               	bsf	plusw2,7,c
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;usb_device.c: 1683: }
  9162                           ;usb_device.c: 1684: }
  9163  0030D2  0012               	return	
  9164  0030D4                     l1681:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;usb_device.c: 1685: else
  9168                           ;usb_device.c: 1686: {
  9169                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9170  0030D4  0104               	movlb	4	; () banked
  9171  0030D6  AF30               	btfss	48,7,b	;volatile
  9172  0030D8  D012               	goto	l1686
  9173                           
  9174                           ; BSR set to: 4
  9175                           ;usb_device.c: 1688: {
  9176                           ;usb_device.c: 1689: controlTransferState = 1;
  9177  0030DA  0E01               	movlw	1
  9178  0030DC  0100               	movlb	0	; () banked
  9179  0030DE  6FCB               	movwf	_controlTransferState& (0+255),b
  9180                           
  9181                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9182  0030E0  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9183  0030E2  B4D8               	btfsc	status,2,c
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;usb_device.c: 1704: {
  9187                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9188  0030E4  EC20  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9189                           
  9190                           ;usb_device.c: 1706: }
  9191                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9192  0030E8  0E00               	movlw	0
  9193  0030EA  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9194                           
  9195                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9196  0030EC  0E00               	movlw	0
  9197  0030EE  0100               	movlb	0	; () banked
  9198  0030F0  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9199                           
  9200                           ; BSR set to: 0
  9201                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9202  0030F2  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9203  0030F4  A4D8               	btfss	status,2,c
  9204  0030F6  0012               	return	
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;usb_device.c: 1731: {
  9208                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9209  0030F8  EC62  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9210                           
  9211                           ;usb_device.c: 1733: }
  9212                           ;usb_device.c: 1734: }
  9213  0030FC  0012               	return	
  9214  0030FE                     l1686:
  9215                           
  9216                           ;usb_device.c: 1735: else
  9217                           ;usb_device.c: 1736: {
  9218                           ;usb_device.c: 1747: controlTransferState = 2;
  9219  0030FE  0E02               	movlw	2
  9220  003100  0100               	movlb	0	; () banked
  9221  003102  6FCB               	movwf	_controlTransferState& (0+255),b
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9225  003104  EE20 F001          	lfsr	2,1
  9226  003108  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9227  00310A  26D9               	addwf	fsr2l,f,c
  9228  00310C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9229  00310E  22DA               	addwfc	fsr2h,f,c
  9230  003110  0E08               	movlw	8
  9231  003112  6EDF               	movwf	indf2,c
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9235  003114  EE20 F002          	lfsr	2,2
  9236  003118  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9237  00311A  26D9               	addwf	fsr2l,f,c
  9238  00311C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9239  00311E  22DA               	addwfc	fsr2h,f,c
  9240  003120  0E30               	movlw	48
  9241  003122  6EDE               	movwf	postinc2,c
  9242  003124  0E04               	movlw	4
  9243  003126  6EDD               	movwf	postdec2,c
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9247  003128  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9248  00312C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9249  003130  0E04               	movlw	4
  9250  003132  6EDF               	movwf	indf2,c
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9254  003134  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9255  003138  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9256  00313C  0E00               	movlw	0
  9257  00313E  8EDB               	bsf	plusw2,7,c
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9261  003140  0E00               	movlw	0
  9262  003142  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9266  003144  0E00               	movlw	0
  9267  003146  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9271  003148  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9272  00314A  A4D8               	btfss	status,2,c
  9273  00314C  0012               	return	
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;usb_device.c: 1759: {
  9277                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9278  00314E  EC62  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9279  003152  0012               	return	
  9280  003154                     __end_of_USBCtrlEPServiceComplete:
  9281                           	opt stack 0
  9282                           tosu	equ	0xFFF
  9283                           tosh	equ	0xFFE
  9284                           tosl	equ	0xFFD
  9285                           pclath	equ	0xFFA
  9286                           tblptru	equ	0xFF8
  9287                           tblptrh	equ	0xFF7
  9288                           tblptrl	equ	0xFF6
  9289                           tablat	equ	0xFF5
  9290                           prodh	equ	0xFF4
  9291                           prodl	equ	0xFF3
  9292                           intcon	equ	0xFF2
  9293                           intcon2	equ	0xFF1
  9294                           intcon3	equ	0xFF0
  9295                           postinc0	equ	0xFEE
  9296                           plusw0	equ	0xFEB
  9297                           wreg	equ	0xFE8
  9298                           postinc1	equ	0xFE6
  9299                           postdec1	equ	0xFE5
  9300                           fsr1h	equ	0xFE2
  9301                           fsr1l	equ	0xFE1
  9302                           indf2	equ	0xFDF
  9303                           postinc2	equ	0xFDE
  9304                           postdec2	equ	0xFDD
  9305                           plusw2	equ	0xFDB
  9306                           fsr2h	equ	0xFDA
  9307                           fsr2l	equ	0xFD9
  9308                           status	equ	0xFD8
  9309                           
  9310 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9311 ;; Defined at:
  9312 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;		None
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;		None
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9330 ;;Total ram usage:        0 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:   12
  9333 ;; This function calls:
  9334 ;;		_USBCtrlTrfTxService
  9335 ;; This function is called by:
  9336 ;;		_USBCtrlEPServiceComplete
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text38
  9341  004640                     __ptext38:
  9342                           	opt stack 0
  9343  004640                     _USBCtrlEPAllowDataStage:
  9344                           	opt stack 11
  9345                           
  9346                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9347                           
  9348                           ;incstack = 0
  9349  004640  0E00               	movlw	0
  9350  004642  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9351                           
  9352                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9353  004644  0E00               	movlw	0
  9354  004646  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9355                           
  9356                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9357  004648  0E02               	movlw	2
  9358  00464A  0100               	movlb	0	; () banked
  9359  00464C  19CB               	xorwf	_controlTransferState& (0+255),w,b
  9360  00464E  A4D8               	btfss	status,2,c
  9361  004650  D01F               	goto	l1670
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;usb_device.c: 1512: {
  9365                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9366  004652  EE20 F001          	lfsr	2,1
  9367  004656  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9368  004658  26D9               	addwf	fsr2l,f,c
  9369  00465A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9370  00465C  22DA               	addwfc	fsr2h,f,c
  9371  00465E  0E08               	movlw	8
  9372  004660  6EDF               	movwf	indf2,c
  9373                           
  9374                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9375  004662  EE20 F002          	lfsr	2,2
  9376  004666  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9377  004668  26D9               	addwf	fsr2l,f,c
  9378  00466A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9379  00466C  22DA               	addwfc	fsr2h,f,c
  9380  00466E  0E38               	movlw	56
  9381  004670  6EDE               	movwf	postinc2,c
  9382  004672  0E04               	movlw	4
  9383  004674  6EDD               	movwf	postdec2,c
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9387  004676  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9388  00467A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9389  00467E  0E48               	movlw	72
  9390  004680  6EDF               	movwf	indf2,c
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9394  004682  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9395  004686  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9396  00468A  0E00               	movlw	0
  9397  00468C  8EDB               	bsf	plusw2,7,c
  9398                           
  9399                           ;usb_device.c: 1518: }
  9400  00468E  0012               	return	
  9401  004690                     l1670:
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;usb_device.c: 1519: else
  9405                           ;usb_device.c: 1520: {
  9406                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9407                           
  9408                           ; BSR set to: 0
  9409  004690  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9410  004692  0104               	movlb	4	; () banked
  9411  004694  5D36               	subwf	54,w,b	;volatile
  9412  004696  0100               	movlb	0	; () banked
  9413  004698  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9414  00469A  0104               	movlb	4	; () banked
  9415  00469C  5937               	subwfb	55,w,b	;volatile
  9416  00469E  B0D8               	btfsc	status,0,c
  9417  0046A0  D004               	goto	l1672
  9418                           
  9419                           ; BSR set to: 4
  9420                           ;usb_device.c: 1524: {
  9421                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9422  0046A2  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9423  0046A6  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9424  0046AA                     l1672:
  9425                           
  9426                           ; BSR set to: 4
  9427                           ;usb_device.c: 1526: }
  9428                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9429                           
  9430                           ; BSR set to: 4
  9431  0046AA  ECED  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9432                           
  9433                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9434  0046AE  0100               	movlb	0	; () banked
  9435  0046B0  EE20 F002          	lfsr	2,2
  9436  0046B4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9437  0046B6  26D9               	addwf	fsr2l,f,c
  9438  0046B8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9439  0046BA  22DA               	addwfc	fsr2h,f,c
  9440  0046BC  0E38               	movlw	56
  9441  0046BE  6EDE               	movwf	postinc2,c
  9442  0046C0  0E04               	movlw	4
  9443  0046C2  6EDD               	movwf	postdec2,c
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9447  0046C4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9448  0046C8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9449  0046CC  0E48               	movlw	72
  9450  0046CE  6EDF               	movwf	indf2,c
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9454  0046D0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9455  0046D4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9456  0046D8  0E00               	movlw	0
  9457  0046DA  8EDB               	bsf	plusw2,7,c
  9458  0046DC  0012               	return	
  9459  0046DE                     __end_of_USBCtrlEPAllowDataStage:
  9460                           	opt stack 0
  9461                           tosu	equ	0xFFF
  9462                           tosh	equ	0xFFE
  9463                           tosl	equ	0xFFD
  9464                           pclath	equ	0xFFA
  9465                           tblptru	equ	0xFF8
  9466                           tblptrh	equ	0xFF7
  9467                           tblptrl	equ	0xFF6
  9468                           tablat	equ	0xFF5
  9469                           prodh	equ	0xFF4
  9470                           prodl	equ	0xFF3
  9471                           intcon	equ	0xFF2
  9472                           intcon2	equ	0xFF1
  9473                           intcon3	equ	0xFF0
  9474                           postinc0	equ	0xFEE
  9475                           plusw0	equ	0xFEB
  9476                           wreg	equ	0xFE8
  9477                           postinc1	equ	0xFE6
  9478                           postdec1	equ	0xFE5
  9479                           fsr1h	equ	0xFE2
  9480                           fsr1l	equ	0xFE1
  9481                           indf2	equ	0xFDF
  9482                           postinc2	equ	0xFDE
  9483                           postdec2	equ	0xFDD
  9484                           plusw2	equ	0xFDB
  9485                           fsr2h	equ	0xFDA
  9486                           fsr2l	equ	0xFD9
  9487                           status	equ	0xFD8
  9488                           
  9489 ;; *************** function _USBCheckStdRequest *****************
  9490 ;; Defined at:
  9491 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;		None
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;		None
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  1    wreg      void 
  9498 ;; Registers used:
  9499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9509 ;;Total ram usage:        0 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; Hardware stack levels required when called:   16
  9512 ;; This function calls:
  9513 ;;		_USBStdFeatureReqHandler
  9514 ;;		_USBStdGetDscHandler
  9515 ;;		_USBStdGetStatusHandler
  9516 ;;		_USBStdSetCfgHandler
  9517 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9518 ;; This function is called by:
  9519 ;;		_USBCtrlTrfSetupHandler
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text39
  9524  0034F6                     __ptext39:
  9525                           	opt stack 0
  9526  0034F6                     _USBCheckStdRequest:
  9527                           	opt stack 8
  9528                           
  9529                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;incstack = 0
  9533  0034F6  0104               	movlb	4	; () banked
  9534  0034F8  3930               	swapf	48,w,b	;volatile
  9535  0034FA  32E8               	rrcf	wreg,f,c
  9536  0034FC  0B03               	andlw	3
  9537  0034FE  0900               	iorlw	0
  9538  003500  A4D8               	btfss	status,2,c
  9539  003502  0012               	return	
  9540  003504  D048               	goto	l1805
  9541  003506                     l1806:
  9542                           
  9543                           ; BSR set to: 4
  9544                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9545  003506  0100               	movlb	0	; () banked
  9546  003508  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9550  00350A  0E08               	movlw	8
  9551  00350C  6FCD               	movwf	_USBDeviceState& (0+255),b
  9552                           
  9553                           ;usb_device.c: 2713: break;
  9554  00350E  0012               	return	
  9555  003510                     
  9556                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9557                           
  9558                           ; BSR set to: 0
  9559  003510  ECE3  F015         	call	_USBStdGetDscHandler	;wreg free
  9560                           
  9561                           ;usb_device.c: 2716: break;
  9562  003514  0012               	return	
  9563  003516                     
  9564                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9565  003516  EC95  F019         	call	_USBStdSetCfgHandler	;wreg free
  9566                           
  9567                           ;usb_device.c: 2719: break;
  9568  00351A  0012               	return	
  9569  00351C                     
  9570                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9571  00351C  0ED6               	movlw	low _USBActiveConfiguration
  9572  00351E  0100               	movlb	0	; () banked
  9573  003520  6FB0               	movwf	_inPipes& (0+255),b
  9574  003522  0E00               	movlw	high _USBActiveConfiguration
  9575  003524  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9579  003526  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9583  003528  0E01               	movlw	1
  9584  00352A  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9588  00352C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9589                           
  9590                           ;usb_device.c: 2725: break;
  9591  00352E  0012               	return	
  9592  003530                     
  9593                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9594                           
  9595                           ; BSR set to: 0
  9596  003530  EC7B  F020         	call	_USBStdGetStatusHandler	;wreg free
  9597                           
  9598                           ;usb_device.c: 2728: break;
  9599  003534  0012               	return	
  9600  003536                     
  9601                           ;usb_device.c: 2730: case 3:
  9602                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9603  003536  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9604                           
  9605                           ;usb_device.c: 2732: break;
  9606  00353A  0012               	return	
  9607  00353C                     
  9608                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9609  00353C  0104               	movlb	4	; () banked
  9610  00353E  5134               	movf	52,w,b	;volatile
  9611  003540  0D01               	mullw	1
  9612  003542  0EF1               	movlw	low _USBAlternateInterface
  9613  003544  24F3               	addwf	prodl,w,c
  9614  003546  0100               	movlb	0	; () banked
  9615  003548  6FB0               	movwf	_inPipes& (0+255),b
  9616  00354A  0E02               	movlw	high _USBAlternateInterface
  9617  00354C  20F4               	addwfc	prodh,w,c
  9618  00354E  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9619                           
  9620                           ; BSR set to: 0
  9621                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9622  003550  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9626  003552  0E01               	movlw	1
  9627  003554  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9631  003556  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9632                           
  9633                           ;usb_device.c: 2738: break;
  9634  003558  0012               	return	
  9635  00355A                     l1815:
  9636                           
  9637                           ; BSR set to: 4
  9638                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9639  00355A  0100               	movlb	0	; () banked
  9640  00355C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9644  00355E  0104               	movlb	4	; () banked
  9645  003560  5134               	movf	52,w,b	;volatile
  9646  003562  0D01               	mullw	1
  9647  003564  0EF1               	movlw	low _USBAlternateInterface
  9648  003566  24F3               	addwf	prodl,w,c
  9649  003568  6ED9               	movwf	fsr2l,c
  9650  00356A  0E02               	movlw	high _USBAlternateInterface
  9651  00356C  20F4               	addwfc	prodh,w,c
  9652  00356E  6EDA               	movwf	fsr2h,c
  9653  003570  C432 FFDF          	movff	1074,indf2	;volatile
  9654                           
  9655                           ;usb_device.c: 2742: break;
  9656  003574  0012               	return	
  9657  003576                     
  9658                           ; BSR set to: 4
  9659                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9660                           
  9661                           ; BSR set to: 4
  9662  003576  0E00               	movlw	0
  9663  003578  0100               	movlb	0	; () banked
  9664  00357A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9665  00357C  0E02               	movlw	2
  9666  00357E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9667  003580  0E00               	movlw	0
  9668  003582  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9669  003584  0E00               	movlw	0
  9670  003586  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9671  003588  0E00               	movlw	0
  9672  00358A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9673  00358C  0E00               	movlw	0
  9674  00358E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9675  003590  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9676                           
  9677                           ;usb_device.c: 2749: }
  9678                           
  9679                           ;usb_device.c: 2748: break;
  9680                           
  9681                           ;usb_device.c: 2747: default:
  9682                           
  9683                           ;usb_device.c: 2746: case 12:
  9684                           
  9685                           ;usb_device.c: 2745: break;
  9686  003594  0012               	return	
  9687  003596                     l1805:
  9688  003596  0104               	movlb	4	; () banked
  9689  003598  5131               	movf	49,w,b	;volatile
  9690                           
  9691                           ; Switch size 1, requested type "space"
  9692                           ; Number of cases is 11, Range of values is 0 to 12
  9693                           ; switch strategies available:
  9694                           ; Name         Instructions Cycles
  9695                           ; simple_byte           34    18 (average)
  9696                           ;	Chosen strategy is simple_byte
  9697  00359A  0A00               	xorlw	0	; case 0
  9698  00359C  B4D8               	btfsc	status,2,c
  9699  00359E  D7C8               	goto	l1811
  9700  0035A0  0A01               	xorlw	1	; case 1
  9701  0035A2  B4D8               	btfsc	status,2,c
  9702  0035A4  D7C8               	goto	l1812
  9703  0035A6  0A02               	xorlw	2	; case 3
  9704  0035A8  B4D8               	btfsc	status,2,c
  9705  0035AA  D7C5               	goto	l1812
  9706  0035AC  0A06               	xorlw	6	; case 5
  9707  0035AE  B4D8               	btfsc	status,2,c
  9708  0035B0  D7AA               	goto	l1806
  9709  0035B2  0A03               	xorlw	3	; case 6
  9710  0035B4  B4D8               	btfsc	status,2,c
  9711  0035B6  D7AC               	goto	l1808
  9712  0035B8  0A01               	xorlw	1	; case 7
  9713  0035BA  B4D8               	btfsc	status,2,c
  9714  0035BC  D7DC               	goto	l1816
  9715  0035BE  0A0F               	xorlw	15	; case 8
  9716  0035C0  B4D8               	btfsc	status,2,c
  9717  0035C2  D7AC               	goto	l1810
  9718  0035C4  0A01               	xorlw	1	; case 9
  9719  0035C6  B4D8               	btfsc	status,2,c
  9720  0035C8  D7A6               	goto	l1809
  9721  0035CA  0A03               	xorlw	3	; case 10
  9722  0035CC  B4D8               	btfsc	status,2,c
  9723  0035CE  D7B6               	goto	l1814
  9724  0035D0  0A01               	xorlw	1	; case 11
  9725  0035D2  B4D8               	btfsc	status,2,c
  9726  0035D4  D7C2               	goto	l1815
  9727  0035D6  0A07               	xorlw	7	; case 12
  9728  0035D8  0012               	return	
  9729  0035DA                     __end_of_USBCheckStdRequest:
  9730                           	opt stack 0
  9731                           tosu	equ	0xFFF
  9732                           tosh	equ	0xFFE
  9733                           tosl	equ	0xFFD
  9734                           pclath	equ	0xFFA
  9735                           tblptru	equ	0xFF8
  9736                           tblptrh	equ	0xFF7
  9737                           tblptrl	equ	0xFF6
  9738                           tablat	equ	0xFF5
  9739                           prodh	equ	0xFF4
  9740                           prodl	equ	0xFF3
  9741                           intcon	equ	0xFF2
  9742                           intcon2	equ	0xFF1
  9743                           intcon3	equ	0xFF0
  9744                           postinc0	equ	0xFEE
  9745                           plusw0	equ	0xFEB
  9746                           wreg	equ	0xFE8
  9747                           postinc1	equ	0xFE6
  9748                           postdec1	equ	0xFE5
  9749                           fsr1h	equ	0xFE2
  9750                           fsr1l	equ	0xFE1
  9751                           indf2	equ	0xFDF
  9752                           postinc2	equ	0xFDE
  9753                           postdec2	equ	0xFDD
  9754                           plusw2	equ	0xFDB
  9755                           fsr2h	equ	0xFDA
  9756                           fsr2l	equ	0xFD9
  9757                           status	equ	0xFD8
  9758                           
  9759 ;; *************** function _USBStdSetCfgHandler *****************
  9760 ;; Defined at:
  9761 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;  i               1   49[BANK0 ] unsigned char 
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9779 ;;Total ram usage:        1 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:   15
  9782 ;; This function calls:
  9783 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9784 ;;		_memset
  9785 ;; This function is called by:
  9786 ;;		_USBCheckStdRequest
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text40
  9791  00332A                     __ptext40:
  9792                           	opt stack 0
  9793  00332A                     _USBStdSetCfgHandler:
  9794                           	opt stack 8
  9795                           
  9796                           ;usb_device.c: 1988: uint8_t i;
  9797                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9798                           
  9799                           ;incstack = 0
  9800  00332A  0100               	movlb	0	; () banked
  9801  00332C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9805  00332E  0E27               	movlw	39
  9806  003330  6F7D               	movwf	memset@p1& (0+255),b
  9807  003332  0E0F               	movlw	15
  9808  003334  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9809  003336  0E00               	movlw	0
  9810  003338  6F80               	movwf	(memset@c+1)& (0+255),b
  9811  00333A  0E00               	movlw	0
  9812  00333C  6F7F               	movwf	memset@c& (0+255),b
  9813  00333E  0E00               	movlw	0
  9814  003340  6F82               	movwf	(memset@n+1)& (0+255),b
  9815  003342  0E02               	movlw	2
  9816  003344  6F81               	movwf	memset@n& (0+255),b
  9817  003346  EC80  F02E         	call	_memset	;wreg free
  9818                           
  9819                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9820  00334A  0E00               	movlw	0
  9821  00334C  0100               	movlb	0	; () banked
  9822  00334E  6F7D               	movwf	memset@p1& (0+255),b
  9823  003350  0E04               	movlw	4
  9824  003352  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9825  003354  0E00               	movlw	0
  9826  003356  6F80               	movwf	(memset@c+1)& (0+255),b
  9827  003358  0E00               	movlw	0
  9828  00335A  6F7F               	movwf	memset@c& (0+255),b
  9829  00335C  0E00               	movlw	0
  9830  00335E  6F82               	movwf	(memset@n+1)& (0+255),b
  9831  003360  0E30               	movlw	48
  9832  003362  6F81               	movwf	memset@n& (0+255),b
  9833  003364  EC80  F02E         	call	_memset	;wreg free
  9834                           
  9835                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9836  003368  8C65               	bsf	3941,6,c	;volatile
  9837                           
  9838                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9839  00336A  0E00               	movlw	0
  9840  00336C  0100               	movlb	0	; () banked
  9841  00336E  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9842  003370                     l11949:
  9843                           
  9844                           ; BSR set to: 0
  9845  003370  0E02               	movlw	2
  9846  003372  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9847  003374  D001               	goto	l1722
  9848  003376  D016               	goto	u10530
  9849  003378                     l1722:
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;usb_device.c: 2006: {
  9853                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9854                           
  9855                           ; BSR set to: 0
  9856  003378  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9857  00337A  0D01               	mullw	1
  9858  00337C  0ED1               	movlw	low _ep_data_in
  9859  00337E  24F3               	addwf	prodl,w,c
  9860  003380  6ED9               	movwf	fsr2l,c
  9861  003382  0E02               	movlw	high _ep_data_in
  9862  003384  20F4               	addwfc	prodh,w,c
  9863  003386  6EDA               	movwf	fsr2h,c
  9864  003388  0E00               	movlw	0
  9865  00338A  6EDF               	movwf	indf2,c
  9866                           
  9867                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9868  00338C  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9869  00338E  0D01               	mullw	1
  9870  003390  0ECE               	movlw	low _ep_data_out
  9871  003392  24F3               	addwf	prodl,w,c
  9872  003394  6ED9               	movwf	fsr2l,c
  9873  003396  0E02               	movlw	high _ep_data_out
  9874  003398  20F4               	addwfc	prodh,w,c
  9875  00339A  6EDA               	movwf	fsr2h,c
  9876  00339C  0E00               	movlw	0
  9877  00339E  6EDF               	movwf	indf2,c
  9878                           
  9879                           ; BSR set to: 0
  9880  0033A0  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9881  0033A2  D7E6               	goto	l11949
  9882  0033A4                     u10530:
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;usb_device.c: 2009: }
  9886                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9887                           
  9888                           ; BSR set to: 0
  9889  0033A4  0EF1               	movlw	low _USBAlternateInterface
  9890  0033A6  6F7D               	movwf	memset@p1& (0+255),b
  9891  0033A8  0E02               	movlw	high _USBAlternateInterface
  9892  0033AA  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9893  0033AC  0E00               	movlw	0
  9894  0033AE  6F80               	movwf	(memset@c+1)& (0+255),b
  9895  0033B0  0E00               	movlw	0
  9896  0033B2  6F7F               	movwf	memset@c& (0+255),b
  9897  0033B4  0E00               	movlw	0
  9898  0033B6  6F82               	movwf	(memset@n+1)& (0+255),b
  9899  0033B8  0E02               	movlw	2
  9900  0033BA  6F81               	movwf	memset@n& (0+255),b
  9901  0033BC  EC80  F02E         	call	_memset	;wreg free
  9902                           
  9903                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9904  0033C0  9C65               	bcf	3941,6,c	;volatile
  9905                           
  9906                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9907  0033C2  0E08               	movlw	8
  9908  0033C4  0100               	movlb	0	; () banked
  9909  0033C6  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9910  0033C8  0E04               	movlw	4
  9911  0033CA  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9915  0033CC  0E00               	movlw	0
  9916  0033CE  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9917  0033D0  0E04               	movlw	4
  9918  0033D2  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9922  0033D4  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9923  0033D8  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9927  0033DC  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9931  0033E0  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
  9932  0033E2  A4D8               	btfss	status,2,c
  9933  0033E4  D003               	goto	l1724
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;usb_device.c: 2028: {
  9937                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9938  0033E6  0E10               	movlw	16
  9939  0033E8  6FCD               	movwf	_USBDeviceState& (0+255),b
  9940                           
  9941                           ;usb_device.c: 2031: }
  9942  0033EA  0012               	return	
  9943  0033EC                     l1724:
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;usb_device.c: 2032: else
  9947                           ;usb_device.c: 2033: {
  9948                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9949                           
  9950                           ; BSR set to: 0
  9951  0033EC  0E00               	movlw	0
  9952  0033EE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9953  0033F0  0E01               	movlw	1
  9954  0033F2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9955  0033F4  0ED6               	movlw	low _USBActiveConfiguration
  9956  0033F6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9957  0033F8  0E00               	movlw	high _USBActiveConfiguration
  9958  0033FA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9959  0033FC  0E00               	movlw	0
  9960  0033FE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9961  003400  0E01               	movlw	1
  9962  003402  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9963  003404  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9964                           
  9965                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9966  003408  0E20               	movlw	32
  9967  00340A  0100               	movlb	0	; () banked
  9968  00340C  6FCD               	movwf	_USBDeviceState& (0+255),b
  9969  00340E  0012               	return	
  9970  003410                     __end_of_USBStdSetCfgHandler:
  9971                           	opt stack 0
  9972                           tosu	equ	0xFFF
  9973                           tosh	equ	0xFFE
  9974                           tosl	equ	0xFFD
  9975                           pclath	equ	0xFFA
  9976                           tblptru	equ	0xFF8
  9977                           tblptrh	equ	0xFF7
  9978                           tblptrl	equ	0xFF6
  9979                           tablat	equ	0xFF5
  9980                           prodh	equ	0xFF4
  9981                           prodl	equ	0xFF3
  9982                           intcon	equ	0xFF2
  9983                           intcon2	equ	0xFF1
  9984                           intcon3	equ	0xFF0
  9985                           postinc0	equ	0xFEE
  9986                           plusw0	equ	0xFEB
  9987                           wreg	equ	0xFE8
  9988                           postinc1	equ	0xFE6
  9989                           postdec1	equ	0xFE5
  9990                           fsr1h	equ	0xFE2
  9991                           fsr1l	equ	0xFE1
  9992                           indf2	equ	0xFDF
  9993                           postinc2	equ	0xFDE
  9994                           postdec2	equ	0xFDD
  9995                           plusw2	equ	0xFDB
  9996                           fsr2h	equ	0xFDA
  9997                           fsr2l	equ	0xFD9
  9998                           status	equ	0xFD8
  9999                           
 10000 ;; *************** function _USBStdGetStatusHandler *****************
 10001 ;; Defined at:
 10002 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10003 ;; Parameters:    Size  Location     Type
 10004 ;;		None
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10007 ;;		 -> NULL(0), BDT(48), 
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  1    wreg      void 
 10010 ;; Registers used:
 10011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10020 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10021 ;;Total ram usage:        3 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:   11
 10024 ;; This function calls:
 10025 ;;		Nothing
 10026 ;; This function is called by:
 10027 ;;		_USBCheckStdRequest
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text41
 10032  0040F6                     __ptext41:
 10033                           	opt stack 0
 10034  0040F6                     _USBStdGetStatusHandler:
 10035                           	opt stack 12
 10036                           
 10037                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;incstack = 0
 10041  0040F6  0E00               	movlw	0
 10042  0040F8  0104               	movlb	4	; () banked
 10043  0040FA  6F38               	movwf	56,b	;volatile
 10044                           
 10045                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10046  0040FC  0E00               	movlw	0
 10047  0040FE  6F39               	movwf	57,b	;volatile
 10048                           
 10049                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10050  004100  D03D               	goto	l1743
 10051  004102                     l1744:
 10052                           
 10053                           ; BSR set to: 4
 10054                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10055  004102  0100               	movlb	0	; () banked
 10056  004104  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10057                           
 10058                           ;usb_device.c: 2163: }
 10059                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10060                           
 10061                           ; BSR set to: 4
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;usb_device.c: 2161: {
 10065                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10066                           
 10067                           ;usb_device.c: 2160: if(0 == 1)
 10068  004106  0101               	movlb	1	; () banked
 10069  004108  05E6               	decf	_RemoteWakeup& (0+255),w,b
 10070  00410A  A4D8               	btfss	status,2,c
 10071  00410C  D042               	goto	l1747
 10072                           
 10073                           ; BSR set to: 1
 10074                           ;usb_device.c: 2166: {
 10075                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10076  00410E  0104               	movlb	4	; () banked
 10077  004110  8338               	bsf	56,1,b	;volatile
 10078                           
 10079                           ; BSR set to: 4
 10080                           ;usb_device.c: 2168: }
 10081                           ;usb_device.c: 2169: break;
 10082  004112  D03F               	goto	l1747
 10083  004114                     l1748:
 10084                           
 10085                           ; BSR set to: 4
 10086                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10087  004114  0100               	movlb	0	; () banked
 10088  004116  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10089                           
 10090                           ;usb_device.c: 2172: break;
 10091  004118  D03C               	goto	l1747
 10092  00411A                     l1749:
 10093                           
 10094                           ; BSR set to: 4
 10095                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10096  00411A  0100               	movlb	0	; () banked
 10097  00411C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10098                           
 10099                           ;usb_device.c: 2178: {
 10100                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10101                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10102  00411E  0104               	movlb	4	; () banked
 10103  004120  BF34               	btfsc	52,7,b	;volatile
 10104  004122  D00B               	goto	l1750
 10105                           
 10106                           ; BSR set to: 4
 10107                           ;usb_device.c: 2182: {
 10108                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10109  004124  5134               	movf	52,w,b	;volatile
 10110  004126  0B0F               	andlw	15
 10111  004128  0100               	movlb	0	; () banked
 10112  00412A  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10113  00412C  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10114  00412E  0D02               	mullw	2
 10115  004130  0E0E               	movlw	low _pBDTEntryOut
 10116  004132  24F3               	addwf	prodl,w,c
 10117  004134  6ED9               	movwf	fsr2l,c
 10118  004136  0E03               	movlw	high _pBDTEntryOut
 10119  004138  D00B               	goto	L4
 10120  00413A                     l1750:
 10121                           
 10122                           ;usb_device.c: 2185: else
 10123                           ;usb_device.c: 2186: {
 10124                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10125                           
 10126                           ; BSR set to: 0
 10127  00413A  0104               	movlb	4	; () banked
 10128  00413C  5134               	movf	52,w,b	;volatile
 10129  00413E  0B0F               	andlw	15
 10130  004140  0100               	movlb	0	; () banked
 10131  004142  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10132  004144  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10133  004146  0D02               	mullw	2
 10134  004148  0EB6               	movlw	low _pBDTEntryIn
 10135  00414A  24F3               	addwf	prodl,w,c
 10136  00414C  6ED9               	movwf	fsr2l,c
 10137  00414E  0E00               	movlw	high _pBDTEntryIn
 10138  004150                     L4:
 10139  004150  20F4               	addwfc	prodh,w,c
 10140  004152  6EDA               	movwf	fsr2h,c
 10141  004154  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10142  004158  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;usb_device.c: 2188: }
 10146                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10147                           
 10148                           ; BSR set to: 0
 10149  00415C  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10150  004160  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10151  004164  AEDF               	btfss	indf2,7,c
 10152  004166  D015               	goto	l1747
 10153                           
 10154                           ; BSR set to: 0
 10155  004168  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10156  00416C  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10157  004170  A4DF               	btfss	indf2,2,c
 10158  004172  D00F               	goto	l1747
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10162  004174  0E01               	movlw	1
 10163  004176  0104               	movlb	4	; () banked
 10164  004178  6F38               	movwf	56,b	;volatile
 10165                           
 10166                           ; BSR set to: 4
 10167                           ;usb_device.c: 2193: }
 10168                           ;usb_device.c: 2194: }
 10169                           
 10170                           ; BSR set to: 4
 10171                           ;usb_device.c: 2192: break;
 10172  00417A  D00B               	goto	l1747
 10173  00417C                     l1743:
 10174                           
 10175                           ; BSR set to: 4
 10176                           
 10177                           ; BSR set to: 4
 10178  00417C  5130               	movf	48,w,b	;volatile
 10179  00417E  0B1F               	andlw	31
 10180                           
 10181                           ; Switch size 1, requested type "space"
 10182                           ; Number of cases is 3, Range of values is 0 to 2
 10183                           ; switch strategies available:
 10184                           ; Name         Instructions Cycles
 10185                           ; simple_byte           10     6 (average)
 10186                           ;	Chosen strategy is simple_byte
 10187  004180  0A00               	xorlw	0	; case 0
 10188  004182  B4D8               	btfsc	status,2,c
 10189  004184  D7BE               	goto	l1744
 10190  004186  0A01               	xorlw	1	; case 1
 10191  004188  B4D8               	btfsc	status,2,c
 10192  00418A  D7C4               	goto	l1748
 10193  00418C  0A03               	xorlw	3	; case 2
 10194  00418E  B4D8               	btfsc	status,2,c
 10195  004190  D7C4               	goto	l1749
 10196  004192                     l1747:
 10197                           
 10198                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10199  004192  0100               	movlb	0	; () banked
 10200  004194  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10201  004196  0012               	return	
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;usb_device.c: 2197: {
 10205                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10206  004198  0E38               	movlw	56
 10207  00419A  6FB0               	movwf	_inPipes& (0+255),b
 10208  00419C  0E04               	movlw	4
 10209  00419E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10213  0041A0  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10217  0041A2  0E02               	movlw	2
 10218  0041A4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10219  0041A6  0012               	return	
 10220  0041A8                     __end_of_USBStdGetStatusHandler:
 10221                           	opt stack 0
 10222                           tosu	equ	0xFFF
 10223                           tosh	equ	0xFFE
 10224                           tosl	equ	0xFFD
 10225                           pclath	equ	0xFFA
 10226                           tblptru	equ	0xFF8
 10227                           tblptrh	equ	0xFF7
 10228                           tblptrl	equ	0xFF6
 10229                           tablat	equ	0xFF5
 10230                           prodh	equ	0xFF4
 10231                           prodl	equ	0xFF3
 10232                           intcon	equ	0xFF2
 10233                           intcon2	equ	0xFF1
 10234                           intcon3	equ	0xFF0
 10235                           postinc0	equ	0xFEE
 10236                           plusw0	equ	0xFEB
 10237                           wreg	equ	0xFE8
 10238                           postinc1	equ	0xFE6
 10239                           postdec1	equ	0xFE5
 10240                           fsr1h	equ	0xFE2
 10241                           fsr1l	equ	0xFE1
 10242                           indf2	equ	0xFDF
 10243                           postinc2	equ	0xFDE
 10244                           postdec2	equ	0xFDD
 10245                           plusw2	equ	0xFDB
 10246                           fsr2h	equ	0xFDA
 10247                           fsr2l	equ	0xFD9
 10248                           status	equ	0xFD8
 10249                           
 10250 ;; *************** function _USBStdGetDscHandler *****************
 10251 ;; Defined at:
 10252 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;		None
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;		None
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  1    wreg      void 
 10259 ;; Registers used:
 10260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10268 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10269 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10270 ;;Total ram usage:        2 bytes
 10271 ;; Hardware stack levels used:    1
 10272 ;; Hardware stack levels required when called:   11
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_USBCheckStdRequest
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text42
 10281  002BC6                     __ptext42:
 10282                           	opt stack 0
 10283  002BC6                     _USBStdGetDscHandler:
 10284                           	opt stack 12
 10285                           
 10286                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;incstack = 0
 10290  002BC6  0E80               	movlw	128
 10291  002BC8  0104               	movlb	4	; () banked
 10292  002BCA  1930               	xorwf	48,w,b	;volatile
 10293  002BCC  A4D8               	btfss	status,2,c
 10294  002BCE  0012               	return	
 10295                           
 10296                           ; BSR set to: 4
 10297                           ;usb_device.c: 2064: {
 10298                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10299  002BD0  0EC0               	movlw	192
 10300  002BD2  0100               	movlb	0	; () banked
 10301  002BD4  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10302                           
 10303                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10304  002BD6  D082               	goto	l1730
 10305  002BD8                     
 10306                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10307                           
 10308                           ; BSR set to: 0
 10309  002BD8  0E56               	movlw	low _device_dsc
 10310  002BDA  0100               	movlb	0	; () banked
 10311  002BDC  6FB0               	movwf	_inPipes& (0+255),b
 10312  002BDE  0EFE               	movlw	high _device_dsc
 10313  002BE0  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10317  002BE2  0E00               	movlw	0
 10318  002BE4  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10319  002BE6  0E12               	movlw	18
 10320  002BE8  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10321                           
 10322                           ;usb_device.c: 2076: break;
 10323  002BEA  0012               	return	
 10324  002BEC                     
 10325                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10326                           
 10327                           ; BSR set to: 0
 10328  002BEC  0104               	movlb	4	; () banked
 10329  002BEE  5132               	movf	50,w,b	;volatile
 10330  002BF0  A4D8               	btfss	status,2,c
 10331  002BF2  D040               	goto	l1734
 10332                           
 10333                           ; BSR set to: 4
 10334                           ;usb_device.c: 2082: {
 10335                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10336  002BF4  5132               	movf	50,w,b	;volatile
 10337  002BF6  0D02               	mullw	2
 10338  002BF8  0E3B               	movlw	low _USB_CD_Ptr
 10339  002BFA  24F3               	addwf	prodl,w,c
 10340  002BFC  6EF6               	movwf	tblptrl,c
 10341  002BFE  0EFC               	movlw	high _USB_CD_Ptr
 10342  002C00  20F4               	addwfc	prodh,w,c
 10343  002C02  6EF7               	movwf	tblptrh,c
 10344  002C04                     	if	0	;There are less than 3 active tblptr bytes
 10345  002C04                     	endif
 10346  002C04  0009               	tblrd		*+
 10347  002C06  CFF5 F0B0          	movff	tablat,_inPipes
 10348  002C0A  000A               	tblrd		*-
 10349  002C0C  CFF5 F0B1          	movff	tablat,_inPipes+1
 10350                           
 10351                           ; BSR set to: 4
 10352                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10353  002C10  0E02               	movlw	2
 10354  002C12  0100               	movlb	0	; () banked
 10355  002C14  25B0               	addwf	_inPipes& (0+255),w,b
 10356  002C16  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10357  002C18  0E00               	movlw	0
 10358  002C1A  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10359  002C1C  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10360  002C1E  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10361  002C22  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10362  002C26  6AF8               	clrf	tblptru,c
 10363  002C28  0E0E               	movlw	(high __ramtop+-1)
 10364  002C2A  64F7               	cpfsgt	tblptrh,c
 10365  002C2C  D003               	bra	u10577
 10366  002C2E  0008               	tblrd		*
 10367  002C30  50F5               	movf	tablat,w,c
 10368  002C32  D005               	bra	u10570
 10369  002C34                     u10577:
 10370  002C34  CFF6 FFE9          	movff	tblptrl,fsr0l
 10371  002C38  CFF7 FFEA          	movff	tblptrh,fsr0h
 10372  002C3C  50EF               	movf	indf0,w,c
 10373  002C3E                     u10570:
 10374  002C3E  0100               	movlb	0	; () banked
 10375  002C40  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10379  002C42  0E03               	movlw	3
 10380  002C44  25B0               	addwf	_inPipes& (0+255),w,b
 10381  002C46  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10382  002C48  0E00               	movlw	0
 10383  002C4A  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10384  002C4C  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10385  002C4E  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10386  002C52  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10387  002C56  6AF8               	clrf	tblptru,c
 10388  002C58  0E0E               	movlw	(high __ramtop+-1)
 10389  002C5A  64F7               	cpfsgt	tblptrh,c
 10390  002C5C  D003               	bra	u10587
 10391  002C5E  0008               	tblrd		*
 10392  002C60  50F5               	movf	tablat,w,c
 10393  002C62  D005               	bra	u10580
 10394  002C64                     u10587:
 10395  002C64  CFF6 FFE9          	movff	tblptrl,fsr0l
 10396  002C68  CFF7 FFEA          	movff	tblptrh,fsr0h
 10397  002C6C  50EF               	movf	indf0,w,c
 10398  002C6E                     u10580:
 10399  002C6E  0100               	movlb	0	; () banked
 10400  002C70  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10401                           
 10402                           ;usb_device.c: 2094: }
 10403  002C72  0012               	return	
 10404  002C74                     l1734:
 10405                           
 10406                           ;usb_device.c: 2095: else
 10407                           ;usb_device.c: 2096: {
 10408                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10409                           
 10410                           ; BSR set to: 0
 10411  002C74  0E00               	movlw	0
 10412  002C76  0100               	movlb	0	; () banked
 10413  002C78  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10414                           
 10415                           ; BSR set to: 0
 10416                           ;usb_device.c: 2098: }
 10417                           ;usb_device.c: 2099: break;
 10418  002C7A  0012               	return	
 10419  002C7C                     
 10420                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10421                           
 10422                           ; BSR set to: 0
 10423  002C7C  0E03               	movlw	3
 10424  002C7E  0104               	movlb	4	; () banked
 10425  002C80  6132               	cpfslt	50,b	;volatile
 10426  002C82  D024               	goto	l1737
 10427                           
 10428                           ; BSR set to: 4
 10429                           ;usb_device.c: 2105: {
 10430                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10431  002C84  5132               	movf	50,w,b	;volatile
 10432  002C86  0D02               	mullw	2
 10433  002C88  0E35               	movlw	low _USB_SD_Ptr
 10434  002C8A  24F3               	addwf	prodl,w,c
 10435  002C8C  6EF6               	movwf	tblptrl,c
 10436  002C8E  0EFC               	movlw	high _USB_SD_Ptr
 10437  002C90  20F4               	addwfc	prodh,w,c
 10438  002C92  6EF7               	movwf	tblptrh,c
 10439  002C94                     	if	0	;There are less than 3 active tblptr bytes
 10440  002C94                     	endif
 10441  002C94  0009               	tblrd		*+
 10442  002C96  CFF5 F0B0          	movff	tablat,_inPipes
 10443  002C9A  000A               	tblrd		*-
 10444  002C9C  CFF5 F0B1          	movff	tablat,_inPipes+1
 10445                           
 10446                           ; BSR set to: 4
 10447                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10448  002CA0  C0B0  FFF6         	movff	_inPipes,tblptrl
 10449  002CA4  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10450  002CA8  6AF8               	clrf	tblptru,c
 10451  002CAA  0E0E               	movlw	(high __ramtop+-1)
 10452  002CAC  64F7               	cpfsgt	tblptrh,c
 10453  002CAE  D003               	bra	u10607
 10454  002CB0  0008               	tblrd		*
 10455  002CB2  50F5               	movf	tablat,w,c
 10456  002CB4  D005               	bra	u10600
 10457  002CB6                     u10607:
 10458  002CB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 10459  002CBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 10460  002CBE  50EF               	movf	indf0,w,c
 10461  002CC0                     u10600:
 10462  002CC0  0100               	movlb	0	; () banked
 10463  002CC2  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10464  002CC4  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10465  002CC6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10466  002CC8  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10467                           
 10468                           ;usb_device.c: 2110: }
 10469  002CCA  0012               	return	
 10470  002CCC                     l1737:
 10471                           
 10472                           ;usb_device.c: 2120: else
 10473                           ;usb_device.c: 2121: {
 10474                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10475                           
 10476                           ; BSR set to: 0
 10477  002CCC  0E00               	movlw	0
 10478  002CCE  0100               	movlb	0	; () banked
 10479  002CD0  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;usb_device.c: 2123: }
 10483                           ;usb_device.c: 2124: break;
 10484  002CD2  0012               	return	
 10485  002CD4                     
 10486                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10487                           
 10488                           ; BSR set to: 0
 10489  002CD4  0E00               	movlw	0
 10490  002CD6  0100               	movlb	0	; () banked
 10491  002CD8  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;usb_device.c: 2128: }
 10495                           
 10496                           ;usb_device.c: 2127: break;
 10497  002CDA  0012               	return	
 10498  002CDC                     l1730:
 10499                           
 10500                           ; BSR set to: 0
 10501                           
 10502                           ; BSR set to: 0
 10503  002CDC  0104               	movlb	4	; () banked
 10504  002CDE  5133               	movf	51,w,b	;volatile
 10505                           
 10506                           ; Switch size 1, requested type "space"
 10507                           ; Number of cases is 3, Range of values is 1 to 3
 10508                           ; switch strategies available:
 10509                           ; Name         Instructions Cycles
 10510                           ; simple_byte           10     6 (average)
 10511                           ;	Chosen strategy is simple_byte
 10512  002CE0  0A01               	xorlw	1	; case 1
 10513  002CE2  B4D8               	btfsc	status,2,c
 10514  002CE4  D779               	goto	l1731
 10515  002CE6  0A03               	xorlw	3	; case 2
 10516  002CE8  B4D8               	btfsc	status,2,c
 10517  002CEA  D780               	goto	l1733
 10518  002CEC  0A01               	xorlw	1	; case 3
 10519  002CEE  B4D8               	btfsc	status,2,c
 10520  002CF0  D7C5               	goto	l1736
 10521  002CF2  D7F0               	goto	l1739
 10522  002CF4                     __end_of_USBStdGetDscHandler:
 10523                           	opt stack 0
 10524                           tosu	equ	0xFFF
 10525                           tosh	equ	0xFFE
 10526                           tosl	equ	0xFFD
 10527                           pclath	equ	0xFFA
 10528                           tblptru	equ	0xFF8
 10529                           tblptrh	equ	0xFF7
 10530                           tblptrl	equ	0xFF6
 10531                           tablat	equ	0xFF5
 10532                           prodh	equ	0xFF4
 10533                           prodl	equ	0xFF3
 10534                           intcon	equ	0xFF2
 10535                           intcon2	equ	0xFF1
 10536                           intcon3	equ	0xFF0
 10537                           indf0	equ	0xFEF
 10538                           postinc0	equ	0xFEE
 10539                           plusw0	equ	0xFEB
 10540                           fsr0h	equ	0xFEA
 10541                           fsr0l	equ	0xFE9
 10542                           wreg	equ	0xFE8
 10543                           postinc1	equ	0xFE6
 10544                           postdec1	equ	0xFE5
 10545                           fsr1h	equ	0xFE2
 10546                           fsr1l	equ	0xFE1
 10547                           indf2	equ	0xFDF
 10548                           postinc2	equ	0xFDE
 10549                           postdec2	equ	0xFDD
 10550                           plusw2	equ	0xFDB
 10551                           fsr2h	equ	0xFDA
 10552                           fsr2l	equ	0xFD9
 10553                           status	equ	0xFD8
 10554                           
 10555 ;; *************** function _USBStdFeatureReqHandler *****************
 10556 ;; Defined at:
 10557 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;		None
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10562 ;;		 -> NULL(0), BDT(48), 
 10563 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10564 ;;		 -> UEP0(1), 
 10565 ;;  current_ep_d    1   52[BANK0 ] struct .
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  1    wreg      void 
 10568 ;; Registers used:
 10569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10576 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10577 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10578 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;Total ram usage:        6 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:   15
 10582 ;; This function calls:
 10583 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10584 ;; This function is called by:
 10585 ;;		_USBCheckStdRequest
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           	psect	text43
 10590  00135A                     __ptext43:
 10591                           	opt stack 0
 10592  00135A                     _USBStdFeatureReqHandler:
 10593                           	opt stack 8
 10594                           
 10595                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10596                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10597                           ;usb_device.c: 2778: unsigned char* pUEP;
 10598                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10599                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10600                           
 10601                           ;incstack = 0
 10602  00135A  0104               	movlb	4	; () banked
 10603  00135C  0532               	decf	50,w,b	;volatile
 10604  00135E  A4D8               	btfss	status,2,c
 10605  001360  D011               	goto	l1823
 10606                           
 10607                           ; BSR set to: 4
 10608  001362  5130               	movf	48,w,b	;volatile
 10609  001364  0B1F               	andlw	31
 10610  001366  0900               	iorlw	0
 10611  001368  A4D8               	btfss	status,2,c
 10612  00136A  D00C               	goto	l1823
 10613                           
 10614                           ; BSR set to: 4
 10615                           ;usb_device.c: 2818: {
 10616                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10617  00136C  0100               	movlb	0	; () banked
 10618  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10622  001370  0E03               	movlw	3
 10623  001372  0104               	movlb	4	; () banked
 10624  001374  1931               	xorwf	49,w,b	;volatile
 10625  001376  A4D8               	btfss	status,2,c
 10626  001378  D002               	goto	l1822
 10627                           
 10628                           ; BSR set to: 4
 10629                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10630  00137A  0E01               	movlw	1
 10631  00137C  D001               	goto	L5
 10632  00137E                     l1822:
 10633                           
 10634                           ;usb_device.c: 2822: else
 10635                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10636                           
 10637                           ; BSR set to: 1
 10638  00137E  0E00               	movlw	0
 10639  001380                     L5:
 10640  001380  0101               	movlb	1	; () banked
 10641  001382  6FE6               	movwf	_RemoteWakeup& (0+255),b
 10642  001384                     l1823:
 10643                           
 10644                           ;usb_device.c: 2824: }
 10645                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10646                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10647                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10648                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10649                           
 10650                           ; BSR set to: 1
 10651  001384  0104               	movlb	4	; () banked
 10652  001386  5132               	movf	50,w,b	;volatile
 10653  001388  A4D8               	btfss	status,2,c
 10654  00138A  0012               	return	
 10655                           
 10656                           ; BSR set to: 4
 10657  00138C  5130               	movf	48,w,b	;volatile
 10658  00138E  0B1F               	andlw	31
 10659  001390  0A02               	xorlw	2
 10660  001392  A4D8               	btfss	status,2,c
 10661  001394  0012               	return	
 10662                           
 10663                           ; BSR set to: 4
 10664  001396  5134               	movf	52,w,b	;volatile
 10665  001398  0B0F               	andlw	15
 10666  00139A  0900               	iorlw	0
 10667  00139C  B4D8               	btfsc	status,2,c
 10668  00139E  0012               	return	
 10669                           
 10670                           ; BSR set to: 4
 10671  0013A0  5134               	movf	52,w,b	;volatile
 10672  0013A2  0B0F               	andlw	15
 10673  0013A4  0100               	movlb	0	; () banked
 10674  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10675  0013A8  0E03               	movlw	3
 10676  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10677  0013AC  0012               	return	
 10678                           
 10679                           ; BSR set to: 0
 10680  0013AE  0E20               	movlw	32
 10681  0013B0  19CD               	xorwf	_USBDeviceState& (0+255),w,b
 10682  0013B2  A4D8               	btfss	status,2,c
 10683  0013B4  0012               	return	
 10684                           
 10685                           ; BSR set to: 0
 10686                           ;usb_device.c: 2831: {
 10687                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10688  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10689                           
 10690                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10691  0013B8  0104               	movlb	4	; () banked
 10692  0013BA  BF34               	btfsc	52,7,b	;volatile
 10693  0013BC  D01C               	goto	l1825
 10694                           
 10695                           ; BSR set to: 4
 10696                           ;usb_device.c: 2838: {
 10697                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10698  0013BE  5134               	movf	52,w,b	;volatile
 10699  0013C0  0B0F               	andlw	15
 10700  0013C2  0100               	movlb	0	; () banked
 10701  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10702  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10703  0013C8  0D02               	mullw	2
 10704  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10705  0013CC  24F3               	addwf	prodl,w,c
 10706  0013CE  6ED9               	movwf	fsr2l,c
 10707  0013D0  0E03               	movlw	high _pBDTEntryOut
 10708  0013D2  20F4               	addwfc	prodh,w,c
 10709  0013D4  6EDA               	movwf	fsr2h,c
 10710  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10711  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10712                           
 10713                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10714  0013DE  0104               	movlb	4	; () banked
 10715  0013E0  5134               	movf	52,w,b	;volatile
 10716  0013E2  0B0F               	andlw	15
 10717  0013E4  0100               	movlb	0	; () banked
 10718  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10719  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10720  0013EA  0D01               	mullw	1
 10721  0013EC  0ECE               	movlw	low _ep_data_out
 10722  0013EE  24F3               	addwf	prodl,w,c
 10723  0013F0  6ED9               	movwf	fsr2l,c
 10724  0013F2  0E02               	movlw	high _ep_data_out
 10725  0013F4  D01C               	goto	L6
 10726  0013F6                     l1825:
 10727                           
 10728                           ;usb_device.c: 2842: else
 10729                           ;usb_device.c: 2843: {
 10730                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10731                           
 10732                           ; BSR set to: 0
 10733  0013F6  0104               	movlb	4	; () banked
 10734  0013F8  5134               	movf	52,w,b	;volatile
 10735  0013FA  0B0F               	andlw	15
 10736  0013FC  0100               	movlb	0	; () banked
 10737  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10738  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10739  001402  0D02               	mullw	2
 10740  001404  0EB6               	movlw	low _pBDTEntryIn
 10741  001406  24F3               	addwf	prodl,w,c
 10742  001408  6ED9               	movwf	fsr2l,c
 10743  00140A  0E00               	movlw	high _pBDTEntryIn
 10744  00140C  20F4               	addwfc	prodh,w,c
 10745  00140E  6EDA               	movwf	fsr2h,c
 10746  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10747  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10748                           
 10749                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10750  001418  0104               	movlb	4	; () banked
 10751  00141A  5134               	movf	52,w,b	;volatile
 10752  00141C  0B0F               	andlw	15
 10753  00141E  0100               	movlb	0	; () banked
 10754  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10755  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10756  001424  0D01               	mullw	1
 10757  001426  0ED1               	movlw	low _ep_data_in
 10758  001428  24F3               	addwf	prodl,w,c
 10759  00142A  6ED9               	movwf	fsr2l,c
 10760  00142C  0E02               	movlw	high _ep_data_in
 10761  00142E                     L6:
 10762  00142E  20F4               	addwfc	prodh,w,c
 10763  001430  6EDA               	movwf	fsr2h,c
 10764  001432  50DF               	movf	indf2,w,c
 10765  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;usb_device.c: 2846: }
 10769                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10770                           
 10771                           ; BSR set to: 0
 10772  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10773  001438  D002               	goto	l1827
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;usb_device.c: 2853: {
 10777                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10778  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10779                           
 10780                           ;usb_device.c: 2855: }
 10781  00143C  D001               	goto	l1828
 10782  00143E                     l1827:
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;usb_device.c: 2856: else
 10786                           ;usb_device.c: 2857: {
 10787                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10788                           
 10789                           ; BSR set to: 0
 10790  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10791  001440                     l1828:
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;usb_device.c: 2859: }
 10795                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10796                           
 10797                           ; BSR set to: 0
 10798  001440  0104               	movlb	4	; () banked
 10799  001442  BF34               	btfsc	52,7,b	;volatile
 10800  001444  D00B               	goto	l1829
 10801                           
 10802                           ; BSR set to: 4
 10803                           ;usb_device.c: 2865: {
 10804                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10805  001446  5134               	movf	52,w,b	;volatile
 10806  001448  0B0F               	andlw	15
 10807  00144A  0100               	movlb	0	; () banked
 10808  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10809  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10810  001450  0D02               	mullw	2
 10811  001452  0E0E               	movlw	low _pBDTEntryOut
 10812  001454  24F3               	addwf	prodl,w,c
 10813  001456  6ED9               	movwf	fsr2l,c
 10814  001458  0E03               	movlw	high _pBDTEntryOut
 10815  00145A  D00B               	goto	L7
 10816  00145C                     l1829:
 10817                           
 10818                           ;usb_device.c: 2868: else
 10819                           ;usb_device.c: 2869: {
 10820                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10821                           
 10822                           ; BSR set to: 0
 10823  00145C  0104               	movlb	4	; () banked
 10824  00145E  5134               	movf	52,w,b	;volatile
 10825  001460  0B0F               	andlw	15
 10826  001462  0100               	movlb	0	; () banked
 10827  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10828  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10829  001468  0D02               	mullw	2
 10830  00146A  0EB6               	movlw	low _pBDTEntryIn
 10831  00146C  24F3               	addwf	prodl,w,c
 10832  00146E  6ED9               	movwf	fsr2l,c
 10833  001470  0E00               	movlw	high _pBDTEntryIn
 10834  001472                     L7:
 10835  001472  20F4               	addwfc	prodh,w,c
 10836  001474  6EDA               	movwf	fsr2h,c
 10837  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10838  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;usb_device.c: 2871: }
 10842                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10843                           
 10844                           ; BSR set to: 0
 10845  00147E  0E03               	movlw	3
 10846  001480  0104               	movlb	4	; () banked
 10847  001482  1931               	xorwf	49,w,b	;volatile
 10848  001484  A4D8               	btfss	status,2,c
 10849  001486  D031               	goto	l1831
 10850                           
 10851                           ; BSR set to: 4
 10852                           ;usb_device.c: 2875: {
 10853                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10854  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10855  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10856  001490  0100               	movlb	0	; () banked
 10857  001492  AEDF               	btfss	indf2,7,c
 10858  001494  D01D               	goto	l1834
 10859                           
 10860                           ; BSR set to: 0
 10861                           ;usb_device.c: 2877: {
 10862                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10863  001496  0104               	movlb	4	; () banked
 10864  001498  BF34               	btfsc	52,7,b	;volatile
 10865  00149A  D00B               	goto	l1833
 10866                           
 10867                           ; BSR set to: 4
 10868                           ;usb_device.c: 2881: {
 10869                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10870  00149C  5134               	movf	52,w,b	;volatile
 10871  00149E  0B0F               	andlw	15
 10872  0014A0  0100               	movlb	0	; () banked
 10873  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10874  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10875  0014A6  0D01               	mullw	1
 10876  0014A8  0ECE               	movlw	low _ep_data_out
 10877  0014AA  24F3               	addwf	prodl,w,c
 10878  0014AC  6ED9               	movwf	fsr2l,c
 10879  0014AE  0E02               	movlw	high _ep_data_out
 10880  0014B0  D00B               	goto	L8
 10881  0014B2                     l1833:
 10882                           
 10883                           ;usb_device.c: 2884: else
 10884                           ;usb_device.c: 2885: {
 10885                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10886                           
 10887                           ; BSR set to: 2
 10888  0014B2  0104               	movlb	4	; () banked
 10889  0014B4  5134               	movf	52,w,b	;volatile
 10890  0014B6  0B0F               	andlw	15
 10891  0014B8  0100               	movlb	0	; () banked
 10892  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10893  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10894  0014BE  0D01               	mullw	1
 10895  0014C0  0ED1               	movlw	low _ep_data_in
 10896  0014C2  24F3               	addwf	prodl,w,c
 10897  0014C4  6ED9               	movwf	fsr2l,c
 10898  0014C6  0E02               	movlw	high _ep_data_in
 10899  0014C8                     L8:
 10900  0014C8  20F4               	addwfc	prodh,w,c
 10901  0014CA  6EDA               	movwf	fsr2h,c
 10902  0014CC  0102               	movlb	2	; () banked
 10903  0014CE  82DF               	bsf	indf2,1,c
 10904  0014D0                     l1834:
 10905                           
 10906                           ;usb_device.c: 2887: }
 10907                           ;usb_device.c: 2888: }
 10908                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10909                           
 10910                           ; BSR set to: 2
 10911                           
 10912                           ; BSR set to: 2
 10913  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10914  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10915  0014D8  0E00               	movlw	0
 10916  0014DA  84DB               	bsf	plusw2,2,c
 10917                           
 10918                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10919  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10920  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10921  0014E4  0E00               	movlw	0
 10922  0014E6  8EDB               	bsf	plusw2,7,c
 10923                           
 10924                           ;usb_device.c: 2893: }
 10925  0014E8  0012               	return	
 10926  0014EA                     l1831:
 10927                           
 10928                           ;usb_device.c: 2894: else
 10929                           ;usb_device.c: 2895: {
 10930                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10931  0014EA  0E04               	movlw	4
 10932  0014EC  0100               	movlb	0	; () banked
 10933  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10934                           
 10935                           ; BSR set to: 0
 10936                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10937  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10938  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10939  0014F8  AEDF               	btfss	indf2,7,c
 10940  0014FA  D01B               	goto	l1836
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;usb_device.c: 2902: {
 10944                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10945  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10946  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10947  001504  0E7F               	movlw	127
 10948  001506  16DF               	andwf	indf2,f,c
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10952  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10953  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10954  001510  0E00               	movlw	0
 10955  001512  8CDB               	bsf	plusw2,6,c
 10956                           
 10957                           ; BSR set to: 0
 10958                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10959  001514  0E00               	movlw	0
 10960  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10961  001518  0E05               	movlw	5
 10962  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10963  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10964  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10965  001524  0E00               	movlw	0
 10966  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10967  001528  0E02               	movlw	2
 10968  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10969  00152C  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10970                           
 10971                           ;usb_device.c: 2908: }
 10972  001530  D006               	goto	l1837
 10973  001532                     l1836:
 10974                           
 10975                           ;usb_device.c: 2909: else
 10976                           ;usb_device.c: 2910: {
 10977                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10978  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10979  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10980  00153A  0E00               	movlw	0
 10981  00153C  8CDB               	bsf	plusw2,6,c
 10982  00153E                     l1837:
 10983                           
 10984                           ;usb_device.c: 2913: }
 10985                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10986  00153E  0E04               	movlw	4
 10987  001540  0100               	movlb	0	; () banked
 10988  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10989                           
 10990                           ; BSR set to: 0
 10991                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10992  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10993  001546  D006               	goto	u10820
 10994                           
 10995                           ; BSR set to: 0
 10996  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10997  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10998  001550  AEDF               	btfss	indf2,7,c
 10999  001552  D033               	goto	l1838
 11000  001554                     u10820:
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;usb_device.c: 2924: {
 11004                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11005  001554  0104               	movlb	4	; () banked
 11006  001556  BF34               	btfsc	52,7,b	;volatile
 11007  001558  D00B               	goto	l1841
 11008                           
 11009                           ; BSR set to: 4
 11010                           ;usb_device.c: 2926: {
 11011                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11012  00155A  5134               	movf	52,w,b	;volatile
 11013  00155C  0B0F               	andlw	15
 11014  00155E  0100               	movlb	0	; () banked
 11015  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11016  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11017  001564  0D01               	mullw	1
 11018  001566  0ECE               	movlw	low _ep_data_out
 11019  001568  24F3               	addwf	prodl,w,c
 11020  00156A  6ED9               	movwf	fsr2l,c
 11021  00156C  0E02               	movlw	high _ep_data_out
 11022  00156E  D00B               	goto	L9
 11023  001570                     l1841:
 11024                           
 11025                           ;usb_device.c: 2929: else
 11026                           ;usb_device.c: 2930: {
 11027                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11028                           
 11029                           ; BSR set to: 2
 11030  001570  0104               	movlb	4	; () banked
 11031  001572  5134               	movf	52,w,b	;volatile
 11032  001574  0B0F               	andlw	15
 11033  001576  0100               	movlb	0	; () banked
 11034  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11035  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11036  00157C  0D01               	mullw	1
 11037  00157E  0ED1               	movlw	low _ep_data_in
 11038  001580  24F3               	addwf	prodl,w,c
 11039  001582  6ED9               	movwf	fsr2l,c
 11040  001584  0E02               	movlw	high _ep_data_in
 11041  001586                     L9:
 11042  001586  20F4               	addwfc	prodh,w,c
 11043  001588  6EDA               	movwf	fsr2h,c
 11044  00158A  0102               	movlb	2	; () banked
 11045  00158C  92DF               	bcf	indf2,1,c
 11046                           
 11047                           ; BSR set to: 2
 11048                           ;usb_device.c: 2932: }
 11049                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11050                           
 11051                           ; BSR set to: 2
 11052  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11053  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11054  001596  0E3B               	movlw	59
 11055  001598  16DF               	andwf	indf2,f,c
 11056                           
 11057                           ; BSR set to: 2
 11058                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11059  00159A  0E00               	movlw	0
 11060  00159C  0100               	movlb	0	; () banked
 11061  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11062  0015A0  0E05               	movlw	5
 11063  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11064  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11065  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11066  0015AC  0E00               	movlw	0
 11067  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11068  0015B0  0E02               	movlw	2
 11069  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11070  0015B4  EC7C  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11071                           
 11072                           ;usb_device.c: 2938: }
 11073  0015B8  D006               	goto	l1843
 11074  0015BA                     l1838:
 11075                           
 11076                           ;usb_device.c: 2939: else
 11077                           ;usb_device.c: 2940: {
 11078                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11079  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11080  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11081  0015C2  0E3B               	movlw	59
 11082  0015C4  16DF               	andwf	indf2,f,c
 11083  0015C6                     l1843:
 11084                           
 11085                           ;usb_device.c: 2943: }
 11086                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11087  0015C6  0104               	movlb	4	; () banked
 11088  0015C8  5134               	movf	52,w,b	;volatile
 11089  0015CA  0B0F               	andlw	15
 11090  0015CC  0100               	movlb	0	; () banked
 11091  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11092  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11093  0015D2  0D01               	mullw	1
 11094  0015D4  0E26               	movlw	38
 11095  0015D6  24F3               	addwf	prodl,w,c
 11096  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11097  0015DA  0E0F               	movlw	15
 11098  0015DC  20F4               	addwfc	prodh,w,c
 11099  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11103  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11104  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11105  0015E8  0EFE               	movlw	254
 11106  0015EA  16DF               	andwf	indf2,f,c
 11107                           
 11108                           ; BSR set to: 0
 11109  0015EC  0012               	return	
 11110  0015EE                     __end_of_USBStdFeatureReqHandler:
 11111                           	opt stack 0
 11112                           tosu	equ	0xFFF
 11113                           tosh	equ	0xFFE
 11114                           tosl	equ	0xFFD
 11115                           pclath	equ	0xFFA
 11116                           tblptru	equ	0xFF8
 11117                           tblptrh	equ	0xFF7
 11118                           tblptrl	equ	0xFF6
 11119                           tablat	equ	0xFF5
 11120                           prodh	equ	0xFF4
 11121                           prodl	equ	0xFF3
 11122                           intcon	equ	0xFF2
 11123                           intcon2	equ	0xFF1
 11124                           intcon3	equ	0xFF0
 11125                           indf0	equ	0xFEF
 11126                           postinc0	equ	0xFEE
 11127                           plusw0	equ	0xFEB
 11128                           fsr0h	equ	0xFEA
 11129                           fsr0l	equ	0xFE9
 11130                           wreg	equ	0xFE8
 11131                           postinc1	equ	0xFE6
 11132                           postdec1	equ	0xFE5
 11133                           fsr1h	equ	0xFE2
 11134                           fsr1l	equ	0xFE1
 11135                           indf2	equ	0xFDF
 11136                           postinc2	equ	0xFDE
 11137                           postdec2	equ	0xFDD
 11138                           plusw2	equ	0xFDB
 11139                           fsr2h	equ	0xFDA
 11140                           fsr2l	equ	0xFD9
 11141                           status	equ	0xFD8
 11142                           
 11143 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11144 ;; Defined at:
 11145 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;  event           2   41[BANK0 ] enum E8362
 11148 ;;  pdata           2   43[BANK0 ] PTR void 
 11149 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11150 ;;  size            2   45[BANK0 ] unsigned int 
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;		None
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  1    wreg      unsigned char 
 11155 ;; Registers used:
 11156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11162 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11165 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11166 ;;Total ram usage:        8 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:   14
 11169 ;; This function calls:
 11170 ;;		_CDCInitEP
 11171 ;;		_USBCheckCDCRequest
 11172 ;; This function is called by:
 11173 ;;		_USBDeviceTasks
 11174 ;;		_USBStdSetCfgHandler
 11175 ;;		_USBSuspend
 11176 ;;		_USBWakeFromSuspend
 11177 ;;		_USBCtrlTrfSetupHandler
 11178 ;;		_USBCheckStdRequest
 11179 ;;		_USBStdFeatureReqHandler
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text44
 11184  0050F8                     __ptext44:
 11185                           	opt stack 0
 11186  0050F8                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11187                           	opt stack 12
 11188                           
 11189                           ;usb_device_mgr.c: 106: switch( (int) event )
 11190                           
 11191                           ;incstack = 0
 11192  0050F8  D006               	goto	l1997
 11193  0050FA                     
 11194                           ;usb_device_mgr.c: 134: CDCInitEP();
 11195  0050FA  EC79  F027         	call	_CDCInitEP	;wreg free
 11196                           
 11197                           ;usb_device_mgr.c: 142: break;
 11198                           
 11199                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11200                           
 11201                           ;usb_device_mgr.c: 139: break;
 11202  0050FE  0012               	return	
 11203  005100                     
 11204                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11205  005100  ECD4  F020         	call	_USBCheckCDCRequest	;wreg free
 11206                           
 11207                           ;usb_device_mgr.c: 163: }
 11208                           
 11209                           ;usb_device_mgr.c: 162: break;
 11210                           
 11211                           ;usb_device_mgr.c: 161: default:
 11212                           
 11213                           ;usb_device_mgr.c: 159: break;
 11214                           
 11215                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11216                           
 11217                           ;usb_device_mgr.c: 156: break;
 11218                           
 11219                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11220                           
 11221                           ;usb_device_mgr.c: 153: break;
 11222  005104  0012               	return	
 11223  005106                     l1997:
 11224  005106  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11225  00510A  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11226                           
 11227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11228                           ; Switch size 1, requested type "space"
 11229                           ; Number of cases is 2, Range of values is 0 to 127
 11230                           ; switch strategies available:
 11231                           ; Name         Instructions Cycles
 11232                           ; simple_byte            7     4 (average)
 11233                           ;	Chosen strategy is simple_byte
 11234  00510E  0100               	movlb	0	; () banked
 11235  005110  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11236  005112  0A00               	xorlw	0	; case 0
 11237  005114  B4D8               	btfsc	status,2,c
 11238  005116  D004               	goto	l15439
 11239  005118  0A7F               	xorlw	127	; case 127
 11240  00511A  A4D8               	btfss	status,2,c
 11241  00511C  0012               	return	
 11242  00511E  D018               	goto	l15441
 11243  005120                     l15439:
 11244                           
 11245                           ; BSR set to: 0
 11246                           ; Switch size 1, requested type "space"
 11247                           ; Number of cases is 8, Range of values is 1 to 117
 11248                           ; switch strategies available:
 11249                           ; Name         Instructions Cycles
 11250                           ; simple_byte           25    13 (average)
 11251                           ;	Chosen strategy is simple_byte
 11252  005120  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11253  005122  0A01               	xorlw	1	; case 1
 11254  005124  B4D8               	btfsc	status,2,c
 11255  005126  D7E9               	goto	l2003
 11256  005128  0A03               	xorlw	3	; case 2
 11257  00512A  B4D8               	btfsc	status,2,c
 11258  00512C  0012               	return	
 11259  00512E  0A01               	xorlw	1	; case 3
 11260  005130  B4D8               	btfsc	status,2,c
 11261  005132  D7E6               	goto	l2005
 11262  005134  0A06               	xorlw	6	; case 5
 11263  005136  B4D8               	btfsc	status,2,c
 11264  005138  0012               	return	
 11265  00513A  0A77               	xorlw	119	; case 114
 11266  00513C  B4D8               	btfsc	status,2,c
 11267  00513E  0012               	return	
 11268  005140  0A01               	xorlw	1	; case 115
 11269  005142  B4D8               	btfsc	status,2,c
 11270  005144  0012               	return	
 11271  005146  0A07               	xorlw	7	; case 116
 11272  005148  B4D8               	btfsc	status,2,c
 11273  00514A  0012               	return	
 11274  00514C  0A01               	xorlw	1	; case 117
 11275  00514E  0012               	return	
 11276  005150                     l15441:
 11277                           
 11278                           ; BSR set to: 0
 11279                           ; Switch size 1, requested type "space"
 11280                           ; Number of cases is 1, Range of values is 255 to 255
 11281                           ; switch strategies available:
 11282                           ; Name         Instructions Cycles
 11283                           ; simple_byte            4     3 (average)
 11284                           ;	Chosen strategy is simple_byte
 11285  005150  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11286  005152  0AFF               	xorlw	255	; case 255
 11287  005154  0012               	return	
 11288  005156                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11289                           	opt stack 0
 11290                           tosu	equ	0xFFF
 11291                           tosh	equ	0xFFE
 11292                           tosl	equ	0xFFD
 11293                           pclath	equ	0xFFA
 11294                           tblptru	equ	0xFF8
 11295                           tblptrh	equ	0xFF7
 11296                           tblptrl	equ	0xFF6
 11297                           tablat	equ	0xFF5
 11298                           prodh	equ	0xFF4
 11299                           prodl	equ	0xFF3
 11300                           intcon	equ	0xFF2
 11301                           intcon2	equ	0xFF1
 11302                           intcon3	equ	0xFF0
 11303                           indf0	equ	0xFEF
 11304                           postinc0	equ	0xFEE
 11305                           plusw0	equ	0xFEB
 11306                           fsr0h	equ	0xFEA
 11307                           fsr0l	equ	0xFE9
 11308                           wreg	equ	0xFE8
 11309                           postinc1	equ	0xFE6
 11310                           postdec1	equ	0xFE5
 11311                           fsr1h	equ	0xFE2
 11312                           fsr1l	equ	0xFE1
 11313                           indf2	equ	0xFDF
 11314                           postinc2	equ	0xFDE
 11315                           postdec2	equ	0xFDD
 11316                           plusw2	equ	0xFDB
 11317                           fsr2h	equ	0xFDA
 11318                           fsr2l	equ	0xFD9
 11319                           status	equ	0xFD8
 11320                           
 11321 ;; *************** function _USBCheckCDCRequest *****************
 11322 ;; Defined at:
 11323 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;		None
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;		None
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      void 
 11330 ;; Registers used:
 11331 ;;		wreg, status,2, status,0
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11341 ;;Total ram usage:        0 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:   11
 11344 ;; This function calls:
 11345 ;;		Nothing
 11346 ;; This function is called by:
 11347 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text45
 11352  0041A8                     __ptext45:
 11353                           	opt stack 0
 11354  0041A8                     _USBCheckCDCRequest:
 11355                           	opt stack 14
 11356                           
 11357                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11358                           
 11359                           ;incstack = 0
 11360  0041A8  0104               	movlb	4	; () banked
 11361  0041AA  5130               	movf	48,w,b	;volatile
 11362  0041AC  0B1F               	andlw	31
 11363  0041AE  06E8               	decf	wreg,f,c
 11364  0041B0  A4D8               	btfss	status,2,c
 11365  0041B2  0012               	return	
 11366                           
 11367                           ; BSR set to: 4
 11368                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11369                           
 11370                           ; BSR set to: 4
 11371                           
 11372                           ; BSR set to: 4
 11373  0041B4  3930               	swapf	48,w,b	;volatile
 11374  0041B6  32E8               	rrcf	wreg,f,c
 11375  0041B8  0B03               	andlw	3
 11376  0041BA  06E8               	decf	wreg,f,c
 11377  0041BC  A4D8               	btfss	status,2,c
 11378  0041BE  0012               	return	
 11379                           
 11380                           ; BSR set to: 4
 11381                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11382                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11383                           
 11384                           ; BSR set to: 4
 11385                           
 11386                           ; BSR set to: 4
 11387  0041C0  5134               	movf	52,w,b	;volatile
 11388  0041C2  B4D8               	btfsc	status,2,c
 11389  0041C4  D037               	goto	l1899
 11390                           
 11391                           ; BSR set to: 4
 11392  0041C6  0534               	decf	52,w,b	;volatile
 11393  0041C8  A4D8               	btfss	status,2,c
 11394  0041CA  0012               	return	
 11395  0041CC  D033               	goto	l1899
 11396  0041CE                     
 11397                           ; BSR set to: 4
 11398                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11399                           
 11400                           ; BSR set to: 4
 11401  0041CE  0E77               	movlw	low _dummy_encapsulated_cmd_response
 11402  0041D0  0100               	movlb	0	; () banked
 11403  0041D2  6FB0               	movwf	_inPipes& (0+255),b
 11404  0041D4  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11405  0041D6  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11409  0041D8  0E00               	movlw	0
 11410  0041DA  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11411  0041DC  0E08               	movlw	8
 11412  0041DE  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11416  0041E0  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11420  0041E2  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11421                           
 11422                           ;usb_device_cdc.c: 178: break;
 11423  0041E4  0012               	return	
 11424  0041E6                     
 11425                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11426                           
 11427                           ; BSR set to: 0
 11428  0041E6  0E77               	movlw	low _dummy_encapsulated_cmd_response
 11429  0041E8  0100               	movlb	0	; () banked
 11430  0041EA  6FB0               	movwf	_inPipes& (0+255),b
 11431  0041EC  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11432  0041EE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11433                           
 11434                           ; BSR set to: 0
 11435                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11436  0041F0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11437                           
 11438                           ;usb_device_cdc.c: 183: break;
 11439  0041F2  0012               	return	
 11440  0041F4                     l1903:
 11441                           
 11442                           ; BSR set to: 4
 11443                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11444  0041F4  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11445  0041F8  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11446                           
 11447                           ; BSR set to: 4
 11448                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11449  0041FC  0E7F               	movlw	low _line_coding
 11450  0041FE  0101               	movlb	1	; () banked
 11451  004200  6FC9               	movwf	_outPipes& (0+255),b
 11452  004202  0E03               	movlw	high _line_coding
 11453  004204  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11454                           
 11455                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11456  004206  0E00               	movlw	0
 11457  004208  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11458  00420A  0E00               	movlw	0
 11459  00420C  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11460                           
 11461                           ; BSR set to: 1
 11462                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11463  00420E  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11464                           
 11465                           ;usb_device_cdc.c: 192: break;
 11466  004210  0012               	return	
 11467  004212                     
 11468                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11469                           
 11470                           ; BSR set to: 1
 11471  004212  0E7F               	movlw	low _line_coding
 11472  004214  0100               	movlb	0	; () banked
 11473  004216  6FB0               	movwf	_inPipes& (0+255),b
 11474  004218  0E03               	movlw	high _line_coding
 11475  00421A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11476                           
 11477                           ; BSR set to: 0
 11478  00421C  0E00               	movlw	0
 11479  00421E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11480  004220  0E07               	movlw	7
 11481  004222  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11482                           
 11483                           ; BSR set to: 0
 11484  004224  0EC1               	movlw	193
 11485  004226  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11486                           
 11487                           ;usb_device_cdc.c: 199: break;
 11488  004228  0012               	return	
 11489  00422A                     l1905:
 11490                           
 11491                           ; BSR set to: 4
 11492                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11493  00422A  C432 F1E1          	movff	1074,_control_signal_bitmap	;volatile
 11494                           
 11495                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11496  00422E  0100               	movlb	0	; () banked
 11497  004230  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;usb_device_cdc.c: 261: }
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;usb_device_cdc.c: 260: break;
 11504                           
 11505                           ;usb_device_cdc.c: 259: default:
 11506                           
 11507                           ;usb_device_cdc.c: 235: break;
 11508  004232  0012               	return	
 11509  004234                     l1899:
 11510                           
 11511                           ; BSR set to: 0
 11512  004234  0104               	movlb	4	; () banked
 11513  004236  5131               	movf	49,w,b	;volatile
 11514                           
 11515                           ; Switch size 1, requested type "space"
 11516                           ; Number of cases is 5, Range of values is 0 to 34
 11517                           ; switch strategies available:
 11518                           ; Name         Instructions Cycles
 11519                           ; simple_byte           16     9 (average)
 11520                           ;	Chosen strategy is simple_byte
 11521  004238  0A00               	xorlw	0	; case 0
 11522  00423A  B4D8               	btfsc	status,2,c
 11523  00423C  D7C8               	goto	l1900
 11524  00423E  0A01               	xorlw	1	; case 1
 11525  004240  B4D8               	btfsc	status,2,c
 11526  004242  D7D1               	goto	l1902
 11527  004244  0A21               	xorlw	33	; case 32
 11528  004246  B4D8               	btfsc	status,2,c
 11529  004248  D7D5               	goto	l1903
 11530  00424A  0A01               	xorlw	1	; case 33
 11531  00424C  B4D8               	btfsc	status,2,c
 11532  00424E  D7E1               	goto	l1904
 11533  004250  0A03               	xorlw	3	; case 34
 11534  004252  A4D8               	btfss	status,2,c
 11535  004254  0012               	return	
 11536  004256  D7E9               	goto	l1905
 11537  004258                     __end_of_USBCheckCDCRequest:
 11538                           	opt stack 0
 11539                           tosu	equ	0xFFF
 11540                           tosh	equ	0xFFE
 11541                           tosl	equ	0xFFD
 11542                           pclath	equ	0xFFA
 11543                           tblptru	equ	0xFF8
 11544                           tblptrh	equ	0xFF7
 11545                           tblptrl	equ	0xFF6
 11546                           tablat	equ	0xFF5
 11547                           prodh	equ	0xFF4
 11548                           prodl	equ	0xFF3
 11549                           intcon	equ	0xFF2
 11550                           intcon2	equ	0xFF1
 11551                           intcon3	equ	0xFF0
 11552                           indf0	equ	0xFEF
 11553                           postinc0	equ	0xFEE
 11554                           plusw0	equ	0xFEB
 11555                           fsr0h	equ	0xFEA
 11556                           fsr0l	equ	0xFE9
 11557                           wreg	equ	0xFE8
 11558                           postinc1	equ	0xFE6
 11559                           postdec1	equ	0xFE5
 11560                           fsr1h	equ	0xFE2
 11561                           fsr1l	equ	0xFE1
 11562                           indf2	equ	0xFDF
 11563                           postinc2	equ	0xFDE
 11564                           postdec2	equ	0xFDD
 11565                           plusw2	equ	0xFDB
 11566                           fsr2h	equ	0xFDA
 11567                           fsr2l	equ	0xFD9
 11568                           status	equ	0xFD8
 11569                           
 11570 ;; *************** function _CDCInitEP *****************
 11571 ;; Defined at:
 11572 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;		None
 11575 ;; Auto vars:     Size  Location     Type
 11576 ;;		None
 11577 ;; Return value:  Size  Location     Type
 11578 ;;                  1    wreg      void 
 11579 ;; Registers used:
 11580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11581 ;; Tracked objects:
 11582 ;;		On entry : 0/0
 11583 ;;		On exit  : 0/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11590 ;;Total ram usage:        0 bytes
 11591 ;; Hardware stack levels used:    1
 11592 ;; Hardware stack levels required when called:   13
 11593 ;; This function calls:
 11594 ;;		_USBEnableEndpoint
 11595 ;;		_USBTransferOnePacket
 11596 ;; This function is called by:
 11597 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           	psect	text46
 11602  004EF2                     __ptext46:
 11603                           	opt stack 0
 11604  004EF2                     _CDCInitEP:
 11605                           	opt stack 12
 11606                           
 11607                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11608                           
 11609                           ;incstack = 0
 11610  004EF2  0E80               	movlw	128
 11611  004EF4  0103               	movlb	3	; () banked
 11612  004EF6  6F7F               	movwf	_line_coding& (0+255),b
 11613  004EF8  0E25               	movlw	37
 11614  004EFA  6F80               	movwf	(_line_coding+1)& (0+255),b
 11615  004EFC  0E00               	movlw	0
 11616  004EFE  6F81               	movwf	(_line_coding+2)& (0+255),b
 11617  004F00  0E00               	movlw	0
 11618  004F02  6F82               	movwf	(_line_coding+3)& (0+255),b
 11619                           
 11620                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11621  004F04  0E00               	movlw	0
 11622  004F06  6F83               	movwf	(_line_coding+4)& (0+255),b
 11623                           
 11624                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11625  004F08  0E00               	movlw	0
 11626  004F0A  6F84               	movwf	(_line_coding+5)& (0+255),b
 11627                           
 11628                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11629  004F0C  0E08               	movlw	8
 11630  004F0E  6F85               	movwf	(_line_coding+6)& (0+255),b
 11631                           
 11632                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11633  004F10  0E00               	movlw	0
 11634  004F12  0100               	movlb	0	; () banked
 11635  004F14  6FC6               	movwf	_cdc_rx_len& (0+255),b
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11639  004F16  0E1A               	movlw	26
 11640  004F18  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11641  004F1A  0E01               	movlw	1
 11642  004F1C  EC2B  F02C         	call	_USBEnableEndpoint
 11643                           
 11644                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11645  004F20  0E1E               	movlw	30
 11646  004F22  0100               	movlb	0	; () banked
 11647  004F24  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11648  004F26  0E02               	movlw	2
 11649  004F28  EC2B  F02C         	call	_USBEnableEndpoint
 11650                           
 11651                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11652  004F2C  0E00               	movlw	0
 11653  004F2E  0100               	movlb	0	; () banked
 11654  004F30  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11655  004F32  0E00               	movlw	low _cdc_data_rx
 11656  004F34  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11657  004F36  0E05               	movlw	high _cdc_data_rx
 11658  004F38  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11659  004F3A  0E40               	movlw	64
 11660  004F3C  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11661  004F3E  0E02               	movlw	2
 11662  004F40  EC1C  F020         	call	_USBTransferOnePacket
 11663  004F44  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11664  004F48  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11665                           
 11666                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11667  004F4C  0E00               	movlw	0
 11668  004F4E  0101               	movlb	1	; () banked
 11669  004F50  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11670  004F52  0E00               	movlw	0
 11671  004F54  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11672                           
 11673                           ; BSR set to: 1
 11674                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11675  004F56  0E00               	movlw	0
 11676  004F58  0100               	movlb	0	; () banked
 11677  004F5A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 11678                           
 11679                           ; BSR set to: 0
 11680  004F5C  0012               	return		;funcret
 11681  004F5E                     __end_of_CDCInitEP:
 11682                           	opt stack 0
 11683                           tosu	equ	0xFFF
 11684                           tosh	equ	0xFFE
 11685                           tosl	equ	0xFFD
 11686                           pclath	equ	0xFFA
 11687                           tblptru	equ	0xFF8
 11688                           tblptrh	equ	0xFF7
 11689                           tblptrl	equ	0xFF6
 11690                           tablat	equ	0xFF5
 11691                           prodh	equ	0xFF4
 11692                           prodl	equ	0xFF3
 11693                           intcon	equ	0xFF2
 11694                           intcon2	equ	0xFF1
 11695                           intcon3	equ	0xFF0
 11696                           indf0	equ	0xFEF
 11697                           postinc0	equ	0xFEE
 11698                           plusw0	equ	0xFEB
 11699                           fsr0h	equ	0xFEA
 11700                           fsr0l	equ	0xFE9
 11701                           wreg	equ	0xFE8
 11702                           postinc1	equ	0xFE6
 11703                           postdec1	equ	0xFE5
 11704                           fsr1h	equ	0xFE2
 11705                           fsr1l	equ	0xFE1
 11706                           indf2	equ	0xFDF
 11707                           postinc2	equ	0xFDE
 11708                           postdec2	equ	0xFDD
 11709                           plusw2	equ	0xFDB
 11710                           fsr2h	equ	0xFDA
 11711                           fsr2l	equ	0xFD9
 11712                           status	equ	0xFD8
 11713                           
 11714 ;; *************** function _USBEnableEndpoint *****************
 11715 ;; Defined at:
 11716 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11717 ;; Parameters:    Size  Location     Type
 11718 ;;  ep              1    wreg     unsigned char 
 11719 ;;  options         1   37[BANK0 ] unsigned char 
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;  ep              1   40[BANK0 ] unsigned char 
 11722 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11723 ;;		 -> UEP0(1), 
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  1    wreg      void 
 11726 ;; Registers used:
 11727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11733 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11734 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11736 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11737 ;;Total ram usage:        4 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:   12
 11740 ;; This function calls:
 11741 ;;		_USBConfigureEndpoint
 11742 ;; This function is called by:
 11743 ;;		_CDCInitEP
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           	psect	text47
 11748  005856                     __ptext47:
 11749                           	opt stack 0
 11750  005856                     _USBEnableEndpoint:
 11751                           	opt stack 12
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;incstack = 0
 11755                           ;USBEnableEndpoint@ep stored from wreg
 11756  005856  0100               	movlb	0	; () banked
 11757  005858  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11758                           
 11759                           ;usb_device.c: 898: unsigned char* p;
 11760                           ;usb_device.c: 902: if(options & 0x04)
 11761  00585A  0100               	movlb	0	; () banked
 11762  00585C  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11763  00585E  D005               	goto	l1640
 11764                           
 11765                           ; BSR set to: 0
 11766                           ;usb_device.c: 903: {
 11767                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11768  005860  0E00               	movlw	0
 11769  005862  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11770  005864  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11771  005866  ECBE  F023         	call	_USBConfigureEndpoint
 11772  00586A                     l1640:
 11773                           
 11774                           ;usb_device.c: 905: }
 11775                           ;usb_device.c: 906: if(options & 0x02)
 11776  00586A  0100               	movlb	0	; () banked
 11777  00586C  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11778  00586E  D005               	goto	l1641
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;usb_device.c: 907: {
 11782                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11783  005870  0E01               	movlw	1
 11784  005872  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11785  005874  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11786  005876  ECBE  F023         	call	_USBConfigureEndpoint
 11787  00587A                     l1641:
 11788                           
 11789                           ;usb_device.c: 909: }
 11790                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11791  00587A  0100               	movlb	0	; () banked
 11792  00587C  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11793  00587E  0D01               	mullw	1
 11794  005880  0E26               	movlw	38
 11795  005882  24F3               	addwf	prodl,w,c
 11796  005884  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11797  005886  0E0F               	movlw	15
 11798  005888  20F4               	addwfc	prodh,w,c
 11799  00588A  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11800                           
 11801                           ; BSR set to: 0
 11802                           ;usb_device.c: 919: *p = options;
 11803  00588C  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11804  005890  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11805  005894  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11806                           
 11807                           ; BSR set to: 0
 11808  005898  0012               	return		;funcret
 11809  00589A                     __end_of_USBEnableEndpoint:
 11810                           	opt stack 0
 11811                           tosu	equ	0xFFF
 11812                           tosh	equ	0xFFE
 11813                           tosl	equ	0xFFD
 11814                           pclath	equ	0xFFA
 11815                           tblptru	equ	0xFF8
 11816                           tblptrh	equ	0xFF7
 11817                           tblptrl	equ	0xFF6
 11818                           tablat	equ	0xFF5
 11819                           prodh	equ	0xFF4
 11820                           prodl	equ	0xFF3
 11821                           intcon	equ	0xFF2
 11822                           intcon2	equ	0xFF1
 11823                           intcon3	equ	0xFF0
 11824                           indf0	equ	0xFEF
 11825                           postinc0	equ	0xFEE
 11826                           plusw0	equ	0xFEB
 11827                           fsr0h	equ	0xFEA
 11828                           fsr0l	equ	0xFE9
 11829                           wreg	equ	0xFE8
 11830                           postinc1	equ	0xFE6
 11831                           postdec1	equ	0xFE5
 11832                           fsr1h	equ	0xFE2
 11833                           fsr1l	equ	0xFE1
 11834                           indf2	equ	0xFDF
 11835                           postinc2	equ	0xFDE
 11836                           postdec2	equ	0xFDD
 11837                           plusw2	equ	0xFDB
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842 ;; *************** function _USBConfigureEndpoint *****************
 11843 ;; Defined at:
 11844 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  EPNum           1    wreg     unsigned char 
 11847 ;;  direction       1   29[BANK0 ] unsigned char 
 11848 ;; Auto vars:     Size  Location     Type
 11849 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11850 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11851 ;;		 -> BDT(48), 
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  1    wreg      void 
 11854 ;; Registers used:
 11855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11861 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11862 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11863 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11864 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11865 ;;Total ram usage:        8 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; Hardware stack levels required when called:   11
 11868 ;; This function calls:
 11869 ;;		Nothing
 11870 ;; This function is called by:
 11871 ;;		_USBEnableEndpoint
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875                           	psect	text48
 11876  00477C                     __ptext48:
 11877                           	opt stack 0
 11878  00477C                     _USBConfigureEndpoint:
 11879                           	opt stack 12
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;incstack = 0
 11883                           ;USBConfigureEndpoint@EPNum stored from wreg
 11884  00477C  0100               	movlb	0	; () banked
 11885  00477E  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11886                           
 11887                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11888                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11889  004780  0E00               	movlw	0
 11890  004782  0100               	movlb	0	; () banked
 11891  004784  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11892  004786  0E04               	movlw	4
 11893  004788  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11894                           
 11895                           ; BSR set to: 0
 11896                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11897  00478A  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11898  00478C  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11899  00478E  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11900  004790  90D8               	bcf	status,0,c
 11901  004792  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11902  004794  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11903  004796  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11904  004798  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11905  00479A  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11906  00479C  90D8               	bcf	status,0,c
 11907  00479E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11908  0047A0  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11909  0047A2  90D8               	bcf	status,0,c
 11910  0047A4  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11911  0047A6  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11912  0047A8  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11913  0047AA  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11914  0047AC  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11915  0047AE  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11916  0047B0  90D8               	bcf	status,0,c
 11917  0047B2  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11918  0047B4  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11919  0047B6  90D8               	bcf	status,0,c
 11920  0047B8  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11921  0047BA  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11922  0047BC  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11923  0047BE  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11924  0047C0  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11925  0047C2  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11929  0047C4  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11930  0047C8  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11931  0047CC  9EDF               	bcf	indf2,7,c
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;usb_device.c: 1575: if(direction == 0)
 11935  0047CE  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11936  0047D0  A4D8               	btfss	status,2,c
 11937  0047D2  D007               	goto	l1676
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;usb_device.c: 1576: {
 11941                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11942  0047D4  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11943  0047D6  0D02               	mullw	2
 11944  0047D8  0E0E               	movlw	low _pBDTEntryOut
 11945  0047DA  24F3               	addwf	prodl,w,c
 11946  0047DC  6ED9               	movwf	fsr2l,c
 11947  0047DE  0E03               	movlw	high _pBDTEntryOut
 11948  0047E0  D006               	goto	L10
 11949  0047E2                     l1676:
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;usb_device.c: 1579: else
 11953                           ;usb_device.c: 1580: {
 11954                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11955                           
 11956                           ; BSR set to: 0
 11957  0047E2  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11958  0047E4  0D02               	mullw	2
 11959  0047E6  0EB6               	movlw	low _pBDTEntryIn
 11960  0047E8  24F3               	addwf	prodl,w,c
 11961  0047EA  6ED9               	movwf	fsr2l,c
 11962  0047EC  0E00               	movlw	high _pBDTEntryIn
 11963  0047EE                     L10:
 11964  0047EE  20F4               	addwfc	prodh,w,c
 11965  0047F0  6EDA               	movwf	fsr2h,c
 11966  0047F2  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11967  0047F6  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;usb_device.c: 1582: }
 11971                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11972                           
 11973                           ; BSR set to: 0
 11974  0047FA  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11975  0047FE  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11976  004802  9CDF               	bcf	indf2,6,c
 11977                           
 11978                           ; BSR set to: 0
 11979                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11980  004804  EE20 F004          	lfsr	2,4
 11981  004808  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11982  00480A  26D9               	addwf	fsr2l,f,c
 11983  00480C  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11984  00480E  22DA               	addwfc	fsr2h,f,c
 11985  004810  8CDF               	bsf	indf2,6,c
 11986                           
 11987                           ; BSR set to: 0
 11988  004812  0012               	return		;funcret
 11989  004814                     __end_of_USBConfigureEndpoint:
 11990                           	opt stack 0
 11991                           tosu	equ	0xFFF
 11992                           tosh	equ	0xFFE
 11993                           tosl	equ	0xFFD
 11994                           pclath	equ	0xFFA
 11995                           tblptru	equ	0xFF8
 11996                           tblptrh	equ	0xFF7
 11997                           tblptrl	equ	0xFF6
 11998                           tablat	equ	0xFF5
 11999                           prodh	equ	0xFF4
 12000                           prodl	equ	0xFF3
 12001                           intcon	equ	0xFF2
 12002                           intcon2	equ	0xFF1
 12003                           intcon3	equ	0xFF0
 12004                           indf0	equ	0xFEF
 12005                           postinc0	equ	0xFEE
 12006                           plusw0	equ	0xFEB
 12007                           fsr0h	equ	0xFEA
 12008                           fsr0l	equ	0xFE9
 12009                           wreg	equ	0xFE8
 12010                           postinc1	equ	0xFE6
 12011                           postdec1	equ	0xFE5
 12012                           fsr1h	equ	0xFE2
 12013                           fsr1l	equ	0xFE1
 12014                           indf2	equ	0xFDF
 12015                           postinc2	equ	0xFDE
 12016                           postdec2	equ	0xFDD
 12017                           plusw2	equ	0xFDB
 12018                           fsr2h	equ	0xFDA
 12019                           fsr2l	equ	0xFD9
 12020                           status	equ	0xFD8
 12021                           
 12022 ;; *************** function _USBCtrlTrfOutHandler *****************
 12023 ;; Defined at:
 12024 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12042 ;;Total ram usage:        0 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:   13
 12045 ;; This function calls:
 12046 ;;		_USBCtrlTrfRxService
 12047 ;; This function is called by:
 12048 ;;		_USBCtrlEPService
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text49
 12053  004FCA                     __ptext49:
 12054                           	opt stack 0
 12055  004FCA                     _USBCtrlTrfOutHandler:
 12056                           	opt stack 12
 12057                           
 12058                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;incstack = 0
 12062  004FCA  0E02               	movlw	2
 12063  004FCC  0100               	movlb	0	; () banked
 12064  004FCE  19CB               	xorwf	_controlTransferState& (0+255),w,b
 12065  004FD0  A4D8               	btfss	status,2,c
 12066  004FD2  D003               	goto	l1782
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;usb_device.c: 2558: {
 12070                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12071  004FD4  EC7A  F016         	call	_USBCtrlTrfRxService	;wreg free
 12072                           
 12073                           ;usb_device.c: 2560: }
 12074  004FD8  0012               	return	
 12075  004FDA                     l1782:
 12076                           
 12077                           ;usb_device.c: 2561: else
 12078                           ;usb_device.c: 2562: {
 12079                           ;usb_device.c: 2565: controlTransferState = 0;
 12080  004FDA  0E00               	movlw	0
 12081  004FDC  0100               	movlb	0	; () banked
 12082  004FDE  6FCB               	movwf	_controlTransferState& (0+255),b
 12083                           
 12084                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12085  004FE0  0101               	movlb	1	; () banked
 12086  004FE2  51E4               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12087  004FE4  A4D8               	btfss	status,2,c
 12088  004FE6  D020               	goto	l1784
 12089                           
 12090                           ; BSR set to: 1
 12091                           ;usb_device.c: 2573: {
 12092                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12093  004FE8  0100               	movlb	0	; () banked
 12094  004FEA  EE20 F001          	lfsr	2,1
 12095  004FEE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12096  004FF0  26D9               	addwf	fsr2l,f,c
 12097  004FF2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12098  004FF4  22DA               	addwfc	fsr2h,f,c
 12099  004FF6  0E08               	movlw	8
 12100  004FF8  6EDF               	movwf	indf2,c
 12101                           
 12102                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12103  004FFA  EE20 F002          	lfsr	2,2
 12104  004FFE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12105  005000  26D9               	addwf	fsr2l,f,c
 12106  005002  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12107  005004  22DA               	addwfc	fsr2h,f,c
 12108  005006  0E30               	movlw	48
 12109  005008  6EDE               	movwf	postinc2,c
 12110  00500A  0E04               	movlw	4
 12111  00500C  6EDD               	movwf	postdec2,c
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12115  00500E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12116  005012  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12117  005016  0E0C               	movlw	12
 12118  005018  6EDF               	movwf	indf2,c
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12122  00501A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12123  00501E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12124  005022  0E00               	movlw	0
 12125  005024  8EDB               	bsf	plusw2,7,c
 12126                           
 12127                           ;usb_device.c: 2578: }
 12128  005026  0012               	return	
 12129  005028                     l1784:
 12130                           
 12131                           ;usb_device.c: 2579: else
 12132                           ;usb_device.c: 2580: {
 12133                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12134                           
 12135                           ; BSR set to: 0
 12136  005028  0E00               	movlw	0
 12137  00502A  0101               	movlb	1	; () banked
 12138  00502C  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12139                           
 12140                           ; BSR set to: 1
 12141  00502E  0012               	return	
 12142  005030                     __end_of_USBCtrlTrfOutHandler:
 12143                           	opt stack 0
 12144                           tosu	equ	0xFFF
 12145                           tosh	equ	0xFFE
 12146                           tosl	equ	0xFFD
 12147                           pclath	equ	0xFFA
 12148                           tblptru	equ	0xFF8
 12149                           tblptrh	equ	0xFF7
 12150                           tblptrl	equ	0xFF6
 12151                           tablat	equ	0xFF5
 12152                           prodh	equ	0xFF4
 12153                           prodl	equ	0xFF3
 12154                           intcon	equ	0xFF2
 12155                           intcon2	equ	0xFF1
 12156                           intcon3	equ	0xFF0
 12157                           indf0	equ	0xFEF
 12158                           postinc0	equ	0xFEE
 12159                           plusw0	equ	0xFEB
 12160                           fsr0h	equ	0xFEA
 12161                           fsr0l	equ	0xFE9
 12162                           wreg	equ	0xFE8
 12163                           postinc1	equ	0xFE6
 12164                           postdec1	equ	0xFE5
 12165                           fsr1h	equ	0xFE2
 12166                           fsr1l	equ	0xFE1
 12167                           indf2	equ	0xFDF
 12168                           postinc2	equ	0xFDE
 12169                           postdec2	equ	0xFDD
 12170                           plusw2	equ	0xFDB
 12171                           fsr2h	equ	0xFDA
 12172                           fsr2l	equ	0xFD9
 12173                           status	equ	0xFD8
 12174                           
 12175 ;; *************** function _USBCtrlTrfRxService *****************
 12176 ;; Defined at:
 12177 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12182 ;;  i               1   29[BANK0 ] unsigned char 
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  1    wreg      void 
 12185 ;; Registers used:
 12186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12193 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12196 ;;Total ram usage:        2 bytes
 12197 ;; Hardware stack levels used:    1
 12198 ;; Hardware stack levels required when called:   12
 12199 ;; This function calls:
 12200 ;;		_USBCtrlEPAllowStatusStage
 12201 ;; This function is called by:
 12202 ;;		_USBCtrlTrfOutHandler
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text50
 12207  002CF4                     __ptext50:
 12208                           	opt stack 0
 12209  002CF4                     _USBCtrlTrfRxService:
 12210                           	opt stack 12
 12211                           
 12212                           ;usb_device.c: 1872: uint8_t byteToRead;
 12213                           ;usb_device.c: 1873: uint8_t i;
 12214                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12215                           
 12216                           ;incstack = 0
 12217  002CF4  0100               	movlb	0	; () banked
 12218  002CF6  EE20 F001          	lfsr	2,1
 12219  002CFA  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12220  002CFC  26D9               	addwf	fsr2l,f,c
 12221  002CFE  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12222  002D00  22DA               	addwfc	fsr2h,f,c
 12223  002D02  50DF               	movf	indf2,w,c
 12224  002D04  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12228  002D06  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12229  002D08  0101               	movlb	1	; () banked
 12230  002D0A  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12231  002D0C  0E00               	movlw	0
 12232  002D0E  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12233  002D10  A0D8               	btfss	status,0,c
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;usb_device.c: 1884: {
 12237                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12238  002D12  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12239                           
 12240                           ; BSR set to: 1
 12241                           ;usb_device.c: 1886: }
 12242                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12243                           
 12244                           ; BSR set to: 1
 12245  002D16  0100               	movlb	0	; () banked
 12246  002D18  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12247  002D1A  0101               	movlb	1	; () banked
 12248  002D1C  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12249  002D1E  0E00               	movlw	0
 12250  002D20  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12251                           
 12252                           ; BSR set to: 1
 12253                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12254  002D22  0E00               	movlw	0
 12255  002D24  0100               	movlb	0	; () banked
 12256  002D26  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12257  002D28  D013               	goto	l1710
 12258  002D2A                     
 12259                           ; BSR set to: 0
 12260                           ;usb_device.c: 1893: {
 12261                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12262                           
 12263                           ; BSR set to: 0
 12264  002D2A  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12265  002D2C  0D01               	mullw	1
 12266  002D2E  0E38               	movlw	56
 12267  002D30  24F3               	addwf	prodl,w,c
 12268  002D32  6ED9               	movwf	fsr2l,c
 12269  002D34  0E04               	movlw	4
 12270  002D36  20F4               	addwfc	prodh,w,c
 12271  002D38  6EDA               	movwf	fsr2h,c
 12272  002D3A  C1C9  FFE1         	movff	_outPipes,fsr1l
 12273  002D3E  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12274  002D42  CFDF FFE7          	movff	indf2,indf1
 12275                           
 12276                           ; BSR set to: 0
 12277  002D46  0101               	movlb	1	; () banked
 12278  002D48  4BC9               	infsnz	_outPipes& (0+255),f,b
 12279  002D4A  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12280                           
 12281                           ; BSR set to: 1
 12282  002D4C  0100               	movlb	0	; () banked
 12283  002D4E  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12284  002D50                     l1710:
 12285                           
 12286                           ; BSR set to: 0
 12287                           
 12288                           ; BSR set to: 0
 12289  002D50  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12290  002D52  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12291  002D54  A0D8               	btfss	status,0,c
 12292  002D56  D7E9               	goto	l1711
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;usb_device.c: 1895: }
 12296                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12297                           
 12298                           ; BSR set to: 0
 12299  002D58  0101               	movlb	1	; () banked
 12300  002D5A  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12301  002D5C  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12302  002D5E  B4D8               	btfsc	status,2,c
 12303  002D60  D033               	goto	l1713
 12304                           
 12305                           ; BSR set to: 1
 12306                           ;usb_device.c: 1900: {
 12307                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12308  002D62  0100               	movlb	0	; () banked
 12309  002D64  EE20 F001          	lfsr	2,1
 12310  002D68  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12311  002D6A  26D9               	addwf	fsr2l,f,c
 12312  002D6C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12313  002D6E  22DA               	addwfc	fsr2h,f,c
 12314  002D70  0E08               	movlw	8
 12315  002D72  6EDF               	movwf	indf2,c
 12316                           
 12317                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12318  002D74  EE20 F002          	lfsr	2,2
 12319  002D78  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12320  002D7A  26D9               	addwf	fsr2l,f,c
 12321  002D7C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12322  002D7E  22DA               	addwfc	fsr2h,f,c
 12323  002D80  0E38               	movlw	56
 12324  002D82  6EDE               	movwf	postinc2,c
 12325  002D84  0E04               	movlw	4
 12326  002D86  6EDD               	movwf	postdec2,c
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12330  002D88  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12331  002D8C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12332  002D90  BCDF               	btfsc	indf2,6,c
 12333  002D92  D00D               	goto	l1714
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;usb_device.c: 1904: {
 12337                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12338  002D94  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12339  002D98  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12340  002D9C  0E48               	movlw	72
 12341  002D9E  6EDF               	movwf	indf2,c
 12342                           
 12343                           ; BSR set to: 0
 12344                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12345  002DA0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12346  002DA4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12347  002DA8  0E00               	movlw	0
 12348  002DAA  8EDB               	bsf	plusw2,7,c
 12349                           
 12350                           ;usb_device.c: 1907: }
 12351  002DAC  0012               	return	
 12352  002DAE                     l1714:
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;usb_device.c: 1908: else
 12356                           ;usb_device.c: 1909: {
 12357                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12358                           
 12359                           ; BSR set to: 0
 12360  002DAE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12361  002DB2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12362  002DB6  0E08               	movlw	8
 12363  002DB8  6EDF               	movwf	indf2,c
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12367  002DBA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12368  002DBE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12369  002DC2  0E00               	movlw	0
 12370  002DC4  8EDB               	bsf	plusw2,7,c
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;usb_device.c: 1912: }
 12374                           ;usb_device.c: 1913: }
 12375  002DC6  0012               	return	
 12376  002DC8                     l1713:
 12377                           
 12378                           ;usb_device.c: 1914: else
 12379                           ;usb_device.c: 1915: {
 12380                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12381                           
 12382                           ; BSR set to: 0
 12383  002DC8  0100               	movlb	0	; () banked
 12384  002DCA  EE20 F001          	lfsr	2,1
 12385  002DCE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12386  002DD0  26D9               	addwf	fsr2l,f,c
 12387  002DD2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12388  002DD4  22DA               	addwfc	fsr2h,f,c
 12389  002DD6  0E08               	movlw	8
 12390  002DD8  6EDF               	movwf	indf2,c
 12391                           
 12392                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12393  002DDA  EE20 F002          	lfsr	2,2
 12394  002DDE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12395  002DE0  26D9               	addwf	fsr2l,f,c
 12396  002DE2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12397  002DE4  22DA               	addwfc	fsr2h,f,c
 12398  002DE6  0E30               	movlw	48
 12399  002DE8  6EDE               	movwf	postinc2,c
 12400  002DEA  0E04               	movlw	4
 12401  002DEC  6EDD               	movwf	postdec2,c
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12405  002DEE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12406  002DF2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12407  002DF6  0E04               	movlw	4
 12408  002DF8  6EDF               	movwf	indf2,c
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12412  002DFA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12413  002DFE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12414  002E02  0E00               	movlw	0
 12415  002E04  8EDB               	bsf	plusw2,7,c
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;usb_device.c: 1944: }
 12419                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12420                           
 12421                           ; BSR set to: 0
 12422  002E06  0101               	movlb	1	; () banked
 12423  002E08  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12427  002E0A  0100               	movlb	0	; () banked
 12428  002E0C  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12429  002E0E  A4D8               	btfss	status,2,c
 12430  002E10  0012               	return	
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;usb_device.c: 1960: {
 12434                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12435  002E12  EC62  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12436  002E16  0012               	return	
 12437  002E18                     __end_of_USBCtrlTrfRxService:
 12438                           	opt stack 0
 12439                           tosu	equ	0xFFF
 12440                           tosh	equ	0xFFE
 12441                           tosl	equ	0xFFD
 12442                           pclath	equ	0xFFA
 12443                           tblptru	equ	0xFF8
 12444                           tblptrh	equ	0xFF7
 12445                           tblptrl	equ	0xFF6
 12446                           tablat	equ	0xFF5
 12447                           prodh	equ	0xFF4
 12448                           prodl	equ	0xFF3
 12449                           intcon	equ	0xFF2
 12450                           intcon2	equ	0xFF1
 12451                           intcon3	equ	0xFF0
 12452                           indf0	equ	0xFEF
 12453                           postinc0	equ	0xFEE
 12454                           plusw0	equ	0xFEB
 12455                           fsr0h	equ	0xFEA
 12456                           fsr0l	equ	0xFE9
 12457                           wreg	equ	0xFE8
 12458                           indf1	equ	0xFE7
 12459                           postinc1	equ	0xFE6
 12460                           postdec1	equ	0xFE5
 12461                           fsr1h	equ	0xFE2
 12462                           fsr1l	equ	0xFE1
 12463                           indf2	equ	0xFDF
 12464                           postinc2	equ	0xFDE
 12465                           postdec2	equ	0xFDD
 12466                           plusw2	equ	0xFDB
 12467                           fsr2h	equ	0xFDA
 12468                           fsr2l	equ	0xFD9
 12469                           status	equ	0xFD8
 12470                           
 12471 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12472 ;; Defined at:
 12473 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;		None
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;		None
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1    wreg      void 
 12480 ;; Registers used:
 12481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12491 ;;Total ram usage:        0 bytes
 12492 ;; Hardware stack levels used:    1
 12493 ;; Hardware stack levels required when called:   11
 12494 ;; This function calls:
 12495 ;;		Nothing
 12496 ;; This function is called by:
 12497 ;;		_USBDeviceTasks
 12498 ;;		_USBCtrlEPServiceComplete
 12499 ;;		_USBCtrlTrfRxService
 12500 ;; This function uses a non-reentrant model
 12501 ;;
 12502                           
 12503                           	psect	text51
 12504  003AC4                     __ptext51:
 12505                           	opt stack 0
 12506  003AC4                     _USBCtrlEPAllowStatusStage:
 12507                           	opt stack 12
 12508                           
 12509                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12510                           
 12511                           ;incstack = 0
 12512  003AC4  0100               	movlb	0	; () banked
 12513  003AC6  51C7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12514  003AC8  A4D8               	btfss	status,2,c
 12515  003ACA  0012               	return	
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;usb_device.c: 1442: {
 12519                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12520  003ACC  0E01               	movlw	1
 12521  003ACE  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12522                           
 12523                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12524  003AD0  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12525  003AD2  A4D8               	btfss	status,2,c
 12526  003AD4  0012               	return	
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;usb_device.c: 1445: {
 12530                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12531  003AD6  0E01               	movlw	1
 12532  003AD8  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12536  003ADA  0E02               	movlw	2
 12537  003ADC  19CB               	xorwf	_controlTransferState& (0+255),w,b
 12538  003ADE  A4D8               	btfss	status,2,c
 12539  003AE0  D015               	goto	l1664
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;usb_device.c: 1451: {
 12543                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12544  003AE2  EE20 F001          	lfsr	2,1
 12545  003AE6  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12546  003AE8  26D9               	addwf	fsr2l,f,c
 12547  003AEA  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12548  003AEC  22DA               	addwfc	fsr2h,f,c
 12549  003AEE  0E00               	movlw	0
 12550  003AF0  6EDF               	movwf	indf2,c
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12554  003AF2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12555  003AF6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12556  003AFA  0E48               	movlw	72
 12557  003AFC  6EDF               	movwf	indf2,c
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12561  003AFE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12562  003B02  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12563  003B06  0E00               	movlw	0
 12564  003B08  8EDB               	bsf	plusw2,7,c
 12565                           
 12566                           ;usb_device.c: 1455: }
 12567  003B0A  0012               	return	
 12568  003B0C                     l1664:
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12572                           
 12573                           ; BSR set to: 0
 12574  003B0C  05CB               	decf	_controlTransferState& (0+255),w,b
 12575  003B0E  A4D8               	btfss	status,2,c
 12576  003B10  0012               	return	
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;usb_device.c: 1457: {
 12580                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12581  003B12  0E00               	movlw	0
 12582  003B14  0101               	movlb	1	; () banked
 12583  003B16  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12584                           
 12585                           ; BSR set to: 1
 12586                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12587  003B18  0100               	movlb	0	; () banked
 12588  003B1A  EE20 F001          	lfsr	2,1
 12589  003B1E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12590  003B20  26D9               	addwf	fsr2l,f,c
 12591  003B22  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12592  003B24  22DA               	addwfc	fsr2h,f,c
 12593  003B26  0E08               	movlw	8
 12594  003B28  6EDF               	movwf	indf2,c
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12598  003B2A  EE20 F002          	lfsr	2,2
 12599  003B2E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12600  003B30  26D9               	addwf	fsr2l,f,c
 12601  003B32  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12602  003B34  22DA               	addwfc	fsr2h,f,c
 12603  003B36  0E30               	movlw	48
 12604  003B38  6EDE               	movwf	postinc2,c
 12605  003B3A  0E04               	movlw	4
 12606  003B3C  6EDD               	movwf	postdec2,c
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12610  003B3E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12611  003B42  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12612  003B46  0E04               	movlw	4
 12613  003B48  6EDF               	movwf	indf2,c
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12617  003B4A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12618  003B4E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12619  003B52  0E00               	movlw	0
 12620  003B54  8EDB               	bsf	plusw2,7,c
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12624  003B56  0E01               	movlw	1
 12625  003B58  0101               	movlb	1	; () banked
 12626  003B5A  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12627                           
 12628                           ; BSR set to: 1
 12629                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12630  003B5C  0100               	movlb	0	; () banked
 12631  003B5E  EE20 F001          	lfsr	2,1
 12632  003B62  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12633  003B64  26D9               	addwf	fsr2l,f,c
 12634  003B66  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12635  003B68  22DA               	addwfc	fsr2h,f,c
 12636  003B6A  0E08               	movlw	8
 12637  003B6C  6EDF               	movwf	indf2,c
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12641  003B6E  EE20 F002          	lfsr	2,2
 12642  003B72  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12643  003B74  26D9               	addwf	fsr2l,f,c
 12644  003B76  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12645  003B78  22DA               	addwfc	fsr2h,f,c
 12646  003B7A  0E30               	movlw	48
 12647  003B7C  6EDE               	movwf	postinc2,c
 12648  003B7E  0E04               	movlw	4
 12649  003B80  6EDD               	movwf	postdec2,c
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12653  003B82  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12654  003B86  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12655  003B8A  0E80               	movlw	128
 12656  003B8C  6EDF               	movwf	indf2,c
 12657                           
 12658                           ; BSR set to: 0
 12659                           
 12660                           ; BSR set to: 0
 12661                           
 12662                           ; BSR set to: 0
 12663  003B8E  0012               	return	
 12664  003B90                     __end_of_USBCtrlEPAllowStatusStage:
 12665                           	opt stack 0
 12666                           tosu	equ	0xFFF
 12667                           tosh	equ	0xFFE
 12668                           tosl	equ	0xFFD
 12669                           pclath	equ	0xFFA
 12670                           tblptru	equ	0xFF8
 12671                           tblptrh	equ	0xFF7
 12672                           tblptrl	equ	0xFF6
 12673                           tablat	equ	0xFF5
 12674                           prodh	equ	0xFF4
 12675                           prodl	equ	0xFF3
 12676                           intcon	equ	0xFF2
 12677                           intcon2	equ	0xFF1
 12678                           intcon3	equ	0xFF0
 12679                           indf0	equ	0xFEF
 12680                           postinc0	equ	0xFEE
 12681                           plusw0	equ	0xFEB
 12682                           fsr0h	equ	0xFEA
 12683                           fsr0l	equ	0xFE9
 12684                           wreg	equ	0xFE8
 12685                           indf1	equ	0xFE7
 12686                           postinc1	equ	0xFE6
 12687                           postdec1	equ	0xFE5
 12688                           fsr1h	equ	0xFE2
 12689                           fsr1l	equ	0xFE1
 12690                           indf2	equ	0xFDF
 12691                           postinc2	equ	0xFDE
 12692                           postdec2	equ	0xFDD
 12693                           plusw2	equ	0xFDB
 12694                           fsr2h	equ	0xFDA
 12695                           fsr2l	equ	0xFD9
 12696                           status	equ	0xFD8
 12697                           
 12698 ;; *************** function _USBCtrlTrfInHandler *****************
 12699 ;; Defined at:
 12700 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;		None
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  1    wreg      void 
 12707 ;; Registers used:
 12708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12717 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12718 ;;Total ram usage:        1 bytes
 12719 ;; Hardware stack levels used:    1
 12720 ;; Hardware stack levels required when called:   12
 12721 ;; This function calls:
 12722 ;;		_USBCtrlTrfTxService
 12723 ;; This function is called by:
 12724 ;;		_USBCtrlEPService
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728                           	psect	text52
 12729  003F76                     __ptext52:
 12730                           	opt stack 0
 12731  003F76                     _USBCtrlTrfInHandler:
 12732                           	opt stack 13
 12733                           
 12734                           ;usb_device.c: 2611: uint8_t lastDTS;
 12735                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;incstack = 0
 12739  003F76  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12740  003F7A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12741  003F7E  0100               	movlb	0	; () banked
 12742  003F80  0E00               	movlw	0
 12743  003F82  BCDF               	btfsc	indf2,6,c
 12744  003F84  0E01               	movlw	1
 12745  003F86  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12749  003F88  0E04               	movlw	4
 12750  003F8A  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12754  003F8C  0E08               	movlw	8
 12755  003F8E  19CD               	xorwf	_USBDeviceState& (0+255),w,b
 12756  003F90  A4D8               	btfss	status,2,c
 12757  003F92  D00D               	goto	l1791
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;usb_device.c: 2622: {
 12761                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12762  003F94  0104               	movlb	4	; () banked
 12763  003F96  5132               	movf	50,w,b	;volatile
 12764  003F98  0B7F               	andlw	127
 12765  003F9A  010F               	movlb	15	; () banked
 12766  003F9C  6F38               	movwf	56,b	;volatile
 12767                           
 12768                           ; BSR set to: 15
 12769                           ;usb_device.c: 2624: if(UADDR != 0u)
 12770  003F9E  5138               	movf	56,w,b	;volatile
 12771  003FA0  B4D8               	btfsc	status,2,c
 12772  003FA2  D002               	goto	l1790
 12773                           
 12774                           ; BSR set to: 15
 12775                           ;usb_device.c: 2625: {
 12776                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12777  003FA4  0E10               	movlw	16
 12778  003FA6  D001               	goto	L11
 12779  003FA8                     l1790:
 12780                           
 12781                           ;usb_device.c: 2628: else
 12782                           ;usb_device.c: 2629: {
 12783                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12784                           
 12785                           ; BSR set to: 0
 12786  003FA8  0E04               	movlw	4
 12787  003FAA                     L11:
 12788  003FAA  0100               	movlb	0	; () banked
 12789  003FAC  6FCD               	movwf	_USBDeviceState& (0+255),b
 12790  003FAE                     l1791:
 12791                           
 12792                           ; BSR set to: 0
 12793                           ;usb_device.c: 2631: }
 12794                           ;usb_device.c: 2632: }
 12795                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12796                           
 12797                           ; BSR set to: 0
 12798                           
 12799                           ; BSR set to: 0
 12800  003FAE  05CB               	decf	_controlTransferState& (0+255),w,b
 12801  003FB0  A4D8               	btfss	status,2,c
 12802  003FB2  D03B               	goto	l1792
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;usb_device.c: 2636: {
 12806                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12807  003FB4  EE20 F002          	lfsr	2,2
 12808  003FB8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12809  003FBA  26D9               	addwf	fsr2l,f,c
 12810  003FBC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12811  003FBE  22DA               	addwfc	fsr2h,f,c
 12812  003FC0  0E38               	movlw	56
 12813  003FC2  6EDE               	movwf	postinc2,c
 12814  003FC4  0E04               	movlw	4
 12815  003FC6  6EDD               	movwf	postdec2,c
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12819  003FC8  ECED  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12820                           
 12821                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12822  003FCC  0E02               	movlw	2
 12823  003FCE  0100               	movlb	0	; () banked
 12824  003FD0  19CC               	xorwf	_shortPacketStatus& (0+255),w,b
 12825  003FD2  A4D8               	btfss	status,2,c
 12826  003FD4  D00D               	goto	l1793
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;usb_device.c: 2645: {
 12830                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12831  003FD6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12832  003FDA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12833  003FDE  0E04               	movlw	4
 12834  003FE0  6EDF               	movwf	indf2,c
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12838  003FE2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12839  003FE6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12840  003FEA  0E00               	movlw	0
 12841  003FEC  8EDB               	bsf	plusw2,7,c
 12842                           
 12843                           ;usb_device.c: 2650: }
 12844  003FEE  0012               	return	
 12845  003FF0                     l1793:
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;usb_device.c: 2651: else
 12849                           ;usb_device.c: 2652: {
 12850                           ;usb_device.c: 2653: if(lastDTS == 0)
 12851                           
 12852                           ; BSR set to: 0
 12853  003FF0  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12854  003FF2  A4D8               	btfss	status,2,c
 12855  003FF4  D00D               	goto	l1795
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;usb_device.c: 2654: {
 12859                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12860  003FF6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12861  003FFA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12862  003FFE  0E48               	movlw	72
 12863  004000  6EDF               	movwf	indf2,c
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12867  004002  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12868  004006  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12869  00400A  0E00               	movlw	0
 12870  00400C  8EDB               	bsf	plusw2,7,c
 12871                           
 12872                           ;usb_device.c: 2657: }
 12873  00400E  0012               	return	
 12874  004010                     l1795:
 12875                           
 12876                           ; BSR set to: 0
 12877                           ;usb_device.c: 2658: else
 12878                           ;usb_device.c: 2659: {
 12879                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12880                           
 12881                           ; BSR set to: 0
 12882  004010  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12883  004014  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12884  004018  0E08               	movlw	8
 12885  00401A  6EDF               	movwf	indf2,c
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12889  00401C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12890  004020  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12891  004024  0E00               	movlw	0
 12892  004026  8EDB               	bsf	plusw2,7,c
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;usb_device.c: 2662: }
 12896                           ;usb_device.c: 2663: }
 12897                           ;usb_device.c: 2664: }
 12898                           
 12899                           ; BSR set to: 0
 12900  004028  0012               	return	
 12901  00402A                     l1792:
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;usb_device.c: 2665: else
 12905                           ;usb_device.c: 2666: {
 12906                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12907  00402A  0101               	movlb	1	; () banked
 12908  00402C  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12909                           
 12910                           ; BSR set to: 1
 12911                           ;usb_device.c: 2675: }
 12912                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12913                           
 12914                           ; BSR set to: 1
 12915  00402E  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12916                           
 12917                           ; BSR set to: 1
 12918                           ;usb_device.c: 2677: }
 12919                           ;usb_device.c: 2679: controlTransferState = 0;
 12920                           
 12921                           ; BSR set to: 1
 12922  004030  0E00               	movlw	0
 12923  004032  0100               	movlb	0	; () banked
 12924  004034  6FCB               	movwf	_controlTransferState& (0+255),b
 12925  004036  0012               	return	
 12926  004038                     __end_of_USBCtrlTrfInHandler:
 12927                           	opt stack 0
 12928                           tosu	equ	0xFFF
 12929                           tosh	equ	0xFFE
 12930                           tosl	equ	0xFFD
 12931                           pclath	equ	0xFFA
 12932                           tblptru	equ	0xFF8
 12933                           tblptrh	equ	0xFF7
 12934                           tblptrl	equ	0xFF6
 12935                           tablat	equ	0xFF5
 12936                           prodh	equ	0xFF4
 12937                           prodl	equ	0xFF3
 12938                           intcon	equ	0xFF2
 12939                           intcon2	equ	0xFF1
 12940                           intcon3	equ	0xFF0
 12941                           indf0	equ	0xFEF
 12942                           postinc0	equ	0xFEE
 12943                           plusw0	equ	0xFEB
 12944                           fsr0h	equ	0xFEA
 12945                           fsr0l	equ	0xFE9
 12946                           wreg	equ	0xFE8
 12947                           indf1	equ	0xFE7
 12948                           postinc1	equ	0xFE6
 12949                           postdec1	equ	0xFE5
 12950                           fsr1h	equ	0xFE2
 12951                           fsr1l	equ	0xFE1
 12952                           indf2	equ	0xFDF
 12953                           postinc2	equ	0xFDE
 12954                           postdec2	equ	0xFDD
 12955                           plusw2	equ	0xFDB
 12956                           fsr2h	equ	0xFDA
 12957                           fsr2l	equ	0xFD9
 12958                           status	equ	0xFD8
 12959                           
 12960 ;; *************** function _USBCtrlTrfTxService *****************
 12961 ;; Defined at:
 12962 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12963 ;; Parameters:    Size  Location     Type
 12964 ;;		None
 12965 ;; Auto vars:     Size  Location     Type
 12966 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  1    wreg      void 
 12969 ;; Registers used:
 12970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12971 ;; Tracked objects:
 12972 ;;		On entry : 0/0
 12973 ;;		On exit  : 0/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12979 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12980 ;;Total ram usage:        1 bytes
 12981 ;; Hardware stack levels used:    1
 12982 ;; Hardware stack levels required when called:   11
 12983 ;; This function calls:
 12984 ;;		Nothing
 12985 ;; This function is called by:
 12986 ;;		_USBCtrlEPAllowDataStage
 12987 ;;		_USBCtrlTrfInHandler
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           	psect	text53
 12992  0035DA                     __ptext53:
 12993                           	opt stack 0
 12994  0035DA                     _USBCtrlTrfTxService:
 12995                           	opt stack 11
 12996                           
 12997                           ;usb_device.c: 1791: uint8_t byteToSend;
 12998                           ;usb_device.c: 1795: byteToSend = 8;
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;incstack = 0
 13002  0035DA  0E08               	movlw	8
 13003  0035DC  0100               	movlb	0	; () banked
 13004  0035DE  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13008  0035E0  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13009  0035E2  E110               	bnz	l11843
 13010  0035E4  0E08               	movlw	8
 13011  0035E6  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13012  0035E8  B0D8               	btfsc	status,0,c
 13013  0035EA  D00C               	goto	l1697
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;usb_device.c: 1797: {
 13017                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13018  0035EC  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13022  0035F0  51CC               	movf	_shortPacketStatus& (0+255),w,b
 13023  0035F2  A4D8               	btfss	status,2,c
 13024  0035F4  D002               	goto	l1695
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;usb_device.c: 1806: {
 13028                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13029  0035F6  0E01               	movlw	1
 13030  0035F8  D004               	goto	L12
 13031  0035FA                     l1695:
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13035                           
 13036                           ; BSR set to: 0
 13037  0035FA  05CC               	decf	_shortPacketStatus& (0+255),w,b
 13038  0035FC  A4D8               	btfss	status,2,c
 13039  0035FE  D002               	goto	l1697
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;usb_device.c: 1810: {
 13043                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13044  003600  0E02               	movlw	2
 13045  003602                     L12:
 13046  003602  6FCC               	movwf	_shortPacketStatus& (0+255),b
 13047  003604                     l1697:
 13048  003604                     l11843:
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;usb_device.c: 1812: }
 13052                           ;usb_device.c: 1813: }
 13053                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13054  003604  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13055  003606  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13056  003608  0E00               	movlw	0
 13057  00360A  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13061  00360C  EE20 F001          	lfsr	2,1
 13062  003610  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13063  003612  26D9               	addwf	fsr2l,f,c
 13064  003614  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13065  003616  22DA               	addwfc	fsr2h,f,c
 13066  003618  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13067                           
 13068                           ; BSR set to: 0
 13069                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13070  00361C  0E38               	movlw	56
 13071  00361E  0102               	movlb	2	; () banked
 13072  003620  6FD4               	movwf	_pDst& (0+255),b
 13073  003622  0E04               	movlw	4
 13074  003624  6FD5               	movwf	(_pDst+1)& (0+255),b
 13075                           
 13076                           ; BSR set to: 2
 13077                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13078  003626  0100               	movlb	0	; () banked
 13079  003628  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13080  00362A  D01E               	goto	l1699
 13081  00362C  D03E               	goto	l1703
 13082  00362E                     
 13083                           ; BSR set to: 0
 13084                           ;usb_device.c: 1830: {
 13085                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13086                           
 13087                           ; BSR set to: 0
 13088  00362E  C0B0  FFF6         	movff	_inPipes,tblptrl
 13089  003632  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13090  003636  6AF8               	clrf	tblptru,c
 13091  003638  C2D4  FFD9         	movff	_pDst,fsr2l
 13092  00363C  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13093  003640  0E0E               	movlw	(high __ramtop+-1)
 13094  003642  64F7               	cpfsgt	tblptrh,c
 13095  003644  D003               	bra	u10417
 13096  003646  0008               	tblrd		*
 13097  003648  50F5               	movf	tablat,w,c
 13098  00364A  D005               	bra	u10410
 13099  00364C                     u10417:
 13100  00364C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13101  003650  CFF7 FFEA          	movff	tblptrh,fsr0h
 13102  003654  50EF               	movf	indf0,w,c
 13103  003656                     u10410:
 13104  003656  6EDF               	movwf	indf2,c
 13105  003658  0100               	movlb	0	; () banked
 13106  00365A  4BB0               	infsnz	_inPipes& (0+255),f,b
 13107  00365C  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13108                           
 13109                           ; BSR set to: 0
 13110  00365E  0102               	movlb	2	; () banked
 13111  003660  4BD4               	infsnz	_pDst& (0+255),f,b
 13112  003662  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13113                           
 13114                           ; BSR set to: 2
 13115                           ;usb_device.c: 1832: byteToSend--;
 13116  003664  0100               	movlb	0	; () banked
 13117  003666  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13118  003668                     l1699:
 13119                           
 13120                           ; BSR set to: 0
 13121                           
 13122                           ; BSR set to: 0
 13123  003668  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13124  00366A  B4D8               	btfsc	status,2,c
 13125  00366C  0012               	return	
 13126  00366E  D7DF               	goto	l1700
 13127  003670                     
 13128                           ; BSR set to: 0
 13129                           ;usb_device.c: 1838: {
 13130                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13131                           
 13132                           ; BSR set to: 0
 13133  003670  C0B0  FFF6         	movff	_inPipes,tblptrl
 13134  003674  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13135  003678  6AF8               	clrf	tblptru,c
 13136  00367A  C2D4  FFD9         	movff	_pDst,fsr2l
 13137  00367E  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13138  003682  0E0E               	movlw	(high __ramtop+-1)
 13139  003684  64F7               	cpfsgt	tblptrh,c
 13140  003686  D003               	bra	u10437
 13141  003688  0008               	tblrd		*
 13142  00368A  50F5               	movf	tablat,w,c
 13143  00368C  D005               	bra	u10430
 13144  00368E                     u10437:
 13145  00368E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13146  003692  CFF7 FFEA          	movff	tblptrh,fsr0h
 13147  003696  50EF               	movf	indf0,w,c
 13148  003698                     u10430:
 13149  003698  6EDF               	movwf	indf2,c
 13150  00369A  0100               	movlb	0	; () banked
 13151  00369C  4BB0               	infsnz	_inPipes& (0+255),f,b
 13152  00369E  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13153                           
 13154                           ; BSR set to: 0
 13155  0036A0  0102               	movlb	2	; () banked
 13156  0036A2  4BD4               	infsnz	_pDst& (0+255),f,b
 13157  0036A4  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13158                           
 13159                           ; BSR set to: 2
 13160                           ;usb_device.c: 1840: byteToSend--;
 13161  0036A6  0100               	movlb	0	; () banked
 13162  0036A8  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13163  0036AA                     l1703:
 13164                           
 13165                           ; BSR set to: 0
 13166                           
 13167                           ; BSR set to: 0
 13168  0036AA  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13169  0036AC  B4D8               	btfsc	status,2,c
 13170  0036AE  0012               	return	
 13171  0036B0  D7DF               	goto	l1704
 13172  0036B2                     __end_of_USBCtrlTrfTxService:
 13173                           	opt stack 0
 13174                           tosu	equ	0xFFF
 13175                           tosh	equ	0xFFE
 13176                           tosl	equ	0xFFD
 13177                           pclath	equ	0xFFA
 13178                           tblptru	equ	0xFF8
 13179                           tblptrh	equ	0xFF7
 13180                           tblptrl	equ	0xFF6
 13181                           tablat	equ	0xFF5
 13182                           prodh	equ	0xFF4
 13183                           prodl	equ	0xFF3
 13184                           intcon	equ	0xFF2
 13185                           intcon2	equ	0xFF1
 13186                           intcon3	equ	0xFF0
 13187                           indf0	equ	0xFEF
 13188                           postinc0	equ	0xFEE
 13189                           plusw0	equ	0xFEB
 13190                           fsr0h	equ	0xFEA
 13191                           fsr0l	equ	0xFE9
 13192                           wreg	equ	0xFE8
 13193                           indf1	equ	0xFE7
 13194                           postinc1	equ	0xFE6
 13195                           postdec1	equ	0xFE5
 13196                           fsr1h	equ	0xFE2
 13197                           fsr1l	equ	0xFE1
 13198                           indf2	equ	0xFDF
 13199                           postinc2	equ	0xFDE
 13200                           postdec2	equ	0xFDD
 13201                           plusw2	equ	0xFDB
 13202                           fsr2h	equ	0xFDA
 13203                           fsr2l	equ	0xFD9
 13204                           status	equ	0xFD8
 13205                           
 13206 ;; *************** function _CDCTxService *****************
 13207 ;; Defined at:
 13208 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;		None
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13213 ;;  i               1   36[BANK0 ] unsigned char 
 13214 ;; Return value:  Size  Location     Type
 13215 ;;                  1    wreg      void 
 13216 ;; Registers used:
 13217 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13218 ;; Tracked objects:
 13219 ;;		On entry : 0/0
 13220 ;;		On exit  : 0/0
 13221 ;;		Unchanged: 0/0
 13222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13227 ;;Total ram usage:        2 bytes
 13228 ;; Hardware stack levels used:    1
 13229 ;; Hardware stack levels required when called:   12
 13230 ;; This function calls:
 13231 ;;		_USBTransferOnePacket
 13232 ;; This function is called by:
 13233 ;;		_UsbDevice_MainTask
 13234 ;; This function uses a non-reentrant model
 13235 ;;
 13236                           
 13237                           	psect	text54
 13238  002816                     __ptext54:
 13239                           	opt stack 0
 13240  002816                     _CDCTxService:
 13241                           	opt stack 15
 13242                           
 13243                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13244                           ;usb_device_cdc.c: 842: uint8_t i;
 13245                           ;usb_device_cdc.c: 844: ;
 13246                           ;usb_device_cdc.c: 846: {};
 13247                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;incstack = 0
 13251  002816  0101               	movlb	1	; () banked
 13252  002818  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13253  00281A  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13254  00281C  B4D8               	btfsc	status,2,c
 13255  00281E  D006               	goto	l1949
 13256                           
 13257                           ; BSR set to: 1
 13258  002820  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13259  002824  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13260  002828  BEDF               	btfsc	indf2,7,c
 13261  00282A  0012               	return	
 13262  00282C                     l1949:
 13263                           
 13264                           ; BSR set to: 1
 13265                           ;usb_device_cdc.c: 852: }
 13266                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13267                           
 13268                           ; BSR set to: 1
 13269  00282C  0E03               	movlw	3
 13270  00282E  0100               	movlb	0	; () banked
 13271  002830  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13272  002832  A4D8               	btfss	status,2,c
 13273  002834  D002               	goto	l1951
 13274                           
 13275                           ; BSR set to: 0
 13276                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13277  002836  0E00               	movlw	0
 13278  002838  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13279  00283A                     l1951:
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13283  00283A  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13284  00283C  B4D8               	btfsc	status,2,c
 13285  00283E  0012               	return	
 13286                           
 13287                           ; BSR set to: 0
 13288                           ;usb_device_cdc.c: 869: }
 13289                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13290                           
 13291                           ; BSR set to: 0
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;usb_device_cdc.c: 866: {
 13295                           ;usb_device_cdc.c: 867: ;
 13296                           ;usb_device_cdc.c: 868: return;
 13297  002840  0E02               	movlw	2
 13298  002842  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13299  002844  A4D8               	btfss	status,2,c
 13300  002846  D013               	goto	l1953
 13301                           
 13302                           ; BSR set to: 0
 13303                           ;usb_device_cdc.c: 875: {
 13304                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13305  002848  0E01               	movlw	1
 13306  00284A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13307  00284C  0E00               	movlw	0
 13308  00284E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13309  002850  0E00               	movlw	0
 13310  002852  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13311  002854  0E00               	movlw	0
 13312  002856  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13313  002858  0E02               	movlw	2
 13314  00285A  EC1C  F020         	call	_USBTransferOnePacket
 13315  00285E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13316  002862  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13317                           
 13318                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13319  002866  0E03               	movlw	3
 13320  002868  0100               	movlb	0	; () banked
 13321  00286A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13322                           
 13323                           ;usb_device_cdc.c: 879: }
 13324  00286C  0012               	return	
 13325  00286E                     l1953:
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13329                           
 13330                           ; BSR set to: 0
 13331  00286E  05C5               	decf	_cdc_trf_state& (0+255),w,b
 13332  002870  A4D8               	btfss	status,2,c
 13333  002872  0012               	return	
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;usb_device_cdc.c: 881: {
 13337                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13338  002874  0E40               	movlw	64
 13339  002876  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 13340  002878  D003               	goto	l1956
 13341                           
 13342                           ; BSR set to: 0
 13343                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13344  00287A  0E40               	movlw	64
 13345  00287C  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13346  00287E  D002               	goto	l1957
 13347  002880                     l1956:
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;usb_device_cdc.c: 887: else
 13351                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13352  002880  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13353  002884                     l1957:
 13354                           
 13355                           ; BSR set to: 0
 13356                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13357                           
 13358                           ; BSR set to: 0
 13359  002884  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13360  002886  0800               	sublw	0
 13361  002888  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 13362  00288A  6FC4               	movwf	_cdc_tx_len& (0+255),b
 13363                           
 13364                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13365  00288C  0EB6               	movlw	low _cdc_data_tx
 13366  00288E  0102               	movlb	2	; () banked
 13367  002890  6FC8               	movwf	_pCDCDst& (0+255),b
 13368  002892  0E07               	movlw	high _cdc_data_tx
 13369  002894  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13370                           
 13371                           ; BSR set to: 2
 13372                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13373  002896  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13374                           
 13375                           ; BSR set to: 2
 13376                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13377  00289A  0101               	movlb	1	; () banked
 13378  00289C  51E2               	movf	_cdc_mem_type& (0+255),w,b
 13379  00289E  B4D8               	btfsc	status,2,c
 13380  0028A0  D01D               	goto	l1959
 13381  0028A2  D03D               	goto	l1963
 13382  0028A4                     
 13383                           ;usb_device_cdc.c: 901: {
 13384                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13385                           
 13386                           ; BSR set to: 1
 13387  0028A4  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13388  0028A8  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13389  0028AC  6AF8               	clrf	tblptru,c
 13390  0028AE  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13391  0028B2  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13392  0028B6  0E0E               	movlw	(high __ramtop+-1)
 13393  0028B8  64F7               	cpfsgt	tblptrh,c
 13394  0028BA  D003               	bra	u14287
 13395  0028BC  0008               	tblrd		*
 13396  0028BE  50F5               	movf	tablat,w,c
 13397  0028C0  D005               	bra	u14280
 13398  0028C2                     u14287:
 13399  0028C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13400  0028C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13401  0028CA  50EF               	movf	indf0,w,c
 13402  0028CC                     u14280:
 13403  0028CC  6EDF               	movwf	indf2,c
 13404                           
 13405                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13406  0028CE  0102               	movlb	2	; () banked
 13407  0028D0  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13408  0028D2  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13409                           
 13410                           ; BSR set to: 2
 13411                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13412  0028D4  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13413  0028D6  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13414                           
 13415                           ; BSR set to: 2
 13416                           ;usb_device_cdc.c: 905: i--;
 13417  0028D8  0100               	movlb	0	; () banked
 13418  0028DA  0784               	decf	CDCTxService@i& (0+255),f,b
 13419  0028DC                     l1959:
 13420                           
 13421                           ; BSR set to: 0
 13422  0028DC  0100               	movlb	0	; () banked
 13423  0028DE  5184               	movf	CDCTxService@i& (0+255),w,b
 13424  0028E0  B4D8               	btfsc	status,2,c
 13425  0028E2  D021               	goto	u14310
 13426  0028E4  D7DF               	goto	l1960
 13427  0028E6                     
 13428                           ; BSR set to: 0
 13429                           ;usb_device_cdc.c: 911: {
 13430                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13431                           
 13432                           ; BSR set to: 0
 13433  0028E6  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13434  0028EA  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13435  0028EE  6AF8               	clrf	tblptru,c
 13436  0028F0  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13437  0028F4  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13438  0028F8  0E0E               	movlw	(high __ramtop+-1)
 13439  0028FA  64F7               	cpfsgt	tblptrh,c
 13440  0028FC  D003               	bra	u14307
 13441  0028FE  0008               	tblrd		*
 13442  002900  50F5               	movf	tablat,w,c
 13443  002902  D005               	bra	u14300
 13444  002904                     u14307:
 13445  002904  CFF6 FFE9          	movff	tblptrl,fsr0l
 13446  002908  CFF7 FFEA          	movff	tblptrh,fsr0h
 13447  00290C  50EF               	movf	indf0,w,c
 13448  00290E                     u14300:
 13449  00290E  6EDF               	movwf	indf2,c
 13450                           
 13451                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13452  002910  0102               	movlb	2	; () banked
 13453  002912  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13454  002914  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13455                           
 13456                           ; BSR set to: 2
 13457                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13458  002916  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13459  002918  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13460                           
 13461                           ; BSR set to: 2
 13462                           ;usb_device_cdc.c: 915: i--;
 13463  00291A  0100               	movlb	0	; () banked
 13464  00291C  0784               	decf	CDCTxService@i& (0+255),f,b
 13465  00291E                     l1963:
 13466                           
 13467                           ; BSR set to: 0
 13468  00291E  0100               	movlb	0	; () banked
 13469  002920  5184               	movf	CDCTxService@i& (0+255),w,b
 13470  002922  A4D8               	btfss	status,2,c
 13471  002924  D7E0               	goto	l1964
 13472  002926                     u14310:
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;usb_device_cdc.c: 916: }
 13476                           ;usb_device_cdc.c: 917: }
 13477                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13478                           
 13479                           ; BSR set to: 0
 13480                           
 13481                           ; BSR set to: 0
 13482  002926  51C4               	movf	_cdc_tx_len& (0+255),w,b
 13483  002928  A4D8               	btfss	status,2,c
 13484  00292A  D008               	goto	l1968
 13485                           
 13486                           ; BSR set to: 0
 13487                           ;usb_device_cdc.c: 924: {
 13488                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13489  00292C  0E40               	movlw	64
 13490  00292E  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13491  002930  A4D8               	btfss	status,2,c
 13492  002932  D002               	goto	l1967
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13496  002934  0E02               	movlw	2
 13497  002936  D001               	goto	L13
 13498  002938                     l1967:
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;usb_device_cdc.c: 927: else
 13502                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13503                           
 13504                           ; BSR set to: 0
 13505  002938  0E03               	movlw	3
 13506  00293A                     L13:
 13507  00293A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13508  00293C                     l1968:
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;usb_device_cdc.c: 929: }
 13512                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13513                           
 13514                           ; BSR set to: 0
 13515                           
 13516                           ; BSR set to: 0
 13517  00293C  0E01               	movlw	1
 13518  00293E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13519  002940  0EB6               	movlw	low _cdc_data_tx
 13520  002942  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13521  002944  0E07               	movlw	high _cdc_data_tx
 13522  002946  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13523  002948  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13524  00294C  0E02               	movlw	2
 13525  00294E  EC1C  F020         	call	_USBTransferOnePacket
 13526  002952  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13527  002956  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13528  00295A  0012               	return	
 13529  00295C                     __end_of_CDCTxService:
 13530                           	opt stack 0
 13531                           tosu	equ	0xFFF
 13532                           tosh	equ	0xFFE
 13533                           tosl	equ	0xFFD
 13534                           pclath	equ	0xFFA
 13535                           tblptru	equ	0xFF8
 13536                           tblptrh	equ	0xFF7
 13537                           tblptrl	equ	0xFF6
 13538                           tablat	equ	0xFF5
 13539                           prodh	equ	0xFF4
 13540                           prodl	equ	0xFF3
 13541                           intcon	equ	0xFF2
 13542                           intcon2	equ	0xFF1
 13543                           intcon3	equ	0xFF0
 13544                           indf0	equ	0xFEF
 13545                           postinc0	equ	0xFEE
 13546                           plusw0	equ	0xFEB
 13547                           fsr0h	equ	0xFEA
 13548                           fsr0l	equ	0xFE9
 13549                           wreg	equ	0xFE8
 13550                           indf1	equ	0xFE7
 13551                           postinc1	equ	0xFE6
 13552                           postdec1	equ	0xFE5
 13553                           fsr1h	equ	0xFE2
 13554                           fsr1l	equ	0xFE1
 13555                           indf2	equ	0xFDF
 13556                           postinc2	equ	0xFDE
 13557                           postdec2	equ	0xFDD
 13558                           plusw2	equ	0xFDB
 13559                           fsr2h	equ	0xFDA
 13560                           fsr2l	equ	0xFD9
 13561                           status	equ	0xFD8
 13562                           
 13563 ;; *************** function _Term_MainSm *****************
 13564 ;; Defined at:
 13565 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;		None
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13570 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13571 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13572 ;;  FwkBuildYear    4    0        unsigned char [4]
 13573 ;;  FwkBuildMont    4    0        unsigned char [4]
 13574 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13575 ;; Return value:  Size  Location     Type
 13576 ;;                  1    wreg      void 
 13577 ;; Registers used:
 13578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13579 ;; Tracked objects:
 13580 ;;		On entry : 0/0
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13585 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13587 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13588 ;;Total ram usage:       12 bytes
 13589 ;; Hardware stack levels used:    1
 13590 ;; Hardware stack levels required when called:   16
 13591 ;; This function calls:
 13592 ;;		_OsTmr_GetTimerStatus
 13593 ;;		_OsTmr_StartTimer
 13594 ;;		_Terminal
 13595 ;;		_memset
 13596 ;;		_putUSBUSART
 13597 ;;		_sprintf
 13598 ;;		_strcat
 13599 ;;		_strcpy
 13600 ;;		_strlen
 13601 ;;		_utoa
 13602 ;; This function is called by:
 13603 ;;		_Term_MainTask
 13604 ;; This function uses a non-reentrant model
 13605 ;;
 13606                           
 13607                           	psect	text55
 13608  0010B6                     __ptext55:
 13609                           	opt stack 0
 13610  0010B6                     _Term_MainSm:
 13611                           	opt stack 11
 13612                           
 13613                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13614                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13615                           ;term.c: 711: static UINT8 Data[50];
 13616                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13617                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13618                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13619                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13620                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13621                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13622                           ;term.c: 719: switch (TermMainSmState)
 13623                           
 13624                           ;incstack = 0
 13625  0010B6  D133               	goto	l2427
 13626  0010B8                     
 13627                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13628  0010B8  0ECD               	movlw	low Term_MainSm@TermDelay
 13629  0010BA  0100               	movlb	0	; () banked
 13630  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13631  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13632  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13633  0010C2  0ED0               	movlw	208
 13634  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13635  0010C6  0E07               	movlw	7
 13636  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13637  0010CA  0E00               	movlw	0
 13638  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13639  0010CE  0E00               	movlw	0
 13640  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13641  0010D2  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 13642                           
 13643                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13644  0010D6  0E01               	movlw	1
 13645  0010D8  0102               	movlb	2	; () banked
 13646  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13647                           
 13648                           ;term.c: 726: break;
 13649  0010DC  0012               	return	
 13650  0010DE                     
 13651                           ; BSR set to: 2
 13652                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13653                           
 13654                           ; BSR set to: 2
 13655  0010DE  0ECD               	movlw	low Term_MainSm@TermDelay
 13656  0010E0  0100               	movlb	0	; () banked
 13657  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13658  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13659  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13660  0010E8  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 13661  0010EC  06E8               	decf	wreg,f,c
 13662  0010EE  A4D8               	btfss	status,2,c
 13663  0010F0  0012               	return	
 13664                           
 13665                           ;term.c: 731: {
 13666                           ;term.c: 733: TermMainSmState = Term_InitState;
 13667  0010F2  0E02               	movlw	2
 13668  0010F4  0102               	movlb	2	; () banked
 13669  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13670                           
 13671                           ; BSR set to: 2
 13672                           ;term.c: 734: }
 13673                           ;term.c: 735: break;
 13674  0010F8  0012               	return	
 13675  0010FA                     
 13676                           ; BSR set to: 2
 13677                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13678                           
 13679                           ; BSR set to: 2
 13680  0010FA  0E1F               	movlw	31
 13681  0010FC  0100               	movlb	0	; () banked
 13682  0010FE  65CD               	cpfsgt	_USBDeviceState& (0+255),b
 13683  001100  0012               	return	
 13684                           
 13685                           ; BSR set to: 0
 13686  001102  B265               	btfsc	3941,1,c	;volatile
 13687  001104  0012               	return	
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;term.c: 743: else
 13691                           ;term.c: 744: {
 13692                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13693                           
 13694                           ; BSR set to: 0
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;term.c: 740: {
 13698                           ;term.c: 742: }
 13699  001106  0E03               	movlw	3
 13700  001108  0102               	movlb	2	; () banked
 13701  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13702                           
 13703                           ; BSR set to: 2
 13704                           ;term.c: 747: }
 13705                           ;term.c: 748: break;
 13706  00110C  0012               	return	
 13707  00110E                     
 13708                           ; BSR set to: 2
 13709                           ;term.c: 752: if((cdc_trf_state == 0))
 13710                           
 13711                           ; BSR set to: 2
 13712  00110E  0100               	movlb	0	; () banked
 13713  001110  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13714  001112  A4D8               	btfss	status,2,c
 13715  001114  0012               	return	
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;term.c: 753: {
 13719                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13720  001116  0E2F               	movlw	low _Welcome
 13721  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13722  00111A  0EFD               	movlw	high _Welcome
 13723  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13724  00111E  0E88               	movlw	136
 13725  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13726  001122  ECD8  F02F         	call	_putUSBUSART	;wreg free
 13727                           
 13728                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13729  001126  0E04               	movlw	4
 13730  001128  0102               	movlb	2	; () banked
 13731  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13732                           
 13733                           ; BSR set to: 2
 13734                           ;term.c: 758: }
 13735                           ;term.c: 759: break;
 13736  00112C  0012               	return	
 13737  00112E                     
 13738                           ; BSR set to: 2
 13739                           ;term.c: 763: if((cdc_trf_state == 0))
 13740                           
 13741                           ; BSR set to: 2
 13742  00112E  0100               	movlb	0	; () banked
 13743  001130  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13744  001132  A4D8               	btfss	status,2,c
 13745  001134  0012               	return	
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;term.c: 764: {
 13749                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13750  001136  0E3F               	movlw	low _MsgFormat
 13751  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13752  00113A  0EFC               	movlw	high _MsgFormat
 13753  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13754  00113E  0EEF               	movlw	239
 13755  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13756  001142  ECD8  F02F         	call	_putUSBUSART	;wreg free
 13757                           
 13758                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13759  001146  0E05               	movlw	5
 13760  001148  0102               	movlb	2	; () banked
 13761  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13762                           
 13763                           ; BSR set to: 2
 13764                           ;term.c: 769: }
 13765                           ;term.c: 770: break;
 13766  00114C  0012               	return	
 13767  00114E                     
 13768                           ; BSR set to: 2
 13769                           ;term.c: 774: if((cdc_trf_state == 0))
 13770                           
 13771                           ; BSR set to: 2
 13772  00114E  0100               	movlb	0	; () banked
 13773  001150  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13774  001152  A4D8               	btfss	status,2,c
 13775  001154  0012               	return	
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;term.c: 775: {
 13779                           ;term.c: 777: memset(Data,0,50);
 13780  001156  0E54               	movlw	low Term_MainSm@Data
 13781  001158  6F7D               	movwf	memset@p1& (0+255),b
 13782  00115A  0E04               	movlw	high Term_MainSm@Data
 13783  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13784  00115E  0E00               	movlw	0
 13785  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13786  001162  0E00               	movlw	0
 13787  001164  6F7F               	movwf	memset@c& (0+255),b
 13788  001166  0E00               	movlw	0
 13789  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13790  00116A  0E32               	movlw	50
 13791  00116C  6F81               	movwf	memset@n& (0+255),b
 13792  00116E  EC80  F02E         	call	_memset	;wreg free
 13793                           
 13794                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13795  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13796  001174  0100               	movlb	0	; () banked
 13797  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13798  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13799  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13800  00117C  0E00               	movlw	0
 13801  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13802  001180  0E01               	movlw	1
 13803  001182  6F8C               	movwf	utoa@val& (0+255),b
 13804  001184  0E00               	movlw	0
 13805  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13806  001188  0E0A               	movlw	10
 13807  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13808  00118C  EC82  F021         	call	_utoa	;wreg free
 13809                           
 13810                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13811  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13812  001192  0100               	movlb	0	; () banked
 13813  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13814  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13815  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13816  00119A  0E00               	movlw	0
 13817  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13818  00119E  0E02               	movlw	2
 13819  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13820  0011A2  0E00               	movlw	0
 13821  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13822  0011A6  0E0A               	movlw	10
 13823  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13824  0011AA  EC82  F021         	call	_utoa	;wreg free
 13825                           
 13826                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13827  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13828  0011B0  0100               	movlb	0	; () banked
 13829  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13830  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13831  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13832  0011B8  0E00               	movlw	0
 13833  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13834  0011BC  0E00               	movlw	0
 13835  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13836  0011C0  0E00               	movlw	0
 13837  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13838  0011C4  0E0A               	movlw	10
 13839  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13840  0011C8  EC82  F021         	call	_utoa	;wreg free
 13841                           
 13842                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13843  0011CC  0E54               	movlw	low Term_MainSm@Data
 13844  0011CE  0100               	movlb	0	; () banked
 13845  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13846  0011D2  0E04               	movlw	high Term_MainSm@Data
 13847  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13848  0011D6  0EDF               	movlw	low STR_23
 13849  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13850  0011DA  0EFE               	movlw	high STR_23
 13851  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13852  0011DE  EC4F  F02E         	call	_strcpy	;wreg free
 13853                           
 13854                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13855  0011E2  0E54               	movlw	low Term_MainSm@Data
 13856  0011E4  0100               	movlb	0	; () banked
 13857  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13858  0011E8  0E04               	movlw	high Term_MainSm@Data
 13859  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13860  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13861  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13862  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13863  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13864  0011F4  ECDA  F028         	call	_strcat	;wreg free
 13865                           
 13866                           ;term.c: 784: strcat(Data,".");
 13867  0011F8  0E54               	movlw	low Term_MainSm@Data
 13868  0011FA  0100               	movlb	0	; () banked
 13869  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13870  0011FE  0E04               	movlw	high Term_MainSm@Data
 13871  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13872  001202  0EF4               	movlw	low STR_24
 13873  001204  6F7F               	movwf	strcat@from& (0+255),b
 13874  001206  0EFF               	movlw	high STR_24
 13875  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13876  00120A  ECDA  F028         	call	_strcat	;wreg free
 13877                           
 13878                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13879  00120E  0E54               	movlw	low Term_MainSm@Data
 13880  001210  0100               	movlb	0	; () banked
 13881  001212  6F7D               	movwf	strcat@to& (0+255),b
 13882  001214  0E04               	movlw	high Term_MainSm@Data
 13883  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13884  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13885  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13886  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13887  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13888  001220  ECDA  F028         	call	_strcat	;wreg free
 13889                           
 13890                           ;term.c: 786: strcat(Data,".");
 13891  001224  0E54               	movlw	low Term_MainSm@Data
 13892  001226  0100               	movlb	0	; () banked
 13893  001228  6F7D               	movwf	strcat@to& (0+255),b
 13894  00122A  0E04               	movlw	high Term_MainSm@Data
 13895  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13896  00122E  0EF4               	movlw	low STR_24
 13897  001230  6F7F               	movwf	strcat@from& (0+255),b
 13898  001232  0EFF               	movlw	high STR_24
 13899  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13900  001236  ECDA  F028         	call	_strcat	;wreg free
 13901                           
 13902                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13903  00123A  0E54               	movlw	low Term_MainSm@Data
 13904  00123C  0100               	movlb	0	; () banked
 13905  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13906  001240  0E04               	movlw	high Term_MainSm@Data
 13907  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13908  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13909  001246  6F7F               	movwf	strcat@from& (0+255),b
 13910  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13911  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13912  00124C  ECDA  F028         	call	_strcat	;wreg free
 13913                           
 13914                           ;term.c: 788: strcat(Data,"\r\n");
 13915  001250  0E54               	movlw	low Term_MainSm@Data
 13916  001252  0100               	movlb	0	; () banked
 13917  001254  6F7D               	movwf	strcat@to& (0+255),b
 13918  001256  0E04               	movlw	high Term_MainSm@Data
 13919  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13920  00125A  0E93               	movlw	low (STR_21+39)
 13921  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13922  00125E  0EFE               	movlw	high (STR_21+39)
 13923  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13924  001262  ECDA  F028         	call	_strcat	;wreg free
 13925                           
 13926                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13927  001266  0E54               	movlw	low Term_MainSm@Data
 13928  001268  0100               	movlb	0	; () banked
 13929  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13930  00126C  0E04               	movlw	high Term_MainSm@Data
 13931  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13932  001270  0E54               	movlw	low Term_MainSm@Data
 13933  001272  6F7D               	movwf	strlen@s& (0+255),b
 13934  001274  0E04               	movlw	high Term_MainSm@Data
 13935  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13936  001278  EC14  F02D         	call	_strlen	;wreg free
 13937  00127C  0100               	movlb	0	; () banked
 13938  00127E  517D               	movf	?_strlen& (0+255),w,b
 13939  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13940  001282  ECD8  F02F         	call	_putUSBUSART	;wreg free
 13941                           
 13942                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13943  001286  0E06               	movlw	6
 13944  001288  0102               	movlb	2	; () banked
 13945  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13946                           
 13947                           ; BSR set to: 2
 13948                           ;term.c: 793: }
 13949                           ;term.c: 794: break;
 13950  00128C  0012               	return	
 13951  00128E                     
 13952                           ; BSR set to: 2
 13953                           ;term.c: 798: if((cdc_trf_state == 0))
 13954                           
 13955                           ; BSR set to: 2
 13956  00128E  0100               	movlb	0	; () banked
 13957  001290  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13958  001292  A4D8               	btfss	status,2,c
 13959  001294  0012               	return	
 13960                           
 13961                           ; BSR set to: 0
 13962                           ;term.c: 799: {
 13963                           ;term.c: 801: memset(Data,0,50);
 13964  001296  0E54               	movlw	low Term_MainSm@Data
 13965  001298  6F7D               	movwf	memset@p1& (0+255),b
 13966  00129A  0E04               	movlw	high Term_MainSm@Data
 13967  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13968  00129E  0E00               	movlw	0
 13969  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13970  0012A2  0E00               	movlw	0
 13971  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13972  0012A6  0E00               	movlw	0
 13973  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13974  0012AA  0E32               	movlw	50
 13975  0012AC  6F81               	movwf	memset@n& (0+255),b
 13976  0012AE  EC80  F02E         	call	_memset	;wreg free
 13977                           
 13978                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 19 2022");
 13979  0012B2  0E54               	movlw	low Term_MainSm@Data
 13980  0012B4  0100               	movlb	0	; () banked
 13981  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13982  0012B8  0E04               	movlw	high Term_MainSm@Data
 13983  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13984  0012BC  0E1A               	movlw	low STR_27
 13985  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13986  0012C0  0EFF               	movlw	high STR_27
 13987  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13988  0012C4  0EB5               	movlw	low STR_28
 13989  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13990  0012C8  0EFF               	movlw	high STR_28
 13991  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13992  0012CC  EC2E  F01C         	call	_sprintf	;wreg free
 13993                           
 13994                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13995  0012D0  0E54               	movlw	low Term_MainSm@Data
 13996  0012D2  0100               	movlb	0	; () banked
 13997  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13998  0012D6  0E04               	movlw	high Term_MainSm@Data
 13999  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14000  0012DA  0E54               	movlw	low Term_MainSm@Data
 14001  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14002  0012DE  0E04               	movlw	high Term_MainSm@Data
 14003  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14004  0012E2  EC14  F02D         	call	_strlen	;wreg free
 14005  0012E6  0100               	movlb	0	; () banked
 14006  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14007  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14008  0012EC  ECD8  F02F         	call	_putUSBUSART	;wreg free
 14009                           
 14010                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14011  0012F0  0E07               	movlw	7
 14012  0012F2  0102               	movlb	2	; () banked
 14013  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14014                           
 14015                           ; BSR set to: 2
 14016                           ;term.c: 808: }
 14017                           ;term.c: 809: break;
 14018  0012F6  0012               	return	
 14019  0012F8                     
 14020                           ; BSR set to: 2
 14021                           ;term.c: 813: if((cdc_trf_state == 0))
 14022                           
 14023                           ; BSR set to: 2
 14024  0012F8  0100               	movlb	0	; () banked
 14025  0012FA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14026  0012FC  A4D8               	btfss	status,2,c
 14027  0012FE  0012               	return	
 14028                           
 14029                           ; BSR set to: 0
 14030                           ;term.c: 814: {
 14031                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14032  001300  0E3F               	movlw	low _MsgReady
 14033  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14034  001304  0EFE               	movlw	high _MsgReady
 14035  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14036  001308  0E16               	movlw	22
 14037  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14038  00130C  ECD8  F02F         	call	_putUSBUSART	;wreg free
 14039                           
 14040                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14041  001310  0E08               	movlw	8
 14042  001312  0102               	movlb	2	; () banked
 14043  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14044                           
 14045                           ; BSR set to: 2
 14046                           ;term.c: 819: }
 14047                           ;term.c: 820: break;
 14048  001316  0012               	return	
 14049  001318                     
 14050                           ; BSR set to: 2
 14051                           ;term.c: 824: Terminal();
 14052                           
 14053                           ; BSR set to: 2
 14054  001318  EC68  F000         	call	_Terminal	;wreg free
 14055                           
 14056                           ;term.c: 829: }
 14057                           
 14058                           ;term.c: 828: break;
 14059                           
 14060                           ;term.c: 827: default:
 14061                           
 14062                           ;term.c: 825: break;
 14063  00131C  0012               	return	
 14064  00131E                     l2427:
 14065  00131E  0102               	movlb	2	; () banked
 14066  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14067                           
 14068                           ; Switch size 1, requested type "space"
 14069                           ; Number of cases is 9, Range of values is 0 to 8
 14070                           ; switch strategies available:
 14071                           ; Name         Instructions Cycles
 14072                           ; simple_byte           28    15 (average)
 14073                           ;	Chosen strategy is simple_byte
 14074  001322  0A00               	xorlw	0	; case 0
 14075  001324  B4D8               	btfsc	status,2,c
 14076  001326  D6C8               	goto	l2428
 14077  001328  0A01               	xorlw	1	; case 1
 14078  00132A  B4D8               	btfsc	status,2,c
 14079  00132C  D6D8               	goto	l2430
 14080  00132E  0A03               	xorlw	3	; case 2
 14081  001330  B4D8               	btfsc	status,2,c
 14082  001332  D6E3               	goto	l2432
 14083  001334  0A01               	xorlw	1	; case 3
 14084  001336  B4D8               	btfsc	status,2,c
 14085  001338  D6EA               	goto	l2437
 14086  00133A  0A07               	xorlw	7	; case 4
 14087  00133C  B4D8               	btfsc	status,2,c
 14088  00133E  D6F7               	goto	l2439
 14089  001340  0A01               	xorlw	1	; case 5
 14090  001342  B4D8               	btfsc	status,2,c
 14091  001344  D704               	goto	l2441
 14092  001346  0A03               	xorlw	3	; case 6
 14093  001348  B4D8               	btfsc	status,2,c
 14094  00134A  D7A1               	goto	l2443
 14095  00134C  0A01               	xorlw	1	; case 7
 14096  00134E  B4D8               	btfsc	status,2,c
 14097  001350  D7D3               	goto	l2445
 14098  001352  0A0F               	xorlw	15	; case 8
 14099  001354  A4D8               	btfss	status,2,c
 14100  001356  0012               	return	
 14101  001358  D7DF               	goto	l2447
 14102  00135A                     __end_of_Term_MainSm:
 14103                           	opt stack 0
 14104                           tosu	equ	0xFFF
 14105                           tosh	equ	0xFFE
 14106                           tosl	equ	0xFFD
 14107                           pclath	equ	0xFFA
 14108                           tblptru	equ	0xFF8
 14109                           tblptrh	equ	0xFF7
 14110                           tblptrl	equ	0xFF6
 14111                           tablat	equ	0xFF5
 14112                           prodh	equ	0xFF4
 14113                           prodl	equ	0xFF3
 14114                           intcon	equ	0xFF2
 14115                           intcon2	equ	0xFF1
 14116                           intcon3	equ	0xFF0
 14117                           indf0	equ	0xFEF
 14118                           postinc0	equ	0xFEE
 14119                           plusw0	equ	0xFEB
 14120                           fsr0h	equ	0xFEA
 14121                           fsr0l	equ	0xFE9
 14122                           wreg	equ	0xFE8
 14123                           indf1	equ	0xFE7
 14124                           postinc1	equ	0xFE6
 14125                           postdec1	equ	0xFE5
 14126                           fsr1h	equ	0xFE2
 14127                           fsr1l	equ	0xFE1
 14128                           indf2	equ	0xFDF
 14129                           postinc2	equ	0xFDE
 14130                           postdec2	equ	0xFDD
 14131                           plusw2	equ	0xFDB
 14132                           fsr2h	equ	0xFDA
 14133                           fsr2l	equ	0xFD9
 14134                           status	equ	0xFD8
 14135                           
 14136 ;; *************** function _strlen *****************
 14137 ;; Defined at:
 14138 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14141 ;;		 -> Term_MainSm@Data(50), 
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14144 ;;		 -> Term_MainSm@Data(50), 
 14145 ;; Return value:  Size  Location     Type
 14146 ;;                  2   29[BANK0 ] unsigned int 
 14147 ;; Registers used:
 14148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14149 ;; Tracked objects:
 14150 ;;		On entry : 0/0
 14151 ;;		On exit  : 0/0
 14152 ;;		Unchanged: 0/0
 14153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14157 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14158 ;;Total ram usage:        6 bytes
 14159 ;; Hardware stack levels used:    1
 14160 ;; Hardware stack levels required when called:   11
 14161 ;; This function calls:
 14162 ;;		Nothing
 14163 ;; This function is called by:
 14164 ;;		_Term_MainSm
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text56
 14169  005A28                     __ptext56:
 14170                           	opt stack 0
 14171  005A28                     _strlen:
 14172                           	opt stack 15
 14173                           
 14174                           ;incstack = 0
 14175  005A28  C07D  F081         	movff	strlen@s,strlen@cp
 14176  005A2C  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14177  005A30  D003               	goto	l3251
 14178  005A32  0100               	movlb	0	; () banked
 14179  005A34  4B81               	infsnz	strlen@cp& (0+255),f,b
 14180  005A36  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14181  005A38                     l3251:
 14182                           
 14183                           ; BSR set to: 0
 14184  005A38  C081  FFD9         	movff	strlen@cp,fsr2l
 14185  005A3C  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14186  005A40  50DF               	movf	indf2,w,c
 14187  005A42  A4D8               	btfss	status,2,c
 14188  005A44  D7F6               	goto	l3252
 14189  005A46  C07D  F07F         	movff	strlen@s,??_strlen
 14190  005A4A  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14191  005A4E  0100               	movlb	0	; () banked
 14192  005A50  1F7F               	comf	??_strlen& (0+255),f,b
 14193  005A52  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14194  005A54  4B7F               	infsnz	??_strlen& (0+255),f,b
 14195  005A56  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14196  005A58  5181               	movf	strlen@cp& (0+255),w,b
 14197  005A5A  257F               	addwf	??_strlen& (0+255),w,b
 14198  005A5C  6F7D               	movwf	?_strlen& (0+255),b
 14199  005A5E  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14200  005A60  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14201  005A62  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14202  005A64  0012               	return	
 14203  005A66                     __end_of_strlen:
 14204                           	opt stack 0
 14205                           tosu	equ	0xFFF
 14206                           tosh	equ	0xFFE
 14207                           tosl	equ	0xFFD
 14208                           pclath	equ	0xFFA
 14209                           tblptru	equ	0xFF8
 14210                           tblptrh	equ	0xFF7
 14211                           tblptrl	equ	0xFF6
 14212                           tablat	equ	0xFF5
 14213                           prodh	equ	0xFF4
 14214                           prodl	equ	0xFF3
 14215                           intcon	equ	0xFF2
 14216                           intcon2	equ	0xFF1
 14217                           intcon3	equ	0xFF0
 14218                           indf0	equ	0xFEF
 14219                           postinc0	equ	0xFEE
 14220                           plusw0	equ	0xFEB
 14221                           fsr0h	equ	0xFEA
 14222                           fsr0l	equ	0xFE9
 14223                           wreg	equ	0xFE8
 14224                           indf1	equ	0xFE7
 14225                           postinc1	equ	0xFE6
 14226                           postdec1	equ	0xFE5
 14227                           fsr1h	equ	0xFE2
 14228                           fsr1l	equ	0xFE1
 14229                           indf2	equ	0xFDF
 14230                           postinc2	equ	0xFDE
 14231                           postdec2	equ	0xFDD
 14232                           plusw2	equ	0xFDB
 14233                           fsr2h	equ	0xFDA
 14234                           fsr2l	equ	0xFD9
 14235                           status	equ	0xFD8
 14236                           
 14237 ;; *************** function _strcat *****************
 14238 ;; Defined at:
 14239 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14242 ;;		 -> Term_MainSm@Data(50), 
 14243 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14244 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14245 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14246 ;; Auto vars:     Size  Location     Type
 14247 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14248 ;;		 -> Term_MainSm@Data(50), 
 14249 ;; Return value:  Size  Location     Type
 14250 ;;                  2   29[BANK0 ] PTR unsigned char 
 14251 ;; Registers used:
 14252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14253 ;; Tracked objects:
 14254 ;;		On entry : 0/0
 14255 ;;		On exit  : 0/0
 14256 ;;		Unchanged: 0/0
 14257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14259 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14261 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14262 ;;Total ram usage:        6 bytes
 14263 ;; Hardware stack levels used:    1
 14264 ;; Hardware stack levels required when called:   11
 14265 ;; This function calls:
 14266 ;;		Nothing
 14267 ;; This function is called by:
 14268 ;;		_Term_MainSm
 14269 ;; This function uses a non-reentrant model
 14270 ;;
 14271                           
 14272                           	psect	text57
 14273  0051B4                     __ptext57:
 14274                           	opt stack 0
 14275  0051B4                     _strcat:
 14276                           	opt stack 15
 14277                           
 14278                           ; BSR set to: 0
 14279                           ;incstack = 0
 14280  0051B4  C07D  F081         	movff	strcat@to,strcat@cp
 14281  0051B8  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14282  0051BC  D003               	goto	l3236
 14283  0051BE  0100               	movlb	0	; () banked
 14284  0051C0  4B81               	infsnz	strcat@cp& (0+255),f,b
 14285  0051C2  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14286  0051C4                     l3236:
 14287                           
 14288                           ; BSR set to: 0
 14289  0051C4  C081  FFD9         	movff	strcat@cp,fsr2l
 14290  0051C8  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14291  0051CC  50DF               	movf	indf2,w,c
 14292  0051CE  B4D8               	btfsc	status,2,c
 14293  0051D0  D006               	goto	l3239
 14294  0051D2  D7F5               	goto	l3237
 14295  0051D4  0100               	movlb	0	; () banked
 14296  0051D6  4B81               	infsnz	strcat@cp& (0+255),f,b
 14297  0051D8  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14298  0051DA  4B7F               	infsnz	strcat@from& (0+255),f,b
 14299  0051DC  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14300  0051DE                     l3239:
 14301                           
 14302                           ; BSR set to: 0
 14303  0051DE  C07F  FFF6         	movff	strcat@from,tblptrl
 14304  0051E2  C080  FFF7         	movff	strcat@from+1,tblptrh
 14305  0051E6  6AF8               	clrf	tblptru,c
 14306  0051E8  C081  FFD9         	movff	strcat@cp,fsr2l
 14307  0051EC  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14308  0051F0  0E0E               	movlw	(high __ramtop+-1)
 14309  0051F2  64F7               	cpfsgt	tblptrh,c
 14310  0051F4  D003               	bra	u13097
 14311  0051F6  0008               	tblrd		*
 14312  0051F8  50F5               	movf	tablat,w,c
 14313  0051FA  D005               	bra	u13090
 14314  0051FC                     u13097:
 14315  0051FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 14316  005200  CFF7 FFEA          	movff	tblptrh,fsr0h
 14317  005204  50EF               	movf	indf0,w,c
 14318  005206                     u13090:
 14319  005206  6EDF               	movwf	indf2,c
 14320  005208  50DF               	movf	indf2,w,c
 14321  00520A  B4D8               	btfsc	status,2,c
 14322  00520C  0012               	return	
 14323  00520E  D7E2               	goto	l3240
 14324  005210                     __end_of_strcat:
 14325                           	opt stack 0
 14326                           tosu	equ	0xFFF
 14327                           tosh	equ	0xFFE
 14328                           tosl	equ	0xFFD
 14329                           pclath	equ	0xFFA
 14330                           tblptru	equ	0xFF8
 14331                           tblptrh	equ	0xFF7
 14332                           tblptrl	equ	0xFF6
 14333                           tablat	equ	0xFF5
 14334                           prodh	equ	0xFF4
 14335                           prodl	equ	0xFF3
 14336                           intcon	equ	0xFF2
 14337                           intcon2	equ	0xFF1
 14338                           intcon3	equ	0xFF0
 14339                           indf0	equ	0xFEF
 14340                           postinc0	equ	0xFEE
 14341                           plusw0	equ	0xFEB
 14342                           fsr0h	equ	0xFEA
 14343                           fsr0l	equ	0xFE9
 14344                           wreg	equ	0xFE8
 14345                           indf1	equ	0xFE7
 14346                           postinc1	equ	0xFE6
 14347                           postdec1	equ	0xFE5
 14348                           fsr1h	equ	0xFE2
 14349                           fsr1l	equ	0xFE1
 14350                           indf2	equ	0xFDF
 14351                           postinc2	equ	0xFDE
 14352                           postdec2	equ	0xFDD
 14353                           plusw2	equ	0xFDB
 14354                           fsr2h	equ	0xFDA
 14355                           fsr2l	equ	0xFD9
 14356                           status	equ	0xFD8
 14357                           
 14358 ;; *************** function _sprintf *****************
 14359 ;; Defined at:
 14360 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14363 ;;		 -> Term_MainSm@Data(50), 
 14364 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14365 ;;		 -> STR_27(17), 
 14366 ;; Auto vars:     Size  Location     Type
 14367 ;;  tmpval          4    0        struct .
 14368 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14369 ;;		 -> STR_31(7), STR_28(12), 
 14370 ;;  ap              2   36[BANK0 ] PTR void [1]
 14371 ;;		 -> ?_sprintf(2), 
 14372 ;;  len             2    0        unsigned int 
 14373 ;;  val             2    0        unsigned int 
 14374 ;;  c               1   38[BANK0 ] char 
 14375 ;;  flag            1   35[BANK0 ] unsigned char 
 14376 ;;  prec            1    0        char 
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  2   29[BANK0 ] int 
 14379 ;; Registers used:
 14380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14386 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14387 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14389 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14390 ;;Total ram usage:       12 bytes
 14391 ;; Hardware stack levels used:    1
 14392 ;; Hardware stack levels required when called:   11
 14393 ;; This function calls:
 14394 ;;		Nothing
 14395 ;; This function is called by:
 14396 ;;		_Term_MainSm
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           	psect	text58
 14401  00385C                     __ptext58:
 14402                           	opt stack 0
 14403  00385C                     _sprintf:
 14404                           	opt stack 15
 14405                           
 14406                           ;doprnt.c: 494: va_list ap;
 14407                           ;doprnt.c: 499: signed char c;
 14408                           ;doprnt.c: 506: signed char prec;
 14409                           ;doprnt.c: 508: unsigned char flag;
 14410                           ;doprnt.c: 523: union {
 14411                           ;doprnt.c: 524: unsigned long vd;
 14412                           ;doprnt.c: 525: double integ;
 14413                           ;doprnt.c: 526: } tmpval;
 14414                           ;doprnt.c: 528: unsigned int val;
 14415                           ;doprnt.c: 529: unsigned len;
 14416                           ;doprnt.c: 530: const char * cp;
 14417                           ;doprnt.c: 533: *ap = __va_start();
 14418                           
 14419                           ;incstack = 0
 14420  00385C  0E81               	movlw	low (?_sprintf+4)
 14421  00385E  0100               	movlb	0	; () banked
 14422  003860  6F84               	movwf	sprintf@ap& (0+255),b
 14423  003862  0E00               	movlw	high (?_sprintf+4)
 14424  003864  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14425                           
 14426                           ;doprnt.c: 536: while(c = *f++) {
 14427  003866  D04E               	goto	l2640
 14428  003868                     
 14429                           ; BSR set to: 0
 14430                           ;doprnt.c: 538: if(c != '%')
 14431                           
 14432                           ; BSR set to: 0
 14433  003868  0E25               	movlw	37
 14434  00386A  1986               	xorwf	sprintf@c& (0+255),w,b
 14435  00386C  B4D8               	btfsc	status,2,c
 14436  00386E  D009               	goto	l2630
 14437                           
 14438                           ; BSR set to: 0
 14439                           ;doprnt.c: 540: {
 14440                           ;doprnt.c: 541: ((*sp++ = (c)));
 14441  003870  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14442  003874  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14443  003878  C086  FFDF         	movff	sprintf@c,indf2
 14444                           
 14445                           ; BSR set to: 0
 14446  00387C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14447  00387E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14448                           
 14449                           ;doprnt.c: 542: continue;
 14450  003880  D041               	goto	l2640
 14451  003882                     l2630:
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;doprnt.c: 543: }
 14455                           ;doprnt.c: 548: flag = 0;
 14456                           
 14457                           ; BSR set to: 0
 14458  003882  0E00               	movlw	0
 14459  003884  6F83               	movwf	sprintf@flag& (0+255),b
 14460                           
 14461                           ;doprnt.c: 635: switch(c = *f++) {
 14462  003886  D02E               	goto	l2631
 14463  003888                     
 14464                           ; BSR set to: 0
 14465                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14466                           
 14467                           ; BSR set to: 0
 14468  003888  C084  FFD9         	movff	sprintf@ap,fsr2l
 14469  00388C  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14470  003890  CFDE F087          	movff	postinc2,sprintf@cp
 14471  003894  CFDD F088          	movff	postdec2,sprintf@cp+1
 14472                           
 14473                           ; BSR set to: 0
 14474  003898  0E02               	movlw	2
 14475  00389A  2784               	addwf	sprintf@ap& (0+255),f,b
 14476  00389C  0E00               	movlw	0
 14477  00389E  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;doprnt.c: 740: if(!cp)
 14481  0038A0  5187               	movf	sprintf@cp& (0+255),w,b
 14482  0038A2  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14483  0038A4  A4D8               	btfss	status,2,c
 14484  0038A6  D014               	goto	l2636
 14485                           
 14486                           ; BSR set to: 0
 14487                           ;doprnt.c: 741: cp = "(null)";
 14488  0038A8  0ED7               	movlw	low STR_31
 14489  0038AA  6F87               	movwf	sprintf@cp& (0+255),b
 14490  0038AC  0EFF               	movlw	high STR_31
 14491  0038AE  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;doprnt.c: 777: while(*cp)
 14495  0038B0  D00F               	goto	l2636
 14496  0038B2                     
 14497                           ; BSR set to: 0
 14498                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14499                           
 14500                           ; BSR set to: 0
 14501  0038B2  C087  FFF6         	movff	sprintf@cp,tblptrl
 14502  0038B6  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14503  0038BA                     	if	0	;tblptru may be non-zero
 14504  0038BA                     	endif
 14505  0038BA                     	if	0	;tblptru may be non-zero
 14506  0038BA                     	endif
 14507  0038BA  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14508  0038BE  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14509  0038C2  0008               	tblrd		*
 14510  0038C4  CFF5 FFDF          	movff	tablat,indf2
 14511                           
 14512                           ; BSR set to: 0
 14513  0038C8  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14514  0038CA  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14515                           
 14516                           ; BSR set to: 0
 14517  0038CC  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14518  0038CE  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14519  0038D0                     l2636:
 14520                           
 14521                           ; BSR set to: 0
 14522                           
 14523                           ; BSR set to: 0
 14524  0038D0  C087  FFF6         	movff	sprintf@cp,tblptrl
 14525  0038D4  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14526  0038D8                     	if	0	;tblptru may be non-zero
 14527  0038D8                     	endif
 14528  0038D8                     	if	0	;tblptru may be non-zero
 14529  0038D8                     	endif
 14530  0038D8  0008               	tblrd		*
 14531  0038DA  50F5               	movf	tablat,w,c
 14532  0038DC  0900               	iorlw	0
 14533  0038DE  B4D8               	btfsc	status,2,c
 14534  0038E0  D011               	goto	l2640
 14535  0038E2  D7E7               	goto	l2637
 14536  0038E4                     l2631:
 14537                           
 14538                           ; BSR set to: 0
 14539                           
 14540                           ; BSR set to: 0
 14541  0038E4  C07F  FFF6         	movff	sprintf@f,tblptrl
 14542  0038E8  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14543  0038EC  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14544  0038EE  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14545  0038F0                     	if	0	;tblptru may be non-zero
 14546  0038F0                     	endif
 14547  0038F0                     	if	0	;tblptru may be non-zero
 14548  0038F0                     	endif
 14549  0038F0  0008               	tblrd		*
 14550  0038F2  CFF5 F086          	movff	tablat,sprintf@c
 14551  0038F6  5186               	movf	sprintf@c& (0+255),w,b
 14552                           
 14553                           ; Switch size 1, requested type "space"
 14554                           ; Number of cases is 2, Range of values is 0 to 115
 14555                           ; switch strategies available:
 14556                           ; Name         Instructions Cycles
 14557                           ; simple_byte            7     4 (average)
 14558                           ;	Chosen strategy is simple_byte
 14559  0038F8  0A00               	xorlw	0	; case 0
 14560  0038FA  B4D8               	btfsc	status,2,c
 14561  0038FC  D00F               	goto	u13150
 14562  0038FE  0A73               	xorlw	115	; case 115
 14563  003900  B4D8               	btfsc	status,2,c
 14564  003902  D7C2               	goto	l2634
 14565  003904                     l2640:
 14566                           
 14567                           ; BSR set to: 0
 14568                           
 14569                           ; BSR set to: 0
 14570                           
 14571                           ;doprnt.c: 1422: {
 14572                           
 14573                           ; BSR set to: 0
 14574  003904  C07F  FFF6         	movff	sprintf@f,tblptrl
 14575  003908  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14576  00390C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14577  00390E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14578  003910                     	if	0	;tblptru may be non-zero
 14579  003910                     	endif
 14580  003910                     	if	0	;tblptru may be non-zero
 14581  003910                     	endif
 14582  003910  0008               	tblrd		*
 14583  003912  CFF5 F086          	movff	tablat,sprintf@c
 14584  003916  5186               	movf	sprintf@c& (0+255),w,b
 14585  003918  A4D8               	btfss	status,2,c
 14586  00391A  D7A6               	goto	l2629
 14587  00391C                     u13150:
 14588                           
 14589                           ; BSR set to: 0
 14590                           ;doprnt.c: 1538: *sp = 0;
 14591                           
 14592                           ; BSR set to: 0
 14593                           
 14594                           ;doprnt.c: 1469: }
 14595                           ;doprnt.c: 1533: }
 14596                           ;doprnt.c: 1535: alldone:
 14597                           
 14598                           ; BSR set to: 0
 14599  00391C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14600  003920  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14601  003924  0E00               	movlw	0
 14602  003926  6EDF               	movwf	indf2,c
 14603  003928  0012               	return	
 14604  00392A                     __end_of_sprintf:
 14605                           	opt stack 0
 14606                           tosu	equ	0xFFF
 14607                           tosh	equ	0xFFE
 14608                           tosl	equ	0xFFD
 14609                           pclath	equ	0xFFA
 14610                           tblptru	equ	0xFF8
 14611                           tblptrh	equ	0xFF7
 14612                           tblptrl	equ	0xFF6
 14613                           tablat	equ	0xFF5
 14614                           prodh	equ	0xFF4
 14615                           prodl	equ	0xFF3
 14616                           intcon	equ	0xFF2
 14617                           intcon2	equ	0xFF1
 14618                           intcon3	equ	0xFF0
 14619                           indf0	equ	0xFEF
 14620                           postinc0	equ	0xFEE
 14621                           plusw0	equ	0xFEB
 14622                           fsr0h	equ	0xFEA
 14623                           fsr0l	equ	0xFE9
 14624                           wreg	equ	0xFE8
 14625                           indf1	equ	0xFE7
 14626                           postinc1	equ	0xFE6
 14627                           postdec1	equ	0xFE5
 14628                           fsr1h	equ	0xFE2
 14629                           fsr1l	equ	0xFE1
 14630                           indf2	equ	0xFDF
 14631                           postinc2	equ	0xFDE
 14632                           postdec2	equ	0xFDD
 14633                           plusw2	equ	0xFDB
 14634                           fsr2h	equ	0xFDA
 14635                           fsr2l	equ	0xFD9
 14636                           status	equ	0xFD8
 14637                           
 14638 ;; *************** function _memset *****************
 14639 ;; Defined at:
 14640 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;  p1              2   29[BANK0 ] PTR void 
 14643 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14644 ;;  c               2   31[BANK0 ] int 
 14645 ;;  n               2   33[BANK0 ] unsigned int 
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14648 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14649 ;; Return value:  Size  Location     Type
 14650 ;;                  2   29[BANK0 ] PTR void 
 14651 ;; Registers used:
 14652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14653 ;; Tracked objects:
 14654 ;;		On entry : 0/0
 14655 ;;		On exit  : 0/0
 14656 ;;		Unchanged: 0/0
 14657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14658 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14661 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14662 ;;Total ram usage:        8 bytes
 14663 ;; Hardware stack levels used:    1
 14664 ;; Hardware stack levels required when called:   11
 14665 ;; This function calls:
 14666 ;;		Nothing
 14667 ;; This function is called by:
 14668 ;;		_USBDeviceInit
 14669 ;;		_USBStdSetCfgHandler
 14670 ;;		_Term_MainSm
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text59
 14675  005D00                     __ptext59:
 14676                           	opt stack 0
 14677  005D00                     _memset:
 14678                           	opt stack 14
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;incstack = 0
 14682  005D00  C07D  F083         	movff	memset@p1,memset@p
 14683  005D04  C07E  F084         	movff	memset@p1+1,memset@p+1
 14684  005D08  D009               	goto	l3110
 14685  005D0A                     l11805:
 14686  005D0A  C083  FFD9         	movff	memset@p,fsr2l
 14687  005D0E  C084  FFDA         	movff	memset@p+1,fsr2h
 14688  005D12  C07F  FFDF         	movff	memset@c,indf2
 14689  005D16  0100               	movlb	0	; () banked
 14690  005D18  4B83               	infsnz	memset@p& (0+255),f,b
 14691  005D1A  2B84               	incf	(memset@p+1)& (0+255),f,b
 14692  005D1C                     l3110:
 14693                           
 14694                           ; BSR set to: 0
 14695  005D1C  0100               	movlb	0	; () banked
 14696  005D1E  0781               	decf	memset@n& (0+255),f,b
 14697  005D20  A0D8               	btfss	status,0,c
 14698  005D22  0782               	decf	(memset@n+1)& (0+255),f,b
 14699  005D24  2981               	incf	memset@n& (0+255),w,b
 14700  005D26  E1F1               	bnz	l11805
 14701  005D28  2982               	incf	(memset@n+1)& (0+255),w,b
 14702  005D2A  B4D8               	btfsc	status,2,c
 14703  005D2C  0012               	return	
 14704  005D2E  D7ED               	goto	l3111
 14705  005D30                     __end_of_memset:
 14706                           	opt stack 0
 14707                           tosu	equ	0xFFF
 14708                           tosh	equ	0xFFE
 14709                           tosl	equ	0xFFD
 14710                           pclath	equ	0xFFA
 14711                           tblptru	equ	0xFF8
 14712                           tblptrh	equ	0xFF7
 14713                           tblptrl	equ	0xFF6
 14714                           tablat	equ	0xFF5
 14715                           prodh	equ	0xFF4
 14716                           prodl	equ	0xFF3
 14717                           intcon	equ	0xFF2
 14718                           intcon2	equ	0xFF1
 14719                           intcon3	equ	0xFF0
 14720                           indf0	equ	0xFEF
 14721                           postinc0	equ	0xFEE
 14722                           plusw0	equ	0xFEB
 14723                           fsr0h	equ	0xFEA
 14724                           fsr0l	equ	0xFE9
 14725                           wreg	equ	0xFE8
 14726                           indf1	equ	0xFE7
 14727                           postinc1	equ	0xFE6
 14728                           postdec1	equ	0xFE5
 14729                           fsr1h	equ	0xFE2
 14730                           fsr1l	equ	0xFE1
 14731                           indf2	equ	0xFDF
 14732                           postinc2	equ	0xFDE
 14733                           postdec2	equ	0xFDD
 14734                           plusw2	equ	0xFDB
 14735                           fsr2h	equ	0xFDA
 14736                           fsr2l	equ	0xFD9
 14737                           status	equ	0xFD8
 14738                           
 14739 ;; *************** function _Terminal *****************
 14740 ;; Defined at:
 14741 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14742 ;; Parameters:    Size  Location     Type
 14743 ;;		None
 14744 ;; Auto vars:     Size  Location     Type
 14745 ;;  i               1   68[BANK0 ] unsigned char 
 14746 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14747 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14748 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14749 ;;  Index           1   70[BANK0 ] unsigned char 
 14750 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14751 ;; Return value:  Size  Location     Type
 14752 ;;                  1    wreg      void 
 14753 ;; Registers used:
 14754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14755 ;; Tracked objects:
 14756 ;;		On entry : 0/0
 14757 ;;		On exit  : 0/0
 14758 ;;		Unchanged: 0/0
 14759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14761 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14763 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14764 ;;Total ram usage:      455 bytes
 14765 ;; Hardware stack levels used:    1
 14766 ;; Hardware stack levels required when called:   15
 14767 ;; This function calls:
 14768 ;;		_I2cSlv_I2cReadMsgSts
 14769 ;;		_I2cSlv_ReceiveI2cMsg
 14770 ;;		_I2cSlv_SendI2cMsg
 14771 ;;		_OsTmr_Wait
 14772 ;;		_atoi
 14773 ;;		_getsUSBUSART
 14774 ;;		_itoa
 14775 ;;		_putUSBUSART
 14776 ;;		_strcpy
 14777 ;;		_strtol
 14778 ;;		_xtoi
 14779 ;; This function is called by:
 14780 ;;		_Term_MainSm
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           	psect	text60
 14785  0000D0                     __ptext60:
 14786                           	opt stack 0
 14787  0000D0                     _Terminal:
 14788                           	opt stack 11
 14789                           
 14790                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14791                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14792                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14793                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14794                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14795                           ;term.c: 435: UINT8 Index;
 14796                           ;term.c: 436: static UINT8 Len[4];
 14797                           ;term.c: 437: static UINT8 PackageLen;
 14798                           ;term.c: 438: static UINT8 Addr[4];
 14799                           ;term.c: 439: static UINT8 SlaveAddr;
 14800                           ;term.c: 440: static PayloadType Payload[20u];
 14801                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14802                           
 14803                           ; BSR set to: 0
 14804                           ;incstack = 0
 14805  0000D0  0E00               	movlw	0
 14806  0000D2  0100               	movlb	0	; () banked
 14807  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14808                           
 14809                           ; BSR set to: 0
 14810                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14811                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14812                           ;term.c: 445: static SwTimerType SwTimer;
 14813                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14814  0000D6  0E1F               	movlw	31
 14815  0000D8  65CD               	cpfsgt	_USBDeviceState& (0+255),b
 14816  0000DA  0012               	return	
 14817                           
 14818                           ; BSR set to: 0
 14819  0000DC  B265               	btfsc	3941,1,c	;volatile
 14820  0000DE  0012               	return	
 14821  0000E0  D278               	goto	l2367
 14822  0000E2                     
 14823                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14824                           
 14825                           ; BSR set to: 0
 14826  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14827  0000E4  0100               	movlb	0	; () banked
 14828  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14829  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14830  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14831  0000EC  0EC8               	movlw	200
 14832  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14833  0000F0  EC55  F024         	call	_getsUSBUSART	;wreg free
 14834  0000F4  0100               	movlb	0	; () banked
 14835  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14836                           
 14837                           ; BSR set to: 0
 14838                           ;term.c: 458: if (ReceivedBytes > 0)
 14839  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14840  0000FA  B4D8               	btfsc	status,2,c
 14841  0000FC  0012               	return	
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;term.c: 459: {
 14845                           ;term.c: 461: if (EchoOption == 1u)
 14846  0000FE  0102               	movlb	2	; () banked
 14847  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14848  000102  A4D8               	btfss	status,2,c
 14849  000104  D026               	goto	l2371
 14850                           
 14851                           ; BSR set to: 2
 14852                           ;term.c: 462: {
 14853                           ;term.c: 464: if((cdc_trf_state == 0))
 14854  000106  0100               	movlb	0	; () banked
 14855  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14856  00010A  A4D8               	btfss	status,2,c
 14857  00010C  D022               	goto	l2371
 14858                           
 14859                           ; BSR set to: 0
 14860                           ;term.c: 465: {
 14861                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14862  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14863  000110  0D01               	mullw	1
 14864  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14865  000114  24F3               	addwf	prodl,w,c
 14866  000116  6ED9               	movwf	fsr2l,c
 14867  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14868  00011A  20F4               	addwfc	prodh,w,c
 14869  00011C  6EDA               	movwf	fsr2h,c
 14870  00011E  0E0D               	movlw	13
 14871  000120  6EDF               	movwf	indf2,c
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14875  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14876  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14877  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14878  000128  0E01               	movlw	1
 14879  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14880  00012C  0E00               	movlw	0
 14881  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14882  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14883  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14884  000134  6ED9               	movwf	fsr2l,c
 14885  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14886  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14887  00013A  6EDA               	movwf	fsr2h,c
 14888  00013C  0E0A               	movlw	10
 14889  00013E  6EDF               	movwf	indf2,c
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14893  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14894  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14895  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14896  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14897  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14898  00014A  0F02               	addlw	2
 14899  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14900  00014E  ECD8  F02F         	call	_putUSBUSART	;wreg free
 14901  000152                     l2371:
 14902                           
 14903                           ;term.c: 469: }
 14904                           ;term.c: 470: }
 14905                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14906                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14907                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14908  000152  0E53               	movlw	83
 14909  000154  010A               	movlb	10	; () banked
 14910  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14911  000158  A4D8               	btfss	status,2,c
 14912  00015A  D043               	goto	l2372
 14913                           
 14914                           ; BSR set to: 10
 14915  00015C  0E4F               	movlw	79
 14916  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14917  000160  A4D8               	btfss	status,2,c
 14918  000162  D03F               	goto	l2372
 14919                           
 14920                           ; BSR set to: 10
 14921  000164  0E3A               	movlw	58
 14922  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14923  000168  A4D8               	btfss	status,2,c
 14924  00016A  D03B               	goto	l2372
 14925                           
 14926                           ; BSR set to: 10
 14927                           ;term.c: 476: {
 14928                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14929  00016C  0E47               	movlw	71
 14930  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14931  000170  A4D8               	btfss	status,2,c
 14932  000172  0012               	return	
 14933                           
 14934                           ; BSR set to: 10
 14935  000174  0E3A               	movlw	58
 14936  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14937  000178  A4D8               	btfss	status,2,c
 14938  00017A  0012               	return	
 14939                           
 14940                           ; BSR set to: 10
 14941                           ;term.c: 479: {
 14942                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14943  00017C  0E44               	movlw	68
 14944  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14945  000180  A4D8               	btfss	status,2,c
 14946  000182  D015               	goto	l2374
 14947                           
 14948                           ; BSR set to: 10
 14949  000184  0E46               	movlw	70
 14950  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14951  000188  A4D8               	btfss	status,2,c
 14952  00018A  D011               	goto	l2374
 14953                           
 14954                           ; BSR set to: 10
 14955                           ;term.c: 482: {
 14956                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14957  00018C  0E41               	movlw	65
 14958  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14959  000190  A4D8               	btfss	status,2,c
 14960  000192  D004               	goto	l2375
 14961                           
 14962                           ; BSR set to: 10
 14963                           ;term.c: 484: {
 14964                           ;term.c: 485: FormatOption = 1u;
 14965  000194  0E01               	movlw	1
 14966  000196  0102               	movlb	2	; () banked
 14967  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14968                           
 14969                           ;term.c: 486: }
 14970  00019A  0012               	return	
 14971  00019C                     l2375:
 14972                           
 14973                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14974                           
 14975                           ; BSR set to: 2
 14976  00019C  0E42               	movlw	66
 14977  00019E  010A               	movlb	10	; () banked
 14978  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14979  0001A2  A4D8               	btfss	status,2,c
 14980  0001A4  0012               	return	
 14981                           
 14982                           ; BSR set to: 10
 14983                           ;term.c: 488: {
 14984                           ;term.c: 489: FormatOption = 0u;
 14985  0001A6  0E00               	movlw	0
 14986  0001A8  0102               	movlb	2	; () banked
 14987  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14988                           
 14989                           ; BSR set to: 2
 14990                           ;term.c: 490: }
 14991                           ;term.c: 491: }
 14992                           
 14993                           ; BSR set to: 2
 14994  0001AC  0012               	return	
 14995  0001AE                     l2374:
 14996                           
 14997                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14998                           
 14999                           ; BSR set to: 2
 15000  0001AE  0E45               	movlw	69
 15001  0001B0  010A               	movlb	10	; () banked
 15002  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15003  0001B4  A4D8               	btfss	status,2,c
 15004  0001B6  0012               	return	
 15005                           
 15006                           ; BSR set to: 10
 15007  0001B8  0E4D               	movlw	77
 15008  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15009  0001BC  A4D8               	btfss	status,2,c
 15010  0001BE  0012               	return	
 15011                           
 15012                           ; BSR set to: 10
 15013                           ;term.c: 494: {
 15014                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15015  0001C0  0E31               	movlw	49
 15016  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15017  0001C4  A4D8               	btfss	status,2,c
 15018  0001C6  D004               	goto	l2380
 15019                           
 15020                           ; BSR set to: 10
 15021                           ;term.c: 496: {
 15022                           ;term.c: 497: EchoOption = 1u;
 15023  0001C8  0E01               	movlw	1
 15024  0001CA  0102               	movlb	2	; () banked
 15025  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15026                           
 15027                           ;term.c: 498: }
 15028  0001CE  0012               	return	
 15029  0001D0                     l2380:
 15030                           
 15031                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15032                           
 15033                           ; BSR set to: 2
 15034  0001D0  0E30               	movlw	48
 15035  0001D2  010A               	movlb	10	; () banked
 15036  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15037  0001D6  A4D8               	btfss	status,2,c
 15038  0001D8  0012               	return	
 15039                           
 15040                           ; BSR set to: 10
 15041                           ;term.c: 500: {
 15042                           ;term.c: 501: EchoOption = 0u;
 15043  0001DA  0E00               	movlw	0
 15044  0001DC  0102               	movlb	2	; () banked
 15045  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15046                           
 15047                           ; BSR set to: 2
 15048                           ;term.c: 507: }
 15049                           ;term.c: 508: }
 15050                           ;term.c: 509: }
 15051                           
 15052                           ; BSR set to: 2
 15053                           
 15054                           ; BSR set to: 2
 15055                           
 15056                           ;term.c: 504: else
 15057                           ;term.c: 505: {
 15058                           
 15059                           ; BSR set to: 2
 15060                           
 15061                           ; BSR set to: 2
 15062                           ;term.c: 502: }
 15063                           ;term.c: 503: }
 15064                           
 15065                           ; BSR set to: 2
 15066  0001E0  0012               	return	
 15067  0001E2                     l2372:
 15068                           
 15069                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15070                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15071                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15072                           
 15073                           ; BSR set to: 2
 15074  0001E2  0E53               	movlw	83
 15075  0001E4  010A               	movlb	10	; () banked
 15076  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15077  0001E8  A4D8               	btfss	status,2,c
 15078  0001EA  D0D3               	goto	l2385
 15079                           
 15080                           ; BSR set to: 10
 15081  0001EC  0E42               	movlw	66
 15082  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15083  0001F0  A4D8               	btfss	status,2,c
 15084  0001F2  D0CF               	goto	l2385
 15085                           
 15086                           ; BSR set to: 10
 15087  0001F4  0E3A               	movlw	58
 15088  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15089  0001F8  A4D8               	btfss	status,2,c
 15090  0001FA  D0CB               	goto	l2385
 15091                           
 15092                           ; BSR set to: 10
 15093                           ;term.c: 513: {
 15094                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15095  0001FC  0E57               	movlw	87
 15096  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15097  000200  A4D8               	btfss	status,2,c
 15098  000202  D091               	goto	l2386
 15099                           
 15100                           ; BSR set to: 10
 15101  000204  0E3A               	movlw	58
 15102  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15103  000208  A4D8               	btfss	status,2,c
 15104  00020A  D08D               	goto	l2386
 15105                           
 15106                           ; BSR set to: 10
 15107                           ;term.c: 515: {
 15108                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15109  00020C  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15110                           
 15111                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15112  000210  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15113                           
 15114                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15115  000214  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15116                           
 15117                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15118  000218  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15119                           
 15120                           ; BSR set to: 10
 15121                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15122  00021C  0EAC               	movlw	low Terminal@Len
 15123  00021E  0100               	movlb	0	; () banked
 15124  000220  6F83               	movwf	atoi@s& (0+255),b
 15125  000222  0E03               	movlw	high Terminal@Len
 15126  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15127  000226  EC59  F01B         	call	_atoi	;wreg free
 15128  00022A  0100               	movlb	0	; () banked
 15129  00022C  5183               	movf	?_atoi& (0+255),w,b
 15130  00022E  0102               	movlb	2	; () banked
 15131  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15132                           
 15133                           ; BSR set to: 2
 15134                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15135  000232  0EA8               	movlw	low Terminal@Addr
 15136  000234  0100               	movlb	0	; () banked
 15137  000236  6F83               	movwf	xtoi@s& (0+255),b
 15138  000238  0E03               	movlw	high Terminal@Addr
 15139  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15140  00023C  EC08  F01A         	call	_xtoi	;wreg free
 15141  000240  0100               	movlb	0	; () banked
 15142  000242  5183               	movf	?_xtoi& (0+255),w,b
 15143  000244  0102               	movlb	2	; () banked
 15144  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15145                           
 15146                           ; BSR set to: 2
 15147                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15148  000248  0E00               	movlw	0
 15149  00024A  0100               	movlb	0	; () banked
 15150  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15151  00024E  D032               	goto	l2387
 15152  000250                     
 15153                           ;term.c: 527: {
 15154                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15155                           
 15156                           ; BSR set to: 0
 15157  000250  0100               	movlb	0	; () banked
 15158  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15159  000254  0D02               	mullw	2
 15160  000256  0E0B               	movlw	11
 15161  000258  26F3               	addwf	prodl,f,c
 15162  00025A  0E00               	movlw	0
 15163  00025C  22F4               	addwfc	prodh,f,c
 15164  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15165  000260  24F3               	addwf	prodl,w,c
 15166  000262  6ED9               	movwf	fsr2l,c
 15167  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15168  000266  20F4               	addwfc	prodh,w,c
 15169  000268  6EDA               	movwf	fsr2h,c
 15170  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15171  00026C  0D04               	mullw	4
 15172  00026E  0E66               	movlw	low Terminal@Payload
 15173  000270  24F3               	addwf	prodl,w,c
 15174  000272  6EE1               	movwf	fsr1l,c
 15175  000274  0E07               	movlw	high Terminal@Payload
 15176  000276  20F4               	addwfc	prodh,w,c
 15177  000278  6EE2               	movwf	fsr1h,c
 15178  00027A  CFDF FFE7          	movff	indf2,indf1
 15179                           
 15180                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15181  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15182  000280  0D02               	mullw	2
 15183  000282  0E0C               	movlw	12
 15184  000284  26F3               	addwf	prodl,f,c
 15185  000286  0E00               	movlw	0
 15186  000288  22F4               	addwfc	prodh,f,c
 15187  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15188  00028C  24F3               	addwf	prodl,w,c
 15189  00028E  6ED9               	movwf	fsr2l,c
 15190  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15191  000292  20F4               	addwfc	prodh,w,c
 15192  000294  6EDA               	movwf	fsr2h,c
 15193  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15194  000298  0D04               	mullw	4
 15195  00029A  0E01               	movlw	1
 15196  00029C  26F3               	addwf	prodl,f,c
 15197  00029E  0E00               	movlw	0
 15198  0002A0  22F4               	addwfc	prodh,f,c
 15199  0002A2  0E66               	movlw	low Terminal@Payload
 15200  0002A4  24F3               	addwf	prodl,w,c
 15201  0002A6  6EE1               	movwf	fsr1l,c
 15202  0002A8  0E07               	movlw	high Terminal@Payload
 15203  0002AA  20F4               	addwfc	prodh,w,c
 15204  0002AC  6EE2               	movwf	fsr1h,c
 15205  0002AE  CFDF FFE7          	movff	indf2,indf1
 15206                           
 15207                           ; BSR set to: 0
 15208  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15209  0002B4                     l2387:
 15210                           
 15211                           ; BSR set to: 0
 15212                           
 15213                           ; BSR set to: 0
 15214  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15215  0002B6  0102               	movlb	2	; () banked
 15216  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15217  0002BA  B0D8               	btfsc	status,0,c
 15218  0002BC  D7C9               	goto	l2388
 15219                           
 15220                           ; BSR set to: 2
 15221                           ;term.c: 530: }
 15222                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15223                           
 15224                           ; BSR set to: 2
 15225  0002BE  0E00               	movlw	0
 15226  0002C0  0100               	movlb	0	; () banked
 15227  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15228  0002C4  D01F               	goto	l2390
 15229  0002C6                     
 15230                           ;term.c: 533: {
 15231                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15232                           
 15233                           ; BSR set to: 0
 15234  0002C6  0100               	movlb	0	; () banked
 15235  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15236  0002CA  0D04               	mullw	4
 15237  0002CC  0E66               	movlw	low Terminal@Payload
 15238  0002CE  24F3               	addwf	prodl,w,c
 15239  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15240  0002D2  0E07               	movlw	high Terminal@Payload
 15241  0002D4  20F4               	addwfc	prodh,w,c
 15242  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15243  0002D8  0E00               	movlw	0
 15244  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15245  0002DC  0E00               	movlw	0
 15246  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15247  0002E0  0E00               	movlw	0
 15248  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15249  0002E4  0E10               	movlw	16
 15250  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15251  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15252  0002EC  0100               	movlb	0	; () banked
 15253  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15254  0002F0  0D01               	mullw	1
 15255  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15256  0002F4  24F3               	addwf	prodl,w,c
 15257  0002F6  6ED9               	movwf	fsr2l,c
 15258  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15259  0002FA  20F4               	addwfc	prodh,w,c
 15260  0002FC  6EDA               	movwf	fsr2h,c
 15261  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15262                           
 15263                           ; BSR set to: 0
 15264  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15265  000304                     l2390:
 15266                           
 15267                           ; BSR set to: 0
 15268                           
 15269                           ; BSR set to: 0
 15270  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15271  000306  0102               	movlb	2	; () banked
 15272  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15273  00030A  B0D8               	btfsc	status,0,c
 15274  00030C  D7DC               	goto	l2391
 15275                           
 15276                           ; BSR set to: 2
 15277                           ;term.c: 539: }
 15278                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15279                           
 15280                           ; BSR set to: 2
 15281  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15282  000310  0100               	movlb	0	; () banked
 15283  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15284  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15285  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15286  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15287  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15288  000320  EC33  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 15289                           
 15290                           ;term.c: 543: }
 15291  000324  0012               	return	
 15292  000326                     l2386:
 15293                           
 15294                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15295  000326  0E52               	movlw	82
 15296  000328  010A               	movlb	10	; () banked
 15297  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15298  00032C  A4D8               	btfss	status,2,c
 15299  00032E  0012               	return	
 15300                           
 15301                           ; BSR set to: 10
 15302  000330  0E3A               	movlw	58
 15303  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15304  000334  A4D8               	btfss	status,2,c
 15305  000336  0012               	return	
 15306                           
 15307                           ; BSR set to: 10
 15308                           ;term.c: 545: {
 15309                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15310  000338  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15311                           
 15312                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15313  00033C  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15314                           
 15315                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15316  000340  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15317                           
 15318                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15319  000344  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15320                           
 15321                           ; BSR set to: 10
 15322                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15323  000348  0EAC               	movlw	low Terminal@Len
 15324  00034A  0100               	movlb	0	; () banked
 15325  00034C  6F83               	movwf	atoi@s& (0+255),b
 15326  00034E  0E03               	movlw	high Terminal@Len
 15327  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15328  000352  EC59  F01B         	call	_atoi	;wreg free
 15329  000356  0100               	movlb	0	; () banked
 15330  000358  5183               	movf	?_atoi& (0+255),w,b
 15331  00035A  0102               	movlb	2	; () banked
 15332  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15333                           
 15334                           ; BSR set to: 2
 15335                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15336  00035E  0EA8               	movlw	low Terminal@Addr
 15337  000360  0100               	movlb	0	; () banked
 15338  000362  6F83               	movwf	xtoi@s& (0+255),b
 15339  000364  0E03               	movlw	high Terminal@Addr
 15340  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15341  000368  EC08  F01A         	call	_xtoi	;wreg free
 15342  00036C  0100               	movlb	0	; () banked
 15343  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15344  000370  0102               	movlb	2	; () banked
 15345  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15346                           
 15347                           ; BSR set to: 2
 15348                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15349  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15350  000376  0100               	movlb	0	; () banked
 15351  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15352  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15353  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15354  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15355  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15356  000386  ECD4  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15357                           
 15358                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15359  00038A  0E01               	movlw	1
 15360  00038C  0102               	movlb	2	; () banked
 15361  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15362                           
 15363                           ; BSR set to: 2
 15364                           ;term.c: 561: }
 15365                           ;term.c: 562: }
 15366                           
 15367                           ; BSR set to: 2
 15368  000390  0012               	return	
 15369  000392                     l2385:
 15370                           
 15371                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15372                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15373                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15374                           
 15375                           ; BSR set to: 2
 15376  000392  0E54               	movlw	84
 15377  000394  010A               	movlb	10	; () banked
 15378  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15379  000398  A4D8               	btfss	status,2,c
 15380  00039A  0012               	return	
 15381                           
 15382                           ; BSR set to: 10
 15383  00039C  0E45               	movlw	69
 15384  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15385  0003A0  A4D8               	btfss	status,2,c
 15386  0003A2  0012               	return	
 15387                           
 15388                           ; BSR set to: 10
 15389  0003A4  0E4C               	movlw	76
 15390  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15391  0003A8  A4D8               	btfss	status,2,c
 15392  0003AA  0012               	return	
 15393                           
 15394                           ; BSR set to: 10
 15395                           ;term.c: 566: {
 15396                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15397  0003AC  CA03  F3AC         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15398                           
 15399                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15400  0003B0  CA04  F3AD         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15401                           
 15402                           ; BSR set to: 10
 15403                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15404  0003B4  0EAC               	movlw	low Terminal@Len
 15405  0003B6  0100               	movlb	0	; () banked
 15406  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15407  0003BA  0E03               	movlw	high Terminal@Len
 15408  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15409  0003BE  EC59  F01B         	call	_atoi	;wreg free
 15410  0003C2  C083  F322         	movff	?_atoi,_PhoneNumberLen
 15411  0003C6  C084  F323         	movff	?_atoi+1,_PhoneNumberLen+1
 15412                           
 15413                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15414  0003CA  0E00               	movlw	0
 15415  0003CC  0100               	movlb	0	; () banked
 15416  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15417  0003D0  D018               	goto	l2397
 15418  0003D2                     
 15419                           ; BSR set to: 0
 15420                           ;term.c: 573: {
 15421                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15422                           
 15423                           ; BSR set to: 0
 15424  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15425  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15426  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15427  0003D8  0E05               	movlw	5
 15428  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15429  0003DC  0E00               	movlw	0
 15430  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15431  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15432  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15433  0003E4  6ED9               	movwf	fsr2l,c
 15434  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15435  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15436  0003EA  6EDA               	movwf	fsr2h,c
 15437  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15438  0003EE  0D01               	mullw	1
 15439  0003F0  0E86               	movlw	low _PhoneNumber
 15440  0003F2  24F3               	addwf	prodl,w,c
 15441  0003F4  6EE1               	movwf	fsr1l,c
 15442  0003F6  0E04               	movlw	high _PhoneNumber
 15443  0003F8  20F4               	addwfc	prodh,w,c
 15444  0003FA  6EE2               	movwf	fsr1h,c
 15445  0003FC  CFDF FFE7          	movff	indf2,indf1
 15446                           
 15447                           ; BSR set to: 0
 15448  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15449  000402                     l2397:
 15450                           
 15451                           ; BSR set to: 0
 15452                           
 15453                           ; BSR set to: 0
 15454  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15455  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15456  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15457  000408  0103               	movlb	3	; () banked
 15458  00040A  5122               	movf	_PhoneNumberLen& (0+255),w,b
 15459  00040C  0100               	movlb	0	; () banked
 15460  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15461  000410  0103               	movlb	3	; () banked
 15462  000412  5123               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15463  000414  0100               	movlb	0	; () banked
 15464  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15465  000418  B0D8               	btfsc	status,0,c
 15466  00041A  0012               	return	
 15467  00041C  D7DA               	goto	l2398
 15468  00041E                     
 15469                           ;term.c: 619: if((cdc_trf_state == 0))
 15470                           
 15471                           ; BSR set to: 0
 15472  00041E  0100               	movlb	0	; () banked
 15473  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15474  000422  A4D8               	btfss	status,2,c
 15475  000424  0012               	return	
 15476                           
 15477                           ; BSR set to: 0
 15478                           ;term.c: 620: {
 15479                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15480  000426  0E53               	movlw	83
 15481  000428  0102               	movlb	2	; () banked
 15482  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15483                           
 15484                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15485  00042C  0E42               	movlw	66
 15486  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15487                           
 15488                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15489  000430  0E5B               	movlw	91
 15490  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15491                           
 15492                           ; BSR set to: 2
 15493                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15494  000434  C3A8  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15495                           
 15496                           ; BSR set to: 2
 15497                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15498  000438  C3A9  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15499                           
 15500                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15501  00043C  0E5D               	movlw	93
 15502  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15503                           
 15504                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15505  000440  0E3A               	movlw	58
 15506  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15507                           
 15508                           ; BSR set to: 2
 15509                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15510  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15511  000446  0100               	movlb	0	; () banked
 15512  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15513  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15514  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15515  00044E  0E07               	movlw	7
 15516  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15517  000452  ECD8  F02F         	call	_putUSBUSART	;wreg free
 15518                           
 15519                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15520  000456  0E02               	movlw	2
 15521  000458  0102               	movlb	2	; () banked
 15522  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15523                           
 15524                           ; BSR set to: 2
 15525                           ;term.c: 632: }
 15526                           ;term.c: 633: break;
 15527  00045C  0012               	return	
 15528  00045E                     
 15529                           ; BSR set to: 2
 15530                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15531                           
 15532                           ; BSR set to: 2
 15533  00045E  ECFA  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15534  000462  06E8               	decf	wreg,f,c
 15535  000464  A4D8               	btfss	status,2,c
 15536  000466  D088               	goto	l2406
 15537                           
 15538                           ;term.c: 638: {
 15539                           ;term.c: 640: if (FormatOption == 1u)
 15540  000468  0102               	movlb	2	; () banked
 15541  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15542  00046C  A4D8               	btfss	status,2,c
 15543  00046E  D027               	goto	u13030
 15544                           
 15545                           ; BSR set to: 2
 15546                           ;term.c: 641: {
 15547                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15548  000470  0E00               	movlw	0
 15549  000472  0100               	movlb	0	; () banked
 15550  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15551  000476  D01E               	goto	l2408
 15552  000478                     
 15553                           ;term.c: 644: {
 15554                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15555                           
 15556                           ; BSR set to: 0
 15557  000478  0100               	movlb	0	; () banked
 15558  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15559  00047C  0D04               	mullw	4
 15560  00047E  0E66               	movlw	low Terminal@Payload
 15561  000480  24F3               	addwf	prodl,w,c
 15562  000482  6F93               	movwf	itoa@buf& (0+255),b
 15563  000484  0E07               	movlw	high Terminal@Payload
 15564  000486  20F4               	addwfc	prodh,w,c
 15565  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15566  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15567  00048C  0D01               	mullw	1
 15568  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15569  000490  24F3               	addwf	prodl,w,c
 15570  000492  6ED9               	movwf	fsr2l,c
 15571  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15572  000496  20F4               	addwfc	prodh,w,c
 15573  000498  6EDA               	movwf	fsr2h,c
 15574  00049A  50DF               	movf	indf2,w,c
 15575  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15576  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15577  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15578  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15579  0004A4  0E00               	movlw	0
 15580  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15581  0004A8  0E0A               	movlw	10
 15582  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15583  0004AC  EC4D  F02C         	call	_itoa	;wreg free
 15584  0004B0  0100               	movlb	0	; () banked
 15585  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15586  0004B4                     l2408:
 15587                           
 15588                           ; BSR set to: 0
 15589                           
 15590                           ; BSR set to: 0
 15591  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15592  0004B6  0102               	movlb	2	; () banked
 15593  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15594  0004BA  B0D8               	btfsc	status,0,c
 15595  0004BC  D7DD               	goto	l2409
 15596  0004BE                     u13030:
 15597                           
 15598                           ; BSR set to: 2
 15599                           ;term.c: 646: }
 15600                           ;term.c: 647: }
 15601                           ;term.c: 650: if((cdc_trf_state == 0))
 15602                           
 15603                           ; BSR set to: 2
 15604                           
 15605                           ; BSR set to: 2
 15606  0004BE  0100               	movlb	0	; () banked
 15607  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15608  0004C2  A4D8               	btfss	status,2,c
 15609  0004C4  0012               	return	
 15610                           
 15611                           ; BSR set to: 0
 15612                           ;term.c: 651: {
 15613                           ;term.c: 653: if (FormatOption == 1u)
 15614  0004C6  0102               	movlb	2	; () banked
 15615  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15616  0004CA  A4D8               	btfss	status,2,c
 15617  0004CC  D02B               	goto	l2412
 15618                           
 15619                           ; BSR set to: 2
 15620                           ;term.c: 654: {
 15621                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15622  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15623  0004D0  0D08               	mullw	8
 15624  0004D2  0E03               	movlw	3
 15625  0004D4  26F3               	addwf	prodl,f,c
 15626  0004D6  0E00               	movlw	0
 15627  0004D8  22F4               	addwfc	prodh,f,c
 15628  0004DA  0E66               	movlw	low Terminal@Payload
 15629  0004DC  24F3               	addwf	prodl,w,c
 15630  0004DE  6ED9               	movwf	fsr2l,c
 15631  0004E0  0E07               	movlw	high Terminal@Payload
 15632  0004E2  20F4               	addwfc	prodh,w,c
 15633  0004E4  6EDA               	movwf	fsr2h,c
 15634  0004E6  0E0D               	movlw	13
 15635  0004E8  6EDF               	movwf	indf2,c
 15636                           
 15637                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15638  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15639  0004EC  0D08               	mullw	8
 15640  0004EE  0E02               	movlw	2
 15641  0004F0  26F3               	addwf	prodl,f,c
 15642  0004F2  0E00               	movlw	0
 15643  0004F4  22F4               	addwfc	prodh,f,c
 15644  0004F6  0E66               	movlw	low Terminal@Payload
 15645  0004F8  24F3               	addwf	prodl,w,c
 15646  0004FA  6ED9               	movwf	fsr2l,c
 15647  0004FC  0E07               	movlw	high Terminal@Payload
 15648  0004FE  20F4               	addwfc	prodh,w,c
 15649  000500  6EDA               	movwf	fsr2h,c
 15650  000502  0E0A               	movlw	10
 15651  000504  6EDF               	movwf	indf2,c
 15652                           
 15653                           ; BSR set to: 2
 15654                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15655  000506  0E66               	movlw	low Terminal@Payload
 15656  000508  0100               	movlb	0	; () banked
 15657  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15658  00050C  0E07               	movlw	high Terminal@Payload
 15659  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15660  000510  0102               	movlb	2	; () banked
 15661  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15662  000514  0D02               	mullw	2
 15663  000516  50F3               	movf	prodl,w,c
 15664  000518  0F04               	addlw	4
 15665  00051A  0100               	movlb	0	; () banked
 15666  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15667  00051E  ECD8  F02F         	call	_putUSBUSART	;wreg free
 15668                           
 15669                           ;term.c: 659: }
 15670  000522  D026               	goto	l2413
 15671  000524                     l2412:
 15672                           
 15673                           ;term.c: 660: else
 15674                           ;term.c: 661: {
 15675                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15676  000524  0102               	movlb	2	; () banked
 15677  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15678  000528  0D01               	mullw	1
 15679  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15680  00052C  24F3               	addwf	prodl,w,c
 15681  00052E  6ED9               	movwf	fsr2l,c
 15682  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15683  000532  20F4               	addwfc	prodh,w,c
 15684  000534  6EDA               	movwf	fsr2h,c
 15685  000536  0E0D               	movlw	13
 15686  000538  6EDF               	movwf	indf2,c
 15687                           
 15688                           ; BSR set to: 2
 15689                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15690  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15691  00053C  0100               	movlb	0	; () banked
 15692  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15693  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15694  000542  0E01               	movlw	1
 15695  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15696  000546  0E00               	movlw	0
 15697  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15698  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15699  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15700  00054E  6ED9               	movwf	fsr2l,c
 15701  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15702  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15703  000554  6EDA               	movwf	fsr2h,c
 15704  000556  0E0A               	movlw	10
 15705  000558  6EDF               	movwf	indf2,c
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15709  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15710  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15711  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15712  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15713  000562  0102               	movlb	2	; () banked
 15714  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15715  000566  0F02               	addlw	2
 15716  000568  0100               	movlb	0	; () banked
 15717  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15718  00056C  ECD8  F02F         	call	_putUSBUSART	;wreg free
 15719  000570                     l2413:
 15720                           
 15721                           ;term.c: 666: }
 15722                           ;term.c: 668: TermState = Term_GetData;
 15723  000570  0E00               	movlw	0
 15724  000572  0102               	movlb	2	; () banked
 15725  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15726                           
 15727                           ; BSR set to: 2
 15728                           ;term.c: 669: }
 15729                           ;term.c: 670: }
 15730  000576  0012               	return	
 15731  000578                     l2406:
 15732                           
 15733                           ;term.c: 671: else
 15734                           ;term.c: 672: {
 15735                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15736                           
 15737                           ; BSR set to: 2
 15738  000578  0EA9               	movlw	low Terminal@SwTimer
 15739  00057A  0100               	movlb	0	; () banked
 15740  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15741  00057E  0E04               	movlw	high Terminal@SwTimer
 15742  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15743  000582  0EB8               	movlw	184
 15744  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15745  000586  0E0B               	movlw	11
 15746  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15747  00058A  0E00               	movlw	0
 15748  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15749  00058E  0E00               	movlw	0
 15750  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15751  000592  EC8E  F026         	call	_OsTmr_Wait	;wreg free
 15752  000596  06E8               	decf	wreg,f,c
 15753  000598  A4D8               	btfss	status,2,c
 15754  00059A  0012               	return	
 15755                           
 15756                           ;term.c: 675: {
 15757                           ;term.c: 677: if((cdc_trf_state == 0))
 15758  00059C  0100               	movlb	0	; () banked
 15759  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15760  0005A0  A4D8               	btfss	status,2,c
 15761  0005A2  0012               	return	
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;term.c: 678: {
 15765                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15766  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15767  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15768  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15769  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15770  0005AC  0E6C               	movlw	low STR_21
 15771  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15772  0005B0  0EFE               	movlw	high STR_21
 15773  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15774  0005B4  EC4F  F02E         	call	_strcpy	;wreg free
 15775                           
 15776                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15777  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15778  0005BA  0100               	movlb	0	; () banked
 15779  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15780  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15781  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15782  0005C2  0E29               	movlw	41
 15783  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15784  0005C6  ECD8  F02F         	call	_putUSBUSART	;wreg free
 15785                           
 15786                           ;term.c: 682: TermState = Term_GetData;
 15787  0005CA  0E00               	movlw	0
 15788  0005CC  0102               	movlb	2	; () banked
 15789  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15790                           
 15791                           ; BSR set to: 2
 15792                           ;term.c: 693: }
 15793                           
 15794                           ; BSR set to: 2
 15795                           ;term.c: 692: break;
 15796                           
 15797                           ;term.c: 691: default:
 15798                           
 15799                           ; BSR set to: 2
 15800                           ;term.c: 689: break;
 15801                           
 15802                           ;term.c: 688: case Term_ReadSlvUartData:
 15803                           
 15804                           ; BSR set to: 2
 15805                           ;term.c: 683: }
 15806                           ;term.c: 684: }
 15807                           ;term.c: 685: }
 15808                           ;term.c: 686: break;
 15809                           
 15810                           ; BSR set to: 2
 15811                           
 15812                           ; BSR set to: 2
 15813  0005D0  0012               	return	
 15814  0005D2                     l2367:
 15815                           
 15816                           ; BSR set to: 2
 15817  0005D2  0102               	movlb	2	; () banked
 15818  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15819                           
 15820                           ; Switch size 1, requested type "space"
 15821                           ; Number of cases is 4, Range of values is 0 to 3
 15822                           ; switch strategies available:
 15823                           ; Name         Instructions Cycles
 15824                           ; simple_byte           13     7 (average)
 15825                           ;	Chosen strategy is simple_byte
 15826  0005D6  0A00               	xorlw	0	; case 0
 15827  0005D8  B4D8               	btfsc	status,2,c
 15828  0005DA  D583               	goto	l2368
 15829  0005DC  0A01               	xorlw	1	; case 1
 15830  0005DE  B4D8               	btfsc	status,2,c
 15831  0005E0  D71E               	goto	l2403
 15832  0005E2  0A03               	xorlw	3	; case 2
 15833  0005E4  B4D8               	btfsc	status,2,c
 15834  0005E6  D73B               	goto	l2405
 15835  0005E8  0A01               	xorlw	1	; case 3
 15836  0005EA  0012               	return	
 15837  0005EC                     __end_of_Terminal:
 15838                           	opt stack 0
 15839                           tosu	equ	0xFFF
 15840                           tosh	equ	0xFFE
 15841                           tosl	equ	0xFFD
 15842                           pclath	equ	0xFFA
 15843                           tblptru	equ	0xFF8
 15844                           tblptrh	equ	0xFF7
 15845                           tblptrl	equ	0xFF6
 15846                           tablat	equ	0xFF5
 15847                           prodh	equ	0xFF4
 15848                           prodl	equ	0xFF3
 15849                           intcon	equ	0xFF2
 15850                           intcon2	equ	0xFF1
 15851                           intcon3	equ	0xFF0
 15852                           indf0	equ	0xFEF
 15853                           postinc0	equ	0xFEE
 15854                           plusw0	equ	0xFEB
 15855                           fsr0h	equ	0xFEA
 15856                           fsr0l	equ	0xFE9
 15857                           wreg	equ	0xFE8
 15858                           indf1	equ	0xFE7
 15859                           postinc1	equ	0xFE6
 15860                           postdec1	equ	0xFE5
 15861                           fsr1h	equ	0xFE2
 15862                           fsr1l	equ	0xFE1
 15863                           indf2	equ	0xFDF
 15864                           postinc2	equ	0xFDE
 15865                           postdec2	equ	0xFDD
 15866                           plusw2	equ	0xFDB
 15867                           fsr2h	equ	0xFDA
 15868                           fsr2l	equ	0xFD9
 15869                           status	equ	0xFD8
 15870                           
 15871 ;; *************** function _xtoi *****************
 15872 ;; Defined at:
 15873 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15876 ;;		 -> Terminal@Addr(4), 
 15877 ;; Auto vars:     Size  Location     Type
 15878 ;;  val             2   40[BANK0 ] unsigned int 
 15879 ;;  c               1   42[BANK0 ] unsigned char 
 15880 ;;  sign            1   39[BANK0 ] unsigned char 
 15881 ;; Return value:  Size  Location     Type
 15882 ;;                  2   35[BANK0 ] unsigned int 
 15883 ;; Registers used:
 15884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15885 ;; Tracked objects:
 15886 ;;		On entry : 0/0
 15887 ;;		On exit  : 0/0
 15888 ;;		Unchanged: 0/0
 15889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15890 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15891 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15892 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15893 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15894 ;;Total ram usage:        8 bytes
 15895 ;; Hardware stack levels used:    1
 15896 ;; Hardware stack levels required when called:   13
 15897 ;; This function calls:
 15898 ;;		_isdigit
 15899 ;;		_isspace
 15900 ;;		_isupper
 15901 ;;		_isxdigit
 15902 ;;		_tolower
 15903 ;; This function is called by:
 15904 ;;		_Terminal
 15905 ;; This function uses a non-reentrant model
 15906 ;;
 15907                           
 15908                           	psect	text61
 15909  003410                     __ptext61:
 15910                           	opt stack 0
 15911  003410                     _xtoi:
 15912                           	opt stack 12
 15913                           
 15914                           ;incstack = 0
 15915  003410  0E00               	movlw	0
 15916  003412  0100               	movlb	0	; () banked
 15917  003414  6F87               	movwf	xtoi@sign& (0+255),b
 15918  003416  0E00               	movlw	0
 15919  003418  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15920  00341A  0E00               	movlw	0
 15921  00341C  6F88               	movwf	xtoi@val& (0+255),b
 15922  00341E  D003               	goto	l3305
 15923  003420                     
 15924                           ; BSR set to: 0
 15925  003420  0100               	movlb	0	; () banked
 15926  003422  4B83               	infsnz	xtoi@s& (0+255),f,b
 15927  003424  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15928  003426                     l3305:
 15929                           
 15930                           ; BSR set to: 0
 15931                           
 15932                           ; BSR set to: 0
 15933  003426  C083  FFD9         	movff	xtoi@s,fsr2l
 15934  00342A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15935  00342E  50DF               	movf	indf2,w,c
 15936  003430  EC21  F02F         	call	_isspace
 15937  003434  B0D8               	btfsc	status,0,c
 15938  003436  D7F4               	goto	l3306
 15939  003438  C083  FFD9         	movff	xtoi@s,fsr2l
 15940  00343C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15941  003440  0E2D               	movlw	45
 15942  003442  18DE               	xorwf	postinc2,w,c
 15943  003444  A4D8               	btfss	status,2,c
 15944  003446  D003               	goto	l3308
 15945  003448  0100               	movlb	0	; () banked
 15946  00344A  2B87               	incf	xtoi@sign& (0+255),f,b
 15947  00344C  D009               	goto	L15
 15948  00344E                     l3308:
 15949                           
 15950                           ; BSR set to: 0
 15951  00344E  C083  FFD9         	movff	xtoi@s,fsr2l
 15952  003452  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15953  003456  0E2B               	movlw	43
 15954  003458  18DE               	xorwf	postinc2,w,c
 15955  00345A  A4D8               	btfss	status,2,c
 15956  00345C  D028               	goto	l3311
 15957  00345E  0100               	movlb	0	; () banked
 15958  003460                     L15:
 15959  003460  4B83               	infsnz	xtoi@s& (0+255),f,b
 15960  003462  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15961                           
 15962                           ; BSR set to: 0
 15963                           
 15964                           ; BSR set to: 0
 15965  003464  D024               	goto	l3311
 15966  003466                     
 15967                           ; BSR set to: 0
 15968  003466  0100               	movlb	0	; () banked
 15969  003468  518A               	movf	xtoi@c& (0+255),w,b
 15970  00346A  ECC7  F02F         	call	_isupper
 15971  00346E  A0D8               	btfss	status,0,c
 15972  003470  D006               	goto	l3313
 15973  003472  0100               	movlb	0	; () banked
 15974  003474  518A               	movf	xtoi@c& (0+255),w,b
 15975  003476  EC8B  F030         	call	_tolower
 15976  00347A  0100               	movlb	0	; () banked
 15977  00347C  6F8A               	movwf	xtoi@c& (0+255),b
 15978  00347E                     l3313:
 15979  00347E  0100               	movlb	0	; () banked
 15980  003480  518A               	movf	xtoi@c& (0+255),w,b
 15981  003482  ECE9  F02F         	call	_isdigit
 15982  003486  A0D8               	btfss	status,0,c
 15983  003488  D002               	goto	l3314
 15984  00348A  0E30               	movlw	48
 15985  00348C  D001               	goto	L14
 15986  00348E                     l3314:
 15987                           
 15988                           ; BSR set to: 0
 15989  00348E  0E57               	movlw	87
 15990  003490                     L14:
 15991  003490  0100               	movlb	0	; () banked
 15992  003492  5F8A               	subwf	xtoi@c& (0+255),f,b
 15993                           
 15994                           ; BSR set to: 0
 15995  003494  3B88               	swapf	xtoi@val& (0+255),f,b
 15996  003496  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15997  003498  0EF0               	movlw	240
 15998  00349A  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15999  00349C  5188               	movf	xtoi@val& (0+255),w,b
 16000  00349E  0B0F               	andlw	15
 16001  0034A0  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16002  0034A2  0EF0               	movlw	240
 16003  0034A4  1788               	andwf	xtoi@val& (0+255),f,b
 16004  0034A6  518A               	movf	xtoi@c& (0+255),w,b
 16005  0034A8  2788               	addwf	xtoi@val& (0+255),f,b
 16006  0034AA  0E00               	movlw	0
 16007  0034AC  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16008  0034AE                     l3311:
 16009                           
 16010                           ; BSR set to: 0
 16011  0034AE  C083  FFD9         	movff	xtoi@s,fsr2l
 16012  0034B2  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16013  0034B6  0100               	movlb	0	; () banked
 16014  0034B8  4B83               	infsnz	xtoi@s& (0+255),f,b
 16015  0034BA  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16016  0034BC  50DF               	movf	indf2,w,c
 16017  0034BE  6F8A               	movwf	xtoi@c& (0+255),b
 16018  0034C0  518A               	movf	xtoi@c& (0+255),w,b
 16019  0034C2  EC71  F02D         	call	_isxdigit
 16020  0034C6  B0D8               	btfsc	status,0,c
 16021  0034C8  D7CE               	goto	l3312
 16022  0034CA  0100               	movlb	0	; () banked
 16023  0034CC  5187               	movf	xtoi@sign& (0+255),w,b
 16024  0034CE  B4D8               	btfsc	status,2,c
 16025  0034D0  D00D               	goto	l3317
 16026                           
 16027                           ; BSR set to: 0
 16028  0034D2  C088  F085         	movff	xtoi@val,??_xtoi
 16029  0034D6  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16030  0034DA  1F85               	comf	??_xtoi& (0+255),f,b
 16031  0034DC  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16032  0034DE  4B85               	infsnz	??_xtoi& (0+255),f,b
 16033  0034E0  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16034  0034E2  C085  F083         	movff	??_xtoi,?_xtoi
 16035  0034E6  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16036  0034EA  0012               	return	
 16037  0034EC                     l3317:
 16038                           
 16039                           ; BSR set to: 0
 16040  0034EC  C088  F083         	movff	xtoi@val,?_xtoi
 16041  0034F0  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16042                           
 16043                           ; BSR set to: 0
 16044  0034F4  0012               	return		;funcret
 16045  0034F6                     __end_of_xtoi:
 16046                           	opt stack 0
 16047                           tosu	equ	0xFFF
 16048                           tosh	equ	0xFFE
 16049                           tosl	equ	0xFFD
 16050                           pclath	equ	0xFFA
 16051                           tblptru	equ	0xFF8
 16052                           tblptrh	equ	0xFF7
 16053                           tblptrl	equ	0xFF6
 16054                           tablat	equ	0xFF5
 16055                           prodh	equ	0xFF4
 16056                           prodl	equ	0xFF3
 16057                           intcon	equ	0xFF2
 16058                           intcon2	equ	0xFF1
 16059                           intcon3	equ	0xFF0
 16060                           indf0	equ	0xFEF
 16061                           postinc0	equ	0xFEE
 16062                           plusw0	equ	0xFEB
 16063                           fsr0h	equ	0xFEA
 16064                           fsr0l	equ	0xFE9
 16065                           wreg	equ	0xFE8
 16066                           indf1	equ	0xFE7
 16067                           postinc1	equ	0xFE6
 16068                           postdec1	equ	0xFE5
 16069                           fsr1h	equ	0xFE2
 16070                           fsr1l	equ	0xFE1
 16071                           indf2	equ	0xFDF
 16072                           postinc2	equ	0xFDE
 16073                           postdec2	equ	0xFDD
 16074                           plusw2	equ	0xFDB
 16075                           fsr2h	equ	0xFDA
 16076                           fsr2l	equ	0xFD9
 16077                           status	equ	0xFD8
 16078                           
 16079 ;; *************** function _tolower *****************
 16080 ;; Defined at:
 16081 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16082 ;; Parameters:    Size  Location     Type
 16083 ;;  c               1    wreg     unsigned char 
 16084 ;; Auto vars:     Size  Location     Type
 16085 ;;  c               1   29[BANK0 ] unsigned char 
 16086 ;; Return value:  Size  Location     Type
 16087 ;;                  1    wreg      unsigned char 
 16088 ;; Registers used:
 16089 ;;		wreg, status,2, status,0
 16090 ;; Tracked objects:
 16091 ;;		On entry : 0/0
 16092 ;;		On exit  : 0/0
 16093 ;;		Unchanged: 0/0
 16094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16098 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16099 ;;Total ram usage:        1 bytes
 16100 ;; Hardware stack levels used:    1
 16101 ;; Hardware stack levels required when called:   11
 16102 ;; This function calls:
 16103 ;;		Nothing
 16104 ;; This function is called by:
 16105 ;;		_xtoi
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           	psect	text62
 16110  006116                     __ptext62:
 16111                           	opt stack 0
 16112  006116                     _tolower:
 16113                           	opt stack 13
 16114                           
 16115                           ; BSR set to: 0
 16116                           ;incstack = 0
 16117                           ;tolower@c stored from wreg
 16118  006116  0100               	movlb	0	; () banked
 16119  006118  6F7D               	movwf	tolower@c& (0+255),b
 16120  00611A  0E5B               	movlw	91
 16121  00611C  0100               	movlb	0	; () banked
 16122  00611E  617D               	cpfslt	tolower@c& (0+255),b
 16123  006120  D004               	goto	l3364
 16124                           
 16125                           ; BSR set to: 0
 16126  006122  0E40               	movlw	64
 16127  006124  657D               	cpfsgt	tolower@c& (0+255),b
 16128  006126  D001               	goto	l3364
 16129                           
 16130                           ; BSR set to: 0
 16131  006128  8B7D               	bsf	tolower@c& (0+255),5,b
 16132  00612A                     l3364:
 16133                           
 16134                           ; BSR set to: 0
 16135                           
 16136                           ; BSR set to: 0
 16137  00612A  517D               	movf	tolower@c& (0+255),w,b
 16138  00612C  0012               	return	
 16139  00612E                     __end_of_tolower:
 16140                           	opt stack 0
 16141                           tosu	equ	0xFFF
 16142                           tosh	equ	0xFFE
 16143                           tosl	equ	0xFFD
 16144                           pclath	equ	0xFFA
 16145                           tblptru	equ	0xFF8
 16146                           tblptrh	equ	0xFF7
 16147                           tblptrl	equ	0xFF6
 16148                           tablat	equ	0xFF5
 16149                           prodh	equ	0xFF4
 16150                           prodl	equ	0xFF3
 16151                           intcon	equ	0xFF2
 16152                           intcon2	equ	0xFF1
 16153                           intcon3	equ	0xFF0
 16154                           indf0	equ	0xFEF
 16155                           postinc0	equ	0xFEE
 16156                           plusw0	equ	0xFEB
 16157                           fsr0h	equ	0xFEA
 16158                           fsr0l	equ	0xFE9
 16159                           wreg	equ	0xFE8
 16160                           indf1	equ	0xFE7
 16161                           postinc1	equ	0xFE6
 16162                           postdec1	equ	0xFE5
 16163                           fsr1h	equ	0xFE2
 16164                           fsr1l	equ	0xFE1
 16165                           indf2	equ	0xFDF
 16166                           postinc2	equ	0xFDE
 16167                           postdec2	equ	0xFDD
 16168                           plusw2	equ	0xFDB
 16169                           fsr2h	equ	0xFDA
 16170                           fsr2l	equ	0xFD9
 16171                           status	equ	0xFD8
 16172                           
 16173 ;; *************** function _isxdigit *****************
 16174 ;; Defined at:
 16175 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16176 ;; Parameters:    Size  Location     Type
 16177 ;;  c               1    wreg     unsigned char 
 16178 ;; Auto vars:     Size  Location     Type
 16179 ;;  c               1   34[BANK0 ] unsigned char 
 16180 ;; Return value:  Size  Location     Type
 16181 ;;		None               void
 16182 ;; Registers used:
 16183 ;;		wreg, status,2, status,0, cstack
 16184 ;; Tracked objects:
 16185 ;;		On entry : 0/0
 16186 ;;		On exit  : 0/0
 16187 ;;		Unchanged: 0/0
 16188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16191 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16192 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16193 ;;Total ram usage:        3 bytes
 16194 ;; Hardware stack levels used:    1
 16195 ;; Hardware stack levels required when called:   12
 16196 ;; This function calls:
 16197 ;;		_isdigit
 16198 ;; This function is called by:
 16199 ;;		_xtoi
 16200 ;; This function uses a non-reentrant model
 16201 ;;
 16202                           
 16203                           	psect	text63
 16204  005AE2                     __ptext63:
 16205                           	opt stack 0
 16206  005AE2                     _isxdigit:
 16207                           	opt stack 12
 16208                           
 16209                           ; BSR set to: 0
 16210                           ;incstack = 0
 16211                           ;isxdigit@c stored from wreg
 16212  005AE2  0100               	movlb	0	; () banked
 16213  005AE4  6F82               	movwf	isxdigit@c& (0+255),b
 16214  005AE6  0E01               	movlw	1
 16215  005AE8  0100               	movlb	0	; () banked
 16216  005AEA  6F81               	movwf	_isxdigit$6469& (0+255),b
 16217                           
 16218                           ; BSR set to: 0
 16219  005AEC  0E67               	movlw	103
 16220  005AEE  6182               	cpfslt	isxdigit@c& (0+255),b
 16221  005AF0  D003               	goto	u11370
 16222                           
 16223                           ; BSR set to: 0
 16224  005AF2  0E61               	movlw	97
 16225  005AF4  6182               	cpfslt	isxdigit@c& (0+255),b
 16226  005AF6  D00E               	goto	l3360
 16227  005AF8                     u11370:
 16228                           
 16229                           ; BSR set to: 0
 16230                           
 16231                           ; BSR set to: 0
 16232  005AF8  0E47               	movlw	71
 16233  005AFA  6182               	cpfslt	isxdigit@c& (0+255),b
 16234  005AFC  D003               	goto	u11390
 16235                           
 16236                           ; BSR set to: 0
 16237  005AFE  0E41               	movlw	65
 16238  005B00  6182               	cpfslt	isxdigit@c& (0+255),b
 16239  005B02  D008               	goto	l3360
 16240  005B04                     u11390:
 16241                           
 16242                           ; BSR set to: 0
 16243                           
 16244                           ; BSR set to: 0
 16245  005B04  5182               	movf	isxdigit@c& (0+255),w,b
 16246  005B06  ECE9  F02F         	call	_isdigit
 16247  005B0A  B0D8               	btfsc	status,0,c
 16248  005B0C  D003               	goto	l3360
 16249  005B0E  0E00               	movlw	0
 16250  005B10  0100               	movlb	0	; () banked
 16251  005B12  6F81               	movwf	_isxdigit$6469& (0+255),b
 16252  005B14                     l3360:
 16253                           
 16254                           ; BSR set to: 0
 16255  005B14  C081  F080         	movff	_isxdigit$6469,??_isxdigit
 16256  005B18  0100               	movlb	0	; () banked
 16257  005B1A  3180               	rrcf	??_isxdigit& (0+255),w,b
 16258  005B1C  0012               	return	
 16259  005B1E                     __end_of_isxdigit:
 16260                           	opt stack 0
 16261                           tosu	equ	0xFFF
 16262                           tosh	equ	0xFFE
 16263                           tosl	equ	0xFFD
 16264                           pclath	equ	0xFFA
 16265                           tblptru	equ	0xFF8
 16266                           tblptrh	equ	0xFF7
 16267                           tblptrl	equ	0xFF6
 16268                           tablat	equ	0xFF5
 16269                           prodh	equ	0xFF4
 16270                           prodl	equ	0xFF3
 16271                           intcon	equ	0xFF2
 16272                           intcon2	equ	0xFF1
 16273                           intcon3	equ	0xFF0
 16274                           indf0	equ	0xFEF
 16275                           postinc0	equ	0xFEE
 16276                           plusw0	equ	0xFEB
 16277                           fsr0h	equ	0xFEA
 16278                           fsr0l	equ	0xFE9
 16279                           wreg	equ	0xFE8
 16280                           indf1	equ	0xFE7
 16281                           postinc1	equ	0xFE6
 16282                           postdec1	equ	0xFE5
 16283                           fsr1h	equ	0xFE2
 16284                           fsr1l	equ	0xFE1
 16285                           indf2	equ	0xFDF
 16286                           postinc2	equ	0xFDE
 16287                           postdec2	equ	0xFDD
 16288                           plusw2	equ	0xFDB
 16289                           fsr2h	equ	0xFDA
 16290                           fsr2l	equ	0xFD9
 16291                           status	equ	0xFD8
 16292                           
 16293 ;; *************** function _strtol *****************
 16294 ;; Defined at:
 16295 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16296 ;; Parameters:    Size  Location     Type
 16297 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16298 ;;		 -> Terminal@Payload(80), 
 16299 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16300 ;;		 -> NULL(0), 
 16301 ;;  base            2   45[BANK0 ] int 
 16302 ;; Auto vars:     Size  Location     Type
 16303 ;;  a               4   52[BANK0 ] long 
 16304 ;;  c               1   56[BANK0 ] unsigned char 
 16305 ;;  sign            1   51[BANK0 ] unsigned char 
 16306 ;; Return value:  Size  Location     Type
 16307 ;;                  4   41[BANK0 ] long 
 16308 ;; Registers used:
 16309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16310 ;; Tracked objects:
 16311 ;;		On entry : 0/0
 16312 ;;		On exit  : 0/0
 16313 ;;		Unchanged: 0/0
 16314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16315 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16316 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16317 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16318 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16319 ;;Total ram usage:       16 bytes
 16320 ;; Hardware stack levels used:    1
 16321 ;; Hardware stack levels required when called:   13
 16322 ;; This function calls:
 16323 ;;		___lmul
 16324 ;;		_isalpha
 16325 ;;		_isdigit
 16326 ;;		_isspace
 16327 ;;		_toupper
 16328 ;; This function is called by:
 16329 ;;		_Terminal
 16330 ;; This function uses a non-reentrant model
 16331 ;;
 16332                           
 16333                           	psect	text64
 16334  00181C                     __ptext64:
 16335                           	opt stack 0
 16336  00181C                     _strtol:
 16337                           	opt stack 12
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;incstack = 0
 16341  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16342  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16343  001824  50DF               	movf	indf2,w,c
 16344  001826  0100               	movlb	0	; () banked
 16345  001828  6F98               	movwf	strtol@c& (0+255),b
 16346                           
 16347                           ; BSR set to: 0
 16348  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16349  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16350                           
 16351                           ; BSR set to: 0
 16352  00182E  5198               	movf	strtol@c& (0+255),w,b
 16353  001830  EC21  F02F         	call	_isspace
 16354  001834  B0D8               	btfsc	status,0,c
 16355  001836  D7F2               	goto	_strtol
 16356  001838  0E00               	movlw	0
 16357  00183A  0100               	movlb	0	; () banked
 16358  00183C  6F94               	movwf	strtol@a& (0+255),b
 16359  00183E  0E00               	movlw	0
 16360  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16361  001842  0E00               	movlw	0
 16362  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16363  001846  0E00               	movlw	0
 16364  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16365  00184A  0E00               	movlw	0
 16366  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16367                           
 16368                           ; BSR set to: 0
 16369  00184E  0E2D               	movlw	45
 16370  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16371  001852  A4D8               	btfss	status,2,c
 16372  001854  D003               	goto	l3267
 16373                           
 16374                           ; BSR set to: 0
 16375  001856  0E01               	movlw	1
 16376  001858  6F93               	movwf	strtol@sign& (0+255),b
 16377  00185A  D004               	goto	u11870
 16378  00185C                     l3267:
 16379                           
 16380                           ; BSR set to: 0
 16381                           
 16382                           ; BSR set to: 0
 16383  00185C  0E2B               	movlw	43
 16384  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16385  001860  A4D8               	btfss	status,2,c
 16386  001862  D008               	goto	l3269
 16387  001864                     u11870:
 16388                           
 16389                           ; BSR set to: 0
 16390  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16391  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16392  00186C  50DF               	movf	indf2,w,c
 16393  00186E  6F98               	movwf	strtol@c& (0+255),b
 16394                           
 16395                           ; BSR set to: 0
 16396  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16397  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16398  001874                     l3269:
 16399                           
 16400                           ; BSR set to: 0
 16401                           
 16402                           ; BSR set to: 0
 16403                           
 16404                           ; BSR set to: 0
 16405  001874  0E30               	movlw	48
 16406  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16407  001878  A4D8               	btfss	status,2,c
 16408  00187A  D02E               	goto	l3277
 16409                           
 16410                           ; BSR set to: 0
 16411  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16412  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16413  001884  50DF               	movf	indf2,w,c
 16414  001886  6F98               	movwf	strtol@c& (0+255),b
 16415                           
 16416                           ; BSR set to: 0
 16417  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16418  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16419                           
 16420                           ; BSR set to: 0
 16421  00188C  518D               	movf	strtol@base& (0+255),w,b
 16422  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16423  001890  B4D8               	btfsc	status,2,c
 16424  001892  D005               	goto	u11900
 16425                           
 16426                           ; BSR set to: 0
 16427  001894  0E10               	movlw	16
 16428  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16429  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16430  00189A  A4D8               	btfss	status,2,c
 16431  00189C  D015               	goto	l3271
 16432  00189E                     u11900:
 16433                           
 16434                           ; BSR set to: 0
 16435                           
 16436                           ; BSR set to: 0
 16437  00189E  0E78               	movlw	120
 16438  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16439  0018A2  B4D8               	btfsc	status,2,c
 16440  0018A4  D004               	goto	u11920
 16441                           
 16442                           ; BSR set to: 0
 16443  0018A6  0E58               	movlw	88
 16444  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16445  0018AA  A4D8               	btfss	status,2,c
 16446  0018AC  D00D               	goto	l3271
 16447  0018AE                     u11920:
 16448                           
 16449                           ; BSR set to: 0
 16450                           
 16451                           ; BSR set to: 0
 16452  0018AE  0E00               	movlw	0
 16453  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16454  0018B2  0E10               	movlw	16
 16455  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16456                           
 16457                           ; BSR set to: 0
 16458  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16459  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16460  0018BE  50DF               	movf	indf2,w,c
 16461  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16462                           
 16463                           ; BSR set to: 0
 16464  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16465  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16466  0018C6  D008               	goto	l3277
 16467  0018C8                     l3271:
 16468                           
 16469                           ; BSR set to: 0
 16470                           
 16471                           ; BSR set to: 0
 16472  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16473  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16474  0018CC  A4D8               	btfss	status,2,c
 16475  0018CE  D004               	goto	l3277
 16476                           
 16477                           ; BSR set to: 0
 16478  0018D0  0E00               	movlw	0
 16479  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16480  0018D4  0E08               	movlw	8
 16481  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16482  0018D8                     l3277:
 16483                           
 16484                           ; BSR set to: 0
 16485                           
 16486                           ; BSR set to: 0
 16487                           
 16488                           ; BSR set to: 0
 16489                           
 16490                           ; BSR set to: 0
 16491  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16492  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16493  0018DC  A4D8               	btfss	status,2,c
 16494  0018DE  D004               	goto	l3278
 16495                           
 16496                           ; BSR set to: 0
 16497  0018E0  0E00               	movlw	0
 16498  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16499  0018E4  0E0A               	movlw	10
 16500  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16501  0018E8                     l3278:
 16502                           
 16503                           ; BSR set to: 0
 16504                           
 16505                           ; BSR set to: 0
 16506                           
 16507                           ; BSR set to: 0
 16508  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16509  0018EA  EC98  F02E         	call	_isalpha
 16510  0018EE  A0D8               	btfss	status,0,c
 16511  0018F0  D008               	goto	l3280
 16512  0018F2  0100               	movlb	0	; () banked
 16513  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16514  0018F6  EC97  F030         	call	_toupper
 16515  0018FA  0FC9               	addlw	201
 16516  0018FC  0100               	movlb	0	; () banked
 16517  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16518  001900  D009               	goto	l3283
 16519  001902                     l3280:
 16520                           
 16521                           ; BSR set to: 0
 16522  001902  0100               	movlb	0	; () banked
 16523  001904  5198               	movf	strtol@c& (0+255),w,b
 16524  001906  ECE9  F02F         	call	_isdigit
 16525  00190A  A0D8               	btfss	status,0,c
 16526  00190C  D039               	goto	l3284
 16527  00190E  0E30               	movlw	48
 16528  001910  0100               	movlb	0	; () banked
 16529  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16530  001914                     l3283:
 16531                           
 16532                           ; BSR set to: 0
 16533                           
 16534                           ; BSR set to: 0
 16535                           
 16536                           ; BSR set to: 0
 16537  001914  5198               	movf	strtol@c& (0+255),w,b
 16538  001916  6F8F               	movwf	??_strtol& (0+255),b
 16539  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16540  00191A  518D               	movf	strtol@base& (0+255),w,b
 16541  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16542  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16543  001920  0A80               	xorlw	128
 16544  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16545  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16546  001926  0A80               	xorlw	128
 16547  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16548  00192A  B0D8               	btfsc	status,0,c
 16549  00192C  D029               	goto	l3284
 16550                           
 16551                           ; BSR set to: 0
 16552                           
 16553                           ; BSR set to: 0
 16554                           
 16555                           ; BSR set to: 0
 16556  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16557  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16558  001936  0E00               	movlw	0
 16559  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16560  00193A  0EFF               	movlw	-1
 16561  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16562  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16563  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16564  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16565  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16566  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16567  001950  EC34  F029         	call	___lmul	;wreg free
 16568  001954  0100               	movlb	0	; () banked
 16569  001956  5198               	movf	strtol@c& (0+255),w,b
 16570  001958  257D               	addwf	?___lmul& (0+255),w,b
 16571  00195A  6F94               	movwf	strtol@a& (0+255),b
 16572  00195C  0E00               	movlw	0
 16573  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16574  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16575  001962  0E00               	movlw	0
 16576  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16577  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16578  001968  0E00               	movlw	0
 16579  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16580  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16581                           
 16582                           ; BSR set to: 0
 16583  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16584  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16585  001976  50DF               	movf	indf2,w,c
 16586  001978  6F98               	movwf	strtol@c& (0+255),b
 16587                           
 16588                           ; BSR set to: 0
 16589  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16590  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16591  00197E  D7B4               	goto	l3278
 16592  001980                     l3284:
 16593                           
 16594                           ; BSR set to: 0
 16595  001980  0100               	movlb	0	; () banked
 16596  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16597  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16598  001986  B4D8               	btfsc	status,2,c
 16599  001988  D00E               	goto	l3286
 16600                           
 16601                           ; BSR set to: 0
 16602  00198A  0EFF               	movlw	255
 16603  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16604  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16605  001990  0EFF               	movlw	255
 16606  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16607  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16608  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16609  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16610  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16611  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16612  0019A6                     l3286:
 16613                           
 16614                           ; BSR set to: 0
 16615                           
 16616                           ; BSR set to: 0
 16617  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16618  0019A8  B4D8               	btfsc	status,2,c
 16619  0019AA  D01A               	goto	l3287
 16620                           
 16621                           ; BSR set to: 0
 16622  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16623  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16624  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16625  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16626  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16627  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16628  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16629  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16630  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16631  0019C6  0E00               	movlw	0
 16632  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16633  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16634  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16635  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16636  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16637  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16638  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16639                           
 16640                           ; BSR set to: 0
 16641  0019DE  0012               	return	
 16642  0019E0                     l3287:
 16643                           
 16644                           ; BSR set to: 0
 16645  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16646  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16647  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16648  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16649                           
 16650                           ; BSR set to: 0
 16651  0019F0  0012               	return		;funcret
 16652  0019F2                     __end_of_strtol:
 16653                           	opt stack 0
 16654                           tosu	equ	0xFFF
 16655                           tosh	equ	0xFFE
 16656                           tosl	equ	0xFFD
 16657                           pclath	equ	0xFFA
 16658                           tblptru	equ	0xFF8
 16659                           tblptrh	equ	0xFF7
 16660                           tblptrl	equ	0xFF6
 16661                           tablat	equ	0xFF5
 16662                           prodh	equ	0xFF4
 16663                           prodl	equ	0xFF3
 16664                           intcon	equ	0xFF2
 16665                           intcon2	equ	0xFF1
 16666                           intcon3	equ	0xFF0
 16667                           indf0	equ	0xFEF
 16668                           postinc0	equ	0xFEE
 16669                           plusw0	equ	0xFEB
 16670                           fsr0h	equ	0xFEA
 16671                           fsr0l	equ	0xFE9
 16672                           wreg	equ	0xFE8
 16673                           indf1	equ	0xFE7
 16674                           postinc1	equ	0xFE6
 16675                           postdec1	equ	0xFE5
 16676                           fsr1h	equ	0xFE2
 16677                           fsr1l	equ	0xFE1
 16678                           indf2	equ	0xFDF
 16679                           postinc2	equ	0xFDE
 16680                           postdec2	equ	0xFDD
 16681                           plusw2	equ	0xFDB
 16682                           fsr2h	equ	0xFDA
 16683                           fsr2l	equ	0xFD9
 16684                           status	equ	0xFD8
 16685                           
 16686 ;; *************** function _toupper *****************
 16687 ;; Defined at:
 16688 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16689 ;; Parameters:    Size  Location     Type
 16690 ;;  c               1    wreg     unsigned char 
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;  c               1   29[BANK0 ] unsigned char 
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  1    wreg      unsigned char 
 16695 ;; Registers used:
 16696 ;;		wreg, status,2, status,0
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16705 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16706 ;;Total ram usage:        1 bytes
 16707 ;; Hardware stack levels used:    1
 16708 ;; Hardware stack levels required when called:   11
 16709 ;; This function calls:
 16710 ;;		Nothing
 16711 ;; This function is called by:
 16712 ;;		_strtol
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716                           	psect	text65
 16717  00612E                     __ptext65:
 16718                           	opt stack 0
 16719  00612E                     _toupper:
 16720                           	opt stack 13
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;incstack = 0
 16724                           ;toupper@c stored from wreg
 16725  00612E  0100               	movlb	0	; () banked
 16726  006130  6F7D               	movwf	toupper@c& (0+255),b
 16727  006132  0E7B               	movlw	123
 16728  006134  0100               	movlb	0	; () banked
 16729  006136  617D               	cpfslt	toupper@c& (0+255),b
 16730  006138  D004               	goto	l3291
 16731                           
 16732                           ; BSR set to: 0
 16733  00613A  0E60               	movlw	96
 16734  00613C  657D               	cpfsgt	toupper@c& (0+255),b
 16735  00613E  D001               	goto	l3291
 16736                           
 16737                           ; BSR set to: 0
 16738  006140  9B7D               	bcf	toupper@c& (0+255),5,b
 16739  006142                     l3291:
 16740                           
 16741                           ; BSR set to: 0
 16742                           
 16743                           ; BSR set to: 0
 16744  006142  517D               	movf	toupper@c& (0+255),w,b
 16745  006144  0012               	return	
 16746  006146                     __end_of_toupper:
 16747                           	opt stack 0
 16748                           tosu	equ	0xFFF
 16749                           tosh	equ	0xFFE
 16750                           tosl	equ	0xFFD
 16751                           pclath	equ	0xFFA
 16752                           tblptru	equ	0xFF8
 16753                           tblptrh	equ	0xFF7
 16754                           tblptrl	equ	0xFF6
 16755                           tablat	equ	0xFF5
 16756                           prodh	equ	0xFF4
 16757                           prodl	equ	0xFF3
 16758                           intcon	equ	0xFF2
 16759                           intcon2	equ	0xFF1
 16760                           intcon3	equ	0xFF0
 16761                           indf0	equ	0xFEF
 16762                           postinc0	equ	0xFEE
 16763                           plusw0	equ	0xFEB
 16764                           fsr0h	equ	0xFEA
 16765                           fsr0l	equ	0xFE9
 16766                           wreg	equ	0xFE8
 16767                           indf1	equ	0xFE7
 16768                           postinc1	equ	0xFE6
 16769                           postdec1	equ	0xFE5
 16770                           fsr1h	equ	0xFE2
 16771                           fsr1l	equ	0xFE1
 16772                           indf2	equ	0xFDF
 16773                           postinc2	equ	0xFDE
 16774                           postdec2	equ	0xFDD
 16775                           plusw2	equ	0xFDB
 16776                           fsr2h	equ	0xFDA
 16777                           fsr2l	equ	0xFD9
 16778                           status	equ	0xFD8
 16779                           
 16780 ;; *************** function _isspace *****************
 16781 ;; Defined at:
 16782 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16783 ;; Parameters:    Size  Location     Type
 16784 ;;  c               1    wreg     unsigned char 
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;  c               1   31[BANK0 ] unsigned char 
 16787 ;; Return value:  Size  Location     Type
 16788 ;;		None               void
 16789 ;; Registers used:
 16790 ;;		wreg, status,2, status,0
 16791 ;; Tracked objects:
 16792 ;;		On entry : 0/0
 16793 ;;		On exit  : 0/0
 16794 ;;		Unchanged: 0/0
 16795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16797 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16799 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16800 ;;Total ram usage:        3 bytes
 16801 ;; Hardware stack levels used:    1
 16802 ;; Hardware stack levels required when called:   11
 16803 ;; This function calls:
 16804 ;;		Nothing
 16805 ;; This function is called by:
 16806 ;;		_strtol
 16807 ;;		_xtoi
 16808 ;; This function uses a non-reentrant model
 16809 ;;
 16810                           
 16811                           	psect	text66
 16812  005E42                     __ptext66:
 16813                           	opt stack 0
 16814  005E42                     _isspace:
 16815                           	opt stack 13
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;incstack = 0
 16819                           ;isspace@c stored from wreg
 16820  005E42  0100               	movlb	0	; () banked
 16821  005E44  6F7F               	movwf	isspace@c& (0+255),b
 16822  005E46  0E01               	movlw	1
 16823  005E48  0100               	movlb	0	; () banked
 16824  005E4A  6F7E               	movwf	_isspace$6462& (0+255),b
 16825                           
 16826                           ; BSR set to: 0
 16827  005E4C  0E20               	movlw	32
 16828  005E4E  197F               	xorwf	isspace@c& (0+255),w,b
 16829  005E50  B4D8               	btfsc	status,2,c
 16830  005E52  D008               	goto	l3348
 16831                           
 16832                           ; BSR set to: 0
 16833  005E54  0E0E               	movlw	14
 16834  005E56  617F               	cpfslt	isspace@c& (0+255),b
 16835  005E58  D003               	goto	u11280
 16836                           
 16837                           ; BSR set to: 0
 16838  005E5A  0E09               	movlw	9
 16839  005E5C  617F               	cpfslt	isspace@c& (0+255),b
 16840  005E5E  D002               	goto	l3348
 16841  005E60                     u11280:
 16842                           
 16843                           ; BSR set to: 0
 16844                           
 16845                           ; BSR set to: 0
 16846  005E60  0E00               	movlw	0
 16847  005E62  6F7E               	movwf	_isspace$6462& (0+255),b
 16848  005E64                     l3348:
 16849                           
 16850                           ; BSR set to: 0
 16851                           
 16852                           ; BSR set to: 0
 16853  005E64  C07E  F07D         	movff	_isspace$6462,??_isspace
 16854  005E68  317D               	rrcf	??_isspace& (0+255),w,b
 16855  005E6A  0012               	return	
 16856  005E6C                     __end_of_isspace:
 16857                           	opt stack 0
 16858                           tosu	equ	0xFFF
 16859                           tosh	equ	0xFFE
 16860                           tosl	equ	0xFFD
 16861                           pclath	equ	0xFFA
 16862                           tblptru	equ	0xFF8
 16863                           tblptrh	equ	0xFF7
 16864                           tblptrl	equ	0xFF6
 16865                           tablat	equ	0xFF5
 16866                           prodh	equ	0xFF4
 16867                           prodl	equ	0xFF3
 16868                           intcon	equ	0xFF2
 16869                           intcon2	equ	0xFF1
 16870                           intcon3	equ	0xFF0
 16871                           indf0	equ	0xFEF
 16872                           postinc0	equ	0xFEE
 16873                           plusw0	equ	0xFEB
 16874                           fsr0h	equ	0xFEA
 16875                           fsr0l	equ	0xFE9
 16876                           wreg	equ	0xFE8
 16877                           indf1	equ	0xFE7
 16878                           postinc1	equ	0xFE6
 16879                           postdec1	equ	0xFE5
 16880                           fsr1h	equ	0xFE2
 16881                           fsr1l	equ	0xFE1
 16882                           indf2	equ	0xFDF
 16883                           postinc2	equ	0xFDE
 16884                           postdec2	equ	0xFDD
 16885                           plusw2	equ	0xFDB
 16886                           fsr2h	equ	0xFDA
 16887                           fsr2l	equ	0xFD9
 16888                           status	equ	0xFD8
 16889                           
 16890 ;; *************** function _isalpha *****************
 16891 ;; Defined at:
 16892 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16893 ;; Parameters:    Size  Location     Type
 16894 ;;  c               1    wreg     unsigned char 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;  c               1   34[BANK0 ] unsigned char 
 16897 ;; Return value:  Size  Location     Type
 16898 ;;		None               void
 16899 ;; Registers used:
 16900 ;;		wreg, status,2, status,0, cstack
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16909 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16910 ;;Total ram usage:        3 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; Hardware stack levels required when called:   12
 16913 ;; This function calls:
 16914 ;;		_isupper
 16915 ;; This function is called by:
 16916 ;;		_strtol
 16917 ;; This function uses a non-reentrant model
 16918 ;;
 16919                           
 16920                           	psect	text67
 16921  005D30                     __ptext67:
 16922                           	opt stack 0
 16923  005D30                     _isalpha:
 16924                           	opt stack 12
 16925                           
 16926                           ; BSR set to: 0
 16927                           ;incstack = 0
 16928                           ;isalpha@c stored from wreg
 16929  005D30  0100               	movlb	0	; () banked
 16930  005D32  6F82               	movwf	isalpha@c& (0+255),b
 16931  005D34  0E01               	movlw	1
 16932  005D36  0100               	movlb	0	; () banked
 16933  005D38  6F81               	movwf	_isalpha$6459& (0+255),b
 16934                           
 16935                           ; BSR set to: 0
 16936  005D3A  0E7B               	movlw	123
 16937  005D3C  6182               	cpfslt	isalpha@c& (0+255),b
 16938  005D3E  D003               	goto	u11300
 16939                           
 16940                           ; BSR set to: 0
 16941  005D40  0E61               	movlw	97
 16942  005D42  6182               	cpfslt	isalpha@c& (0+255),b
 16943  005D44  D008               	goto	l3343
 16944  005D46                     u11300:
 16945                           
 16946                           ; BSR set to: 0
 16947                           
 16948                           ; BSR set to: 0
 16949  005D46  5182               	movf	isalpha@c& (0+255),w,b
 16950  005D48  ECC7  F02F         	call	_isupper
 16951  005D4C  B0D8               	btfsc	status,0,c
 16952  005D4E  D003               	goto	l3343
 16953  005D50  0E00               	movlw	0
 16954  005D52  0100               	movlb	0	; () banked
 16955  005D54  6F81               	movwf	_isalpha$6459& (0+255),b
 16956  005D56                     l3343:
 16957                           
 16958                           ; BSR set to: 0
 16959  005D56  C081  F080         	movff	_isalpha$6459,??_isalpha
 16960  005D5A  0100               	movlb	0	; () banked
 16961  005D5C  3180               	rrcf	??_isalpha& (0+255),w,b
 16962  005D5E  0012               	return	
 16963  005D60                     __end_of_isalpha:
 16964                           	opt stack 0
 16965                           tosu	equ	0xFFF
 16966                           tosh	equ	0xFFE
 16967                           tosl	equ	0xFFD
 16968                           pclath	equ	0xFFA
 16969                           tblptru	equ	0xFF8
 16970                           tblptrh	equ	0xFF7
 16971                           tblptrl	equ	0xFF6
 16972                           tablat	equ	0xFF5
 16973                           prodh	equ	0xFF4
 16974                           prodl	equ	0xFF3
 16975                           intcon	equ	0xFF2
 16976                           intcon2	equ	0xFF1
 16977                           intcon3	equ	0xFF0
 16978                           indf0	equ	0xFEF
 16979                           postinc0	equ	0xFEE
 16980                           plusw0	equ	0xFEB
 16981                           fsr0h	equ	0xFEA
 16982                           fsr0l	equ	0xFE9
 16983                           wreg	equ	0xFE8
 16984                           indf1	equ	0xFE7
 16985                           postinc1	equ	0xFE6
 16986                           postdec1	equ	0xFE5
 16987                           fsr1h	equ	0xFE2
 16988                           fsr1l	equ	0xFE1
 16989                           indf2	equ	0xFDF
 16990                           postinc2	equ	0xFDE
 16991                           postdec2	equ	0xFDD
 16992                           plusw2	equ	0xFDB
 16993                           fsr2h	equ	0xFDA
 16994                           fsr2l	equ	0xFD9
 16995                           status	equ	0xFD8
 16996                           
 16997 ;; *************** function _isupper *****************
 16998 ;; Defined at:
 16999 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17000 ;; Parameters:    Size  Location     Type
 17001 ;;  c               1    wreg     unsigned char 
 17002 ;; Auto vars:     Size  Location     Type
 17003 ;;  c               1   31[BANK0 ] unsigned char 
 17004 ;; Return value:  Size  Location     Type
 17005 ;;		None               void
 17006 ;; Registers used:
 17007 ;;		wreg, status,2, status,0
 17008 ;; Tracked objects:
 17009 ;;		On entry : 0/0
 17010 ;;		On exit  : 0/0
 17011 ;;		Unchanged: 0/0
 17012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17014 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17016 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17017 ;;Total ram usage:        3 bytes
 17018 ;; Hardware stack levels used:    1
 17019 ;; Hardware stack levels required when called:   11
 17020 ;; This function calls:
 17021 ;;		Nothing
 17022 ;; This function is called by:
 17023 ;;		_xtoi
 17024 ;;		_isalpha
 17025 ;; This function uses a non-reentrant model
 17026 ;;
 17027                           
 17028                           	psect	text68
 17029  005F8E                     __ptext68:
 17030                           	opt stack 0
 17031  005F8E                     _isupper:
 17032                           	opt stack 13
 17033                           
 17034                           ; BSR set to: 0
 17035                           ;incstack = 0
 17036                           ;isupper@c stored from wreg
 17037  005F8E  0100               	movlb	0	; () banked
 17038  005F90  6F7F               	movwf	isupper@c& (0+255),b
 17039  005F92  0E00               	movlw	0
 17040  005F94  0100               	movlb	0	; () banked
 17041  005F96  6F7E               	movwf	_isupper$6465& (0+255),b
 17042                           
 17043                           ; BSR set to: 0
 17044  005F98  0E5B               	movlw	91
 17045  005F9A  617F               	cpfslt	isupper@c& (0+255),b
 17046  005F9C  D005               	goto	l3353
 17047                           
 17048                           ; BSR set to: 0
 17049  005F9E  0E40               	movlw	64
 17050  005FA0  657F               	cpfsgt	isupper@c& (0+255),b
 17051  005FA2  D002               	goto	l3353
 17052                           
 17053                           ; BSR set to: 0
 17054  005FA4  0E01               	movlw	1
 17055  005FA6  6F7E               	movwf	_isupper$6465& (0+255),b
 17056  005FA8                     l3353:
 17057                           
 17058                           ; BSR set to: 0
 17059                           
 17060                           ; BSR set to: 0
 17061  005FA8  C07E  F07D         	movff	_isupper$6465,??_isupper
 17062  005FAC  317D               	rrcf	??_isupper& (0+255),w,b
 17063  005FAE  0012               	return	
 17064  005FB0                     __end_of_isupper:
 17065                           	opt stack 0
 17066                           tosu	equ	0xFFF
 17067                           tosh	equ	0xFFE
 17068                           tosl	equ	0xFFD
 17069                           pclath	equ	0xFFA
 17070                           tblptru	equ	0xFF8
 17071                           tblptrh	equ	0xFF7
 17072                           tblptrl	equ	0xFF6
 17073                           tablat	equ	0xFF5
 17074                           prodh	equ	0xFF4
 17075                           prodl	equ	0xFF3
 17076                           intcon	equ	0xFF2
 17077                           intcon2	equ	0xFF1
 17078                           intcon3	equ	0xFF0
 17079                           indf0	equ	0xFEF
 17080                           postinc0	equ	0xFEE
 17081                           plusw0	equ	0xFEB
 17082                           fsr0h	equ	0xFEA
 17083                           fsr0l	equ	0xFE9
 17084                           wreg	equ	0xFE8
 17085                           indf1	equ	0xFE7
 17086                           postinc1	equ	0xFE6
 17087                           postdec1	equ	0xFE5
 17088                           fsr1h	equ	0xFE2
 17089                           fsr1l	equ	0xFE1
 17090                           indf2	equ	0xFDF
 17091                           postinc2	equ	0xFDE
 17092                           postdec2	equ	0xFDD
 17093                           plusw2	equ	0xFDB
 17094                           fsr2h	equ	0xFDA
 17095                           fsr2l	equ	0xFD9
 17096                           status	equ	0xFD8
 17097                           
 17098 ;; *************** function _strcpy *****************
 17099 ;; Defined at:
 17100 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17101 ;; Parameters:    Size  Location     Type
 17102 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17103 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17104 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17105 ;;		 -> STR_23(20), STR_21(42), 
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17108 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17109 ;; Return value:  Size  Location     Type
 17110 ;;                  2   29[BANK0 ] PTR unsigned char 
 17111 ;; Registers used:
 17112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17113 ;; Tracked objects:
 17114 ;;		On entry : 0/0
 17115 ;;		On exit  : 0/0
 17116 ;;		Unchanged: 0/0
 17117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17118 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17121 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17122 ;;Total ram usage:        6 bytes
 17123 ;; Hardware stack levels used:    1
 17124 ;; Hardware stack levels required when called:   11
 17125 ;; This function calls:
 17126 ;;		Nothing
 17127 ;; This function is called by:
 17128 ;;		_Terminal
 17129 ;;		_Term_MainSm
 17130 ;; This function uses a non-reentrant model
 17131 ;;
 17132                           
 17133                           	psect	text69
 17134  005C9E                     __ptext69:
 17135                           	opt stack 0
 17136  005C9E                     _strcpy:
 17137                           	opt stack 15
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;incstack = 0
 17141  005C9E  C07D  F081         	movff	strcpy@to,strcpy@cp
 17142  005CA2  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17143  005CA6  D005               	goto	l3245
 17144  005CA8  0100               	movlb	0	; () banked
 17145  005CAA  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17146  005CAC  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17147  005CAE  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17148  005CB0  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17149  005CB2                     l3245:
 17150                           
 17151                           ; BSR set to: 0
 17152  005CB2  C07F  FFF6         	movff	strcpy@from,tblptrl
 17153  005CB6  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17154  005CBA                     	if	0	;tblptru may be non-zero
 17155  005CBA                     	endif
 17156  005CBA                     	if	0	;tblptru may be non-zero
 17157  005CBA                     	endif
 17158  005CBA  C081  FFD9         	movff	strcpy@cp,fsr2l
 17159  005CBE  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17160  005CC2  0008               	tblrd		*
 17161  005CC4  CFF5 FFDF          	movff	tablat,indf2
 17162  005CC8  50DF               	movf	indf2,w,c
 17163  005CCA  B4D8               	btfsc	status,2,c
 17164  005CCC  0012               	return	
 17165  005CCE  D7EC               	goto	l3246
 17166  005CD0                     __end_of_strcpy:
 17167                           	opt stack 0
 17168                           tosu	equ	0xFFF
 17169                           tosh	equ	0xFFE
 17170                           tosl	equ	0xFFD
 17171                           pclath	equ	0xFFA
 17172                           tblptru	equ	0xFF8
 17173                           tblptrh	equ	0xFF7
 17174                           tblptrl	equ	0xFF6
 17175                           tablat	equ	0xFF5
 17176                           prodh	equ	0xFF4
 17177                           prodl	equ	0xFF3
 17178                           intcon	equ	0xFF2
 17179                           intcon2	equ	0xFF1
 17180                           intcon3	equ	0xFF0
 17181                           indf0	equ	0xFEF
 17182                           postinc0	equ	0xFEE
 17183                           plusw0	equ	0xFEB
 17184                           fsr0h	equ	0xFEA
 17185                           fsr0l	equ	0xFE9
 17186                           wreg	equ	0xFE8
 17187                           indf1	equ	0xFE7
 17188                           postinc1	equ	0xFE6
 17189                           postdec1	equ	0xFE5
 17190                           fsr1h	equ	0xFE2
 17191                           fsr1l	equ	0xFE1
 17192                           indf2	equ	0xFDF
 17193                           postinc2	equ	0xFDE
 17194                           postdec2	equ	0xFDD
 17195                           plusw2	equ	0xFDB
 17196                           fsr2h	equ	0xFDA
 17197                           fsr2l	equ	0xFD9
 17198                           status	equ	0xFD8
 17199                           
 17200 ;; *************** function _putUSBUSART *****************
 17201 ;; Defined at:
 17202 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17203 ;; Parameters:    Size  Location     Type
 17204 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17205 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17206 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17207 ;;		 -> RxBuffer(400), 
 17208 ;;  length          1   37[BANK0 ] unsigned char 
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;		None
 17211 ;; Return value:  Size  Location     Type
 17212 ;;                  1    wreg      void 
 17213 ;; Registers used:
 17214 ;;		wreg, status,2, status,0
 17215 ;; Tracked objects:
 17216 ;;		On entry : 0/0
 17217 ;;		On exit  : 0/0
 17218 ;;		Unchanged: 0/0
 17219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17220 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17223 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17224 ;;Total ram usage:        3 bytes
 17225 ;; Hardware stack levels used:    1
 17226 ;; Hardware stack levels required when called:   11
 17227 ;; This function calls:
 17228 ;;		Nothing
 17229 ;; This function is called by:
 17230 ;;		_Terminal
 17231 ;;		_Term_MainSm
 17232 ;;		_GsmGprsTerminal
 17233 ;; This function uses a non-reentrant model
 17234 ;;
 17235                           
 17236                           	psect	text70
 17237  005FB0                     __ptext70:
 17238                           	opt stack 0
 17239  005FB0                     _putUSBUSART:
 17240                           	opt stack 15
 17241                           
 17242                           ;usb_device_cdc.c: 584: ;
 17243                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17244                           
 17245                           ;incstack = 0
 17246  005FB0  0100               	movlb	0	; () banked
 17247  005FB2  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17248  005FB4  A4D8               	btfss	status,2,c
 17249  005FB6  0012               	return	
 17250                           
 17251                           ; BSR set to: 0
 17252                           ;usb_device_cdc.c: 586: {
 17253                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17254  005FB8  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17255  005FBC  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17256                           
 17257                           ; BSR set to: 0
 17258  005FC0  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17259                           
 17260                           ; BSR set to: 0
 17261  005FC4  0E01               	movlw	1
 17262  005FC6  0101               	movlb	1	; () banked
 17263  005FC8  6FE2               	movwf	_cdc_mem_type& (0+255),b
 17264                           
 17265                           ; BSR set to: 1
 17266  005FCA  0E01               	movlw	1
 17267  005FCC  0100               	movlb	0	; () banked
 17268  005FCE  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17269  005FD0  0012               	return	
 17270  005FD2                     __end_of_putUSBUSART:
 17271                           	opt stack 0
 17272                           tosu	equ	0xFFF
 17273                           tosh	equ	0xFFE
 17274                           tosl	equ	0xFFD
 17275                           pclath	equ	0xFFA
 17276                           tblptru	equ	0xFF8
 17277                           tblptrh	equ	0xFF7
 17278                           tblptrl	equ	0xFF6
 17279                           tablat	equ	0xFF5
 17280                           prodh	equ	0xFF4
 17281                           prodl	equ	0xFF3
 17282                           intcon	equ	0xFF2
 17283                           intcon2	equ	0xFF1
 17284                           intcon3	equ	0xFF0
 17285                           indf0	equ	0xFEF
 17286                           postinc0	equ	0xFEE
 17287                           plusw0	equ	0xFEB
 17288                           fsr0h	equ	0xFEA
 17289                           fsr0l	equ	0xFE9
 17290                           wreg	equ	0xFE8
 17291                           indf1	equ	0xFE7
 17292                           postinc1	equ	0xFE6
 17293                           postdec1	equ	0xFE5
 17294                           fsr1h	equ	0xFE2
 17295                           fsr1l	equ	0xFE1
 17296                           indf2	equ	0xFDF
 17297                           postinc2	equ	0xFDE
 17298                           postdec2	equ	0xFDD
 17299                           plusw2	equ	0xFDB
 17300                           fsr2h	equ	0xFDA
 17301                           fsr2l	equ	0xFD9
 17302                           status	equ	0xFD8
 17303                           
 17304 ;; *************** function _itoa *****************
 17305 ;; Defined at:
 17306 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17307 ;; Parameters:    Size  Location     Type
 17308 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17309 ;;		 -> Terminal@Payload(80), 
 17310 ;;  val             2   53[BANK0 ] int 
 17311 ;;  base            2   55[BANK0 ] int 
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17314 ;;		 -> Terminal@Payload(80), 
 17315 ;; Return value:  Size  Location     Type
 17316 ;;                  2   51[BANK0 ] PTR unsigned char 
 17317 ;; Registers used:
 17318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17319 ;; Tracked objects:
 17320 ;;		On entry : 0/0
 17321 ;;		On exit  : 0/0
 17322 ;;		Unchanged: 0/0
 17323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17324 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17327 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17328 ;;Total ram usage:        8 bytes
 17329 ;; Hardware stack levels used:    1
 17330 ;; Hardware stack levels required when called:   13
 17331 ;; This function calls:
 17332 ;;		_utoa
 17333 ;; This function is called by:
 17334 ;;		_Terminal
 17335 ;; This function uses a non-reentrant model
 17336 ;;
 17337                           
 17338                           	psect	text71
 17339  00589A                     __ptext71:
 17340                           	opt stack 0
 17341  00589A                     _itoa:
 17342                           	opt stack 12
 17343                           
 17344                           ; BSR set to: 0
 17345                           ;incstack = 0
 17346  00589A  C093  F099         	movff	itoa@buf,itoa@cp
 17347  00589E  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17348  0058A2  0100               	movlb	0	; () banked
 17349  0058A4  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17350  0058A6  D00C               	goto	l2993
 17351                           
 17352                           ; BSR set to: 0
 17353  0058A8  C093  FFD9         	movff	itoa@buf,fsr2l
 17354  0058AC  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17355  0058B0  0E2D               	movlw	45
 17356  0058B2  6EDF               	movwf	indf2,c
 17357                           
 17358                           ; BSR set to: 0
 17359  0058B4  4B93               	infsnz	itoa@buf& (0+255),f,b
 17360  0058B6  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17361                           
 17362                           ; BSR set to: 0
 17363  0058B8  6D95               	negf	itoa@val& (0+255),b
 17364  0058BA  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17365  0058BC  B0D8               	btfsc	status,0,c
 17366  0058BE  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17367  0058C0                     l2993:
 17368                           
 17369                           ; BSR set to: 0
 17370                           
 17371                           ; BSR set to: 0
 17372  0058C0  C093  F08A         	movff	itoa@buf,utoa@buf
 17373  0058C4  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17374  0058C8  C095  F08C         	movff	itoa@val,utoa@val
 17375  0058CC  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17376  0058D0  C097  F08E         	movff	itoa@base,utoa@base
 17377  0058D4  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17378  0058D8  EC82  F021         	call	_utoa	;wreg free
 17379  0058DC  0012               	return	
 17380  0058DE                     __end_of_itoa:
 17381                           	opt stack 0
 17382                           tosu	equ	0xFFF
 17383                           tosh	equ	0xFFE
 17384                           tosl	equ	0xFFD
 17385                           pclath	equ	0xFFA
 17386                           tblptru	equ	0xFF8
 17387                           tblptrh	equ	0xFF7
 17388                           tblptrl	equ	0xFF6
 17389                           tablat	equ	0xFF5
 17390                           prodh	equ	0xFF4
 17391                           prodl	equ	0xFF3
 17392                           intcon	equ	0xFF2
 17393                           intcon2	equ	0xFF1
 17394                           intcon3	equ	0xFF0
 17395                           indf0	equ	0xFEF
 17396                           postinc0	equ	0xFEE
 17397                           plusw0	equ	0xFEB
 17398                           fsr0h	equ	0xFEA
 17399                           fsr0l	equ	0xFE9
 17400                           wreg	equ	0xFE8
 17401                           indf1	equ	0xFE7
 17402                           postinc1	equ	0xFE6
 17403                           postdec1	equ	0xFE5
 17404                           fsr1h	equ	0xFE2
 17405                           fsr1l	equ	0xFE1
 17406                           indf2	equ	0xFDF
 17407                           postinc2	equ	0xFDE
 17408                           postdec2	equ	0xFDD
 17409                           plusw2	equ	0xFDB
 17410                           fsr2h	equ	0xFDA
 17411                           fsr2l	equ	0xFD9
 17412                           status	equ	0xFD8
 17413                           
 17414 ;; *************** function _utoa *****************
 17415 ;; Defined at:
 17416 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17417 ;; Parameters:    Size  Location     Type
 17418 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17419 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17420 ;;  val             2   44[BANK0 ] unsigned int 
 17421 ;;  base            2   46[BANK0 ] int 
 17422 ;; Auto vars:     Size  Location     Type
 17423 ;;  v               2   48[BANK0 ] unsigned int 
 17424 ;;  c               1   50[BANK0 ] unsigned char 
 17425 ;; Return value:  Size  Location     Type
 17426 ;;                  2   42[BANK0 ] PTR unsigned char 
 17427 ;; Registers used:
 17428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17429 ;; Tracked objects:
 17430 ;;		On entry : 0/0
 17431 ;;		On exit  : 0/0
 17432 ;;		Unchanged: 0/0
 17433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17434 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17435 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17437 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17438 ;;Total ram usage:        9 bytes
 17439 ;; Hardware stack levels used:    1
 17440 ;; Hardware stack levels required when called:   12
 17441 ;; This function calls:
 17442 ;;		___lwdiv
 17443 ;;		___lwmod
 17444 ;; This function is called by:
 17445 ;;		_Term_MainSm
 17446 ;;		_itoa
 17447 ;; This function uses a non-reentrant model
 17448 ;;
 17449                           
 17450                           	psect	text72
 17451  004304                     __ptext72:
 17452                           	opt stack 0
 17453  004304                     _utoa:
 17454                           	opt stack 14
 17455                           
 17456                           ;incstack = 0
 17457  004304  C08C  F090         	movff	utoa@val,utoa@v
 17458  004308  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17459  00430C  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17460  004310  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17461  004314  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17462  004318  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17463  00431C  EC60  F02A         	call	___lwdiv	;wreg free
 17464  004320  C083  F090         	movff	?___lwdiv,utoa@v
 17465  004324  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17466  004328  0100               	movlb	0	; () banked
 17467  00432A  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17468  00432C  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17469                           
 17470                           ; BSR set to: 0
 17471  00432E  5190               	movf	utoa@v& (0+255),w,b
 17472  004330  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17473  004332  A4D8               	btfss	status,2,c
 17474  004334  D7EB               	goto	l2997
 17475                           
 17476                           ; BSR set to: 0
 17477                           
 17478                           ; BSR set to: 0
 17479  004336  C08A  FFD9         	movff	utoa@buf,fsr2l
 17480  00433A  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17481  00433E  0E00               	movlw	0
 17482  004340  6EDF               	movwf	indf2,c
 17483                           
 17484                           ; BSR set to: 0
 17485  004342  078A               	decf	utoa@buf& (0+255),f,b
 17486  004344  A0D8               	btfss	status,0,c
 17487  004346  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17488  004348                     
 17489                           ; BSR set to: 0
 17490                           
 17491                           ; BSR set to: 0
 17492  004348  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17493  00434C  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17494  004350  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17495  004354  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17496  004358  EC6F  F02C         	call	___lwmod	;wreg free
 17497  00435C  0100               	movlb	0	; () banked
 17498  00435E  517D               	movf	?___lwmod& (0+255),w,b
 17499  004360  6F92               	movwf	utoa@c& (0+255),b
 17500                           
 17501                           ; BSR set to: 0
 17502  004362  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17503  004366  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17504  00436A  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17505  00436E  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17506  004372  EC60  F02A         	call	___lwdiv	;wreg free
 17507  004376  C083  F08C         	movff	?___lwdiv,utoa@val
 17508  00437A  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17509  00437E  0E09               	movlw	9
 17510  004380  0100               	movlb	0	; () banked
 17511  004382  6592               	cpfsgt	utoa@c& (0+255),b
 17512  004384  D002               	goto	l3000
 17513                           
 17514                           ; BSR set to: 0
 17515  004386  0E07               	movlw	7
 17516  004388  2792               	addwf	utoa@c& (0+255),f,b
 17517  00438A                     l3000:
 17518                           
 17519                           ; BSR set to: 0
 17520  00438A  0E30               	movlw	48
 17521  00438C  2792               	addwf	utoa@c& (0+255),f,b
 17522                           
 17523                           ; BSR set to: 0
 17524  00438E  C08A  FFD9         	movff	utoa@buf,fsr2l
 17525  004392  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17526  004396  C092  FFDF         	movff	utoa@c,indf2
 17527                           
 17528                           ; BSR set to: 0
 17529  00439A  078A               	decf	utoa@buf& (0+255),f,b
 17530  00439C  A0D8               	btfss	status,0,c
 17531  00439E  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17532                           
 17533                           ; BSR set to: 0
 17534  0043A0  518C               	movf	utoa@val& (0+255),w,b
 17535  0043A2  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17536  0043A4  A4D8               	btfss	status,2,c
 17537  0043A6  D7D0               	goto	l2999
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;	Return value of _utoa is never used
 17541                           
 17542                           ; BSR set to: 0
 17543  0043A8  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17544  0043AA  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17545  0043AC  0012               	return	
 17546  0043AE                     __end_of_utoa:
 17547                           	opt stack 0
 17548                           tosu	equ	0xFFF
 17549                           tosh	equ	0xFFE
 17550                           tosl	equ	0xFFD
 17551                           pclath	equ	0xFFA
 17552                           tblptru	equ	0xFF8
 17553                           tblptrh	equ	0xFF7
 17554                           tblptrl	equ	0xFF6
 17555                           tablat	equ	0xFF5
 17556                           prodh	equ	0xFF4
 17557                           prodl	equ	0xFF3
 17558                           intcon	equ	0xFF2
 17559                           intcon2	equ	0xFF1
 17560                           intcon3	equ	0xFF0
 17561                           indf0	equ	0xFEF
 17562                           postinc0	equ	0xFEE
 17563                           plusw0	equ	0xFEB
 17564                           fsr0h	equ	0xFEA
 17565                           fsr0l	equ	0xFE9
 17566                           wreg	equ	0xFE8
 17567                           indf1	equ	0xFE7
 17568                           postinc1	equ	0xFE6
 17569                           postdec1	equ	0xFE5
 17570                           fsr1h	equ	0xFE2
 17571                           fsr1l	equ	0xFE1
 17572                           indf2	equ	0xFDF
 17573                           postinc2	equ	0xFDE
 17574                           postdec2	equ	0xFDD
 17575                           plusw2	equ	0xFDB
 17576                           fsr2h	equ	0xFDA
 17577                           fsr2l	equ	0xFD9
 17578                           status	equ	0xFD8
 17579                           
 17580 ;; *************** function ___lwmod *****************
 17581 ;; Defined at:
 17582 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17583 ;; Parameters:    Size  Location     Type
 17584 ;;  dividend        2   29[BANK0 ] unsigned int 
 17585 ;;  divisor         2   31[BANK0 ] unsigned int 
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;  counter         1   33[BANK0 ] unsigned char 
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  2   29[BANK0 ] unsigned int 
 17590 ;; Registers used:
 17591 ;;		wreg, status,2, status,0
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17600 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17601 ;;Total ram usage:        5 bytes
 17602 ;; Hardware stack levels used:    1
 17603 ;; Hardware stack levels required when called:   11
 17604 ;; This function calls:
 17605 ;;		Nothing
 17606 ;; This function is called by:
 17607 ;;		_utoa
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           	psect	text73
 17612  0058DE                     __ptext73:
 17613                           	opt stack 0
 17614  0058DE                     ___lwmod:
 17615                           	opt stack 14
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;incstack = 0
 17619  0058DE  0100               	movlb	0	; () banked
 17620  0058E0  517F               	movf	___lwmod@divisor& (0+255),w,b
 17621  0058E2  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17622  0058E4  B4D8               	btfsc	status,2,c
 17623  0058E6  D018               	goto	l3095
 17624                           
 17625                           ; BSR set to: 0
 17626  0058E8  0E01               	movlw	1
 17627  0058EA  6F81               	movwf	___lwmod@counter& (0+255),b
 17628  0058EC  D004               	goto	l3090
 17629  0058EE                     
 17630                           ; BSR set to: 0
 17631                           
 17632                           ; BSR set to: 0
 17633  0058EE  90D8               	bcf	status,0,c
 17634  0058F0  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17635  0058F2  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17636  0058F4  2B81               	incf	___lwmod@counter& (0+255),f,b
 17637  0058F6                     l3090:
 17638                           
 17639                           ; BSR set to: 0
 17640                           
 17641                           ; BSR set to: 0
 17642  0058F6  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17643  0058F8  D7FA               	goto	l3091
 17644  0058FA                     u10900:
 17645                           
 17646                           ; BSR set to: 0
 17647                           
 17648                           ; BSR set to: 0
 17649                           
 17650                           ; BSR set to: 0
 17651  0058FA  517F               	movf	___lwmod@divisor& (0+255),w,b
 17652  0058FC  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17653  0058FE  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17654  005900  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17655  005902  A0D8               	btfss	status,0,c
 17656  005904  D004               	goto	l3094
 17657                           
 17658                           ; BSR set to: 0
 17659  005906  517F               	movf	___lwmod@divisor& (0+255),w,b
 17660  005908  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17661  00590A  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17662  00590C  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17663  00590E                     l3094:
 17664                           
 17665                           ; BSR set to: 0
 17666                           
 17667                           ; BSR set to: 0
 17668  00590E  90D8               	bcf	status,0,c
 17669  005910  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17670  005912  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17671                           
 17672                           ; BSR set to: 0
 17673  005914  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17674  005916  D7F1               	goto	u10900
 17675  005918                     l3095:
 17676                           
 17677                           ; BSR set to: 0
 17678                           
 17679                           ; BSR set to: 0
 17680  005918  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17681  00591C  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17682                           
 17683                           ; BSR set to: 0
 17684  005920  0012               	return		;funcret
 17685  005922                     __end_of___lwmod:
 17686                           	opt stack 0
 17687                           tosu	equ	0xFFF
 17688                           tosh	equ	0xFFE
 17689                           tosl	equ	0xFFD
 17690                           pclath	equ	0xFFA
 17691                           tblptru	equ	0xFF8
 17692                           tblptrh	equ	0xFF7
 17693                           tblptrl	equ	0xFF6
 17694                           tablat	equ	0xFF5
 17695                           prodh	equ	0xFF4
 17696                           prodl	equ	0xFF3
 17697                           intcon	equ	0xFF2
 17698                           intcon2	equ	0xFF1
 17699                           intcon3	equ	0xFF0
 17700                           indf0	equ	0xFEF
 17701                           postinc0	equ	0xFEE
 17702                           plusw0	equ	0xFEB
 17703                           fsr0h	equ	0xFEA
 17704                           fsr0l	equ	0xFE9
 17705                           wreg	equ	0xFE8
 17706                           indf1	equ	0xFE7
 17707                           postinc1	equ	0xFE6
 17708                           postdec1	equ	0xFE5
 17709                           fsr1h	equ	0xFE2
 17710                           fsr1l	equ	0xFE1
 17711                           indf2	equ	0xFDF
 17712                           postinc2	equ	0xFDE
 17713                           postdec2	equ	0xFDD
 17714                           plusw2	equ	0xFDB
 17715                           fsr2h	equ	0xFDA
 17716                           fsr2l	equ	0xFD9
 17717                           status	equ	0xFD8
 17718                           
 17719 ;; *************** function _getsUSBUSART *****************
 17720 ;; Defined at:
 17721 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17722 ;; Parameters:    Size  Location     Type
 17723 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17724 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17725 ;;  len             1   38[BANK0 ] unsigned char 
 17726 ;; Auto vars:     Size  Location     Type
 17727 ;;		None
 17728 ;; Return value:  Size  Location     Type
 17729 ;;                  1    wreg      unsigned char 
 17730 ;; Registers used:
 17731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17732 ;; Tracked objects:
 17733 ;;		On entry : 0/0
 17734 ;;		On exit  : 0/0
 17735 ;;		Unchanged: 0/0
 17736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17737 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17741 ;;Total ram usage:        4 bytes
 17742 ;; Hardware stack levels used:    1
 17743 ;; Hardware stack levels required when called:   12
 17744 ;; This function calls:
 17745 ;;		_USBTransferOnePacket
 17746 ;; This function is called by:
 17747 ;;		_Terminal
 17748 ;;		_GsmGprsTerminal
 17749 ;; This function uses a non-reentrant model
 17750 ;;
 17751                           
 17752                           	psect	text74
 17753  0048AA                     __ptext74:
 17754                           	opt stack 0
 17755  0048AA                     _getsUSBUSART:
 17756                           	opt stack 13
 17757                           
 17758                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;incstack = 0
 17762  0048AA  0E00               	movlw	0
 17763  0048AC  0100               	movlb	0	; () banked
 17764  0048AE  6FC6               	movwf	_cdc_rx_len& (0+255),b
 17765                           
 17766                           ; BSR set to: 0
 17767                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17768  0048B0  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17769  0048B2  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17770  0048B4  B4D8               	btfsc	status,2,c
 17771  0048B6  D006               	goto	u11680
 17772                           
 17773                           ; BSR set to: 0
 17774  0048B8  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17775  0048BC  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17776  0048C0  BEDF               	btfsc	indf2,7,c
 17777  0048C2  D03B               	goto	l1921
 17778  0048C4                     u11680:
 17779                           
 17780                           ; BSR set to: 0
 17781                           ;usb_device_cdc.c: 493: {
 17782                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17783                           
 17784                           ; BSR set to: 0
 17785  0048C4  EE20 F001          	lfsr	2,1
 17786  0048C8  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17787  0048CA  26D9               	addwf	fsr2l,f,c
 17788  0048CC  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17789  0048CE  22DA               	addwfc	fsr2h,f,c
 17790  0048D0  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17791  0048D2  5CDE               	subwf	postinc2,w,c
 17792  0048D4  B0D8               	btfsc	status,0,c
 17793  0048D6  D008               	goto	l1924
 17794                           
 17795                           ; BSR set to: 0
 17796                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17797  0048D8  EE20 F001          	lfsr	2,1
 17798  0048DC  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17799  0048DE  26D9               	addwf	fsr2l,f,c
 17800  0048E0  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17801  0048E2  22DA               	addwfc	fsr2h,f,c
 17802  0048E4  50DF               	movf	indf2,w,c
 17803  0048E6  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17804  0048E8                     l1924:
 17805                           
 17806                           ; BSR set to: 0
 17807                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17808                           
 17809                           ; BSR set to: 0
 17810  0048E8  0E00               	movlw	0
 17811  0048EA  6FC6               	movwf	_cdc_rx_len& (0+255),b
 17812  0048EC  D013               	goto	l1925
 17813  0048EE                     
 17814                           ; BSR set to: 0
 17815                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17816                           
 17817                           ; BSR set to: 0
 17818  0048EE  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17819  0048F0  0D01               	mullw	1
 17820  0048F2  0E00               	movlw	low _cdc_data_rx
 17821  0048F4  24F3               	addwf	prodl,w,c
 17822  0048F6  6ED9               	movwf	fsr2l,c
 17823  0048F8  0E05               	movlw	high _cdc_data_rx
 17824  0048FA  20F4               	addwfc	prodh,w,c
 17825  0048FC  6EDA               	movwf	fsr2h,c
 17826  0048FE  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17827  004900  0D01               	mullw	1
 17828  004902  50F3               	movf	prodl,w,c
 17829  004904  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17830  004906  6EE1               	movwf	fsr1l,c
 17831  004908  50F4               	movf	prodh,w,c
 17832  00490A  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17833  00490C  6EE2               	movwf	fsr1h,c
 17834  00490E  CFDF FFE7          	movff	indf2,indf1
 17835                           
 17836                           ; BSR set to: 0
 17837  004912  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 17838  004914                     l1925:
 17839                           
 17840                           ; BSR set to: 0
 17841                           
 17842                           ; BSR set to: 0
 17843  004914  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17844  004916  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 17845  004918  A0D8               	btfss	status,0,c
 17846  00491A  D7E9               	goto	l1926
 17847                           
 17848                           ; BSR set to: 0
 17849                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17850                           
 17851                           ; BSR set to: 0
 17852  00491C  0E00               	movlw	0
 17853  00491E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17854  004920  0E00               	movlw	low _cdc_data_rx
 17855  004922  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17856  004924  0E05               	movlw	high _cdc_data_rx
 17857  004926  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17858  004928  0E40               	movlw	64
 17859  00492A  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17860  00492C  0E02               	movlw	2
 17861  00492E  EC1C  F020         	call	_USBTransferOnePacket
 17862  004932  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17863  004936  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17864  00493A                     l1921:
 17865                           
 17866                           ;usb_device_cdc.c: 513: }
 17867                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17868  00493A  0100               	movlb	0	; () banked
 17869  00493C  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17870  00493E  0012               	return	
 17871  004940                     __end_of_getsUSBUSART:
 17872                           	opt stack 0
 17873                           tosu	equ	0xFFF
 17874                           tosh	equ	0xFFE
 17875                           tosl	equ	0xFFD
 17876                           pclath	equ	0xFFA
 17877                           tblptru	equ	0xFF8
 17878                           tblptrh	equ	0xFF7
 17879                           tblptrl	equ	0xFF6
 17880                           tablat	equ	0xFF5
 17881                           prodh	equ	0xFF4
 17882                           prodl	equ	0xFF3
 17883                           intcon	equ	0xFF2
 17884                           intcon2	equ	0xFF1
 17885                           intcon3	equ	0xFF0
 17886                           indf0	equ	0xFEF
 17887                           postinc0	equ	0xFEE
 17888                           plusw0	equ	0xFEB
 17889                           fsr0h	equ	0xFEA
 17890                           fsr0l	equ	0xFE9
 17891                           wreg	equ	0xFE8
 17892                           indf1	equ	0xFE7
 17893                           postinc1	equ	0xFE6
 17894                           postdec1	equ	0xFE5
 17895                           fsr1h	equ	0xFE2
 17896                           fsr1l	equ	0xFE1
 17897                           indf2	equ	0xFDF
 17898                           postinc2	equ	0xFDE
 17899                           postdec2	equ	0xFDD
 17900                           plusw2	equ	0xFDB
 17901                           fsr2h	equ	0xFDA
 17902                           fsr2l	equ	0xFD9
 17903                           status	equ	0xFD8
 17904                           
 17905 ;; *************** function _USBTransferOnePacket *****************
 17906 ;; Defined at:
 17907 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17908 ;; Parameters:    Size  Location     Type
 17909 ;;  ep              1    wreg     unsigned char 
 17910 ;;  dir             1   29[BANK0 ] unsigned char 
 17911 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17912 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17913 ;;  len             1   32[BANK0 ] unsigned char 
 17914 ;; Auto vars:     Size  Location     Type
 17915 ;;  ep              1   33[BANK0 ] unsigned char 
 17916 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17917 ;;		 -> NULL(0), BDT(48), 
 17918 ;; Return value:  Size  Location     Type
 17919 ;;                  2   29[BANK0 ] PTR void 
 17920 ;; Registers used:
 17921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17922 ;; Tracked objects:
 17923 ;;		On entry : 0/0
 17924 ;;		On exit  : 0/0
 17925 ;;		Unchanged: 0/0
 17926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17930 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17931 ;;Total ram usage:        7 bytes
 17932 ;; Hardware stack levels used:    1
 17933 ;; Hardware stack levels required when called:   11
 17934 ;; This function calls:
 17935 ;;		Nothing
 17936 ;; This function is called by:
 17937 ;;		_CDCInitEP
 17938 ;;		_getsUSBUSART
 17939 ;;		_CDCTxService
 17940 ;;		_USBCDCEventHandler
 17941 ;; This function uses a non-reentrant model
 17942 ;;
 17943                           
 17944                           	psect	text75
 17945  004038                     __ptext75:
 17946                           	opt stack 0
 17947  004038                     _USBTransferOnePacket:
 17948                           	opt stack 13
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;incstack = 0
 17952                           ;USBTransferOnePacket@ep stored from wreg
 17953  004038  0100               	movlb	0	; () banked
 17954  00403A  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17955                           
 17956                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17957                           ;usb_device.c: 1018: if(dir != 0)
 17958  00403C  0100               	movlb	0	; () banked
 17959  00403E  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17960  004040  B4D8               	btfsc	status,2,c
 17961  004042  D007               	goto	l1645
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;usb_device.c: 1019: {
 17965                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17966  004044  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17967  004046  0D02               	mullw	2
 17968  004048  0EB6               	movlw	low _pBDTEntryIn
 17969  00404A  24F3               	addwf	prodl,w,c
 17970  00404C  6ED9               	movwf	fsr2l,c
 17971  00404E  0E00               	movlw	high _pBDTEntryIn
 17972  004050  D006               	goto	L16
 17973  004052                     l1645:
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;usb_device.c: 1023: else
 17977                           ;usb_device.c: 1024: {
 17978                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17979                           
 17980                           ; BSR set to: 0
 17981  004052  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17982  004054  0D02               	mullw	2
 17983  004056  0E0E               	movlw	low _pBDTEntryOut
 17984  004058  24F3               	addwf	prodl,w,c
 17985  00405A  6ED9               	movwf	fsr2l,c
 17986  00405C  0E03               	movlw	high _pBDTEntryOut
 17987  00405E                     L16:
 17988  00405E  20F4               	addwfc	prodh,w,c
 17989  004060  6EDA               	movwf	fsr2h,c
 17990  004062  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17991  004066  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17992                           
 17993                           ; BSR set to: 0
 17994                           ;usb_device.c: 1027: }
 17995                           ;usb_device.c: 1031: if(handle == 0)
 17996                           
 17997                           ; BSR set to: 0
 17998  00406A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17999  00406C  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18000  00406E  A4D8               	btfss	status,2,c
 18001  004070  D005               	goto	l1647
 18002                           
 18003                           ; BSR set to: 0
 18004                           ;usb_device.c: 1032: {
 18005                           ;usb_device.c: 1033: return 0;
 18006  004072  0E00               	movlw	0
 18007  004074  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18008  004076  0E00               	movlw	0
 18009  004078  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18010                           
 18011                           ; BSR set to: 0
 18012  00407A  0012               	return	
 18013  00407C                     l1647:
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;usb_device.c: 1034: }
 18017                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18018                           
 18019                           ; BSR set to: 0
 18020  00407C  EE20 F002          	lfsr	2,2
 18021  004080  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18022  004082  26D9               	addwf	fsr2l,f,c
 18023  004084  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18024  004086  22DA               	addwfc	fsr2h,f,c
 18025  004088  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18026  00408C  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18027                           
 18028                           ;usb_device.c: 1048: handle->CNT = len;
 18029  004090  EE20 F001          	lfsr	2,1
 18030  004094  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18031  004096  26D9               	addwf	fsr2l,f,c
 18032  004098  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18033  00409A  22DA               	addwfc	fsr2h,f,c
 18034  00409C  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18038  0040A0  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18039  0040A4  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18040  0040A8  0E40               	movlw	64
 18041  0040AA  16DF               	andwf	indf2,f,c
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18045  0040AC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18046  0040B0  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18047  0040B4  0E00               	movlw	0
 18048  0040B6  86DB               	bsf	plusw2,3,c
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18052  0040B8  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18053  0040BC  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18054  0040C0  0E00               	movlw	0
 18055  0040C2  8EDB               	bsf	plusw2,7,c
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;usb_device.c: 1054: if(dir != 0)
 18059  0040C4  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18060  0040C6  B4D8               	btfsc	status,2,c
 18061  0040C8  D007               	goto	l1649
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;usb_device.c: 1055: {
 18065                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18066  0040CA  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18067  0040CC  0D02               	mullw	2
 18068  0040CE  0EB6               	movlw	low _pBDTEntryIn
 18069  0040D0  24F3               	addwf	prodl,w,c
 18070  0040D2  6ED9               	movwf	fsr2l,c
 18071  0040D4  0E00               	movlw	high _pBDTEntryIn
 18072  0040D6  D006               	goto	L17
 18073  0040D8                     l1649:
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;usb_device.c: 1059: else
 18077                           ;usb_device.c: 1060: {
 18078                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18079                           
 18080                           ; BSR set to: 0
 18081  0040D8  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18082  0040DA  0D02               	mullw	2
 18083  0040DC  0E0E               	movlw	low _pBDTEntryOut
 18084  0040DE  24F3               	addwf	prodl,w,c
 18085  0040E0  6ED9               	movwf	fsr2l,c
 18086  0040E2  0E03               	movlw	high _pBDTEntryOut
 18087  0040E4                     L17:
 18088  0040E4  20F4               	addwfc	prodh,w,c
 18089  0040E6  6EDA               	movwf	fsr2h,c
 18090  0040E8  0E04               	movlw	4
 18091  0040EA  1ADF               	xorwf	indf2,f,c
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;usb_device.c: 1063: }
 18095                           ;usb_device.c: 1064: return (void*)handle;
 18096                           
 18097                           ; BSR set to: 0
 18098  0040EC  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18099  0040F0  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18100  0040F4  0012               	return	
 18101  0040F6                     __end_of_USBTransferOnePacket:
 18102                           	opt stack 0
 18103                           tosu	equ	0xFFF
 18104                           tosh	equ	0xFFE
 18105                           tosl	equ	0xFFD
 18106                           pclath	equ	0xFFA
 18107                           tblptru	equ	0xFF8
 18108                           tblptrh	equ	0xFF7
 18109                           tblptrl	equ	0xFF6
 18110                           tablat	equ	0xFF5
 18111                           prodh	equ	0xFF4
 18112                           prodl	equ	0xFF3
 18113                           intcon	equ	0xFF2
 18114                           intcon2	equ	0xFF1
 18115                           intcon3	equ	0xFF0
 18116                           indf0	equ	0xFEF
 18117                           postinc0	equ	0xFEE
 18118                           plusw0	equ	0xFEB
 18119                           fsr0h	equ	0xFEA
 18120                           fsr0l	equ	0xFE9
 18121                           wreg	equ	0xFE8
 18122                           indf1	equ	0xFE7
 18123                           postinc1	equ	0xFE6
 18124                           postdec1	equ	0xFE5
 18125                           fsr1h	equ	0xFE2
 18126                           fsr1l	equ	0xFE1
 18127                           indf2	equ	0xFDF
 18128                           postinc2	equ	0xFDE
 18129                           postdec2	equ	0xFDD
 18130                           plusw2	equ	0xFDB
 18131                           fsr2h	equ	0xFDA
 18132                           fsr2l	equ	0xFD9
 18133                           status	equ	0xFD8
 18134                           
 18135 ;; *************** function _atoi *****************
 18136 ;; Defined at:
 18137 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18140 ;;		 -> Terminal@Len(4), 
 18141 ;; Auto vars:     Size  Location     Type
 18142 ;;  a               2   40[BANK0 ] int 
 18143 ;;  sign            1   39[BANK0 ] unsigned char 
 18144 ;; Return value:  Size  Location     Type
 18145 ;;                  2   35[BANK0 ] int 
 18146 ;; Registers used:
 18147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18148 ;; Tracked objects:
 18149 ;;		On entry : 0/0
 18150 ;;		On exit  : 0/0
 18151 ;;		Unchanged: 0/0
 18152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18154 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18155 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18156 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18157 ;;Total ram usage:        7 bytes
 18158 ;; Hardware stack levels used:    1
 18159 ;; Hardware stack levels required when called:   12
 18160 ;; This function calls:
 18161 ;;		___wmul
 18162 ;;		_isdigit
 18163 ;; This function is called by:
 18164 ;;		_Terminal
 18165 ;; This function uses a non-reentrant model
 18166 ;;
 18167                           
 18168                           	psect	text76
 18169  0036B2                     __ptext76:
 18170                           	opt stack 0
 18171  0036B2                     _atoi:
 18172                           	opt stack 13
 18173                           
 18174                           ; BSR set to: 0
 18175                           ;incstack = 0
 18176  0036B2  D003               	goto	l2806
 18177  0036B4  0100               	movlb	0	; () banked
 18178  0036B6  4B83               	infsnz	atoi@s& (0+255),f,b
 18179  0036B8  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18180  0036BA                     l2806:
 18181                           
 18182                           ; BSR set to: 0
 18183  0036BA  C083  FFD9         	movff	atoi@s,fsr2l
 18184  0036BE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18185  0036C2  0E20               	movlw	32
 18186  0036C4  18DE               	xorwf	postinc2,w,c
 18187  0036C6  B4D8               	btfsc	status,2,c
 18188  0036C8  D7F5               	goto	l2807
 18189  0036CA  C083  FFD9         	movff	atoi@s,fsr2l
 18190  0036CE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18191  0036D2  0E09               	movlw	9
 18192  0036D4  18DE               	xorwf	postinc2,w,c
 18193  0036D6  B4D8               	btfsc	status,2,c
 18194  0036D8  D7ED               	goto	l2807
 18195  0036DA  0E00               	movlw	0
 18196  0036DC  0100               	movlb	0	; () banked
 18197  0036DE  6F89               	movwf	(atoi@a+1)& (0+255),b
 18198  0036E0  0E00               	movlw	0
 18199  0036E2  6F88               	movwf	atoi@a& (0+255),b
 18200  0036E4  0E00               	movlw	0
 18201  0036E6  6F87               	movwf	atoi@sign& (0+255),b
 18202                           
 18203                           ; BSR set to: 0
 18204  0036E8  C083  FFD9         	movff	atoi@s,fsr2l
 18205  0036EC  C084  FFDA         	movff	atoi@s+1,fsr2h
 18206  0036F0  0E2D               	movlw	45
 18207  0036F2  18DE               	xorwf	postinc2,w,c
 18208  0036F4  A4D8               	btfss	status,2,c
 18209  0036F6  D002               	goto	l2809
 18210                           
 18211                           ; BSR set to: 0
 18212  0036F8  2B87               	incf	atoi@sign& (0+255),f,b
 18213  0036FA  D026               	goto	l12821
 18214  0036FC                     l2809:
 18215                           
 18216                           ; BSR set to: 0
 18217                           
 18218                           ; BSR set to: 0
 18219  0036FC  C083  FFD9         	movff	atoi@s,fsr2l
 18220  003700  C084  FFDA         	movff	atoi@s+1,fsr2h
 18221  003704  0E2B               	movlw	43
 18222  003706  18DE               	xorwf	postinc2,w,c
 18223  003708  A4D8               	btfss	status,2,c
 18224  00370A  D020               	goto	l2812
 18225  00370C  D01D               	goto	l12821
 18226  00370E                     
 18227                           ; BSR set to: 0
 18228  00370E  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18229  003712  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18230  003716  0E00               	movlw	0
 18231  003718  0100               	movlb	0	; () banked
 18232  00371A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18233  00371C  0E0A               	movlw	10
 18234  00371E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18235  003720  EC36  F02F         	call	___wmul	;wreg free
 18236  003724  C083  FFD9         	movff	atoi@s,fsr2l
 18237  003728  C084  FFDA         	movff	atoi@s+1,fsr2h
 18238  00372C  50DF               	movf	indf2,w,c
 18239  00372E  0100               	movlb	0	; () banked
 18240  003730  6F85               	movwf	??_atoi& (0+255),b
 18241  003732  6B86               	clrf	(??_atoi+1)& (0+255),b
 18242  003734  517D               	movf	?___wmul& (0+255),w,b
 18243  003736  2785               	addwf	??_atoi& (0+255),f,b
 18244  003738  517E               	movf	(?___wmul+1)& (0+255),w,b
 18245  00373A  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18246  00373C  0ED0               	movlw	208
 18247  00373E  2585               	addwf	??_atoi& (0+255),w,b
 18248  003740  6F88               	movwf	atoi@a& (0+255),b
 18249  003742  0EFF               	movlw	255
 18250  003744  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18251  003746  6F89               	movwf	(atoi@a+1)& (0+255),b
 18252  003748                     l12821:
 18253                           
 18254                           ; BSR set to: 0
 18255  003748  4B83               	infsnz	atoi@s& (0+255),f,b
 18256  00374A  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18257  00374C                     l2812:
 18258                           
 18259                           ; BSR set to: 0
 18260                           
 18261                           ; BSR set to: 0
 18262  00374C  C083  FFD9         	movff	atoi@s,fsr2l
 18263  003750  C084  FFDA         	movff	atoi@s+1,fsr2h
 18264  003754  50DF               	movf	indf2,w,c
 18265  003756  ECE9  F02F         	call	_isdigit
 18266  00375A  B0D8               	btfsc	status,0,c
 18267  00375C  D7D8               	goto	l2813
 18268  00375E  0100               	movlb	0	; () banked
 18269  003760  5187               	movf	atoi@sign& (0+255),w,b
 18270  003762  B4D8               	btfsc	status,2,c
 18271  003764  D00D               	goto	l2815
 18272                           
 18273                           ; BSR set to: 0
 18274  003766  C088  F085         	movff	atoi@a,??_atoi
 18275  00376A  C089  F086         	movff	atoi@a+1,??_atoi+1
 18276  00376E  1F85               	comf	??_atoi& (0+255),f,b
 18277  003770  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18278  003772  4B85               	infsnz	??_atoi& (0+255),f,b
 18279  003774  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18280  003776  C085  F083         	movff	??_atoi,?_atoi
 18281  00377A  C086  F084         	movff	??_atoi+1,?_atoi+1
 18282  00377E  0012               	return	
 18283  003780                     l2815:
 18284                           
 18285                           ; BSR set to: 0
 18286  003780  C088  F083         	movff	atoi@a,?_atoi
 18287  003784  C089  F084         	movff	atoi@a+1,?_atoi+1
 18288                           
 18289                           ; BSR set to: 0
 18290  003788  0012               	return		;funcret
 18291  00378A                     __end_of_atoi:
 18292                           	opt stack 0
 18293                           tosu	equ	0xFFF
 18294                           tosh	equ	0xFFE
 18295                           tosl	equ	0xFFD
 18296                           pclath	equ	0xFFA
 18297                           tblptru	equ	0xFF8
 18298                           tblptrh	equ	0xFF7
 18299                           tblptrl	equ	0xFF6
 18300                           tablat	equ	0xFF5
 18301                           prodh	equ	0xFF4
 18302                           prodl	equ	0xFF3
 18303                           intcon	equ	0xFF2
 18304                           intcon2	equ	0xFF1
 18305                           intcon3	equ	0xFF0
 18306                           indf0	equ	0xFEF
 18307                           postinc0	equ	0xFEE
 18308                           plusw0	equ	0xFEB
 18309                           fsr0h	equ	0xFEA
 18310                           fsr0l	equ	0xFE9
 18311                           wreg	equ	0xFE8
 18312                           indf1	equ	0xFE7
 18313                           postinc1	equ	0xFE6
 18314                           postdec1	equ	0xFE5
 18315                           fsr1h	equ	0xFE2
 18316                           fsr1l	equ	0xFE1
 18317                           indf2	equ	0xFDF
 18318                           postinc2	equ	0xFDE
 18319                           postdec2	equ	0xFDD
 18320                           plusw2	equ	0xFDB
 18321                           fsr2h	equ	0xFDA
 18322                           fsr2l	equ	0xFD9
 18323                           status	equ	0xFD8
 18324                           
 18325 ;; *************** function _isdigit *****************
 18326 ;; Defined at:
 18327 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18328 ;; Parameters:    Size  Location     Type
 18329 ;;  c               1    wreg     unsigned char 
 18330 ;; Auto vars:     Size  Location     Type
 18331 ;;  c               1   31[BANK0 ] unsigned char 
 18332 ;; Return value:  Size  Location     Type
 18333 ;;		None               void
 18334 ;; Registers used:
 18335 ;;		wreg, status,2, status,0
 18336 ;; Tracked objects:
 18337 ;;		On entry : 0/0
 18338 ;;		On exit  : 0/0
 18339 ;;		Unchanged: 0/0
 18340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18344 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18345 ;;Total ram usage:        3 bytes
 18346 ;; Hardware stack levels used:    1
 18347 ;; Hardware stack levels required when called:   11
 18348 ;; This function calls:
 18349 ;;		Nothing
 18350 ;; This function is called by:
 18351 ;;		_atoi
 18352 ;;		_strtol
 18353 ;;		_xtoi
 18354 ;;		_isxdigit
 18355 ;; This function uses a non-reentrant model
 18356 ;;
 18357                           
 18358                           	psect	text77
 18359  005FD2                     __ptext77:
 18360                           	opt stack 0
 18361  005FD2                     _isdigit:
 18362                           	opt stack 12
 18363                           
 18364                           ; BSR set to: 0
 18365                           ;incstack = 0
 18366                           ;isdigit@c stored from wreg
 18367  005FD2  0100               	movlb	0	; () banked
 18368  005FD4  6F7F               	movwf	isdigit@c& (0+255),b
 18369  005FD6  0E00               	movlw	0
 18370  005FD8  0100               	movlb	0	; () banked
 18371  005FDA  6F7E               	movwf	_isdigit$6193& (0+255),b
 18372                           
 18373                           ; BSR set to: 0
 18374  005FDC  0E3A               	movlw	58
 18375  005FDE  617F               	cpfslt	isdigit@c& (0+255),b
 18376  005FE0  D005               	goto	l2987
 18377                           
 18378                           ; BSR set to: 0
 18379  005FE2  0E2F               	movlw	47
 18380  005FE4  657F               	cpfsgt	isdigit@c& (0+255),b
 18381  005FE6  D002               	goto	l2987
 18382                           
 18383                           ; BSR set to: 0
 18384  005FE8  0E01               	movlw	1
 18385  005FEA  6F7E               	movwf	_isdigit$6193& (0+255),b
 18386  005FEC                     l2987:
 18387                           
 18388                           ; BSR set to: 0
 18389                           
 18390                           ; BSR set to: 0
 18391  005FEC  C07E  F07D         	movff	_isdigit$6193,??_isdigit
 18392  005FF0  317D               	rrcf	??_isdigit& (0+255),w,b
 18393  005FF2  0012               	return	
 18394  005FF4                     __end_of_isdigit:
 18395                           	opt stack 0
 18396                           tosu	equ	0xFFF
 18397                           tosh	equ	0xFFE
 18398                           tosl	equ	0xFFD
 18399                           pclath	equ	0xFFA
 18400                           tblptru	equ	0xFF8
 18401                           tblptrh	equ	0xFF7
 18402                           tblptrl	equ	0xFF6
 18403                           tablat	equ	0xFF5
 18404                           prodh	equ	0xFF4
 18405                           prodl	equ	0xFF3
 18406                           intcon	equ	0xFF2
 18407                           intcon2	equ	0xFF1
 18408                           intcon3	equ	0xFF0
 18409                           indf0	equ	0xFEF
 18410                           postinc0	equ	0xFEE
 18411                           plusw0	equ	0xFEB
 18412                           fsr0h	equ	0xFEA
 18413                           fsr0l	equ	0xFE9
 18414                           wreg	equ	0xFE8
 18415                           indf1	equ	0xFE7
 18416                           postinc1	equ	0xFE6
 18417                           postdec1	equ	0xFE5
 18418                           fsr1h	equ	0xFE2
 18419                           fsr1l	equ	0xFE1
 18420                           indf2	equ	0xFDF
 18421                           postinc2	equ	0xFDE
 18422                           postdec2	equ	0xFDD
 18423                           plusw2	equ	0xFDB
 18424                           fsr2h	equ	0xFDA
 18425                           fsr2l	equ	0xFD9
 18426                           status	equ	0xFD8
 18427                           
 18428 ;; *************** function _Rtcm_SetRtccDate *****************
 18429 ;; Defined at:
 18430 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18431 ;; Parameters:    Size  Location     Type
 18432 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18433 ;; Auto vars:     Size  Location     Type
 18434 ;;		None
 18435 ;; Return value:  Size  Location     Type
 18436 ;;                  1    wreg      void 
 18437 ;; Registers used:
 18438 ;;		wreg, status,2, status,0, cstack
 18439 ;; Tracked objects:
 18440 ;;		On entry : 0/0
 18441 ;;		On exit  : 0/0
 18442 ;;		Unchanged: 0/0
 18443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18444 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18447 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18448 ;;Total ram usage:        8 bytes
 18449 ;; Hardware stack levels used:    1
 18450 ;; Hardware stack levels required when called:   13
 18451 ;; This function calls:
 18452 ;;		_Rtcc_LockRtc
 18453 ;;		_Rtcc_SetRtccValue
 18454 ;;		_Rtcc_UnlockRtc
 18455 ;; This function is called by:
 18456 ;;		_Rtcm_MainTask
 18457 ;; This function uses a non-reentrant model
 18458 ;;
 18459                           
 18460                           	psect	text78
 18461  0053C4                     __ptext78:
 18462                           	opt stack 0
 18463  0053C4                     _Rtcm_SetRtccDate:
 18464                           	opt stack 14
 18465                           
 18466                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18467                           
 18468                           ; BSR set to: 0
 18469                           ;incstack = 0
 18470  0053C4  EC00  F031         	call	_Rtcc_UnlockRtc	;wreg free
 18471                           
 18472                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18473  0053C8  0100               	movlb	0	; () banked
 18474  0053CA  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18475  0053CC  0F30               	addlw	48
 18476  0053CE  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18477  0053D0  0E00               	movlw	0
 18478  0053D2  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18479                           
 18480                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18481  0053D6  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18482  0053DA  0E01               	movlw	1
 18483  0053DC  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18484                           
 18485                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18486  0053E0  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18487  0053E4  0E02               	movlw	2
 18488  0053E6  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18489                           
 18490                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18491  0053EA  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18492  0053EE  0E03               	movlw	3
 18493  0053F0  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18494                           
 18495                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18496  0053F4  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18497  0053F8  0E04               	movlw	4
 18498  0053FA  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18499                           
 18500                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18501  0053FE  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18502  005402  0E05               	movlw	5
 18503  005404  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18504                           
 18505                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18506  005408  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18507  00540C  0E06               	movlw	6
 18508  00540E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18509                           
 18510                           ;rtcm.c: 191: Rtcc_LockRtc();
 18511  005412  EC08  F031         	call	_Rtcc_LockRtc	;wreg free
 18512  005416  0012               	return		;funcret
 18513  005418                     __end_of_Rtcm_SetRtccDate:
 18514                           	opt stack 0
 18515                           tosu	equ	0xFFF
 18516                           tosh	equ	0xFFE
 18517                           tosl	equ	0xFFD
 18518                           pclath	equ	0xFFA
 18519                           tblptru	equ	0xFF8
 18520                           tblptrh	equ	0xFF7
 18521                           tblptrl	equ	0xFF6
 18522                           tablat	equ	0xFF5
 18523                           prodh	equ	0xFF4
 18524                           prodl	equ	0xFF3
 18525                           intcon	equ	0xFF2
 18526                           intcon2	equ	0xFF1
 18527                           intcon3	equ	0xFF0
 18528                           indf0	equ	0xFEF
 18529                           postinc0	equ	0xFEE
 18530                           plusw0	equ	0xFEB
 18531                           fsr0h	equ	0xFEA
 18532                           fsr0l	equ	0xFE9
 18533                           wreg	equ	0xFE8
 18534                           indf1	equ	0xFE7
 18535                           postinc1	equ	0xFE6
 18536                           postdec1	equ	0xFE5
 18537                           fsr1h	equ	0xFE2
 18538                           fsr1l	equ	0xFE1
 18539                           indf2	equ	0xFDF
 18540                           postinc2	equ	0xFDE
 18541                           postdec2	equ	0xFDD
 18542                           plusw2	equ	0xFDB
 18543                           fsr2h	equ	0xFDA
 18544                           fsr2l	equ	0xFD9
 18545                           status	equ	0xFD8
 18546                           
 18547 ;; *************** function _Rtcc_UnlockRtc *****************
 18548 ;; Defined at:
 18549 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18550 ;; Parameters:    Size  Location     Type
 18551 ;;		None
 18552 ;; Auto vars:     Size  Location     Type
 18553 ;;		None
 18554 ;; Return value:  Size  Location     Type
 18555 ;;                  1    wreg      void 
 18556 ;; Registers used:
 18557 ;;		None
 18558 ;; Tracked objects:
 18559 ;;		On entry : 0/0
 18560 ;;		On exit  : 0/0
 18561 ;;		Unchanged: 0/0
 18562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18567 ;;Total ram usage:        0 bytes
 18568 ;; Hardware stack levels used:    1
 18569 ;; Hardware stack levels required when called:   11
 18570 ;; This function calls:
 18571 ;;		Nothing
 18572 ;; This function is called by:
 18573 ;;		_Rtcm_MainTask
 18574 ;;		_Rtcm_SetRtccDate
 18575 ;;		_Rtcm_SetRtccAlarm
 18576 ;; This function uses a non-reentrant model
 18577 ;;
 18578                           
 18579                           	psect	text79
 18580  006200                     __ptext79:
 18581                           	opt stack 0
 18582  006200                     _Rtcc_UnlockRtc:
 18583                           	opt stack 15
 18584                           
 18585                           ;incstack = 0
 18586  006200  010F               	movlb	15	;# 
 18587  006202  0E55               	movlw	85	;# 
 18588  006204  6EA7               	movwf	4007,c	;# 
 18589  006206  0EAA               	movlw	170	;# 
 18590  006208  6EA7               	movwf	4007,c	;# 
 18591                           
 18592                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18593  00620A  010F               	movlb	15	; () banked
 18594  00620C  8B3F               	bsf	63,5,b	;volatile
 18595                           
 18596                           ; BSR set to: 15
 18597  00620E  0012               	return		;funcret
 18598  006210                     __end_of_Rtcc_UnlockRtc:
 18599                           	opt stack 0
 18600                           tosu	equ	0xFFF
 18601                           tosh	equ	0xFFE
 18602                           tosl	equ	0xFFD
 18603                           pclath	equ	0xFFA
 18604                           tblptru	equ	0xFF8
 18605                           tblptrh	equ	0xFF7
 18606                           tblptrl	equ	0xFF6
 18607                           tablat	equ	0xFF5
 18608                           prodh	equ	0xFF4
 18609                           prodl	equ	0xFF3
 18610                           intcon	equ	0xFF2
 18611                           intcon2	equ	0xFF1
 18612                           intcon3	equ	0xFF0
 18613                           indf0	equ	0xFEF
 18614                           postinc0	equ	0xFEE
 18615                           plusw0	equ	0xFEB
 18616                           fsr0h	equ	0xFEA
 18617                           fsr0l	equ	0xFE9
 18618                           wreg	equ	0xFE8
 18619                           indf1	equ	0xFE7
 18620                           postinc1	equ	0xFE6
 18621                           postdec1	equ	0xFE5
 18622                           fsr1h	equ	0xFE2
 18623                           fsr1l	equ	0xFE1
 18624                           indf2	equ	0xFDF
 18625                           postinc2	equ	0xFDE
 18626                           postdec2	equ	0xFDD
 18627                           plusw2	equ	0xFDB
 18628                           fsr2h	equ	0xFDA
 18629                           fsr2l	equ	0xFD9
 18630                           status	equ	0xFD8
 18631                           
 18632 ;; *************** function _Rtcc_SetRtccValue *****************
 18633 ;; Defined at:
 18634 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18635 ;; Parameters:    Size  Location     Type
 18636 ;;  RtccPtrVal      1    wreg     enum E7757
 18637 ;;  Value           1   37[BANK0 ] unsigned char 
 18638 ;; Auto vars:     Size  Location     Type
 18639 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18640 ;; Return value:  Size  Location     Type
 18641 ;;                  1    wreg      void 
 18642 ;; Registers used:
 18643 ;;		wreg, status,2, status,0, cstack
 18644 ;; Tracked objects:
 18645 ;;		On entry : 0/0
 18646 ;;		On exit  : 0/0
 18647 ;;		Unchanged: 0/0
 18648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18649 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18652 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18653 ;;Total ram usage:        4 bytes
 18654 ;; Hardware stack levels used:    1
 18655 ;; Hardware stack levels required when called:   12
 18656 ;; This function calls:
 18657 ;;		___awdiv
 18658 ;;		___awmod
 18659 ;; This function is called by:
 18660 ;;		_Rtcm_SetRtccDate
 18661 ;; This function uses a non-reentrant model
 18662 ;;
 18663                           
 18664                           	psect	text80
 18665  0015EE                     __ptext80:
 18666                           	opt stack 0
 18667  0015EE                     _Rtcc_SetRtccValue:
 18668                           	opt stack 14
 18669                           
 18670                           ; BSR set to: 15
 18671                           ;incstack = 0
 18672                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18673  0015EE  0100               	movlb	0	; () banked
 18674  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18675                           
 18676                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18677  0015F2  D0FC               	goto	l441
 18678  0015F4                     l442:
 18679                           
 18680                           ; BSR set to: 0
 18681                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18682  0015F4  010F               	movlb	15	; () banked
 18683  0015F6  833F               	bsf	63,1,b	;volatile
 18684                           
 18685                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18686  0015F8  813F               	bsf	63,0,b	;volatile
 18687                           
 18688                           ; BSR set to: 15
 18689                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18690  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18691  0015FE  0100               	movlb	0	; () banked
 18692  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18693  001602  0E00               	movlw	0
 18694  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18695  001606  0E0A               	movlw	10
 18696  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18697  00160A  ECCF  F026         	call	___awmod	;wreg free
 18698  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18699  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18700  001616  0E0F               	movlw	15
 18701  001618  0100               	movlb	0	; () banked
 18702  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18703  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18704  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18705  001622  0E00               	movlw	0
 18706  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18707  001626  0E0A               	movlw	10
 18708  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18709  00162A  EC09  F026         	call	___awdiv	;wreg free
 18710  00162E  0100               	movlb	0	; () banked
 18711  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18712  001632  0BF0               	andlw	240
 18713  001634  0BF0               	andlw	240
 18714  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18715  001638  6E98               	movwf	3992,c	;volatile
 18716                           
 18717                           ;rtcc_drv.c: 393: break;
 18718  00163A  0012               	return	
 18719  00163C                     l444:
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18723  00163C  010F               	movlb	15	; () banked
 18724  00163E  833F               	bsf	63,1,b	;volatile
 18725                           
 18726                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18727  001640  913F               	bcf	63,0,b	;volatile
 18728                           
 18729                           ; BSR set to: 15
 18730                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18731  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18732  001646  0100               	movlb	0	; () banked
 18733  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18734  00164A  0E00               	movlw	0
 18735  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18736  00164E  0E0A               	movlw	10
 18737  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18738  001652  ECCF  F026         	call	___awmod	;wreg free
 18739  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18740  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18741  00165E  0E0F               	movlw	15
 18742  001660  0100               	movlb	0	; () banked
 18743  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18744  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18745  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18746  00166A  0E00               	movlw	0
 18747  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18748  00166E  0E0A               	movlw	10
 18749  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18750  001672  EC09  F026         	call	___awdiv	;wreg free
 18751  001676  0100               	movlb	0	; () banked
 18752  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18753  00167A  0BF0               	andlw	240
 18754  00167C  0BF0               	andlw	240
 18755  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18756  001680  6E99               	movwf	3993,c	;volatile
 18757                           
 18758                           ;rtcc_drv.c: 401: break;
 18759  001682  0012               	return	
 18760  001684                     l445:
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18764  001684  010F               	movlb	15	; () banked
 18765  001686  833F               	bsf	63,1,b	;volatile
 18766                           
 18767                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18768  001688  913F               	bcf	63,0,b	;volatile
 18769                           
 18770                           ; BSR set to: 15
 18771                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18772  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18773  00168E  0100               	movlb	0	; () banked
 18774  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18775  001692  0E00               	movlw	0
 18776  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18777  001696  0E0A               	movlw	10
 18778  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18779  00169A  ECCF  F026         	call	___awmod	;wreg free
 18780  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18781  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18782  0016A6  0E0F               	movlw	15
 18783  0016A8  0100               	movlb	0	; () banked
 18784  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18785  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18786  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18787  0016B2  0E00               	movlw	0
 18788  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18789  0016B6  0E0A               	movlw	10
 18790  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18791  0016BA  EC09  F026         	call	___awdiv	;wreg free
 18792  0016BE  0100               	movlb	0	; () banked
 18793  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18794  0016C2  0BF0               	andlw	240
 18795  0016C4  0BF0               	andlw	240
 18796  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18797  0016C8  6E98               	movwf	3992,c	;volatile
 18798                           
 18799                           ;rtcc_drv.c: 409: break;
 18800  0016CA  0012               	return	
 18801  0016CC                     l446:
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18805  0016CC  010F               	movlb	15	; () banked
 18806  0016CE  933F               	bcf	63,1,b	;volatile
 18807                           
 18808                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18809  0016D0  813F               	bsf	63,0,b	;volatile
 18810                           
 18811                           ; BSR set to: 15
 18812                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18813  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18814  0016D6  0100               	movlb	0	; () banked
 18815  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18816  0016DA  0E00               	movlw	0
 18817  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18818  0016DE  0E0A               	movlw	10
 18819  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18820  0016E2  ECCF  F026         	call	___awmod	;wreg free
 18821  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18822  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18823  0016EE  0E0F               	movlw	15
 18824  0016F0  0100               	movlb	0	; () banked
 18825  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18826  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18827  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18828  0016FA  0E00               	movlw	0
 18829  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18830  0016FE  0E0A               	movlw	10
 18831  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18832  001702  EC09  F026         	call	___awdiv	;wreg free
 18833  001706  0100               	movlb	0	; () banked
 18834  001708  397D               	swapf	?___awdiv& (0+255),w,b
 18835  00170A  0BF0               	andlw	240
 18836  00170C  0BF0               	andlw	240
 18837  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18838  001710  6E99               	movwf	3993,c	;volatile
 18839                           
 18840                           ;rtcc_drv.c: 417: break;
 18841  001712  0012               	return	
 18842  001714                     l447:
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 18846  001714  010F               	movlb	15	; () banked
 18847  001716  933F               	bcf	63,1,b	;volatile
 18848                           
 18849                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 18850  001718  813F               	bsf	63,0,b	;volatile
 18851                           
 18852                           ; BSR set to: 15
 18853                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18854  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18855  00171E  0100               	movlb	0	; () banked
 18856  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18857  001722  0E00               	movlw	0
 18858  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18859  001726  0E0A               	movlw	10
 18860  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 18861  00172A  ECCF  F026         	call	___awmod	;wreg free
 18862  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18863  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18864  001736  0E0F               	movlw	15
 18865  001738  0100               	movlb	0	; () banked
 18866  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18867  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18868  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18869  001742  0E00               	movlw	0
 18870  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18871  001746  0E0A               	movlw	10
 18872  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18873  00174A  EC09  F026         	call	___awdiv	;wreg free
 18874  00174E  0100               	movlb	0	; () banked
 18875  001750  397D               	swapf	?___awdiv& (0+255),w,b
 18876  001752  0BF0               	andlw	240
 18877  001754  0BF0               	andlw	240
 18878  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18879  001758  6E98               	movwf	3992,c	;volatile
 18880                           
 18881                           ;rtcc_drv.c: 425: break;
 18882  00175A  0012               	return	
 18883  00175C                     l448:
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 18887  00175C  010F               	movlb	15	; () banked
 18888  00175E  933F               	bcf	63,1,b	;volatile
 18889                           
 18890                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 18891  001760  913F               	bcf	63,0,b	;volatile
 18892                           
 18893                           ; BSR set to: 15
 18894                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18895  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18896  001766  0100               	movlb	0	; () banked
 18897  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18898  00176A  0E00               	movlw	0
 18899  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18900  00176E  0E0A               	movlw	10
 18901  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 18902  001772  ECCF  F026         	call	___awmod	;wreg free
 18903  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18904  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18905  00177E  0E0F               	movlw	15
 18906  001780  0100               	movlb	0	; () banked
 18907  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18908  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18909  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18910  00178A  0E00               	movlw	0
 18911  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18912  00178E  0E0A               	movlw	10
 18913  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18914  001792  EC09  F026         	call	___awdiv	;wreg free
 18915  001796  0100               	movlb	0	; () banked
 18916  001798  397D               	swapf	?___awdiv& (0+255),w,b
 18917  00179A  0BF0               	andlw	240
 18918  00179C  0BF0               	andlw	240
 18919  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18920  0017A0  6E99               	movwf	3993,c	;volatile
 18921                           
 18922                           ;rtcc_drv.c: 433: break;
 18923  0017A2  0012               	return	
 18924  0017A4                     l449:
 18925                           
 18926                           ; BSR set to: 0
 18927                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 18928  0017A4  010F               	movlb	15	; () banked
 18929  0017A6  933F               	bcf	63,1,b	;volatile
 18930                           
 18931                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 18932  0017A8  913F               	bcf	63,0,b	;volatile
 18933                           
 18934                           ; BSR set to: 15
 18935                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18936  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18937  0017AE  0100               	movlb	0	; () banked
 18938  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18939  0017B2  0E00               	movlw	0
 18940  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18941  0017B6  0E0A               	movlw	10
 18942  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 18943  0017BA  ECCF  F026         	call	___awmod	;wreg free
 18944  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18945  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18946  0017C6  0E0F               	movlw	15
 18947  0017C8  0100               	movlb	0	; () banked
 18948  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18949  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18950  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18951  0017D2  0E00               	movlw	0
 18952  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18953  0017D6  0E0A               	movlw	10
 18954  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18955  0017DA  EC09  F026         	call	___awdiv	;wreg free
 18956  0017DE  0100               	movlb	0	; () banked
 18957  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 18958  0017E2  0BF0               	andlw	240
 18959  0017E4  0BF0               	andlw	240
 18960  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18961  0017E8  6E98               	movwf	3992,c	;volatile
 18962                           
 18963                           ; BSR set to: 0
 18964                           ;rtcc_drv.c: 445: }
 18965                           
 18966                           ; BSR set to: 0
 18967                           ;rtcc_drv.c: 444: break;
 18968                           
 18969                           ;rtcc_drv.c: 443: default:
 18970                           
 18971                           ;rtcc_drv.c: 441: break;
 18972  0017EA  0012               	return	
 18973  0017EC                     l441:
 18974                           
 18975                           ; BSR set to: 0
 18976  0017EC  0100               	movlb	0	; () banked
 18977  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 18978                           
 18979                           ; Switch size 1, requested type "space"
 18980                           ; Number of cases is 7, Range of values is 0 to 6
 18981                           ; switch strategies available:
 18982                           ; Name         Instructions Cycles
 18983                           ; simple_byte           22    12 (average)
 18984                           ;	Chosen strategy is simple_byte
 18985  0017F0  0A00               	xorlw	0	; case 0
 18986  0017F2  B4D8               	btfsc	status,2,c
 18987  0017F4  D6FF               	goto	l442
 18988  0017F6  0A01               	xorlw	1	; case 1
 18989  0017F8  B4D8               	btfsc	status,2,c
 18990  0017FA  D720               	goto	l444
 18991  0017FC  0A03               	xorlw	3	; case 2
 18992  0017FE  B4D8               	btfsc	status,2,c
 18993  001800  D741               	goto	l445
 18994  001802  0A01               	xorlw	1	; case 3
 18995  001804  B4D8               	btfsc	status,2,c
 18996  001806  D762               	goto	l446
 18997  001808  0A07               	xorlw	7	; case 4
 18998  00180A  B4D8               	btfsc	status,2,c
 18999  00180C  D783               	goto	l447
 19000  00180E  0A01               	xorlw	1	; case 5
 19001  001810  B4D8               	btfsc	status,2,c
 19002  001812  D7A4               	goto	l448
 19003  001814  0A03               	xorlw	3	; case 6
 19004  001816  A4D8               	btfss	status,2,c
 19005  001818  0012               	return	
 19006  00181A  D7C4               	goto	l449
 19007  00181C                     __end_of_Rtcc_SetRtccValue:
 19008                           	opt stack 0
 19009                           tosu	equ	0xFFF
 19010                           tosh	equ	0xFFE
 19011                           tosl	equ	0xFFD
 19012                           pclath	equ	0xFFA
 19013                           tblptru	equ	0xFF8
 19014                           tblptrh	equ	0xFF7
 19015                           tblptrl	equ	0xFF6
 19016                           tablat	equ	0xFF5
 19017                           prodh	equ	0xFF4
 19018                           prodl	equ	0xFF3
 19019                           intcon	equ	0xFF2
 19020                           intcon2	equ	0xFF1
 19021                           intcon3	equ	0xFF0
 19022                           indf0	equ	0xFEF
 19023                           postinc0	equ	0xFEE
 19024                           plusw0	equ	0xFEB
 19025                           fsr0h	equ	0xFEA
 19026                           fsr0l	equ	0xFE9
 19027                           wreg	equ	0xFE8
 19028                           indf1	equ	0xFE7
 19029                           postinc1	equ	0xFE6
 19030                           postdec1	equ	0xFE5
 19031                           fsr1h	equ	0xFE2
 19032                           fsr1l	equ	0xFE1
 19033                           indf2	equ	0xFDF
 19034                           postinc2	equ	0xFDE
 19035                           postdec2	equ	0xFDD
 19036                           plusw2	equ	0xFDB
 19037                           fsr2h	equ	0xFDA
 19038                           fsr2l	equ	0xFD9
 19039                           status	equ	0xFD8
 19040                           
 19041 ;; *************** function ___awmod *****************
 19042 ;; Defined at:
 19043 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19044 ;; Parameters:    Size  Location     Type
 19045 ;;  dividend        2   29[BANK0 ] int 
 19046 ;;  divisor         2   31[BANK0 ] int 
 19047 ;; Auto vars:     Size  Location     Type
 19048 ;;  sign            1   34[BANK0 ] unsigned char 
 19049 ;;  counter         1   33[BANK0 ] unsigned char 
 19050 ;; Return value:  Size  Location     Type
 19051 ;;                  2   29[BANK0 ] int 
 19052 ;; Registers used:
 19053 ;;		wreg, status,2, status,0
 19054 ;; Tracked objects:
 19055 ;;		On entry : 0/0
 19056 ;;		On exit  : 0/0
 19057 ;;		Unchanged: 0/0
 19058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19060 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19062 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19063 ;;Total ram usage:        6 bytes
 19064 ;; Hardware stack levels used:    1
 19065 ;; Hardware stack levels required when called:   11
 19066 ;; This function calls:
 19067 ;;		Nothing
 19068 ;; This function is called by:
 19069 ;;		_Rtcc_SetRtccValue
 19070 ;;		_Rtcc_SetRtccAlarm
 19071 ;; This function uses a non-reentrant model
 19072 ;;
 19073                           
 19074                           	psect	text81
 19075  004D9E                     __ptext81:
 19076                           	opt stack 0
 19077  004D9E                     ___awmod:
 19078                           	opt stack 14
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;incstack = 0
 19082  004D9E  0E00               	movlw	0
 19083  004DA0  0100               	movlb	0	; () banked
 19084  004DA2  6F82               	movwf	___awmod@sign& (0+255),b
 19085                           
 19086                           ; BSR set to: 0
 19087  004DA4  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19088  004DA6  D006               	goto	l2838
 19089                           
 19090                           ; BSR set to: 0
 19091  004DA8  6D7D               	negf	___awmod@dividend& (0+255),b
 19092  004DAA  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19093  004DAC  B0D8               	btfsc	status,0,c
 19094  004DAE  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19095                           
 19096                           ; BSR set to: 0
 19097  004DB0  0E01               	movlw	1
 19098  004DB2  6F82               	movwf	___awmod@sign& (0+255),b
 19099  004DB4                     l2838:
 19100                           
 19101                           ; BSR set to: 0
 19102                           
 19103                           ; BSR set to: 0
 19104  004DB4  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19105  004DB6  D004               	goto	l2839
 19106                           
 19107                           ; BSR set to: 0
 19108  004DB8  6D7F               	negf	___awmod@divisor& (0+255),b
 19109  004DBA  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19110  004DBC  B0D8               	btfsc	status,0,c
 19111  004DBE  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19112  004DC0                     l2839:
 19113                           
 19114                           ; BSR set to: 0
 19115                           
 19116                           ; BSR set to: 0
 19117  004DC0  517F               	movf	___awmod@divisor& (0+255),w,b
 19118  004DC2  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19119  004DC4  B4D8               	btfsc	status,2,c
 19120  004DC6  D018               	goto	l2846
 19121                           
 19122                           ; BSR set to: 0
 19123  004DC8  0E01               	movlw	1
 19124  004DCA  6F81               	movwf	___awmod@counter& (0+255),b
 19125  004DCC  D004               	goto	l2841
 19126  004DCE                     
 19127                           ; BSR set to: 0
 19128                           
 19129                           ; BSR set to: 0
 19130  004DCE  90D8               	bcf	status,0,c
 19131  004DD0  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19132  004DD2  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19133  004DD4  2B81               	incf	___awmod@counter& (0+255),f,b
 19134  004DD6                     l2841:
 19135                           
 19136                           ; BSR set to: 0
 19137                           
 19138                           ; BSR set to: 0
 19139  004DD6  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19140  004DD8  D7FA               	goto	l2842
 19141  004DDA                     u12110:
 19142                           
 19143                           ; BSR set to: 0
 19144                           
 19145                           ; BSR set to: 0
 19146                           
 19147                           ; BSR set to: 0
 19148  004DDA  517F               	movf	___awmod@divisor& (0+255),w,b
 19149  004DDC  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19150  004DDE  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19151  004DE0  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19152  004DE2  A0D8               	btfss	status,0,c
 19153  004DE4  D004               	goto	l2845
 19154                           
 19155                           ; BSR set to: 0
 19156  004DE6  517F               	movf	___awmod@divisor& (0+255),w,b
 19157  004DE8  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19158  004DEA  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19159  004DEC  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19160  004DEE                     l2845:
 19161                           
 19162                           ; BSR set to: 0
 19163                           
 19164                           ; BSR set to: 0
 19165  004DEE  90D8               	bcf	status,0,c
 19166  004DF0  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19167  004DF2  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19168                           
 19169                           ; BSR set to: 0
 19170  004DF4  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19171  004DF6  D7F1               	goto	u12110
 19172  004DF8                     l2846:
 19173                           
 19174                           ; BSR set to: 0
 19175                           
 19176                           ; BSR set to: 0
 19177                           
 19178                           ; BSR set to: 0
 19179  004DF8  5182               	movf	___awmod@sign& (0+255),w,b
 19180  004DFA  B4D8               	btfsc	status,2,c
 19181  004DFC  D004               	goto	l2847
 19182                           
 19183                           ; BSR set to: 0
 19184  004DFE  6D7D               	negf	___awmod@dividend& (0+255),b
 19185  004E00  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19186  004E02  B0D8               	btfsc	status,0,c
 19187  004E04  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19188  004E06                     l2847:
 19189                           
 19190                           ; BSR set to: 0
 19191                           
 19192                           ; BSR set to: 0
 19193  004E06  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19194  004E0A  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19195  004E0E  0012               	return	
 19196  004E10                     __end_of___awmod:
 19197                           	opt stack 0
 19198                           tosu	equ	0xFFF
 19199                           tosh	equ	0xFFE
 19200                           tosl	equ	0xFFD
 19201                           pclath	equ	0xFFA
 19202                           tblptru	equ	0xFF8
 19203                           tblptrh	equ	0xFF7
 19204                           tblptrl	equ	0xFF6
 19205                           tablat	equ	0xFF5
 19206                           prodh	equ	0xFF4
 19207                           prodl	equ	0xFF3
 19208                           intcon	equ	0xFF2
 19209                           intcon2	equ	0xFF1
 19210                           intcon3	equ	0xFF0
 19211                           indf0	equ	0xFEF
 19212                           postinc0	equ	0xFEE
 19213                           plusw0	equ	0xFEB
 19214                           fsr0h	equ	0xFEA
 19215                           fsr0l	equ	0xFE9
 19216                           wreg	equ	0xFE8
 19217                           indf1	equ	0xFE7
 19218                           postinc1	equ	0xFE6
 19219                           postdec1	equ	0xFE5
 19220                           fsr1h	equ	0xFE2
 19221                           fsr1l	equ	0xFE1
 19222                           indf2	equ	0xFDF
 19223                           postinc2	equ	0xFDE
 19224                           postdec2	equ	0xFDD
 19225                           plusw2	equ	0xFDB
 19226                           fsr2h	equ	0xFDA
 19227                           fsr2l	equ	0xFD9
 19228                           status	equ	0xFD8
 19229                           
 19230 ;; *************** function ___awdiv *****************
 19231 ;; Defined at:
 19232 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19233 ;; Parameters:    Size  Location     Type
 19234 ;;  dividend        2   29[BANK0 ] int 
 19235 ;;  divisor         2   31[BANK0 ] int 
 19236 ;; Auto vars:     Size  Location     Type
 19237 ;;  quotient        2   35[BANK0 ] int 
 19238 ;;  sign            1   34[BANK0 ] unsigned char 
 19239 ;;  counter         1   33[BANK0 ] unsigned char 
 19240 ;; Return value:  Size  Location     Type
 19241 ;;                  2   29[BANK0 ] int 
 19242 ;; Registers used:
 19243 ;;		wreg, status,2, status,0
 19244 ;; Tracked objects:
 19245 ;;		On entry : 0/0
 19246 ;;		On exit  : 0/0
 19247 ;;		Unchanged: 0/0
 19248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19250 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19252 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19253 ;;Total ram usage:        8 bytes
 19254 ;; Hardware stack levels used:    1
 19255 ;; Hardware stack levels required when called:   11
 19256 ;; This function calls:
 19257 ;;		Nothing
 19258 ;; This function is called by:
 19259 ;;		_Rtcc_SetRtccValue
 19260 ;;		_Rtcc_SetRtccAlarm
 19261 ;; This function uses a non-reentrant model
 19262 ;;
 19263                           
 19264                           	psect	text82
 19265  004C12                     __ptext82:
 19266                           	opt stack 0
 19267  004C12                     ___awdiv:
 19268                           	opt stack 14
 19269                           
 19270                           ; BSR set to: 0
 19271                           ;incstack = 0
 19272  004C12  0E00               	movlw	0
 19273  004C14  0100               	movlb	0	; () banked
 19274  004C16  6F82               	movwf	___awdiv@sign& (0+255),b
 19275                           
 19276                           ; BSR set to: 0
 19277  004C18  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19278  004C1A  D006               	goto	l2825
 19279                           
 19280                           ; BSR set to: 0
 19281  004C1C  6D7F               	negf	___awdiv@divisor& (0+255),b
 19282  004C1E  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19283  004C20  B0D8               	btfsc	status,0,c
 19284  004C22  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19285                           
 19286                           ; BSR set to: 0
 19287  004C24  0E01               	movlw	1
 19288  004C26  6F82               	movwf	___awdiv@sign& (0+255),b
 19289  004C28                     l2825:
 19290                           
 19291                           ; BSR set to: 0
 19292                           
 19293                           ; BSR set to: 0
 19294  004C28  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19295  004C2A  D006               	goto	l2826
 19296                           
 19297                           ; BSR set to: 0
 19298  004C2C  6D7D               	negf	___awdiv@dividend& (0+255),b
 19299  004C2E  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19300  004C30  B0D8               	btfsc	status,0,c
 19301  004C32  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19302                           
 19303                           ; BSR set to: 0
 19304  004C34  0E01               	movlw	1
 19305  004C36  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19306  004C38                     l2826:
 19307                           
 19308                           ; BSR set to: 0
 19309                           
 19310                           ; BSR set to: 0
 19311  004C38  0E00               	movlw	0
 19312  004C3A  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19313  004C3C  0E00               	movlw	0
 19314  004C3E  6F83               	movwf	___awdiv@quotient& (0+255),b
 19315                           
 19316                           ; BSR set to: 0
 19317  004C40  517F               	movf	___awdiv@divisor& (0+255),w,b
 19318  004C42  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19319  004C44  B4D8               	btfsc	status,2,c
 19320  004C46  D01C               	goto	l2833
 19321                           
 19322                           ; BSR set to: 0
 19323  004C48  0E01               	movlw	1
 19324  004C4A  6F81               	movwf	___awdiv@counter& (0+255),b
 19325  004C4C  D004               	goto	l2828
 19326  004C4E                     
 19327                           ; BSR set to: 0
 19328                           
 19329                           ; BSR set to: 0
 19330  004C4E  90D8               	bcf	status,0,c
 19331  004C50  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19332  004C52  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19333  004C54  2B81               	incf	___awdiv@counter& (0+255),f,b
 19334  004C56                     l2828:
 19335                           
 19336                           ; BSR set to: 0
 19337                           
 19338                           ; BSR set to: 0
 19339  004C56  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19340  004C58  D7FA               	goto	l2829
 19341  004C5A                     u12050:
 19342                           
 19343                           ; BSR set to: 0
 19344                           
 19345                           ; BSR set to: 0
 19346                           
 19347                           ; BSR set to: 0
 19348  004C5A  90D8               	bcf	status,0,c
 19349  004C5C  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19350  004C5E  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19351                           
 19352                           ; BSR set to: 0
 19353  004C60  517F               	movf	___awdiv@divisor& (0+255),w,b
 19354  004C62  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19355  004C64  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19356  004C66  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19357  004C68  A0D8               	btfss	status,0,c
 19358  004C6A  D005               	goto	l2832
 19359                           
 19360                           ; BSR set to: 0
 19361  004C6C  517F               	movf	___awdiv@divisor& (0+255),w,b
 19362  004C6E  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19363  004C70  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19364  004C72  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19365                           
 19366                           ; BSR set to: 0
 19367  004C74  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19368  004C76                     l2832:
 19369                           
 19370                           ; BSR set to: 0
 19371                           
 19372                           ; BSR set to: 0
 19373  004C76  90D8               	bcf	status,0,c
 19374  004C78  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19375  004C7A  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19376                           
 19377                           ; BSR set to: 0
 19378  004C7C  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19379  004C7E  D7ED               	goto	u12050
 19380  004C80                     l2833:
 19381                           
 19382                           ; BSR set to: 0
 19383                           
 19384                           ; BSR set to: 0
 19385                           
 19386                           ; BSR set to: 0
 19387  004C80  5182               	movf	___awdiv@sign& (0+255),w,b
 19388  004C82  B4D8               	btfsc	status,2,c
 19389  004C84  D004               	goto	l2834
 19390                           
 19391                           ; BSR set to: 0
 19392  004C86  6D83               	negf	___awdiv@quotient& (0+255),b
 19393  004C88  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19394  004C8A  B0D8               	btfsc	status,0,c
 19395  004C8C  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19396  004C8E                     l2834:
 19397                           
 19398                           ; BSR set to: 0
 19399                           
 19400                           ; BSR set to: 0
 19401  004C8E  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19402  004C92  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19403  004C96  0012               	return	
 19404  004C98                     __end_of___awdiv:
 19405                           	opt stack 0
 19406                           tosu	equ	0xFFF
 19407                           tosh	equ	0xFFE
 19408                           tosl	equ	0xFFD
 19409                           pclath	equ	0xFFA
 19410                           tblptru	equ	0xFF8
 19411                           tblptrh	equ	0xFF7
 19412                           tblptrl	equ	0xFF6
 19413                           tablat	equ	0xFF5
 19414                           prodh	equ	0xFF4
 19415                           prodl	equ	0xFF3
 19416                           intcon	equ	0xFF2
 19417                           intcon2	equ	0xFF1
 19418                           intcon3	equ	0xFF0
 19419                           indf0	equ	0xFEF
 19420                           postinc0	equ	0xFEE
 19421                           plusw0	equ	0xFEB
 19422                           fsr0h	equ	0xFEA
 19423                           fsr0l	equ	0xFE9
 19424                           wreg	equ	0xFE8
 19425                           indf1	equ	0xFE7
 19426                           postinc1	equ	0xFE6
 19427                           postdec1	equ	0xFE5
 19428                           fsr1h	equ	0xFE2
 19429                           fsr1l	equ	0xFE1
 19430                           indf2	equ	0xFDF
 19431                           postinc2	equ	0xFDE
 19432                           postdec2	equ	0xFDD
 19433                           plusw2	equ	0xFDB
 19434                           fsr2h	equ	0xFDA
 19435                           fsr2l	equ	0xFD9
 19436                           status	equ	0xFD8
 19437                           
 19438 ;; *************** function _Rtcc_LockRtc *****************
 19439 ;; Defined at:
 19440 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19441 ;; Parameters:    Size  Location     Type
 19442 ;;		None
 19443 ;; Auto vars:     Size  Location     Type
 19444 ;;		None
 19445 ;; Return value:  Size  Location     Type
 19446 ;;                  1    wreg      void 
 19447 ;; Registers used:
 19448 ;;		None
 19449 ;; Tracked objects:
 19450 ;;		On entry : 0/0
 19451 ;;		On exit  : 0/0
 19452 ;;		Unchanged: 0/0
 19453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19458 ;;Total ram usage:        0 bytes
 19459 ;; Hardware stack levels used:    1
 19460 ;; Hardware stack levels required when called:   11
 19461 ;; This function calls:
 19462 ;;		Nothing
 19463 ;; This function is called by:
 19464 ;;		_Rtcm_MainTask
 19465 ;;		_Rtcm_SetRtccDate
 19466 ;;		_Rtcm_SetRtccAlarm
 19467 ;; This function uses a non-reentrant model
 19468 ;;
 19469                           
 19470                           	psect	text83
 19471  006210                     __ptext83:
 19472                           	opt stack 0
 19473  006210                     _Rtcc_LockRtc:
 19474                           	opt stack 15
 19475                           
 19476                           ; BSR set to: 0
 19477                           ;incstack = 0
 19478  006210  010F               	movlb	15	;# 
 19479  006212  0E55               	movlw	85	;# 
 19480  006214  6EA7               	movwf	4007,c	;# 
 19481  006216  0EAA               	movlw	170	;# 
 19482  006218  6EA7               	movwf	4007,c	;# 
 19483                           
 19484                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19485  00621A  010F               	movlb	15	; () banked
 19486  00621C  9B3F               	bcf	63,5,b	;volatile
 19487                           
 19488                           ; BSR set to: 15
 19489  00621E  0012               	return		;funcret
 19490  006220                     __end_of_Rtcc_LockRtc:
 19491                           	opt stack 0
 19492                           tosu	equ	0xFFF
 19493                           tosh	equ	0xFFE
 19494                           tosl	equ	0xFFD
 19495                           pclath	equ	0xFFA
 19496                           tblptru	equ	0xFF8
 19497                           tblptrh	equ	0xFF7
 19498                           tblptrl	equ	0xFF6
 19499                           tablat	equ	0xFF5
 19500                           prodh	equ	0xFF4
 19501                           prodl	equ	0xFF3
 19502                           intcon	equ	0xFF2
 19503                           intcon2	equ	0xFF1
 19504                           intcon3	equ	0xFF0
 19505                           indf0	equ	0xFEF
 19506                           postinc0	equ	0xFEE
 19507                           plusw0	equ	0xFEB
 19508                           fsr0h	equ	0xFEA
 19509                           fsr0l	equ	0xFE9
 19510                           wreg	equ	0xFE8
 19511                           indf1	equ	0xFE7
 19512                           postinc1	equ	0xFE6
 19513                           postdec1	equ	0xFE5
 19514                           fsr1h	equ	0xFE2
 19515                           fsr1l	equ	0xFE1
 19516                           indf2	equ	0xFDF
 19517                           postinc2	equ	0xFDE
 19518                           postdec2	equ	0xFDD
 19519                           plusw2	equ	0xFDB
 19520                           fsr2h	equ	0xFDA
 19521                           fsr2l	equ	0xFD9
 19522                           status	equ	0xFD8
 19523                           
 19524 ;; *************** function _Rtcm_GetRtccDate *****************
 19525 ;; Defined at:
 19526 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19527 ;; Parameters:    Size  Location     Type
 19528 ;;		None
 19529 ;; Auto vars:     Size  Location     Type
 19530 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19531 ;; Return value:  Size  Location     Type
 19532 ;;                  8   33[BANK0 ] struct _RtccDateType
 19533 ;; Registers used:
 19534 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19535 ;; Tracked objects:
 19536 ;;		On entry : 0/0
 19537 ;;		On exit  : 0/0
 19538 ;;		Unchanged: 0/0
 19539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19540 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19541 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19543 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19544 ;;Total ram usage:       17 bytes
 19545 ;; Hardware stack levels used:    1
 19546 ;; Hardware stack levels required when called:   12
 19547 ;; This function calls:
 19548 ;;		_Rtcc_GetRtccValue
 19549 ;; This function is called by:
 19550 ;;		_Rtcm_MainTask
 19551 ;; This function uses a non-reentrant model
 19552 ;;
 19553                           
 19554                           	psect	text84
 19555  005030                     __ptext84:
 19556                           	opt stack 0
 19557  005030                     _Rtcm_GetRtccDate:
 19558                           	opt stack 15
 19559                           
 19560                           ;rtcm.c: 204: RtccDateType LocalDate;
 19561                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19562                           
 19563                           ; BSR set to: 15
 19564                           ;incstack = 0
 19565  005030  0E00               	movlw	0
 19566  005032  ECEA  F024         	call	_Rtcc_GetRtccValue
 19567  005036  0100               	movlb	0	; () banked
 19568  005038  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19569  00503A  0ED0               	movlw	208
 19570  00503C  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19571  00503E  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19572  005040  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19573  005042  0E07               	movlw	7
 19574  005044  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19575                           
 19576                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19577  005046  0E01               	movlw	1
 19578  005048  ECEA  F024         	call	_Rtcc_GetRtccValue
 19579  00504C  0100               	movlb	0	; () banked
 19580  00504E  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19581                           
 19582                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19583  005050  0E02               	movlw	2
 19584  005052  ECEA  F024         	call	_Rtcc_GetRtccValue
 19585  005056  0100               	movlb	0	; () banked
 19586  005058  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19587                           
 19588                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19589  00505A  0E03               	movlw	3
 19590  00505C  ECEA  F024         	call	_Rtcc_GetRtccValue
 19591  005060  0100               	movlb	0	; () banked
 19592  005062  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19593                           
 19594                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19595  005064  0E04               	movlw	4
 19596  005066  ECEA  F024         	call	_Rtcc_GetRtccValue
 19597  00506A  0100               	movlb	0	; () banked
 19598  00506C  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19599                           
 19600                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19601  00506E  0E05               	movlw	5
 19602  005070  ECEA  F024         	call	_Rtcc_GetRtccValue
 19603  005074  0100               	movlb	0	; () banked
 19604  005076  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19605                           
 19606                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19607  005078  0E06               	movlw	6
 19608  00507A  ECEA  F024         	call	_Rtcc_GetRtccValue
 19609  00507E  0100               	movlb	0	; () banked
 19610  005080  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;rtcm.c: 216: return LocalDate;
 19614  005082  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19615  005086  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19616  00508A  0E07               	movlw	7
 19617  00508C                     u14351:
 19618  00508C  CFDB FFEB          	movff	plusw2,plusw0
 19619  005090  06E8               	decf	wreg,f,c
 19620  005092  E2FC               	bc	u14351
 19621  005094  0012               	return	
 19622  005096                     __end_of_Rtcm_GetRtccDate:
 19623                           	opt stack 0
 19624                           tosu	equ	0xFFF
 19625                           tosh	equ	0xFFE
 19626                           tosl	equ	0xFFD
 19627                           pclath	equ	0xFFA
 19628                           tblptru	equ	0xFF8
 19629                           tblptrh	equ	0xFF7
 19630                           tblptrl	equ	0xFF6
 19631                           tablat	equ	0xFF5
 19632                           prodh	equ	0xFF4
 19633                           prodl	equ	0xFF3
 19634                           intcon	equ	0xFF2
 19635                           intcon2	equ	0xFF1
 19636                           intcon3	equ	0xFF0
 19637                           indf0	equ	0xFEF
 19638                           postinc0	equ	0xFEE
 19639                           plusw0	equ	0xFEB
 19640                           fsr0h	equ	0xFEA
 19641                           fsr0l	equ	0xFE9
 19642                           wreg	equ	0xFE8
 19643                           indf1	equ	0xFE7
 19644                           postinc1	equ	0xFE6
 19645                           postdec1	equ	0xFE5
 19646                           fsr1h	equ	0xFE2
 19647                           fsr1l	equ	0xFE1
 19648                           indf2	equ	0xFDF
 19649                           postinc2	equ	0xFDE
 19650                           postdec2	equ	0xFDD
 19651                           plusw2	equ	0xFDB
 19652                           fsr2h	equ	0xFDA
 19653                           fsr2l	equ	0xFD9
 19654                           status	equ	0xFD8
 19655                           
 19656 ;; *************** function _Rtcc_GetRtccValue *****************
 19657 ;; Defined at:
 19658 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19659 ;; Parameters:    Size  Location     Type
 19660 ;;  RtccPtrVal      1    wreg     enum E7757
 19661 ;; Auto vars:     Size  Location     Type
 19662 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19663 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19664 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19665 ;; Return value:  Size  Location     Type
 19666 ;;                  1    wreg      unsigned char 
 19667 ;; Registers used:
 19668 ;;		wreg, status,2, status,0, prodl, prodh
 19669 ;; Tracked objects:
 19670 ;;		On entry : 0/0
 19671 ;;		On exit  : 0/0
 19672 ;;		Unchanged: 0/0
 19673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19675 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19676 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19677 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19678 ;;Total ram usage:        4 bytes
 19679 ;; Hardware stack levels used:    1
 19680 ;; Hardware stack levels required when called:   11
 19681 ;; This function calls:
 19682 ;;		Nothing
 19683 ;; This function is called by:
 19684 ;;		_Rtcm_GetRtccDate
 19685 ;; This function uses a non-reentrant model
 19686 ;;
 19687                           
 19688                           	psect	text85
 19689  0049D4                     __ptext85:
 19690                           	opt stack 0
 19691  0049D4                     _Rtcc_GetRtccValue:
 19692                           	opt stack 15
 19693                           
 19694                           ; BSR set to: 0
 19695                           ;incstack = 0
 19696                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19697  0049D4  0100               	movlb	0	; () banked
 19698  0049D6  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19699                           
 19700                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19701                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19702                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19703  0049D8  D02D               	goto	l416
 19704  0049DA                     l417:
 19705                           
 19706                           ; BSR set to: 0
 19707                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19708  0049DA  010F               	movlb	15	; () banked
 19709  0049DC  833F               	bsf	63,1,b	;volatile
 19710  0049DE                     
 19711                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19712  0049DE  813F               	bsf	63,0,b	;volatile
 19713  0049E0  D01C               	goto	L18
 19714  0049E2                     l419:
 19715                           
 19716                           ; BSR set to: 0
 19717                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19718  0049E2  010F               	movlb	15	; () banked
 19719  0049E4  833F               	bsf	63,1,b	;volatile
 19720  0049E6  D01E               	goto	L19
 19721  0049E8                     l420:
 19722                           
 19723                           ; BSR set to: 0
 19724                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19725  0049E8  010F               	movlb	15	; () banked
 19726  0049EA  833F               	bsf	63,1,b	;volatile
 19727  0049EC  D021               	goto	L22
 19728  0049EE                     l13187:
 19729                           
 19730                           ; BSR set to: 15
 19731                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19732  0049EE  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19733  0049F2  0E0F               	movlw	15
 19734  0049F4  0100               	movlb	0	; () banked
 19735  0049F6  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19736  0049F8  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19737  0049FA  0B0F               	andlw	15
 19738  0049FC  0B0F               	andlw	15
 19739  0049FE  0D0A               	mullw	10
 19740  004A00  50F3               	movf	prodl,w,c
 19741  004A02  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19742  004A04  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19743                           
 19744                           ;rtcc_drv.c: 241: break;
 19745  004A06  D02D               	goto	l418
 19746  004A08                     l421:
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19750  004A08  010F               	movlb	15	; () banked
 19751  004A0A  933F               	bcf	63,1,b	;volatile
 19752                           
 19753                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19754  004A0C  813F               	bsf	63,0,b	;volatile
 19755                           
 19756                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19757  004A0E  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19758                           
 19759                           ;rtcc_drv.c: 249: break;
 19760  004A12  D027               	goto	l418
 19761  004A14                     l422:
 19762                           
 19763                           ; BSR set to: 0
 19764                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19765  004A14  010F               	movlb	15	; () banked
 19766  004A16  933F               	bcf	63,1,b	;volatile
 19767  004A18  D7E2               	goto	L20
 19768  004A1A                     L18:
 19769                           
 19770                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19771  004A1A  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19772  004A1E  D7E7               	goto	l13187
 19773  004A20                     l423:
 19774                           
 19775                           ; BSR set to: 0
 19776                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19777  004A20  010F               	movlb	15	; () banked
 19778  004A22  933F               	bcf	63,1,b	;volatile
 19779  004A24                     L19:
 19780                           
 19781                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19782  004A24  913F               	bcf	63,0,b	;volatile
 19783                           
 19784                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19785  004A26  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19786  004A2A  D7E1               	goto	l13187
 19787  004A2C                     l424:
 19788                           
 19789                           ; BSR set to: 0
 19790                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19791  004A2C  010F               	movlb	15	; () banked
 19792  004A2E  933F               	bcf	63,1,b	;volatile
 19793  004A30                     L22:
 19794                           
 19795                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19796  004A30  913F               	bcf	63,0,b	;volatile
 19797  004A32  D7F3               	goto	L18
 19798  004A34                     l416:
 19799                           
 19800                           ; BSR set to: 0
 19801  004A34  0100               	movlb	0	; () banked
 19802  004A36  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19803                           
 19804                           ; Switch size 1, requested type "space"
 19805                           ; Number of cases is 7, Range of values is 0 to 6
 19806                           ; switch strategies available:
 19807                           ; Name         Instructions Cycles
 19808                           ; simple_byte           22    12 (average)
 19809                           ;	Chosen strategy is simple_byte
 19810  004A38  0A00               	xorlw	0	; case 0
 19811  004A3A  B4D8               	btfsc	status,2,c
 19812  004A3C  D7CE               	goto	l417
 19813  004A3E  0A01               	xorlw	1	; case 1
 19814  004A40  B4D8               	btfsc	status,2,c
 19815  004A42  D7CF               	goto	l419
 19816  004A44  0A03               	xorlw	3	; case 2
 19817  004A46  B4D8               	btfsc	status,2,c
 19818  004A48  D7CF               	goto	l420
 19819  004A4A  0A01               	xorlw	1	; case 3
 19820  004A4C  B4D8               	btfsc	status,2,c
 19821  004A4E  D7DC               	goto	l421
 19822  004A50  0A07               	xorlw	7	; case 4
 19823  004A52  B4D8               	btfsc	status,2,c
 19824  004A54  D7DF               	goto	l422
 19825  004A56  0A01               	xorlw	1	; case 5
 19826  004A58  B4D8               	btfsc	status,2,c
 19827  004A5A  D7E2               	goto	l423
 19828  004A5C  0A03               	xorlw	3	; case 6
 19829  004A5E  B4D8               	btfsc	status,2,c
 19830  004A60  D7E5               	goto	l424
 19831  004A62                     l418:
 19832                           
 19833                           ;rtcc_drv.c: 286: return RetValue;
 19834                           
 19835                           ; BSR set to: 0
 19836  004A62  0100               	movlb	0	; () banked
 19837  004A64  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 19838  004A66  0012               	return	
 19839  004A68                     __end_of_Rtcc_GetRtccValue:
 19840                           	opt stack 0
 19841                           tosu	equ	0xFFF
 19842                           tosh	equ	0xFFE
 19843                           tosl	equ	0xFFD
 19844                           pclath	equ	0xFFA
 19845                           tblptru	equ	0xFF8
 19846                           tblptrh	equ	0xFF7
 19847                           tblptrl	equ	0xFF6
 19848                           tablat	equ	0xFF5
 19849                           prodh	equ	0xFF4
 19850                           prodl	equ	0xFF3
 19851                           intcon	equ	0xFF2
 19852                           intcon2	equ	0xFF1
 19853                           intcon3	equ	0xFF0
 19854                           indf0	equ	0xFEF
 19855                           postinc0	equ	0xFEE
 19856                           plusw0	equ	0xFEB
 19857                           fsr0h	equ	0xFEA
 19858                           fsr0l	equ	0xFE9
 19859                           wreg	equ	0xFE8
 19860                           indf1	equ	0xFE7
 19861                           postinc1	equ	0xFE6
 19862                           postdec1	equ	0xFE5
 19863                           fsr1h	equ	0xFE2
 19864                           fsr1l	equ	0xFE1
 19865                           indf2	equ	0xFDF
 19866                           postinc2	equ	0xFDE
 19867                           postdec2	equ	0xFDD
 19868                           plusw2	equ	0xFDB
 19869                           fsr2h	equ	0xFDA
 19870                           fsr2l	equ	0xFD9
 19871                           status	equ	0xFD8
 19872                           
 19873 ;; *************** function _Rtcc_SetRtcStatus *****************
 19874 ;; Defined at:
 19875 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19876 ;; Parameters:    Size  Location     Type
 19877 ;;  Status          1    wreg     unsigned char 
 19878 ;; Auto vars:     Size  Location     Type
 19879 ;;  Status          1   29[BANK0 ] unsigned char 
 19880 ;; Return value:  Size  Location     Type
 19881 ;;                  1    wreg      void 
 19882 ;; Registers used:
 19883 ;;		wreg
 19884 ;; Tracked objects:
 19885 ;;		On entry : 0/0
 19886 ;;		On exit  : 0/0
 19887 ;;		Unchanged: 0/0
 19888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19893 ;;Total ram usage:        1 bytes
 19894 ;; Hardware stack levels used:    1
 19895 ;; Hardware stack levels required when called:   11
 19896 ;; This function calls:
 19897 ;;		Nothing
 19898 ;; This function is called by:
 19899 ;;		_Rtcm_MainTask
 19900 ;; This function uses a non-reentrant model
 19901 ;;
 19902                           
 19903                           	psect	text86
 19904  00615E                     __ptext86:
 19905                           	opt stack 0
 19906  00615E                     _Rtcc_SetRtcStatus:
 19907                           	opt stack 16
 19908                           
 19909                           ; BSR set to: 0
 19910                           ;incstack = 0
 19911                           ;Rtcc_SetRtcStatus@Status stored from wreg
 19912  00615E  0100               	movlb	0	; () banked
 19913  006160  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 19914                           
 19915                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 19916  006162  0100               	movlb	0	; () banked
 19917  006164  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 19918  006166  D003               	bra	u13265
 19919  006168  010F               	movlb	15	; () banked
 19920  00616A  9F3F               	bcf	63,7,b	;volatile
 19921  00616C  D002               	bra	u13266
 19922  00616E                     u13265:
 19923  00616E  010F               	movlb	15	; () banked
 19924  006170  8F3F               	bsf	63,7,b	;volatile
 19925  006172                     u13266:
 19926                           
 19927                           ; BSR set to: 15
 19928  006172  0012               	return		;funcret
 19929  006174                     __end_of_Rtcc_SetRtcStatus:
 19930                           	opt stack 0
 19931                           tosu	equ	0xFFF
 19932                           tosh	equ	0xFFE
 19933                           tosl	equ	0xFFD
 19934                           pclath	equ	0xFFA
 19935                           tblptru	equ	0xFF8
 19936                           tblptrh	equ	0xFF7
 19937                           tblptrl	equ	0xFF6
 19938                           tablat	equ	0xFF5
 19939                           prodh	equ	0xFF4
 19940                           prodl	equ	0xFF3
 19941                           intcon	equ	0xFF2
 19942                           intcon2	equ	0xFF1
 19943                           intcon3	equ	0xFF0
 19944                           indf0	equ	0xFEF
 19945                           postinc0	equ	0xFEE
 19946                           plusw0	equ	0xFEB
 19947                           fsr0h	equ	0xFEA
 19948                           fsr0l	equ	0xFE9
 19949                           wreg	equ	0xFE8
 19950                           indf1	equ	0xFE7
 19951                           postinc1	equ	0xFE6
 19952                           postdec1	equ	0xFE5
 19953                           fsr1h	equ	0xFE2
 19954                           fsr1l	equ	0xFE1
 19955                           indf2	equ	0xFDF
 19956                           postinc2	equ	0xFDE
 19957                           postdec2	equ	0xFDD
 19958                           plusw2	equ	0xFDB
 19959                           fsr2h	equ	0xFDA
 19960                           fsr2l	equ	0xFD9
 19961                           status	equ	0xFD8
 19962                           
 19963 ;; *************** function _Rtcc_RtcConfig *****************
 19964 ;; Defined at:
 19965 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19966 ;; Parameters:    Size  Location     Type
 19967 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 19968 ;;		 -> RtcConfig(4), 
 19969 ;; Auto vars:     Size  Location     Type
 19970 ;;		None
 19971 ;; Return value:  Size  Location     Type
 19972 ;;                  1    wreg      void 
 19973 ;; Registers used:
 19974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19975 ;; Tracked objects:
 19976 ;;		On entry : 0/0
 19977 ;;		On exit  : 0/0
 19978 ;;		Unchanged: 0/0
 19979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19980 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19983 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19984 ;;Total ram usage:        3 bytes
 19985 ;; Hardware stack levels used:    1
 19986 ;; Hardware stack levels required when called:   12
 19987 ;; This function calls:
 19988 ;;		_RtccIrqInit
 19989 ;; This function is called by:
 19990 ;;		_Rtcm_MainTask
 19991 ;; This function uses a non-reentrant model
 19992 ;;
 19993                           
 19994                           	psect	text87
 19995  0045A0                     __ptext87:
 19996                           	opt stack 0
 19997  0045A0                     _Rtcc_RtcConfig:
 19998                           	opt stack 15
 19999                           
 20000                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20001                           
 20002                           ; BSR set to: 15
 20003                           ;incstack = 0
 20004  0045A0  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20005  0045A4  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20006  0045A8  50DF               	movf	indf2,w,c
 20007  0045AA  0100               	movlb	0	; () banked
 20008  0045AC  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20009  0045AE  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20010  0045B0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20011  0045B2  010F               	movlb	15	; () banked
 20012  0045B4  513F               	movf	63,w,b	;volatile
 20013  0045B6  0100               	movlb	0	; () banked
 20014  0045B8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20015  0045BA  0BFB               	andlw	-5
 20016  0045BC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20017  0045BE  010F               	movlb	15	; () banked
 20018  0045C0  6F3F               	movwf	63,b	;volatile
 20019                           
 20020                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20021  0045C2  0100               	movlb	0	; () banked
 20022  0045C4  EE20 F001          	lfsr	2,1
 20023  0045C8  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20024  0045CA  26D9               	addwf	fsr2l,f,c
 20025  0045CC  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20026  0045CE  22DA               	addwfc	fsr2h,f,c
 20027  0045D0  50DF               	movf	indf2,w,c
 20028  0045D2  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20029  0045D4  0E01               	movlw	1
 20030  0045D6  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20031  0045D8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20032  0045DA  010F               	movlb	15	; () banked
 20033  0045DC  513C               	movf	60,w,b	;volatile
 20034  0045DE  0100               	movlb	0	; () banked
 20035  0045E0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20036  0045E2  0BFD               	andlw	-3
 20037  0045E4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20038  0045E6  010F               	movlb	15	; () banked
 20039  0045E8  6F3C               	movwf	60,b	;volatile
 20040                           
 20041                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20042  0045EA  0100               	movlb	0	; () banked
 20043  0045EC  EE20 F001          	lfsr	2,1
 20044  0045F0  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20045  0045F2  26D9               	addwf	fsr2l,f,c
 20046  0045F4  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20047  0045F6  22DA               	addwfc	fsr2h,f,c
 20048  0045F8  50DF               	movf	indf2,w,c
 20049  0045FA  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20050  0045FC  90D8               	bcf	status,0,c
 20051  0045FE  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20052  004600  0E01               	movlw	1
 20053  004602  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20054  004604  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20055  004606  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20056  004608  010F               	movlb	15	; () banked
 20057  00460A  513C               	movf	60,w,b	;volatile
 20058  00460C  0100               	movlb	0	; () banked
 20059  00460E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20060  004610  0BFB               	andlw	-5
 20061  004612  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20062  004614  010F               	movlb	15	; () banked
 20063  004616  6F3C               	movwf	60,b	;volatile
 20064                           
 20065                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20066  004618  0100               	movlb	0	; () banked
 20067  00461A  EE20 F002          	lfsr	2,2
 20068  00461E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20069  004620  26D9               	addwf	fsr2l,f,c
 20070  004622  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20071  004624  22DA               	addwfc	fsr2h,f,c
 20072  004626  04DE               	decf	postinc2,w,c
 20073  004628  A4D8               	btfss	status,2,c
 20074  00462A  0012               	return	
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;rtcc_drv.c: 115: {
 20078                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20079  00462C  EE20 F003          	lfsr	2,3
 20080  004630  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20081  004632  26D9               	addwf	fsr2l,f,c
 20082  004634  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20083  004636  22DA               	addwfc	fsr2h,f,c
 20084  004638  50DF               	movf	indf2,w,c
 20085  00463A  ECBA  F030         	call	_RtccIrqInit
 20086  00463E  0012               	return	
 20087  004640                     __end_of_Rtcc_RtcConfig:
 20088                           	opt stack 0
 20089                           tosu	equ	0xFFF
 20090                           tosh	equ	0xFFE
 20091                           tosl	equ	0xFFD
 20092                           pclath	equ	0xFFA
 20093                           tblptru	equ	0xFF8
 20094                           tblptrh	equ	0xFF7
 20095                           tblptrl	equ	0xFF6
 20096                           tablat	equ	0xFF5
 20097                           prodh	equ	0xFF4
 20098                           prodl	equ	0xFF3
 20099                           intcon	equ	0xFF2
 20100                           intcon2	equ	0xFF1
 20101                           intcon3	equ	0xFF0
 20102                           indf0	equ	0xFEF
 20103                           postinc0	equ	0xFEE
 20104                           plusw0	equ	0xFEB
 20105                           fsr0h	equ	0xFEA
 20106                           fsr0l	equ	0xFE9
 20107                           wreg	equ	0xFE8
 20108                           indf1	equ	0xFE7
 20109                           postinc1	equ	0xFE6
 20110                           postdec1	equ	0xFE5
 20111                           fsr1h	equ	0xFE2
 20112                           fsr1l	equ	0xFE1
 20113                           indf2	equ	0xFDF
 20114                           postinc2	equ	0xFDE
 20115                           postdec2	equ	0xFDD
 20116                           plusw2	equ	0xFDB
 20117                           fsr2h	equ	0xFDA
 20118                           fsr2l	equ	0xFD9
 20119                           status	equ	0xFD8
 20120                           
 20121 ;; *************** function _RtccIrqInit *****************
 20122 ;; Defined at:
 20123 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20124 ;; Parameters:    Size  Location     Type
 20125 ;;  Priority        1    wreg     enum E7716
 20126 ;; Auto vars:     Size  Location     Type
 20127 ;;  Priority        1   29[BANK0 ] enum E7716
 20128 ;; Return value:  Size  Location     Type
 20129 ;;                  1    wreg      void 
 20130 ;; Registers used:
 20131 ;;		wreg
 20132 ;; Tracked objects:
 20133 ;;		On entry : 0/0
 20134 ;;		On exit  : 0/0
 20135 ;;		Unchanged: 0/0
 20136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20140 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20141 ;;Total ram usage:        1 bytes
 20142 ;; Hardware stack levels used:    1
 20143 ;; Hardware stack levels required when called:   11
 20144 ;; This function calls:
 20145 ;;		Nothing
 20146 ;; This function is called by:
 20147 ;;		_Rtcc_RtcConfig
 20148 ;; This function uses a non-reentrant model
 20149 ;;
 20150                           
 20151                           	psect	text88
 20152  006174                     __ptext88:
 20153                           	opt stack 0
 20154  006174                     _RtccIrqInit:
 20155                           	opt stack 15
 20156                           
 20157                           ;incstack = 0
 20158                           ;RtccIrqInit@Priority stored from wreg
 20159  006174  0100               	movlb	0	; () banked
 20160  006176  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20161                           
 20162                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20163  006178  90A4               	bcf	4004,0,c	;volatile
 20164                           
 20165                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20166  00617A  0100               	movlb	0	; () banked
 20167  00617C  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20168  00617E  D002               	bra	u12265
 20169  006180  90A5               	bcf	4005,0,c	;volatile
 20170  006182  D001               	bra	u12266
 20171  006184                     u12265:
 20172  006184  80A5               	bsf	4005,0,c	;volatile
 20173  006186                     u12266:
 20174                           
 20175                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20176  006186  80A3               	bsf	4003,0,c	;volatile
 20177  006188  0012               	return		;funcret
 20178  00618A                     __end_of_RtccIrqInit:
 20179                           	opt stack 0
 20180                           tosu	equ	0xFFF
 20181                           tosh	equ	0xFFE
 20182                           tosl	equ	0xFFD
 20183                           pclath	equ	0xFFA
 20184                           tblptru	equ	0xFF8
 20185                           tblptrh	equ	0xFF7
 20186                           tblptrl	equ	0xFF6
 20187                           tablat	equ	0xFF5
 20188                           prodh	equ	0xFF4
 20189                           prodl	equ	0xFF3
 20190                           intcon	equ	0xFF2
 20191                           intcon2	equ	0xFF1
 20192                           intcon3	equ	0xFF0
 20193                           indf0	equ	0xFEF
 20194                           postinc0	equ	0xFEE
 20195                           plusw0	equ	0xFEB
 20196                           fsr0h	equ	0xFEA
 20197                           fsr0l	equ	0xFE9
 20198                           wreg	equ	0xFE8
 20199                           indf1	equ	0xFE7
 20200                           postinc1	equ	0xFE6
 20201                           postdec1	equ	0xFE5
 20202                           fsr1h	equ	0xFE2
 20203                           fsr1l	equ	0xFE1
 20204                           indf2	equ	0xFDF
 20205                           postinc2	equ	0xFDE
 20206                           postdec2	equ	0xFDD
 20207                           plusw2	equ	0xFDB
 20208                           fsr2h	equ	0xFDA
 20209                           fsr2l	equ	0xFD9
 20210                           status	equ	0xFD8
 20211                           
 20212 ;; *************** function _Rtcc_AlarmConfig *****************
 20213 ;; Defined at:
 20214 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20215 ;; Parameters:    Size  Location     Type
 20216 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20217 ;;		 -> AlCfg(4), 
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;		None
 20220 ;; Return value:  Size  Location     Type
 20221 ;;                  1    wreg      void 
 20222 ;; Registers used:
 20223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20224 ;; Tracked objects:
 20225 ;;		On entry : 0/0
 20226 ;;		On exit  : 0/0
 20227 ;;		Unchanged: 0/0
 20228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20232 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20233 ;;Total ram usage:        3 bytes
 20234 ;; Hardware stack levels used:    1
 20235 ;; Hardware stack levels required when called:   11
 20236 ;; This function calls:
 20237 ;;		Nothing
 20238 ;; This function is called by:
 20239 ;;		_Rtcm_MainTask
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           	psect	text89
 20244  004F5E                     __ptext89:
 20245                           	opt stack 0
 20246  004F5E                     _Rtcc_AlarmConfig:
 20247                           	opt stack 16
 20248                           
 20249                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20250                           
 20251                           ;incstack = 0
 20252  004F5E  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20253  004F62  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20254  004F66  50DF               	movf	indf2,w,c
 20255  004F68  0100               	movlb	0	; () banked
 20256  004F6A  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20257  004F6C  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20258  004F6E  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20259  004F70  5091               	movf	3985,w,c	;volatile
 20260  004F72  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20261  004F74  0B7F               	andlw	-129
 20262  004F76  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20263  004F78  6E91               	movwf	3985,c	;volatile
 20264                           
 20265                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20266  004F7A  EE20 F001          	lfsr	2,1
 20267  004F7E  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20268  004F80  26D9               	addwf	fsr2l,f,c
 20269  004F82  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20270  004F84  22DA               	addwfc	fsr2h,f,c
 20271  004F86  50DF               	movf	indf2,w,c
 20272  004F88  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20273  004F8A  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20274  004F8C  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20275  004F8E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20276  004F90  5091               	movf	3985,w,c	;volatile
 20277  004F92  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20278  004F94  0BBF               	andlw	-65
 20279  004F96  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20280  004F98  6E91               	movwf	3985,c	;volatile
 20281                           
 20282                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20283  004F9A  EE20 F002          	lfsr	2,2
 20284  004F9E  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20285  004FA0  26D9               	addwf	fsr2l,f,c
 20286  004FA2  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20287  004FA4  22DA               	addwfc	fsr2h,f,c
 20288  004FA6  50DF               	movf	indf2,w,c
 20289  004FA8  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20290  004FAA  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20291  004FAC  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20292  004FAE  5091               	movf	3985,w,c	;volatile
 20293  004FB0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20294  004FB2  0BC3               	andlw	-61
 20295  004FB4  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20296  004FB6  6E91               	movwf	3985,c	;volatile
 20297                           
 20298                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20299  004FB8  EE20 F003          	lfsr	2,3
 20300  004FBC  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20301  004FBE  26D9               	addwf	fsr2l,f,c
 20302  004FC0  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20303  004FC2  22DA               	addwfc	fsr2h,f,c
 20304  004FC4  50DF               	movf	indf2,w,c
 20305  004FC6  6E90               	movwf	3984,c	;volatile
 20306                           
 20307                           ; BSR set to: 0
 20308  004FC8  0012               	return		;funcret
 20309  004FCA                     __end_of_Rtcc_AlarmConfig:
 20310                           	opt stack 0
 20311                           tosu	equ	0xFFF
 20312                           tosh	equ	0xFFE
 20313                           tosl	equ	0xFFD
 20314                           pclath	equ	0xFFA
 20315                           tblptru	equ	0xFF8
 20316                           tblptrh	equ	0xFF7
 20317                           tblptrl	equ	0xFF6
 20318                           tablat	equ	0xFF5
 20319                           prodh	equ	0xFF4
 20320                           prodl	equ	0xFF3
 20321                           intcon	equ	0xFF2
 20322                           intcon2	equ	0xFF1
 20323                           intcon3	equ	0xFF0
 20324                           indf0	equ	0xFEF
 20325                           postinc0	equ	0xFEE
 20326                           plusw0	equ	0xFEB
 20327                           fsr0h	equ	0xFEA
 20328                           fsr0l	equ	0xFE9
 20329                           wreg	equ	0xFE8
 20330                           indf1	equ	0xFE7
 20331                           postinc1	equ	0xFE6
 20332                           postdec1	equ	0xFE5
 20333                           fsr1h	equ	0xFE2
 20334                           fsr1l	equ	0xFE1
 20335                           indf2	equ	0xFDF
 20336                           postinc2	equ	0xFDE
 20337                           postdec2	equ	0xFDD
 20338                           plusw2	equ	0xFDB
 20339                           fsr2h	equ	0xFDA
 20340                           fsr2l	equ	0xFD9
 20341                           status	equ	0xFD8
 20342                           
 20343 ;; *************** function _initGprsModem *****************
 20344 ;; Defined at:
 20345 ;;		line 109 in file "../Source/c/04_App/app.c"
 20346 ;; Parameters:    Size  Location     Type
 20347 ;;		None
 20348 ;; Auto vars:     Size  Location     Type
 20349 ;;		None
 20350 ;; Return value:  Size  Location     Type
 20351 ;;                  1    wreg      unsigned char 
 20352 ;; Registers used:
 20353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20354 ;; Tracked objects:
 20355 ;;		On entry : 0/0
 20356 ;;		On exit  : 0/0
 20357 ;;		Unchanged: 0/0
 20358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20363 ;;Total ram usage:        0 bytes
 20364 ;; Hardware stack levels used:    1
 20365 ;; Hardware stack levels required when called:   14
 20366 ;; This function calls:
 20367 ;;		_Led_SetLedStatus
 20368 ;;		_Mdm_SetSmsFormat
 20369 ;;		_Uart_WriteConstString
 20370 ;;		_secondsAppTimer
 20371 ;; This function is called by:
 20372 ;;		_MyApp_Task
 20373 ;; This function uses a non-reentrant model
 20374 ;;
 20375                           
 20376                           	psect	text90
 20377  0046DE                     __ptext90:
 20378                           	opt stack 0
 20379  0046DE                     _initGprsModem:
 20380                           	opt stack 13
 20381                           
 20382                           ;app.c: 111: static uint16_t modemCounter = 0;
 20383                           ;app.c: 112: static bool isInitialized = 0;
 20384                           ;app.c: 113: static uint8_t initMdm = 0;
 20385                           ;app.c: 115: switch(initMdm)
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;incstack = 0
 20389  0046DE  D040               	goto	l2553
 20390  0046E0                     
 20391                           ;app.c: 118: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20392  0046E0  0E03               	movlw	3
 20393  0046E2  0100               	movlb	0	; () banked
 20394  0046E4  19D1               	xorwf	_MdmStatus& (0+255),w,b
 20395  0046E6  B4D8               	btfsc	status,2,c
 20396  0046E8  D003               	goto	u14450
 20397                           
 20398                           ; BSR set to: 0
 20399  0046EA  05D1               	decf	_MdmStatus& (0+255),w,b
 20400  0046EC  A4D8               	btfss	status,2,c
 20401  0046EE  D043               	goto	l2559
 20402  0046F0                     u14450:
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;app.c: 119: {
 20406                           ;app.c: 120: if (secondsAppTimer(5, &modemCounter, 0))
 20407                           
 20408                           ; BSR set to: 0
 20409  0046F0  0EB8               	movlw	low initGprsModem@modemCounter
 20410  0046F2  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20411  0046F4  0E03               	movlw	high initGprsModem@modemCounter
 20412  0046F6  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20413  0046F8  0E00               	movlw	0
 20414  0046FA  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20415  0046FC  0E05               	movlw	5
 20416  0046FE  EC7F  F022         	call	_secondsAppTimer
 20417  004702  0900               	iorlw	0
 20418  004704  B4D8               	btfsc	status,2,c
 20419  004706  D037               	goto	l2559
 20420                           
 20421                           ;app.c: 121: {
 20422                           ;app.c: 122: Mdm_SetSmsFormat(1);
 20423  004708  0E01               	movlw	1
 20424  00470A  EC03  F02B         	call	_Mdm_SetSmsFormat
 20425                           
 20426                           ;app.c: 123: Led_SetLedStatus(1u, LED_STS_ON);
 20427  00470E  0E01               	movlw	1
 20428  004710  0100               	movlb	0	; () banked
 20429  004712  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20430  004714  0E01               	movlw	1
 20431  004716  ECB0  F02E         	call	_Led_SetLedStatus
 20432                           
 20433                           ;app.c: 124: initMdm = 1;
 20434  00471A  0E01               	movlw	1
 20435  00471C  D009               	goto	L23
 20436  00471E                     
 20437                           ; BSR set to: 1
 20438                           ;app.c: 129: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 20439                           
 20440                           ; BSR set to: 1
 20441  00471E  0E07               	movlw	low STR_29
 20442  004720  0100               	movlb	0	; () banked
 20443  004722  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20444  004724  0EFF               	movlw	high STR_29
 20445  004726  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20446  004728  0E01               	movlw	1
 20447  00472A  EC91  F02C         	call	_Uart_WriteConstString
 20448                           
 20449                           ;app.c: 130: initMdm = 2;
 20450  00472E  0E02               	movlw	2
 20451  004730                     L23:
 20452  004730  0101               	movlb	1	; () banked
 20453  004732  6FD6               	movwf	initGprsModem@initMdm& (0+255),b
 20454                           
 20455                           ;app.c: 131: break;
 20456  004734  D020               	goto	l2559
 20457  004736                     
 20458                           ; BSR set to: 1
 20459                           ;app.c: 133: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 20460                           
 20461                           ; BSR set to: 1
 20462  004736  0EA9               	movlw	low STR_30
 20463  004738  0100               	movlb	0	; () banked
 20464  00473A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20465  00473C  0EFF               	movlw	high STR_30
 20466  00473E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20467  004740  0E01               	movlw	1
 20468  004742  EC91  F02C         	call	_Uart_WriteConstString
 20469                           
 20470                           ;app.c: 134: initMdm = 3;
 20471  004746  0E03               	movlw	3
 20472  004748  0101               	movlb	1	; () banked
 20473  00474A  6FD6               	movwf	initGprsModem@initMdm& (0+255),b
 20474                           
 20475                           ; BSR set to: 1
 20476                           ;app.c: 135: Led_SetLedStatus(1u, LED_STS_ON);
 20477  00474C  0E01               	movlw	1
 20478  00474E  0100               	movlb	0	; () banked
 20479  004750  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20480  004752  0E01               	movlw	1
 20481  004754  ECB0  F02E         	call	_Led_SetLedStatus
 20482                           
 20483                           ;app.c: 136: isInitialized = 1;
 20484  004758  0E01               	movlw	1
 20485  00475A  0101               	movlb	1	; () banked
 20486  00475C  6FD7               	movwf	initGprsModem@isInitialized& (0+255),b
 20487                           
 20488                           ; BSR set to: 1
 20489                           ;app.c: 140: }
 20490                           
 20491                           ; BSR set to: 1
 20492                           ;app.c: 139: break;
 20493                           
 20494                           ;app.c: 138: default:
 20495                           
 20496                           ;app.c: 137: break;
 20497  00475E  D00B               	goto	l2559
 20498  004760                     l2553:
 20499                           
 20500                           ; BSR set to: 1
 20501  004760  0101               	movlb	1	; () banked
 20502  004762  51D6               	movf	initGprsModem@initMdm& (0+255),w,b
 20503                           
 20504                           ; Switch size 1, requested type "space"
 20505                           ; Number of cases is 3, Range of values is 0 to 2
 20506                           ; switch strategies available:
 20507                           ; Name         Instructions Cycles
 20508                           ; simple_byte           10     6 (average)
 20509                           ;	Chosen strategy is simple_byte
 20510  004764  0A00               	xorlw	0	; case 0
 20511  004766  B4D8               	btfsc	status,2,c
 20512  004768  D7BB               	goto	l2554
 20513  00476A  0A01               	xorlw	1	; case 1
 20514  00476C  B4D8               	btfsc	status,2,c
 20515  00476E  D7D7               	goto	l2560
 20516  004770  0A03               	xorlw	3	; case 2
 20517  004772  B4D8               	btfsc	status,2,c
 20518  004774  D7E0               	goto	l2561
 20519  004776                     l2559:
 20520                           
 20521                           ;app.c: 141: return isInitialized;
 20522                           
 20523                           ; BSR set to: 1
 20524  004776  0101               	movlb	1	; () banked
 20525  004778  51D7               	movf	initGprsModem@isInitialized& (0+255),w,b
 20526  00477A  0012               	return	
 20527  00477C                     __end_of_initGprsModem:
 20528                           	opt stack 0
 20529                           tosu	equ	0xFFF
 20530                           tosh	equ	0xFFE
 20531                           tosl	equ	0xFFD
 20532                           pclath	equ	0xFFA
 20533                           tblptru	equ	0xFF8
 20534                           tblptrh	equ	0xFF7
 20535                           tblptrl	equ	0xFF6
 20536                           tablat	equ	0xFF5
 20537                           prodh	equ	0xFF4
 20538                           prodl	equ	0xFF3
 20539                           intcon	equ	0xFF2
 20540                           intcon2	equ	0xFF1
 20541                           intcon3	equ	0xFF0
 20542                           indf0	equ	0xFEF
 20543                           postinc0	equ	0xFEE
 20544                           plusw0	equ	0xFEB
 20545                           fsr0h	equ	0xFEA
 20546                           fsr0l	equ	0xFE9
 20547                           wreg	equ	0xFE8
 20548                           indf1	equ	0xFE7
 20549                           postinc1	equ	0xFE6
 20550                           postdec1	equ	0xFE5
 20551                           fsr1h	equ	0xFE2
 20552                           fsr1l	equ	0xFE1
 20553                           indf2	equ	0xFDF
 20554                           postinc2	equ	0xFDE
 20555                           postdec2	equ	0xFDD
 20556                           plusw2	equ	0xFDB
 20557                           fsr2h	equ	0xFDA
 20558                           fsr2l	equ	0xFD9
 20559                           status	equ	0xFD8
 20560                           
 20561 ;; *************** function _Mdm_SetSmsFormat *****************
 20562 ;; Defined at:
 20563 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20564 ;; Parameters:    Size  Location     Type
 20565 ;;  TextFormat      1    wreg     unsigned char 
 20566 ;; Auto vars:     Size  Location     Type
 20567 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 20568 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 20569 ;;  Index           1   35[BANK0 ] unsigned char 
 20570 ;; Return value:  Size  Location     Type
 20571 ;;                  1    wreg      void 
 20572 ;; Registers used:
 20573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20574 ;; Tracked objects:
 20575 ;;		On entry : 0/0
 20576 ;;		On exit  : 0/0
 20577 ;;		Unchanged: 0/0
 20578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20580 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20582 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20583 ;;Total ram usage:       22 bytes
 20584 ;; Hardware stack levels used:    1
 20585 ;; Hardware stack levels required when called:   13
 20586 ;; This function calls:
 20587 ;;		_Uart_WriteString
 20588 ;; This function is called by:
 20589 ;;		_initGprsModem
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text91
 20594  005606                     __ptext91:
 20595                           	opt stack 0
 20596  005606                     _Mdm_SetSmsFormat:
 20597                           	opt stack 13
 20598                           
 20599                           ; BSR set to: 1
 20600                           ;incstack = 0
 20601                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 20602  005606  0100               	movlb	0	; () banked
 20603  005608  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 20604                           
 20605                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 20606                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 20607  00560A  0E00               	movlw	0
 20608  00560C  0100               	movlb	0	; () banked
 20609  00560E  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 20610                           
 20611                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 20612  005610  0E41               	movlw	65
 20613  005612  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 20614                           
 20615                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 20616  005614  0E54               	movlw	84
 20617  005616  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 20618                           
 20619                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 20620  005618  0E2B               	movlw	43
 20621  00561A  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 20622                           
 20623                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 20624  00561C  0E43               	movlw	67
 20625  00561E  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 20626                           
 20627                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 20628  005620  0E4D               	movlw	77
 20629  005622  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 20630                           
 20631                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 20632  005624  0E47               	movlw	71
 20633  005626  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 20634                           
 20635                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 20636  005628  0E46               	movlw	70
 20637  00562A  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 20638                           
 20639                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 20640  00562C  0E3D               	movlw	61
 20641  00562E  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 20642                           
 20643                           ; BSR set to: 0
 20644                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 20645  005630  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 20646  005632  A4D8               	btfss	status,2,c
 20647  005634  D002               	goto	l1121
 20648                           
 20649                           ; BSR set to: 0
 20650                           ;mdm_gsm_gprs.c: 854: {
 20651                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 20652  005636  0E31               	movlw	49
 20653  005638  D001               	goto	L24
 20654  00563A                     l1121:
 20655                           
 20656                           ; BSR set to: 0
 20657                           ;mdm_gsm_gprs.c: 857: else
 20658                           ;mdm_gsm_gprs.c: 858: {
 20659                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 20660                           
 20661                           ; BSR set to: 0
 20662  00563A  0E30               	movlw	48
 20663  00563C                     L24:
 20664  00563C  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 20665                           
 20666                           ; BSR set to: 0
 20667                           ;mdm_gsm_gprs.c: 860: }
 20668                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 20669  00563E  0E0D               	movlw	13
 20670  005640  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 20671                           
 20672                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 20673  005642  0E00               	movlw	0
 20674  005644  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 20675                           
 20676                           ; BSR set to: 0
 20677                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 20678  005646  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 20679  005648  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 20680  00564A  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 20681  00564C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 20682  00564E  0E01               	movlw	1
 20683  005650  EC52  F02D         	call	_Uart_WriteString
 20684  005654  0012               	return		;funcret
 20685  005656                     __end_of_Mdm_SetSmsFormat:
 20686                           	opt stack 0
 20687                           tosu	equ	0xFFF
 20688                           tosh	equ	0xFFE
 20689                           tosl	equ	0xFFD
 20690                           pclath	equ	0xFFA
 20691                           tblptru	equ	0xFF8
 20692                           tblptrh	equ	0xFF7
 20693                           tblptrl	equ	0xFF6
 20694                           tablat	equ	0xFF5
 20695                           prodh	equ	0xFF4
 20696                           prodl	equ	0xFF3
 20697                           intcon	equ	0xFF2
 20698                           intcon2	equ	0xFF1
 20699                           intcon3	equ	0xFF0
 20700                           indf0	equ	0xFEF
 20701                           postinc0	equ	0xFEE
 20702                           plusw0	equ	0xFEB
 20703                           fsr0h	equ	0xFEA
 20704                           fsr0l	equ	0xFE9
 20705                           wreg	equ	0xFE8
 20706                           indf1	equ	0xFE7
 20707                           postinc1	equ	0xFE6
 20708                           postdec1	equ	0xFE5
 20709                           fsr1h	equ	0xFE2
 20710                           fsr1l	equ	0xFE1
 20711                           indf2	equ	0xFDF
 20712                           postinc2	equ	0xFDE
 20713                           postdec2	equ	0xFDD
 20714                           plusw2	equ	0xFDB
 20715                           fsr2h	equ	0xFDA
 20716                           fsr2l	equ	0xFD9
 20717                           status	equ	0xFD8
 20718                           
 20719 ;; *************** function _blinkForSeconds *****************
 20720 ;; Defined at:
 20721 ;;		line 144 in file "../Source/c/04_App/app.c"
 20722 ;; Parameters:    Size  Location     Type
 20723 ;;  seconds         1    wreg     unsigned char 
 20724 ;;  blinkTicks      2   51[BANK0 ] PTR unsigned int 
 20725 ;;		 -> MyApp_Task@blinkTicks(2), 
 20726 ;; Auto vars:     Size  Location     Type
 20727 ;;  seconds         1   53[BANK0 ] unsigned char 
 20728 ;; Return value:  Size  Location     Type
 20729 ;;                  1    wreg      void 
 20730 ;; Registers used:
 20731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20732 ;; Tracked objects:
 20733 ;;		On entry : 0/0
 20734 ;;		On exit  : 0/0
 20735 ;;		Unchanged: 0/0
 20736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20737 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20740 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20741 ;;Total ram usage:        3 bytes
 20742 ;; Hardware stack levels used:    1
 20743 ;; Hardware stack levels required when called:   13
 20744 ;; This function calls:
 20745 ;;		_Led_SetLedStatus
 20746 ;;		_secondsAppTimer
 20747 ;; This function is called by:
 20748 ;;		_MyApp_Task
 20749 ;; This function uses a non-reentrant model
 20750 ;;
 20751                           
 20752                           	psect	text92
 20753  005B58                     __ptext92:
 20754                           	opt stack 0
 20755  005B58                     _blinkForSeconds:
 20756                           	opt stack 14
 20757                           
 20758                           ;incstack = 0
 20759                           ;blinkForSeconds@seconds stored from wreg
 20760  005B58  0100               	movlb	0	; () banked
 20761  005B5A  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 20762                           
 20763                           ;app.c: 146: if (secondsAppTimer(seconds, blinkTicks, 0))
 20764  005B5C  C093  F08A         	movff	blinkForSeconds@blinkTicks,secondsAppTimer@counter
 20765  005B60  C094  F08B         	movff	blinkForSeconds@blinkTicks+1,secondsAppTimer@counter+1
 20766  005B64  0E00               	movlw	0
 20767  005B66  0100               	movlb	0	; () banked
 20768  005B68  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20769  005B6A  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 20770  005B6C  EC7F  F022         	call	_secondsAppTimer
 20771  005B70  0900               	iorlw	0
 20772  005B72  B4D8               	btfsc	status,2,c
 20773  005B74  D007               	goto	l2566
 20774                           
 20775                           ;app.c: 147: {
 20776                           ;app.c: 148: Led_SetLedStatus(1u, LED_STS_ON);
 20777  005B76  0E01               	movlw	1
 20778  005B78  0100               	movlb	0	; () banked
 20779  005B7A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20780  005B7C  0E01               	movlw	1
 20781  005B7E  ECB0  F02E         	call	_Led_SetLedStatus
 20782                           
 20783                           ;app.c: 149: }
 20784  005B82  0012               	return	
 20785  005B84                     l2566:
 20786                           
 20787                           ;app.c: 150: else
 20788                           ;app.c: 151: {
 20789                           ;app.c: 152: Led_SetLedStatus(1u, LED_STS_BLINK);
 20790  005B84  0E03               	movlw	3
 20791  005B86  0100               	movlb	0	; () banked
 20792  005B88  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20793  005B8A  0E01               	movlw	1
 20794  005B8C  ECB0  F02E         	call	_Led_SetLedStatus
 20795  005B90  0012               	return	
 20796  005B92                     __end_of_blinkForSeconds:
 20797                           	opt stack 0
 20798                           tosu	equ	0xFFF
 20799                           tosh	equ	0xFFE
 20800                           tosl	equ	0xFFD
 20801                           pclath	equ	0xFFA
 20802                           tblptru	equ	0xFF8
 20803                           tblptrh	equ	0xFF7
 20804                           tblptrl	equ	0xFF6
 20805                           tablat	equ	0xFF5
 20806                           prodh	equ	0xFF4
 20807                           prodl	equ	0xFF3
 20808                           intcon	equ	0xFF2
 20809                           intcon2	equ	0xFF1
 20810                           intcon3	equ	0xFF0
 20811                           indf0	equ	0xFEF
 20812                           postinc0	equ	0xFEE
 20813                           plusw0	equ	0xFEB
 20814                           fsr0h	equ	0xFEA
 20815                           fsr0l	equ	0xFE9
 20816                           wreg	equ	0xFE8
 20817                           indf1	equ	0xFE7
 20818                           postinc1	equ	0xFE6
 20819                           postdec1	equ	0xFE5
 20820                           fsr1h	equ	0xFE2
 20821                           fsr1l	equ	0xFE1
 20822                           indf2	equ	0xFDF
 20823                           postinc2	equ	0xFDE
 20824                           postdec2	equ	0xFDD
 20825                           plusw2	equ	0xFDB
 20826                           fsr2h	equ	0xFDA
 20827                           fsr2l	equ	0xFD9
 20828                           status	equ	0xFD8
 20829                           
 20830 ;; *************** function _secondsAppTimer *****************
 20831 ;; Defined at:
 20832 ;;		line 85 in file "../Source/c/04_App/app.c"
 20833 ;; Parameters:    Size  Location     Type
 20834 ;;  seconds         1    wreg     unsigned char 
 20835 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 20836 ;;		 -> MyApp_Task@blinkTicks(2), initGprsModem@modemCounter(2), 
 20837 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 20838 ;; Auto vars:     Size  Location     Type
 20839 ;;  seconds         1   47[BANK0 ] unsigned char 
 20840 ;;  destinationT    2   49[BANK0 ] unsigned int 
 20841 ;;  isExpired       1   48[BANK0 ] unsigned char 
 20842 ;; Return value:  Size  Location     Type
 20843 ;;                  1    wreg      unsigned char 
 20844 ;; Registers used:
 20845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20846 ;; Tracked objects:
 20847 ;;		On entry : 0/0
 20848 ;;		On exit  : 0/0
 20849 ;;		Unchanged: 0/0
 20850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20851 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20852 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20854 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20855 ;;Total ram usage:        9 bytes
 20856 ;; Hardware stack levels used:    1
 20857 ;; Hardware stack levels required when called:   12
 20858 ;; This function calls:
 20859 ;;		___lwdiv
 20860 ;;		___wmul
 20861 ;; This function is called by:
 20862 ;;		_initGprsModem
 20863 ;;		_blinkForSeconds
 20864 ;; This function uses a non-reentrant model
 20865 ;;
 20866                           
 20867                           	psect	text93
 20868  0044FE                     __ptext93:
 20869                           	opt stack 0
 20870  0044FE                     _secondsAppTimer:
 20871                           	opt stack 14
 20872                           
 20873                           ;incstack = 0
 20874                           ;secondsAppTimer@seconds stored from wreg
 20875  0044FE  0100               	movlb	0	; () banked
 20876  004500  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 20877                           
 20878                           ;app.c: 87: bool isExpired = 1;
 20879  004502  0E01               	movlw	1
 20880  004504  0100               	movlb	0	; () banked
 20881  004506  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 20885  004508  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 20886  00450C  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 20887  00450E  0E03               	movlw	3
 20888  004510  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20889  004512  0EE8               	movlw	232
 20890  004514  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 20891  004516  EC36  F02F         	call	___wmul	;wreg free
 20892  00451A  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 20893  00451E  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 20894  004522  0E00               	movlw	0
 20895  004524  0100               	movlb	0	; () banked
 20896  004526  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20897  004528  0E64               	movlw	100
 20898  00452A  6F85               	movwf	___lwdiv@divisor& (0+255),b
 20899  00452C  EC60  F02A         	call	___lwdiv	;wreg free
 20900  004530  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 20901  004534  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 20902                           
 20903                           ;app.c: 90: if (*counter < destinationTicks)
 20904  004538  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20905  00453C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20906  004540  0100               	movlb	0	; () banked
 20907  004542  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 20908  004544  5CDE               	subwf	postinc2,w,c
 20909  004546  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 20910  004548  58DE               	subwfb	postinc2,w,c
 20911  00454A  B0D8               	btfsc	status,0,c
 20912  00454C  D009               	goto	l2540
 20913                           
 20914                           ; BSR set to: 0
 20915                           ;app.c: 91: {
 20916                           ;app.c: 92: *counter += 1;
 20917  00454E  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20918  004552  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20919  004556  2ADE               	incf	postinc2,f,c
 20920  004558  0E00               	movlw	0
 20921  00455A  22DD               	addwfc	postdec2,f,c
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;app.c: 93: isExpired = 0;
 20925  00455C  0E00               	movlw	0
 20926  00455E  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20927  004560                     l2540:
 20928                           
 20929                           ; BSR set to: 0
 20930                           ;app.c: 94: }
 20931                           ;app.c: 95: if (*counter == destinationTicks)
 20932                           
 20933                           ; BSR set to: 0
 20934  004560  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20935  004564  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20936  004568  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 20937  00456A  18DE               	xorwf	postinc2,w,c
 20938  00456C  E117               	bnz	l13859
 20939  00456E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 20940  004570  18DE               	xorwf	postinc2,w,c
 20941  004572  A4D8               	btfss	status,2,c
 20942  004574  D013               	goto	l2543
 20943                           
 20944                           ; BSR set to: 0
 20945                           ;app.c: 96: {
 20946                           ;app.c: 97: if (isCyclic)
 20947  004576  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 20948  004578  B4D8               	btfsc	status,2,c
 20949  00457A  D008               	goto	l2542
 20950                           
 20951                           ; BSR set to: 0
 20952                           ;app.c: 98: {
 20953                           ;app.c: 99: *counter = 0;
 20954  00457C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20955  004580  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20956  004584  0E00               	movlw	0
 20957  004586  6EDE               	movwf	postinc2,c
 20958  004588  0E00               	movlw	0
 20959  00458A  D007               	goto	L25
 20960  00458C                     l2542:
 20961                           
 20962                           ; BSR set to: 0
 20963                           ;app.c: 101: else
 20964                           ;app.c: 102: {
 20965                           ;app.c: 103: *counter = 0xFFFF;
 20966                           
 20967                           ; BSR set to: 0
 20968  00458C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20969  004590  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20970  004594  0EFF               	movlw	255
 20971  004596  6EDE               	movwf	postinc2,c
 20972  004598  0EFF               	movlw	255
 20973  00459A                     L25:
 20974  00459A  6EDD               	movwf	postdec2,c
 20975  00459C                     l2543:
 20976  00459C                     l13859:
 20977                           
 20978                           ; BSR set to: 0
 20979                           ;app.c: 104: }
 20980                           ;app.c: 105: }
 20981                           ;app.c: 106: return isExpired;
 20982  00459C  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 20983  00459E  0012               	return	
 20984  0045A0                     __end_of_secondsAppTimer:
 20985                           	opt stack 0
 20986                           tosu	equ	0xFFF
 20987                           tosh	equ	0xFFE
 20988                           tosl	equ	0xFFD
 20989                           pclath	equ	0xFFA
 20990                           tblptru	equ	0xFF8
 20991                           tblptrh	equ	0xFF7
 20992                           tblptrl	equ	0xFF6
 20993                           tablat	equ	0xFF5
 20994                           prodh	equ	0xFF4
 20995                           prodl	equ	0xFF3
 20996                           intcon	equ	0xFF2
 20997                           intcon2	equ	0xFF1
 20998                           intcon3	equ	0xFF0
 20999                           indf0	equ	0xFEF
 21000                           postinc0	equ	0xFEE
 21001                           plusw0	equ	0xFEB
 21002                           fsr0h	equ	0xFEA
 21003                           fsr0l	equ	0xFE9
 21004                           wreg	equ	0xFE8
 21005                           indf1	equ	0xFE7
 21006                           postinc1	equ	0xFE6
 21007                           postdec1	equ	0xFE5
 21008                           fsr1h	equ	0xFE2
 21009                           fsr1l	equ	0xFE1
 21010                           indf2	equ	0xFDF
 21011                           postinc2	equ	0xFDE
 21012                           postdec2	equ	0xFDD
 21013                           plusw2	equ	0xFDB
 21014                           fsr2h	equ	0xFDA
 21015                           fsr2l	equ	0xFD9
 21016                           status	equ	0xFD8
 21017                           
 21018 ;; *************** function _Mdm_RequestSmsData *****************
 21019 ;; Defined at:
 21020 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21021 ;; Parameters:    Size  Location     Type
 21022 ;;		None
 21023 ;; Auto vars:     Size  Location     Type
 21024 ;;		None
 21025 ;; Return value:  Size  Location     Type
 21026 ;;                  1    wreg      void 
 21027 ;; Registers used:
 21028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21029 ;; Tracked objects:
 21030 ;;		On entry : 0/0
 21031 ;;		On exit  : 0/0
 21032 ;;		Unchanged: 0/0
 21033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21038 ;;Total ram usage:        0 bytes
 21039 ;; Hardware stack levels used:    1
 21040 ;; Hardware stack levels required when called:   12
 21041 ;; This function calls:
 21042 ;;		_GenerateEvt
 21043 ;; This function is called by:
 21044 ;;		_MyApp_Task
 21045 ;; This function uses a non-reentrant model
 21046 ;;
 21047                           
 21048                           	psect	text94
 21049  006220                     __ptext94:
 21050                           	opt stack 0
 21051  006220                     _Mdm_RequestSmsData:
 21052                           	opt stack 15
 21053                           
 21054                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 21055                           
 21056                           ; BSR set to: 0
 21057                           ;incstack = 0
 21058  006220  0EDC               	movlw	low _GetSmsText
 21059  006222  0100               	movlb	0	; () banked
 21060  006224  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21061  006226  0E00               	movlw	high _GetSmsText
 21062  006228  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21063  00622A  ECA3  F030         	call	_GenerateEvt	;wreg free
 21064  00622E  0012               	return		;funcret
 21065  006230                     __end_of_Mdm_RequestSmsData:
 21066                           	opt stack 0
 21067                           tosu	equ	0xFFF
 21068                           tosh	equ	0xFFE
 21069                           tosl	equ	0xFFD
 21070                           pclath	equ	0xFFA
 21071                           tblptru	equ	0xFF8
 21072                           tblptrh	equ	0xFF7
 21073                           tblptrl	equ	0xFF6
 21074                           tablat	equ	0xFF5
 21075                           prodh	equ	0xFF4
 21076                           prodl	equ	0xFF3
 21077                           intcon	equ	0xFF2
 21078                           intcon2	equ	0xFF1
 21079                           intcon3	equ	0xFF0
 21080                           indf0	equ	0xFEF
 21081                           postinc0	equ	0xFEE
 21082                           plusw0	equ	0xFEB
 21083                           fsr0h	equ	0xFEA
 21084                           fsr0l	equ	0xFE9
 21085                           wreg	equ	0xFE8
 21086                           indf1	equ	0xFE7
 21087                           postinc1	equ	0xFE6
 21088                           postdec1	equ	0xFE5
 21089                           fsr1h	equ	0xFE2
 21090                           fsr1l	equ	0xFE1
 21091                           indf2	equ	0xFDF
 21092                           postinc2	equ	0xFDE
 21093                           postdec2	equ	0xFDD
 21094                           plusw2	equ	0xFDB
 21095                           fsr2h	equ	0xFDA
 21096                           fsr2l	equ	0xFD9
 21097                           status	equ	0xFD8
 21098                           
 21099 ;; *************** function _Mdm_IsSmsReceived *****************
 21100 ;; Defined at:
 21101 ;;		line 942 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21102 ;; Parameters:    Size  Location     Type
 21103 ;;		None
 21104 ;; Auto vars:     Size  Location     Type
 21105 ;;  Ret             1   33[BANK0 ] enum E8927
 21106 ;; Return value:  Size  Location     Type
 21107 ;;                  1    wreg      enum E8927
 21108 ;; Registers used:
 21109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21110 ;; Tracked objects:
 21111 ;;		On entry : 0/0
 21112 ;;		On exit  : 0/0
 21113 ;;		Unchanged: 0/0
 21114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21116 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21118 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21119 ;;Total ram usage:        1 bytes
 21120 ;; Hardware stack levels used:    1
 21121 ;; Hardware stack levels required when called:   12
 21122 ;; This function calls:
 21123 ;;		_ReceiveEvt
 21124 ;; This function is called by:
 21125 ;;		_MyApp_Task
 21126 ;; This function uses a non-reentrant model
 21127 ;;
 21128                           
 21129                           	psect	text95
 21130  005EDE                     __ptext95:
 21131                           	opt stack 0
 21132  005EDE                     _Mdm_IsSmsReceived:
 21133                           	opt stack 15
 21134                           
 21135                           ;mdm_gsm_gprs.c: 944: SmsRxStsType Ret = SmsNotReceived;
 21136                           
 21137                           ;incstack = 0
 21138  005EDE  0E00               	movlw	0
 21139  005EE0  0100               	movlb	0	; () banked
 21140  005EE2  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;mdm_gsm_gprs.c: 947: if (ReceiveEvt(&SmsEvent))
 21144  005EE4  0EDD               	movlw	low _SmsEvent
 21145  005EE6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21146  005EE8  0E00               	movlw	high _SmsEvent
 21147  005EEA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21148  005EEC  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 21149  005EF0  0900               	iorlw	0
 21150  005EF2  B4D8               	btfsc	status,2,c
 21151  005EF4  D003               	goto	l1136
 21152                           
 21153                           ;mdm_gsm_gprs.c: 948: {
 21154                           ;mdm_gsm_gprs.c: 949: Ret = SmsReceived;
 21155  005EF6  0E01               	movlw	1
 21156  005EF8  0100               	movlb	0	; () banked
 21157  005EFA  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21158  005EFC                     l1136:
 21159                           
 21160                           ;mdm_gsm_gprs.c: 950: }
 21161                           ;mdm_gsm_gprs.c: 952: return Ret;
 21162  005EFC  0100               	movlb	0	; () banked
 21163  005EFE  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21164  005F00  0012               	return	
 21165  005F02                     __end_of_Mdm_IsSmsReceived:
 21166                           	opt stack 0
 21167                           tosu	equ	0xFFF
 21168                           tosh	equ	0xFFE
 21169                           tosl	equ	0xFFD
 21170                           pclath	equ	0xFFA
 21171                           tblptru	equ	0xFF8
 21172                           tblptrh	equ	0xFF7
 21173                           tblptrl	equ	0xFF6
 21174                           tablat	equ	0xFF5
 21175                           prodh	equ	0xFF4
 21176                           prodl	equ	0xFF3
 21177                           intcon	equ	0xFF2
 21178                           intcon2	equ	0xFF1
 21179                           intcon3	equ	0xFF0
 21180                           indf0	equ	0xFEF
 21181                           postinc0	equ	0xFEE
 21182                           plusw0	equ	0xFEB
 21183                           fsr0h	equ	0xFEA
 21184                           fsr0l	equ	0xFE9
 21185                           wreg	equ	0xFE8
 21186                           indf1	equ	0xFE7
 21187                           postinc1	equ	0xFE6
 21188                           postdec1	equ	0xFE5
 21189                           fsr1h	equ	0xFE2
 21190                           fsr1l	equ	0xFE1
 21191                           indf2	equ	0xFDF
 21192                           postinc2	equ	0xFDE
 21193                           postdec2	equ	0xFDD
 21194                           plusw2	equ	0xFDB
 21195                           fsr2h	equ	0xFDA
 21196                           fsr2l	equ	0xFD9
 21197                           status	equ	0xFD8
 21198                           
 21199 ;; *************** function _Mdm_IsRinging *****************
 21200 ;; Defined at:
 21201 ;;		line 1025 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21202 ;; Parameters:    Size  Location     Type
 21203 ;;		None
 21204 ;; Auto vars:     Size  Location     Type
 21205 ;;  Ret             1   33[BANK0 ] enum E8923
 21206 ;; Return value:  Size  Location     Type
 21207 ;;                  1    wreg      enum E8923
 21208 ;; Registers used:
 21209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21210 ;; Tracked objects:
 21211 ;;		On entry : 0/0
 21212 ;;		On exit  : 0/0
 21213 ;;		Unchanged: 0/0
 21214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21218 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21219 ;;Total ram usage:        1 bytes
 21220 ;; Hardware stack levels used:    1
 21221 ;; Hardware stack levels required when called:   12
 21222 ;; This function calls:
 21223 ;;		_ReceiveEvt
 21224 ;; This function is called by:
 21225 ;;		_MyApp_Task
 21226 ;; This function uses a non-reentrant model
 21227 ;;
 21228                           
 21229                           	psect	text96
 21230  005F02                     __ptext96:
 21231                           	opt stack 0
 21232  005F02                     _Mdm_IsRinging:
 21233                           	opt stack 15
 21234                           
 21235                           ;mdm_gsm_gprs.c: 1027: RingStsType Ret = PhoneNotRinging;
 21236                           
 21237                           ; BSR set to: 0
 21238                           ;incstack = 0
 21239  005F02  0E00               	movlw	0
 21240  005F04  0100               	movlb	0	; () banked
 21241  005F06  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21242                           
 21243                           ; BSR set to: 0
 21244                           ;mdm_gsm_gprs.c: 1030: if (ReceiveEvt(&RingEvent))
 21245  005F08  0EDF               	movlw	low _RingEvent
 21246  005F0A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21247  005F0C  0E00               	movlw	high _RingEvent
 21248  005F0E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21249  005F10  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 21250  005F14  0900               	iorlw	0
 21251  005F16  B4D8               	btfsc	status,2,c
 21252  005F18  D003               	goto	l1152
 21253                           
 21254                           ;mdm_gsm_gprs.c: 1031: {
 21255                           ;mdm_gsm_gprs.c: 1032: Ret = PhoneRinging;
 21256  005F1A  0E01               	movlw	1
 21257  005F1C  0100               	movlb	0	; () banked
 21258  005F1E  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21259  005F20                     l1152:
 21260                           
 21261                           ;mdm_gsm_gprs.c: 1033: }
 21262                           ;mdm_gsm_gprs.c: 1035: return Ret;
 21263  005F20  0100               	movlb	0	; () banked
 21264  005F22  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21265  005F24  0012               	return	
 21266  005F26                     __end_of_Mdm_IsRinging:
 21267                           	opt stack 0
 21268                           tosu	equ	0xFFF
 21269                           tosh	equ	0xFFE
 21270                           tosl	equ	0xFFD
 21271                           pclath	equ	0xFFA
 21272                           tblptru	equ	0xFF8
 21273                           tblptrh	equ	0xFF7
 21274                           tblptrl	equ	0xFF6
 21275                           tablat	equ	0xFF5
 21276                           prodh	equ	0xFF4
 21277                           prodl	equ	0xFF3
 21278                           intcon	equ	0xFF2
 21279                           intcon2	equ	0xFF1
 21280                           intcon3	equ	0xFF0
 21281                           indf0	equ	0xFEF
 21282                           postinc0	equ	0xFEE
 21283                           plusw0	equ	0xFEB
 21284                           fsr0h	equ	0xFEA
 21285                           fsr0l	equ	0xFE9
 21286                           wreg	equ	0xFE8
 21287                           indf1	equ	0xFE7
 21288                           postinc1	equ	0xFE6
 21289                           postdec1	equ	0xFE5
 21290                           fsr1h	equ	0xFE2
 21291                           fsr1l	equ	0xFE1
 21292                           indf2	equ	0xFDF
 21293                           postinc2	equ	0xFDE
 21294                           postdec2	equ	0xFDD
 21295                           plusw2	equ	0xFDB
 21296                           fsr2h	equ	0xFDA
 21297                           fsr2l	equ	0xFD9
 21298                           status	equ	0xFD8
 21299                           
 21300 ;; *************** function _Mdm_HangPhoneCall *****************
 21301 ;; Defined at:
 21302 ;;		line 997 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21303 ;; Parameters:    Size  Location     Type
 21304 ;;		None
 21305 ;; Auto vars:     Size  Location     Type
 21306 ;;		None
 21307 ;; Return value:  Size  Location     Type
 21308 ;;                  1    wreg      void 
 21309 ;; Registers used:
 21310 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21311 ;; Tracked objects:
 21312 ;;		On entry : 0/0
 21313 ;;		On exit  : 0/0
 21314 ;;		Unchanged: 0/0
 21315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21320 ;;Total ram usage:        0 bytes
 21321 ;; Hardware stack levels used:    1
 21322 ;; Hardware stack levels required when called:   13
 21323 ;; This function calls:
 21324 ;;		_Uart_WriteConstString
 21325 ;; This function is called by:
 21326 ;;		_MyApp_Task
 21327 ;; This function uses a non-reentrant model
 21328 ;;
 21329                           
 21330                           	psect	text97
 21331  0061DC                     __ptext97:
 21332                           	opt stack 0
 21333  0061DC                     _Mdm_HangPhoneCall:
 21334                           	opt stack 14
 21335                           
 21336                           ;mdm_gsm_gprs.c: 1000: Uart_WriteConstString(1, "ATH\r");
 21337                           
 21338                           ; BSR set to: 0
 21339                           ;incstack = 0
 21340  0061DC  0EEF               	movlw	low STR_6
 21341  0061DE  0100               	movlb	0	; () banked
 21342  0061E0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21343  0061E2  0EFF               	movlw	high STR_6
 21344  0061E4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21345  0061E6  0E01               	movlw	1
 21346  0061E8  EC91  F02C         	call	_Uart_WriteConstString
 21347  0061EC  0012               	return		;funcret
 21348  0061EE                     __end_of_Mdm_HangPhoneCall:
 21349                           	opt stack 0
 21350                           tosu	equ	0xFFF
 21351                           tosh	equ	0xFFE
 21352                           tosl	equ	0xFFD
 21353                           pclath	equ	0xFFA
 21354                           tblptru	equ	0xFF8
 21355                           tblptrh	equ	0xFF7
 21356                           tblptrl	equ	0xFF6
 21357                           tablat	equ	0xFF5
 21358                           prodh	equ	0xFF4
 21359                           prodl	equ	0xFF3
 21360                           intcon	equ	0xFF2
 21361                           intcon2	equ	0xFF1
 21362                           intcon3	equ	0xFF0
 21363                           indf0	equ	0xFEF
 21364                           postinc0	equ	0xFEE
 21365                           plusw0	equ	0xFEB
 21366                           fsr0h	equ	0xFEA
 21367                           fsr0l	equ	0xFE9
 21368                           wreg	equ	0xFE8
 21369                           indf1	equ	0xFE7
 21370                           postinc1	equ	0xFE6
 21371                           postdec1	equ	0xFE5
 21372                           fsr1h	equ	0xFE2
 21373                           fsr1l	equ	0xFE1
 21374                           indf2	equ	0xFDF
 21375                           postinc2	equ	0xFDE
 21376                           postdec2	equ	0xFDD
 21377                           plusw2	equ	0xFDB
 21378                           fsr2h	equ	0xFDA
 21379                           fsr2l	equ	0xFD9
 21380                           status	equ	0xFD8
 21381                           
 21382 ;; *************** function _Led_SetLedBlinkTime *****************
 21383 ;; Defined at:
 21384 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 21385 ;; Parameters:    Size  Location     Type
 21386 ;;  Led             1    wreg     unsigned char 
 21387 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 21388 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 21389 ;; Auto vars:     Size  Location     Type
 21390 ;;  Led             1   33[BANK0 ] unsigned char 
 21391 ;; Return value:  Size  Location     Type
 21392 ;;                  1    wreg      void 
 21393 ;; Registers used:
 21394 ;;		wreg, status,2, status,0
 21395 ;; Tracked objects:
 21396 ;;		On entry : 0/0
 21397 ;;		On exit  : 0/0
 21398 ;;		Unchanged: 0/0
 21399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21403 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21404 ;;Total ram usage:        5 bytes
 21405 ;; Hardware stack levels used:    1
 21406 ;; Hardware stack levels required when called:   11
 21407 ;; This function calls:
 21408 ;;		Nothing
 21409 ;; This function is called by:
 21410 ;;		_MyApp_Task
 21411 ;; This function uses a non-reentrant model
 21412 ;;
 21413                           
 21414                           	psect	text98
 21415  005418                     __ptext98:
 21416                           	opt stack 0
 21417  005418                     _Led_SetLedBlinkTime:
 21418                           	opt stack 16
 21419                           
 21420                           ;incstack = 0
 21421                           ;Led_SetLedBlinkTime@Led stored from wreg
 21422  005418  0100               	movlb	0	; () banked
 21423  00541A  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 21424                           
 21425                           ;led.c: 374: switch (Led)
 21426  00541C  D01B               	goto	l2113
 21427  00541E                     l2114:
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 21431  00541E  C07D  F372         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 21432  005422  C07E  F373         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 21433                           
 21434                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 21435  005426  C07F  F374         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 21436  00542A  C080  F375         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 21437                           
 21438                           ;led.c: 379: break;
 21439  00542E  0012               	return	
 21440  005430                     l2116:
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 21444  005430  C07D  F369         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21445  005434  C07E  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21446                           
 21447                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 21448  005438  C07F  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21449  00543C  C080  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21450                           
 21451                           ;led.c: 384: break;
 21452  005440  0012               	return	
 21453  005442                     l2117:
 21454                           
 21455                           ; BSR set to: 0
 21456                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 21457  005442  C07D  F369         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21458  005446  C07E  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21459                           
 21460                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 21461  00544A  C07F  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21462  00544E  C080  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21463                           
 21464                           ; BSR set to: 0
 21465                           ;led.c: 393: }
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;led.c: 392: break;
 21469                           
 21470                           ;led.c: 391: default:
 21471                           
 21472                           ;led.c: 389: break;
 21473  005452  0012               	return	
 21474  005454                     l2113:
 21475                           
 21476                           ; BSR set to: 0
 21477  005454  0100               	movlb	0	; () banked
 21478  005456  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 21479                           
 21480                           ; Switch size 1, requested type "space"
 21481                           ; Number of cases is 3, Range of values is 1 to 3
 21482                           ; switch strategies available:
 21483                           ; Name         Instructions Cycles
 21484                           ; simple_byte           10     6 (average)
 21485                           ;	Chosen strategy is simple_byte
 21486  005458  0A01               	xorlw	1	; case 1
 21487  00545A  B4D8               	btfsc	status,2,c
 21488  00545C  D7E0               	goto	l2114
 21489  00545E  0A03               	xorlw	3	; case 2
 21490  005460  B4D8               	btfsc	status,2,c
 21491  005462  D7E6               	goto	l2116
 21492  005464  0A01               	xorlw	1	; case 3
 21493  005466  A4D8               	btfss	status,2,c
 21494  005468  0012               	return	
 21495  00546A  D7EB               	goto	l2117
 21496  00546C                     __end_of_Led_SetLedBlinkTime:
 21497                           	opt stack 0
 21498                           tosu	equ	0xFFF
 21499                           tosh	equ	0xFFE
 21500                           tosl	equ	0xFFD
 21501                           pclath	equ	0xFFA
 21502                           tblptru	equ	0xFF8
 21503                           tblptrh	equ	0xFF7
 21504                           tblptrl	equ	0xFF6
 21505                           tablat	equ	0xFF5
 21506                           prodh	equ	0xFF4
 21507                           prodl	equ	0xFF3
 21508                           intcon	equ	0xFF2
 21509                           intcon2	equ	0xFF1
 21510                           intcon3	equ	0xFF0
 21511                           indf0	equ	0xFEF
 21512                           postinc0	equ	0xFEE
 21513                           plusw0	equ	0xFEB
 21514                           fsr0h	equ	0xFEA
 21515                           fsr0l	equ	0xFE9
 21516                           wreg	equ	0xFE8
 21517                           indf1	equ	0xFE7
 21518                           postinc1	equ	0xFE6
 21519                           postdec1	equ	0xFE5
 21520                           fsr1h	equ	0xFE2
 21521                           fsr1l	equ	0xFE1
 21522                           indf2	equ	0xFDF
 21523                           postinc2	equ	0xFDE
 21524                           postdec2	equ	0xFDD
 21525                           plusw2	equ	0xFDB
 21526                           fsr2h	equ	0xFDA
 21527                           fsr2l	equ	0xFD9
 21528                           status	equ	0xFD8
 21529                           
 21530 ;; *************** function _GetCallerNumber *****************
 21531 ;; Defined at:
 21532 ;;		line 1038 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21533 ;; Parameters:    Size  Location     Type
 21534 ;;		None
 21535 ;; Auto vars:     Size  Location     Type
 21536 ;;		None
 21537 ;; Return value:  Size  Location     Type
 21538 ;;                  2   35[BANK0 ] PTR unsigned char 
 21539 ;; Registers used:
 21540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21541 ;; Tracked objects:
 21542 ;;		On entry : 0/0
 21543 ;;		On exit  : 0/0
 21544 ;;		Unchanged: 0/0
 21545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21549 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21550 ;;Total ram usage:        2 bytes
 21551 ;; Hardware stack levels used:    1
 21552 ;; Hardware stack levels required when called:   12
 21553 ;; This function calls:
 21554 ;;		_ClearBuffer
 21555 ;;		_ReceiveEvt
 21556 ;; This function is called by:
 21557 ;;		_MyApp_Task
 21558 ;; This function uses a non-reentrant model
 21559 ;;
 21560                           
 21561                           	psect	text99
 21562  005BCC                     __ptext99:
 21563                           	opt stack 0
 21564  005BCC                     _GetCallerNumber:
 21565                           	opt stack 15
 21566                           
 21567                           ;mdm_gsm_gprs.c: 1040: if (!ReceiveEvt(&ClipEvent))
 21568                           
 21569                           ; BSR set to: 0
 21570                           ;incstack = 0
 21571  005BCC  0EDE               	movlw	low _ClipEvent
 21572  005BCE  0100               	movlb	0	; () banked
 21573  005BD0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21574  005BD2  0E00               	movlw	high _ClipEvent
 21575  005BD4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21576  005BD6  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 21577  005BDA  0900               	iorlw	0
 21578  005BDC  A4D8               	btfss	status,2,c
 21579  005BDE  D00B               	goto	l1156
 21580                           
 21581                           ;mdm_gsm_gprs.c: 1041: {
 21582                           ;mdm_gsm_gprs.c: 1042: ClearBuffer(callerNumber, 14);
 21583  005BE0  0E39               	movlw	low _callerNumber
 21584  005BE2  0100               	movlb	0	; () banked
 21585  005BE4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 21586  005BE6  0E03               	movlw	high _callerNumber
 21587  005BE8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 21588  005BEA  0E00               	movlw	0
 21589  005BEC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 21590  005BEE  0E0E               	movlw	14
 21591  005BF0  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 21592  005BF2  EC01  F02E         	call	_ClearBuffer	;wreg free
 21593  005BF6                     l1156:
 21594                           
 21595                           ;mdm_gsm_gprs.c: 1043: }
 21596                           ;mdm_gsm_gprs.c: 1044: return callerNumber;
 21597  005BF6  0E39               	movlw	low _callerNumber
 21598  005BF8  0100               	movlb	0	; () banked
 21599  005BFA  6F83               	movwf	?_GetCallerNumber& (0+255),b
 21600  005BFC  0E03               	movlw	high _callerNumber
 21601  005BFE  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 21602  005C00  0012               	return	
 21603  005C02                     __end_of_GetCallerNumber:
 21604                           	opt stack 0
 21605                           tosu	equ	0xFFF
 21606                           tosh	equ	0xFFE
 21607                           tosl	equ	0xFFD
 21608                           pclath	equ	0xFFA
 21609                           tblptru	equ	0xFF8
 21610                           tblptrh	equ	0xFF7
 21611                           tblptrl	equ	0xFF6
 21612                           tablat	equ	0xFF5
 21613                           prodh	equ	0xFF4
 21614                           prodl	equ	0xFF3
 21615                           intcon	equ	0xFF2
 21616                           intcon2	equ	0xFF1
 21617                           intcon3	equ	0xFF0
 21618                           indf0	equ	0xFEF
 21619                           postinc0	equ	0xFEE
 21620                           plusw0	equ	0xFEB
 21621                           fsr0h	equ	0xFEA
 21622                           fsr0l	equ	0xFE9
 21623                           wreg	equ	0xFE8
 21624                           indf1	equ	0xFE7
 21625                           postinc1	equ	0xFE6
 21626                           postdec1	equ	0xFE5
 21627                           fsr1h	equ	0xFE2
 21628                           fsr1l	equ	0xFE1
 21629                           indf2	equ	0xFDF
 21630                           postinc2	equ	0xFDE
 21631                           postdec2	equ	0xFDD
 21632                           plusw2	equ	0xFDB
 21633                           fsr2h	equ	0xFDA
 21634                           fsr2l	equ	0xFD9
 21635                           status	equ	0xFD8
 21636                           
 21637 ;; *************** function _Eeprom_Read *****************
 21638 ;; Defined at:
 21639 ;;		line 95 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21640 ;; Parameters:    Size  Location     Type
 21641 ;;  MemoryAddres    1    wreg     unsigned char 
 21642 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 21643 ;;		 -> MyApp_Task@phone(14), 
 21644 ;;  DataLength      1   75[BANK0 ] unsigned char 
 21645 ;; Auto vars:     Size  Location     Type
 21646 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 21647 ;;  QuerySts        1   79[BANK0 ] enum E8930
 21648 ;;  ReadSts         1   78[BANK0 ] enum E8956
 21649 ;;  SlaveAddress    1   77[BANK0 ] unsigned char 
 21650 ;; Return value:  Size  Location     Type
 21651 ;;                  1    wreg      enum E8245
 21652 ;; Registers used:
 21653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21654 ;; Tracked objects:
 21655 ;;		On entry : 0/0
 21656 ;;		On exit  : 0/0
 21657 ;;		Unchanged: 0/0
 21658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21659 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21660 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21662 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21663 ;;Total ram usage:        7 bytes
 21664 ;; Hardware stack levels used:    1
 21665 ;; Hardware stack levels required when called:   16
 21666 ;; This function calls:
 21667 ;;		_I2cSlv_QueryI2cData
 21668 ;; This function is called by:
 21669 ;;		_MyApp_Task
 21670 ;; This function uses a non-reentrant model
 21671 ;;
 21672                           
 21673                           	psect	text100
 21674  00546C                     __ptext100:
 21675                           	opt stack 0
 21676  00546C                     _Eeprom_Read:
 21677                           	opt stack 11
 21678                           
 21679                           ; BSR set to: 0
 21680                           ;incstack = 0
 21681                           ;Eeprom_Read@MemoryAddress stored from wreg
 21682  00546C  0100               	movlb	0	; () banked
 21683  00546E  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 21684                           
 21685                           ;eeprom_if.c: 97: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 21686  005470  0E00               	movlw	0
 21687  005472  0100               	movlb	0	; () banked
 21688  005474  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21689                           
 21690                           ;eeprom_if.c: 98: EepromStsType ReadSts = OP_PENDING;
 21691  005476  0E02               	movlw	2
 21692  005478  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21693                           
 21694                           ;eeprom_if.c: 99: UINT8 SlaveAddress = 0x50;
 21695  00547A  0E50               	movlw	80
 21696  00547C  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 21697                           
 21698                           ; BSR set to: 0
 21699                           ;eeprom_if.c: 100: ReadAddress[0] = MemoryAddress;
 21700  00547E  C0AC  F1F6         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 21701                           
 21702                           ; BSR set to: 0
 21703                           ;eeprom_if.c: 102: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 21704  005482  0EF6               	movlw	low _ReadAddress
 21705  005484  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 21706  005486  0E01               	movlw	high _ReadAddress
 21707  005488  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 21708  00548A  0E01               	movlw	1
 21709  00548C  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 21710  00548E  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 21711  005492  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 21712  005496  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 21713  00549A  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 21714  00549E  ECC5  F01B         	call	_I2cSlv_QueryI2cData	;wreg free
 21715  0054A2  0100               	movlb	0	; () banked
 21716  0054A4  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;eeprom_if.c: 104: if (QuerySts == OP_COMPLETE)
 21720  0054A6  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 21721  0054A8  A4D8               	btfss	status,2,c
 21722  0054AA  D002               	goto	l2618
 21723                           
 21724                           ; BSR set to: 0
 21725                           ;eeprom_if.c: 105: {
 21726                           ;eeprom_if.c: 106: ReadSts = OP_SUCCESS;
 21727  0054AC  0E00               	movlw	0
 21728  0054AE  D005               	goto	L26
 21729  0054B0                     l2618:
 21730                           
 21731                           ; BSR set to: 0
 21732                           ;eeprom_if.c: 108: else if (QuerySts == OP_TIMEOUT)
 21733                           
 21734                           ; BSR set to: 0
 21735  0054B0  0E02               	movlw	2
 21736  0054B2  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 21737  0054B4  A4D8               	btfss	status,2,c
 21738  0054B6  D002               	goto	l2620
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;eeprom_if.c: 109: {
 21742                           ;eeprom_if.c: 110: ReadSts = OP_FAILED;
 21743  0054B8  0E01               	movlw	1
 21744  0054BA                     L26:
 21745  0054BA  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21746  0054BC                     l2620:
 21747                           
 21748                           ; BSR set to: 0
 21749                           ;eeprom_if.c: 111: }
 21750                           ;eeprom_if.c: 112: return ReadSts;
 21751                           
 21752                           ; BSR set to: 0
 21753  0054BC  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 21754  0054BE  0012               	return	
 21755  0054C0                     __end_of_Eeprom_Read:
 21756                           	opt stack 0
 21757                           tosu	equ	0xFFF
 21758                           tosh	equ	0xFFE
 21759                           tosl	equ	0xFFD
 21760                           pclath	equ	0xFFA
 21761                           tblptru	equ	0xFF8
 21762                           tblptrh	equ	0xFF7
 21763                           tblptrl	equ	0xFF6
 21764                           tablat	equ	0xFF5
 21765                           prodh	equ	0xFF4
 21766                           prodl	equ	0xFF3
 21767                           intcon	equ	0xFF2
 21768                           intcon2	equ	0xFF1
 21769                           intcon3	equ	0xFF0
 21770                           indf0	equ	0xFEF
 21771                           postinc0	equ	0xFEE
 21772                           plusw0	equ	0xFEB
 21773                           fsr0h	equ	0xFEA
 21774                           fsr0l	equ	0xFE9
 21775                           wreg	equ	0xFE8
 21776                           indf1	equ	0xFE7
 21777                           postinc1	equ	0xFE6
 21778                           postdec1	equ	0xFE5
 21779                           fsr1h	equ	0xFE2
 21780                           fsr1l	equ	0xFE1
 21781                           indf2	equ	0xFDF
 21782                           postinc2	equ	0xFDE
 21783                           postdec2	equ	0xFDD
 21784                           plusw2	equ	0xFDB
 21785                           fsr2h	equ	0xFDA
 21786                           fsr2l	equ	0xFD9
 21787                           status	equ	0xFD8
 21788                           
 21789 ;; *************** function _I2cSlv_QueryI2cData *****************
 21790 ;; Defined at:
 21791 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21792 ;; Parameters:    Size  Location     Type
 21793 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 21794 ;;		 -> ReadAddress(1), 
 21795 ;;  TxLen           1   68[BANK0 ] unsigned char 
 21796 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 21797 ;;		 -> MyApp_Task@phone(14), 
 21798 ;;  RxLen           1   71[BANK0 ] unsigned char 
 21799 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 21800 ;; Auto vars:     Size  Location     Type
 21801 ;;		None
 21802 ;; Return value:  Size  Location     Type
 21803 ;;                  1    wreg      enum E8943
 21804 ;; Registers used:
 21805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21806 ;; Tracked objects:
 21807 ;;		On entry : 0/0
 21808 ;;		On exit  : 0/0
 21809 ;;		Unchanged: 0/0
 21810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21811 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21814 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21815 ;;Total ram usage:        7 bytes
 21816 ;; Hardware stack levels used:    1
 21817 ;; Hardware stack levels required when called:   15
 21818 ;; This function calls:
 21819 ;;		_I2cSlv_I2cReadMsgSts
 21820 ;;		_I2cSlv_ReceiveI2cMsg
 21821 ;;		_I2cSlv_SendI2cMsg
 21822 ;;		_OsTmr_GetTimerStatus
 21823 ;;		_OsTmr_StartTimer
 21824 ;;		_OsTmr_Wait
 21825 ;; This function is called by:
 21826 ;;		_Eeprom_Read
 21827 ;; This function uses a non-reentrant model
 21828 ;;
 21829                           
 21830                           	psect	text101
 21831  00378A                     __ptext101:
 21832                           	opt stack 0
 21833  00378A                     _I2cSlv_QueryI2cData:
 21834                           	opt stack 11
 21835                           
 21836                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 21837                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 21838                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 21839                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 21840                           ;i2c_slv.c: 388: switch(I2cOpState)
 21841                           
 21842                           ; BSR set to: 0
 21843                           ;incstack = 0
 21844  00378A  D05B               	goto	l1437
 21845  00378C                     
 21846                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 21847  00378C  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 21848  003790  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 21849  003794  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 21850  003798  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 21851  00379C  EC33  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 21852                           
 21853                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 21854  0037A0  0E01               	movlw	1
 21855  0037A2  0101               	movlb	1	; () banked
 21856  0037A4  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21857                           
 21858                           ; BSR set to: 1
 21859                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 21860  0037A6  0E00               	movlw	0
 21861  0037A8  D04A               	goto	L30
 21862  0037AA                     
 21863                           ; BSR set to: 1
 21864                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 21865                           
 21866                           ; BSR set to: 1
 21867  0037AA  0EB4               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 21868  0037AC  0100               	movlb	0	; () banked
 21869  0037AE  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 21870  0037B0  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 21871  0037B2  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 21872  0037B4  0EF4               	movlw	244
 21873  0037B6  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 21874  0037B8  0E01               	movlw	1
 21875  0037BA  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 21876  0037BC  0E00               	movlw	0
 21877  0037BE  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 21878  0037C0  0E00               	movlw	0
 21879  0037C2  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 21880  0037C4  EC8E  F026         	call	_OsTmr_Wait	;wreg free
 21881  0037C8  06E8               	decf	wreg,f,c
 21882  0037CA  A4D8               	btfss	status,2,c
 21883  0037CC  D036               	goto	l1445
 21884                           
 21885                           ;i2c_slv.c: 402: {
 21886                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 21887  0037CE  0E47               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21888  0037D0  0100               	movlb	0	; () banked
 21889  0037D2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 21890  0037D4  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21891  0037D6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 21892  0037D8  0EC4               	movlw	196
 21893  0037DA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 21894  0037DC  0E09               	movlw	9
 21895  0037DE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 21896  0037E0  0E00               	movlw	0
 21897  0037E2  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 21898  0037E4  0E00               	movlw	0
 21899  0037E6  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 21900  0037E8  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 21901                           
 21902                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 21903  0037EC  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 21904  0037F0  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 21905  0037F4  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 21906  0037F8  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 21907  0037FC  ECD4  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 21908                           
 21909                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 21910  003800  0E02               	movlw	2
 21911  003802  0101               	movlb	1	; () banked
 21912  003804  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21913  003806  D019               	goto	l1445
 21914  003808                     
 21915                           ; BSR set to: 1
 21916                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 21917                           
 21918                           ; BSR set to: 1
 21919  003808  ECFA  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 21920  00380C  06E8               	decf	wreg,f,c
 21921  00380E  A4D8               	btfss	status,2,c
 21922  003810  D005               	goto	l1443
 21923                           
 21924                           ;i2c_slv.c: 414: {
 21925                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 21926  003812  0E00               	movlw	0
 21927  003814  0101               	movlb	1	; () banked
 21928  003816  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21929                           
 21930                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 21931  003818  0E01               	movlw	1
 21932  00381A  D011               	goto	L30
 21933  00381C                     l1443:
 21934                           
 21935                           ;i2c_slv.c: 420: else
 21936                           ;i2c_slv.c: 421: {
 21937                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 21938                           
 21939                           ; BSR set to: 1
 21940  00381C  0E47               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21941  00381E  0100               	movlb	0	; () banked
 21942  003820  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 21943  003822  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21944  003824  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 21945  003826  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 21946  00382A  06E8               	decf	wreg,f,c
 21947  00382C  A4D8               	btfss	status,2,c
 21948  00382E  D005               	goto	l1445
 21949                           
 21950                           ;i2c_slv.c: 423: {
 21951                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 21952  003830  0E00               	movlw	0
 21953  003832  0101               	movlb	1	; () banked
 21954  003834  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21955                           
 21956                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 21957  003836  0E02               	movlw	2
 21958  003838  D002               	goto	L30
 21959  00383A                     l1445:
 21960                           
 21961                           ;i2c_slv.c: 429: else
 21962                           ;i2c_slv.c: 430: {
 21963                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 21964                           
 21965                           ; BSR set to: 1
 21966  00383A  0E00               	movlw	0
 21967  00383C  0101               	movlb	1	; () banked
 21968  00383E                     L30:
 21969  00383E  6FE7               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 21970                           
 21971                           ; BSR set to: 1
 21972                           ;i2c_slv.c: 439: }
 21973                           
 21974                           ; BSR set to: 1
 21975                           ;i2c_slv.c: 438: break;
 21976                           
 21977                           ;i2c_slv.c: 437: default:
 21978                           
 21979                           ; BSR set to: 1
 21980                           ;i2c_slv.c: 433: }
 21981                           ;i2c_slv.c: 434: }
 21982                           ;i2c_slv.c: 435: break;
 21983                           
 21984                           ; BSR set to: 1
 21985  003840  D00B               	goto	l1439
 21986  003842                     l1437:
 21987                           
 21988                           ; BSR set to: 1
 21989  003842  0101               	movlb	1	; () banked
 21990  003844  51E8               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 21991                           
 21992                           ; Switch size 1, requested type "space"
 21993                           ; Number of cases is 3, Range of values is 0 to 2
 21994                           ; switch strategies available:
 21995                           ; Name         Instructions Cycles
 21996                           ; simple_byte           10     6 (average)
 21997                           ;	Chosen strategy is simple_byte
 21998  003846  0A00               	xorlw	0	; case 0
 21999  003848  B4D8               	btfsc	status,2,c
 22000  00384A  D7A0               	goto	l1438
 22001  00384C  0A01               	xorlw	1	; case 1
 22002  00384E  B4D8               	btfsc	status,2,c
 22003  003850  D7AC               	goto	l1440
 22004  003852  0A03               	xorlw	3	; case 2
 22005  003854  B4D8               	btfsc	status,2,c
 22006  003856  D7D8               	goto	l1442
 22007  003858                     l1439:
 22008                           
 22009                           ; BSR set to: 1
 22010                           ;i2c_slv.c: 441: return Ret;
 22011                           
 22012                           ; BSR set to: 1
 22013  003858  51E7               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 22014  00385A  0012               	return	
 22015  00385C                     __end_of_I2cSlv_QueryI2cData:
 22016                           	opt stack 0
 22017                           tosu	equ	0xFFF
 22018                           tosh	equ	0xFFE
 22019                           tosl	equ	0xFFD
 22020                           pclath	equ	0xFFA
 22021                           tblptru	equ	0xFF8
 22022                           tblptrh	equ	0xFF7
 22023                           tblptrl	equ	0xFF6
 22024                           tablat	equ	0xFF5
 22025                           prodh	equ	0xFF4
 22026                           prodl	equ	0xFF3
 22027                           intcon	equ	0xFF2
 22028                           intcon2	equ	0xFF1
 22029                           intcon3	equ	0xFF0
 22030                           indf0	equ	0xFEF
 22031                           postinc0	equ	0xFEE
 22032                           plusw0	equ	0xFEB
 22033                           fsr0h	equ	0xFEA
 22034                           fsr0l	equ	0xFE9
 22035                           wreg	equ	0xFE8
 22036                           indf1	equ	0xFE7
 22037                           postinc1	equ	0xFE6
 22038                           postdec1	equ	0xFE5
 22039                           fsr1h	equ	0xFE2
 22040                           fsr1l	equ	0xFE1
 22041                           indf2	equ	0xFDF
 22042                           postinc2	equ	0xFDE
 22043                           postdec2	equ	0xFDD
 22044                           plusw2	equ	0xFDB
 22045                           fsr2h	equ	0xFDA
 22046                           fsr2l	equ	0xFD9
 22047                           status	equ	0xFD8
 22048                           
 22049 ;; *************** function _OsTmr_Wait *****************
 22050 ;; Defined at:
 22051 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 22052 ;; Parameters:    Size  Location     Type
 22053 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 22054 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 22055 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 22056 ;; Auto vars:     Size  Location     Type
 22057 ;;  Ret             1   65[BANK0 ] enum E7749
 22058 ;; Return value:  Size  Location     Type
 22059 ;;                  1    wreg      enum E7749
 22060 ;; Registers used:
 22061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22062 ;; Tracked objects:
 22063 ;;		On entry : 0/0
 22064 ;;		On exit  : 0/0
 22065 ;;		Unchanged: 0/0
 22066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22067 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22070 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22071 ;;Total ram usage:        7 bytes
 22072 ;; Hardware stack levels used:    1
 22073 ;; Hardware stack levels required when called:   14
 22074 ;; This function calls:
 22075 ;;		_OsTmr_GetTimerStatus
 22076 ;;		_OsTmr_StartTimer
 22077 ;; This function is called by:
 22078 ;;		_I2cSlv_QueryI2cData
 22079 ;;		_Terminal
 22080 ;; This function uses a non-reentrant model
 22081 ;;
 22082                           
 22083                           	psect	text102
 22084  004D1C                     __ptext102:
 22085                           	opt stack 0
 22086  004D1C                     _OsTmr_Wait:
 22087                           	opt stack 11
 22088                           
 22089                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 22090                           
 22091                           ; BSR set to: 1
 22092                           ;incstack = 0
 22093  004D1C  0E00               	movlw	0
 22094  004D1E  0100               	movlb	0	; () banked
 22095  004D20  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 22096                           
 22097                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 22098  004D22  D02D               	goto	l855
 22099  004D24                     
 22100                           ; BSR set to: 0
 22101                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 22102                           
 22103                           ; BSR set to: 0
 22104  004D24  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 22105  004D28  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 22106  004D2C  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 22107  004D30  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 22108  004D34  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 22109  004D38  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 22110  004D3C  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 22111                           
 22112                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 22113  004D40  0100               	movlb	0	; () banked
 22114  004D42  EE20 F00A          	lfsr	2,10
 22115  004D46  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22116  004D48  26D9               	addwf	fsr2l,f,c
 22117  004D4A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22118  004D4C  22DA               	addwfc	fsr2h,f,c
 22119  004D4E  0E01               	movlw	1
 22120  004D50  6EDF               	movwf	indf2,c
 22121                           
 22122                           ;os_timers.c: 165: break;
 22123  004D52  D022               	goto	l857
 22124  004D54                     
 22125                           ; BSR set to: 0
 22126                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 22127                           
 22128                           ; BSR set to: 0
 22129  004D54  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 22130  004D58  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 22131  004D5C  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 22132  004D60  06E8               	decf	wreg,f,c
 22133  004D62  A4D8               	btfss	status,2,c
 22134  004D64  D019               	goto	l857
 22135                           
 22136                           ;os_timers.c: 170: {
 22137                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 22138  004D66  0100               	movlb	0	; () banked
 22139  004D68  EE20 F00A          	lfsr	2,10
 22140  004D6C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22141  004D6E  26D9               	addwf	fsr2l,f,c
 22142  004D70  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22143  004D72  22DA               	addwfc	fsr2h,f,c
 22144  004D74  0E00               	movlw	0
 22145  004D76  6EDF               	movwf	indf2,c
 22146                           
 22147                           ; BSR set to: 0
 22148                           ;os_timers.c: 174: Ret = DelayExpired;
 22149  004D78  0E01               	movlw	1
 22150  004D7A  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 22151                           
 22152                           ; BSR set to: 0
 22153                           ;os_timers.c: 180: }
 22154                           
 22155                           ; BSR set to: 0
 22156                           ;os_timers.c: 179: break;
 22157                           
 22158                           ;os_timers.c: 178: default:
 22159                           
 22160                           ; BSR set to: 0
 22161                           ;os_timers.c: 175: }
 22162                           ;os_timers.c: 176: break;
 22163  004D7C  D00D               	goto	l857
 22164  004D7E                     l855:
 22165                           
 22166                           ; BSR set to: 0
 22167                           
 22168                           ; BSR set to: 0
 22169  004D7E  EE20 F00A          	lfsr	2,10
 22170  004D82  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22171  004D84  26D9               	addwf	fsr2l,f,c
 22172  004D86  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22173  004D88  22DA               	addwfc	fsr2h,f,c
 22174  004D8A  50DF               	movf	indf2,w,c
 22175                           
 22176                           ; Switch size 1, requested type "space"
 22177                           ; Number of cases is 2, Range of values is 0 to 1
 22178                           ; switch strategies available:
 22179                           ; Name         Instructions Cycles
 22180                           ; simple_byte            7     4 (average)
 22181                           ;	Chosen strategy is simple_byte
 22182  004D8C  0A00               	xorlw	0	; case 0
 22183  004D8E  B4D8               	btfsc	status,2,c
 22184  004D90  D7C9               	goto	l856
 22185  004D92  0A01               	xorlw	1	; case 1
 22186  004D94  B4D8               	btfsc	status,2,c
 22187  004D96  D7DE               	goto	l858
 22188  004D98                     l857:
 22189                           
 22190                           ;os_timers.c: 182: return Ret;
 22191                           
 22192                           ; BSR set to: 0
 22193  004D98  0100               	movlb	0	; () banked
 22194  004D9A  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 22195  004D9C  0012               	return	
 22196  004D9E                     __end_of_OsTmr_Wait:
 22197                           	opt stack 0
 22198                           tosu	equ	0xFFF
 22199                           tosh	equ	0xFFE
 22200                           tosl	equ	0xFFD
 22201                           pclath	equ	0xFFA
 22202                           tblptru	equ	0xFF8
 22203                           tblptrh	equ	0xFF7
 22204                           tblptrl	equ	0xFF6
 22205                           tablat	equ	0xFF5
 22206                           prodh	equ	0xFF4
 22207                           prodl	equ	0xFF3
 22208                           intcon	equ	0xFF2
 22209                           intcon2	equ	0xFF1
 22210                           intcon3	equ	0xFF0
 22211                           indf0	equ	0xFEF
 22212                           postinc0	equ	0xFEE
 22213                           plusw0	equ	0xFEB
 22214                           fsr0h	equ	0xFEA
 22215                           fsr0l	equ	0xFE9
 22216                           wreg	equ	0xFE8
 22217                           indf1	equ	0xFE7
 22218                           postinc1	equ	0xFE6
 22219                           postdec1	equ	0xFE5
 22220                           fsr1h	equ	0xFE2
 22221                           fsr1l	equ	0xFE1
 22222                           indf2	equ	0xFDF
 22223                           postinc2	equ	0xFDE
 22224                           postdec2	equ	0xFDD
 22225                           plusw2	equ	0xFDB
 22226                           fsr2h	equ	0xFDA
 22227                           fsr2l	equ	0xFD9
 22228                           status	equ	0xFD8
 22229                           
 22230 ;; *************** function _I2cSlv_SendI2cMsg *****************
 22231 ;; Defined at:
 22232 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22233 ;; Parameters:    Size  Location     Type
 22234 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 22235 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 22236 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 22237 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22238 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 22239 ;; Auto vars:     Size  Location     Type
 22240 ;;  TxSts           1   36[BANK0 ] unsigned char 
 22241 ;; Return value:  Size  Location     Type
 22242 ;;                  1    wreg      unsigned char 
 22243 ;; Registers used:
 22244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22245 ;; Tracked objects:
 22246 ;;		On entry : 0/0
 22247 ;;		On exit  : 0/0
 22248 ;;		Unchanged: 0/0
 22249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22253 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22254 ;;Total ram usage:        5 bytes
 22255 ;; Hardware stack levels used:    1
 22256 ;; Hardware stack levels required when called:   12
 22257 ;; This function calls:
 22258 ;;		_GenerateEvt
 22259 ;; This function is called by:
 22260 ;;		_I2cSlv_QueryI2cData
 22261 ;;		_Terminal
 22262 ;;		_triggerRelay
 22263 ;;		_Eeprom_Write
 22264 ;; This function uses a non-reentrant model
 22265 ;;
 22266                           
 22267                           	psect	text103
 22268  005A66                     __ptext103:
 22269                           	opt stack 0
 22270  005A66                     _I2cSlv_SendI2cMsg:
 22271                           	opt stack 13
 22272                           
 22273                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 22274                           
 22275                           ; BSR set to: 0
 22276                           ;incstack = 0
 22277  005A66  0E00               	movlw	0
 22278  005A68  0100               	movlb	0	; () banked
 22279  005A6A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 22283  005A6C  05CE               	decf	_I2cComSts& (0+255),w,b
 22284  005A6E  B4D8               	btfsc	status,2,c
 22285  005A70  D015               	goto	l1409
 22286                           
 22287                           ; BSR set to: 0
 22288                           ;i2c_slv.c: 257: {
 22289                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 22290  005A72  C082  F39E         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 22291                           
 22292                           ; BSR set to: 0
 22293                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 22294  005A76  0E00               	movlw	0
 22295  005A78  0103               	movlb	3	; () banked
 22296  005A7A  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 22297                           
 22298                           ; BSR set to: 3
 22299                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 22300  005A7C  C083  F3A2         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 22301                           
 22302                           ; BSR set to: 3
 22303                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 22304  005A80  C080  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 22305  005A84  C081  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 22306                           
 22307                           ; BSR set to: 3
 22308                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 22309  005A88  0ED8               	movlw	low _I2cWriteDataEvt
 22310  005A8A  0100               	movlb	0	; () banked
 22311  005A8C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22312  005A8E  0E00               	movlw	high _I2cWriteDataEvt
 22313  005A90  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22314  005A92  ECA3  F030         	call	_GenerateEvt	;wreg free
 22315                           
 22316                           ;i2c_slv.c: 267: TxSts = 1u;
 22317  005A96  0E01               	movlw	1
 22318  005A98  0100               	movlb	0	; () banked
 22319  005A9A  D001               	goto	L31
 22320  005A9C                     l1409:
 22321                           
 22322                           ; BSR set to: 0
 22323                           ;i2c_slv.c: 269: else
 22324                           ;i2c_slv.c: 270: {
 22325                           ;i2c_slv.c: 272: TxSts = 0u;
 22326                           
 22327                           ; BSR set to: 0
 22328  005A9C  0E00               	movlw	0
 22329  005A9E                     L31:
 22330  005A9E  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22331                           
 22332                           ; BSR set to: 0
 22333                           ;i2c_slv.c: 273: }
 22334                           ;i2c_slv.c: 275: return TxSts;
 22335  005AA0  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 22336  005AA2  0012               	return	
 22337  005AA4                     __end_of_I2cSlv_SendI2cMsg:
 22338                           	opt stack 0
 22339                           tosu	equ	0xFFF
 22340                           tosh	equ	0xFFE
 22341                           tosl	equ	0xFFD
 22342                           pclath	equ	0xFFA
 22343                           tblptru	equ	0xFF8
 22344                           tblptrh	equ	0xFF7
 22345                           tblptrl	equ	0xFF6
 22346                           tablat	equ	0xFF5
 22347                           prodh	equ	0xFF4
 22348                           prodl	equ	0xFF3
 22349                           intcon	equ	0xFF2
 22350                           intcon2	equ	0xFF1
 22351                           intcon3	equ	0xFF0
 22352                           indf0	equ	0xFEF
 22353                           postinc0	equ	0xFEE
 22354                           plusw0	equ	0xFEB
 22355                           fsr0h	equ	0xFEA
 22356                           fsr0l	equ	0xFE9
 22357                           wreg	equ	0xFE8
 22358                           indf1	equ	0xFE7
 22359                           postinc1	equ	0xFE6
 22360                           postdec1	equ	0xFE5
 22361                           fsr1h	equ	0xFE2
 22362                           fsr1l	equ	0xFE1
 22363                           indf2	equ	0xFDF
 22364                           postinc2	equ	0xFDE
 22365                           postdec2	equ	0xFDD
 22366                           plusw2	equ	0xFDB
 22367                           fsr2h	equ	0xFDA
 22368                           fsr2l	equ	0xFD9
 22369                           status	equ	0xFD8
 22370                           
 22371 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 22372 ;; Defined at:
 22373 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22374 ;; Parameters:    Size  Location     Type
 22375 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 22376 ;;		 -> MyApp_Task@phone(14), Terminal@TermRxBuffer(50), 
 22377 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22378 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 22379 ;; Auto vars:     Size  Location     Type
 22380 ;;  RxSts           1   36[BANK0 ] unsigned char 
 22381 ;; Return value:  Size  Location     Type
 22382 ;;                  1    wreg      unsigned char 
 22383 ;; Registers used:
 22384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22385 ;; Tracked objects:
 22386 ;;		On entry : 0/0
 22387 ;;		On exit  : 0/0
 22388 ;;		Unchanged: 0/0
 22389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22393 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22394 ;;Total ram usage:        5 bytes
 22395 ;; Hardware stack levels used:    1
 22396 ;; Hardware stack levels required when called:   12
 22397 ;; This function calls:
 22398 ;;		_GenerateEvt
 22399 ;; This function is called by:
 22400 ;;		_I2cSlv_QueryI2cData
 22401 ;;		_Terminal
 22402 ;; This function uses a non-reentrant model
 22403 ;;
 22404                           
 22405                           	psect	text104
 22406  0059A8                     __ptext104:
 22407                           	opt stack 0
 22408  0059A8                     _I2cSlv_ReceiveI2cMsg:
 22409                           	opt stack 13
 22410                           
 22411                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 22412                           
 22413                           ; BSR set to: 0
 22414                           ;incstack = 0
 22415  0059A8  0E00               	movlw	0
 22416  0059AA  0100               	movlb	0	; () banked
 22417  0059AC  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22418                           
 22419                           ; BSR set to: 0
 22420                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 22421  0059AE  0E02               	movlw	2
 22422  0059B0  19CE               	xorwf	_I2cComSts& (0+255),w,b
 22423  0059B2  B4D8               	btfsc	status,2,c
 22424  0059B4  D016               	goto	l1414
 22425                           
 22426                           ; BSR set to: 0
 22427                           ;i2c_slv.c: 294: {
 22428                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 22429  0059B6  C082  F398         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 22430                           
 22431                           ; BSR set to: 0
 22432                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 22433  0059BA  0E01               	movlw	1
 22434  0059BC  0103               	movlb	3	; () banked
 22435  0059BE  6F99               	movwf	(_I2cRxPacket+1)& (0+255),b
 22436                           
 22437                           ; BSR set to: 3
 22438                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 22439  0059C0  C083  F39C         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 22440                           
 22441                           ; BSR set to: 3
 22442                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 22443  0059C4  C080  F39A         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 22444  0059C8  C081  F39B         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 22445                           
 22446                           ; BSR set to: 3
 22447                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 22448  0059CC  0ED7               	movlw	low _I2cReadDataEvt
 22449  0059CE  0100               	movlb	0	; () banked
 22450  0059D0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22451  0059D2  0E00               	movlw	high _I2cReadDataEvt
 22452  0059D4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22453  0059D6  ECA3  F030         	call	_GenerateEvt	;wreg free
 22454                           
 22455                           ;i2c_slv.c: 304: RxSts = 1u;
 22456  0059DA  0E01               	movlw	1
 22457  0059DC  0100               	movlb	0	; () banked
 22458  0059DE  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22459                           
 22460                           ;i2c_slv.c: 305: }
 22461  0059E0  0012               	return	
 22462  0059E2                     l1414:
 22463                           
 22464                           ; BSR set to: 0
 22465                           ;i2c_slv.c: 306: else
 22466                           ;i2c_slv.c: 307: {
 22467                           ;i2c_slv.c: 309: RxSts = 0u;
 22468                           
 22469                           ; BSR set to: 0
 22470  0059E2  0E00               	movlw	0
 22471  0059E4  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22472                           
 22473                           ; BSR set to: 0
 22474  0059E6  0012               	return	
 22475  0059E8                     __end_of_I2cSlv_ReceiveI2cMsg:
 22476                           	opt stack 0
 22477                           tosu	equ	0xFFF
 22478                           tosh	equ	0xFFE
 22479                           tosl	equ	0xFFD
 22480                           pclath	equ	0xFFA
 22481                           tblptru	equ	0xFF8
 22482                           tblptrh	equ	0xFF7
 22483                           tblptrl	equ	0xFF6
 22484                           tablat	equ	0xFF5
 22485                           prodh	equ	0xFF4
 22486                           prodl	equ	0xFF3
 22487                           intcon	equ	0xFF2
 22488                           intcon2	equ	0xFF1
 22489                           intcon3	equ	0xFF0
 22490                           indf0	equ	0xFEF
 22491                           postinc0	equ	0xFEE
 22492                           plusw0	equ	0xFEB
 22493                           fsr0h	equ	0xFEA
 22494                           fsr0l	equ	0xFE9
 22495                           wreg	equ	0xFE8
 22496                           indf1	equ	0xFE7
 22497                           postinc1	equ	0xFE6
 22498                           postdec1	equ	0xFE5
 22499                           fsr1h	equ	0xFE2
 22500                           fsr1l	equ	0xFE1
 22501                           indf2	equ	0xFDF
 22502                           postinc2	equ	0xFDE
 22503                           postdec2	equ	0xFDD
 22504                           plusw2	equ	0xFDB
 22505                           fsr2h	equ	0xFDA
 22506                           fsr2l	equ	0xFD9
 22507                           status	equ	0xFD8
 22508                           
 22509 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 22510 ;; Defined at:
 22511 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22512 ;; Parameters:    Size  Location     Type
 22513 ;;		None
 22514 ;; Auto vars:     Size  Location     Type
 22515 ;;  Result          1   33[BANK0 ] enum E8931
 22516 ;; Return value:  Size  Location     Type
 22517 ;;                  1    wreg      enum E8931
 22518 ;; Registers used:
 22519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22520 ;; Tracked objects:
 22521 ;;		On entry : 0/0
 22522 ;;		On exit  : 0/0
 22523 ;;		Unchanged: 0/0
 22524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22529 ;;Total ram usage:        1 bytes
 22530 ;; Hardware stack levels used:    1
 22531 ;; Hardware stack levels required when called:   12
 22532 ;; This function calls:
 22533 ;;		_ReceiveEvt
 22534 ;; This function is called by:
 22535 ;;		_I2cSlv_QueryI2cData
 22536 ;;		_Terminal
 22537 ;; This function uses a non-reentrant model
 22538 ;;
 22539                           
 22540                           	psect	text105
 22541  005FF4                     __ptext105:
 22542                           	opt stack 0
 22543  005FF4                     _I2cSlv_I2cReadMsgSts:
 22544                           	opt stack 13
 22545                           
 22546                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 22547                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 22548                           
 22549                           ; BSR set to: 0
 22550                           ;incstack = 0
 22551  005FF4  0E9D               	movlw	low (_I2cRxPacket+5)
 22552  005FF6  0100               	movlb	0	; () banked
 22553  005FF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22554  005FFA  0E03               	movlw	high (_I2cRxPacket+5)
 22555  005FFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22556  005FFE  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 22557  006002  0900               	iorlw	0
 22558  006004  B4D8               	btfsc	status,2,c
 22559  006006  D002               	goto	l1419
 22560                           
 22561                           ;i2c_slv.c: 331: {
 22562                           ;i2c_slv.c: 332: Result = MessageReceived;
 22563  006008  0E01               	movlw	1
 22564  00600A  D001               	goto	L32
 22565  00600C                     l1419:
 22566                           
 22567                           ;i2c_slv.c: 334: else
 22568                           ;i2c_slv.c: 335: {
 22569                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 22570                           
 22571                           ; BSR set to: 0
 22572  00600C  0E00               	movlw	0
 22573  00600E                     L32:
 22574  00600E  0100               	movlb	0	; () banked
 22575  006010  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 22576                           
 22577                           ; BSR set to: 0
 22578                           ;i2c_slv.c: 337: }
 22579                           ;i2c_slv.c: 339: return Result;
 22580  006012  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 22581  006014  0012               	return	
 22582  006016                     __end_of_I2cSlv_I2cReadMsgSts:
 22583                           	opt stack 0
 22584                           tosu	equ	0xFFF
 22585                           tosh	equ	0xFFE
 22586                           tosl	equ	0xFFD
 22587                           pclath	equ	0xFFA
 22588                           tblptru	equ	0xFF8
 22589                           tblptrh	equ	0xFF7
 22590                           tblptrl	equ	0xFF6
 22591                           tablat	equ	0xFF5
 22592                           prodh	equ	0xFF4
 22593                           prodl	equ	0xFF3
 22594                           intcon	equ	0xFF2
 22595                           intcon2	equ	0xFF1
 22596                           intcon3	equ	0xFF0
 22597                           indf0	equ	0xFEF
 22598                           postinc0	equ	0xFEE
 22599                           plusw0	equ	0xFEB
 22600                           fsr0h	equ	0xFEA
 22601                           fsr0l	equ	0xFE9
 22602                           wreg	equ	0xFE8
 22603                           indf1	equ	0xFE7
 22604                           postinc1	equ	0xFE6
 22605                           postdec1	equ	0xFE5
 22606                           fsr1h	equ	0xFE2
 22607                           fsr1l	equ	0xFE1
 22608                           indf2	equ	0xFDF
 22609                           postinc2	equ	0xFDE
 22610                           postdec2	equ	0xFDD
 22611                           plusw2	equ	0xFDB
 22612                           fsr2h	equ	0xFDA
 22613                           fsr2l	equ	0xFD9
 22614                           status	equ	0xFD8
 22615                           
 22616 ;; *************** function _UartSetConfig *****************
 22617 ;; Defined at:
 22618 ;;		line 189 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22619 ;; Parameters:    Size  Location     Type
 22620 ;;		None
 22621 ;; Auto vars:     Size  Location     Type
 22622 ;;		None
 22623 ;; Return value:  Size  Location     Type
 22624 ;;                  1    wreg      void 
 22625 ;; Registers used:
 22626 ;;		wreg, status,2
 22627 ;; Tracked objects:
 22628 ;;		On entry : 0/0
 22629 ;;		On exit  : 0/0
 22630 ;;		Unchanged: 0/0
 22631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22636 ;;Total ram usage:        0 bytes
 22637 ;; Hardware stack levels used:    1
 22638 ;; Hardware stack levels required when called:   11
 22639 ;; This function calls:
 22640 ;;		Nothing
 22641 ;; This function is called by:
 22642 ;;		_Mdm_MainTask
 22643 ;; This function uses a non-reentrant model
 22644 ;;
 22645                           
 22646                           	psect	text106
 22647  005210                     __ptext106:
 22648                           	opt stack 0
 22649  005210                     _UartSetConfig:
 22650                           	opt stack 16
 22651                           
 22652                           ;mdm_gsm_gprs.c: 191: UartConfig.UartEnable = ((UINT8)(1));
 22653                           
 22654                           ; BSR set to: 0
 22655                           ;incstack = 0
 22656  005210  0E01               	movlw	1
 22657  005212  0103               	movlb	3	; () banked
 22658  005214  6F24               	movwf	_UartConfig& (0+255),b
 22659                           
 22660                           ;mdm_gsm_gprs.c: 192: UartConfig.UartMode = ((UINT8)(0));
 22661  005216  0E00               	movlw	0
 22662  005218  6F25               	movwf	(_UartConfig+1)& (0+255),b
 22663                           
 22664                           ;mdm_gsm_gprs.c: 194: UartConfig.BaudRateMode = ((UINT8)(0));
 22665  00521A  0E00               	movlw	0
 22666  00521C  6F26               	movwf	(_UartConfig+2)& (0+255),b
 22667                           
 22668                           ;mdm_gsm_gprs.c: 199: UartConfig.HighBaudMode = ((UINT8)(0));
 22669  00521E  0E00               	movlw	0
 22670  005220  6F27               	movwf	(_UartConfig+3)& (0+255),b
 22671                           
 22672                           ;mdm_gsm_gprs.c: 203: UartConfig.Tx9bitMode = ((UINT8)(0));
 22673  005222  0E00               	movlw	0
 22674  005224  6F28               	movwf	(_UartConfig+4)& (0+255),b
 22675                           
 22676                           ;mdm_gsm_gprs.c: 204: UartConfig.Rx9bitMode = ((UINT8)(0));
 22677  005226  0E00               	movlw	0
 22678  005228  6F29               	movwf	(_UartConfig+5)& (0+255),b
 22679                           
 22680                           ;mdm_gsm_gprs.c: 205: UartConfig.TxEnable = ((UINT8)(1));
 22681  00522A  0E01               	movlw	1
 22682  00522C  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 22683                           
 22684                           ;mdm_gsm_gprs.c: 206: UartConfig.RxEnable = ((UINT8)(1));
 22685  00522E  0E01               	movlw	1
 22686  005230  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 22687                           
 22688                           ;mdm_gsm_gprs.c: 207: UartConfig.SendBreakEnable = ((UINT8)(0));
 22689  005232  0E00               	movlw	0
 22690  005234  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 22691                           
 22692                           ;mdm_gsm_gprs.c: 208: UartConfig.AutobaudEnable = ((UINT8)(0));
 22693  005236  0E00               	movlw	0
 22694  005238  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 22695                           
 22696                           ;mdm_gsm_gprs.c: 209: UartConfig.WakeUpEnable = ((UINT8)(0));
 22697  00523A  0E00               	movlw	0
 22698  00523C  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 22699                           
 22700                           ;mdm_gsm_gprs.c: 210: UartConfig.TxInterruptEnable = ((UINT8)(0));
 22701  00523E  0E00               	movlw	0
 22702  005240  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 22703                           
 22704                           ;mdm_gsm_gprs.c: 211: UartConfig.RxInterruptEnable = ((UINT8)(1));
 22705  005242  0E01               	movlw	1
 22706  005244  6F30               	movwf	(_UartConfig+12)& (0+255),b
 22707                           
 22708                           ;mdm_gsm_gprs.c: 212: UartConfig.McuBusClock = ((UINT32)(48000000));
 22709  005246  0E00               	movlw	0
 22710  005248  6F31               	movwf	(_UartConfig+13)& (0+255),b
 22711  00524A  0E6C               	movlw	108
 22712  00524C  6F32               	movwf	(_UartConfig+14)& (0+255),b
 22713  00524E  0EDC               	movlw	220
 22714  005250  6F33               	movwf	(_UartConfig+15)& (0+255),b
 22715  005252  0E02               	movlw	2
 22716  005254  6F34               	movwf	(_UartConfig+16)& (0+255),b
 22717                           
 22718                           ;mdm_gsm_gprs.c: 214: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 22719  005256  0E80               	movlw	128
 22720  005258  6F35               	movwf	(_UartConfig+17)& (0+255),b
 22721  00525A  0E25               	movlw	37
 22722  00525C  6F36               	movwf	(_UartConfig+18)& (0+255),b
 22723  00525E  0E00               	movlw	0
 22724  005260  6F37               	movwf	(_UartConfig+19)& (0+255),b
 22725  005262  0E00               	movlw	0
 22726  005264  6F38               	movwf	(_UartConfig+20)& (0+255),b
 22727                           
 22728                           ; BSR set to: 3
 22729  005266  0012               	return		;funcret
 22730  005268                     __end_of_UartSetConfig:
 22731                           	opt stack 0
 22732                           tosu	equ	0xFFF
 22733                           tosh	equ	0xFFE
 22734                           tosl	equ	0xFFD
 22735                           pclath	equ	0xFFA
 22736                           tblptru	equ	0xFF8
 22737                           tblptrh	equ	0xFF7
 22738                           tblptrl	equ	0xFF6
 22739                           tablat	equ	0xFF5
 22740                           prodh	equ	0xFF4
 22741                           prodl	equ	0xFF3
 22742                           intcon	equ	0xFF2
 22743                           intcon2	equ	0xFF1
 22744                           intcon3	equ	0xFF0
 22745                           indf0	equ	0xFEF
 22746                           postinc0	equ	0xFEE
 22747                           plusw0	equ	0xFEB
 22748                           fsr0h	equ	0xFEA
 22749                           fsr0l	equ	0xFE9
 22750                           wreg	equ	0xFE8
 22751                           indf1	equ	0xFE7
 22752                           postinc1	equ	0xFE6
 22753                           postdec1	equ	0xFE5
 22754                           fsr1h	equ	0xFE2
 22755                           fsr1l	equ	0xFE1
 22756                           indf2	equ	0xFDF
 22757                           postinc2	equ	0xFDE
 22758                           postdec2	equ	0xFDD
 22759                           plusw2	equ	0xFDB
 22760                           fsr2h	equ	0xFDA
 22761                           fsr2l	equ	0xFD9
 22762                           status	equ	0xFD8
 22763                           
 22764 ;; *************** function _TurnOnModem *****************
 22765 ;; Defined at:
 22766 ;;		line 375 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22767 ;; Parameters:    Size  Location     Type
 22768 ;;		None
 22769 ;; Auto vars:     Size  Location     Type
 22770 ;;		None
 22771 ;; Return value:  Size  Location     Type
 22772 ;;                  1    wreg      void 
 22773 ;; Registers used:
 22774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22775 ;; Tracked objects:
 22776 ;;		On entry : 0/0
 22777 ;;		On exit  : 0/0
 22778 ;;		Unchanged: 0/0
 22779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22784 ;;Total ram usage:        0 bytes
 22785 ;; Hardware stack levels used:    1
 22786 ;; Hardware stack levels required when called:   12
 22787 ;; This function calls:
 22788 ;;		_GenerateEvt
 22789 ;; This function is called by:
 22790 ;;		_Mdm_MainTask
 22791 ;; This function uses a non-reentrant model
 22792 ;;
 22793                           
 22794                           	psect	text107
 22795  0057CC                     __ptext107:
 22796                           	opt stack 0
 22797  0057CC                     _TurnOnModem:
 22798                           	opt stack 15
 22799                           
 22800                           ;mdm_gsm_gprs.c: 377: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 22801                           ;mdm_gsm_gprs.c: 378: static UINT16 Counter = 0;
 22802                           ;mdm_gsm_gprs.c: 380: switch (TurnOnMdmState)
 22803                           
 22804                           ; BSR set to: 3
 22805                           ;incstack = 0
 22806  0057CC  D019               	goto	l1009
 22807  0057CE                     
 22808                           ;mdm_gsm_gprs.c: 384: Counter++;
 22809  0057CE  0102               	movlb	2	; () banked
 22810  0057D0  4BDC               	infsnz	TurnOnModem@Counter& (0+255),f,b
 22811  0057D2  2BDD               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 22812                           
 22813                           ; BSR set to: 2
 22814                           ;mdm_gsm_gprs.c: 386: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 22815  0057D4  0EB8               	movlw	184
 22816  0057D6  5DDC               	subwf	TurnOnModem@Counter& (0+255),w,b
 22817  0057D8  0E0B               	movlw	11
 22818  0057DA  59DD               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 22819  0057DC  A0D8               	btfss	status,0,c
 22820  0057DE  0012               	return	
 22821                           
 22822                           ; BSR set to: 2
 22823                           ;mdm_gsm_gprs.c: 387: {
 22824                           ;mdm_gsm_gprs.c: 389: TurnOnMdmState = TurnOnModuleReq;
 22825  0057E0  0E01               	movlw	1
 22826  0057E2  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 22827                           
 22828                           ; BSR set to: 2
 22829                           ;mdm_gsm_gprs.c: 390: }
 22830                           ;mdm_gsm_gprs.c: 391: break;
 22831  0057E4  0012               	return	
 22832  0057E6                     
 22833                           ;mdm_gsm_gprs.c: 395: GenerateEvt(&MdmOnOffPulseRequest);
 22834                           
 22835                           ; BSR set to: 2
 22836  0057E6  0EE1               	movlw	low _MdmOnOffPulseRequest
 22837  0057E8  0100               	movlb	0	; () banked
 22838  0057EA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22839  0057EC  0E00               	movlw	high _MdmOnOffPulseRequest
 22840  0057EE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22841  0057F0  ECA3  F030         	call	_GenerateEvt	;wreg free
 22842                           
 22843                           ;mdm_gsm_gprs.c: 397: MdmStatus = ModemOn;
 22844  0057F4  0E01               	movlw	1
 22845  0057F6  0100               	movlb	0	; () banked
 22846  0057F8  6FD1               	movwf	_MdmStatus& (0+255),b
 22847                           
 22848                           ; BSR set to: 0
 22849                           ;mdm_gsm_gprs.c: 399: TurnOnMdmState = Stop;
 22850  0057FA  0E02               	movlw	2
 22851  0057FC  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 22852                           
 22853                           ; BSR set to: 0
 22854                           ;mdm_gsm_gprs.c: 407: }
 22855                           
 22856                           ; BSR set to: 0
 22857                           ;mdm_gsm_gprs.c: 406: break;
 22858                           
 22859                           ;mdm_gsm_gprs.c: 405: default:
 22860                           
 22861                           ; BSR set to: 0
 22862                           ;mdm_gsm_gprs.c: 403: break;
 22863                           
 22864                           ;mdm_gsm_gprs.c: 402: case Stop:
 22865                           
 22866                           ;mdm_gsm_gprs.c: 400: break;
 22867  0057FE  0012               	return	
 22868  005800                     l1009:
 22869                           
 22870                           ; BSR set to: 0
 22871  005800  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 22872                           
 22873                           ; Switch size 1, requested type "space"
 22874                           ; Number of cases is 3, Range of values is 0 to 2
 22875                           ; switch strategies available:
 22876                           ; Name         Instructions Cycles
 22877                           ; simple_byte           10     6 (average)
 22878                           ;	Chosen strategy is simple_byte
 22879  005802  0A00               	xorlw	0	; case 0
 22880  005804  B4D8               	btfsc	status,2,c
 22881  005806  D7E3               	goto	l1010
 22882  005808  0A01               	xorlw	1	; case 1
 22883  00580A  B4D8               	btfsc	status,2,c
 22884  00580C  D7EC               	goto	l1013
 22885  00580E  0A03               	xorlw	3	; case 2
 22886  005810  0012               	return	
 22887  005812                     __end_of_TurnOnModem:
 22888                           	opt stack 0
 22889                           tosu	equ	0xFFF
 22890                           tosh	equ	0xFFE
 22891                           tosl	equ	0xFFD
 22892                           pclath	equ	0xFFA
 22893                           tblptru	equ	0xFF8
 22894                           tblptrh	equ	0xFF7
 22895                           tblptrl	equ	0xFF6
 22896                           tablat	equ	0xFF5
 22897                           prodh	equ	0xFF4
 22898                           prodl	equ	0xFF3
 22899                           intcon	equ	0xFF2
 22900                           intcon2	equ	0xFF1
 22901                           intcon3	equ	0xFF0
 22902                           indf0	equ	0xFEF
 22903                           postinc0	equ	0xFEE
 22904                           plusw0	equ	0xFEB
 22905                           fsr0h	equ	0xFEA
 22906                           fsr0l	equ	0xFE9
 22907                           wreg	equ	0xFE8
 22908                           indf1	equ	0xFE7
 22909                           postinc1	equ	0xFE6
 22910                           postdec1	equ	0xFE5
 22911                           fsr1h	equ	0xFE2
 22912                           fsr1l	equ	0xFE1
 22913                           indf2	equ	0xFDF
 22914                           postinc2	equ	0xFDE
 22915                           postdec2	equ	0xFDD
 22916                           plusw2	equ	0xFDB
 22917                           fsr2h	equ	0xFDA
 22918                           fsr2l	equ	0xFD9
 22919                           status	equ	0xFD8
 22920                           
 22921 ;; *************** function _SendSmsSm *****************
 22922 ;; Defined at:
 22923 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22924 ;; Parameters:    Size  Location     Type
 22925 ;;		None
 22926 ;; Auto vars:     Size  Location     Type
 22927 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22928 ;; Return value:  Size  Location     Type
 22929 ;;                  1    wreg      void 
 22930 ;; Registers used:
 22931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22932 ;; Tracked objects:
 22933 ;;		On entry : 0/0
 22934 ;;		On exit  : 0/0
 22935 ;;		Unchanged: 0/0
 22936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22938 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22940 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22941 ;;Total ram usage:       52 bytes
 22942 ;; Hardware stack levels used:    1
 22943 ;; Hardware stack levels required when called:   14
 22944 ;; This function calls:
 22945 ;;		_OsTmr_GetTimerStatus
 22946 ;;		_OsTmr_StartTimer
 22947 ;;		_ReceiveEvt
 22948 ;;		_StringCopy
 22949 ;;		_Uart_WriteStringLen
 22950 ;; This function is called by:
 22951 ;;		_Mdm_MainTask
 22952 ;; This function uses a non-reentrant model
 22953 ;;
 22954                           
 22955                           	psect	text108
 22956  0019F2                     __ptext108:
 22957                           	opt stack 0
 22958  0019F2                     _SendSmsSm:
 22959                           	opt stack 13
 22960                           
 22961                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22962                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22963                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22964                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 22965                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 22966                           
 22967                           ;incstack = 0
 22968  0019F2  0E03               	movlw	3
 22969  0019F4  0100               	movlb	0	; () banked
 22970  0019F6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 22971  0019F8  A4D8               	btfss	status,2,c
 22972  0019FA  0012               	return	
 22973  0019FC  D0C1               	goto	l1091
 22974  0019FE                     
 22975                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 22976                           
 22977                           ; BSR set to: 0
 22978  0019FE  0EE0               	movlw	low _SendSmsEvent
 22979  001A00  0100               	movlb	0	; () banked
 22980  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22981  001A04  0E00               	movlw	high _SendSmsEvent
 22982  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22983  001A08  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 22984  001A0C  0900               	iorlw	0
 22985  001A0E  B4D8               	btfsc	status,2,c
 22986  001A10  0012               	return	
 22987                           
 22988                           ;mdm_gsm_gprs.c: 671: {
 22989                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 22990  001A12  0E01               	movlw	1
 22991  001A14  0101               	movlb	1	; () banked
 22992  001A16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22993                           
 22994                           ; BSR set to: 1
 22995                           ;mdm_gsm_gprs.c: 674: }
 22996                           ;mdm_gsm_gprs.c: 675: break;
 22997  001A18  0012               	return	
 22998  001A1A                     
 22999                           ; BSR set to: 1
 23000                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 23001                           
 23002                           ; BSR set to: 1
 23003  001A1A  0ECD               	movlw	low STR_5
 23004  001A1C  0100               	movlb	0	; () banked
 23005  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23006  001A20  0EFF               	movlw	high STR_5
 23007  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23008  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 23009  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23010  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 23011  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23012  001A2C  0E00               	movlw	0
 23013  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23014  001A30  0E09               	movlw	9
 23015  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 23016  001A34  EC4B  F028         	call	_StringCopy	;wreg free
 23017                           
 23018                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 23019  001A38  0E86               	movlw	low _PhoneNumber
 23020  001A3A  0100               	movlb	0	; () banked
 23021  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23022  001A3E  0E04               	movlw	high _PhoneNumber
 23023  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23024  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 23025  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23026  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 23027  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23028  001A4A  C0D2  F081         	movff	_PhoneNumbLen,StringCopy@Len
 23029  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23030  001A50  EC4B  F028         	call	_StringCopy	;wreg free
 23031                           
 23032                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 23033  001A54  0100               	movlb	0	; () banked
 23034  001A56  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 23035  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23036  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23037  001A5C  0E09               	movlw	9
 23038  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23039  001A60  0E00               	movlw	0
 23040  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23041  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 23042  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23043  001A68  6ED9               	movwf	fsr2l,c
 23044  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 23045  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23046  001A6E  6EDA               	movwf	fsr2h,c
 23047  001A70  0E22               	movlw	34
 23048  001A72  6EDF               	movwf	indf2,c
 23049                           
 23050                           ; BSR set to: 0
 23051                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 23052  001A74  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 23053  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23054  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23055  001A7A  0E0A               	movlw	10
 23056  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23057  001A7E  0E00               	movlw	0
 23058  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23059  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 23060  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23061  001A86  6ED9               	movwf	fsr2l,c
 23062  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 23063  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23064  001A8C  6EDA               	movwf	fsr2h,c
 23065  001A8E  0E0D               	movlw	13
 23066  001A90  6EDF               	movwf	indf2,c
 23067                           
 23068                           ; BSR set to: 0
 23069                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 23070  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 23071  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23072  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 23073  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23074  001A9A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 23075  001A9C  0F0B               	addlw	11
 23076  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23077  001AA0  0E01               	movlw	1
 23078  001AA2  ECF4  F02C         	call	_Uart_WriteStringLen
 23079                           
 23080                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 23081  001AA6  0EE3               	movlw	low SendSmsSm@SwTimer
 23082  001AA8  0100               	movlb	0	; () banked
 23083  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23084  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 23085  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23086  001AB0  0EC4               	movlw	196
 23087  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23088  001AB4  0E09               	movlw	9
 23089  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23090  001AB8  0E00               	movlw	0
 23091  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23092  001ABC  0E00               	movlw	0
 23093  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23094  001AC0  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 23095                           
 23096                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 23097  001AC4  0E05               	movlw	5
 23098  001AC6  0101               	movlb	1	; () banked
 23099  001AC8  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23100                           
 23101                           ; BSR set to: 1
 23102                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 23103  001ACA  0E02               	movlw	2
 23104  001ACC  6FF2               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 23105                           
 23106                           ;mdm_gsm_gprs.c: 691: break;
 23107  001ACE  0012               	return	
 23108  001AD0                     
 23109                           ; BSR set to: 1
 23110                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 23111                           
 23112                           ; BSR set to: 1
 23113  001AD0  0E0A               	movlw	10
 23114  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 23115                           
 23116                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 23117  001AD4  0E0D               	movlw	13
 23118  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 23119                           
 23120                           ; BSR set to: 1
 23121                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 23122  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 23123  001ADA  0100               	movlb	0	; () banked
 23124  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23125  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 23126  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23127  001AE2  0E02               	movlw	2
 23128  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23129  001AE6  0E01               	movlw	1
 23130  001AE8  ECF4  F02C         	call	_Uart_WriteStringLen
 23131                           
 23132                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 23133  001AEC  0E03               	movlw	3
 23134  001AEE  0101               	movlb	1	; () banked
 23135  001AF0  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23136                           
 23137                           ;mdm_gsm_gprs.c: 701: break;
 23138  001AF2  0012               	return	
 23139  001AF4                     
 23140                           ; BSR set to: 1
 23141                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 23142                           
 23143                           ; BSR set to: 1
 23144  001AF4  0E3C               	movlw	low _NewStringReceived
 23145  001AF6  0100               	movlb	0	; () banked
 23146  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23147  001AFA  0E00               	movlw	high _NewStringReceived
 23148  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23149  001AFE  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 23150  001B02  0900               	iorlw	0
 23151  001B04  B4D8               	btfsc	status,2,c
 23152  001B06  0012               	return	
 23153                           
 23154                           ;mdm_gsm_gprs.c: 706: {
 23155                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 23156  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 23157  001B0C  0A3E               	xorlw	62
 23158  001B0E  A4D8               	btfss	status,2,c
 23159  001B10  0012               	return	
 23160                           
 23161                           ;mdm_gsm_gprs.c: 709: {
 23162                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 23163  001B12  0E04               	movlw	4
 23164  001B14  0101               	movlb	1	; () banked
 23165  001B16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23166                           
 23167                           ; BSR set to: 1
 23168                           ;mdm_gsm_gprs.c: 712: }
 23169                           ;mdm_gsm_gprs.c: 713: }
 23170                           ;mdm_gsm_gprs.c: 714: break;
 23171                           
 23172                           ; BSR set to: 1
 23173  001B18  0012               	return	
 23174  001B1A                     
 23175                           ; BSR set to: 1
 23176                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 23177                           
 23178                           ; BSR set to: 1
 23179  001B1A  0E72               	movlw	low _MessageText
 23180  001B1C  0100               	movlb	0	; () banked
 23181  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23182  001B20  0E05               	movlw	high _MessageText
 23183  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23184  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 23185  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23186  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 23187  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23188  001B2C  C0D3  F081         	movff	_SmsLen,StringCopy@Len
 23189  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23190  001B32  EC4B  F028         	call	_StringCopy	;wreg free
 23191                           
 23192                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 23193  001B36  0100               	movlb	0	; () banked
 23194  001B38  51D3               	movf	_SmsLen& (0+255),w,b
 23195  001B3A  0D01               	mullw	1
 23196  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 23197  001B3E  24F3               	addwf	prodl,w,c
 23198  001B40  6ED9               	movwf	fsr2l,c
 23199  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 23200  001B44  20F4               	addwfc	prodh,w,c
 23201  001B46  6EDA               	movwf	fsr2h,c
 23202  001B48  0E1A               	movlw	26
 23203  001B4A  6EDF               	movwf	indf2,c
 23204                           
 23205                           ; BSR set to: 0
 23206                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 23207  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 23208  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23209  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 23210  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23211  001B54  29D3               	incf	_SmsLen& (0+255),w,b
 23212  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23213  001B58  0E01               	movlw	1
 23214  001B5A  ECF4  F02C         	call	_Uart_WriteStringLen
 23215                           
 23216                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 23217  001B5E  0E00               	movlw	0
 23218  001B60  0101               	movlb	1	; () banked
 23219  001B62  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23220                           
 23221                           ;mdm_gsm_gprs.c: 725: break;
 23222  001B64  0012               	return	
 23223  001B66                     
 23224                           ; BSR set to: 1
 23225                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 23226                           
 23227                           ; BSR set to: 1
 23228  001B66  0EE3               	movlw	low SendSmsSm@SwTimer
 23229  001B68  0100               	movlb	0	; () banked
 23230  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23231  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 23232  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23233  001B70  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 23234  001B74  06E8               	decf	wreg,f,c
 23235  001B76  A4D8               	btfss	status,2,c
 23236  001B78  0012               	return	
 23237                           
 23238                           ;mdm_gsm_gprs.c: 730: {
 23239                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 23240  001B7A  C1F2  F1F3         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 23241                           
 23242                           ;mdm_gsm_gprs.c: 738: }
 23243                           
 23244                           ;mdm_gsm_gprs.c: 737: break;
 23245                           
 23246                           ;mdm_gsm_gprs.c: 736: default:
 23247                           
 23248                           ;mdm_gsm_gprs.c: 733: }
 23249                           ;mdm_gsm_gprs.c: 734: break;
 23250  001B7E  0012               	return	
 23251  001B80                     l1091:
 23252  001B80  0101               	movlb	1	; () banked
 23253  001B82  51F3               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 23254                           
 23255                           ; Switch size 1, requested type "space"
 23256                           ; Number of cases is 6, Range of values is 0 to 5
 23257                           ; switch strategies available:
 23258                           ; Name         Instructions Cycles
 23259                           ; simple_byte           19    10 (average)
 23260                           ;	Chosen strategy is simple_byte
 23261  001B84  0A00               	xorlw	0	; case 0
 23262  001B86  B4D8               	btfsc	status,2,c
 23263  001B88  D73A               	goto	l1092
 23264  001B8A  0A01               	xorlw	1	; case 1
 23265  001B8C  B4D8               	btfsc	status,2,c
 23266  001B8E  D745               	goto	l1095
 23267  001B90  0A03               	xorlw	3	; case 2
 23268  001B92  B4D8               	btfsc	status,2,c
 23269  001B94  D79D               	goto	l1096
 23270  001B96  0A01               	xorlw	1	; case 3
 23271  001B98  B4D8               	btfsc	status,2,c
 23272  001B9A  D7AC               	goto	l1097
 23273  001B9C  0A07               	xorlw	7	; case 4
 23274  001B9E  B4D8               	btfsc	status,2,c
 23275  001BA0  D7BC               	goto	l1100
 23276  001BA2  0A01               	xorlw	1	; case 5
 23277  001BA4  A4D8               	btfss	status,2,c
 23278                           
 23279                           ; BSR set to: 1
 23280  001BA6  0012               	return	
 23281  001BA8  D7DE               	goto	l1101
 23282  001BAA                     __end_of_SendSmsSm:
 23283                           	opt stack 0
 23284                           tosu	equ	0xFFF
 23285                           tosh	equ	0xFFE
 23286                           tosl	equ	0xFFD
 23287                           pclath	equ	0xFFA
 23288                           tblptru	equ	0xFF8
 23289                           tblptrh	equ	0xFF7
 23290                           tblptrl	equ	0xFF6
 23291                           tablat	equ	0xFF5
 23292                           prodh	equ	0xFF4
 23293                           prodl	equ	0xFF3
 23294                           intcon	equ	0xFF2
 23295                           intcon2	equ	0xFF1
 23296                           intcon3	equ	0xFF0
 23297                           indf0	equ	0xFEF
 23298                           postinc0	equ	0xFEE
 23299                           plusw0	equ	0xFEB
 23300                           fsr0h	equ	0xFEA
 23301                           fsr0l	equ	0xFE9
 23302                           wreg	equ	0xFE8
 23303                           indf1	equ	0xFE7
 23304                           postinc1	equ	0xFE6
 23305                           postdec1	equ	0xFE5
 23306                           fsr1h	equ	0xFE2
 23307                           fsr1l	equ	0xFE1
 23308                           indf2	equ	0xFDF
 23309                           postinc2	equ	0xFDE
 23310                           postdec2	equ	0xFDD
 23311                           plusw2	equ	0xFDB
 23312                           fsr2h	equ	0xFDA
 23313                           fsr2l	equ	0xFD9
 23314                           status	equ	0xFD8
 23315                           
 23316 ;; *************** function _Uart_WriteStringLen *****************
 23317 ;; Defined at:
 23318 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23319 ;; Parameters:    Size  Location     Type
 23320 ;;  Module          1    wreg     unsigned char 
 23321 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 23322 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 23323 ;;  Len             1   34[BANK0 ] unsigned char 
 23324 ;; Auto vars:     Size  Location     Type
 23325 ;;  Module          1   36[BANK0 ] unsigned char 
 23326 ;;  Index           1   35[BANK0 ] unsigned char 
 23327 ;; Return value:  Size  Location     Type
 23328 ;;                  1    wreg      void 
 23329 ;; Registers used:
 23330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23331 ;; Tracked objects:
 23332 ;;		On entry : 0/0
 23333 ;;		On exit  : 0/0
 23334 ;;		Unchanged: 0/0
 23335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23336 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23339 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23340 ;;Total ram usage:        5 bytes
 23341 ;; Hardware stack levels used:    1
 23342 ;; Hardware stack levels required when called:   12
 23343 ;; This function calls:
 23344 ;;		_UartTxBufferStatus
 23345 ;;		_UartWriteByte
 23346 ;; This function is called by:
 23347 ;;		_SendSmsSm
 23348 ;;		_GsmGprsTerminal
 23349 ;; This function uses a non-reentrant model
 23350 ;;
 23351                           
 23352                           	psect	text109
 23353  0059E8                     __ptext109:
 23354                           	opt stack 0
 23355  0059E8                     _Uart_WriteStringLen:
 23356                           	opt stack 14
 23357                           
 23358                           ;incstack = 0
 23359                           ;Uart_WriteStringLen@Module stored from wreg
 23360  0059E8  0100               	movlb	0	; () banked
 23361  0059EA  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 23362                           
 23363                           ;uart_drv.c: 544: UINT8 Index;
 23364                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 23365  0059EC  0E00               	movlw	0
 23366  0059EE  0100               	movlb	0	; () banked
 23367  0059F0  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 23368  0059F2  D015               	goto	l715
 23369  0059F4                     
 23370                           ; BSR set to: 0
 23371                           ;uart_drv.c: 547: {
 23372                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 23373                           
 23374                           ; BSR set to: 0
 23375  0059F4  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 23376  0059F8  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 23377  0059FC  50DF               	movf	indf2,w,c
 23378  0059FE  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 23379  005A00  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23380  005A02  EC1B  F030         	call	_UartWriteByte
 23381                           
 23382                           ;uart_drv.c: 551: StringToWrite++;
 23383  005A06  0100               	movlb	0	; () banked
 23384  005A08  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 23385  005A0A  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 23386  005A0C                     
 23387                           ; BSR set to: 0
 23388                           
 23389                           ; BSR set to: 0
 23390  005A0C  0100               	movlb	0	; () banked
 23391  005A0E  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23392  005A10  EC2B  F02B         	call	_UartTxBufferStatus
 23393  005A14  06E8               	decf	wreg,f,c
 23394  005A16  B4D8               	btfsc	status,2,c
 23395  005A18  D7F9               	goto	l718
 23396  005A1A  0100               	movlb	0	; () banked
 23397  005A1C  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 23398  005A1E                     l715:
 23399                           
 23400                           ; BSR set to: 0
 23401                           
 23402                           ; BSR set to: 0
 23403  005A1E  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 23404  005A20  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 23405  005A22  B0D8               	btfsc	status,0,c
 23406  005A24  0012               	return	
 23407  005A26  D7E6               	goto	l716
 23408  005A28                     __end_of_Uart_WriteStringLen:
 23409                           	opt stack 0
 23410                           tosu	equ	0xFFF
 23411                           tosh	equ	0xFFE
 23412                           tosl	equ	0xFFD
 23413                           pclath	equ	0xFFA
 23414                           tblptru	equ	0xFF8
 23415                           tblptrh	equ	0xFF7
 23416                           tblptrl	equ	0xFF6
 23417                           tablat	equ	0xFF5
 23418                           prodh	equ	0xFF4
 23419                           prodl	equ	0xFF3
 23420                           intcon	equ	0xFF2
 23421                           intcon2	equ	0xFF1
 23422                           intcon3	equ	0xFF0
 23423                           indf0	equ	0xFEF
 23424                           postinc0	equ	0xFEE
 23425                           plusw0	equ	0xFEB
 23426                           fsr0h	equ	0xFEA
 23427                           fsr0l	equ	0xFE9
 23428                           wreg	equ	0xFE8
 23429                           indf1	equ	0xFE7
 23430                           postinc1	equ	0xFE6
 23431                           postdec1	equ	0xFE5
 23432                           fsr1h	equ	0xFE2
 23433                           fsr1l	equ	0xFE1
 23434                           indf2	equ	0xFDF
 23435                           postinc2	equ	0xFDE
 23436                           postdec2	equ	0xFDD
 23437                           plusw2	equ	0xFDB
 23438                           fsr2h	equ	0xFDA
 23439                           fsr2l	equ	0xFD9
 23440                           status	equ	0xFD8
 23441                           
 23442 ;; *************** function _ModemEvtParser *****************
 23443 ;; Defined at:
 23444 ;;		line 498 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23445 ;; Parameters:    Size  Location     Type
 23446 ;;		None
 23447 ;; Auto vars:     Size  Location     Type
 23448 ;;  CallReadyStr   10   48[BANK0 ] unsigned char [10]
 23449 ;;  SmsString       5   63[BANK0 ] unsigned char [5]
 23450 ;;  ClipString      5   58[BANK0 ] unsigned char [5]
 23451 ;;  RingString      4   68[BANK0 ] unsigned char [4]
 23452 ;;  CompareIdx      1   73[BANK0 ] unsigned char 
 23453 ;;  Match           1   72[BANK0 ] unsigned char 
 23454 ;; Return value:  Size  Location     Type
 23455 ;;                  1    wreg      void 
 23456 ;; Registers used:
 23457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23458 ;; Tracked objects:
 23459 ;;		On entry : 0/0
 23460 ;;		On exit  : 0/0
 23461 ;;		Unchanged: 0/0
 23462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23464 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23466 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23467 ;;Total ram usage:       26 bytes
 23468 ;; Hardware stack levels used:    1
 23469 ;; Hardware stack levels required when called:   12
 23470 ;; This function calls:
 23471 ;;		_GenerateEvt
 23472 ;;		_ReceiveEvt
 23473 ;;		_StringCompare
 23474 ;;		_StringCopy
 23475 ;;		_Uart_ClearRxBuffer
 23476 ;; This function is called by:
 23477 ;;		_Mdm_MainTask
 23478 ;; This function uses a non-reentrant model
 23479 ;;
 23480                           
 23481                           	psect	text110
 23482  001D32                     __ptext110:
 23483                           	opt stack 0
 23484  001D32                     _ModemEvtParser:
 23485                           	opt stack 15
 23486                           
 23487                           ;mdm_gsm_gprs.c: 500: UINT8 RingString[] = {'R','I','N','G'};
 23488                           
 23489                           ; BSR set to: 0
 23490                           ;incstack = 0
 23491  001D32  C3C4  F0A4         	movff	ModemEvtParser@F9104,ModemEvtParser@RingString
 23492  001D36  C3C5  F0A5         	movff	ModemEvtParser@F9104+1,ModemEvtParser@RingString+1
 23493  001D3A  C3C6  F0A6         	movff	ModemEvtParser@F9104+2,ModemEvtParser@RingString+2
 23494  001D3E  C3C7  F0A7         	movff	ModemEvtParser@F9104+3,ModemEvtParser@RingString+3
 23495                           
 23496                           ;mdm_gsm_gprs.c: 501: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 23497  001D42  EE23  F0BF         	lfsr	2,ModemEvtParser@F9106
 23498  001D46  EE10  F09A         	lfsr	1,ModemEvtParser@ClipString
 23499  001D4A  0E04               	movlw	4
 23500  001D4C                     u13391:
 23501  001D4C  CFDB FFE3          	movff	plusw2,plusw1
 23502  001D50  06E8               	decf	wreg,f,c
 23503  001D52  E2FC               	bc	u13391
 23504                           
 23505                           ;mdm_gsm_gprs.c: 502: UINT8 SmsString[] = {'+','C','M','T','I'};
 23506  001D54  EE23  F0BA         	lfsr	2,ModemEvtParser@F9108
 23507  001D58  EE10  F09F         	lfsr	1,ModemEvtParser@SmsString
 23508  001D5C  0E04               	movlw	4
 23509  001D5E                     u13401:
 23510  001D5E  CFDB FFE3          	movff	plusw2,plusw1
 23511  001D62  06E8               	decf	wreg,f,c
 23512  001D64  E2FC               	bc	u13401
 23513                           
 23514                           ;mdm_gsm_gprs.c: 503: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 23515  001D66  EE24  F0BF         	lfsr	2,ModemEvtParser@F9110
 23516  001D6A  EE10  F090         	lfsr	1,ModemEvtParser@CallReadyString
 23517  001D6E  0E09               	movlw	9
 23518  001D70                     u13411:
 23519  001D70  CFDB FFE3          	movff	plusw2,plusw1
 23520  001D74  06E8               	decf	wreg,f,c
 23521  001D76  E2FC               	bc	u13411
 23522                           
 23523                           ;mdm_gsm_gprs.c: 504: UINT8 CompareIdx = 0;
 23524  001D78  0E00               	movlw	0
 23525  001D7A  0100               	movlb	0	; () banked
 23526  001D7C  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23527                           
 23528                           ; BSR set to: 0
 23529                           ;mdm_gsm_gprs.c: 505: UINT8 Match = 0;
 23530  001D7E  0E00               	movlw	0
 23531  001D80  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23532                           
 23533                           ; BSR set to: 0
 23534                           ;mdm_gsm_gprs.c: 508: if (ReceiveEvt(&NewMdmEvtParserRequest))
 23535  001D82  0E3B               	movlw	low _NewMdmEvtParserRequest
 23536  001D84  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23537  001D86  0E00               	movlw	high _NewMdmEvtParserRequest
 23538  001D88  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23539  001D8A  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 23540  001D8E  0900               	iorlw	0
 23541  001D90  B4D8               	btfsc	status,2,c
 23542  001D92  0012               	return	
 23543                           
 23544                           ;mdm_gsm_gprs.c: 509: {
 23545                           ;mdm_gsm_gprs.c: 510: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 23546  001D94  0E00               	movlw	0
 23547  001D96  0100               	movlb	0	; () banked
 23548  001D98  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23549  001D9A                     l14065:
 23550                           
 23551                           ; BSR set to: 0
 23552  001D9A  0E03               	movlw	3
 23553  001D9C  65A9               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 23554  001D9E  D077               	goto	l1052
 23555  001DA0  D086               	goto	u13480
 23556  001DA2                     
 23557                           ; BSR set to: 0
 23558                           ;mdm_gsm_gprs.c: 516: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 23559                           
 23560                           ; BSR set to: 0
 23561  001DA2  0EA4               	movlw	low ModemEvtParser@RingString
 23562  001DA4  6F85               	movwf	StringCompare@String1& (0+255),b
 23563  001DA6  0E00               	movlw	high ModemEvtParser@RingString
 23564  001DA8  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23565  001DAA  0E58               	movlw	low _RxBuffer
 23566  001DAC  6F87               	movwf	StringCompare@String2& (0+255),b
 23567  001DAE  0E0C               	movlw	high _RxBuffer
 23568  001DB0  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23569  001DB2  0E00               	movlw	0
 23570  001DB4  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23571  001DB6  0E04               	movlw	4
 23572  001DB8  6F89               	movwf	StringCompare@Len& (0+255),b
 23573  001DBA  EC8A  F02A         	call	_StringCompare	;wreg free
 23574  001DBE  0900               	iorlw	0
 23575  001DC0  B4D8               	btfsc	status,2,c
 23576  001DC2  D072               	goto	l1055
 23577                           
 23578                           ;mdm_gsm_gprs.c: 517: {
 23579                           ;mdm_gsm_gprs.c: 519: GenerateEvt(&RingEvent);
 23580  001DC4  0EDF               	movlw	low _RingEvent
 23581  001DC6  0100               	movlb	0	; () banked
 23582  001DC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23583  001DCA  0E00               	movlw	high _RingEvent
 23584  001DCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23585  001DCE  ECA3  F030         	call	_GenerateEvt	;wreg free
 23586  001DD2  D043               	goto	l14089
 23587  001DD4                     
 23588                           ; BSR set to: 0
 23589                           ;mdm_gsm_gprs.c: 527: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 23590                           
 23591                           ; BSR set to: 0
 23592  001DD4  0E9A               	movlw	low ModemEvtParser@ClipString
 23593  001DD6  6F85               	movwf	StringCompare@String1& (0+255),b
 23594  001DD8  0E00               	movlw	high ModemEvtParser@ClipString
 23595  001DDA  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23596  001DDC  0E58               	movlw	low _RxBuffer
 23597  001DDE  6F87               	movwf	StringCompare@String2& (0+255),b
 23598  001DE0  0E0C               	movlw	high _RxBuffer
 23599  001DE2  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23600  001DE4  0E00               	movlw	0
 23601  001DE6  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23602  001DE8  0E05               	movlw	5
 23603  001DEA  6F89               	movwf	StringCompare@Len& (0+255),b
 23604  001DEC  EC8A  F02A         	call	_StringCompare	;wreg free
 23605  001DF0  0900               	iorlw	0
 23606  001DF2  B4D8               	btfsc	status,2,c
 23607  001DF4  D059               	goto	l1055
 23608                           
 23609                           ;mdm_gsm_gprs.c: 528: {
 23610                           ;mdm_gsm_gprs.c: 529: StringCopy(RxBuffer + 8, callerNumber, 13);
 23611  001DF6  0E60               	movlw	low (_RxBuffer+8)
 23612  001DF8  0100               	movlb	0	; () banked
 23613  001DFA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23614  001DFC  0E0C               	movlw	high (_RxBuffer+8)
 23615  001DFE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23616  001E00  0E39               	movlw	low _callerNumber
 23617  001E02  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23618  001E04  0E03               	movlw	high _callerNumber
 23619  001E06  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23620  001E08  0E00               	movlw	0
 23621  001E0A  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23622  001E0C  0E0D               	movlw	13
 23623  001E0E  6F81               	movwf	StringCopy@Len& (0+255),b
 23624  001E10  EC4B  F028         	call	_StringCopy	;wreg free
 23625                           
 23626                           ;mdm_gsm_gprs.c: 530: callerNumber[13] = '\0';
 23627  001E14  0E00               	movlw	0
 23628  001E16  0103               	movlb	3	; () banked
 23629  001E18  6F46               	movwf	(_callerNumber+13)& (0+255),b
 23630                           
 23631                           ; BSR set to: 3
 23632                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 23633  001E1A  0EDE               	movlw	low _ClipEvent
 23634  001E1C  0100               	movlb	0	; () banked
 23635  001E1E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23636  001E20  0E00               	movlw	high _ClipEvent
 23637  001E22  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23638  001E24  ECA3  F030         	call	_GenerateEvt	;wreg free
 23639  001E28  D018               	goto	l14089
 23640  001E2A                     
 23641                           ; BSR set to: 0
 23642                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 23643                           
 23644                           ; BSR set to: 0
 23645  001E2A  0E9F               	movlw	low ModemEvtParser@SmsString
 23646  001E2C  6F85               	movwf	StringCompare@String1& (0+255),b
 23647  001E2E  0E00               	movlw	high ModemEvtParser@SmsString
 23648  001E30  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23649  001E32  0E58               	movlw	low _RxBuffer
 23650  001E34  6F87               	movwf	StringCompare@String2& (0+255),b
 23651  001E36  0E0C               	movlw	high _RxBuffer
 23652  001E38  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23653  001E3A  0E00               	movlw	0
 23654  001E3C  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23655  001E3E  0E05               	movlw	5
 23656  001E40  6F89               	movwf	StringCompare@Len& (0+255),b
 23657  001E42  EC8A  F02A         	call	_StringCompare	;wreg free
 23658  001E46  0900               	iorlw	0
 23659  001E48  B4D8               	btfsc	status,2,c
 23660  001E4A  D02E               	goto	l1055
 23661                           
 23662                           ;mdm_gsm_gprs.c: 541: {
 23663                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 23664  001E4C  0EDD               	movlw	low _SmsEvent
 23665  001E4E  0100               	movlb	0	; () banked
 23666  001E50  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23667  001E52  0E00               	movlw	high _SmsEvent
 23668  001E54  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23669  001E56  ECA3  F030         	call	_GenerateEvt	;wreg free
 23670  001E5A                     l14089:
 23671                           
 23672                           ;mdm_gsm_gprs.c: 545: Match = 1;
 23673  001E5A  0E01               	movlw	1
 23674  001E5C  0100               	movlb	0	; () banked
 23675  001E5E  D015               	goto	L33
 23676  001E60                     
 23677                           ; BSR set to: 0
 23678                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 23679                           
 23680                           ; BSR set to: 0
 23681  001E60  0E90               	movlw	low ModemEvtParser@CallReadyString
 23682  001E62  6F85               	movwf	StringCompare@String1& (0+255),b
 23683  001E64  0E00               	movlw	high ModemEvtParser@CallReadyString
 23684  001E66  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23685  001E68  0E58               	movlw	low _RxBuffer
 23686  001E6A  6F87               	movwf	StringCompare@String2& (0+255),b
 23687  001E6C  0E0C               	movlw	high _RxBuffer
 23688  001E6E  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23689  001E70  0E00               	movlw	0
 23690  001E72  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23691  001E74  0E0A               	movlw	10
 23692  001E76  6F89               	movwf	StringCompare@Len& (0+255),b
 23693  001E78  EC8A  F02A         	call	_StringCompare	;wreg free
 23694  001E7C  0900               	iorlw	0
 23695  001E7E  B4D8               	btfsc	status,2,c
 23696  001E80  D013               	goto	l1055
 23697                           
 23698                           ;mdm_gsm_gprs.c: 552: {
 23699                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 23700  001E82  0E02               	movlw	2
 23701  001E84  0100               	movlb	0	; () banked
 23702  001E86  6FD1               	movwf	_MdmStatus& (0+255),b
 23703                           
 23704                           ;mdm_gsm_gprs.c: 556: Match = 1;
 23705  001E88  0E01               	movlw	1
 23706  001E8A                     L33:
 23707  001E8A  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23708                           
 23709                           ; BSR set to: 0
 23710                           ;mdm_gsm_gprs.c: 562: }
 23711                           
 23712                           ; BSR set to: 0
 23713                           ;mdm_gsm_gprs.c: 561: break;
 23714                           
 23715                           ;mdm_gsm_gprs.c: 560: default:
 23716                           
 23717                           ; BSR set to: 0
 23718                           ;mdm_gsm_gprs.c: 557: }
 23719                           ;mdm_gsm_gprs.c: 558: break;
 23720  001E8C  D00D               	goto	l1055
 23721  001E8E                     l1052:
 23722                           
 23723                           ; BSR set to: 0
 23724                           
 23725                           ; BSR set to: 0
 23726  001E8E  51A9               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 23727                           
 23728                           ; Switch size 1, requested type "space"
 23729                           ; Number of cases is 4, Range of values is 0 to 3
 23730                           ; switch strategies available:
 23731                           ; Name         Instructions Cycles
 23732                           ; simple_byte           13     7 (average)
 23733                           ;	Chosen strategy is simple_byte
 23734  001E90  0A00               	xorlw	0	; case 0
 23735  001E92  B4D8               	btfsc	status,2,c
 23736  001E94  D786               	goto	l1053
 23737  001E96  0A01               	xorlw	1	; case 1
 23738  001E98  B4D8               	btfsc	status,2,c
 23739  001E9A  D7C7               	goto	l1058
 23740  001E9C  0A03               	xorlw	3	; case 2
 23741  001E9E  B4D8               	btfsc	status,2,c
 23742  001EA0  D7DF               	goto	l1060
 23743  001EA2  0A01               	xorlw	1	; case 3
 23744  001EA4  B4D8               	btfsc	status,2,c
 23745  001EA6  D796               	goto	l1056
 23746  001EA8                     l1055:
 23747                           
 23748                           ; BSR set to: 0
 23749  001EA8  0100               	movlb	0	; () banked
 23750  001EAA  2BA9               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 23751  001EAC  D776               	goto	l14065
 23752  001EAE                     u13480:
 23753                           
 23754                           ; BSR set to: 0
 23755                           ;mdm_gsm_gprs.c: 563: }
 23756                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 23757                           
 23758                           ; BSR set to: 0
 23759  001EAE  05A8               	decf	ModemEvtParser@Match& (0+255),w,b
 23760  001EB0  A4D8               	btfss	status,2,c
 23761  001EB2  0012               	return	
 23762                           
 23763                           ; BSR set to: 0
 23764                           ;mdm_gsm_gprs.c: 567: {
 23765                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 23766  001EB4  EC1C  F02E         	call	_Uart_ClearRxBuffer	;wreg free
 23767  001EB8  0012               	return	
 23768  001EBA                     __end_of_ModemEvtParser:
 23769                           	opt stack 0
 23770                           tosu	equ	0xFFF
 23771                           tosh	equ	0xFFE
 23772                           tosl	equ	0xFFD
 23773                           pclath	equ	0xFFA
 23774                           tblptru	equ	0xFF8
 23775                           tblptrh	equ	0xFF7
 23776                           tblptrl	equ	0xFF6
 23777                           tablat	equ	0xFF5
 23778                           prodh	equ	0xFF4
 23779                           prodl	equ	0xFF3
 23780                           intcon	equ	0xFF2
 23781                           intcon2	equ	0xFF1
 23782                           intcon3	equ	0xFF0
 23783                           indf0	equ	0xFEF
 23784                           postinc0	equ	0xFEE
 23785                           plusw0	equ	0xFEB
 23786                           fsr0h	equ	0xFEA
 23787                           fsr0l	equ	0xFE9
 23788                           wreg	equ	0xFE8
 23789                           indf1	equ	0xFE7
 23790                           postinc1	equ	0xFE6
 23791                           postdec1	equ	0xFE5
 23792                           plusw1	equ	0xFE3
 23793                           fsr1h	equ	0xFE2
 23794                           fsr1l	equ	0xFE1
 23795                           indf2	equ	0xFDF
 23796                           postinc2	equ	0xFDE
 23797                           postdec2	equ	0xFDD
 23798                           plusw2	equ	0xFDB
 23799                           fsr2h	equ	0xFDA
 23800                           fsr2l	equ	0xFD9
 23801                           status	equ	0xFD8
 23802                           
 23803 ;; *************** function _Uart_ClearRxBuffer *****************
 23804 ;; Defined at:
 23805 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23806 ;; Parameters:    Size  Location     Type
 23807 ;;		None
 23808 ;; Auto vars:     Size  Location     Type
 23809 ;;  Index           2   29[BANK0 ] unsigned short 
 23810 ;; Return value:  Size  Location     Type
 23811 ;;                  1    wreg      void 
 23812 ;; Registers used:
 23813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23814 ;; Tracked objects:
 23815 ;;		On entry : 0/0
 23816 ;;		On exit  : 0/0
 23817 ;;		Unchanged: 0/0
 23818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23822 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23823 ;;Total ram usage:        2 bytes
 23824 ;; Hardware stack levels used:    1
 23825 ;; Hardware stack levels required when called:   11
 23826 ;; This function calls:
 23827 ;;		Nothing
 23828 ;; This function is called by:
 23829 ;;		_ModemEvtParser
 23830 ;; This function uses a non-reentrant model
 23831 ;;
 23832                           
 23833                           	psect	text111
 23834  005C38                     __ptext111:
 23835                           	opt stack 0
 23836  005C38                     _Uart_ClearRxBuffer:
 23837                           	opt stack 15
 23838                           
 23839                           ;uart_drv.c: 567: UINT16 Index = 0;
 23840                           
 23841                           ;incstack = 0
 23842  005C38  0E00               	movlw	0
 23843  005C3A  0100               	movlb	0	; () banked
 23844  005C3C  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23845  005C3E  0E00               	movlw	0
 23846  005C40  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23847                           
 23848                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 23849  005C42  0E00               	movlw	0
 23850  005C44  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23851  005C46  0E00               	movlw	0
 23852  005C48  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23853  005C4A                     l13323:
 23854                           
 23855                           ; BSR set to: 0
 23856  005C4A  0E90               	movlw	144
 23857  005C4C  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23858  005C4E  0E01               	movlw	1
 23859  005C50  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23860  005C52  B0D8               	btfsc	status,0,c
 23861  005C54  0012               	return	
 23862                           
 23863                           ; BSR set to: 0
 23864                           ;uart_drv.c: 571: {
 23865                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 23866                           
 23867                           ; BSR set to: 0
 23868                           
 23869                           ; BSR set to: 0
 23870  005C56  0E58               	movlw	low _RxBuffer
 23871  005C58  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23872  005C5A  6ED9               	movwf	fsr2l,c
 23873  005C5C  0E0C               	movlw	high _RxBuffer
 23874  005C5E  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23875  005C60  6EDA               	movwf	fsr2h,c
 23876  005C62  0E00               	movlw	0
 23877  005C64  6EDF               	movwf	indf2,c
 23878                           
 23879                           ; BSR set to: 0
 23880  005C66  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 23881  005C68  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 23882  005C6A  D7EF               	goto	l13323
 23883  005C6C                     __end_of_Uart_ClearRxBuffer:
 23884                           	opt stack 0
 23885                           tosu	equ	0xFFF
 23886                           tosh	equ	0xFFE
 23887                           tosl	equ	0xFFD
 23888                           pclath	equ	0xFFA
 23889                           tblptru	equ	0xFF8
 23890                           tblptrh	equ	0xFF7
 23891                           tblptrl	equ	0xFF6
 23892                           tablat	equ	0xFF5
 23893                           prodh	equ	0xFF4
 23894                           prodl	equ	0xFF3
 23895                           intcon	equ	0xFF2
 23896                           intcon2	equ	0xFF1
 23897                           intcon3	equ	0xFF0
 23898                           indf0	equ	0xFEF
 23899                           postinc0	equ	0xFEE
 23900                           plusw0	equ	0xFEB
 23901                           fsr0h	equ	0xFEA
 23902                           fsr0l	equ	0xFE9
 23903                           wreg	equ	0xFE8
 23904                           indf1	equ	0xFE7
 23905                           postinc1	equ	0xFE6
 23906                           postdec1	equ	0xFE5
 23907                           plusw1	equ	0xFE3
 23908                           fsr1h	equ	0xFE2
 23909                           fsr1l	equ	0xFE1
 23910                           indf2	equ	0xFDF
 23911                           postinc2	equ	0xFDE
 23912                           postdec2	equ	0xFDD
 23913                           plusw2	equ	0xFDB
 23914                           fsr2h	equ	0xFDA
 23915                           fsr2l	equ	0xFD9
 23916                           status	equ	0xFD8
 23917                           
 23918 ;; *************** function _StringCompare *****************
 23919 ;; Defined at:
 23920 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23921 ;; Parameters:    Size  Location     Type
 23922 ;;  String1         2   37[BANK0 ] PTR unsigned char 
 23923 ;;		 -> MyApp_Task@phone(14), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@ClipString
      +(5), 
 23924 ;;		 -> ModemEvtParser@RingString(4), 
 23925 ;;  String2         2   39[BANK0 ] PTR unsigned char 
 23926 ;;		 -> callerNumber(14), RxBuffer(400), 
 23927 ;;  Len             2   41[BANK0 ] unsigned short 
 23928 ;; Auto vars:     Size  Location     Type
 23929 ;;  Index           2   46[BANK0 ] unsigned short 
 23930 ;;  Result          1   45[BANK0 ] unsigned char 
 23931 ;; Return value:  Size  Location     Type
 23932 ;;                  1    wreg      unsigned char 
 23933 ;; Registers used:
 23934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23935 ;; Tracked objects:
 23936 ;;		On entry : 0/0
 23937 ;;		On exit  : 0/0
 23938 ;;		Unchanged: 0/0
 23939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23940 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23941 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23943 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23944 ;;Total ram usage:       11 bytes
 23945 ;; Hardware stack levels used:    1
 23946 ;; Hardware stack levels required when called:   11
 23947 ;; This function calls:
 23948 ;;		Nothing
 23949 ;; This function is called by:
 23950 ;;		_ModemEvtParser
 23951 ;;		_MyApp_Task
 23952 ;; This function uses a non-reentrant model
 23953 ;;
 23954                           
 23955                           	psect	text112
 23956  005514                     __ptext112:
 23957                           	opt stack 0
 23958  005514                     _StringCompare:
 23959                           	opt stack 16
 23960                           
 23961                           ;sf.c: 77: UINT16 Index = 0;
 23962                           
 23963                           ; BSR set to: 0
 23964                           ;incstack = 0
 23965  005514  0E00               	movlw	0
 23966  005516  0100               	movlb	0	; () banked
 23967  005518  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23968  00551A  0E00               	movlw	0
 23969  00551C  6F8E               	movwf	StringCompare@Index& (0+255),b
 23970                           
 23971                           ;sf.c: 78: UINT8 Result = 1;
 23972  00551E  0E01               	movlw	1
 23973  005520  6F8D               	movwf	StringCompare@Result& (0+255),b
 23974                           
 23975                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23976  005522  0E00               	movlw	0
 23977  005524  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23978  005526  0E00               	movlw	0
 23979  005528  6F8E               	movwf	StringCompare@Index& (0+255),b
 23980  00552A  D015               	goto	l2211
 23981  00552C                     
 23982                           ; BSR set to: 0
 23983                           ;sf.c: 82: {
 23984                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23985                           
 23986                           ; BSR set to: 0
 23987  00552C  518E               	movf	StringCompare@Index& (0+255),w,b
 23988  00552E  2587               	addwf	StringCompare@String2& (0+255),w,b
 23989  005530  6ED9               	movwf	fsr2l,c
 23990  005532  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23991  005534  2188               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23992  005536  6EDA               	movwf	fsr2h,c
 23993  005538  518E               	movf	StringCompare@Index& (0+255),w,b
 23994  00553A  2585               	addwf	StringCompare@String1& (0+255),w,b
 23995  00553C  6EE1               	movwf	fsr1l,c
 23996  00553E  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23997  005540  2186               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23998  005542  6EE2               	movwf	fsr1h,c
 23999  005544  50DE               	movf	postinc2,w,c
 24000  005546  18E6               	xorwf	postinc1,w,c
 24001  005548  B4D8               	btfsc	status,2,c
 24002  00554A  D003               	goto	l2213
 24003                           
 24004                           ; BSR set to: 0
 24005                           ;sf.c: 84: {
 24006                           ;sf.c: 85: Result = 0;
 24007  00554C  0E00               	movlw	0
 24008  00554E  6F8D               	movwf	StringCompare@Result& (0+255),b
 24009                           
 24010                           ;sf.c: 86: break;
 24011  005550  D008               	goto	u12420
 24012  005552                     l2213:
 24013                           
 24014                           ; BSR set to: 0
 24015                           
 24016                           ; BSR set to: 0
 24017  005552  4B8E               	infsnz	StringCompare@Index& (0+255),f,b
 24018  005554  2B8F               	incf	(StringCompare@Index+1)& (0+255),f,b
 24019  005556                     l2211:
 24020                           
 24021                           ; BSR set to: 0
 24022                           
 24023                           ; BSR set to: 0
 24024  005556  5189               	movf	StringCompare@Len& (0+255),w,b
 24025  005558  5D8E               	subwf	StringCompare@Index& (0+255),w,b
 24026  00555A  518A               	movf	(StringCompare@Len+1)& (0+255),w,b
 24027  00555C  598F               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 24028  00555E  A0D8               	btfss	status,0,c
 24029  005560  D7E5               	goto	l2212
 24030  005562                     u12420:
 24031                           
 24032                           ; BSR set to: 0
 24033                           ;sf.c: 87: }
 24034                           ;sf.c: 88: }
 24035                           ;sf.c: 91: return Result;
 24036                           
 24037                           ; BSR set to: 0
 24038  005562  518D               	movf	StringCompare@Result& (0+255),w,b
 24039  005564  0012               	return	
 24040  005566                     __end_of_StringCompare:
 24041                           	opt stack 0
 24042                           tosu	equ	0xFFF
 24043                           tosh	equ	0xFFE
 24044                           tosl	equ	0xFFD
 24045                           pclath	equ	0xFFA
 24046                           tblptru	equ	0xFF8
 24047                           tblptrh	equ	0xFF7
 24048                           tblptrl	equ	0xFF6
 24049                           tablat	equ	0xFF5
 24050                           prodh	equ	0xFF4
 24051                           prodl	equ	0xFF3
 24052                           intcon	equ	0xFF2
 24053                           intcon2	equ	0xFF1
 24054                           intcon3	equ	0xFF0
 24055                           indf0	equ	0xFEF
 24056                           postinc0	equ	0xFEE
 24057                           plusw0	equ	0xFEB
 24058                           fsr0h	equ	0xFEA
 24059                           fsr0l	equ	0xFE9
 24060                           wreg	equ	0xFE8
 24061                           indf1	equ	0xFE7
 24062                           postinc1	equ	0xFE6
 24063                           postdec1	equ	0xFE5
 24064                           plusw1	equ	0xFE3
 24065                           fsr1h	equ	0xFE2
 24066                           fsr1l	equ	0xFE1
 24067                           indf2	equ	0xFDF
 24068                           postinc2	equ	0xFDE
 24069                           postdec2	equ	0xFDD
 24070                           plusw2	equ	0xFDB
 24071                           fsr2h	equ	0xFDA
 24072                           fsr2l	equ	0xFD9
 24073                           status	equ	0xFD8
 24074                           
 24075 ;; *************** function _GetSmsSm *****************
 24076 ;; Defined at:
 24077 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24078 ;; Parameters:    Size  Location     Type
 24079 ;;		None
 24080 ;; Auto vars:     Size  Location     Type
 24081 ;;		None
 24082 ;; Return value:  Size  Location     Type
 24083 ;;                  1    wreg      void 
 24084 ;; Registers used:
 24085 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24086 ;; Tracked objects:
 24087 ;;		On entry : 0/0
 24088 ;;		On exit  : 0/0
 24089 ;;		Unchanged: 0/0
 24090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24095 ;;Total ram usage:        0 bytes
 24096 ;; Hardware stack levels used:    1
 24097 ;; Hardware stack levels required when called:   13
 24098 ;; This function calls:
 24099 ;;		_ClearBuffer
 24100 ;;		_GenerateEvt
 24101 ;;		_ReceiveEvt
 24102 ;;		_StringCopy
 24103 ;;		_Uart_WriteConstString
 24104 ;; This function is called by:
 24105 ;;		_Mdm_MainTask
 24106 ;; This function uses a non-reentrant model
 24107 ;;
 24108                           
 24109                           	psect	text113
 24110  002A94                     __ptext113:
 24111                           	opt stack 0
 24112  002A94                     _GetSmsSm:
 24113                           	opt stack 14
 24114                           
 24115                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 24116                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 24117                           
 24118                           ; BSR set to: 0
 24119                           ;incstack = 0
 24120  002A94  0E03               	movlw	3
 24121  002A96  0100               	movlb	0	; () banked
 24122  002A98  19D1               	xorwf	_MdmStatus& (0+255),w,b
 24123  002A9A  A4D8               	btfss	status,2,c
 24124  002A9C  0012               	return	
 24125  002A9E  D084               	goto	l1070
 24126  002AA0                     
 24127                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 24128                           
 24129                           ; BSR set to: 0
 24130  002AA0  0EDC               	movlw	low _GetSmsText
 24131  002AA2  0100               	movlb	0	; () banked
 24132  002AA4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24133  002AA6  0E00               	movlw	high _GetSmsText
 24134  002AA8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24135  002AAA  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 24136  002AAE  0900               	iorlw	0
 24137  002AB0  B4D8               	btfsc	status,2,c
 24138  002AB2  0012               	return	
 24139                           
 24140                           ;mdm_gsm_gprs.c: 596: {
 24141                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 24142  002AB4  0E01               	movlw	1
 24143  002AB6  0101               	movlb	1	; () banked
 24144  002AB8  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24145                           
 24146                           ; BSR set to: 1
 24147                           ;mdm_gsm_gprs.c: 599: }
 24148                           ;mdm_gsm_gprs.c: 600: break;
 24149  002ABA  0012               	return	
 24150  002ABC                     
 24151                           ; BSR set to: 1
 24152                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 24153                           
 24154                           ; BSR set to: 1
 24155  002ABC  0EC1               	movlw	low STR_4
 24156  002ABE  0100               	movlb	0	; () banked
 24157  002AC0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24158  002AC2  0EFF               	movlw	high STR_4
 24159  002AC4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24160  002AC6  0E01               	movlw	1
 24161  002AC8  EC91  F02C         	call	_Uart_WriteConstString
 24162                           
 24163                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 24164  002ACC  0E02               	movlw	2
 24165  002ACE  0101               	movlb	1	; () banked
 24166  002AD0  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24167                           
 24168                           ;mdm_gsm_gprs.c: 607: break;
 24169  002AD2  0012               	return	
 24170  002AD4                     
 24171                           ; BSR set to: 1
 24172                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 24173                           
 24174                           ; BSR set to: 1
 24175  002AD4  0E3C               	movlw	low _NewStringReceived
 24176  002AD6  0100               	movlb	0	; () banked
 24177  002AD8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24178  002ADA  0E00               	movlw	high _NewStringReceived
 24179  002ADC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24180  002ADE  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 24181  002AE2  0900               	iorlw	0
 24182  002AE4  B4D8               	btfsc	status,2,c
 24183  002AE6  0012               	return	
 24184                           
 24185                           ;mdm_gsm_gprs.c: 612: {
 24186                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 24187  002AE8  CC58  FFE8         	movff	_RxBuffer,wreg
 24188  002AEC  0A2B               	xorlw	43
 24189  002AEE  A4D8               	btfss	status,2,c
 24190  002AF0  0012               	return	
 24191  002AF2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24192  002AF6  0A43               	xorlw	67
 24193  002AF8  A4D8               	btfss	status,2,c
 24194  002AFA  0012               	return	
 24195  002AFC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24196  002B00  0A4D               	xorlw	77
 24197  002B02  A4D8               	btfss	status,2,c
 24198  002B04  0012               	return	
 24199                           
 24200                           ;mdm_gsm_gprs.c: 614: {
 24201                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 24202  002B06  0E00               	movlw	low _Mdm_SmsRx
 24203  002B08  0100               	movlb	0	; () banked
 24204  002B0A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24205  002B0C  0E07               	movlw	high _Mdm_SmsRx
 24206  002B0E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24207  002B10  0E00               	movlw	0
 24208  002B12  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24209  002B14  0E50               	movlw	80
 24210  002B16  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24211  002B18  EC01  F02E         	call	_ClearBuffer	;wreg free
 24212                           
 24213                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 24214  002B1C  0E58               	movlw	low _RxBuffer
 24215  002B1E  0100               	movlb	0	; () banked
 24216  002B20  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24217  002B22  0E0C               	movlw	high _RxBuffer
 24218  002B24  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24219  002B26  0E00               	movlw	low _Mdm_SmsRx
 24220  002B28  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24221  002B2A  0E07               	movlw	high _Mdm_SmsRx
 24222  002B2C  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24223  002B2E  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24224  002B32  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24225  002B36  EC4B  F028         	call	_StringCopy	;wreg free
 24226                           
 24227                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 24228  002B3A  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 24229                           
 24230                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 24231  002B3E  0E03               	movlw	3
 24232  002B40  0101               	movlb	1	; () banked
 24233  002B42  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24234                           
 24235                           ; BSR set to: 1
 24236                           ;mdm_gsm_gprs.c: 622: }
 24237                           ;mdm_gsm_gprs.c: 623: }
 24238                           ;mdm_gsm_gprs.c: 624: break;
 24239                           
 24240                           ; BSR set to: 1
 24241  002B44  0012               	return	
 24242  002B46                     
 24243                           ; BSR set to: 1
 24244                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 24245                           
 24246                           ; BSR set to: 1
 24247  002B46  0E3C               	movlw	low _NewStringReceived
 24248  002B48  0100               	movlb	0	; () banked
 24249  002B4A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24250  002B4C  0E00               	movlw	high _NewStringReceived
 24251  002B4E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24252  002B50  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 24253  002B54  0900               	iorlw	0
 24254  002B56  B4D8               	btfsc	status,2,c
 24255  002B58  0012               	return	
 24256                           
 24257                           ;mdm_gsm_gprs.c: 629: {
 24258                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 24259  002B5A  0E50               	movlw	low (_Mdm_SmsRx+80)
 24260  002B5C  0100               	movlb	0	; () banked
 24261  002B5E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24262  002B60  0E07               	movlw	high (_Mdm_SmsRx+80)
 24263  002B62  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24264  002B64  0E00               	movlw	0
 24265  002B66  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24266  002B68  0E14               	movlw	20
 24267  002B6A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24268  002B6C  EC01  F02E         	call	_ClearBuffer	;wreg free
 24269                           
 24270                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 24271  002B70  0E58               	movlw	low _RxBuffer
 24272  002B72  0100               	movlb	0	; () banked
 24273  002B74  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24274  002B76  0E0C               	movlw	high _RxBuffer
 24275  002B78  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24276  002B7A  0E50               	movlw	low (_Mdm_SmsRx+80)
 24277  002B7C  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24278  002B7E  0E07               	movlw	high (_Mdm_SmsRx+80)
 24279  002B80  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24280  002B82  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24281  002B86  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24282  002B8A  EC4B  F028         	call	_StringCopy	;wreg free
 24283                           
 24284                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 24285  002B8E  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 24286                           
 24287                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 24288  002B92  0E00               	movlw	0
 24289  002B94  0101               	movlb	1	; () banked
 24290  002B96  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24291                           
 24292                           ; BSR set to: 1
 24293                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 24294  002B98  0EDB               	movlw	low _SmsTxtReady
 24295  002B9A  0100               	movlb	0	; () banked
 24296  002B9C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24297  002B9E  0E00               	movlw	high _SmsTxtReady
 24298  002BA0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24299  002BA2  ECA3  F030         	call	_GenerateEvt	;wreg free
 24300                           
 24301                           ;mdm_gsm_gprs.c: 644: }
 24302                           
 24303                           ;mdm_gsm_gprs.c: 643: break;
 24304                           
 24305                           ;mdm_gsm_gprs.c: 642: default:
 24306                           
 24307                           ;mdm_gsm_gprs.c: 639: }
 24308                           ;mdm_gsm_gprs.c: 640: break;
 24309  002BA6  0012               	return	
 24310  002BA8                     l1070:
 24311  002BA8  0101               	movlb	1	; () banked
 24312  002BAA  51F4               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 24313                           
 24314                           ; Switch size 1, requested type "space"
 24315                           ; Number of cases is 4, Range of values is 0 to 3
 24316                           ; switch strategies available:
 24317                           ; Name         Instructions Cycles
 24318                           ; simple_byte           13     7 (average)
 24319                           ;	Chosen strategy is simple_byte
 24320  002BAC  0A00               	xorlw	0	; case 0
 24321  002BAE  B4D8               	btfsc	status,2,c
 24322  002BB0  D777               	goto	l1071
 24323  002BB2  0A01               	xorlw	1	; case 1
 24324  002BB4  B4D8               	btfsc	status,2,c
 24325  002BB6  D782               	goto	l1074
 24326  002BB8  0A03               	xorlw	3	; case 2
 24327  002BBA  B4D8               	btfsc	status,2,c
 24328  002BBC  D78B               	goto	l1075
 24329  002BBE  0A01               	xorlw	1	; case 3
 24330  002BC0  A4D8               	btfss	status,2,c
 24331                           
 24332                           ; BSR set to: 1
 24333  002BC2  0012               	return	
 24334  002BC4  D7C0               	goto	l1078
 24335  002BC6                     __end_of_GetSmsSm:
 24336                           	opt stack 0
 24337                           tosu	equ	0xFFF
 24338                           tosh	equ	0xFFE
 24339                           tosl	equ	0xFFD
 24340                           pclath	equ	0xFFA
 24341                           tblptru	equ	0xFF8
 24342                           tblptrh	equ	0xFF7
 24343                           tblptrl	equ	0xFF6
 24344                           tablat	equ	0xFF5
 24345                           prodh	equ	0xFF4
 24346                           prodl	equ	0xFF3
 24347                           intcon	equ	0xFF2
 24348                           intcon2	equ	0xFF1
 24349                           intcon3	equ	0xFF0
 24350                           indf0	equ	0xFEF
 24351                           postinc0	equ	0xFEE
 24352                           plusw0	equ	0xFEB
 24353                           fsr0h	equ	0xFEA
 24354                           fsr0l	equ	0xFE9
 24355                           wreg	equ	0xFE8
 24356                           indf1	equ	0xFE7
 24357                           postinc1	equ	0xFE6
 24358                           postdec1	equ	0xFE5
 24359                           plusw1	equ	0xFE3
 24360                           fsr1h	equ	0xFE2
 24361                           fsr1l	equ	0xFE1
 24362                           indf2	equ	0xFDF
 24363                           postinc2	equ	0xFDE
 24364                           postdec2	equ	0xFDD
 24365                           plusw2	equ	0xFDB
 24366                           fsr2h	equ	0xFDA
 24367                           fsr2l	equ	0xFD9
 24368                           status	equ	0xFD8
 24369                           
 24370 ;; *************** function _ConfigureModem *****************
 24371 ;; Defined at:
 24372 ;;		line 418 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24373 ;; Parameters:    Size  Location     Type
 24374 ;;		None
 24375 ;; Auto vars:     Size  Location     Type
 24376 ;;		None
 24377 ;; Return value:  Size  Location     Type
 24378 ;;                  1    wreg      void 
 24379 ;; Registers used:
 24380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24381 ;; Tracked objects:
 24382 ;;		On entry : 0/0
 24383 ;;		On exit  : 0/0
 24384 ;;		Unchanged: 0/0
 24385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24390 ;;Total ram usage:        0 bytes
 24391 ;; Hardware stack levels used:    1
 24392 ;; Hardware stack levels required when called:   14
 24393 ;; This function calls:
 24394 ;;		_GenerateEvt
 24395 ;;		_UartSetConfigLow
 24396 ;;		_Uart_InitUartModule
 24397 ;;		_Uart_WriteConstString
 24398 ;; This function is called by:
 24399 ;;		_Mdm_MainTask
 24400 ;; This function uses a non-reentrant model
 24401 ;;
 24402                           
 24403                           	psect	text114
 24404  00392A                     __ptext114:
 24405                           	opt stack 0
 24406  00392A                     _ConfigureModem:
 24407                           	opt stack 13
 24408                           
 24409                           ;mdm_gsm_gprs.c: 420: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 24410                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType NextState = MdmCfg_Init;
 24411                           ;mdm_gsm_gprs.c: 422: static UINT16 DelayValueMs = 0;
 24412                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayCounter = 0;
 24413                           ;mdm_gsm_gprs.c: 425: switch (MdmConfigState)
 24414                           
 24415                           ;incstack = 0
 24416  00392A  D054               	goto	l1027
 24417  00392C                     
 24418                           ;mdm_gsm_gprs.c: 429: if (MdmStatus == ModemReady)
 24419  00392C  0E02               	movlw	2
 24420  00392E  0100               	movlb	0	; () banked
 24421  003930  19D1               	xorwf	_MdmStatus& (0+255),w,b
 24422  003932  A4D8               	btfss	status,2,c
 24423  003934  0012               	return	
 24424                           
 24425                           ; BSR set to: 0
 24426                           ;mdm_gsm_gprs.c: 430: {
 24427                           ;mdm_gsm_gprs.c: 432: MdmConfigState = MdmCfg_ChangeBaud;
 24428  003936  0E01               	movlw	1
 24429  003938  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24430                           
 24431                           ; BSR set to: 0
 24432                           ;mdm_gsm_gprs.c: 433: }
 24433                           ;mdm_gsm_gprs.c: 434: break;
 24434  00393A  0012               	return	
 24435  00393C                     
 24436                           ;mdm_gsm_gprs.c: 438: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 24437                           
 24438                           ; BSR set to: 0
 24439  00393C  0E74               	movlw	low STR_2
 24440  00393E  0100               	movlb	0	; () banked
 24441  003940  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24442  003942  0EFF               	movlw	high STR_2
 24443  003944  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24444  003946  0E01               	movlw	1
 24445  003948  EC91  F02C         	call	_Uart_WriteConstString
 24446                           
 24447                           ;mdm_gsm_gprs.c: 440: UartSetConfigLow();
 24448  00394C  EC60  F029         	call	_UartSetConfigLow	;wreg free
 24449                           
 24450                           ;mdm_gsm_gprs.c: 442: Uart_InitUartModule(1,&UartConfig);
 24451  003950  0E24               	movlw	low _UartConfig
 24452  003952  0100               	movlb	0	; () banked
 24453  003954  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 24454  003956  0E03               	movlw	high _UartConfig
 24455  003958  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 24456  00395A  0E01               	movlw	1
 24457  00395C  EC5E  F005         	call	_Uart_InitUartModule
 24458                           
 24459                           ;mdm_gsm_gprs.c: 444: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24460  003960  0E03               	movlw	3
 24461  003962  0102               	movlb	2	; () banked
 24462  003964  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24463  003966  0EE8               	movlw	232
 24464  003968  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24465                           
 24466                           ; BSR set to: 2
 24467                           ;mdm_gsm_gprs.c: 446: NextState = MdmCfg_SetMdmEchoMode;
 24468  00396A  0E02               	movlw	2
 24469  00396C  0101               	movlb	1	; () banked
 24470  00396E  6FF5               	movwf	ConfigureModem@NextState& (0+255),b
 24471                           
 24472                           ; BSR set to: 1
 24473                           ;mdm_gsm_gprs.c: 447: MdmConfigState = MdmCfg_Delay;
 24474  003970  0E04               	movlw	4
 24475  003972  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24476                           
 24477                           ;mdm_gsm_gprs.c: 448: break;
 24478  003974  0012               	return	
 24479  003976                     
 24480                           ;mdm_gsm_gprs.c: 452: Uart_WriteConstString(1,"ATE0\r\n");
 24481                           
 24482                           ; BSR set to: 1
 24483  003976  0EDE               	movlw	low STR_3
 24484  003978  0100               	movlb	0	; () banked
 24485  00397A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24486  00397C  0EFF               	movlw	high STR_3
 24487  00397E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24488  003980  0E01               	movlw	1
 24489  003982  EC91  F02C         	call	_Uart_WriteConstString
 24490                           
 24491                           ;mdm_gsm_gprs.c: 454: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24492  003986  0E03               	movlw	3
 24493  003988  0102               	movlb	2	; () banked
 24494  00398A  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24495  00398C  0EE8               	movlw	232
 24496  00398E  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24497                           
 24498                           ; BSR set to: 2
 24499                           ;mdm_gsm_gprs.c: 456: NextState = MdmCfg_UpdateMdmSts;
 24500  003990  0E05               	movlw	5
 24501  003992  0101               	movlb	1	; () banked
 24502  003994  6FF5               	movwf	ConfigureModem@NextState& (0+255),b
 24503                           
 24504                           ; BSR set to: 1
 24505                           ;mdm_gsm_gprs.c: 457: MdmConfigState = MdmCfg_Delay;
 24506  003996  0E04               	movlw	4
 24507  003998  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24508                           
 24509                           ;mdm_gsm_gprs.c: 458: break;
 24510  00399A  0012               	return	
 24511  00399C                     
 24512                           ;mdm_gsm_gprs.c: 462: DelayCounter++;
 24513                           
 24514                           ; BSR set to: 1
 24515  00399C  0102               	movlb	2	; () banked
 24516  00399E  4BD8               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 24517  0039A0  2BD9               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 24518                           
 24519                           ; BSR set to: 2
 24520                           ;mdm_gsm_gprs.c: 464: if (DelayCounter >= DelayValueMs)
 24521  0039A2  51DA               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 24522  0039A4  5DD8               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 24523  0039A6  51DB               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 24524  0039A8  59D9               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 24525  0039AA  A0D8               	btfss	status,0,c
 24526  0039AC  0012               	return	
 24527                           
 24528                           ; BSR set to: 2
 24529                           ;mdm_gsm_gprs.c: 465: {
 24530                           ;mdm_gsm_gprs.c: 467: DelayCounter = 0;
 24531  0039AE  0E00               	movlw	0
 24532  0039B0  6FD9               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 24533  0039B2  0E00               	movlw	0
 24534  0039B4  6FD8               	movwf	ConfigureModem@DelayCounter& (0+255),b
 24535                           
 24536                           ; BSR set to: 2
 24537                           ;mdm_gsm_gprs.c: 469: MdmConfigState = NextState;
 24538  0039B6  C1F5  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 24539                           
 24540                           ; BSR set to: 2
 24541                           ;mdm_gsm_gprs.c: 470: }
 24542                           ;mdm_gsm_gprs.c: 471: break;
 24543  0039BA  0012               	return	
 24544  0039BC                     
 24545                           ;mdm_gsm_gprs.c: 475: MdmStatus = ModemConfigured;
 24546                           
 24547                           ; BSR set to: 2
 24548  0039BC  0E03               	movlw	3
 24549  0039BE  0100               	movlb	0	; () banked
 24550  0039C0  6FD1               	movwf	_MdmStatus& (0+255),b
 24551                           
 24552                           ; BSR set to: 0
 24553                           ;mdm_gsm_gprs.c: 477: GenerateEvt(&MdmStsReady);
 24554  0039C2  0E39               	movlw	low _MdmStsReady
 24555  0039C4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24556  0039C6  0E00               	movlw	high _MdmStsReady
 24557  0039C8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24558  0039CA  ECA3  F030         	call	_GenerateEvt	;wreg free
 24559                           
 24560                           ;mdm_gsm_gprs.c: 479: MdmConfigState = MdmCfg_Stop;
 24561  0039CE  0E06               	movlw	6
 24562  0039D0  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24563                           
 24564                           ;mdm_gsm_gprs.c: 487: }
 24565                           
 24566                           ;mdm_gsm_gprs.c: 486: break;
 24567                           
 24568                           ;mdm_gsm_gprs.c: 485: default:
 24569                           
 24570                           ;mdm_gsm_gprs.c: 483: break;
 24571                           
 24572                           ;mdm_gsm_gprs.c: 482: case MdmCfg_Stop:
 24573                           
 24574                           ;mdm_gsm_gprs.c: 480: break;
 24575  0039D2  0012               	return	
 24576  0039D4                     l1027:
 24577  0039D4  5028               	movf	ConfigureModem@MdmConfigState,w,c
 24578                           
 24579                           ; Switch size 1, requested type "space"
 24580                           ; Number of cases is 6, Range of values is 0 to 6
 24581                           ; switch strategies available:
 24582                           ; Name         Instructions Cycles
 24583                           ; simple_byte           19    10 (average)
 24584                           ;	Chosen strategy is simple_byte
 24585  0039D6  0A00               	xorlw	0	; case 0
 24586  0039D8  B4D8               	btfsc	status,2,c
 24587  0039DA  D7A8               	goto	l1028
 24588  0039DC  0A01               	xorlw	1	; case 1
 24589  0039DE  B4D8               	btfsc	status,2,c
 24590  0039E0  D7AD               	goto	l1031
 24591  0039E2  0A03               	xorlw	3	; case 2
 24592  0039E4  B4D8               	btfsc	status,2,c
 24593  0039E6  D7C7               	goto	l1032
 24594  0039E8  0A06               	xorlw	6	; case 4
 24595  0039EA  B4D8               	btfsc	status,2,c
 24596  0039EC  D7D7               	goto	l1033
 24597  0039EE  0A01               	xorlw	1	; case 5
 24598  0039F0  B4D8               	btfsc	status,2,c
 24599  0039F2  D7E4               	goto	l1035
 24600  0039F4  0A03               	xorlw	3	; case 6
 24601  0039F6  0012               	return	
 24602  0039F8                     __end_of_ConfigureModem:
 24603                           	opt stack 0
 24604                           tosu	equ	0xFFF
 24605                           tosh	equ	0xFFE
 24606                           tosl	equ	0xFFD
 24607                           pclath	equ	0xFFA
 24608                           tblptru	equ	0xFF8
 24609                           tblptrh	equ	0xFF7
 24610                           tblptrl	equ	0xFF6
 24611                           tablat	equ	0xFF5
 24612                           prodh	equ	0xFF4
 24613                           prodl	equ	0xFF3
 24614                           intcon	equ	0xFF2
 24615                           intcon2	equ	0xFF1
 24616                           intcon3	equ	0xFF0
 24617                           indf0	equ	0xFEF
 24618                           postinc0	equ	0xFEE
 24619                           plusw0	equ	0xFEB
 24620                           fsr0h	equ	0xFEA
 24621                           fsr0l	equ	0xFE9
 24622                           wreg	equ	0xFE8
 24623                           indf1	equ	0xFE7
 24624                           postinc1	equ	0xFE6
 24625                           postdec1	equ	0xFE5
 24626                           plusw1	equ	0xFE3
 24627                           fsr1h	equ	0xFE2
 24628                           fsr1l	equ	0xFE1
 24629                           indf2	equ	0xFDF
 24630                           postinc2	equ	0xFDE
 24631                           postdec2	equ	0xFDD
 24632                           plusw2	equ	0xFDB
 24633                           fsr2h	equ	0xFDA
 24634                           fsr2l	equ	0xFD9
 24635                           status	equ	0xFD8
 24636                           
 24637 ;; *************** function _Uart_InitUartModule *****************
 24638 ;; Defined at:
 24639 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24640 ;; Parameters:    Size  Location     Type
 24641 ;;  Module          1    wreg     unsigned char 
 24642 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 24643 ;;		 -> UartConfig(21), 
 24644 ;; Auto vars:     Size  Location     Type
 24645 ;;  Module          1   65[BANK0 ] unsigned char 
 24646 ;; Return value:  Size  Location     Type
 24647 ;;                  1    wreg      void 
 24648 ;; Registers used:
 24649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24650 ;; Tracked objects:
 24651 ;;		On entry : 0/0
 24652 ;;		On exit  : 0/0
 24653 ;;		Unchanged: 0/0
 24654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24658 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24659 ;;Total ram usage:        5 bytes
 24660 ;; Hardware stack levels used:    1
 24661 ;; Hardware stack levels required when called:   13
 24662 ;; This function calls:
 24663 ;;		_SetUartBaudRate
 24664 ;; This function is called by:
 24665 ;;		_ConfigureModem
 24666 ;;		_Mdm_MainTask
 24667 ;; This function uses a non-reentrant model
 24668 ;;
 24669                           
 24670                           	psect	text115
 24671  000ABC                     __ptext115:
 24672                           	opt stack 0
 24673  000ABC                     _Uart_InitUartModule:
 24674                           	opt stack 14
 24675                           
 24676                           ;incstack = 0
 24677                           ;Uart_InitUartModule@Module stored from wreg
 24678  000ABC  0100               	movlb	0	; () banked
 24679  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 24680                           
 24681                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 24682  000AC0  0100               	movlb	0	; () banked
 24683  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 24684  000AC4  A4D8               	btfss	status,2,c
 24685  000AC6  D0BE               	goto	l668
 24686                           
 24687                           ; BSR set to: 0
 24688                           ;uart_drv.c: 291: {
 24689                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 24690  000AC8  9C94               	bcf	3988,6,c	;volatile
 24691                           
 24692                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 24693  000ACA  8E94               	bsf	3988,7,c	;volatile
 24694                           
 24695                           ; BSR set to: 0
 24696                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 24697  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24698  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24699  000AD4  0E01               	movlw	1
 24700  000AD6  ECAE  F014         	call	_SetUartBaudRate
 24701                           
 24702                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 24703  000ADA  0E00               	movlw	0
 24704  000ADC  6EAD               	movwf	4013,c	;volatile
 24705                           
 24706                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24707  000ADE  0100               	movlb	0	; () banked
 24708  000AE0  EE20 F004          	lfsr	2,4
 24709  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24710  000AE6  26D9               	addwf	fsr2l,f,c
 24711  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24712  000AEA  22DA               	addwfc	fsr2h,f,c
 24713  000AEC  50DF               	movf	indf2,w,c
 24714  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24715  000AF0  0E06               	movlw	6
 24716  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24717  000AF4                     u12285:
 24718  000AF4  90D8               	bcf	status,0,c
 24719  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24720  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24721  000AFA  D7FC               	goto	u12285
 24722  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24723  000AFE  12AD               	iorwf	4013,f,c	;volatile
 24724                           
 24725                           ; BSR set to: 0
 24726                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24727  000B00  EE20 F006          	lfsr	2,6
 24728  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24729  000B06  26D9               	addwf	fsr2l,f,c
 24730  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24731  000B0A  22DA               	addwfc	fsr2h,f,c
 24732  000B0C  50DF               	movf	indf2,w,c
 24733  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24734  000B10  0E05               	movlw	5
 24735  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24736  000B14                     u12295:
 24737  000B14  90D8               	bcf	status,0,c
 24738  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24739  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24740  000B1A  D7FC               	goto	u12295
 24741  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24742  000B1E  12AD               	iorwf	4013,f,c	;volatile
 24743                           
 24744                           ; BSR set to: 0
 24745                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 24746  000B20  EE20 F001          	lfsr	2,1
 24747  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24748  000B26  26D9               	addwf	fsr2l,f,c
 24749  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24750  000B2A  22DA               	addwfc	fsr2h,f,c
 24751  000B2C  50DF               	movf	indf2,w,c
 24752  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24753  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24754  000B32  0BF0               	andlw	240
 24755  000B34  12AD               	iorwf	4013,f,c	;volatile
 24756                           
 24757                           ; BSR set to: 0
 24758                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24759  000B36  EE20 F008          	lfsr	2,8
 24760  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24761  000B3C  26D9               	addwf	fsr2l,f,c
 24762  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24763  000B40  22DA               	addwfc	fsr2h,f,c
 24764  000B42  50DF               	movf	indf2,w,c
 24765  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24766  000B46  90D8               	bcf	status,0,c
 24767  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24768  000B4A  90D8               	bcf	status,0,c
 24769  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24770  000B4E  90D8               	bcf	status,0,c
 24771  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24772  000B52  12AD               	iorwf	4013,f,c	;volatile
 24773                           
 24774                           ; BSR set to: 0
 24775                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24776  000B54  EE20 F003          	lfsr	2,3
 24777  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24778  000B5A  26D9               	addwf	fsr2l,f,c
 24779  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24780  000B5E  22DA               	addwfc	fsr2h,f,c
 24781  000B60  50DF               	movf	indf2,w,c
 24782  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24783  000B64  90D8               	bcf	status,0,c
 24784  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24785  000B68  90D8               	bcf	status,0,c
 24786  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24787  000B6C  12AD               	iorwf	4013,f,c	;volatile
 24788                           
 24789                           ; BSR set to: 0
 24790                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 24791  000B6E  0E00               	movlw	0
 24792  000B70  6EAC               	movwf	4012,c	;volatile
 24793                           
 24794                           ; BSR set to: 0
 24795                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24796  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24797  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24798  000B7A  50DF               	movf	indf2,w,c
 24799  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24800  000B7E  0E00               	movlw	0
 24801  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24802  000B82  0E80               	movlw	128
 24803  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24804  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24805  000B88  12AC               	iorwf	4012,f,c	;volatile
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24809  000B8A  EE20 F005          	lfsr	2,5
 24810  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24811  000B90  26D9               	addwf	fsr2l,f,c
 24812  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24813  000B94  22DA               	addwfc	fsr2h,f,c
 24814  000B96  50DF               	movf	indf2,w,c
 24815  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24816  000B9A  0E06               	movlw	6
 24817  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24818  000B9E                     u12305:
 24819  000B9E  90D8               	bcf	status,0,c
 24820  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24821  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24822  000BA4  D7FC               	goto	u12305
 24823  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24824  000BA8  12AC               	iorwf	4012,f,c	;volatile
 24825                           
 24826                           ; BSR set to: 0
 24827                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24828  000BAA  EE20 F007          	lfsr	2,7
 24829  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24830  000BB0  26D9               	addwf	fsr2l,f,c
 24831  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24832  000BB4  22DA               	addwfc	fsr2h,f,c
 24833  000BB6  50DF               	movf	indf2,w,c
 24834  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24835  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24836  000BBC  0BF0               	andlw	240
 24837  000BBE  12AC               	iorwf	4012,f,c	;volatile
 24838                           
 24839                           ; BSR set to: 0
 24840                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 24841  000BC0  0E00               	movlw	0
 24842  000BC2  6E7E               	movwf	3966,c	;volatile
 24843                           
 24844                           ; BSR set to: 0
 24845                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24846  000BC4  EE20 F002          	lfsr	2,2
 24847  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24848  000BCA  26D9               	addwf	fsr2l,f,c
 24849  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24850  000BCE  22DA               	addwfc	fsr2h,f,c
 24851  000BD0  50DF               	movf	indf2,w,c
 24852  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24853  000BD4  90D8               	bcf	status,0,c
 24854  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24855  000BD8  90D8               	bcf	status,0,c
 24856  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24857  000BDC  90D8               	bcf	status,0,c
 24858  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24859  000BE0  127E               	iorwf	3966,f,c	;volatile
 24860                           
 24861                           ; BSR set to: 0
 24862                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24863  000BE2  EE20 F00A          	lfsr	2,10
 24864  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24865  000BE8  26D9               	addwf	fsr2l,f,c
 24866  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24867  000BEC  22DA               	addwfc	fsr2h,f,c
 24868  000BEE  50DF               	movf	indf2,w,c
 24869  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24870  000BF2  90D8               	bcf	status,0,c
 24871  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24872  000BF6  127E               	iorwf	3966,f,c	;volatile
 24873                           
 24874                           ; BSR set to: 0
 24875                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24876  000BF8  EE20 F009          	lfsr	2,9
 24877  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24878  000BFE  26D9               	addwf	fsr2l,f,c
 24879  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24880  000C02  22DA               	addwfc	fsr2h,f,c
 24881  000C04  50DF               	movf	indf2,w,c
 24882  000C06  127E               	iorwf	3966,f,c	;volatile
 24883                           
 24884                           ; BSR set to: 0
 24885                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 24886  000C08  EE20 F00B          	lfsr	2,11
 24887  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24888  000C0E  26D9               	addwf	fsr2l,f,c
 24889  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24890  000C12  22DA               	addwfc	fsr2h,f,c
 24891  000C14  50DF               	movf	indf2,w,c
 24892  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24893  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24894  000C1A  509D               	movf	3997,w,c	;volatile
 24895  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24896  000C1E  0BEF               	andlw	-17
 24897  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24898  000C22  6E9D               	movwf	3997,c	;volatile
 24899                           
 24900                           ; BSR set to: 0
 24901                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 24902  000C24  EE20 F00C          	lfsr	2,12
 24903  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24904  000C2A  26D9               	addwf	fsr2l,f,c
 24905  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24906  000C2E  22DA               	addwfc	fsr2h,f,c
 24907  000C30  50DF               	movf	indf2,w,c
 24908  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24909  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24910  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24911  000C38  509D               	movf	3997,w,c	;volatile
 24912  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24913  000C3C  0BDF               	andlw	-33
 24914  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24915  000C40  6E9D               	movwf	3997,c	;volatile
 24916                           
 24917                           ;uart_drv.c: 326: }
 24918  000C42  0012               	return	
 24919  000C44                     l668:
 24920                           
 24921                           ; BSR set to: 0
 24922                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 24923                           
 24924                           ; BSR set to: 0
 24925  000C44  0E02               	movlw	2
 24926  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 24927  000C48  A4D8               	btfss	status,2,c
 24928  000C4A  0012               	return	
 24929                           
 24930                           ; BSR set to: 0
 24931                           ;uart_drv.c: 328: {
 24932                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 24933  000C4C  9094               	bcf	3988,0,c	;volatile
 24934                           
 24935                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 24936  000C4E  8294               	bsf	3988,1,c	;volatile
 24937                           
 24938                           ; BSR set to: 0
 24939                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 24940  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24941  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24942  000C58  0E02               	movlw	2
 24943  000C5A  ECAE  F014         	call	_SetUartBaudRate
 24944                           
 24945                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 24946  000C5E  0E00               	movlw	0
 24947  000C60  6EA8               	movwf	4008,c	;volatile
 24948                           
 24949                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24950  000C62  0100               	movlb	0	; () banked
 24951  000C64  EE20 F004          	lfsr	2,4
 24952  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24953  000C6A  26D9               	addwf	fsr2l,f,c
 24954  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24955  000C6E  22DA               	addwfc	fsr2h,f,c
 24956  000C70  50DF               	movf	indf2,w,c
 24957  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24958  000C74  0E06               	movlw	6
 24959  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24960  000C78                     u12325:
 24961  000C78  90D8               	bcf	status,0,c
 24962  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24963  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24964  000C7E  D7FC               	goto	u12325
 24965  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24966  000C82  12A8               	iorwf	4008,f,c	;volatile
 24967                           
 24968                           ; BSR set to: 0
 24969                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24970  000C84  EE20 F006          	lfsr	2,6
 24971  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24972  000C8A  26D9               	addwf	fsr2l,f,c
 24973  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24974  000C8E  22DA               	addwfc	fsr2h,f,c
 24975  000C90  50DF               	movf	indf2,w,c
 24976  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24977  000C94  0E05               	movlw	5
 24978  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24979  000C98                     u12335:
 24980  000C98  90D8               	bcf	status,0,c
 24981  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24982  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24983  000C9E  D7FC               	goto	u12335
 24984  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24985  000CA2  12A8               	iorwf	4008,f,c	;volatile
 24986                           
 24987                           ; BSR set to: 0
 24988                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 24989  000CA4  EE20 F001          	lfsr	2,1
 24990  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24991  000CAA  26D9               	addwf	fsr2l,f,c
 24992  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24993  000CAE  22DA               	addwfc	fsr2h,f,c
 24994  000CB0  50DF               	movf	indf2,w,c
 24995  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24996  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24997  000CB6  0BF0               	andlw	240
 24998  000CB8  12A8               	iorwf	4008,f,c	;volatile
 24999                           
 25000                           ; BSR set to: 0
 25001                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 25002  000CBA  EE20 F008          	lfsr	2,8
 25003  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25004  000CC0  26D9               	addwf	fsr2l,f,c
 25005  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25006  000CC4  22DA               	addwfc	fsr2h,f,c
 25007  000CC6  50DF               	movf	indf2,w,c
 25008  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25009  000CCA  90D8               	bcf	status,0,c
 25010  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25011  000CCE  90D8               	bcf	status,0,c
 25012  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25013  000CD2  90D8               	bcf	status,0,c
 25014  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25015  000CD6  12A8               	iorwf	4008,f,c	;volatile
 25016                           
 25017                           ; BSR set to: 0
 25018                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 25019  000CD8  EE20 F003          	lfsr	2,3
 25020  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25021  000CDE  26D9               	addwf	fsr2l,f,c
 25022  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25023  000CE2  22DA               	addwfc	fsr2h,f,c
 25024  000CE4  50DF               	movf	indf2,w,c
 25025  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25026  000CE8  90D8               	bcf	status,0,c
 25027  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25028  000CEC  90D8               	bcf	status,0,c
 25029  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25030  000CF0  12A8               	iorwf	4008,f,c	;volatile
 25031                           
 25032                           ; BSR set to: 0
 25033                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 25034  000CF2  0E00               	movlw	0
 25035  000CF4  6E9C               	movwf	3996,c	;volatile
 25036                           
 25037                           ; BSR set to: 0
 25038                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 25039  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 25040  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 25041  000CFE  50DF               	movf	indf2,w,c
 25042  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25043  000D02  0E00               	movlw	0
 25044  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 25045  000D06  0E80               	movlw	128
 25046  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25047  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25048  000D0C  129C               	iorwf	3996,f,c	;volatile
 25049                           
 25050                           ; BSR set to: 0
 25051                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 25052  000D0E  EE20 F005          	lfsr	2,5
 25053  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25054  000D14  26D9               	addwf	fsr2l,f,c
 25055  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25056  000D18  22DA               	addwfc	fsr2h,f,c
 25057  000D1A  50DF               	movf	indf2,w,c
 25058  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25059  000D1E  0E06               	movlw	6
 25060  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25061  000D22                     u12345:
 25062  000D22  90D8               	bcf	status,0,c
 25063  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25064  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25065  000D28  D7FC               	goto	u12345
 25066  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25067  000D2C  129C               	iorwf	3996,f,c	;volatile
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 25071  000D2E  EE20 F007          	lfsr	2,7
 25072  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25073  000D34  26D9               	addwf	fsr2l,f,c
 25074  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25075  000D38  22DA               	addwfc	fsr2h,f,c
 25076  000D3A  50DF               	movf	indf2,w,c
 25077  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25078  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25079  000D40  0BF0               	andlw	240
 25080  000D42  129C               	iorwf	3996,f,c	;volatile
 25081                           
 25082                           ; BSR set to: 0
 25083                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 25084  000D44  0E00               	movlw	0
 25085  000D46  6E7C               	movwf	3964,c	;volatile
 25086                           
 25087                           ; BSR set to: 0
 25088                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 25089  000D48  EE20 F002          	lfsr	2,2
 25090  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25091  000D4E  26D9               	addwf	fsr2l,f,c
 25092  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25093  000D52  22DA               	addwfc	fsr2h,f,c
 25094  000D54  50DF               	movf	indf2,w,c
 25095  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25096  000D58  90D8               	bcf	status,0,c
 25097  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25098  000D5C  90D8               	bcf	status,0,c
 25099  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25100  000D60  90D8               	bcf	status,0,c
 25101  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25102  000D64  127C               	iorwf	3964,f,c	;volatile
 25103                           
 25104                           ; BSR set to: 0
 25105                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 25106  000D66  EE20 F00A          	lfsr	2,10
 25107  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25108  000D6C  26D9               	addwf	fsr2l,f,c
 25109  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25110  000D70  22DA               	addwfc	fsr2h,f,c
 25111  000D72  50DF               	movf	indf2,w,c
 25112  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25113  000D76  90D8               	bcf	status,0,c
 25114  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25115  000D7A  127C               	iorwf	3964,f,c	;volatile
 25116                           
 25117                           ; BSR set to: 0
 25118                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 25119  000D7C  EE20 F009          	lfsr	2,9
 25120  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25121  000D82  26D9               	addwf	fsr2l,f,c
 25122  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25123  000D86  22DA               	addwfc	fsr2h,f,c
 25124  000D88  50DF               	movf	indf2,w,c
 25125  000D8A  127C               	iorwf	3964,f,c	;volatile
 25126                           
 25127                           ; BSR set to: 0
 25128                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 25129  000D8C  EE20 F00B          	lfsr	2,11
 25130  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25131  000D92  26D9               	addwf	fsr2l,f,c
 25132  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25133  000D96  22DA               	addwfc	fsr2h,f,c
 25134  000D98  50DF               	movf	indf2,w,c
 25135  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25136  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25137  000D9E  50A3               	movf	4003,w,c	;volatile
 25138  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25139  000DA2  0BEF               	andlw	-17
 25140  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25141  000DA6  6EA3               	movwf	4003,c	;volatile
 25142                           
 25143                           ; BSR set to: 0
 25144                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 25145  000DA8  EE20 F00C          	lfsr	2,12
 25146  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25147  000DAE  26D9               	addwf	fsr2l,f,c
 25148  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25149  000DB2  22DA               	addwfc	fsr2h,f,c
 25150  000DB4  50DF               	movf	indf2,w,c
 25151  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25152  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25153  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 25154  000DBC  50A3               	movf	4003,w,c	;volatile
 25155  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25156  000DC0  0BDF               	andlw	-33
 25157  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25158  000DC4  6EA3               	movwf	4003,c	;volatile
 25159                           
 25160                           ; BSR set to: 0
 25161  000DC6  0012               	return	
 25162  000DC8                     __end_of_Uart_InitUartModule:
 25163                           	opt stack 0
 25164                           tosu	equ	0xFFF
 25165                           tosh	equ	0xFFE
 25166                           tosl	equ	0xFFD
 25167                           pclath	equ	0xFFA
 25168                           tblptru	equ	0xFF8
 25169                           tblptrh	equ	0xFF7
 25170                           tblptrl	equ	0xFF6
 25171                           tablat	equ	0xFF5
 25172                           prodh	equ	0xFF4
 25173                           prodl	equ	0xFF3
 25174                           intcon	equ	0xFF2
 25175                           intcon2	equ	0xFF1
 25176                           intcon3	equ	0xFF0
 25177                           indf0	equ	0xFEF
 25178                           postinc0	equ	0xFEE
 25179                           plusw0	equ	0xFEB
 25180                           fsr0h	equ	0xFEA
 25181                           fsr0l	equ	0xFE9
 25182                           wreg	equ	0xFE8
 25183                           indf1	equ	0xFE7
 25184                           postinc1	equ	0xFE6
 25185                           postdec1	equ	0xFE5
 25186                           plusw1	equ	0xFE3
 25187                           fsr1h	equ	0xFE2
 25188                           fsr1l	equ	0xFE1
 25189                           indf2	equ	0xFDF
 25190                           postinc2	equ	0xFDE
 25191                           postdec2	equ	0xFDD
 25192                           plusw2	equ	0xFDB
 25193                           fsr2h	equ	0xFDA
 25194                           fsr2l	equ	0xFD9
 25195                           status	equ	0xFD8
 25196                           
 25197 ;; *************** function _SetUartBaudRate *****************
 25198 ;; Defined at:
 25199 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25200 ;; Parameters:    Size  Location     Type
 25201 ;;  Module          1    wreg     unsigned char 
 25202 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 25203 ;;		 -> UartConfig(21), 
 25204 ;; Auto vars:     Size  Location     Type
 25205 ;;  Module          1   57[BANK0 ] unsigned char 
 25206 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 25207 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 25208 ;; Return value:  Size  Location     Type
 25209 ;;                  1    wreg      void 
 25210 ;; Registers used:
 25211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25212 ;; Tracked objects:
 25213 ;;		On entry : 0/0
 25214 ;;		On exit  : 0/0
 25215 ;;		Unchanged: 0/0
 25216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25218 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25220 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25221 ;;Total ram usage:        7 bytes
 25222 ;; Hardware stack levels used:    1
 25223 ;; Hardware stack levels required when called:   12
 25224 ;; This function calls:
 25225 ;;		___lldiv
 25226 ;;		___lmul
 25227 ;; This function is called by:
 25228 ;;		_Uart_InitUartModule
 25229 ;; This function uses a non-reentrant model
 25230 ;;
 25231                           
 25232                           	psect	text116
 25233  00295C                     __ptext116:
 25234                           	opt stack 0
 25235  00295C                     _SetUartBaudRate:
 25236                           	opt stack 14
 25237                           
 25238                           ; BSR set to: 0
 25239                           ;incstack = 0
 25240                           ;SetUartBaudRate@Module stored from wreg
 25241  00295C  0100               	movlb	0	; () banked
 25242  00295E  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 25243                           
 25244                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 25245  002960  0E00               	movlw	0
 25246  002962  0100               	movlb	0	; () banked
 25247  002964  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25248  002966  0E00               	movlw	0
 25249  002968  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25250                           
 25251                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 25252  00296A  0E00               	movlw	0
 25253  00296C  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25254                           
 25255                           ; BSR set to: 0
 25256                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 25257  00296E  EE20 F002          	lfsr	2,2
 25258  002972  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25259  002974  26D9               	addwf	fsr2l,f,c
 25260  002976  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25261  002978  22DA               	addwfc	fsr2h,f,c
 25262  00297A  50DF               	movf	indf2,w,c
 25263  00297C  A4D8               	btfss	status,2,c
 25264  00297E  D00B               	goto	l625
 25265                           
 25266                           ; BSR set to: 0
 25267  002980  EE20 F002          	lfsr	2,2
 25268  002984  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25269  002986  26D9               	addwf	fsr2l,f,c
 25270  002988  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25271  00298A  22DA               	addwfc	fsr2h,f,c
 25272  00298C  50DF               	movf	indf2,w,c
 25273  00298E  A4D8               	btfss	status,2,c
 25274  002990  D002               	goto	l625
 25275                           
 25276                           ; BSR set to: 0
 25277                           ;uart_drv.c: 128: {
 25278                           ;uart_drv.c: 129: DivisionFactor = 64;
 25279  002992  0E40               	movlw	64
 25280  002994  D039               	goto	L35
 25281  002996                     l625:
 25282                           
 25283                           ; BSR set to: 0
 25284                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 25285                           
 25286                           ; BSR set to: 0
 25287  002996  EE20 F002          	lfsr	2,2
 25288  00299A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25289  00299C  26D9               	addwf	fsr2l,f,c
 25290  00299E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25291  0029A0  22DA               	addwfc	fsr2h,f,c
 25292  0029A2  04DE               	decf	postinc2,w,c
 25293  0029A4  A4D8               	btfss	status,2,c
 25294  0029A6  D009               	goto	l627
 25295                           
 25296                           ; BSR set to: 0
 25297  0029A8  EE20 F002          	lfsr	2,2
 25298  0029AC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25299  0029AE  26D9               	addwf	fsr2l,f,c
 25300  0029B0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25301  0029B2  22DA               	addwfc	fsr2h,f,c
 25302  0029B4  50DF               	movf	indf2,w,c
 25303  0029B6  B4D8               	btfsc	status,2,c
 25304  0029B8  D012               	goto	u11470
 25305  0029BA                     l627:
 25306                           
 25307                           ; BSR set to: 0
 25308                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25309                           
 25310                           ; BSR set to: 0
 25311  0029BA  EE20 F002          	lfsr	2,2
 25312  0029BE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25313  0029C0  26D9               	addwf	fsr2l,f,c
 25314  0029C2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25315  0029C4  22DA               	addwfc	fsr2h,f,c
 25316  0029C6  50DF               	movf	indf2,w,c
 25317  0029C8  A4D8               	btfss	status,2,c
 25318  0029CA  D00B               	goto	l629
 25319                           
 25320                           ; BSR set to: 0
 25321  0029CC  EE20 F002          	lfsr	2,2
 25322  0029D0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25323  0029D2  26D9               	addwf	fsr2l,f,c
 25324  0029D4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25325  0029D6  22DA               	addwfc	fsr2h,f,c
 25326  0029D8  04DE               	decf	postinc2,w,c
 25327  0029DA  A4D8               	btfss	status,2,c
 25328  0029DC  D002               	goto	l629
 25329  0029DE                     u11470:
 25330                           
 25331                           ; BSR set to: 0
 25332                           ;uart_drv.c: 136: {
 25333                           ;uart_drv.c: 137: DivisionFactor = 16;
 25334  0029DE  0E10               	movlw	16
 25335  0029E0  D013               	goto	L35
 25336  0029E2                     l629:
 25337                           
 25338                           ; BSR set to: 0
 25339                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25340                           
 25341                           ; BSR set to: 0
 25342  0029E2  EE20 F002          	lfsr	2,2
 25343  0029E6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25344  0029E8  26D9               	addwf	fsr2l,f,c
 25345  0029EA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25346  0029EC  22DA               	addwfc	fsr2h,f,c
 25347  0029EE  04DE               	decf	postinc2,w,c
 25348  0029F0  A4D8               	btfss	status,2,c
 25349  0029F2  D00B               	goto	l631
 25350                           
 25351                           ; BSR set to: 0
 25352  0029F4  EE20 F002          	lfsr	2,2
 25353  0029F8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25354  0029FA  26D9               	addwf	fsr2l,f,c
 25355  0029FC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25356  0029FE  22DA               	addwfc	fsr2h,f,c
 25357  002A00  04DE               	decf	postinc2,w,c
 25358  002A02  A4D8               	btfss	status,2,c
 25359  002A04  D002               	goto	l631
 25360                           
 25361                           ; BSR set to: 0
 25362                           ;uart_drv.c: 140: {
 25363                           ;uart_drv.c: 141: DivisionFactor = 4;
 25364  002A06  0E04               	movlw	4
 25365  002A08                     L35:
 25366  002A08  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25367  002A0A                     l631:
 25368                           
 25369                           ; BSR set to: 0
 25370                           ;uart_drv.c: 146: }
 25371                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 25372                           
 25373                           ; BSR set to: 0
 25374                           
 25375                           ; BSR set to: 0
 25376                           
 25377                           ; BSR set to: 0
 25378                           
 25379                           ; BSR set to: 0
 25380                           
 25381                           ;uart_drv.c: 143: else
 25382                           ;uart_drv.c: 144: {
 25383                           
 25384                           ; BSR set to: 0
 25385  002A0A  EE20 F00D          	lfsr	2,13
 25386  002A0E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25387  002A10  26D9               	addwf	fsr2l,f,c
 25388  002A12  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25389  002A14  22DA               	addwfc	fsr2h,f,c
 25390  002A16  CFDE F089          	movff	postinc2,___lldiv@dividend
 25391  002A1A  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 25392  002A1E  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 25393  002A22  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 25394  002A26  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 25395  002A28  6F7D               	movwf	___lmul@multiplier& (0+255),b
 25396  002A2A  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 25397  002A2C  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 25398  002A2E  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 25399  002A30  EE20 F011          	lfsr	2,17
 25400  002A34  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25401  002A36  26D9               	addwf	fsr2l,f,c
 25402  002A38  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25403  002A3A  22DA               	addwfc	fsr2h,f,c
 25404  002A3C  CFDE F081          	movff	postinc2,___lmul@multiplicand
 25405  002A40  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 25406  002A44  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 25407  002A48  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 25408  002A4C  EC34  F029         	call	___lmul	;wreg free
 25409  002A50  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 25410  002A54  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 25411  002A58  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 25412  002A5C  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 25413  002A60  EC4C  F026         	call	___lldiv	;wreg free
 25414  002A64  0EFF               	movlw	255
 25415  002A66  0100               	movlb	0	; () banked
 25416  002A68  2589               	addwf	?___lldiv& (0+255),w,b
 25417  002A6A  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25418  002A6C  0EFF               	movlw	255
 25419  002A6E  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 25420  002A70  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25421                           
 25422                           ; BSR set to: 0
 25423                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 25424  002A72  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 25425  002A74  A4D8               	btfss	status,2,c
 25426  002A76  D005               	goto	l633
 25427                           
 25428                           ; BSR set to: 0
 25429                           ;uart_drv.c: 152: {
 25430                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25431  002A78  0E00               	movlw	0
 25432  002A7A  6E7F               	movwf	3967,c	;volatile
 25433                           
 25434                           ; BSR set to: 0
 25435                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25436  002A7C  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 25437                           
 25438                           ;uart_drv.c: 156: }
 25439  002A80  0012               	return	
 25440  002A82                     l633:
 25441                           
 25442                           ; BSR set to: 0
 25443                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 25444                           
 25445                           ; BSR set to: 0
 25446  002A82  0E02               	movlw	2
 25447  002A84  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 25448  002A86  A4D8               	btfss	status,2,c
 25449  002A88  0012               	return	
 25450                           
 25451                           ; BSR set to: 0
 25452                           ;uart_drv.c: 158: {
 25453                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25454  002A8A  0E00               	movlw	0
 25455  002A8C  6E7D               	movwf	3965,c	;volatile
 25456                           
 25457                           ; BSR set to: 0
 25458                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25459  002A8E  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 25460                           
 25461                           ; BSR set to: 0
 25462  002A92  0012               	return	
 25463  002A94                     __end_of_SetUartBaudRate:
 25464                           	opt stack 0
 25465                           tosu	equ	0xFFF
 25466                           tosh	equ	0xFFE
 25467                           tosl	equ	0xFFD
 25468                           pclath	equ	0xFFA
 25469                           tblptru	equ	0xFF8
 25470                           tblptrh	equ	0xFF7
 25471                           tblptrl	equ	0xFF6
 25472                           tablat	equ	0xFF5
 25473                           prodh	equ	0xFF4
 25474                           prodl	equ	0xFF3
 25475                           intcon	equ	0xFF2
 25476                           intcon2	equ	0xFF1
 25477                           intcon3	equ	0xFF0
 25478                           indf0	equ	0xFEF
 25479                           postinc0	equ	0xFEE
 25480                           plusw0	equ	0xFEB
 25481                           fsr0h	equ	0xFEA
 25482                           fsr0l	equ	0xFE9
 25483                           wreg	equ	0xFE8
 25484                           indf1	equ	0xFE7
 25485                           postinc1	equ	0xFE6
 25486                           postdec1	equ	0xFE5
 25487                           plusw1	equ	0xFE3
 25488                           fsr1h	equ	0xFE2
 25489                           fsr1l	equ	0xFE1
 25490                           indf2	equ	0xFDF
 25491                           postinc2	equ	0xFDE
 25492                           postdec2	equ	0xFDD
 25493                           plusw2	equ	0xFDB
 25494                           fsr2h	equ	0xFDA
 25495                           fsr2l	equ	0xFD9
 25496                           status	equ	0xFD8
 25497                           
 25498 ;; *************** function ___lmul *****************
 25499 ;; Defined at:
 25500 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 25501 ;; Parameters:    Size  Location     Type
 25502 ;;  multiplier      4   29[BANK0 ] unsigned long 
 25503 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 25504 ;; Auto vars:     Size  Location     Type
 25505 ;;  product         4   37[BANK0 ] unsigned long 
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  4   29[BANK0 ] unsigned long 
 25508 ;; Registers used:
 25509 ;;		wreg, status,2, status,0
 25510 ;; Tracked objects:
 25511 ;;		On entry : 0/0
 25512 ;;		On exit  : 0/0
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25515 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25516 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25518 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25519 ;;Total ram usage:       12 bytes
 25520 ;; Hardware stack levels used:    1
 25521 ;; Hardware stack levels required when called:   11
 25522 ;; This function calls:
 25523 ;;		Nothing
 25524 ;; This function is called by:
 25525 ;;		_Tmr_TmrBPrSet
 25526 ;;		_SetUartBaudRate
 25527 ;;		_strtol
 25528 ;; This function uses a non-reentrant model
 25529 ;;
 25530                           
 25531                           	psect	text117
 25532  005268                     __ptext117:
 25533                           	opt stack 0
 25534  005268                     ___lmul:
 25535                           	opt stack 15
 25536                           
 25537                           ; BSR set to: 0
 25538                           ;incstack = 0
 25539  005268  0E00               	movlw	0
 25540  00526A  0100               	movlb	0	; () banked
 25541  00526C  6F85               	movwf	___lmul@product& (0+255),b
 25542  00526E  0E00               	movlw	0
 25543  005270  6F86               	movwf	(___lmul@product+1)& (0+255),b
 25544  005272  0E00               	movlw	0
 25545  005274  6F87               	movwf	(___lmul@product+2)& (0+255),b
 25546  005276  0E00               	movlw	0
 25547  005278  6F88               	movwf	(___lmul@product+3)& (0+255),b
 25548  00527A                     
 25549                           ; BSR set to: 0
 25550                           
 25551                           ; BSR set to: 0
 25552  00527A  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 25553  00527C  D008               	goto	l2655
 25554                           
 25555                           ; BSR set to: 0
 25556  00527E  5181               	movf	___lmul@multiplicand& (0+255),w,b
 25557  005280  2785               	addwf	___lmul@product& (0+255),f,b
 25558  005282  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25559  005284  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 25560  005286  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25561  005288  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 25562  00528A  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25563  00528C  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 25564  00528E                     l2655:
 25565                           
 25566                           ; BSR set to: 0
 25567                           
 25568                           ; BSR set to: 0
 25569  00528E  90D8               	bcf	status,0,c
 25570  005290  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 25571  005292  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25572  005294  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25573  005296  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25574                           
 25575                           ; BSR set to: 0
 25576  005298  90D8               	bcf	status,0,c
 25577  00529A  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25578  00529C  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 25579  00529E  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 25580  0052A0  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 25581  0052A2  517D               	movf	___lmul@multiplier& (0+255),w,b
 25582  0052A4  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 25583  0052A6  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 25584  0052A8  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 25585  0052AA  A4D8               	btfss	status,2,c
 25586  0052AC  D7E6               	goto	l2654
 25587                           
 25588                           ; BSR set to: 0
 25589  0052AE  C085  F07D         	movff	___lmul@product,?___lmul
 25590  0052B2  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 25591  0052B6  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 25592  0052BA  C088  F080         	movff	___lmul@product+3,?___lmul+3
 25593                           
 25594                           ; BSR set to: 0
 25595  0052BE  0012               	return		;funcret
 25596  0052C0                     __end_of___lmul:
 25597                           	opt stack 0
 25598                           tosu	equ	0xFFF
 25599                           tosh	equ	0xFFE
 25600                           tosl	equ	0xFFD
 25601                           pclath	equ	0xFFA
 25602                           tblptru	equ	0xFF8
 25603                           tblptrh	equ	0xFF7
 25604                           tblptrl	equ	0xFF6
 25605                           tablat	equ	0xFF5
 25606                           prodh	equ	0xFF4
 25607                           prodl	equ	0xFF3
 25608                           intcon	equ	0xFF2
 25609                           intcon2	equ	0xFF1
 25610                           intcon3	equ	0xFF0
 25611                           indf0	equ	0xFEF
 25612                           postinc0	equ	0xFEE
 25613                           plusw0	equ	0xFEB
 25614                           fsr0h	equ	0xFEA
 25615                           fsr0l	equ	0xFE9
 25616                           wreg	equ	0xFE8
 25617                           indf1	equ	0xFE7
 25618                           postinc1	equ	0xFE6
 25619                           postdec1	equ	0xFE5
 25620                           plusw1	equ	0xFE3
 25621                           fsr1h	equ	0xFE2
 25622                           fsr1l	equ	0xFE1
 25623                           indf2	equ	0xFDF
 25624                           postinc2	equ	0xFDE
 25625                           postdec2	equ	0xFDD
 25626                           plusw2	equ	0xFDB
 25627                           fsr2h	equ	0xFDA
 25628                           fsr2l	equ	0xFD9
 25629                           status	equ	0xFD8
 25630                           
 25631 ;; *************** function _UartSetConfigLow *****************
 25632 ;; Defined at:
 25633 ;;		line 228 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25634 ;; Parameters:    Size  Location     Type
 25635 ;;		None
 25636 ;; Auto vars:     Size  Location     Type
 25637 ;;		None
 25638 ;; Return value:  Size  Location     Type
 25639 ;;                  1    wreg      void 
 25640 ;; Registers used:
 25641 ;;		wreg, status,2
 25642 ;; Tracked objects:
 25643 ;;		On entry : 0/0
 25644 ;;		On exit  : 0/0
 25645 ;;		Unchanged: 0/0
 25646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25651 ;;Total ram usage:        0 bytes
 25652 ;; Hardware stack levels used:    1
 25653 ;; Hardware stack levels required when called:   11
 25654 ;; This function calls:
 25655 ;;		Nothing
 25656 ;; This function is called by:
 25657 ;;		_ConfigureModem
 25658 ;; This function uses a non-reentrant model
 25659 ;;
 25660                           
 25661                           	psect	text118
 25662  0052C0                     __ptext118:
 25663                           	opt stack 0
 25664  0052C0                     _UartSetConfigLow:
 25665                           	opt stack 15
 25666                           
 25667                           ;mdm_gsm_gprs.c: 230: UartConfig.UartEnable = ((UINT8)(1));
 25668                           
 25669                           ; BSR set to: 0
 25670                           ;incstack = 0
 25671  0052C0  0E01               	movlw	1
 25672  0052C2  0103               	movlb	3	; () banked
 25673  0052C4  6F24               	movwf	_UartConfig& (0+255),b
 25674                           
 25675                           ;mdm_gsm_gprs.c: 231: UartConfig.UartMode = ((UINT8)(0));
 25676  0052C6  0E00               	movlw	0
 25677  0052C8  6F25               	movwf	(_UartConfig+1)& (0+255),b
 25678                           
 25679                           ;mdm_gsm_gprs.c: 232: UartConfig.BaudRateMode = ((UINT8)(0));
 25680  0052CA  0E00               	movlw	0
 25681  0052CC  6F26               	movwf	(_UartConfig+2)& (0+255),b
 25682                           
 25683                           ;mdm_gsm_gprs.c: 233: UartConfig.HighBaudMode = ((UINT8)(0));
 25684  0052CE  0E00               	movlw	0
 25685  0052D0  6F27               	movwf	(_UartConfig+3)& (0+255),b
 25686                           
 25687                           ;mdm_gsm_gprs.c: 234: UartConfig.Tx9bitMode = ((UINT8)(0));
 25688  0052D2  0E00               	movlw	0
 25689  0052D4  6F28               	movwf	(_UartConfig+4)& (0+255),b
 25690                           
 25691                           ;mdm_gsm_gprs.c: 235: UartConfig.Rx9bitMode = ((UINT8)(0));
 25692  0052D6  0E00               	movlw	0
 25693  0052D8  6F29               	movwf	(_UartConfig+5)& (0+255),b
 25694                           
 25695                           ;mdm_gsm_gprs.c: 236: UartConfig.TxEnable = ((UINT8)(1));
 25696  0052DA  0E01               	movlw	1
 25697  0052DC  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 25698                           
 25699                           ;mdm_gsm_gprs.c: 237: UartConfig.RxEnable = ((UINT8)(1));
 25700  0052DE  0E01               	movlw	1
 25701  0052E0  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 25702                           
 25703                           ;mdm_gsm_gprs.c: 238: UartConfig.SendBreakEnable = ((UINT8)(0));
 25704  0052E2  0E00               	movlw	0
 25705  0052E4  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 25706                           
 25707                           ;mdm_gsm_gprs.c: 239: UartConfig.AutobaudEnable = ((UINT8)(0));
 25708  0052E6  0E00               	movlw	0
 25709  0052E8  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 25710                           
 25711                           ;mdm_gsm_gprs.c: 240: UartConfig.WakeUpEnable = ((UINT8)(0));
 25712  0052EA  0E00               	movlw	0
 25713  0052EC  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 25714                           
 25715                           ;mdm_gsm_gprs.c: 241: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25716  0052EE  0E00               	movlw	0
 25717  0052F0  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 25718                           
 25719                           ;mdm_gsm_gprs.c: 242: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25720  0052F2  0E01               	movlw	1
 25721  0052F4  6F30               	movwf	(_UartConfig+12)& (0+255),b
 25722                           
 25723                           ;mdm_gsm_gprs.c: 243: UartConfig.McuBusClock = ((UINT32)(48000000));
 25724  0052F6  0E00               	movlw	0
 25725  0052F8  6F31               	movwf	(_UartConfig+13)& (0+255),b
 25726  0052FA  0E6C               	movlw	108
 25727  0052FC  6F32               	movwf	(_UartConfig+14)& (0+255),b
 25728  0052FE  0EDC               	movlw	220
 25729  005300  6F33               	movwf	(_UartConfig+15)& (0+255),b
 25730  005302  0E02               	movlw	2
 25731  005304  6F34               	movwf	(_UartConfig+16)& (0+255),b
 25732                           
 25733                           ;mdm_gsm_gprs.c: 244: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25734  005306  0E80               	movlw	128
 25735  005308  6F35               	movwf	(_UartConfig+17)& (0+255),b
 25736  00530A  0E25               	movlw	37
 25737  00530C  6F36               	movwf	(_UartConfig+18)& (0+255),b
 25738  00530E  0E00               	movlw	0
 25739  005310  6F37               	movwf	(_UartConfig+19)& (0+255),b
 25740  005312  0E00               	movlw	0
 25741  005314  6F38               	movwf	(_UartConfig+20)& (0+255),b
 25742                           
 25743                           ; BSR set to: 3
 25744  005316  0012               	return		;funcret
 25745  005318                     __end_of_UartSetConfigLow:
 25746                           	opt stack 0
 25747                           tosu	equ	0xFFF
 25748                           tosh	equ	0xFFE
 25749                           tosl	equ	0xFFD
 25750                           pclath	equ	0xFFA
 25751                           tblptru	equ	0xFF8
 25752                           tblptrh	equ	0xFF7
 25753                           tblptrl	equ	0xFF6
 25754                           tablat	equ	0xFF5
 25755                           prodh	equ	0xFF4
 25756                           prodl	equ	0xFF3
 25757                           intcon	equ	0xFF2
 25758                           intcon2	equ	0xFF1
 25759                           intcon3	equ	0xFF0
 25760                           indf0	equ	0xFEF
 25761                           postinc0	equ	0xFEE
 25762                           plusw0	equ	0xFEB
 25763                           fsr0h	equ	0xFEA
 25764                           fsr0l	equ	0xFE9
 25765                           wreg	equ	0xFE8
 25766                           indf1	equ	0xFE7
 25767                           postinc1	equ	0xFE6
 25768                           postdec1	equ	0xFE5
 25769                           plusw1	equ	0xFE3
 25770                           fsr1h	equ	0xFE2
 25771                           fsr1l	equ	0xFE1
 25772                           indf2	equ	0xFDF
 25773                           postinc2	equ	0xFDE
 25774                           postdec2	equ	0xFDD
 25775                           plusw2	equ	0xFDB
 25776                           fsr2h	equ	0xFDA
 25777                           fsr2l	equ	0xFD9
 25778                           status	equ	0xFD8
 25779                           
 25780 ;; *************** function _CheckModem *****************
 25781 ;; Defined at:
 25782 ;;		line 282 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25783 ;; Parameters:    Size  Location     Type
 25784 ;;		None
 25785 ;; Auto vars:     Size  Location     Type
 25786 ;;		None
 25787 ;; Return value:  Size  Location     Type
 25788 ;;                  1    wreg      void 
 25789 ;; Registers used:
 25790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25791 ;; Tracked objects:
 25792 ;;		On entry : 0/0
 25793 ;;		On exit  : 0/0
 25794 ;;		Unchanged: 0/0
 25795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25800 ;;Total ram usage:        0 bytes
 25801 ;; Hardware stack levels used:    1
 25802 ;; Hardware stack levels required when called:   14
 25803 ;; This function calls:
 25804 ;;		_GenerateEvt
 25805 ;;		_OsTmr_GetTimerStatus
 25806 ;;		_OsTmr_StartTimer
 25807 ;;		_ReceiveEvt
 25808 ;;		_Uart_WriteConstString
 25809 ;; This function is called by:
 25810 ;;		_Mdm_MainTask
 25811 ;; This function uses a non-reentrant model
 25812 ;;
 25813                           
 25814                           	psect	text119
 25815  002432                     __ptext119:
 25816                           	opt stack 0
 25817  002432                     _CheckModem:
 25818                           	opt stack 13
 25819                           
 25820                           ;mdm_gsm_gprs.c: 284: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 25821                           ;mdm_gsm_gprs.c: 285: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25822                           ;mdm_gsm_gprs.c: 287: switch (CheckMdmSts)
 25823                           
 25824                           ; BSR set to: 3
 25825                           ;incstack = 0
 25826  002432  D096               	goto	l982
 25827  002434                     
 25828                           ;mdm_gsm_gprs.c: 291: OsTmr_StartTimer(&Timeout,2000);
 25829  002434  0EEE               	movlw	low CheckModem@Timeout
 25830  002436  0100               	movlb	0	; () banked
 25831  002438  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25832  00243A  0E03               	movlw	high CheckModem@Timeout
 25833  00243C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25834  00243E  0ED0               	movlw	208
 25835  002440  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25836  002442  0E07               	movlw	7
 25837  002444  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25838  002446  0E00               	movlw	0
 25839  002448  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25840  00244A  0E00               	movlw	0
 25841  00244C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25842  00244E  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 25843                           
 25844                           ;mdm_gsm_gprs.c: 293: CheckMdmSts = MdmCh_InitialDelay;
 25845  002452  0E01               	movlw	1
 25846  002454  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25847                           
 25848                           ;mdm_gsm_gprs.c: 294: break;
 25849  002456  0012               	return	
 25850  002458                     
 25851                           ;mdm_gsm_gprs.c: 298: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25852  002458  0EEE               	movlw	low CheckModem@Timeout
 25853  00245A  0100               	movlb	0	; () banked
 25854  00245C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25855  00245E  0E03               	movlw	high CheckModem@Timeout
 25856  002460  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25857  002462  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 25858  002466  06E8               	decf	wreg,f,c
 25859  002468  A4D8               	btfss	status,2,c
 25860  00246A  0012               	return	
 25861                           
 25862                           ;mdm_gsm_gprs.c: 299: {
 25863                           ;mdm_gsm_gprs.c: 301: CheckMdmSts = MdmCh_SendATE1;
 25864  00246C  0E02               	movlw	2
 25865  00246E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25866                           
 25867                           ;mdm_gsm_gprs.c: 302: }
 25868                           ;mdm_gsm_gprs.c: 303: break;
 25869  002470  0012               	return	
 25870  002472                     
 25871                           ;mdm_gsm_gprs.c: 307: Uart_WriteConstString(1,"AT\r\n");
 25872  002472  0EE5               	movlw	low STR_1
 25873  002474  0100               	movlb	0	; () banked
 25874  002476  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25875  002478  0EFF               	movlw	high STR_1
 25876  00247A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25877  00247C  0E01               	movlw	1
 25878  00247E  EC91  F02C         	call	_Uart_WriteConstString
 25879                           
 25880                           ;mdm_gsm_gprs.c: 309: OsTmr_StartTimer(&Timeout,2000u);
 25881  002482  0EEE               	movlw	low CheckModem@Timeout
 25882  002484  0100               	movlb	0	; () banked
 25883  002486  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25884  002488  0E03               	movlw	high CheckModem@Timeout
 25885  00248A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25886  00248C  0ED0               	movlw	208
 25887  00248E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25888  002490  0E07               	movlw	7
 25889  002492  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25890  002494  0E00               	movlw	0
 25891  002496  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25892  002498  0E00               	movlw	0
 25893  00249A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25894  00249C  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 25895                           
 25896                           ;mdm_gsm_gprs.c: 311: CheckMdmSts = MdmCh_WaitEcho;
 25897  0024A0  0E03               	movlw	3
 25898  0024A2  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25899                           
 25900                           ;mdm_gsm_gprs.c: 312: break;
 25901  0024A4  0012               	return	
 25902  0024A6                     
 25903                           ;mdm_gsm_gprs.c: 316: if (ReceiveEvt(&NewStringReceived))
 25904  0024A6  0E3C               	movlw	low _NewStringReceived
 25905  0024A8  0100               	movlb	0	; () banked
 25906  0024AA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25907  0024AC  0E00               	movlw	high _NewStringReceived
 25908  0024AE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25909  0024B0  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 25910  0024B4  0900               	iorlw	0
 25911  0024B6  B4D8               	btfsc	status,2,c
 25912  0024B8  D02F               	goto	l989
 25913                           
 25914                           ;mdm_gsm_gprs.c: 317: {
 25915                           ;mdm_gsm_gprs.c: 319: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 25916  0024BA  CC58  FFE8         	movff	_RxBuffer,wreg
 25917  0024BE  0A4F               	xorlw	79
 25918  0024C0  A4D8               	btfss	status,2,c
 25919  0024C2  D005               	goto	u13310
 25920  0024C4  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25921  0024C8  0A4B               	xorlw	75
 25922  0024CA  B4D8               	btfsc	status,2,c
 25923  0024CC  D00A               	goto	u13330
 25924  0024CE                     u13310:
 25925  0024CE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25926  0024D2  0A4F               	xorlw	79
 25927  0024D4  A4D8               	btfss	status,2,c
 25928  0024D6  0012               	return	
 25929  0024D8  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25930  0024DC  0A4B               	xorlw	75
 25931  0024DE  A4D8               	btfss	status,2,c
 25932  0024E0  0012               	return	
 25933  0024E2                     u13330:
 25934                           
 25935                           ;mdm_gsm_gprs.c: 320: {
 25936                           ;mdm_gsm_gprs.c: 321: MdmStatus = ModemReady;
 25937  0024E2  0E02               	movlw	2
 25938  0024E4  0100               	movlb	0	; () banked
 25939  0024E6  6FD1               	movwf	_MdmStatus& (0+255),b
 25940                           
 25941                           ; BSR set to: 0
 25942                           ;mdm_gsm_gprs.c: 323: GenerateEvt(&MdmOnOffPulseRequest);
 25943  0024E8  0EE1               	movlw	low _MdmOnOffPulseRequest
 25944  0024EA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25945  0024EC  0E00               	movlw	high _MdmOnOffPulseRequest
 25946  0024EE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25947  0024F0  ECA3  F030         	call	_GenerateEvt	;wreg free
 25948                           
 25949                           ;mdm_gsm_gprs.c: 325: OsTmr_StartTimer(&Timeout,1000u);
 25950  0024F4  0EEE               	movlw	low CheckModem@Timeout
 25951  0024F6  0100               	movlb	0	; () banked
 25952  0024F8  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25953  0024FA  0E03               	movlw	high CheckModem@Timeout
 25954  0024FC  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25955  0024FE  0EE8               	movlw	232
 25956  002500  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25957  002502  0E03               	movlw	3
 25958  002504  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25959  002506  0E00               	movlw	0
 25960  002508  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25961  00250A  0E00               	movlw	0
 25962  00250C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25963  00250E  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 25964                           
 25965                           ;mdm_gsm_gprs.c: 327: CheckMdmSts = MdmCh_Delay;
 25966  002512  0E04               	movlw	4
 25967  002514  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25968                           
 25969                           ;mdm_gsm_gprs.c: 328: }
 25970                           ;mdm_gsm_gprs.c: 329: }
 25971  002516  0012               	return	
 25972  002518                     l989:
 25973                           
 25974                           ;mdm_gsm_gprs.c: 330: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25975  002518  0EEE               	movlw	low CheckModem@Timeout
 25976  00251A  0100               	movlb	0	; () banked
 25977  00251C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25978  00251E  0E03               	movlw	high CheckModem@Timeout
 25979  002520  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25980  002522  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 25981  002526  06E8               	decf	wreg,f,c
 25982  002528  A4D8               	btfss	status,2,c
 25983  00252A  0012               	return	
 25984                           
 25985                           ;mdm_gsm_gprs.c: 331: {
 25986                           ;mdm_gsm_gprs.c: 333: MdmStatus = ModemOff;
 25987  00252C  0E00               	movlw	0
 25988  00252E  0100               	movlb	0	; () banked
 25989  002530  6FD1               	movwf	_MdmStatus& (0+255),b
 25990                           
 25991                           ;mdm_gsm_gprs.c: 335: ComChecCompleted = 1u;
 25992  002532  0E01               	movlw	1
 25993  002534  6E2B               	movwf	_ComChecCompleted,c
 25994                           
 25995                           ;mdm_gsm_gprs.c: 337: CheckMdmSts = MdmCh_Done;
 25996  002536  0E05               	movlw	5
 25997  002538  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25998                           
 25999                           ; BSR set to: 0
 26000                           ;mdm_gsm_gprs.c: 342: }
 26001                           ;mdm_gsm_gprs.c: 343: break;
 26002                           
 26003                           ; BSR set to: 0
 26004                           
 26005                           ;mdm_gsm_gprs.c: 339: else
 26006                           ;mdm_gsm_gprs.c: 340: {
 26007                           
 26008                           ; BSR set to: 0
 26009                           
 26010                           ;mdm_gsm_gprs.c: 338: }
 26011  00253A  0012               	return	
 26012  00253C                     
 26013                           ;mdm_gsm_gprs.c: 347: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 26014                           
 26015                           ; BSR set to: 0
 26016  00253C  0EEE               	movlw	low CheckModem@Timeout
 26017  00253E  0100               	movlb	0	; () banked
 26018  002540  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26019  002542  0E03               	movlw	high CheckModem@Timeout
 26020  002544  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26021  002546  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26022  00254A  06E8               	decf	wreg,f,c
 26023  00254C  A4D8               	btfss	status,2,c
 26024  00254E  0012               	return	
 26025                           
 26026                           ;mdm_gsm_gprs.c: 348: {
 26027                           ;mdm_gsm_gprs.c: 350: MdmStatus = ModemOff;
 26028  002550  0E00               	movlw	0
 26029  002552  0100               	movlb	0	; () banked
 26030  002554  6FD1               	movwf	_MdmStatus& (0+255),b
 26031                           
 26032                           ;mdm_gsm_gprs.c: 352: ComChecCompleted = 1u;
 26033  002556  0E01               	movlw	1
 26034  002558  6E2B               	movwf	_ComChecCompleted,c
 26035                           
 26036                           ;mdm_gsm_gprs.c: 354: CheckMdmSts = MdmCh_Done;
 26037  00255A  0E05               	movlw	5
 26038  00255C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26039                           
 26040                           ; BSR set to: 0
 26041                           ;mdm_gsm_gprs.c: 364: }
 26042                           
 26043                           ; BSR set to: 0
 26044                           ;mdm_gsm_gprs.c: 363: break;
 26045                           
 26046                           ;mdm_gsm_gprs.c: 362: default:
 26047                           
 26048                           ; BSR set to: 0
 26049                           ;mdm_gsm_gprs.c: 360: break;
 26050                           
 26051                           ;mdm_gsm_gprs.c: 358: case MdmCh_Done:
 26052                           
 26053                           ; BSR set to: 0
 26054                           ;mdm_gsm_gprs.c: 355: }
 26055                           ;mdm_gsm_gprs.c: 356: break;
 26056  00255E  0012               	return	
 26057  002560                     l982:
 26058                           
 26059                           ; BSR set to: 0
 26060  002560  502A               	movf	CheckModem@CheckMdmSts,w,c
 26061                           
 26062                           ; Switch size 1, requested type "space"
 26063                           ; Number of cases is 6, Range of values is 0 to 5
 26064                           ; switch strategies available:
 26065                           ; Name         Instructions Cycles
 26066                           ; simple_byte           19    10 (average)
 26067                           ;	Chosen strategy is simple_byte
 26068  002562  0A00               	xorlw	0	; case 0
 26069  002564  B4D8               	btfsc	status,2,c
 26070  002566  D766               	goto	l983
 26071  002568  0A01               	xorlw	1	; case 1
 26072  00256A  B4D8               	btfsc	status,2,c
 26073  00256C  D775               	goto	l985
 26074  00256E  0A03               	xorlw	3	; case 2
 26075  002570  B4D8               	btfsc	status,2,c
 26076  002572  D77F               	goto	l987
 26077  002574  0A01               	xorlw	1	; case 3
 26078  002576  B4D8               	btfsc	status,2,c
 26079  002578  D796               	goto	l988
 26080  00257A  0A07               	xorlw	7	; case 4
 26081  00257C  B4D8               	btfsc	status,2,c
 26082  00257E  D7DE               	goto	l998
 26083  002580  0A01               	xorlw	1	; case 5
 26084  002582  0012               	return	
 26085  002584                     __end_of_CheckModem:
 26086                           	opt stack 0
 26087                           tosu	equ	0xFFF
 26088                           tosh	equ	0xFFE
 26089                           tosl	equ	0xFFD
 26090                           pclath	equ	0xFFA
 26091                           tblptru	equ	0xFF8
 26092                           tblptrh	equ	0xFF7
 26093                           tblptrl	equ	0xFF6
 26094                           tablat	equ	0xFF5
 26095                           prodh	equ	0xFF4
 26096                           prodl	equ	0xFF3
 26097                           intcon	equ	0xFF2
 26098                           intcon2	equ	0xFF1
 26099                           intcon3	equ	0xFF0
 26100                           indf0	equ	0xFEF
 26101                           postinc0	equ	0xFEE
 26102                           plusw0	equ	0xFEB
 26103                           fsr0h	equ	0xFEA
 26104                           fsr0l	equ	0xFE9
 26105                           wreg	equ	0xFE8
 26106                           indf1	equ	0xFE7
 26107                           postinc1	equ	0xFE6
 26108                           postdec1	equ	0xFE5
 26109                           plusw1	equ	0xFE3
 26110                           fsr1h	equ	0xFE2
 26111                           fsr1l	equ	0xFE1
 26112                           indf2	equ	0xFDF
 26113                           postinc2	equ	0xFDE
 26114                           postdec2	equ	0xFDD
 26115                           plusw2	equ	0xFDB
 26116                           fsr2h	equ	0xFDA
 26117                           fsr2l	equ	0xFD9
 26118                           status	equ	0xFD8
 26119                           
 26120 ;; *************** function _MdmCntSm *****************
 26121 ;; Defined at:
 26122 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26123 ;; Parameters:    Size  Location     Type
 26124 ;;		None
 26125 ;; Auto vars:     Size  Location     Type
 26126 ;;		None
 26127 ;; Return value:  Size  Location     Type
 26128 ;;                  1    wreg      void 
 26129 ;; Registers used:
 26130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26131 ;; Tracked objects:
 26132 ;;		On entry : 0/0
 26133 ;;		On exit  : 0/0
 26134 ;;		Unchanged: 0/0
 26135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26140 ;;Total ram usage:        0 bytes
 26141 ;; Hardware stack levels used:    1
 26142 ;; Hardware stack levels required when called:   12
 26143 ;; This function calls:
 26144 ;;		_InitModemInterface
 26145 ;;		_ReceiveEvt
 26146 ;; This function is called by:
 26147 ;;		_Mdm_DrvMainFn
 26148 ;; This function uses a non-reentrant model
 26149 ;;
 26150                           
 26151                           	psect	text120
 26152  0043AE                     __ptext120:
 26153                           	opt stack 0
 26154  0043AE                     _MdmCntSm:
 26155                           	opt stack 15
 26156                           
 26157                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 26158                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 26159                           ;mdm_drv.c: 204: switch (MdmCntState)
 26160                           
 26161                           ;incstack = 0
 26162  0043AE  D045               	goto	l315
 26163  0043B0                     
 26164                           ;mdm_drv.c: 208: InitModemInterface();
 26165  0043B0  EC55  F031         	call	_InitModemInterface	;wreg free
 26166                           
 26167                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 26168  0043B4  0E01               	movlw	1
 26169  0043B6  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26170                           
 26171                           ;mdm_drv.c: 211: break;
 26172  0043B8  0012               	return	
 26173  0043BA                     
 26174                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 26175  0043BA  0EE1               	movlw	low _MdmOnOffPulseRequest
 26176  0043BC  0100               	movlb	0	; () banked
 26177  0043BE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26178  0043C0  0E00               	movlw	high _MdmOnOffPulseRequest
 26179  0043C2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26180  0043C4  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 26181  0043C8  0900               	iorlw	0
 26182  0043CA  B4D8               	btfsc	status,2,c
 26183  0043CC  D009               	goto	l319
 26184                           
 26185                           ;mdm_drv.c: 216: {
 26186                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 26187  0043CE  0E02               	movlw	2
 26188  0043D0  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26189                           
 26190                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 26191  0043D2  8284               	bsf	3972,1,c	;volatile
 26192                           
 26193                           ;mdm_drv.c: 222: Counter = 0;
 26194  0043D4  0E00               	movlw	0
 26195  0043D6  0102               	movlb	2	; () banked
 26196  0043D8  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26197  0043DA  0E00               	movlw	0
 26198  0043DC  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 26199                           
 26200                           ;mdm_drv.c: 223: }
 26201  0043DE  0012               	return	
 26202  0043E0                     l319:
 26203                           
 26204                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 26205                           
 26206                           ; BSR set to: 2
 26207  0043E0  0E3D               	movlw	low _MdmResetRequest
 26208  0043E2  0100               	movlb	0	; () banked
 26209  0043E4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26210  0043E6  0E00               	movlw	high _MdmResetRequest
 26211  0043E8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26212  0043EA  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 26213  0043EE  0900               	iorlw	0
 26214  0043F0  B4D8               	btfsc	status,2,c
 26215  0043F2  0012               	return	
 26216                           
 26217                           ;mdm_drv.c: 225: {
 26218                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 26219  0043F4  0E03               	movlw	3
 26220  0043F6  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26221                           
 26222                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 26223  0043F8  8084               	bsf	3972,0,c	;volatile
 26224                           
 26225                           ;mdm_drv.c: 231: Counter = 0;
 26226  0043FA  0E00               	movlw	0
 26227  0043FC  0102               	movlb	2	; () banked
 26228  0043FE  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26229  004400  0E00               	movlw	0
 26230  004402  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 26231                           
 26232                           ; BSR set to: 2
 26233                           ;mdm_drv.c: 236: }
 26234                           ;mdm_drv.c: 237: break;
 26235                           
 26236                           ; BSR set to: 2
 26237                           
 26238                           ;mdm_drv.c: 233: else
 26239                           ;mdm_drv.c: 234: {
 26240                           
 26241                           ; BSR set to: 2
 26242                           
 26243                           ;mdm_drv.c: 232: }
 26244  004404  0012               	return	
 26245  004406                     
 26246                           ;mdm_drv.c: 241: Counter++;
 26247                           
 26248                           ; BSR set to: 2
 26249  004406  0102               	movlb	2	; () banked
 26250  004408  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26251  00440A  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26252                           
 26253                           ; BSR set to: 2
 26254                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 26255  00440C  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26256  00440E  E104               	bnz	u13230
 26257  004410  0E96               	movlw	150
 26258  004412  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 26259  004414  A0D8               	btfss	status,0,c
 26260  004416  0012               	return	
 26261  004418                     u13230:
 26262                           
 26263                           ; BSR set to: 2
 26264                           ;mdm_drv.c: 244: {
 26265                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 26266  004418  9284               	bcf	3972,1,c	;volatile
 26267                           
 26268                           ; BSR set to: 2
 26269                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 26270  00441A  0E01               	movlw	1
 26271  00441C  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26272                           
 26273                           ; BSR set to: 2
 26274                           ;mdm_drv.c: 249: }
 26275                           ;mdm_drv.c: 250: break;
 26276  00441E  0012               	return	
 26277  004420                     
 26278                           ;mdm_drv.c: 254: Counter++;
 26279                           
 26280                           ; BSR set to: 2
 26281  004420  0102               	movlb	2	; () banked
 26282  004422  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26283  004424  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26284                           
 26285                           ; BSR set to: 2
 26286                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 26287  004426  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26288  004428  E104               	bnz	u13240
 26289  00442A  0E0A               	movlw	10
 26290  00442C  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 26291  00442E  A0D8               	btfss	status,0,c
 26292  004430  0012               	return	
 26293  004432                     u13240:
 26294                           
 26295                           ; BSR set to: 2
 26296                           ;mdm_drv.c: 257: {
 26297                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 26298  004432  9084               	bcf	3972,0,c	;volatile
 26299                           
 26300                           ; BSR set to: 2
 26301                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 26302  004434  0E01               	movlw	1
 26303  004436  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26304                           
 26305                           ; BSR set to: 2
 26306                           ;mdm_drv.c: 267: }
 26307                           
 26308                           ; BSR set to: 2
 26309                           ;mdm_drv.c: 266: break;
 26310                           
 26311                           ;mdm_drv.c: 265: default:
 26312                           
 26313                           ; BSR set to: 2
 26314                           ;mdm_drv.c: 262: }
 26315                           ;mdm_drv.c: 263: break;
 26316  004438  0012               	return	
 26317  00443A                     l315:
 26318                           
 26319                           ; BSR set to: 2
 26320  00443A  502E               	movf	MdmCntSm@MdmCntState,w,c
 26321                           
 26322                           ; Switch size 1, requested type "space"
 26323                           ; Number of cases is 4, Range of values is 0 to 3
 26324                           ; switch strategies available:
 26325                           ; Name         Instructions Cycles
 26326                           ; simple_byte           13     7 (average)
 26327                           ;	Chosen strategy is simple_byte
 26328  00443C  0A00               	xorlw	0	; case 0
 26329  00443E  B4D8               	btfsc	status,2,c
 26330  004440  D7B7               	goto	l316
 26331  004442  0A01               	xorlw	1	; case 1
 26332  004444  B4D8               	btfsc	status,2,c
 26333  004446  D7B9               	goto	l318
 26334  004448  0A03               	xorlw	3	; case 2
 26335  00444A  B4D8               	btfsc	status,2,c
 26336  00444C  D7DC               	goto	l323
 26337  00444E  0A01               	xorlw	1	; case 3
 26338  004450  A4D8               	btfss	status,2,c
 26339  004452  0012               	return	
 26340  004454  D7E5               	goto	l325
 26341  004456                     __end_of_MdmCntSm:
 26342                           	opt stack 0
 26343                           tosu	equ	0xFFF
 26344                           tosh	equ	0xFFE
 26345                           tosl	equ	0xFFD
 26346                           pclath	equ	0xFFA
 26347                           tblptru	equ	0xFF8
 26348                           tblptrh	equ	0xFF7
 26349                           tblptrl	equ	0xFF6
 26350                           tablat	equ	0xFF5
 26351                           prodh	equ	0xFF4
 26352                           prodl	equ	0xFF3
 26353                           intcon	equ	0xFF2
 26354                           intcon2	equ	0xFF1
 26355                           intcon3	equ	0xFF0
 26356                           indf0	equ	0xFEF
 26357                           postinc0	equ	0xFEE
 26358                           plusw0	equ	0xFEB
 26359                           fsr0h	equ	0xFEA
 26360                           fsr0l	equ	0xFE9
 26361                           wreg	equ	0xFE8
 26362                           indf1	equ	0xFE7
 26363                           postinc1	equ	0xFE6
 26364                           postdec1	equ	0xFE5
 26365                           plusw1	equ	0xFE3
 26366                           fsr1h	equ	0xFE2
 26367                           fsr1l	equ	0xFE1
 26368                           indf2	equ	0xFDF
 26369                           postinc2	equ	0xFDE
 26370                           postdec2	equ	0xFDD
 26371                           plusw2	equ	0xFDB
 26372                           fsr2h	equ	0xFDA
 26373                           fsr2l	equ	0xFD9
 26374                           status	equ	0xFD8
 26375                           
 26376 ;; *************** function _InitModemInterface *****************
 26377 ;; Defined at:
 26378 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26379 ;; Parameters:    Size  Location     Type
 26380 ;;		None
 26381 ;; Auto vars:     Size  Location     Type
 26382 ;;		None
 26383 ;; Return value:  Size  Location     Type
 26384 ;;                  1    wreg      void 
 26385 ;; Registers used:
 26386 ;;		None
 26387 ;; Tracked objects:
 26388 ;;		On entry : 0/0
 26389 ;;		On exit  : 0/0
 26390 ;;		Unchanged: 0/0
 26391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26396 ;;Total ram usage:        0 bytes
 26397 ;; Hardware stack levels used:    1
 26398 ;; Hardware stack levels required when called:   11
 26399 ;; This function calls:
 26400 ;;		Nothing
 26401 ;; This function is called by:
 26402 ;;		_MdmCntSm
 26403 ;; This function uses a non-reentrant model
 26404 ;;
 26405                           
 26406                           	psect	text121
 26407  0062AA                     __ptext121:
 26408                           	opt stack 0
 26409  0062AA                     _InitModemInterface:
 26410                           	opt stack 15
 26411                           
 26412                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 26413                           
 26414                           ;incstack = 0
 26415  0062AA  9096               	bcf	3990,0,c	;volatile
 26416                           
 26417                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 26418  0062AC  9296               	bcf	3990,1,c	;volatile
 26419                           
 26420                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 26421  0062AE  8496               	bsf	3990,2,c	;volatile
 26422  0062B0  0012               	return		;funcret
 26423  0062B2                     __end_of_InitModemInterface:
 26424                           	opt stack 0
 26425                           tosu	equ	0xFFF
 26426                           tosh	equ	0xFFE
 26427                           tosl	equ	0xFFD
 26428                           pclath	equ	0xFFA
 26429                           tblptru	equ	0xFF8
 26430                           tblptrh	equ	0xFF7
 26431                           tblptrl	equ	0xFF6
 26432                           tablat	equ	0xFF5
 26433                           prodh	equ	0xFF4
 26434                           prodl	equ	0xFF3
 26435                           intcon	equ	0xFF2
 26436                           intcon2	equ	0xFF1
 26437                           intcon3	equ	0xFF0
 26438                           indf0	equ	0xFEF
 26439                           postinc0	equ	0xFEE
 26440                           plusw0	equ	0xFEB
 26441                           fsr0h	equ	0xFEA
 26442                           fsr0l	equ	0xFE9
 26443                           wreg	equ	0xFE8
 26444                           indf1	equ	0xFE7
 26445                           postinc1	equ	0xFE6
 26446                           postdec1	equ	0xFE5
 26447                           plusw1	equ	0xFE3
 26448                           fsr1h	equ	0xFE2
 26449                           fsr1l	equ	0xFE1
 26450                           indf2	equ	0xFDF
 26451                           postinc2	equ	0xFDE
 26452                           postdec2	equ	0xFDD
 26453                           plusw2	equ	0xFDB
 26454                           fsr2h	equ	0xFDA
 26455                           fsr2l	equ	0xFD9
 26456                           status	equ	0xFD8
 26457                           
 26458 ;; *************** function _InitGprsNetwork *****************
 26459 ;; Defined at:
 26460 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26461 ;; Parameters:    Size  Location     Type
 26462 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 26463 ;;		 -> NULL(0), 
 26464 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 26465 ;; Auto vars:     Size  Location     Type
 26466 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26467 ;;  Index           1   50[BANK1 ] unsigned char 
 26468 ;; Return value:  Size  Location     Type
 26469 ;;                  1    wreg      enum E8921
 26470 ;; Registers used:
 26471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26472 ;; Tracked objects:
 26473 ;;		On entry : 0/0
 26474 ;;		On exit  : 0/0
 26475 ;;		Unchanged: 0/0
 26476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26477 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26478 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26480 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26481 ;;Total ram usage:       56 bytes
 26482 ;; Hardware stack levels used:    1
 26483 ;; Hardware stack levels required when called:   14
 26484 ;; This function calls:
 26485 ;;		_ClearBuffer
 26486 ;;		_OsTmr_GetTimerStatus
 26487 ;;		_OsTmr_StartTimer
 26488 ;;		_ReceiveEvt
 26489 ;;		_StringCopy
 26490 ;;		_Uart_WriteConstString
 26491 ;;		_Uart_WriteString
 26492 ;; This function is called by:
 26493 ;;		_MdmHttp_MainTask
 26494 ;; This function uses a non-reentrant model
 26495 ;;
 26496                           
 26497                           	psect	text122
 26498  000DC8                     __ptext122:
 26499                           	opt stack 0
 26500  000DC8                     _InitGprsNetwork:
 26501                           	opt stack 13
 26502                           
 26503                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 26504                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 26505                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 26506                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 26507                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 26508                           
 26509                           ;incstack = 0
 26510  000DC8  0E00               	movlw	0
 26511  000DCA  0101               	movlb	1	; () banked
 26512  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26513                           
 26514                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 26515  000DCE  D154               	goto	l1216
 26516  000DD0                     
 26517                           ; BSR set to: 1
 26518                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 26519                           
 26520                           ; BSR set to: 1
 26521  000DD0  0EDA               	movlw	low _InitNetwork
 26522  000DD2  0100               	movlb	0	; () banked
 26523  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26524  000DD6  0E00               	movlw	high _InitNetwork
 26525  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26526  000DDA  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 26527  000DDE  0900               	iorlw	0
 26528  000DE0  B4D8               	btfsc	status,2,c
 26529  000DE2  D166               	goto	l1219
 26530                           
 26531                           ;mdm_gsm_gprs_http.c: 137: {
 26532                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 26533  000DE4  0E01               	movlw	1
 26534  000DE6  D141               	goto	L75
 26535  000DE8                     
 26536                           ; BSR set to: 1
 26537                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 26538                           
 26539                           ; BSR set to: 1
 26540  000DE8  0E96               	movlw	low STR_8
 26541  000DEA  0100               	movlb	0	; () banked
 26542  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26543  000DEE  0EFE               	movlw	high STR_8
 26544  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26545  000DF2  0E01               	movlw	1
 26546  000DF4  EC91  F02C         	call	_Uart_WriteConstString
 26547                           
 26548                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 26549  000DF8  0E07               	movlw	7
 26550  000DFA  0101               	movlb	1	; () banked
 26551  000DFC  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26552                           
 26553                           ; BSR set to: 1
 26554                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 26555  000DFE  0E02               	movlw	2
 26556  000E00  0100               	movlb	0	; () banked
 26557  000E02  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26558                           
 26559                           ; BSR set to: 0
 26560                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 26561  000E04  0EF5               	movlw	low _ConnTimeout
 26562  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26563  000E08  0E02               	movlw	high _ConnTimeout
 26564  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26565  000E0C  0E20               	movlw	32
 26566  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26567  000E10  0E4E               	movlw	78
 26568  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26569  000E14  0E00               	movlw	0
 26570  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26571  000E18  0E00               	movlw	0
 26572  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26573  000E1C  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 26574  000E20  D0C7               	goto	l14287
 26575  000E22                     
 26576                           ; BSR set to: 1
 26577                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 26578                           
 26579                           ; BSR set to: 1
 26580  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 26581  000E24  0100               	movlb	0	; () banked
 26582  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26583  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 26584  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26585  000E2C  0E00               	movlw	0
 26586  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26587  000E30  0E32               	movlw	50
 26588  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26589  000E34  EC01  F02E         	call	_ClearBuffer	;wreg free
 26590                           
 26591                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 26592  000E38  0ECA               	movlw	low STR_9
 26593  000E3A  0100               	movlb	0	; () banked
 26594  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26595  000E3E  0EFE               	movlw	high STR_9
 26596  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26597  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 26598  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26599  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 26600  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26601  000E4A  0E00               	movlw	0
 26602  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26603  000E4E  0E14               	movlw	20
 26604  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 26605  000E52  EC4B  F028         	call	_StringCopy	;wreg free
 26606                           
 26607                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 26608  000E56  0E00               	movlw	0
 26609  000E58  0101               	movlb	1	; () banked
 26610  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26611  000E5C  D01C               	goto	l1222
 26612  000E5E                     
 26613                           ; BSR set to: 1
 26614                           ;mdm_gsm_gprs_http.c: 161: {
 26615                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 26616                           
 26617                           ; BSR set to: 1
 26618  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26619  000E60  0D01               	mullw	1
 26620  000E62  50F3               	movf	prodl,w,c
 26621  000E64  0100               	movlb	0	; () banked
 26622  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 26623  000E68  6ED9               	movwf	fsr2l,c
 26624  000E6A  50F4               	movf	prodh,w,c
 26625  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 26626  000E6E  6EDA               	movwf	fsr2h,c
 26627  000E70  0101               	movlb	1	; () banked
 26628  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26629  000E74  0100               	movlb	0	; () banked
 26630  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26631  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26632  000E7A  0E14               	movlw	20
 26633  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26634  000E7E  0E00               	movlw	0
 26635  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26636  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 26637  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26638  000E86  6EE1               	movwf	fsr1l,c
 26639  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 26640  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26641  000E8C  6EE2               	movwf	fsr1h,c
 26642  000E8E  CFDF FFE7          	movff	indf2,indf1
 26643                           
 26644                           ; BSR set to: 0
 26645  000E92  0101               	movlb	1	; () banked
 26646  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 26647  000E96                     l1222:
 26648                           
 26649                           ; BSR set to: 1
 26650                           
 26651                           ; BSR set to: 1
 26652  000E96  0100               	movlb	0	; () banked
 26653  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 26654  000E9A  0101               	movlb	1	; () banked
 26655  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 26656  000E9E  A0D8               	btfss	status,0,c
 26657  000EA0  D7DE               	goto	l1223
 26658                           
 26659                           ; BSR set to: 1
 26660                           ;mdm_gsm_gprs_http.c: 163: }
 26661                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 26662                           
 26663                           ; BSR set to: 1
 26664  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26665  000EA4  0100               	movlb	0	; () banked
 26666  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26667  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26668  000EAA  0E14               	movlw	20
 26669  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26670  000EAE  0E00               	movlw	0
 26671  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26672  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 26673  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26674  000EB6  6ED9               	movwf	fsr2l,c
 26675  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 26676  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26677  000EBC  6EDA               	movwf	fsr2h,c
 26678  000EBE  0E22               	movlw	34
 26679  000EC0  6EDF               	movwf	indf2,c
 26680                           
 26681                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 26682  000EC2  0101               	movlb	1	; () banked
 26683  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26684  000EC6  0100               	movlb	0	; () banked
 26685  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26686  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26687  000ECC  0E15               	movlw	21
 26688  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26689  000ED0  0E00               	movlw	0
 26690  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26691  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 26692  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26693  000ED8  6ED9               	movwf	fsr2l,c
 26694  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 26695  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26696  000EDE  6EDA               	movwf	fsr2h,c
 26697  000EE0  0E0D               	movlw	13
 26698  000EE2  6EDF               	movwf	indf2,c
 26699                           
 26700                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 26701  000EE4  0101               	movlb	1	; () banked
 26702  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26703  000EE8  0100               	movlb	0	; () banked
 26704  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26705  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26706  000EEE  0E16               	movlw	22
 26707  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26708  000EF2  0E00               	movlw	0
 26709  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26710  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 26711  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26712  000EFA  6ED9               	movwf	fsr2l,c
 26713  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 26714  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26715  000F00  6EDA               	movwf	fsr2h,c
 26716  000F02  0E00               	movlw	0
 26717  000F04  6EDF               	movwf	indf2,c
 26718                           
 26719                           ; BSR set to: 0
 26720                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 26721  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 26722  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26723  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 26724  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26725  000F0E  0E01               	movlw	1
 26726  000F10  EC52  F02D         	call	_Uart_WriteString
 26727                           
 26728                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 26729  000F14  0E07               	movlw	7
 26730  000F16  0101               	movlb	1	; () banked
 26731  000F18  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26732                           
 26733                           ; BSR set to: 1
 26734                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 26735  000F1A  0E03               	movlw	3
 26736  000F1C  0100               	movlb	0	; () banked
 26737  000F1E  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26738                           
 26739                           ; BSR set to: 0
 26740                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 26741  000F20  0EF5               	movlw	low _ConnTimeout
 26742  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26743  000F24  0E02               	movlw	high _ConnTimeout
 26744  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26745  000F28  0E20               	movlw	32
 26746  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26747  000F2C  0E4E               	movlw	78
 26748  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26749  000F30  0E00               	movlw	0
 26750  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26751  000F34  0E00               	movlw	0
 26752  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26753  000F38  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 26754  000F3C  D039               	goto	l14287
 26755  000F3E                     
 26756                           ; BSR set to: 1
 26757                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 26758                           
 26759                           ; BSR set to: 1
 26760  000F3E  0E4A               	movlw	low STR_10
 26761  000F40  0100               	movlb	0	; () banked
 26762  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26763  000F44  0EFF               	movlw	high STR_10
 26764  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26765  000F48  0E01               	movlw	1
 26766  000F4A  EC91  F02C         	call	_Uart_WriteConstString
 26767                           
 26768                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 26769  000F4E  0E07               	movlw	7
 26770  000F50  0101               	movlb	1	; () banked
 26771  000F52  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26772                           
 26773                           ; BSR set to: 1
 26774                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 26775  000F54  0E05               	movlw	5
 26776  000F56  0100               	movlb	0	; () banked
 26777  000F58  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26778                           
 26779                           ; BSR set to: 0
 26780                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 26781  000F5A  0EF5               	movlw	low _ConnTimeout
 26782  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26783  000F5E  0E02               	movlw	high _ConnTimeout
 26784  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26785  000F62  0E20               	movlw	32
 26786  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26787  000F66  0E4E               	movlw	78
 26788  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26789  000F6A  0E00               	movlw	0
 26790  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26791  000F6E  0E00               	movlw	0
 26792  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26793  000F72  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 26794  000F76  D01C               	goto	l14287
 26795  000F78                     
 26796                           ; BSR set to: 1
 26797                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 26798                           
 26799                           ; BSR set to: 1
 26800  000F78  0E58               	movlw	low STR_11
 26801  000F7A  0100               	movlb	0	; () banked
 26802  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26803  000F7E  0EFF               	movlw	high STR_11
 26804  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26805  000F82  0E01               	movlw	1
 26806  000F84  EC91  F02C         	call	_Uart_WriteConstString
 26807                           
 26808                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 26809  000F88  0E08               	movlw	8
 26810  000F8A  0101               	movlb	1	; () banked
 26811  000F8C  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26812                           
 26813                           ; BSR set to: 1
 26814                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 26815  000F8E  0E05               	movlw	5
 26816  000F90  0100               	movlb	0	; () banked
 26817  000F92  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26818                           
 26819                           ; BSR set to: 0
 26820                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 26821  000F94  0EF5               	movlw	low _ConnTimeout
 26822  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26823  000F98  0E02               	movlw	high _ConnTimeout
 26824  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26825  000F9C  0E20               	movlw	32
 26826  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26827  000FA0  0E4E               	movlw	78
 26828  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26829  000FA4  0E00               	movlw	0
 26830  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26831  000FA8  0E00               	movlw	0
 26832  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26833  000FAC  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 26834  000FB0                     l14287:
 26835                           
 26836                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 26837  000FB0  0E01               	movlw	1
 26838  000FB2  0101               	movlb	1	; () banked
 26839  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26840                           
 26841                           ;mdm_gsm_gprs_http.c: 201: break;
 26842  000FB6  D07C               	goto	l1219
 26843  000FB8                     
 26844                           ; BSR set to: 1
 26845                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 26846                           
 26847                           ; BSR set to: 1
 26848  000FB8  0E02               	movlw	2
 26849  000FBA  D05A               	goto	L74
 26850  000FBC                     
 26851                           ; BSR set to: 1
 26852                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 26853                           
 26854                           ; BSR set to: 1
 26855  000FBC  0E3C               	movlw	low _NewStringReceived
 26856  000FBE  0100               	movlb	0	; () banked
 26857  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26858  000FC2  0E00               	movlw	high _NewStringReceived
 26859  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26860  000FC6  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 26861  000FCA  0900               	iorlw	0
 26862  000FCC  B4D8               	btfsc	status,2,c
 26863  000FCE  D018               	goto	l1229
 26864                           
 26865                           ;mdm_gsm_gprs_http.c: 212: {
 26866                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26867  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 26868  000FD4  0A4F               	xorlw	79
 26869  000FD6  A4D8               	btfss	status,2,c
 26870  000FD8  D06B               	goto	l1219
 26871  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26872  000FDE  0A4B               	xorlw	75
 26873  000FE0  A4D8               	btfss	status,2,c
 26874  000FE2  D066               	goto	l1219
 26875                           
 26876                           ;mdm_gsm_gprs_http.c: 215: {
 26877                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 26878  000FE4  C0D0  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26879                           
 26880                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 26881  000FE8  0E58               	movlw	low _RxBuffer
 26882  000FEA  0100               	movlb	0	; () banked
 26883  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26884  000FEE  0E0C               	movlw	high _RxBuffer
 26885  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26886  000FF2  0E01               	movlw	1
 26887  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26888  000FF6  0E90               	movlw	144
 26889  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26890  000FFA  EC01  F02E         	call	_ClearBuffer	;wreg free
 26891                           
 26892                           ;mdm_gsm_gprs_http.c: 220: }
 26893                           ;mdm_gsm_gprs_http.c: 221: }
 26894  000FFE  D058               	goto	l1219
 26895  001000                     l1229:
 26896                           
 26897                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26898  001000  0EF5               	movlw	low _ConnTimeout
 26899  001002  0100               	movlb	0	; () banked
 26900  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26901  001006  0E02               	movlw	high _ConnTimeout
 26902  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26903  00100A  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26904  00100E  D029               	goto	L39
 26905  001010                     
 26906                           ; BSR set to: 1
 26907                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 26908                           
 26909                           ; BSR set to: 1
 26910  001010  0E3C               	movlw	low _NewStringReceived
 26911  001012  0100               	movlb	0	; () banked
 26912  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26913  001016  0E00               	movlw	high _NewStringReceived
 26914  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26915  00101A  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 26916  00101E  0900               	iorlw	0
 26917  001020  B4D8               	btfsc	status,2,c
 26918  001022  D018               	goto	l1234
 26919                           
 26920                           ;mdm_gsm_gprs_http.c: 232: {
 26921                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 26922  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 26923  001028  0A2B               	xorlw	43
 26924  00102A  A4D8               	btfss	status,2,c
 26925  00102C  D041               	goto	l1219
 26926  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26927  001032  0A53               	xorlw	83
 26928  001034  A4D8               	btfss	status,2,c
 26929  001036  D03C               	goto	l1219
 26930                           
 26931                           ;mdm_gsm_gprs_http.c: 235: {
 26932                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 26933  001038  C0D0  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26934                           
 26935                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 26936  00103C  0E58               	movlw	low _RxBuffer
 26937  00103E  0100               	movlb	0	; () banked
 26938  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26939  001042  0E0C               	movlw	high _RxBuffer
 26940  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26941  001046  0E01               	movlw	1
 26942  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26943  00104A  0E90               	movlw	144
 26944  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26945  00104E  EC01  F02E         	call	_ClearBuffer	;wreg free
 26946                           
 26947                           ;mdm_gsm_gprs_http.c: 240: }
 26948                           ;mdm_gsm_gprs_http.c: 241: }
 26949  001052  D02E               	goto	l1219
 26950  001054                     l1234:
 26951                           
 26952                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26953  001054  0EF5               	movlw	low _ConnTimeout
 26954  001056  0100               	movlb	0	; () banked
 26955  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26956  00105A  0E02               	movlw	high _ConnTimeout
 26957  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26958  00105E  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26959  001062                     L39:
 26960  001062  06E8               	decf	wreg,f,c
 26961  001064  A4D8               	btfss	status,2,c
 26962  001066  D024               	goto	l1219
 26963                           
 26964                           ;mdm_gsm_gprs_http.c: 243: {
 26965                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 26966  001068  0E06               	movlw	6
 26967  00106A                     L75:
 26968  00106A  0101               	movlb	1	; () banked
 26969  00106C  D003               	goto	L38
 26970  00106E                     
 26971                           ; BSR set to: 1
 26972                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 26973                           
 26974                           ; BSR set to: 1
 26975  00106E  0E03               	movlw	3
 26976  001070                     L74:
 26977  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26978                           
 26979                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 26980  001072  0E00               	movlw	0
 26981  001074                     L38:
 26982  001074  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26983                           
 26984                           ; BSR set to: 1
 26985                           ;mdm_gsm_gprs_http.c: 257: }
 26986                           
 26987                           ; BSR set to: 1
 26988                           ;mdm_gsm_gprs_http.c: 256: break;
 26989                           
 26990                           ;mdm_gsm_gprs_http.c: 255: default:
 26991                           
 26992                           ;mdm_gsm_gprs_http.c: 253: break;
 26993  001076  D01C               	goto	l1219
 26994  001078                     l1216:
 26995                           
 26996                           ; BSR set to: 1
 26997                           
 26998                           ; BSR set to: 1
 26999  001078  51ED               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 27000                           
 27001                           ; Switch size 1, requested type "space"
 27002                           ; Number of cases is 9, Range of values is 0 to 8
 27003                           ; switch strategies available:
 27004                           ; Name         Instructions Cycles
 27005                           ; simple_byte           28    15 (average)
 27006                           ;	Chosen strategy is simple_byte
 27007  00107A  0A00               	xorlw	0	; case 0
 27008  00107C  B4D8               	btfsc	status,2,c
 27009  00107E  D6A8               	goto	l1217
 27010  001080  0A01               	xorlw	1	; case 1
 27011  001082  B4D8               	btfsc	status,2,c
 27012  001084  D6B1               	goto	l1220
 27013  001086  0A03               	xorlw	3	; case 2
 27014  001088  B4D8               	btfsc	status,2,c
 27015  00108A  D6CB               	goto	l1221
 27016  00108C  0A01               	xorlw	1	; case 3
 27017  00108E  B4D8               	btfsc	status,2,c
 27018  001090  D756               	goto	l1225
 27019  001092  0A07               	xorlw	7	; case 4
 27020  001094  B4D8               	btfsc	status,2,c
 27021  001096  D770               	goto	l1226
 27022  001098  0A01               	xorlw	1	; case 5
 27023  00109A  B4D8               	btfsc	status,2,c
 27024  00109C  D78D               	goto	l1227
 27025  00109E  0A03               	xorlw	3	; case 6
 27026  0010A0  B4D8               	btfsc	status,2,c
 27027  0010A2  D7E5               	goto	l1238
 27028  0010A4  0A01               	xorlw	1	; case 7
 27029  0010A6  B4D8               	btfsc	status,2,c
 27030  0010A8  D789               	goto	l1228
 27031  0010AA  0A0F               	xorlw	15	; case 8
 27032  0010AC  B4D8               	btfsc	status,2,c
 27033  0010AE  D7B0               	goto	l1233
 27034  0010B0                     l1219:
 27035                           
 27036                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 27037                           
 27038                           ; BSR set to: 1
 27039  0010B0  0101               	movlb	1	; () banked
 27040  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 27041  0010B4  0012               	return	
 27042  0010B6                     __end_of_InitGprsNetwork:
 27043                           	opt stack 0
 27044                           tosu	equ	0xFFF
 27045                           tosh	equ	0xFFE
 27046                           tosl	equ	0xFFD
 27047                           pclath	equ	0xFFA
 27048                           tblptru	equ	0xFF8
 27049                           tblptrh	equ	0xFF7
 27050                           tblptrl	equ	0xFF6
 27051                           tablat	equ	0xFF5
 27052                           prodh	equ	0xFF4
 27053                           prodl	equ	0xFF3
 27054                           intcon	equ	0xFF2
 27055                           intcon2	equ	0xFF1
 27056                           intcon3	equ	0xFF0
 27057                           indf0	equ	0xFEF
 27058                           postinc0	equ	0xFEE
 27059                           plusw0	equ	0xFEB
 27060                           fsr0h	equ	0xFEA
 27061                           fsr0l	equ	0xFE9
 27062                           wreg	equ	0xFE8
 27063                           indf1	equ	0xFE7
 27064                           postinc1	equ	0xFE6
 27065                           postdec1	equ	0xFE5
 27066                           plusw1	equ	0xFE3
 27067                           fsr1h	equ	0xFE2
 27068                           fsr1l	equ	0xFE1
 27069                           indf2	equ	0xFDF
 27070                           postinc2	equ	0xFDE
 27071                           postdec2	equ	0xFDD
 27072                           plusw2	equ	0xFDB
 27073                           fsr2h	equ	0xFDA
 27074                           fsr2l	equ	0xFD9
 27075                           status	equ	0xFD8
 27076                           
 27077 ;; *************** function _HttpGetMethod *****************
 27078 ;; Defined at:
 27079 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 27080 ;; Parameters:    Size  Location     Type
 27081 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 27082 ;;		 -> HttpGetDataLocal(5), 
 27083 ;; Auto vars:     Size  Location     Type
 27084 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 27085 ;;  Index           1  200[BANK1 ] unsigned char 
 27086 ;; Return value:  Size  Location     Type
 27087 ;;                  1    wreg      enum E8921
 27088 ;; Registers used:
 27089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27090 ;; Tracked objects:
 27091 ;;		On entry : 0/0
 27092 ;;		On exit  : 0/0
 27093 ;;		Unchanged: 0/0
 27094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27096 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27098 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27099 ;;Total ram usage:      207 bytes
 27100 ;; Hardware stack levels used:    1
 27101 ;; Hardware stack levels required when called:   14
 27102 ;; This function calls:
 27103 ;;		_ClearBuffer
 27104 ;;		_OsTmr_GetTimerStatus
 27105 ;;		_OsTmr_StartTimer
 27106 ;;		_ReceiveEvt
 27107 ;;		_StringCopy
 27108 ;;		_Uart_WriteConstString
 27109 ;;		_Uart_WriteString
 27110 ;; This function is called by:
 27111 ;;		_MdmHttp_MainTask
 27112 ;; This function uses a non-reentrant model
 27113 ;;
 27114                           
 27115                           	psect	text123
 27116  0005EC                     __ptext123:
 27117                           	opt stack 0
 27118  0005EC                     _HttpGetMethod:
 27119                           	opt stack 13
 27120                           
 27121                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 27122                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 27123                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 27124                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 27125                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 27126                           
 27127                           ; BSR set to: 1
 27128                           ;incstack = 0
 27129  0005EC  0E00               	movlw	0
 27130  0005EE  0101               	movlb	1	; () banked
 27131  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27132                           
 27133                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 27134  0005F2  D230               	goto	l1249
 27135  0005F4                     
 27136                           ; BSR set to: 1
 27137                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 27138                           
 27139                           ; BSR set to: 1
 27140  0005F4  0ED9               	movlw	low _GetMethod
 27141  0005F6  0100               	movlb	0	; () banked
 27142  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27143  0005FA  0E00               	movlw	high _GetMethod
 27144  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27145  0005FE  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 27146  000602  0900               	iorlw	0
 27147  000604  B4D8               	btfsc	status,2,c
 27148  000606  D257               	goto	l1252
 27149                           
 27150                           ;mdm_gsm_gprs_http.c: 284: {
 27151                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 27152  000608  0E01               	movlw	1
 27153  00060A  D18C               	goto	L41
 27154  00060C                     
 27155                           ; BSR set to: 1
 27156                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 27157                           
 27158                           ; BSR set to: 1
 27159  00060C  0E9C               	movlw	low STR_12
 27160  00060E  0100               	movlb	0	; () banked
 27161  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27162  000612  0EFF               	movlw	high STR_12
 27163  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27164  000616  0E01               	movlw	1
 27165  000618  EC91  F02C         	call	_Uart_WriteConstString
 27166                           
 27167                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 27168  00061C  0E0A               	movlw	10
 27169  00061E  0101               	movlb	1	; () banked
 27170  000620  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27171                           
 27172                           ; BSR set to: 1
 27173                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 27174  000622  0E02               	movlw	2
 27175  000624  0100               	movlb	0	; () banked
 27176  000626  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27177                           
 27178                           ; BSR set to: 0
 27179                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 27180  000628  0EF5               	movlw	low _ConnTimeout
 27181  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27182  00062C  0E02               	movlw	high _ConnTimeout
 27183  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27184  000630  0E20               	movlw	32
 27185  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27186  000634  0E4E               	movlw	78
 27187  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27188  000638  0E00               	movlw	0
 27189  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27190  00063C  0E00               	movlw	0
 27191  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27192  000640  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27193  000644  D1AF               	goto	l14453
 27194  000646                     
 27195                           ; BSR set to: 1
 27196                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 27197                           
 27198                           ; BSR set to: 1
 27199  000646  0E66               	movlw	low STR_13
 27200  000648  0100               	movlb	0	; () banked
 27201  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27202  00064C  0EFF               	movlw	high STR_13
 27203  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27204  000650  0E01               	movlw	1
 27205  000652  EC91  F02C         	call	_Uart_WriteConstString
 27206                           
 27207                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 27208  000656  0E0A               	movlw	10
 27209  000658  0101               	movlb	1	; () banked
 27210  00065A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27211                           
 27212                           ; BSR set to: 1
 27213                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 27214  00065C  0E03               	movlw	3
 27215  00065E  0100               	movlb	0	; () banked
 27216  000660  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27217                           
 27218                           ; BSR set to: 0
 27219                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 27220  000662  0EF5               	movlw	low _ConnTimeout
 27221  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27222  000666  0E02               	movlw	high _ConnTimeout
 27223  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27224  00066A  0E20               	movlw	32
 27225  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27226  00066E  0E4E               	movlw	78
 27227  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27228  000672  0E00               	movlw	0
 27229  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27230  000676  0E00               	movlw	0
 27231  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27232  00067A  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27233  00067E  D192               	goto	l14453
 27234  000680                     
 27235                           ; BSR set to: 1
 27236                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 27237                           
 27238                           ; BSR set to: 1
 27239  000680  0EB5               	movlw	low STR_14
 27240  000682  0100               	movlb	0	; () banked
 27241  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27242  000686  0EFE               	movlw	high STR_14
 27243  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27244  00068A  0E01               	movlw	1
 27245  00068C  EC91  F02C         	call	_Uart_WriteConstString
 27246                           
 27247                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 27248  000690  0E0A               	movlw	10
 27249  000692  0101               	movlb	1	; () banked
 27250  000694  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27251                           
 27252                           ; BSR set to: 1
 27253                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 27254  000696  0E04               	movlw	4
 27255  000698  0100               	movlb	0	; () banked
 27256  00069A  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27257                           
 27258                           ; BSR set to: 0
 27259                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 27260  00069C  0EF5               	movlw	low _ConnTimeout
 27261  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27262  0006A0  0E02               	movlw	high _ConnTimeout
 27263  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27264  0006A4  0E20               	movlw	32
 27265  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27266  0006A8  0E4E               	movlw	78
 27267  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27268  0006AC  0E00               	movlw	0
 27269  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27270  0006B0  0E00               	movlw	0
 27271  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27272  0006B4  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27273  0006B8  D175               	goto	l14453
 27274  0006BA                     
 27275                           ; BSR set to: 1
 27276                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 27277                           
 27278                           ; BSR set to: 1
 27279  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27280  0006BC  0100               	movlb	0	; () banked
 27281  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27282  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 27283  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27284  0006C4  0E00               	movlw	0
 27285  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27286  0006C8  0EC8               	movlw	200
 27287  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27288  0006CC  EC01  F02E         	call	_ClearBuffer	;wreg free
 27289                           
 27290                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 27291  0006D0  0EF3               	movlw	low STR_15
 27292  0006D2  0100               	movlb	0	; () banked
 27293  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27294  0006D6  0EFE               	movlw	high STR_15
 27295  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27296  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 27297  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27298  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 27299  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27300  0006E2  0E00               	movlw	0
 27301  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27302  0006E6  0E13               	movlw	19
 27303  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 27304  0006EA  EC4B  F028         	call	_StringCopy	;wreg free
 27305                           
 27306                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 27307  0006EE  0E00               	movlw	0
 27308  0006F0  0101               	movlb	1	; () banked
 27309  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27310  0006F4  D024               	goto	l1257
 27311  0006F6                     
 27312                           ; BSR set to: 1
 27313                           ;mdm_gsm_gprs_http.c: 332: {
 27314                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 27315                           
 27316                           ; BSR set to: 1
 27317  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27318  0006F8  0D01               	mullw	1
 27319  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 27320  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 27321  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 27322  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 27323  00070A  50F3               	movf	prodl,w,c
 27324  00070C  0100               	movlb	0	; () banked
 27325  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27326  000710  6ED9               	movwf	fsr2l,c
 27327  000712  50F4               	movf	prodh,w,c
 27328  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27329  000716  6EDA               	movwf	fsr2h,c
 27330  000718  0101               	movlb	1	; () banked
 27331  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27332  00071C  0100               	movlb	0	; () banked
 27333  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 27334  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 27335  000722  0E13               	movlw	19
 27336  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 27337  000726  0E00               	movlw	0
 27338  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 27339  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 27340  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 27341  00072E  6EE1               	movwf	fsr1l,c
 27342  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 27343  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 27344  000734  6EE2               	movwf	fsr1h,c
 27345  000736  CFDF FFE7          	movff	indf2,indf1
 27346                           
 27347                           ; BSR set to: 0
 27348  00073A  0101               	movlb	1	; () banked
 27349  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 27350  00073E                     l1257:
 27351                           
 27352                           ; BSR set to: 1
 27353                           
 27354                           ; BSR set to: 1
 27355  00073E  0100               	movlb	0	; () banked
 27356  000740  EE20 F002          	lfsr	2,2
 27357  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27358  000746  26D9               	addwf	fsr2l,f,c
 27359  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27360  00074A  22DA               	addwfc	fsr2h,f,c
 27361  00074C  50DE               	movf	postinc2,w,c
 27362  00074E  0101               	movlb	1	; () banked
 27363  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 27364  000752  A0D8               	btfss	status,0,c
 27365  000754  D7D0               	goto	l1258
 27366                           
 27367                           ; BSR set to: 1
 27368                           ;mdm_gsm_gprs_http.c: 334: }
 27369                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 27370                           
 27371                           ; BSR set to: 1
 27372  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27373  000758  0100               	movlb	0	; () banked
 27374  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27375  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27376  00075E  0E13               	movlw	19
 27377  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27378  000762  0E00               	movlw	0
 27379  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27380  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 27381  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27382  00076A  6ED9               	movwf	fsr2l,c
 27383  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 27384  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27385  000770  6EDA               	movwf	fsr2h,c
 27386  000772  0E22               	movlw	34
 27387  000774  6EDF               	movwf	indf2,c
 27388                           
 27389                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 27390  000776  0101               	movlb	1	; () banked
 27391  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27392  00077A  0100               	movlb	0	; () banked
 27393  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27394  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27395  000780  0E14               	movlw	20
 27396  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27397  000784  0E00               	movlw	0
 27398  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27399  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 27400  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27401  00078C  6ED9               	movwf	fsr2l,c
 27402  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 27403  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27404  000792  6EDA               	movwf	fsr2h,c
 27405  000794  0E0D               	movlw	13
 27406  000796  6EDF               	movwf	indf2,c
 27407                           
 27408                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 27409  000798  0101               	movlb	1	; () banked
 27410  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27411  00079C  0100               	movlb	0	; () banked
 27412  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27413  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27414  0007A2  0E15               	movlw	21
 27415  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27416  0007A6  0E00               	movlw	0
 27417  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27418  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 27419  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27420  0007AE  6ED9               	movwf	fsr2l,c
 27421  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 27422  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27423  0007B4  6EDA               	movwf	fsr2h,c
 27424  0007B6  0E00               	movlw	0
 27425  0007B8  6EDF               	movwf	indf2,c
 27426                           
 27427                           ; BSR set to: 0
 27428                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 27429  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27430  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27431  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 27432  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27433  0007C2  0E01               	movlw	1
 27434  0007C4  EC52  F02D         	call	_Uart_WriteString
 27435                           
 27436                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 27437  0007C8  0E0A               	movlw	10
 27438  0007CA  0101               	movlb	1	; () banked
 27439  0007CC  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27440                           
 27441                           ; BSR set to: 1
 27442                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 27443  0007CE  0E05               	movlw	5
 27444  0007D0  0100               	movlb	0	; () banked
 27445  0007D2  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27446                           
 27447                           ; BSR set to: 0
 27448                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 27449  0007D4  0EF5               	movlw	low _ConnTimeout
 27450  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27451  0007D8  0E02               	movlw	high _ConnTimeout
 27452  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27453  0007DC  0E20               	movlw	32
 27454  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27455  0007E0  0E4E               	movlw	78
 27456  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27457  0007E4  0E00               	movlw	0
 27458  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27459  0007E8  0E00               	movlw	0
 27460  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27461  0007EC  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27462  0007F0  D0D9               	goto	l14453
 27463  0007F2                     
 27464                           ; BSR set to: 1
 27465                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 27466                           
 27467                           ; BSR set to: 1
 27468  0007F2  0E2B               	movlw	low STR_16
 27469  0007F4  0100               	movlb	0	; () banked
 27470  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27471  0007F8  0EFF               	movlw	high STR_16
 27472  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27473  0007FC  0E01               	movlw	1
 27474  0007FE  EC91  F02C         	call	_Uart_WriteConstString
 27475                           
 27476                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 27477  000802  0E0A               	movlw	10
 27478  000804  0101               	movlb	1	; () banked
 27479  000806  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27480                           
 27481                           ; BSR set to: 1
 27482                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 27483  000808  0E06               	movlw	6
 27484  00080A  0100               	movlb	0	; () banked
 27485  00080C  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27486                           
 27487                           ; BSR set to: 0
 27488                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 27489  00080E  0EF5               	movlw	low _ConnTimeout
 27490  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27491  000812  0E02               	movlw	high _ConnTimeout
 27492  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27493  000816  0E20               	movlw	32
 27494  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27495  00081A  0E4E               	movlw	78
 27496  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27497  00081E  0E00               	movlw	0
 27498  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27499  000822  0E00               	movlw	0
 27500  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27501  000826  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27502                           
 27503                           ;mdm_gsm_gprs_http.c: 358: break;
 27504  00082A  D145               	goto	l1252
 27505  00082C                     
 27506                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 27507  00082C  0E07               	movlw	7
 27508  00082E  0101               	movlb	1	; () banked
 27509  000830  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27510                           
 27511                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 27512  000832  0E09               	movlw	9
 27513  000834  0100               	movlb	0	; () banked
 27514  000836  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27515                           
 27516                           ; BSR set to: 0
 27517                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 27518  000838  0EF5               	movlw	low _ConnTimeout
 27519  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27520  00083C  0E02               	movlw	high _ConnTimeout
 27521  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27522  000840  0E20               	movlw	32
 27523  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27524  000844  0E4E               	movlw	78
 27525  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27526  000848  0E00               	movlw	0
 27527  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27528  00084C  0E00               	movlw	0
 27529  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27530  000850  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27531                           
 27532                           ;mdm_gsm_gprs_http.c: 371: break;
 27533  000854  D130               	goto	l1252
 27534  000856                     
 27535                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 27536  000856  0E82               	movlw	low STR_17
 27537  000858  0100               	movlb	0	; () banked
 27538  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27539  00085C  0EFF               	movlw	high STR_17
 27540  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27541  000860  0E01               	movlw	1
 27542  000862  EC91  F02C         	call	_Uart_WriteConstString
 27543                           
 27544                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 27545  000866  0E0D               	movlw	13
 27546  000868  0101               	movlb	1	; () banked
 27547  00086A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27548                           
 27549                           ; BSR set to: 1
 27550                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 27551  00086C  0E09               	movlw	9
 27552  00086E  0100               	movlb	0	; () banked
 27553  000870  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27554                           
 27555                           ; BSR set to: 0
 27556                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 27557  000872  0EF5               	movlw	low _ConnTimeout
 27558  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27559  000876  0E02               	movlw	high _ConnTimeout
 27560  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27561  00087A  0E20               	movlw	32
 27562  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27563  00087E  0E4E               	movlw	78
 27564  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27565  000882  0E00               	movlw	0
 27566  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27567  000886  0E00               	movlw	0
 27568  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27569  00088A  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27570  00088E  D08A               	goto	l14453
 27571  000890                     
 27572                           ; BSR set to: 1
 27573                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 27574                           
 27575                           ; BSR set to: 1
 27576  000890  0E8F               	movlw	low STR_18
 27577  000892  0100               	movlb	0	; () banked
 27578  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27579  000896  0EFF               	movlw	high STR_18
 27580  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27581  00089A  0E01               	movlw	1
 27582  00089C  EC91  F02C         	call	_Uart_WriteConstString
 27583                           
 27584                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 27585  0008A0  0E0A               	movlw	10
 27586  0008A2  0101               	movlb	1	; () banked
 27587  0008A4  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27588                           
 27589                           ; BSR set to: 1
 27590                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 27591  0008A6  0E0E               	movlw	14
 27592  0008A8  0100               	movlb	0	; () banked
 27593  0008AA  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27594                           
 27595                           ; BSR set to: 0
 27596                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 27597  0008AC  0EF5               	movlw	low _ConnTimeout
 27598  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27599  0008B0  0E02               	movlw	high _ConnTimeout
 27600  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27601  0008B4  0E20               	movlw	32
 27602  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27603  0008B8  0E4E               	movlw	78
 27604  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27605  0008BC  0E00               	movlw	0
 27606  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27607  0008C0  0E00               	movlw	0
 27608  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27609  0008C4  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27610  0008C8  D06D               	goto	l14453
 27611  0008CA                     
 27612                           ; BSR set to: 1
 27613                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 27614                           
 27615                           ; BSR set to: 1
 27616  0008CA  0E3C               	movlw	low _NewStringReceived
 27617  0008CC  0100               	movlb	0	; () banked
 27618  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27619  0008D0  0E00               	movlw	high _NewStringReceived
 27620  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27621  0008D4  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 27622  0008D8  0900               	iorlw	0
 27623  0008DA  B4D8               	btfsc	status,2,c
 27624  0008DC  D018               	goto	l1265
 27625                           
 27626                           ;mdm_gsm_gprs_http.c: 400: {
 27627                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27628  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 27629  0008E2  0A4F               	xorlw	79
 27630  0008E4  A4D8               	btfss	status,2,c
 27631  0008E6  D0E7               	goto	l1252
 27632  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27633  0008EC  0A4B               	xorlw	75
 27634  0008EE  A4D8               	btfss	status,2,c
 27635  0008F0  D0E2               	goto	l1252
 27636                           
 27637                           ;mdm_gsm_gprs_http.c: 403: {
 27638                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 27639  0008F2  C0CF  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27640                           
 27641                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 27642  0008F6  0E58               	movlw	low _RxBuffer
 27643  0008F8  0100               	movlb	0	; () banked
 27644  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27645  0008FC  0E0C               	movlw	high _RxBuffer
 27646  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27647  000900  0E01               	movlw	1
 27648  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27649  000904  0E90               	movlw	144
 27650  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27651  000908  EC01  F02E         	call	_ClearBuffer	;wreg free
 27652                           
 27653                           ;mdm_gsm_gprs_http.c: 408: }
 27654                           ;mdm_gsm_gprs_http.c: 409: }
 27655  00090C  D0D4               	goto	l1252
 27656  00090E                     l1265:
 27657                           
 27658                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27659  00090E  0EF5               	movlw	low _ConnTimeout
 27660  000910  0100               	movlb	0	; () banked
 27661  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27662  000914  0E02               	movlw	high _ConnTimeout
 27663  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27664  000918  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27665  00091C                     L42:
 27666  00091C  06E8               	decf	wreg,f,c
 27667  00091E  A4D8               	btfss	status,2,c
 27668  000920  D0CA               	goto	l1252
 27669                           
 27670                           ;mdm_gsm_gprs_http.c: 411: {
 27671                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 27672  000922  0E0F               	movlw	15
 27673  000924                     L41:
 27674  000924  0101               	movlb	1	; () banked
 27675  000926  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27676                           
 27677                           ; BSR set to: 1
 27678                           ;mdm_gsm_gprs_http.c: 414: }
 27679                           ;mdm_gsm_gprs_http.c: 415: break;
 27680                           
 27681                           ; BSR set to: 1
 27682  000928  D0C6               	goto	l1252
 27683  00092A                     
 27684                           ; BSR set to: 1
 27685                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 27686                           
 27687                           ; BSR set to: 1
 27688  00092A  0E3C               	movlw	low _NewStringReceived
 27689  00092C  0100               	movlb	0	; () banked
 27690  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27691  000930  0E00               	movlw	high _NewStringReceived
 27692  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27693  000934  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 27694  000938  0900               	iorlw	0
 27695  00093A  B4D8               	btfsc	status,2,c
 27696  00093C  D018               	goto	l1270
 27697                           
 27698                           ;mdm_gsm_gprs_http.c: 420: {
 27699                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27700  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 27701  000942  0A2B               	xorlw	43
 27702  000944  A4D8               	btfss	status,2,c
 27703  000946  D0B7               	goto	l1252
 27704  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27705  00094C  0A48               	xorlw	72
 27706  00094E  A4D8               	btfss	status,2,c
 27707  000950  D0B2               	goto	l1252
 27708                           
 27709                           ;mdm_gsm_gprs_http.c: 423: {
 27710                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 27711  000952  C0CF  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27712                           
 27713                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 27714  000956  0E58               	movlw	low _RxBuffer
 27715  000958  0100               	movlb	0	; () banked
 27716  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27717  00095C  0E0C               	movlw	high _RxBuffer
 27718  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27719  000960  0E01               	movlw	1
 27720  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27721  000964  0E90               	movlw	144
 27722  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27723  000968  EC01  F02E         	call	_ClearBuffer	;wreg free
 27724                           
 27725                           ;mdm_gsm_gprs_http.c: 428: }
 27726                           ;mdm_gsm_gprs_http.c: 429: }
 27727  00096C  D0A4               	goto	l1252
 27728  00096E                     l1270:
 27729                           
 27730                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27731  00096E  0EF5               	movlw	low _ConnTimeout
 27732  000970  0100               	movlb	0	; () banked
 27733  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27734  000974  0E02               	movlw	high _ConnTimeout
 27735  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27736  000978  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27737  00097C  D7CF               	goto	L42
 27738  00097E                     
 27739                           ; BSR set to: 1
 27740                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 27741                           
 27742                           ; BSR set to: 1
 27743  00097E  0E0C               	movlw	12
 27744  000980  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27745                           
 27746                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 27747  000982  0E05               	movlw	5
 27748  000984  0100               	movlb	0	; () banked
 27749  000986  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27750                           
 27751                           ; BSR set to: 0
 27752                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 27753  000988  0ED8               	movlw	low _ConnWait
 27754  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27755  00098C  0E03               	movlw	high _ConnWait
 27756  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27757  000990  0EE8               	movlw	232
 27758  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27759  000994  0E03               	movlw	3
 27760  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27761  000998  0E00               	movlw	0
 27762  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27763  00099C  0E00               	movlw	0
 27764  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27765  0009A0  ECAB  F028         	call	_OsTmr_StartTimer	;wreg free
 27766  0009A4                     l14453:
 27767                           
 27768                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 27769  0009A4  0E01               	movlw	1
 27770  0009A6  0101               	movlb	1	; () banked
 27771  0009A8  D053               	goto	L44
 27772  0009AA                     
 27773                           ; BSR set to: 1
 27774                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 27775                           
 27776                           ; BSR set to: 1
 27777  0009AA  0ED8               	movlw	low _ConnWait
 27778  0009AC  0100               	movlb	0	; () banked
 27779  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27780  0009B0  0E03               	movlw	high _ConnWait
 27781  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27782  0009B4  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27783  0009B8  06E8               	decf	wreg,f,c
 27784  0009BA  A4D8               	btfss	status,2,c
 27785  0009BC  D07C               	goto	l1252
 27786                           
 27787                           ;mdm_gsm_gprs_http.c: 450: {
 27788                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 27789  0009BE  C0CF  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27790                           
 27791                           ;mdm_gsm_gprs_http.c: 453: }
 27792                           ;mdm_gsm_gprs_http.c: 454: break;
 27793  0009C2  D079               	goto	l1252
 27794  0009C4                     
 27795                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 27796  0009C4  0E3C               	movlw	low _NewStringReceived
 27797  0009C6  0100               	movlb	0	; () banked
 27798  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27799  0009CA  0E00               	movlw	high _NewStringReceived
 27800  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27801  0009CE  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 27802  0009D2  0900               	iorlw	0
 27803  0009D4  B4D8               	btfsc	status,2,c
 27804  0009D6  D02D               	goto	l1278
 27805                           
 27806                           ;mdm_gsm_gprs_http.c: 459: {
 27807                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27808  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 27809  0009DC  0A2B               	xorlw	43
 27810  0009DE  A4D8               	btfss	status,2,c
 27811  0009E0  D06A               	goto	l1252
 27812  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27813  0009E6  0A48               	xorlw	72
 27814  0009E8  A4D8               	btfss	status,2,c
 27815  0009EA  D065               	goto	l1252
 27816                           
 27817                           ;mdm_gsm_gprs_http.c: 462: {
 27818                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 27819  0009EC  C0CF  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27820                           
 27821                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 27822  0009F0  0E58               	movlw	low _RxBuffer
 27823  0009F2  0100               	movlb	0	; () banked
 27824  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27825  0009F6  0E0C               	movlw	high _RxBuffer
 27826  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27827  0009FA  EE20 F003          	lfsr	2,3
 27828  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27829  000A00  26D9               	addwf	fsr2l,f,c
 27830  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27831  000A04  22DA               	addwfc	fsr2h,f,c
 27832  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 27833  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 27834  000A0E  0E01               	movlw	1
 27835  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27836  000A12  0E90               	movlw	144
 27837  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 27838  000A16  EC4B  F028         	call	_StringCopy	;wreg free
 27839                           
 27840                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 27841  000A1A  0E58               	movlw	low _RxBuffer
 27842  000A1C  0100               	movlb	0	; () banked
 27843  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27844  000A20  0E0C               	movlw	high _RxBuffer
 27845  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27846  000A24  0E01               	movlw	1
 27847  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27848  000A28  0E90               	movlw	144
 27849  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27850  000A2C  EC01  F02E         	call	_ClearBuffer	;wreg free
 27851                           
 27852                           ;mdm_gsm_gprs_http.c: 469: }
 27853                           ;mdm_gsm_gprs_http.c: 470: }
 27854  000A30  D042               	goto	l1252
 27855  000A32                     l1278:
 27856                           
 27857                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27858  000A32  0EF5               	movlw	low _ConnTimeout
 27859  000A34  0100               	movlb	0	; () banked
 27860  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27861  000A38  0E02               	movlw	high _ConnTimeout
 27862  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27863  000A3C  EC34  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27864  000A40  D76D               	goto	L42
 27865  000A42                     
 27866                           ; BSR set to: 1
 27867                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 27868                           
 27869                           ; BSR set to: 1
 27870  000A42  0E00               	movlw	0
 27871  000A44  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27872                           
 27873                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 27874  000A46  0E02               	movlw	2
 27875  000A48  D003               	goto	L44
 27876  000A4A                     
 27877                           ; BSR set to: 1
 27878                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 27879                           
 27880                           ; BSR set to: 1
 27881  000A4A  0E00               	movlw	0
 27882  000A4C  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27883                           
 27884                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 27885  000A4E  0E03               	movlw	3
 27886  000A50                     L44:
 27887  000A50  6FEB               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 27888                           
 27889                           ; BSR set to: 1
 27890                           ;mdm_gsm_gprs_http.c: 494: }
 27891                           
 27892                           ; BSR set to: 1
 27893                           ;mdm_gsm_gprs_http.c: 493: break;
 27894                           
 27895                           ;mdm_gsm_gprs_http.c: 492: default:
 27896                           
 27897                           ;mdm_gsm_gprs_http.c: 490: break;
 27898  000A52  D031               	goto	l1252
 27899  000A54                     l1249:
 27900                           
 27901                           ; BSR set to: 1
 27902                           
 27903                           ; BSR set to: 1
 27904  000A54  51EC               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 27905                           
 27906                           ; Switch size 1, requested type "space"
 27907                           ; Number of cases is 16, Range of values is 0 to 15
 27908                           ; switch strategies available:
 27909                           ; Name         Instructions Cycles
 27910                           ; simple_byte           49    25 (average)
 27911                           ;	Chosen strategy is simple_byte
 27912  000A56  0A00               	xorlw	0	; case 0
 27913  000A58  B4D8               	btfsc	status,2,c
 27914  000A5A  D5CC               	goto	l1250
 27915  000A5C  0A01               	xorlw	1	; case 1
 27916  000A5E  B4D8               	btfsc	status,2,c
 27917  000A60  D5D5               	goto	l1253
 27918  000A62  0A03               	xorlw	3	; case 2
 27919  000A64  B4D8               	btfsc	status,2,c
 27920  000A66  D5EF               	goto	l1254
 27921  000A68  0A01               	xorlw	1	; case 3
 27922  000A6A  B4D8               	btfsc	status,2,c
 27923  000A6C  D609               	goto	l1255
 27924  000A6E  0A07               	xorlw	7	; case 4
 27925  000A70  B4D8               	btfsc	status,2,c
 27926  000A72  D623               	goto	l1256
 27927  000A74  0A01               	xorlw	1	; case 5
 27928  000A76  B4D8               	btfsc	status,2,c
 27929  000A78  D6BC               	goto	l1260
 27930  000A7A  0A03               	xorlw	3	; case 6
 27931  000A7C  B4D8               	btfsc	status,2,c
 27932  000A7E  D6D6               	goto	l1261
 27933  000A80  0A01               	xorlw	1	; case 7
 27934  000A82  B4D8               	btfsc	status,2,c
 27935  000A84  D752               	goto	l1269
 27936  000A86  0A0F               	xorlw	15	; case 8
 27937  000A88  B4D8               	btfsc	status,2,c
 27938  000A8A  D6E5               	goto	l1262
 27939  000A8C  0A01               	xorlw	1	; case 9
 27940  000A8E  B4D8               	btfsc	status,2,c
 27941  000A90  D6FF               	goto	l1263
 27942  000A92  0A03               	xorlw	3	; case 10
 27943  000A94  B4D8               	btfsc	status,2,c
 27944  000A96  D719               	goto	l1264
 27945  000A98  0A01               	xorlw	1	; case 11
 27946  000A9A  B4D8               	btfsc	status,2,c
 27947  000A9C  D770               	goto	l1274
 27948  000A9E  0A07               	xorlw	7	; case 12
 27949  000AA0  B4D8               	btfsc	status,2,c
 27950  000AA2  D783               	goto	l1275
 27951  000AA4  0A01               	xorlw	1	; case 13
 27952  000AA6  B4D8               	btfsc	status,2,c
 27953  000AA8  D78D               	goto	l1277
 27954  000AAA  0A03               	xorlw	3	; case 14
 27955  000AAC  B4D8               	btfsc	status,2,c
 27956  000AAE  D7C9               	goto	l1282
 27957  000AB0  0A01               	xorlw	1	; case 15
 27958  000AB2  B4D8               	btfsc	status,2,c
 27959  000AB4  D7CA               	goto	l1283
 27960  000AB6                     l1252:
 27961                           
 27962                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 27963                           
 27964                           ; BSR set to: 1
 27965  000AB6  0101               	movlb	1	; () banked
 27966  000AB8  51EB               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 27967  000ABA  0012               	return	
 27968  000ABC                     __end_of_HttpGetMethod:
 27969                           	opt stack 0
 27970                           tosu	equ	0xFFF
 27971                           tosh	equ	0xFFE
 27972                           tosl	equ	0xFFD
 27973                           pclath	equ	0xFFA
 27974                           tblptru	equ	0xFF8
 27975                           tblptrh	equ	0xFF7
 27976                           tblptrl	equ	0xFF6
 27977                           tablat	equ	0xFF5
 27978                           prodh	equ	0xFF4
 27979                           prodl	equ	0xFF3
 27980                           intcon	equ	0xFF2
 27981                           intcon2	equ	0xFF1
 27982                           intcon3	equ	0xFF0
 27983                           indf0	equ	0xFEF
 27984                           postinc0	equ	0xFEE
 27985                           plusw0	equ	0xFEB
 27986                           fsr0h	equ	0xFEA
 27987                           fsr0l	equ	0xFE9
 27988                           wreg	equ	0xFE8
 27989                           indf1	equ	0xFE7
 27990                           postinc1	equ	0xFE6
 27991                           postdec1	equ	0xFE5
 27992                           plusw1	equ	0xFE3
 27993                           fsr1h	equ	0xFE2
 27994                           fsr1l	equ	0xFE1
 27995                           indf2	equ	0xFDF
 27996                           postinc2	equ	0xFDE
 27997                           postdec2	equ	0xFDD
 27998                           plusw2	equ	0xFDB
 27999                           fsr2h	equ	0xFDA
 28000                           fsr2l	equ	0xFD9
 28001                           status	equ	0xFD8
 28002                           
 28003 ;; *************** function _Uart_WriteString *****************
 28004 ;; Defined at:
 28005 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28006 ;; Parameters:    Size  Location     Type
 28007 ;;  Module          1    wreg     unsigned char 
 28008 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 28009 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 28010 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 28011 ;; Auto vars:     Size  Location     Type
 28012 ;;  Module          1   34[BANK0 ] unsigned char 
 28013 ;; Return value:  Size  Location     Type
 28014 ;;                  1    wreg      void 
 28015 ;; Registers used:
 28016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28017 ;; Tracked objects:
 28018 ;;		On entry : 0/0
 28019 ;;		On exit  : 0/0
 28020 ;;		Unchanged: 0/0
 28021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28025 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28026 ;;Total ram usage:        3 bytes
 28027 ;; Hardware stack levels used:    1
 28028 ;; Hardware stack levels required when called:   12
 28029 ;; This function calls:
 28030 ;;		_UartTxBufferStatus
 28031 ;;		_UartWriteByte
 28032 ;; This function is called by:
 28033 ;;		_Mdm_SetSmsFormat
 28034 ;;		_InitGprsNetwork
 28035 ;;		_HttpGetMethod
 28036 ;;		_Mdm_PinUnlock
 28037 ;;		_Mdm_MakePhoneCall
 28038 ;; This function uses a non-reentrant model
 28039 ;;
 28040                           
 28041                           	psect	text124
 28042  005AA4                     __ptext124:
 28043                           	opt stack 0
 28044  005AA4                     _Uart_WriteString:
 28045                           	opt stack 13
 28046                           
 28047                           ; BSR set to: 1
 28048                           ;incstack = 0
 28049                           ;Uart_WriteString@Module stored from wreg
 28050  005AA4  0100               	movlb	0	; () banked
 28051  005AA6  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 28052                           
 28053                           ;uart_drv.c: 521: while (*StringToWrite)
 28054  005AA8  D014               	goto	u11520
 28055  005AAA                     
 28056                           ;uart_drv.c: 522: {
 28057                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 28058  005AAA  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28059  005AAE  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28060  005AB2  50DF               	movf	indf2,w,c
 28061  005AB4  0100               	movlb	0	; () banked
 28062  005AB6  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 28063  005AB8  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28064  005ABA  EC1B  F030         	call	_UartWriteByte
 28065                           
 28066                           ;uart_drv.c: 526: StringToWrite++;
 28067  005ABE  0100               	movlb	0	; () banked
 28068  005AC0  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 28069  005AC2  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 28070  005AC4                     
 28071                           ; BSR set to: 0
 28072                           
 28073                           ; BSR set to: 0
 28074  005AC4  0100               	movlb	0	; () banked
 28075  005AC6  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28076  005AC8  EC2B  F02B         	call	_UartTxBufferStatus
 28077  005ACC  06E8               	decf	wreg,f,c
 28078  005ACE  B4D8               	btfsc	status,2,c
 28079  005AD0  D7F9               	goto	l709
 28080  005AD2                     u11520:
 28081  005AD2  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28082  005AD6  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28083  005ADA  50DF               	movf	indf2,w,c
 28084  005ADC  B4D8               	btfsc	status,2,c
 28085  005ADE  0012               	return	
 28086  005AE0  D7E4               	goto	l707
 28087  005AE2                     __end_of_Uart_WriteString:
 28088                           	opt stack 0
 28089                           tosu	equ	0xFFF
 28090                           tosh	equ	0xFFE
 28091                           tosl	equ	0xFFD
 28092                           pclath	equ	0xFFA
 28093                           tblptru	equ	0xFF8
 28094                           tblptrh	equ	0xFF7
 28095                           tblptrl	equ	0xFF6
 28096                           tablat	equ	0xFF5
 28097                           prodh	equ	0xFF4
 28098                           prodl	equ	0xFF3
 28099                           intcon	equ	0xFF2
 28100                           intcon2	equ	0xFF1
 28101                           intcon3	equ	0xFF0
 28102                           indf0	equ	0xFEF
 28103                           postinc0	equ	0xFEE
 28104                           plusw0	equ	0xFEB
 28105                           fsr0h	equ	0xFEA
 28106                           fsr0l	equ	0xFE9
 28107                           wreg	equ	0xFE8
 28108                           indf1	equ	0xFE7
 28109                           postinc1	equ	0xFE6
 28110                           postdec1	equ	0xFE5
 28111                           plusw1	equ	0xFE3
 28112                           fsr1h	equ	0xFE2
 28113                           fsr1l	equ	0xFE1
 28114                           indf2	equ	0xFDF
 28115                           postinc2	equ	0xFDE
 28116                           postdec2	equ	0xFDD
 28117                           plusw2	equ	0xFDB
 28118                           fsr2h	equ	0xFDA
 28119                           fsr2l	equ	0xFD9
 28120                           status	equ	0xFD8
 28121                           
 28122 ;; *************** function _Uart_WriteConstString *****************
 28123 ;; Defined at:
 28124 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28125 ;; Parameters:    Size  Location     Type
 28126 ;;  Module          1    wreg     unsigned char 
 28127 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 28128 ;;		 -> STR_30(12), STR_29(19), STR_20(14), STR_19(14), 
 28129 ;;		 -> STR_18(13), STR_17(13), STR_16(17), STR_14(21), 
 28130 ;;		 -> STR_13(14), STR_12(13), STR_11(14), STR_10(14), 
 28131 ;;		 -> STR_8(31), STR_7(5), STR_6(5), STR_4(12), 
 28132 ;;		 -> STR_3(7), STR_2(14), STR_1(5), 
 28133 ;; Auto vars:     Size  Location     Type
 28134 ;;  Module          1   34[BANK0 ] unsigned char 
 28135 ;; Return value:  Size  Location     Type
 28136 ;;                  1    wreg      void 
 28137 ;; Registers used:
 28138 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28139 ;; Tracked objects:
 28140 ;;		On entry : 0/0
 28141 ;;		On exit  : 0/0
 28142 ;;		Unchanged: 0/0
 28143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28147 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28148 ;;Total ram usage:        3 bytes
 28149 ;; Hardware stack levels used:    1
 28150 ;; Hardware stack levels required when called:   12
 28151 ;; This function calls:
 28152 ;;		_UartTxBufferStatus
 28153 ;;		_UartWriteByte
 28154 ;; This function is called by:
 28155 ;;		_CheckModem
 28156 ;;		_ConfigureModem
 28157 ;;		_GetSmsSm
 28158 ;;		_Mdm_HangPhoneCall
 28159 ;;		_InitGprsNetwork
 28160 ;;		_HttpGetMethod
 28161 ;;		_initGprsModem
 28162 ;;		_Mdm_GetPhoneCall
 28163 ;;		_MdmHttp_SetSsl
 28164 ;; This function uses a non-reentrant model
 28165 ;;
 28166                           
 28167                           	psect	text125
 28168  005922                     __ptext125:
 28169                           	opt stack 0
 28170  005922                     _Uart_WriteConstString:
 28171                           	opt stack 14
 28172                           
 28173                           ;incstack = 0
 28174                           ;Uart_WriteConstString@Module stored from wreg
 28175  005922  0100               	movlb	0	; () banked
 28176  005924  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 28177                           
 28178                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 28179  005926  D015               	goto	u12350
 28180  005928                     
 28181                           ;uart_drv.c: 500: {
 28182                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 28183  005928  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28184  00592C  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28185  005930                     	if	0	;tblptru may be non-zero
 28186  005930                     	endif
 28187  005930                     	if	0	;tblptru may be non-zero
 28188  005930                     	endif
 28189  005930  0008               	tblrd		*
 28190  005932  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 28191  005936  0100               	movlb	0	; () banked
 28192  005938  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28193  00593A  EC1B  F030         	call	_UartWriteByte
 28194                           
 28195                           ;uart_drv.c: 504: ConstStringToWrite++;
 28196  00593E  0100               	movlb	0	; () banked
 28197  005940  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 28198  005942  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 28199  005944                     
 28200                           ; BSR set to: 0
 28201                           
 28202                           ; BSR set to: 0
 28203  005944  0100               	movlb	0	; () banked
 28204  005946  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28205  005948  EC2B  F02B         	call	_UartTxBufferStatus
 28206  00594C  06E8               	decf	wreg,f,c
 28207  00594E  B4D8               	btfsc	status,2,c
 28208  005950  D7F9               	goto	l700
 28209  005952                     u12350:
 28210  005952  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28211  005956  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28212  00595A                     	if	0	;tblptru may be non-zero
 28213  00595A                     	endif
 28214  00595A                     	if	0	;tblptru may be non-zero
 28215  00595A                     	endif
 28216  00595A  0008               	tblrd		*
 28217  00595C  50F5               	movf	tablat,w,c
 28218  00595E  0900               	iorlw	0
 28219  005960  B4D8               	btfsc	status,2,c
 28220  005962  0012               	return	
 28221  005964  D7E1               	goto	l698
 28222  005966                     __end_of_Uart_WriteConstString:
 28223                           	opt stack 0
 28224                           tosu	equ	0xFFF
 28225                           tosh	equ	0xFFE
 28226                           tosl	equ	0xFFD
 28227                           pclath	equ	0xFFA
 28228                           tblptru	equ	0xFF8
 28229                           tblptrh	equ	0xFF7
 28230                           tblptrl	equ	0xFF6
 28231                           tablat	equ	0xFF5
 28232                           prodh	equ	0xFF4
 28233                           prodl	equ	0xFF3
 28234                           intcon	equ	0xFF2
 28235                           intcon2	equ	0xFF1
 28236                           intcon3	equ	0xFF0
 28237                           indf0	equ	0xFEF
 28238                           postinc0	equ	0xFEE
 28239                           plusw0	equ	0xFEB
 28240                           fsr0h	equ	0xFEA
 28241                           fsr0l	equ	0xFE9
 28242                           wreg	equ	0xFE8
 28243                           indf1	equ	0xFE7
 28244                           postinc1	equ	0xFE6
 28245                           postdec1	equ	0xFE5
 28246                           plusw1	equ	0xFE3
 28247                           fsr1h	equ	0xFE2
 28248                           fsr1l	equ	0xFE1
 28249                           indf2	equ	0xFDF
 28250                           postinc2	equ	0xFDE
 28251                           postdec2	equ	0xFDD
 28252                           plusw2	equ	0xFDB
 28253                           fsr2h	equ	0xFDA
 28254                           fsr2l	equ	0xFD9
 28255                           status	equ	0xFD8
 28256                           
 28257 ;; *************** function _UartWriteByte *****************
 28258 ;; Defined at:
 28259 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28260 ;; Parameters:    Size  Location     Type
 28261 ;;  Module          1    wreg     unsigned char 
 28262 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 28263 ;; Auto vars:     Size  Location     Type
 28264 ;;  Module          1   30[BANK0 ] unsigned char 
 28265 ;; Return value:  Size  Location     Type
 28266 ;;                  1    wreg      void 
 28267 ;; Registers used:
 28268 ;;		wreg, status,2, status,0
 28269 ;; Tracked objects:
 28270 ;;		On entry : 0/0
 28271 ;;		On exit  : 0/0
 28272 ;;		Unchanged: 0/0
 28273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28274 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28277 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28278 ;;Total ram usage:        2 bytes
 28279 ;; Hardware stack levels used:    1
 28280 ;; Hardware stack levels required when called:   11
 28281 ;; This function calls:
 28282 ;;		Nothing
 28283 ;; This function is called by:
 28284 ;;		_Uart_WriteConstString
 28285 ;;		_Uart_WriteString
 28286 ;;		_Uart_WriteStringLen
 28287 ;; This function uses a non-reentrant model
 28288 ;;
 28289                           
 28290                           	psect	text126
 28291  006036                     __ptext126:
 28292                           	opt stack 0
 28293  006036                     _UartWriteByte:
 28294                           	opt stack 14
 28295                           
 28296                           ;incstack = 0
 28297                           ;UartWriteByte@Module stored from wreg
 28298  006036  0100               	movlb	0	; () banked
 28299  006038  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 28300                           
 28301                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 28302  00603A  0100               	movlb	0	; () banked
 28303  00603C  057E               	decf	UartWriteByte@Module& (0+255),w,b
 28304  00603E  A4D8               	btfss	status,2,c
 28305  006040  D003               	goto	l639
 28306                           
 28307                           ; BSR set to: 0
 28308                           ;uart_drv.c: 176: {
 28309                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 28310  006042  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 28311                           
 28312                           ;uart_drv.c: 179: }
 28313  006046  0012               	return	
 28314  006048                     l639:
 28315                           
 28316                           ; BSR set to: 0
 28317                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 28318                           
 28319                           ; BSR set to: 0
 28320  006048  0E02               	movlw	2
 28321  00604A  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 28322  00604C  A4D8               	btfss	status,2,c
 28323  00604E  0012               	return	
 28324                           
 28325                           ; BSR set to: 0
 28326                           ;uart_drv.c: 181: {
 28327                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 28328  006050  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 28329                           
 28330                           ; BSR set to: 0
 28331  006054  0012               	return	
 28332  006056                     __end_of_UartWriteByte:
 28333                           	opt stack 0
 28334                           tosu	equ	0xFFF
 28335                           tosh	equ	0xFFE
 28336                           tosl	equ	0xFFD
 28337                           pclath	equ	0xFFA
 28338                           tblptru	equ	0xFF8
 28339                           tblptrh	equ	0xFF7
 28340                           tblptrl	equ	0xFF6
 28341                           tablat	equ	0xFF5
 28342                           prodh	equ	0xFF4
 28343                           prodl	equ	0xFF3
 28344                           intcon	equ	0xFF2
 28345                           intcon2	equ	0xFF1
 28346                           intcon3	equ	0xFF0
 28347                           indf0	equ	0xFEF
 28348                           postinc0	equ	0xFEE
 28349                           plusw0	equ	0xFEB
 28350                           fsr0h	equ	0xFEA
 28351                           fsr0l	equ	0xFE9
 28352                           wreg	equ	0xFE8
 28353                           indf1	equ	0xFE7
 28354                           postinc1	equ	0xFE6
 28355                           postdec1	equ	0xFE5
 28356                           plusw1	equ	0xFE3
 28357                           fsr1h	equ	0xFE2
 28358                           fsr1l	equ	0xFE1
 28359                           indf2	equ	0xFDF
 28360                           postinc2	equ	0xFDE
 28361                           postdec2	equ	0xFDD
 28362                           plusw2	equ	0xFDB
 28363                           fsr2h	equ	0xFDA
 28364                           fsr2l	equ	0xFD9
 28365                           status	equ	0xFD8
 28366                           
 28367 ;; *************** function _UartTxBufferStatus *****************
 28368 ;; Defined at:
 28369 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28370 ;; Parameters:    Size  Location     Type
 28371 ;;  Module          1    wreg     unsigned char 
 28372 ;; Auto vars:     Size  Location     Type
 28373 ;;  Module          1   30[BANK0 ] unsigned char 
 28374 ;;  TxBufferStat    1   31[BANK0 ] enum E9033
 28375 ;; Return value:  Size  Location     Type
 28376 ;;                  1    wreg      enum E9033
 28377 ;; Registers used:
 28378 ;;		wreg, status,2, status,0
 28379 ;; Tracked objects:
 28380 ;;		On entry : 0/0
 28381 ;;		On exit  : 0/0
 28382 ;;		Unchanged: 0/0
 28383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28385 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28387 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28388 ;;Total ram usage:        3 bytes
 28389 ;; Hardware stack levels used:    1
 28390 ;; Hardware stack levels required when called:   11
 28391 ;; This function calls:
 28392 ;;		Nothing
 28393 ;; This function is called by:
 28394 ;;		_Uart_WriteConstString
 28395 ;;		_Uart_WriteString
 28396 ;;		_Uart_WriteStringLen
 28397 ;; This function uses a non-reentrant model
 28398 ;;
 28399                           
 28400                           	psect	text127
 28401  005656                     __ptext127:
 28402                           	opt stack 0
 28403  005656                     _UartTxBufferStatus:
 28404                           	opt stack 14
 28405                           
 28406                           ; BSR set to: 0
 28407                           ;incstack = 0
 28408                           ;UartTxBufferStatus@Module stored from wreg
 28409  005656  0100               	movlb	0	; () banked
 28410  005658  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 28411                           
 28412                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 28413  00565A  0E00               	movlw	0
 28414  00565C  0100               	movlb	0	; () banked
 28415  00565E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28416                           
 28417                           ; BSR set to: 0
 28418                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 28419  005660  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 28420  005662  A4D8               	btfss	status,2,c
 28421  005664  D00B               	goto	l651
 28422                           
 28423                           ; BSR set to: 0
 28424                           ;uart_drv.c: 228: {
 28425                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28426  005666  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28427  00566A  90D8               	bcf	status,0,c
 28428  00566C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28429  00566E  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 28430  005670  D002               	goto	l652
 28431  005672                     u10980:
 28432                           
 28433                           ; BSR set to: 0
 28434                           ;uart_drv.c: 231: {
 28435                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 28436  005672  0E01               	movlw	1
 28437  005674  D014               	goto	L47
 28438  005676                     l652:
 28439                           
 28440                           ; BSR set to: 0
 28441                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28442                           
 28443                           ; BSR set to: 0
 28444  005676  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28445  00567A  D00C               	goto	L76
 28446  00567C                     l651:
 28447                           
 28448                           ; BSR set to: 0
 28449                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 28450                           
 28451                           ; BSR set to: 0
 28452  00567C  0E02               	movlw	2
 28453  00567E  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 28454  005680  A4D8               	btfss	status,2,c
 28455  005682  D00E               	goto	l660
 28456                           
 28457                           ; BSR set to: 0
 28458                           ;uart_drv.c: 244: {
 28459                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28460  005684  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28461  005688  90D8               	bcf	status,0,c
 28462  00568A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28463  00568C  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28464  00568E  D7F1               	goto	u10980
 28465                           
 28466                           ; BSR set to: 0
 28467                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28468                           
 28469                           ; BSR set to: 0
 28470                           
 28471                           ;uart_drv.c: 249: }
 28472                           
 28473                           ; BSR set to: 0
 28474                           ;uart_drv.c: 247: {
 28475                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 28476  005690  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28477  005694                     L76:
 28478  005694  90D8               	bcf	status,0,c
 28479  005696  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28480  005698  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28481  00569A  D002               	goto	l660
 28482                           
 28483                           ; BSR set to: 0
 28484                           ;uart_drv.c: 251: {
 28485                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 28486  00569C  0E02               	movlw	2
 28487  00569E                     L47:
 28488  00569E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28489  0056A0                     l660:
 28490                           
 28491                           ; BSR set to: 0
 28492                           ;uart_drv.c: 257: }
 28493                           ;uart_drv.c: 258: }
 28494                           ;uart_drv.c: 260: return TxBufferStatus;
 28495                           
 28496                           ; BSR set to: 0
 28497                           
 28498                           ; BSR set to: 0
 28499                           
 28500                           ; BSR set to: 0
 28501                           
 28502                           ; BSR set to: 0
 28503                           
 28504                           ;uart_drv.c: 254: else
 28505                           ;uart_drv.c: 255: {
 28506                           
 28507                           ; BSR set to: 0
 28508  0056A0  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 28509  0056A2  0012               	return	
 28510  0056A4                     __end_of_UartTxBufferStatus:
 28511                           	opt stack 0
 28512                           tosu	equ	0xFFF
 28513                           tosh	equ	0xFFE
 28514                           tosl	equ	0xFFD
 28515                           pclath	equ	0xFFA
 28516                           tblptru	equ	0xFF8
 28517                           tblptrh	equ	0xFF7
 28518                           tblptrl	equ	0xFF6
 28519                           tablat	equ	0xFF5
 28520                           prodh	equ	0xFF4
 28521                           prodl	equ	0xFF3
 28522                           intcon	equ	0xFF2
 28523                           intcon2	equ	0xFF1
 28524                           intcon3	equ	0xFF0
 28525                           indf0	equ	0xFEF
 28526                           postinc0	equ	0xFEE
 28527                           plusw0	equ	0xFEB
 28528                           fsr0h	equ	0xFEA
 28529                           fsr0l	equ	0xFE9
 28530                           wreg	equ	0xFE8
 28531                           indf1	equ	0xFE7
 28532                           postinc1	equ	0xFE6
 28533                           postdec1	equ	0xFE5
 28534                           plusw1	equ	0xFE3
 28535                           fsr1h	equ	0xFE2
 28536                           fsr1l	equ	0xFE1
 28537                           indf2	equ	0xFDF
 28538                           postinc2	equ	0xFDE
 28539                           postdec2	equ	0xFDD
 28540                           plusw2	equ	0xFDB
 28541                           fsr2h	equ	0xFDA
 28542                           fsr2l	equ	0xFD9
 28543                           status	equ	0xFD8
 28544                           
 28545 ;; *************** function _StringCopy *****************
 28546 ;; Defined at:
 28547 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28548 ;; Parameters:    Size  Location     Type
 28549 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 28550 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 28551 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), RxBuffer(400), 
 28552 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 28553 ;;		 -> EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), 
 28554 ;;		 -> PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), callerNumber(14), 
 28555 ;;  Len             2   33[BANK0 ] unsigned short 
 28556 ;; Auto vars:     Size  Location     Type
 28557 ;;  Index           2   37[BANK0 ] unsigned short 
 28558 ;; Return value:  Size  Location     Type
 28559 ;;                  1    wreg      void 
 28560 ;; Registers used:
 28561 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28562 ;; Tracked objects:
 28563 ;;		On entry : 0/0
 28564 ;;		On exit  : 0/0
 28565 ;;		Unchanged: 0/0
 28566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28567 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28568 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28570 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28571 ;;Total ram usage:       10 bytes
 28572 ;; Hardware stack levels used:    1
 28573 ;; Hardware stack levels required when called:   11
 28574 ;; This function calls:
 28575 ;;		Nothing
 28576 ;; This function is called by:
 28577 ;;		_ModemEvtParser
 28578 ;;		_GetSmsSm
 28579 ;;		_SendSmsSm
 28580 ;;		_InitGprsNetwork
 28581 ;;		_HttpGetMethod
 28582 ;;		_Mdm_GetSmsData
 28583 ;;		_Mdm_SendSmsData
 28584 ;;		_Eeprom_Write
 28585 ;; This function uses a non-reentrant model
 28586 ;;
 28587                           
 28588                           	psect	text128
 28589  005096                     __ptext128:
 28590                           	opt stack 0
 28591  005096                     _StringCopy:
 28592                           	opt stack 15
 28593                           
 28594                           ;sf.c: 106: UINT16 Index = 0;
 28595                           
 28596                           ; BSR set to: 0
 28597                           ;incstack = 0
 28598  005096  0E00               	movlw	0
 28599  005098  0100               	movlb	0	; () banked
 28600  00509A  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28601  00509C  0E00               	movlw	0
 28602  00509E  6F85               	movwf	StringCopy@Index& (0+255),b
 28603                           
 28604                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 28605  0050A0  0E00               	movlw	0
 28606  0050A2  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28607  0050A4  0E00               	movlw	0
 28608  0050A6  6F85               	movwf	StringCopy@Index& (0+255),b
 28609  0050A8  D020               	goto	l2218
 28610  0050AA                     
 28611                           ; BSR set to: 0
 28612                           ;sf.c: 110: {
 28613                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 28614                           
 28615                           ; BSR set to: 0
 28616  0050AA  5185               	movf	StringCopy@Index& (0+255),w,b
 28617  0050AC  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 28618  0050AE  6F83               	movwf	??_StringCopy& (0+255),b
 28619  0050B0  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28620  0050B2  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 28621  0050B4  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 28622  0050B6  C083  FFF6         	movff	??_StringCopy,tblptrl
 28623  0050BA  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 28624  0050BE  6AF8               	clrf	tblptru,c
 28625  0050C0  5185               	movf	StringCopy@Index& (0+255),w,b
 28626  0050C2  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 28627  0050C4  6ED9               	movwf	fsr2l,c
 28628  0050C6  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28629  0050C8  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 28630  0050CA  6EDA               	movwf	fsr2h,c
 28631  0050CC  0E0E               	movlw	(high __ramtop+-1)
 28632  0050CE  64F7               	cpfsgt	tblptrh,c
 28633  0050D0  D003               	bra	u12437
 28634  0050D2  0008               	tblrd		*
 28635  0050D4  50F5               	movf	tablat,w,c
 28636  0050D6  D005               	bra	u12430
 28637  0050D8                     u12437:
 28638  0050D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 28639  0050DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 28640  0050E0  50EF               	movf	indf0,w,c
 28641  0050E2                     u12430:
 28642  0050E2  6EDF               	movwf	indf2,c
 28643  0050E4  0100               	movlb	0	; () banked
 28644  0050E6  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 28645  0050E8  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 28646  0050EA                     l2218:
 28647                           
 28648                           ; BSR set to: 0
 28649                           
 28650                           ; BSR set to: 0
 28651  0050EA  5181               	movf	StringCopy@Len& (0+255),w,b
 28652  0050EC  5D85               	subwf	StringCopy@Index& (0+255),w,b
 28653  0050EE  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 28654  0050F0  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 28655  0050F2  B0D8               	btfsc	status,0,c
 28656  0050F4  0012               	return	
 28657  0050F6  D7D9               	goto	l2219
 28658  0050F8                     __end_of_StringCopy:
 28659                           	opt stack 0
 28660                           tosu	equ	0xFFF
 28661                           tosh	equ	0xFFE
 28662                           tosl	equ	0xFFD
 28663                           pclath	equ	0xFFA
 28664                           tblptru	equ	0xFF8
 28665                           tblptrh	equ	0xFF7
 28666                           tblptrl	equ	0xFF6
 28667                           tablat	equ	0xFF5
 28668                           prodh	equ	0xFF4
 28669                           prodl	equ	0xFF3
 28670                           intcon	equ	0xFF2
 28671                           intcon2	equ	0xFF1
 28672                           intcon3	equ	0xFF0
 28673                           indf0	equ	0xFEF
 28674                           postinc0	equ	0xFEE
 28675                           plusw0	equ	0xFEB
 28676                           fsr0h	equ	0xFEA
 28677                           fsr0l	equ	0xFE9
 28678                           wreg	equ	0xFE8
 28679                           indf1	equ	0xFE7
 28680                           postinc1	equ	0xFE6
 28681                           postdec1	equ	0xFE5
 28682                           plusw1	equ	0xFE3
 28683                           fsr1h	equ	0xFE2
 28684                           fsr1l	equ	0xFE1
 28685                           indf2	equ	0xFDF
 28686                           postinc2	equ	0xFDE
 28687                           postdec2	equ	0xFDD
 28688                           plusw2	equ	0xFDB
 28689                           fsr2h	equ	0xFDA
 28690                           fsr2l	equ	0xFD9
 28691                           status	equ	0xFD8
 28692                           
 28693 ;; *************** function _OsTmr_StartTimer *****************
 28694 ;; Defined at:
 28695 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28696 ;; Parameters:    Size  Location     Type
 28697 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 28698 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28699 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28700 ;;  Timeout         4   35[BANK0 ] unsigned long 
 28701 ;; Auto vars:     Size  Location     Type
 28702 ;;		None
 28703 ;; Return value:  Size  Location     Type
 28704 ;;                  1    wreg      void 
 28705 ;; Registers used:
 28706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28707 ;; Tracked objects:
 28708 ;;		On entry : 0/0
 28709 ;;		On exit  : 0/0
 28710 ;;		Unchanged: 0/0
 28711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28712 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28715 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28716 ;;Total ram usage:        6 bytes
 28717 ;; Hardware stack levels used:    1
 28718 ;; Hardware stack levels required when called:   12
 28719 ;; This function calls:
 28720 ;;		_GetOsTickCounter
 28721 ;; This function is called by:
 28722 ;;		_OsTmr_Wait
 28723 ;;		_CheckModem
 28724 ;;		_SendSmsSm
 28725 ;;		_InitGprsNetwork
 28726 ;;		_HttpGetMethod
 28727 ;;		_I2cSlv_QueryI2cData
 28728 ;;		_Term_MainSm
 28729 ;; This function uses a non-reentrant model
 28730 ;;
 28731                           
 28732                           	psect	text129
 28733  005156                     __ptext129:
 28734                           	opt stack 0
 28735  005156                     _OsTmr_StartTimer:
 28736                           	opt stack 12
 28737                           
 28738                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 28739                           
 28740                           ; BSR set to: 0
 28741                           ;incstack = 0
 28742  005156  0100               	movlb	0	; () banked
 28743  005158  EE20 F001          	lfsr	2,1
 28744  00515C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28745  00515E  26D9               	addwf	fsr2l,f,c
 28746  005160  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28747  005162  22DA               	addwfc	fsr2h,f,c
 28748  005164  0E00               	movlw	0
 28749  005166  6EDF               	movwf	indf2,c
 28750                           
 28751                           ; BSR set to: 0
 28752                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 28753  005168  ECF7  F030         	call	_GetOsTickCounter	;wreg free
 28754  00516C  0100               	movlb	0	; () banked
 28755  00516E  EE20 F002          	lfsr	2,2
 28756  005172  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28757  005174  26D9               	addwf	fsr2l,f,c
 28758  005176  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28759  005178  22DA               	addwfc	fsr2h,f,c
 28760  00517A  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 28761  00517E  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 28762  005182  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 28763  005186  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 28764                           
 28765                           ; BSR set to: 0
 28766                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 28767  00518A  EE20 F006          	lfsr	2,6
 28768  00518E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28769  005190  26D9               	addwf	fsr2l,f,c
 28770  005192  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28771  005194  22DA               	addwfc	fsr2h,f,c
 28772  005196  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 28773  00519A  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 28774  00519E  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 28775  0051A2  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 28776                           
 28777                           ; BSR set to: 0
 28778                           ;os_timers.c: 127: Timer->Enabled = 1u;
 28779  0051A6  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 28780  0051AA  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 28781  0051AE  0E01               	movlw	1
 28782  0051B0  6EDF               	movwf	indf2,c
 28783                           
 28784                           ; BSR set to: 0
 28785  0051B2  0012               	return		;funcret
 28786  0051B4                     __end_of_OsTmr_StartTimer:
 28787                           	opt stack 0
 28788                           tosu	equ	0xFFF
 28789                           tosh	equ	0xFFE
 28790                           tosl	equ	0xFFD
 28791                           pclath	equ	0xFFA
 28792                           tblptru	equ	0xFF8
 28793                           tblptrh	equ	0xFF7
 28794                           tblptrl	equ	0xFF6
 28795                           tablat	equ	0xFF5
 28796                           prodh	equ	0xFF4
 28797                           prodl	equ	0xFF3
 28798                           intcon	equ	0xFF2
 28799                           intcon2	equ	0xFF1
 28800                           intcon3	equ	0xFF0
 28801                           indf0	equ	0xFEF
 28802                           postinc0	equ	0xFEE
 28803                           plusw0	equ	0xFEB
 28804                           fsr0h	equ	0xFEA
 28805                           fsr0l	equ	0xFE9
 28806                           wreg	equ	0xFE8
 28807                           indf1	equ	0xFE7
 28808                           postinc1	equ	0xFE6
 28809                           postdec1	equ	0xFE5
 28810                           plusw1	equ	0xFE3
 28811                           fsr1h	equ	0xFE2
 28812                           fsr1l	equ	0xFE1
 28813                           indf2	equ	0xFDF
 28814                           postinc2	equ	0xFDE
 28815                           postdec2	equ	0xFDD
 28816                           plusw2	equ	0xFDB
 28817                           fsr2h	equ	0xFDA
 28818                           fsr2l	equ	0xFD9
 28819                           status	equ	0xFD8
 28820                           
 28821 ;; *************** function _OsTmr_GetTimerStatus *****************
 28822 ;; Defined at:
 28823 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28824 ;; Parameters:    Size  Location     Type
 28825 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 28826 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28827 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28828 ;; Auto vars:     Size  Location     Type
 28829 ;;		None
 28830 ;; Return value:  Size  Location     Type
 28831 ;;                  1    wreg      enum E7740
 28832 ;; Registers used:
 28833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28834 ;; Tracked objects:
 28835 ;;		On entry : 0/0
 28836 ;;		On exit  : 0/0
 28837 ;;		Unchanged: 0/0
 28838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28841 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28842 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28843 ;;Total ram usage:        6 bytes
 28844 ;; Hardware stack levels used:    1
 28845 ;; Hardware stack levels required when called:   13
 28846 ;; This function calls:
 28847 ;;		_GetElapsedTime
 28848 ;; This function is called by:
 28849 ;;		_OsTmr_Wait
 28850 ;;		_CheckModem
 28851 ;;		_SendSmsSm
 28852 ;;		_InitGprsNetwork
 28853 ;;		_HttpGetMethod
 28854 ;;		_I2cSlv_QueryI2cData
 28855 ;;		_Term_MainSm
 28856 ;; This function uses a non-reentrant model
 28857 ;;
 28858                           
 28859                           	psect	text130
 28860  004A68                     __ptext130:
 28861                           	opt stack 0
 28862  004A68                     _OsTmr_GetTimerStatus:
 28863                           	opt stack 11
 28864                           
 28865                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 28866                           
 28867                           ; BSR set to: 0
 28868                           ;incstack = 0
 28869  004A68  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28870  004A6C  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28871  004A70  04DE               	decf	postinc2,w,c
 28872  004A72  A4D8               	btfss	status,2,c
 28873  004A74  D030               	goto	l864
 28874                           
 28875                           ;os_timers.c: 197: {
 28876                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 28877  004A76  0100               	movlb	0	; () banked
 28878  004A78  EE20 F006          	lfsr	2,6
 28879  004A7C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28880  004A7E  26D9               	addwf	fsr2l,f,c
 28881  004A80  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28882  004A82  22DA               	addwfc	fsr2h,f,c
 28883  004A84  EE10 F002          	lfsr	1,2
 28884  004A88  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28885  004A8A  26E1               	addwf	fsr1l,f,c
 28886  004A8C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28887  004A8E  22E2               	addwfc	fsr1h,f,c
 28888  004A90  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 28889  004A94  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 28890  004A98  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 28891  004A9C  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 28892  004AA0  EC91  F01E         	call	_GetElapsedTime	;wreg free
 28893  004AA4  50DE               	movf	postinc2,w,c
 28894  004AA6  0100               	movlb	0	; () banked
 28895  004AA8  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 28896  004AAA  50DE               	movf	postinc2,w,c
 28897  004AAC  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 28898  004AAE  50DE               	movf	postinc2,w,c
 28899  004AB0  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 28900  004AB2  50DE               	movf	postinc2,w,c
 28901  004AB4  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 28902  004AB6  A0D8               	btfss	status,0,c
 28903  004AB8  D017               	goto	l867
 28904                           
 28905                           ; BSR set to: 0
 28906                           ;os_timers.c: 200: {
 28907                           ;os_timers.c: 202: Timer->Enabled = 0u;
 28908  004ABA  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28909  004ABE  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28910  004AC2  0E00               	movlw	0
 28911  004AC4  6EDF               	movwf	indf2,c
 28912                           
 28913                           ; BSR set to: 0
 28914                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 28915  004AC6  EE20 F001          	lfsr	2,1
 28916  004ACA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28917  004ACC  26D9               	addwf	fsr2l,f,c
 28918  004ACE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28919  004AD0  22DA               	addwfc	fsr2h,f,c
 28920  004AD2  0E01               	movlw	1
 28921  004AD4  D008               	goto	L77
 28922  004AD6                     l864:
 28923                           
 28924                           ;os_timers.c: 211: else
 28925                           ;os_timers.c: 212: {
 28926                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 28927                           
 28928                           ; BSR set to: 0
 28929  004AD6  0100               	movlb	0	; () banked
 28930  004AD8  EE20 F001          	lfsr	2,1
 28931  004ADC  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28932  004ADE  26D9               	addwf	fsr2l,f,c
 28933  004AE0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28934  004AE2  22DA               	addwfc	fsr2h,f,c
 28935  004AE4  0E02               	movlw	2
 28936  004AE6                     L77:
 28937  004AE6  6EDF               	movwf	indf2,c
 28938  004AE8                     l867:
 28939                           
 28940                           ; BSR set to: 0
 28941                           ;os_timers.c: 215: }
 28942                           ;os_timers.c: 218: return Timer->Status;
 28943  004AE8  EE20 F001          	lfsr	2,1
 28944  004AEC  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28945  004AEE  26D9               	addwf	fsr2l,f,c
 28946  004AF0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28947  004AF2  22DA               	addwfc	fsr2h,f,c
 28948  004AF4  50DF               	movf	indf2,w,c
 28949  004AF6  0012               	return	
 28950  004AF8                     __end_of_OsTmr_GetTimerStatus:
 28951                           	opt stack 0
 28952                           tosu	equ	0xFFF
 28953                           tosh	equ	0xFFE
 28954                           tosl	equ	0xFFD
 28955                           pclath	equ	0xFFA
 28956                           tblptru	equ	0xFF8
 28957                           tblptrh	equ	0xFF7
 28958                           tblptrl	equ	0xFF6
 28959                           tablat	equ	0xFF5
 28960                           prodh	equ	0xFF4
 28961                           prodl	equ	0xFF3
 28962                           intcon	equ	0xFF2
 28963                           intcon2	equ	0xFF1
 28964                           intcon3	equ	0xFF0
 28965                           indf0	equ	0xFEF
 28966                           postinc0	equ	0xFEE
 28967                           plusw0	equ	0xFEB
 28968                           fsr0h	equ	0xFEA
 28969                           fsr0l	equ	0xFE9
 28970                           wreg	equ	0xFE8
 28971                           indf1	equ	0xFE7
 28972                           postinc1	equ	0xFE6
 28973                           postdec1	equ	0xFE5
 28974                           plusw1	equ	0xFE3
 28975                           fsr1h	equ	0xFE2
 28976                           fsr1l	equ	0xFE1
 28977                           indf2	equ	0xFDF
 28978                           postinc2	equ	0xFDE
 28979                           postdec2	equ	0xFDD
 28980                           plusw2	equ	0xFDB
 28981                           fsr2h	equ	0xFDA
 28982                           fsr2l	equ	0xFD9
 28983                           status	equ	0xFD8
 28984                           
 28985 ;; *************** function _GetElapsedTime *****************
 28986 ;; Defined at:
 28987 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28988 ;; Parameters:    Size  Location     Type
 28989 ;;  StartTime       4   33[BANK0 ] unsigned long 
 28990 ;; Auto vars:     Size  Location     Type
 28991 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 28992 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 28993 ;; Return value:  Size  Location     Type
 28994 ;;                  4   33[BANK0 ] unsigned long 
 28995 ;; Registers used:
 28996 ;;		wreg, status,2, status,0, cstack
 28997 ;; Tracked objects:
 28998 ;;		On entry : 0/0
 28999 ;;		On exit  : 0/0
 29000 ;;		Unchanged: 0/0
 29001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29003 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29004 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29005 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29006 ;;Total ram usage:       20 bytes
 29007 ;; Hardware stack levels used:    1
 29008 ;; Hardware stack levels required when called:   12
 29009 ;; This function calls:
 29010 ;;		_GetOsTickCounter
 29011 ;; This function is called by:
 29012 ;;		_OsTmr_GetTimerStatus
 29013 ;;		_OsTmr_GetRemainingTime
 29014 ;; This function uses a non-reentrant model
 29015 ;;
 29016                           
 29017                           	psect	text131
 29018  003D22                     __ptext131:
 29019                           	opt stack 0
 29020  003D22                     _GetElapsedTime:
 29021                           	opt stack 11
 29022                           
 29023                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 29024                           ;os_timers.c: 87: UINT32 TimeValue;
 29025                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 29026                           
 29027                           ; BSR set to: 0
 29028                           ;incstack = 0
 29029  003D22  ECF7  F030         	call	_GetOsTickCounter	;wreg free
 29030  003D26  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 29031  003D2A  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 29032  003D2E  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 29033  003D32  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 29034                           
 29035                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 29036  003D36  0100               	movlb	0	; () banked
 29037  003D38  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 29038  003D3A  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29039  003D3C  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 29040  003D3E  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29041  003D40  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 29042  003D42  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29043  003D44  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 29044  003D46  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29045  003D48  A0D8               	btfss	status,0,c
 29046  003D4A  D01D               	goto	l844
 29047                           
 29048                           ; BSR set to: 0
 29049                           ;os_timers.c: 94: {
 29050                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 29051  003D4C  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29052  003D50  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29053  003D54  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29054  003D58  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29055  003D5C  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29056  003D5E  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29057  003D60  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29058  003D62  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29059  003D64  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29060  003D66  0E00               	movlw	0
 29061  003D68  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29062  003D6A  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29063  003D6C  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29064  003D6E  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29065  003D70  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29066  003D72  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29067  003D74  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29068  003D76  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29069  003D78  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29070  003D7A  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29071  003D7C  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29072  003D7E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29073  003D80  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29074  003D82  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29075  003D84  D028               	goto	L48
 29076  003D86                     l844:
 29077                           
 29078                           ; BSR set to: 0
 29079                           ;os_timers.c: 97: else
 29080                           ;os_timers.c: 98: {
 29081                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 29082                           
 29083                           ; BSR set to: 0
 29084  003D86  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29085  003D8A  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29086  003D8E  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29087  003D92  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29088  003D96  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29089  003D98  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29090  003D9A  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29091  003D9C  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29092  003D9E  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29093  003DA0  0E00               	movlw	0
 29094  003DA2  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29095  003DA4  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29096  003DA6  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29097  003DA8  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29098  003DAA  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29099  003DAC  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 29100  003DAE  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29101  003DB0  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29102  003DB2  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 29103  003DB4  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29104  003DB6  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29105  003DB8  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 29106  003DBA  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29107  003DBC  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29108  003DBE  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 29109  003DC0  0EFF               	movlw	255
 29110  003DC2  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 29111  003DC4  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29112  003DC6  0EFF               	movlw	255
 29113  003DC8  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 29114  003DCA  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29115  003DCC  0EFF               	movlw	255
 29116  003DCE  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 29117  003DD0  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29118  003DD2  0EFF               	movlw	255
 29119  003DD4  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 29120  003DD6                     L48:
 29121  003DD6  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 29122                           
 29123                           ; BSR set to: 0
 29124                           ;os_timers.c: 100: }
 29125                           ;os_timers.c: 102: return TimeValue;
 29126                           
 29127                           ; BSR set to: 0
 29128  003DD8  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 29129  003DDC  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 29130  003DE0  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 29131  003DE4  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 29132  003DE8  0012               	return	
 29133  003DEA                     __end_of_GetElapsedTime:
 29134                           	opt stack 0
 29135                           tosu	equ	0xFFF
 29136                           tosh	equ	0xFFE
 29137                           tosl	equ	0xFFD
 29138                           pclath	equ	0xFFA
 29139                           tblptru	equ	0xFF8
 29140                           tblptrh	equ	0xFF7
 29141                           tblptrl	equ	0xFF6
 29142                           tablat	equ	0xFF5
 29143                           prodh	equ	0xFF4
 29144                           prodl	equ	0xFF3
 29145                           intcon	equ	0xFF2
 29146                           intcon2	equ	0xFF1
 29147                           intcon3	equ	0xFF0
 29148                           indf0	equ	0xFEF
 29149                           postinc0	equ	0xFEE
 29150                           plusw0	equ	0xFEB
 29151                           fsr0h	equ	0xFEA
 29152                           fsr0l	equ	0xFE9
 29153                           wreg	equ	0xFE8
 29154                           indf1	equ	0xFE7
 29155                           postinc1	equ	0xFE6
 29156                           postdec1	equ	0xFE5
 29157                           plusw1	equ	0xFE3
 29158                           fsr1h	equ	0xFE2
 29159                           fsr1l	equ	0xFE1
 29160                           indf2	equ	0xFDF
 29161                           postinc2	equ	0xFDE
 29162                           postdec2	equ	0xFDD
 29163                           plusw2	equ	0xFDB
 29164                           fsr2h	equ	0xFDA
 29165                           fsr2l	equ	0xFD9
 29166                           status	equ	0xFD8
 29167                           
 29168 ;; *************** function _GetOsTickCounter *****************
 29169 ;; Defined at:
 29170 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29171 ;; Parameters:    Size  Location     Type
 29172 ;;		None
 29173 ;; Auto vars:     Size  Location     Type
 29174 ;;		None
 29175 ;; Return value:  Size  Location     Type
 29176 ;;                  4   29[BANK0 ] unsigned long 
 29177 ;; Registers used:
 29178 ;;		None
 29179 ;; Tracked objects:
 29180 ;;		On entry : 0/0
 29181 ;;		On exit  : 0/0
 29182 ;;		Unchanged: 0/0
 29183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29187 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29188 ;;Total ram usage:        4 bytes
 29189 ;; Hardware stack levels used:    1
 29190 ;; Hardware stack levels required when called:   11
 29191 ;; This function calls:
 29192 ;;		Nothing
 29193 ;; This function is called by:
 29194 ;;		_GetElapsedTime
 29195 ;;		_OsTmr_StartTimer
 29196 ;;		_OsTmr_GetElapsedTime
 29197 ;; This function uses a non-reentrant model
 29198 ;;
 29199                           
 29200                           	psect	text132
 29201  0061EE                     __ptext132:
 29202                           	opt stack 0
 29203  0061EE                     _GetOsTickCounter:
 29204                           	opt stack 12
 29205                           
 29206                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 29207                           
 29208                           ; BSR set to: 0
 29209                           ;incstack = 0
 29210  0061EE  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 29211  0061F2  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 29212  0061F6  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 29213  0061FA  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 29214  0061FE  0012               	return		;funcret
 29215  006200                     __end_of_GetOsTickCounter:
 29216                           	opt stack 0
 29217                           tosu	equ	0xFFF
 29218                           tosh	equ	0xFFE
 29219                           tosl	equ	0xFFD
 29220                           pclath	equ	0xFFA
 29221                           tblptru	equ	0xFF8
 29222                           tblptrh	equ	0xFF7
 29223                           tblptrl	equ	0xFF6
 29224                           tablat	equ	0xFF5
 29225                           prodh	equ	0xFF4
 29226                           prodl	equ	0xFF3
 29227                           intcon	equ	0xFF2
 29228                           intcon2	equ	0xFF1
 29229                           intcon3	equ	0xFF0
 29230                           indf0	equ	0xFEF
 29231                           postinc0	equ	0xFEE
 29232                           plusw0	equ	0xFEB
 29233                           fsr0h	equ	0xFEA
 29234                           fsr0l	equ	0xFE9
 29235                           wreg	equ	0xFE8
 29236                           indf1	equ	0xFE7
 29237                           postinc1	equ	0xFE6
 29238                           postdec1	equ	0xFE5
 29239                           plusw1	equ	0xFE3
 29240                           fsr1h	equ	0xFE2
 29241                           fsr1l	equ	0xFE1
 29242                           indf2	equ	0xFDF
 29243                           postinc2	equ	0xFDE
 29244                           postdec2	equ	0xFDD
 29245                           plusw2	equ	0xFDB
 29246                           fsr2h	equ	0xFDA
 29247                           fsr2l	equ	0xFD9
 29248                           status	equ	0xFD8
 29249                           
 29250 ;; *************** function _ClearBuffer *****************
 29251 ;; Defined at:
 29252 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 29253 ;; Parameters:    Size  Location     Type
 29254 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 29255 ;;		 -> MyApp_Task@phone(14), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessa
      +ge(50), 
 29256 ;;		 -> Mdm_SmsRx(102), callerNumber(14), RxBuffer(400), 
 29257 ;;  Len             2   31[BANK0 ] unsigned short 
 29258 ;; Auto vars:     Size  Location     Type
 29259 ;;  Index           2   33[BANK0 ] unsigned short 
 29260 ;; Return value:  Size  Location     Type
 29261 ;;                  1    wreg      void 
 29262 ;; Registers used:
 29263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29264 ;; Tracked objects:
 29265 ;;		On entry : 0/0
 29266 ;;		On exit  : 0/0
 29267 ;;		Unchanged: 0/0
 29268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29272 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29273 ;;Total ram usage:        6 bytes
 29274 ;; Hardware stack levels used:    1
 29275 ;; Hardware stack levels required when called:   11
 29276 ;; This function calls:
 29277 ;;		Nothing
 29278 ;; This function is called by:
 29279 ;;		_GetSmsSm
 29280 ;;		_GetCallerNumber
 29281 ;;		_InitGprsNetwork
 29282 ;;		_HttpGetMethod
 29283 ;;		_MyApp_Task
 29284 ;;		_GsmGprsTerminal
 29285 ;; This function uses a non-reentrant model
 29286 ;;
 29287                           
 29288                           	psect	text133
 29289  005C02                     __ptext133:
 29290                           	opt stack 0
 29291  005C02                     _ClearBuffer:
 29292                           	opt stack 15
 29293                           
 29294                           ;sf.c: 126: UINT16 Index = 0;
 29295                           
 29296                           ;incstack = 0
 29297  005C02  0E00               	movlw	0
 29298  005C04  0100               	movlb	0	; () banked
 29299  005C06  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29300  005C08  0E00               	movlw	0
 29301  005C0A  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29302                           
 29303                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 29304  005C0C  0E00               	movlw	0
 29305  005C0E  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29306  005C10  0E00               	movlw	0
 29307  005C12  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29308  005C14  D00A               	goto	l2224
 29309  005C16                     
 29310                           ; BSR set to: 0
 29311                           ;sf.c: 130: {
 29312                           ;sf.c: 131: *(Buffer + Index) = 0;
 29313                           
 29314                           ; BSR set to: 0
 29315  005C16  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29316  005C18  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 29317  005C1A  6ED9               	movwf	fsr2l,c
 29318  005C1C  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29319  005C1E  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 29320  005C20  6EDA               	movwf	fsr2h,c
 29321  005C22  0E00               	movlw	0
 29322  005C24  6EDF               	movwf	indf2,c
 29323                           
 29324                           ; BSR set to: 0
 29325  005C26  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 29326  005C28  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 29327  005C2A                     l2224:
 29328                           
 29329                           ; BSR set to: 0
 29330                           
 29331                           ; BSR set to: 0
 29332  005C2A  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29333  005C2C  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 29334  005C2E  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29335  005C30  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 29336  005C32  A0D8               	btfss	status,0,c
 29337  005C34  0012               	return	
 29338  005C36  D7EF               	goto	l2225
 29339  005C38                     __end_of_ClearBuffer:
 29340                           	opt stack 0
 29341                           tosu	equ	0xFFF
 29342                           tosh	equ	0xFFE
 29343                           tosl	equ	0xFFD
 29344                           pclath	equ	0xFFA
 29345                           tblptru	equ	0xFF8
 29346                           tblptrh	equ	0xFF7
 29347                           tblptrl	equ	0xFF6
 29348                           tablat	equ	0xFF5
 29349                           prodh	equ	0xFF4
 29350                           prodl	equ	0xFF3
 29351                           intcon	equ	0xFF2
 29352                           intcon2	equ	0xFF1
 29353                           intcon3	equ	0xFF0
 29354                           indf0	equ	0xFEF
 29355                           postinc0	equ	0xFEE
 29356                           plusw0	equ	0xFEB
 29357                           fsr0h	equ	0xFEA
 29358                           fsr0l	equ	0xFE9
 29359                           wreg	equ	0xFE8
 29360                           indf1	equ	0xFE7
 29361                           postinc1	equ	0xFE6
 29362                           postdec1	equ	0xFE5
 29363                           plusw1	equ	0xFE3
 29364                           fsr1h	equ	0xFE2
 29365                           fsr1l	equ	0xFE1
 29366                           indf2	equ	0xFDF
 29367                           postinc2	equ	0xFDE
 29368                           postdec2	equ	0xFDD
 29369                           plusw2	equ	0xFDB
 29370                           fsr2h	equ	0xFDA
 29371                           fsr2l	equ	0xFD9
 29372                           status	equ	0xFD8
 29373                           
 29374 ;; *************** function _LedStateMachine *****************
 29375 ;; Defined at:
 29376 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29377 ;; Parameters:    Size  Location     Type
 29378 ;;  Led             1    wreg     unsigned char 
 29379 ;;  LedSts          2   47[BANK0 ] PTR enum E8950
 29380 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 29381 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 29382 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 29383 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 29384 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29385 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 29386 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29387 ;; Auto vars:     Size  Location     Type
 29388 ;;  Led             1   57[BANK0 ] unsigned char 
 29389 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 29390 ;; Return value:  Size  Location     Type
 29391 ;;                  1    wreg      unsigned char 
 29392 ;; Registers used:
 29393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29394 ;; Tracked objects:
 29395 ;;		On entry : 0/0
 29396 ;;		On exit  : 0/0
 29397 ;;		Unchanged: 0/0
 29398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29399 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29400 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29402 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29403 ;;Total ram usage:       11 bytes
 29404 ;; Hardware stack levels used:    1
 29405 ;; Hardware stack levels required when called:   13
 29406 ;; This function calls:
 29407 ;;		_LedBlinkStateMachine
 29408 ;;		_LedPulseStateMachine
 29409 ;;		_Led_SetLedStatus
 29410 ;; This function is called by:
 29411 ;;		_Led_MainTask
 29412 ;; This function uses a non-reentrant model
 29413 ;;
 29414                           
 29415                           	psect	text134
 29416  004456                     __ptext134:
 29417                           	opt stack 0
 29418  004456                     _LedStateMachine:
 29419                           	opt stack 14
 29420                           
 29421                           ; BSR set to: 0
 29422                           ;incstack = 0
 29423                           ;LedStateMachine@Led stored from wreg
 29424  004456  0100               	movlb	0	; () banked
 29425  004458  6F99               	movwf	LedStateMachine@Led& (0+255),b
 29426                           
 29427                           ;led.c: 238: UINT8 LedOutSts = 0u;
 29428  00445A  0E00               	movlw	0
 29429  00445C  0100               	movlb	0	; () banked
 29430  00445E  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29431                           
 29432                           ;led.c: 241: switch (*LedSts)
 29433  004460  D037               	goto	l2083
 29434  004462                     
 29435                           ; BSR set to: 0
 29436                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 29437                           
 29438                           ; BSR set to: 0
 29439  004462  0E00               	movlw	0
 29440  004464  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29441                           
 29442                           ; BSR set to: 0
 29443                           ;led.c: 246: *LedOut = ((UINT8)(0));
 29444  004466  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29445  00446A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29446  00446E  0E00               	movlw	0
 29447  004470  D007               	goto	L49
 29448  004472                     
 29449                           ; BSR set to: 0
 29450                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 29451                           
 29452                           ; BSR set to: 0
 29453  004472  0E01               	movlw	1
 29454  004474  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29455                           
 29456                           ; BSR set to: 0
 29457                           ;led.c: 252: *LedOut = ((UINT8)(1));
 29458  004476  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29459  00447A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29460  00447E  0E01               	movlw	1
 29461  004480                     L49:
 29462  004480  6EDF               	movwf	indf2,c
 29463                           
 29464                           ;led.c: 253: break;
 29465  004482  D03A               	goto	l2085
 29466  004484                     
 29467                           ; BSR set to: 0
 29468                           ;led.c: 257: if (*LedOut == 1)
 29469                           
 29470                           ; BSR set to: 0
 29471  004484  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29472  004488  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29473  00448C  04DE               	decf	postinc2,w,c
 29474  00448E  A4D8               	btfss	status,2,c
 29475  004490  D006               	goto	l2088
 29476                           
 29477                           ; BSR set to: 0
 29478                           ;led.c: 258: {
 29479                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 29480  004492  0E00               	movlw	0
 29481  004494  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29482  004496  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29483  004498  ECB0  F02E         	call	_Led_SetLedStatus
 29484                           
 29485                           ;led.c: 261: }
 29486  00449C  D02D               	goto	l2085
 29487  00449E                     l2088:
 29488                           
 29489                           ;led.c: 262: else
 29490                           ;led.c: 263: {
 29491                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 29492  00449E  0E01               	movlw	1
 29493  0044A0  0100               	movlb	0	; () banked
 29494  0044A2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29495  0044A4  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29496  0044A6  ECB0  F02E         	call	_Led_SetLedStatus
 29497                           
 29498                           ;led.c: 266: }
 29499                           ;led.c: 267: break;
 29500  0044AA  D026               	goto	l2085
 29501  0044AC                     
 29502                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 29503  0044AC  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 29504  0044B0  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 29505  0044B4  EC67  F013         	call	_LedBlinkStateMachine	;wreg free
 29506  0044B8  D008               	goto	L50
 29507  0044BA                     
 29508                           ; BSR set to: 0
 29509                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 29510                           
 29511                           ; BSR set to: 0
 29512  0044BA  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 29513  0044BE  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 29514  0044C2  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 29515  0044C6  EC21  F019         	call	_LedPulseStateMachine	;wreg free
 29516  0044CA                     L50:
 29517  0044CA  0100               	movlb	0	; () banked
 29518  0044CC  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29519                           
 29520                           ; BSR set to: 0
 29521                           ;led.c: 281: }
 29522                           
 29523                           ; BSR set to: 0
 29524                           ;led.c: 280: break;
 29525                           
 29526                           ;led.c: 279: default:
 29527                           
 29528                           ;led.c: 277: break;
 29529  0044CE  D014               	goto	l2085
 29530  0044D0                     l2083:
 29531                           
 29532                           ; BSR set to: 0
 29533                           
 29534                           ; BSR set to: 0
 29535  0044D0  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 29536  0044D4  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 29537  0044D8  50DF               	movf	indf2,w,c
 29538                           
 29539                           ; Switch size 1, requested type "space"
 29540                           ; Number of cases is 5, Range of values is 0 to 4
 29541                           ; switch strategies available:
 29542                           ; Name         Instructions Cycles
 29543                           ; simple_byte           16     9 (average)
 29544                           ;	Chosen strategy is simple_byte
 29545  0044DA  0A00               	xorlw	0	; case 0
 29546  0044DC  B4D8               	btfsc	status,2,c
 29547  0044DE  D7C1               	goto	l2084
 29548  0044E0  0A01               	xorlw	1	; case 1
 29549  0044E2  B4D8               	btfsc	status,2,c
 29550  0044E4  D7C6               	goto	l2086
 29551  0044E6  0A03               	xorlw	3	; case 2
 29552  0044E8  B4D8               	btfsc	status,2,c
 29553  0044EA  D7CC               	goto	l2087
 29554  0044EC  0A01               	xorlw	1	; case 3
 29555  0044EE  B4D8               	btfsc	status,2,c
 29556  0044F0  D7DD               	goto	l2090
 29557  0044F2  0A07               	xorlw	7	; case 4
 29558  0044F4  B4D8               	btfsc	status,2,c
 29559  0044F6  D7E1               	goto	l2091
 29560  0044F8                     l2085:
 29561                           
 29562                           ;led.c: 283: return LedOutSts;
 29563                           
 29564                           ; BSR set to: 0
 29565  0044F8  0100               	movlb	0	; () banked
 29566  0044FA  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 29567  0044FC  0012               	return	
 29568  0044FE                     __end_of_LedStateMachine:
 29569                           	opt stack 0
 29570                           tosu	equ	0xFFF
 29571                           tosh	equ	0xFFE
 29572                           tosl	equ	0xFFD
 29573                           pclath	equ	0xFFA
 29574                           tblptru	equ	0xFF8
 29575                           tblptrh	equ	0xFF7
 29576                           tblptrl	equ	0xFF6
 29577                           tablat	equ	0xFF5
 29578                           prodh	equ	0xFF4
 29579                           prodl	equ	0xFF3
 29580                           intcon	equ	0xFF2
 29581                           intcon2	equ	0xFF1
 29582                           intcon3	equ	0xFF0
 29583                           indf0	equ	0xFEF
 29584                           postinc0	equ	0xFEE
 29585                           plusw0	equ	0xFEB
 29586                           fsr0h	equ	0xFEA
 29587                           fsr0l	equ	0xFE9
 29588                           wreg	equ	0xFE8
 29589                           indf1	equ	0xFE7
 29590                           postinc1	equ	0xFE6
 29591                           postdec1	equ	0xFE5
 29592                           plusw1	equ	0xFE3
 29593                           fsr1h	equ	0xFE2
 29594                           fsr1l	equ	0xFE1
 29595                           indf2	equ	0xFDF
 29596                           postinc2	equ	0xFDE
 29597                           postdec2	equ	0xFDD
 29598                           plusw2	equ	0xFDB
 29599                           fsr2h	equ	0xFDA
 29600                           fsr2l	equ	0xFD9
 29601                           status	equ	0xFD8
 29602                           
 29603 ;; *************** function _LedPulseStateMachine *****************
 29604 ;; Defined at:
 29605 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29606 ;; Parameters:    Size  Location     Type
 29607 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 29608 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29609 ;;  Led             1   44[BANK0 ] unsigned char 
 29610 ;; Auto vars:     Size  Location     Type
 29611 ;;		None
 29612 ;; Return value:  Size  Location     Type
 29613 ;;                  1    wreg      unsigned char 
 29614 ;; Registers used:
 29615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29616 ;; Tracked objects:
 29617 ;;		On entry : 0/0
 29618 ;;		On exit  : 0/0
 29619 ;;		Unchanged: 0/0
 29620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29621 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29623 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29624 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29625 ;;Total ram usage:        5 bytes
 29626 ;; Hardware stack levels used:    1
 29627 ;; Hardware stack levels required when called:   12
 29628 ;; This function calls:
 29629 ;;		_Led_SetLedStatus
 29630 ;;		___lwdiv
 29631 ;; This function is called by:
 29632 ;;		_LedStateMachine
 29633 ;; This function uses a non-reentrant model
 29634 ;;
 29635                           
 29636                           	psect	text135
 29637  003242                     __ptext135:
 29638                           	opt stack 0
 29639  003242                     _LedPulseStateMachine:
 29640                           	opt stack 14
 29641                           
 29642                           ;led.c: 185: switch (LedPulse->LedPulseState)
 29643                           
 29644                           ; BSR set to: 0
 29645                           ;incstack = 0
 29646  003242  D05C               	goto	l2073
 29647  003244                     
 29648                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 29649  003244  0100               	movlb	0	; () banked
 29650  003246  EE20 F001          	lfsr	2,1
 29651  00324A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29652  00324C  26D9               	addwf	fsr2l,f,c
 29653  00324E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29654  003250  22DA               	addwfc	fsr2h,f,c
 29655  003252  0E01               	movlw	1
 29656  003254  6EDF               	movwf	indf2,c
 29657                           
 29658                           ; BSR set to: 0
 29659                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 29660  003256  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29661  00325A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29662  00325E  0E01               	movlw	1
 29663  003260  D036               	goto	L51
 29664  003262                     
 29665                           ;led.c: 196: LedPulse->LedPulseCounter++;
 29666                           
 29667                           ; BSR set to: 0
 29668  003262  0100               	movlb	0	; () banked
 29669  003264  EE20 F002          	lfsr	2,2
 29670  003268  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29671  00326A  26D9               	addwf	fsr2l,f,c
 29672  00326C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29673  00326E  22DA               	addwfc	fsr2h,f,c
 29674  003270  2ADE               	incf	postinc2,f,c
 29675  003272  0E00               	movlw	0
 29676  003274  22DD               	addwfc	postdec2,f,c
 29677                           
 29678                           ; BSR set to: 0
 29679                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 29680  003276  EE20 F004          	lfsr	2,4
 29681  00327A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29682  00327C  26D9               	addwf	fsr2l,f,c
 29683  00327E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29684  003280  22DA               	addwfc	fsr2h,f,c
 29685  003282  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29686  003286  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29687  00328A  0E00               	movlw	0
 29688  00328C  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29689  00328E  0E32               	movlw	50
 29690  003290  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29691  003292  EC60  F02A         	call	___lwdiv	;wreg free
 29692  003296  0100               	movlb	0	; () banked
 29693  003298  EE20 F002          	lfsr	2,2
 29694  00329C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29695  00329E  26D9               	addwf	fsr2l,f,c
 29696  0032A0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29697  0032A2  22DA               	addwfc	fsr2h,f,c
 29698  0032A4  5183               	movf	?___lwdiv& (0+255),w,b
 29699  0032A6  5CDE               	subwf	postinc2,w,c
 29700  0032A8  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29701  0032AA  58DE               	subwfb	postinc2,w,c
 29702  0032AC  A0D8               	btfss	status,0,c
 29703  0032AE  D034               	goto	l2075
 29704                           
 29705                           ; BSR set to: 0
 29706                           ;led.c: 199: {
 29707                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 29708  0032B0  EE20 F002          	lfsr	2,2
 29709  0032B4  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29710  0032B6  26D9               	addwf	fsr2l,f,c
 29711  0032B8  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29712  0032BA  22DA               	addwfc	fsr2h,f,c
 29713  0032BC  0E00               	movlw	0
 29714  0032BE  6EDE               	movwf	postinc2,c
 29715  0032C0  0E00               	movlw	0
 29716  0032C2  6EDD               	movwf	postdec2,c
 29717                           
 29718                           ; BSR set to: 0
 29719                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 29720  0032C4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29721  0032C8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29722  0032CC  0E02               	movlw	2
 29723  0032CE                     L51:
 29724  0032CE  6EDF               	movwf	indf2,c
 29725                           
 29726                           ; BSR set to: 0
 29727                           ;led.c: 204: }
 29728                           ;led.c: 205: break;
 29729  0032D0  D023               	goto	l2075
 29730  0032D2                     
 29731                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 29732                           
 29733                           ; BSR set to: 0
 29734  0032D2  0100               	movlb	0	; () banked
 29735  0032D4  EE20 F001          	lfsr	2,1
 29736  0032D8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29737  0032DA  26D9               	addwf	fsr2l,f,c
 29738  0032DC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29739  0032DE  22DA               	addwfc	fsr2h,f,c
 29740  0032E0  0E00               	movlw	0
 29741  0032E2  6EDF               	movwf	indf2,c
 29742                           
 29743                           ; BSR set to: 0
 29744                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 29745  0032E4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29746  0032E8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29747  0032EC  0E00               	movlw	0
 29748  0032EE  6EDF               	movwf	indf2,c
 29749                           
 29750                           ; BSR set to: 0
 29751                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 29752  0032F0  0E00               	movlw	0
 29753  0032F2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29754  0032F4  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 29755  0032F6  ECB0  F02E         	call	_Led_SetLedStatus
 29756                           
 29757                           ;led.c: 218: }
 29758                           
 29759                           ;led.c: 217: break;
 29760                           
 29761                           ;led.c: 216: default:
 29762                           
 29763                           ;led.c: 214: break;
 29764  0032FA  D00E               	goto	l2075
 29765  0032FC                     l2073:
 29766  0032FC  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29767  003300  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29768  003304  50DF               	movf	indf2,w,c
 29769                           
 29770                           ; Switch size 1, requested type "space"
 29771                           ; Number of cases is 3, Range of values is 0 to 2
 29772                           ; switch strategies available:
 29773                           ; Name         Instructions Cycles
 29774                           ; simple_byte           10     6 (average)
 29775                           ;	Chosen strategy is simple_byte
 29776  003306  0A00               	xorlw	0	; case 0
 29777  003308  B4D8               	btfsc	status,2,c
 29778  00330A  D79C               	goto	l2074
 29779  00330C  0A01               	xorlw	1	; case 1
 29780  00330E  B4D8               	btfsc	status,2,c
 29781  003310  D7A8               	goto	l2076
 29782  003312  0A03               	xorlw	3	; case 2
 29783  003314  B4D8               	btfsc	status,2,c
 29784  003316  D7DD               	goto	l2078
 29785  003318                     l2075:
 29786                           
 29787                           ;led.c: 221: return (LedPulse->LedOutState);
 29788  003318  0100               	movlb	0	; () banked
 29789  00331A  EE20 F001          	lfsr	2,1
 29790  00331E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29791  003320  26D9               	addwf	fsr2l,f,c
 29792  003322  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29793  003324  22DA               	addwfc	fsr2h,f,c
 29794  003326  50DF               	movf	indf2,w,c
 29795  003328  0012               	return	
 29796  00332A                     __end_of_LedPulseStateMachine:
 29797                           	opt stack 0
 29798                           tosu	equ	0xFFF
 29799                           tosh	equ	0xFFE
 29800                           tosl	equ	0xFFD
 29801                           pclath	equ	0xFFA
 29802                           tblptru	equ	0xFF8
 29803                           tblptrh	equ	0xFF7
 29804                           tblptrl	equ	0xFF6
 29805                           tablat	equ	0xFF5
 29806                           prodh	equ	0xFF4
 29807                           prodl	equ	0xFF3
 29808                           intcon	equ	0xFF2
 29809                           intcon2	equ	0xFF1
 29810                           intcon3	equ	0xFF0
 29811                           indf0	equ	0xFEF
 29812                           postinc0	equ	0xFEE
 29813                           plusw0	equ	0xFEB
 29814                           fsr0h	equ	0xFEA
 29815                           fsr0l	equ	0xFE9
 29816                           wreg	equ	0xFE8
 29817                           indf1	equ	0xFE7
 29818                           postinc1	equ	0xFE6
 29819                           postdec1	equ	0xFE5
 29820                           plusw1	equ	0xFE3
 29821                           fsr1h	equ	0xFE2
 29822                           fsr1l	equ	0xFE1
 29823                           indf2	equ	0xFDF
 29824                           postinc2	equ	0xFDE
 29825                           postdec2	equ	0xFDD
 29826                           plusw2	equ	0xFDB
 29827                           fsr2h	equ	0xFDA
 29828                           fsr2l	equ	0xFD9
 29829                           status	equ	0xFD8
 29830                           
 29831 ;; *************** function _Led_SetLedStatus *****************
 29832 ;; Defined at:
 29833 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29834 ;; Parameters:    Size  Location     Type
 29835 ;;  Led             1    wreg     unsigned char 
 29836 ;;  LedSts          1   29[BANK0 ] enum E8950
 29837 ;; Auto vars:     Size  Location     Type
 29838 ;;  Led             1   30[BANK0 ] unsigned char 
 29839 ;; Return value:  Size  Location     Type
 29840 ;;                  1    wreg      void 
 29841 ;; Registers used:
 29842 ;;		wreg, status,2, status,0
 29843 ;; Tracked objects:
 29844 ;;		On entry : 0/0
 29845 ;;		On exit  : 0/0
 29846 ;;		Unchanged: 0/0
 29847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29848 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29852 ;;Total ram usage:        2 bytes
 29853 ;; Hardware stack levels used:    1
 29854 ;; Hardware stack levels required when called:   11
 29855 ;; This function calls:
 29856 ;;		Nothing
 29857 ;; This function is called by:
 29858 ;;		_LedPulseStateMachine
 29859 ;;		_LedStateMachine
 29860 ;;		_initGprsModem
 29861 ;;		_blinkForSeconds
 29862 ;; This function uses a non-reentrant model
 29863 ;;
 29864                           
 29865                           	psect	text136
 29866  005D60                     __ptext136:
 29867                           	opt stack 0
 29868  005D60                     _Led_SetLedStatus:
 29869                           	opt stack 15
 29870                           
 29871                           ; BSR set to: 0
 29872                           ;incstack = 0
 29873                           ;Led_SetLedStatus@Led stored from wreg
 29874  005D60  0100               	movlb	0	; () banked
 29875  005D62  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 29876                           
 29877                           ;led.c: 341: switch (Led)
 29878  005D64  D009               	goto	l2104
 29879  005D66                     l2105:
 29880                           
 29881                           ; BSR set to: 0
 29882                           ;led.c: 344: Led1Sts = LedSts;
 29883  005D66  C07D  F1FD         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 29884                           
 29885                           ;led.c: 345: break;
 29886  005D6A  0012               	return	
 29887  005D6C                     l2107:
 29888                           
 29889                           ; BSR set to: 0
 29890                           ;led.c: 348: Led2Sts = LedSts;
 29891  005D6C  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 29892                           
 29893                           ;led.c: 349: break;
 29894  005D70  0012               	return	
 29895  005D72                     l2108:
 29896                           
 29897                           ; BSR set to: 0
 29898                           ;led.c: 352: Led3Sts = LedSts;
 29899  005D72  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 29900                           
 29901                           ; BSR set to: 0
 29902                           ;led.c: 357: }
 29903                           
 29904                           ; BSR set to: 0
 29905                           ;led.c: 356: break;
 29906                           
 29907                           ;led.c: 355: default:
 29908                           
 29909                           ;led.c: 353: break;
 29910  005D76  0012               	return	
 29911  005D78                     l2104:
 29912                           
 29913                           ; BSR set to: 0
 29914  005D78  0100               	movlb	0	; () banked
 29915  005D7A  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 29916                           
 29917                           ; Switch size 1, requested type "space"
 29918                           ; Number of cases is 3, Range of values is 1 to 3
 29919                           ; switch strategies available:
 29920                           ; Name         Instructions Cycles
 29921                           ; simple_byte           10     6 (average)
 29922                           ;	Chosen strategy is simple_byte
 29923  005D7C  0A01               	xorlw	1	; case 1
 29924  005D7E  B4D8               	btfsc	status,2,c
 29925  005D80  D7F2               	goto	l2105
 29926  005D82  0A03               	xorlw	3	; case 2
 29927  005D84  B4D8               	btfsc	status,2,c
 29928  005D86  D7F2               	goto	l2107
 29929  005D88  0A01               	xorlw	1	; case 3
 29930  005D8A  A4D8               	btfss	status,2,c
 29931  005D8C  0012               	return	
 29932  005D8E  D7F1               	goto	l2108
 29933  005D90                     __end_of_Led_SetLedStatus:
 29934                           	opt stack 0
 29935                           tosu	equ	0xFFF
 29936                           tosh	equ	0xFFE
 29937                           tosl	equ	0xFFD
 29938                           pclath	equ	0xFFA
 29939                           tblptru	equ	0xFF8
 29940                           tblptrh	equ	0xFF7
 29941                           tblptrl	equ	0xFF6
 29942                           tablat	equ	0xFF5
 29943                           prodh	equ	0xFF4
 29944                           prodl	equ	0xFF3
 29945                           intcon	equ	0xFF2
 29946                           intcon2	equ	0xFF1
 29947                           intcon3	equ	0xFF0
 29948                           indf0	equ	0xFEF
 29949                           postinc0	equ	0xFEE
 29950                           plusw0	equ	0xFEB
 29951                           fsr0h	equ	0xFEA
 29952                           fsr0l	equ	0xFE9
 29953                           wreg	equ	0xFE8
 29954                           indf1	equ	0xFE7
 29955                           postinc1	equ	0xFE6
 29956                           postdec1	equ	0xFE5
 29957                           plusw1	equ	0xFE3
 29958                           fsr1h	equ	0xFE2
 29959                           fsr1l	equ	0xFE1
 29960                           indf2	equ	0xFDF
 29961                           postinc2	equ	0xFDE
 29962                           postdec2	equ	0xFDD
 29963                           plusw2	equ	0xFDB
 29964                           fsr2h	equ	0xFDA
 29965                           fsr2l	equ	0xFD9
 29966                           status	equ	0xFD8
 29967                           
 29968 ;; *************** function _LedBlinkStateMachine *****************
 29969 ;; Defined at:
 29970 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29971 ;; Parameters:    Size  Location     Type
 29972 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 29973 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29974 ;; Auto vars:     Size  Location     Type
 29975 ;;		None
 29976 ;; Return value:  Size  Location     Type
 29977 ;;                  1    wreg      unsigned char 
 29978 ;; Registers used:
 29979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29980 ;; Tracked objects:
 29981 ;;		On entry : 0/0
 29982 ;;		On exit  : 0/0
 29983 ;;		Unchanged: 0/0
 29984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29987 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29989 ;;Total ram usage:        4 bytes
 29990 ;; Hardware stack levels used:    1
 29991 ;; Hardware stack levels required when called:   12
 29992 ;; This function calls:
 29993 ;;		___lwdiv
 29994 ;; This function is called by:
 29995 ;;		_LedStateMachine
 29996 ;; This function uses a non-reentrant model
 29997 ;;
 29998                           
 29999                           	psect	text137
 30000  0026CE                     __ptext137:
 30001                           	opt stack 0
 30002  0026CE                     _LedBlinkStateMachine:
 30003                           	opt stack 14
 30004                           
 30005                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 30006                           
 30007                           ; BSR set to: 0
 30008                           ;incstack = 0
 30009  0026CE  D08F               	goto	l2060
 30010  0026D0                     
 30011                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 30012  0026D0  0100               	movlb	0	; () banked
 30013  0026D2  EE20 F008          	lfsr	2,8
 30014  0026D6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30015  0026D8  26D9               	addwf	fsr2l,f,c
 30016  0026DA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30017  0026DC  22DA               	addwfc	fsr2h,f,c
 30018  0026DE  EE10 F001          	lfsr	1,1
 30019  0026E2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30020  0026E4  26E1               	addwf	fsr1l,f,c
 30021  0026E6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30022  0026E8  22E2               	addwfc	fsr1h,f,c
 30023  0026EA  CFDF FFE7          	movff	indf2,indf1
 30024                           
 30025                           ; BSR set to: 0
 30026                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 30027  0026EE  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30028  0026F2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30029  0026F6  D040               	goto	L52
 30030  0026F8                     
 30031                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 30032                           
 30033                           ; BSR set to: 0
 30034  0026F8  0100               	movlb	0	; () banked
 30035  0026FA  EE20 F002          	lfsr	2,2
 30036  0026FE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30037  002700  26D9               	addwf	fsr2l,f,c
 30038  002702  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30039  002704  22DA               	addwfc	fsr2h,f,c
 30040  002706  2ADE               	incf	postinc2,f,c
 30041  002708  0E00               	movlw	0
 30042  00270A  22DD               	addwfc	postdec2,f,c
 30043                           
 30044                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 30045  00270C  EE20 F001          	lfsr	2,1
 30046  002710  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30047  002712  26D9               	addwf	fsr2l,f,c
 30048  002714  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30049  002716  22DA               	addwfc	fsr2h,f,c
 30050  002718  50DF               	movf	indf2,w,c
 30051  00271A  A4D8               	btfss	status,2,c
 30052  00271C  D02F               	goto	l2064
 30053                           
 30054                           ; BSR set to: 0
 30055                           ;led.c: 142: {
 30056                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 30057  00271E  EE20 F006          	lfsr	2,6
 30058  002722  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30059  002724  26D9               	addwf	fsr2l,f,c
 30060  002726  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30061  002728  22DA               	addwfc	fsr2h,f,c
 30062  00272A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30063  00272E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30064  002732  0E00               	movlw	0
 30065  002734  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30066  002736  0E32               	movlw	50
 30067  002738  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30068  00273A  EC60  F02A         	call	___lwdiv	;wreg free
 30069  00273E  0100               	movlb	0	; () banked
 30070  002740  EE20 F002          	lfsr	2,2
 30071  002744  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30072  002746  26D9               	addwf	fsr2l,f,c
 30073  002748  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30074  00274A  22DA               	addwfc	fsr2h,f,c
 30075  00274C  5183               	movf	?___lwdiv& (0+255),w,b
 30076  00274E  5CDE               	subwf	postinc2,w,c
 30077  002750  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30078  002752  58DE               	subwfb	postinc2,w,c
 30079  002754  A0D8               	btfss	status,0,c
 30080  002756  D056               	goto	l2062
 30081                           
 30082                           ; BSR set to: 0
 30083                           ;led.c: 145: {
 30084                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 30085  002758  EE20 F002          	lfsr	2,2
 30086  00275C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30087  00275E  26D9               	addwf	fsr2l,f,c
 30088  002760  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30089  002762  22DA               	addwfc	fsr2h,f,c
 30090  002764  0E00               	movlw	0
 30091  002766  6EDE               	movwf	postinc2,c
 30092  002768  0E00               	movlw	0
 30093  00276A  6EDD               	movwf	postdec2,c
 30094                           
 30095                           ;led.c: 149: LedBlink->LedOutState = OnState;
 30096  00276C  EE20 F001          	lfsr	2,1
 30097  002770  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30098  002772  26D9               	addwf	fsr2l,f,c
 30099  002774  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30100  002776  22DA               	addwfc	fsr2h,f,c
 30101  002778                     L52:
 30102  002778  0E01               	movlw	1
 30103  00277A  D037               	goto	L53
 30104  00277C                     l2064:
 30105                           
 30106                           ; BSR set to: 0
 30107                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 30108                           
 30109                           ; BSR set to: 0
 30110  00277C  EE20 F001          	lfsr	2,1
 30111  002780  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30112  002782  26D9               	addwf	fsr2l,f,c
 30113  002784  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30114  002786  22DA               	addwfc	fsr2h,f,c
 30115  002788  04DE               	decf	postinc2,w,c
 30116  00278A  A4D8               	btfss	status,2,c
 30117  00278C  D03B               	goto	l2062
 30118                           
 30119                           ; BSR set to: 0
 30120                           ;led.c: 153: {
 30121                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 30122  00278E  EE20 F004          	lfsr	2,4
 30123  002792  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30124  002794  26D9               	addwf	fsr2l,f,c
 30125  002796  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30126  002798  22DA               	addwfc	fsr2h,f,c
 30127  00279A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30128  00279E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30129  0027A2  0E00               	movlw	0
 30130  0027A4  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30131  0027A6  0E32               	movlw	50
 30132  0027A8  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30133  0027AA  EC60  F02A         	call	___lwdiv	;wreg free
 30134  0027AE  0100               	movlb	0	; () banked
 30135  0027B0  EE20 F002          	lfsr	2,2
 30136  0027B4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30137  0027B6  26D9               	addwf	fsr2l,f,c
 30138  0027B8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30139  0027BA  22DA               	addwfc	fsr2h,f,c
 30140  0027BC  5183               	movf	?___lwdiv& (0+255),w,b
 30141  0027BE  5CDE               	subwf	postinc2,w,c
 30142  0027C0  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30143  0027C2  58DE               	subwfb	postinc2,w,c
 30144  0027C4  A0D8               	btfss	status,0,c
 30145  0027C6  D01E               	goto	l2062
 30146                           
 30147                           ; BSR set to: 0
 30148                           ;led.c: 156: {
 30149                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 30150  0027C8  EE20 F002          	lfsr	2,2
 30151  0027CC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30152  0027CE  26D9               	addwf	fsr2l,f,c
 30153  0027D0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30154  0027D2  22DA               	addwfc	fsr2h,f,c
 30155  0027D4  0E00               	movlw	0
 30156  0027D6  6EDE               	movwf	postinc2,c
 30157  0027D8  0E00               	movlw	0
 30158  0027DA  6EDD               	movwf	postdec2,c
 30159                           
 30160                           ;led.c: 160: LedBlink->LedOutState = OffState;
 30161  0027DC  EE20 F001          	lfsr	2,1
 30162  0027E0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30163  0027E2  26D9               	addwf	fsr2l,f,c
 30164  0027E4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30165  0027E6  22DA               	addwfc	fsr2h,f,c
 30166  0027E8  0E00               	movlw	0
 30167  0027EA                     L53:
 30168  0027EA  6EDF               	movwf	indf2,c
 30169                           
 30170                           ; BSR set to: 0
 30171                           ;led.c: 167: }
 30172                           
 30173                           ; BSR set to: 0
 30174                           ;led.c: 166: break;
 30175                           
 30176                           ;led.c: 165: default:
 30177                           
 30178                           ; BSR set to: 0
 30179                           ;led.c: 161: }
 30180                           ;led.c: 162: }
 30181                           ;led.c: 163: break;
 30182                           
 30183                           ; BSR set to: 0
 30184                           
 30185                           ; BSR set to: 0
 30186  0027EC  D00B               	goto	l2062
 30187  0027EE                     l2060:
 30188                           
 30189                           ; BSR set to: 0
 30190  0027EE  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30191  0027F2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30192  0027F6  50DF               	movf	indf2,w,c
 30193                           
 30194                           ; Switch size 1, requested type "space"
 30195                           ; Number of cases is 2, Range of values is 0 to 1
 30196                           ; switch strategies available:
 30197                           ; Name         Instructions Cycles
 30198                           ; simple_byte            7     4 (average)
 30199                           ;	Chosen strategy is simple_byte
 30200  0027F8  0A00               	xorlw	0	; case 0
 30201  0027FA  B4D8               	btfsc	status,2,c
 30202  0027FC  D769               	goto	l2061
 30203  0027FE  0A01               	xorlw	1	; case 1
 30204  002800  B4D8               	btfsc	status,2,c
 30205  002802  D77A               	goto	l2063
 30206  002804                     l2062:
 30207                           
 30208                           ;led.c: 170: return (LedBlink->LedOutState);
 30209  002804  0100               	movlb	0	; () banked
 30210  002806  EE20 F001          	lfsr	2,1
 30211  00280A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30212  00280C  26D9               	addwf	fsr2l,f,c
 30213  00280E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30214  002810  22DA               	addwfc	fsr2h,f,c
 30215  002812  50DF               	movf	indf2,w,c
 30216  002814  0012               	return	
 30217  002816                     __end_of_LedBlinkStateMachine:
 30218                           	opt stack 0
 30219                           tosu	equ	0xFFF
 30220                           tosh	equ	0xFFE
 30221                           tosl	equ	0xFFD
 30222                           pclath	equ	0xFFA
 30223                           tblptru	equ	0xFF8
 30224                           tblptrh	equ	0xFF7
 30225                           tblptrl	equ	0xFF6
 30226                           tablat	equ	0xFF5
 30227                           prodh	equ	0xFF4
 30228                           prodl	equ	0xFF3
 30229                           intcon	equ	0xFF2
 30230                           intcon2	equ	0xFF1
 30231                           intcon3	equ	0xFF0
 30232                           indf0	equ	0xFEF
 30233                           postinc0	equ	0xFEE
 30234                           plusw0	equ	0xFEB
 30235                           fsr0h	equ	0xFEA
 30236                           fsr0l	equ	0xFE9
 30237                           wreg	equ	0xFE8
 30238                           indf1	equ	0xFE7
 30239                           postinc1	equ	0xFE6
 30240                           postdec1	equ	0xFE5
 30241                           plusw1	equ	0xFE3
 30242                           fsr1h	equ	0xFE2
 30243                           fsr1l	equ	0xFE1
 30244                           indf2	equ	0xFDF
 30245                           postinc2	equ	0xFDE
 30246                           postdec2	equ	0xFDD
 30247                           plusw2	equ	0xFDB
 30248                           fsr2h	equ	0xFDA
 30249                           fsr2l	equ	0xFD9
 30250                           status	equ	0xFD8
 30251                           
 30252 ;; *************** function ___lwdiv *****************
 30253 ;; Defined at:
 30254 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 30255 ;; Parameters:    Size  Location     Type
 30256 ;;  dividend        2   35[BANK0 ] unsigned int 
 30257 ;;  divisor         2   37[BANK0 ] unsigned int 
 30258 ;; Auto vars:     Size  Location     Type
 30259 ;;  quotient        2   40[BANK0 ] unsigned int 
 30260 ;;  counter         1   39[BANK0 ] unsigned char 
 30261 ;; Return value:  Size  Location     Type
 30262 ;;                  2   35[BANK0 ] unsigned int 
 30263 ;; Registers used:
 30264 ;;		wreg, status,2, status,0
 30265 ;; Tracked objects:
 30266 ;;		On entry : 0/0
 30267 ;;		On exit  : 0/0
 30268 ;;		Unchanged: 0/0
 30269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30271 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30273 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30274 ;;Total ram usage:        7 bytes
 30275 ;; Hardware stack levels used:    1
 30276 ;; Hardware stack levels required when called:   11
 30277 ;; This function calls:
 30278 ;;		Nothing
 30279 ;; This function is called by:
 30280 ;;		_LedBlinkStateMachine
 30281 ;;		_LedPulseStateMachine
 30282 ;;		_secondsAppTimer
 30283 ;;		_utoa
 30284 ;; This function uses a non-reentrant model
 30285 ;;
 30286                           
 30287                           	psect	text138
 30288  0054C0                     __ptext138:
 30289                           	opt stack 0
 30290  0054C0                     ___lwdiv:
 30291                           	opt stack 14
 30292                           
 30293                           ; BSR set to: 0
 30294                           ;incstack = 0
 30295  0054C0  0E00               	movlw	0
 30296  0054C2  0100               	movlb	0	; () banked
 30297  0054C4  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30298  0054C6  0E00               	movlw	0
 30299  0054C8  6F88               	movwf	___lwdiv@quotient& (0+255),b
 30300                           
 30301                           ; BSR set to: 0
 30302  0054CA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30303  0054CC  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30304  0054CE  B4D8               	btfsc	status,2,c
 30305  0054D0  D01C               	goto	l3085
 30306                           
 30307                           ; BSR set to: 0
 30308  0054D2  0E01               	movlw	1
 30309  0054D4  6F87               	movwf	___lwdiv@counter& (0+255),b
 30310  0054D6  D004               	goto	l3080
 30311  0054D8                     
 30312                           ; BSR set to: 0
 30313                           
 30314                           ; BSR set to: 0
 30315  0054D8  90D8               	bcf	status,0,c
 30316  0054DA  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 30317  0054DC  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30318  0054DE  2B87               	incf	___lwdiv@counter& (0+255),f,b
 30319  0054E0                     l3080:
 30320                           
 30321                           ; BSR set to: 0
 30322                           
 30323                           ; BSR set to: 0
 30324  0054E0  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30325  0054E2  D7FA               	goto	l3081
 30326  0054E4                     u10870:
 30327                           
 30328                           ; BSR set to: 0
 30329                           
 30330                           ; BSR set to: 0
 30331                           
 30332                           ; BSR set to: 0
 30333  0054E4  90D8               	bcf	status,0,c
 30334  0054E6  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 30335  0054E8  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30336                           
 30337                           ; BSR set to: 0
 30338  0054EA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30339  0054EC  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 30340  0054EE  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30341  0054F0  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30342  0054F2  A0D8               	btfss	status,0,c
 30343  0054F4  D005               	goto	l3084
 30344                           
 30345                           ; BSR set to: 0
 30346  0054F6  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30347  0054F8  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 30348  0054FA  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30349  0054FC  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30350                           
 30351                           ; BSR set to: 0
 30352  0054FE  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 30353  005500                     l3084:
 30354                           
 30355                           ; BSR set to: 0
 30356                           
 30357                           ; BSR set to: 0
 30358  005500  90D8               	bcf	status,0,c
 30359  005502  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30360  005504  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 30361                           
 30362                           ; BSR set to: 0
 30363  005506  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 30364  005508  D7ED               	goto	u10870
 30365  00550A                     l3085:
 30366                           
 30367                           ; BSR set to: 0
 30368                           
 30369                           ; BSR set to: 0
 30370  00550A  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 30371  00550E  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30372                           
 30373                           ; BSR set to: 0
 30374  005512  0012               	return		;funcret
 30375  005514                     __end_of___lwdiv:
 30376                           	opt stack 0
 30377                           tosu	equ	0xFFF
 30378                           tosh	equ	0xFFE
 30379                           tosl	equ	0xFFD
 30380                           pclath	equ	0xFFA
 30381                           tblptru	equ	0xFF8
 30382                           tblptrh	equ	0xFF7
 30383                           tblptrl	equ	0xFF6
 30384                           tablat	equ	0xFF5
 30385                           prodh	equ	0xFF4
 30386                           prodl	equ	0xFF3
 30387                           intcon	equ	0xFF2
 30388                           intcon2	equ	0xFF1
 30389                           intcon3	equ	0xFF0
 30390                           indf0	equ	0xFEF
 30391                           postinc0	equ	0xFEE
 30392                           plusw0	equ	0xFEB
 30393                           fsr0h	equ	0xFEA
 30394                           fsr0l	equ	0xFE9
 30395                           wreg	equ	0xFE8
 30396                           indf1	equ	0xFE7
 30397                           postinc1	equ	0xFE6
 30398                           postdec1	equ	0xFE5
 30399                           plusw1	equ	0xFE3
 30400                           fsr1h	equ	0xFE2
 30401                           fsr1l	equ	0xFE1
 30402                           indf2	equ	0xFDF
 30403                           postinc2	equ	0xFDE
 30404                           postdec2	equ	0xFDD
 30405                           plusw2	equ	0xFDB
 30406                           fsr2h	equ	0xFDA
 30407                           fsr2l	equ	0xFD9
 30408                           status	equ	0xFD8
 30409                           
 30410 ;; *************** function _OsAlrm_SetOsAlarm *****************
 30411 ;; Defined at:
 30412 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 30413 ;; Parameters:    Size  Location     Type
 30414 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 30415 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 30416 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 30417 ;;		 -> I2cDummyTx(1), 
 30418 ;; Auto vars:     Size  Location     Type
 30419 ;;		None
 30420 ;; Return value:  Size  Location     Type
 30421 ;;                  1    wreg      void 
 30422 ;; Registers used:
 30423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30424 ;; Tracked objects:
 30425 ;;		On entry : 0/0
 30426 ;;		On exit  : 0/0
 30427 ;;		Unchanged: 0/0
 30428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30429 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30432 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30433 ;;Total ram usage:        8 bytes
 30434 ;; Hardware stack levels used:    1
 30435 ;; Hardware stack levels required when called:   12
 30436 ;; This function calls:
 30437 ;;		___wmul
 30438 ;; This function is called by:
 30439 ;;		_I2cSlv_MainTask
 30440 ;; This function uses a non-reentrant model
 30441 ;;
 30442                           
 30443                           	psect	text139
 30444  003DEA                     __ptext139:
 30445                           	opt stack 0
 30446  003DEA                     _OsAlrm_SetOsAlarm:
 30447                           	opt stack 15
 30448                           
 30449                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 30450                           
 30451                           ; BSR set to: 0
 30452                           ;incstack = 0
 30453  003DEA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30454  003DEE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30455  003DF2  0E00               	movlw	0
 30456  003DF4  0100               	movlb	0	; () banked
 30457  003DF6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30458  003DF8  0E0B               	movlw	11
 30459  003DFA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30460  003DFC  EC36  F02F         	call	___wmul	;wreg free
 30461  003E00  0E00               	movlw	low _OsAlarms
 30462  003E02  0100               	movlb	0	; () banked
 30463  003E04  257D               	addwf	?___wmul& (0+255),w,b
 30464  003E06  6ED9               	movwf	fsr2l,c
 30465  003E08  0E06               	movlw	high _OsAlarms
 30466  003E0A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30467  003E0C  6EDA               	movwf	fsr2h,c
 30468  003E0E  0E01               	movlw	1
 30469  003E10  6EDF               	movwf	indf2,c
 30470                           
 30471                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 30472  003E12  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30473  003E16  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30474  003E1A  0E00               	movlw	0
 30475  003E1C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30476  003E1E  0E0B               	movlw	11
 30477  003E20  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30478  003E22  EC36  F02F         	call	___wmul	;wreg free
 30479  003E26  0E01               	movlw	1
 30480  003E28  0100               	movlb	0	; () banked
 30481  003E2A  277D               	addwf	?___wmul& (0+255),f,b
 30482  003E2C  0E00               	movlw	0
 30483  003E2E  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30484  003E30  0E00               	movlw	low _OsAlarms
 30485  003E32  257D               	addwf	?___wmul& (0+255),w,b
 30486  003E34  6ED9               	movwf	fsr2l,c
 30487  003E36  0E06               	movlw	high _OsAlarms
 30488  003E38  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30489  003E3A  6EDA               	movwf	fsr2h,c
 30490  003E3C  6ADE               	clrf	postinc2,c
 30491  003E3E  6ADE               	clrf	postinc2,c
 30492  003E40  6ADE               	clrf	postinc2,c
 30493  003E42  6ADD               	clrf	postdec2,c
 30494                           
 30495                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 30496  003E44  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30497  003E48  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30498  003E4C  0E00               	movlw	0
 30499  003E4E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30500  003E50  0E0B               	movlw	11
 30501  003E52  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30502  003E54  EC36  F02F         	call	___wmul	;wreg free
 30503  003E58  0E05               	movlw	5
 30504  003E5A  0100               	movlb	0	; () banked
 30505  003E5C  277D               	addwf	?___wmul& (0+255),f,b
 30506  003E5E  0E00               	movlw	0
 30507  003E60  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30508  003E62  0E00               	movlw	low _OsAlarms
 30509  003E64  257D               	addwf	?___wmul& (0+255),w,b
 30510  003E66  6ED9               	movwf	fsr2l,c
 30511  003E68  0E06               	movlw	high _OsAlarms
 30512  003E6A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30513  003E6C  6EDA               	movwf	fsr2h,c
 30514  003E6E  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 30515  003E72  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 30516  003E76  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 30517  003E7A  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 30518                           
 30519                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 30520  003E7E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30521  003E82  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30522  003E86  0E00               	movlw	0
 30523  003E88  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30524  003E8A  0E0B               	movlw	11
 30525  003E8C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30526  003E8E  EC36  F02F         	call	___wmul	;wreg free
 30527  003E92  0E09               	movlw	9
 30528  003E94  0100               	movlb	0	; () banked
 30529  003E96  277D               	addwf	?___wmul& (0+255),f,b
 30530  003E98  0E00               	movlw	0
 30531  003E9A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30532  003E9C  0E00               	movlw	low _OsAlarms
 30533  003E9E  257D               	addwf	?___wmul& (0+255),w,b
 30534  003EA0  6ED9               	movwf	fsr2l,c
 30535  003EA2  0E06               	movlw	high _OsAlarms
 30536  003EA4  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30537  003EA6  6EDA               	movwf	fsr2h,c
 30538  003EA8  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 30539  003EAC  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 30540                           
 30541                           ; BSR set to: 0
 30542  003EB0  0012               	return		;funcret
 30543  003EB2                     __end_of_OsAlrm_SetOsAlarm:
 30544                           	opt stack 0
 30545                           tosu	equ	0xFFF
 30546                           tosh	equ	0xFFE
 30547                           tosl	equ	0xFFD
 30548                           pclath	equ	0xFFA
 30549                           tblptru	equ	0xFF8
 30550                           tblptrh	equ	0xFF7
 30551                           tblptrl	equ	0xFF6
 30552                           tablat	equ	0xFF5
 30553                           prodh	equ	0xFF4
 30554                           prodl	equ	0xFF3
 30555                           intcon	equ	0xFF2
 30556                           intcon2	equ	0xFF1
 30557                           intcon3	equ	0xFF0
 30558                           indf0	equ	0xFEF
 30559                           postinc0	equ	0xFEE
 30560                           plusw0	equ	0xFEB
 30561                           fsr0h	equ	0xFEA
 30562                           fsr0l	equ	0xFE9
 30563                           wreg	equ	0xFE8
 30564                           indf1	equ	0xFE7
 30565                           postinc1	equ	0xFE6
 30566                           postdec1	equ	0xFE5
 30567                           plusw1	equ	0xFE3
 30568                           fsr1h	equ	0xFE2
 30569                           fsr1l	equ	0xFE1
 30570                           indf2	equ	0xFDF
 30571                           postinc2	equ	0xFDE
 30572                           postdec2	equ	0xFDD
 30573                           plusw2	equ	0xFDB
 30574                           fsr2h	equ	0xFDA
 30575                           fsr2l	equ	0xFD9
 30576                           status	equ	0xFD8
 30577                           
 30578 ;; *************** function ___wmul *****************
 30579 ;; Defined at:
 30580 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 30581 ;; Parameters:    Size  Location     Type
 30582 ;;  multiplier      2   29[BANK0 ] unsigned int 
 30583 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 30584 ;; Auto vars:     Size  Location     Type
 30585 ;;  product         2   33[BANK0 ] unsigned int 
 30586 ;; Return value:  Size  Location     Type
 30587 ;;                  2   29[BANK0 ] unsigned int 
 30588 ;; Registers used:
 30589 ;;		wreg, status,2, status,0, prodl, prodh
 30590 ;; Tracked objects:
 30591 ;;		On entry : 0/0
 30592 ;;		On exit  : 0/0
 30593 ;;		Unchanged: 0/0
 30594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30595 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30598 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30599 ;;Total ram usage:        6 bytes
 30600 ;; Hardware stack levels used:    1
 30601 ;; Hardware stack levels required when called:   11
 30602 ;; This function calls:
 30603 ;;		Nothing
 30604 ;; This function is called by:
 30605 ;;		_OsAlrm_SetOsAlarm
 30606 ;;		_secondsAppTimer
 30607 ;;		_atoi
 30608 ;; This function uses a non-reentrant model
 30609 ;;
 30610                           
 30611                           	psect	text140
 30612  005E6C                     __ptext140:
 30613                           	opt stack 0
 30614  005E6C                     ___wmul:
 30615                           	opt stack 13
 30616                           
 30617                           ; BSR set to: 0
 30618                           ;incstack = 0
 30619  005E6C  0100               	movlb	0	; () banked
 30620  005E6E  517D               	movf	___wmul@multiplier& (0+255),w,b
 30621  005E70  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30622  005E72  CFF3 F081          	movff	prodl,___wmul@product
 30623  005E76  CFF4 F082          	movff	prodh,___wmul@product+1
 30624  005E7A  517D               	movf	___wmul@multiplier& (0+255),w,b
 30625  005E7C  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 30626  005E7E  50F3               	movf	prodl,w,c
 30627  005E80  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30628  005E82  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 30629  005E84  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30630  005E86  50F3               	movf	prodl,w,c
 30631  005E88  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30632                           
 30633                           ; BSR set to: 0
 30634  005E8A  C081  F07D         	movff	___wmul@product,?___wmul
 30635  005E8E  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 30636  005E92  0012               	return	
 30637  005E94                     __end_of___wmul:
 30638                           	opt stack 0
 30639                           tosu	equ	0xFFF
 30640                           tosh	equ	0xFFE
 30641                           tosl	equ	0xFFD
 30642                           pclath	equ	0xFFA
 30643                           tblptru	equ	0xFF8
 30644                           tblptrh	equ	0xFF7
 30645                           tblptrl	equ	0xFF6
 30646                           tablat	equ	0xFF5
 30647                           prodh	equ	0xFF4
 30648                           prodl	equ	0xFF3
 30649                           intcon	equ	0xFF2
 30650                           intcon2	equ	0xFF1
 30651                           intcon3	equ	0xFF0
 30652                           indf0	equ	0xFEF
 30653                           postinc0	equ	0xFEE
 30654                           plusw0	equ	0xFEB
 30655                           fsr0h	equ	0xFEA
 30656                           fsr0l	equ	0xFE9
 30657                           wreg	equ	0xFE8
 30658                           indf1	equ	0xFE7
 30659                           postinc1	equ	0xFE6
 30660                           postdec1	equ	0xFE5
 30661                           plusw1	equ	0xFE3
 30662                           fsr1h	equ	0xFE2
 30663                           fsr1l	equ	0xFE1
 30664                           indf2	equ	0xFDF
 30665                           postinc2	equ	0xFDE
 30666                           postdec2	equ	0xFDD
 30667                           plusw2	equ	0xFDB
 30668                           fsr2h	equ	0xFDA
 30669                           fsr2l	equ	0xFD9
 30670                           status	equ	0xFD8
 30671                           
 30672 ;; *************** function _I2c_InitI2cModule *****************
 30673 ;; Defined at:
 30674 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30675 ;; Parameters:    Size  Location     Type
 30676 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 30677 ;;		 -> I2cConfig(10), 
 30678 ;; Auto vars:     Size  Location     Type
 30679 ;;		None
 30680 ;; Return value:  Size  Location     Type
 30681 ;;                  1    wreg      void 
 30682 ;; Registers used:
 30683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30684 ;; Tracked objects:
 30685 ;;		On entry : 0/0
 30686 ;;		On exit  : 0/0
 30687 ;;		Unchanged: 0/0
 30688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30691 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30692 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30693 ;;Total ram usage:        4 bytes
 30694 ;; Hardware stack levels used:    1
 30695 ;; Hardware stack levels required when called:   13
 30696 ;; This function calls:
 30697 ;;		_SetBaudRate
 30698 ;; This function is called by:
 30699 ;;		_I2cSlv_MainTask
 30700 ;; This function uses a non-reentrant model
 30701 ;;
 30702                           
 30703                           	psect	text141
 30704  004E10                     __ptext141:
 30705                           	opt stack 0
 30706  004E10                     _I2c_InitI2cModule:
 30707                           	opt stack 14
 30708                           
 30709                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 30710                           
 30711                           ; BSR set to: 0
 30712                           ;incstack = 0
 30713  004E10  8295               	bsf	3989,1,c	;volatile
 30714                           
 30715                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 30716  004E12  8095               	bsf	3989,0,c	;volatile
 30717                           
 30718                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 30719  004E14  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 30720  004E18  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 30721  004E1C  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 30722  004E20  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 30723  004E24  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 30724  004E28  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 30725  004E2C  0100               	movlb	0	; () banked
 30726  004E2E  EE20 F004          	lfsr	2,4
 30727  004E32  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30728  004E34  26D9               	addwf	fsr2l,f,c
 30729  004E36  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30730  004E38  22DA               	addwfc	fsr2h,f,c
 30731  004E3A  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 30732  004E3E  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 30733  004E42  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 30734  004E46  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 30735  004E4A  EC52  F02B         	call	_SetBaudRate	;wreg free
 30736                           
 30737                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 30738  004E4E  0100               	movlb	0	; () banked
 30739  004E50  EE20 F008          	lfsr	2,8
 30740  004E54  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30741  004E56  26D9               	addwf	fsr2l,f,c
 30742  004E58  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30743  004E5A  22DA               	addwfc	fsr2h,f,c
 30744  004E5C  50DF               	movf	indf2,w,c
 30745  004E5E  1272               	iorwf	3954,f,c	;volatile
 30746                           
 30747                           ; BSR set to: 0
 30748                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 30749  004E60  EE20 F009          	lfsr	2,9
 30750  004E64  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30751  004E66  26D9               	addwf	fsr2l,f,c
 30752  004E68  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30753  004E6A  22DA               	addwfc	fsr2h,f,c
 30754  004E6C  50DF               	movf	indf2,w,c
 30755  004E6E  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 30756  004E70  0E05               	movlw	5
 30757  004E72  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 30758  004E74                     u13195:
 30759  004E74  90D8               	bcf	status,0,c
 30760  004E76  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 30761  004E78  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 30762  004E7A  D7FC               	goto	u13195
 30763  004E7C  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 30764  004E7E  1272               	iorwf	3954,f,c	;volatile
 30765                           
 30766                           ; BSR set to: 0
 30767  004E80  0012               	return		;funcret
 30768  004E82                     __end_of_I2c_InitI2cModule:
 30769                           	opt stack 0
 30770                           tosu	equ	0xFFF
 30771                           tosh	equ	0xFFE
 30772                           tosl	equ	0xFFD
 30773                           pclath	equ	0xFFA
 30774                           tblptru	equ	0xFF8
 30775                           tblptrh	equ	0xFF7
 30776                           tblptrl	equ	0xFF6
 30777                           tablat	equ	0xFF5
 30778                           prodh	equ	0xFF4
 30779                           prodl	equ	0xFF3
 30780                           intcon	equ	0xFF2
 30781                           intcon2	equ	0xFF1
 30782                           intcon3	equ	0xFF0
 30783                           indf0	equ	0xFEF
 30784                           postinc0	equ	0xFEE
 30785                           plusw0	equ	0xFEB
 30786                           fsr0h	equ	0xFEA
 30787                           fsr0l	equ	0xFE9
 30788                           wreg	equ	0xFE8
 30789                           indf1	equ	0xFE7
 30790                           postinc1	equ	0xFE6
 30791                           postdec1	equ	0xFE5
 30792                           plusw1	equ	0xFE3
 30793                           fsr1h	equ	0xFE2
 30794                           fsr1l	equ	0xFE1
 30795                           indf2	equ	0xFDF
 30796                           postinc2	equ	0xFDE
 30797                           postdec2	equ	0xFDD
 30798                           plusw2	equ	0xFDB
 30799                           fsr2h	equ	0xFDA
 30800                           fsr2l	equ	0xFD9
 30801                           status	equ	0xFD8
 30802                           
 30803 ;; *************** function _SetBaudRate *****************
 30804 ;; Defined at:
 30805 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30806 ;; Parameters:    Size  Location     Type
 30807 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 30808 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 30809 ;; Auto vars:     Size  Location     Type
 30810 ;;		None
 30811 ;; Return value:  Size  Location     Type
 30812 ;;                  1    wreg      void 
 30813 ;; Registers used:
 30814 ;;		wreg, status,2, status,0, cstack
 30815 ;; Tracked objects:
 30816 ;;		On entry : 0/0
 30817 ;;		On exit  : 0/0
 30818 ;;		Unchanged: 0/0
 30819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30820 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30823 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30824 ;;Total ram usage:       12 bytes
 30825 ;; Hardware stack levels used:    1
 30826 ;; Hardware stack levels required when called:   12
 30827 ;; This function calls:
 30828 ;;		___lldiv
 30829 ;; This function is called by:
 30830 ;;		_I2c_InitI2cModule
 30831 ;; This function uses a non-reentrant model
 30832 ;;
 30833                           
 30834                           	psect	text142
 30835  0056A4                     __ptext142:
 30836                           	opt stack 0
 30837  0056A4                     _SetBaudRate:
 30838                           	opt stack 14
 30839                           
 30840                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 30841                           
 30842                           ; BSR set to: 0
 30843                           ;incstack = 0
 30844  0056A4  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 30845  0056A8  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 30846  0056AC  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 30847  0056B0  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 30848  0056B4  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 30849  0056B8  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 30850  0056BC  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 30851  0056C0  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 30852  0056C4  0E02               	movlw	2
 30853  0056C6                     u12145:
 30854  0056C6  90D8               	bcf	status,0,c
 30855  0056C8  0100               	movlb	0	; () banked
 30856  0056CA  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 30857  0056CC  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 30858  0056CE  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 30859  0056D0  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 30860  0056D2  2EE8               	decfsz	wreg,f,c
 30861  0056D4  D7F8               	goto	u12145
 30862  0056D6  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 30863  0056DA  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 30864  0056DE  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 30865  0056E2  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 30866  0056E6  EC4C  F026         	call	___lldiv	;wreg free
 30867  0056EA  0100               	movlb	0	; () banked
 30868  0056EC  0589               	decf	?___lldiv& (0+255),w,b
 30869  0056EE  6E74               	movwf	3956,c	;volatile
 30870                           
 30871                           ; BSR set to: 0
 30872  0056F0  0012               	return		;funcret
 30873  0056F2                     __end_of_SetBaudRate:
 30874                           	opt stack 0
 30875                           tosu	equ	0xFFF
 30876                           tosh	equ	0xFFE
 30877                           tosl	equ	0xFFD
 30878                           pclath	equ	0xFFA
 30879                           tblptru	equ	0xFF8
 30880                           tblptrh	equ	0xFF7
 30881                           tblptrl	equ	0xFF6
 30882                           tablat	equ	0xFF5
 30883                           prodh	equ	0xFF4
 30884                           prodl	equ	0xFF3
 30885                           intcon	equ	0xFF2
 30886                           intcon2	equ	0xFF1
 30887                           intcon3	equ	0xFF0
 30888                           indf0	equ	0xFEF
 30889                           postinc0	equ	0xFEE
 30890                           plusw0	equ	0xFEB
 30891                           fsr0h	equ	0xFEA
 30892                           fsr0l	equ	0xFE9
 30893                           wreg	equ	0xFE8
 30894                           indf1	equ	0xFE7
 30895                           postinc1	equ	0xFE6
 30896                           postdec1	equ	0xFE5
 30897                           plusw1	equ	0xFE3
 30898                           fsr1h	equ	0xFE2
 30899                           fsr1l	equ	0xFE1
 30900                           indf2	equ	0xFDF
 30901                           postinc2	equ	0xFDE
 30902                           postdec2	equ	0xFDD
 30903                           plusw2	equ	0xFDB
 30904                           fsr2h	equ	0xFDA
 30905                           fsr2l	equ	0xFD9
 30906                           status	equ	0xFD8
 30907                           
 30908 ;; *************** function ___lldiv *****************
 30909 ;; Defined at:
 30910 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 30911 ;; Parameters:    Size  Location     Type
 30912 ;;  dividend        4   41[BANK0 ] unsigned long 
 30913 ;;  divisor         4   45[BANK0 ] unsigned long 
 30914 ;; Auto vars:     Size  Location     Type
 30915 ;;  quotient        4   49[BANK0 ] unsigned long 
 30916 ;;  counter         1   53[BANK0 ] unsigned char 
 30917 ;; Return value:  Size  Location     Type
 30918 ;;                  4   41[BANK0 ] unsigned long 
 30919 ;; Registers used:
 30920 ;;		wreg, status,2, status,0
 30921 ;; Tracked objects:
 30922 ;;		On entry : 0/0
 30923 ;;		On exit  : 0/0
 30924 ;;		Unchanged: 0/0
 30925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30926 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30927 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30929 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30930 ;;Total ram usage:       13 bytes
 30931 ;; Hardware stack levels used:    1
 30932 ;; Hardware stack levels required when called:   11
 30933 ;; This function calls:
 30934 ;;		Nothing
 30935 ;; This function is called by:
 30936 ;;		_SetBaudRate
 30937 ;;		_Tmr_TmrBPrSet
 30938 ;;		_SetUartBaudRate
 30939 ;; This function uses a non-reentrant model
 30940 ;;
 30941                           
 30942                           	psect	text143
 30943  004C98                     __ptext143:
 30944                           	opt stack 0
 30945  004C98                     ___lldiv:
 30946                           	opt stack 15
 30947                           
 30948                           ; BSR set to: 0
 30949                           ;incstack = 0
 30950  004C98  0E00               	movlw	0
 30951  004C9A  0100               	movlb	0	; () banked
 30952  004C9C  6F91               	movwf	___lldiv@quotient& (0+255),b
 30953  004C9E  0E00               	movlw	0
 30954  004CA0  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 30955  004CA2  0E00               	movlw	0
 30956  004CA4  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 30957  004CA6  0E00               	movlw	0
 30958  004CA8  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 30959                           
 30960                           ; BSR set to: 0
 30961  004CAA  518D               	movf	___lldiv@divisor& (0+255),w,b
 30962  004CAC  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30963  004CAE  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30964  004CB0  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30965  004CB2  B4D8               	btfsc	status,2,c
 30966  004CB4  D02A               	goto	l3032
 30967                           
 30968                           ; BSR set to: 0
 30969  004CB6  0E01               	movlw	1
 30970  004CB8  6F95               	movwf	___lldiv@counter& (0+255),b
 30971  004CBA  D006               	goto	l3027
 30972  004CBC                     
 30973                           ; BSR set to: 0
 30974                           
 30975                           ; BSR set to: 0
 30976  004CBC  90D8               	bcf	status,0,c
 30977  004CBE  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 30978  004CC0  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30979  004CC2  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30980  004CC4  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30981  004CC6  2B95               	incf	___lldiv@counter& (0+255),f,b
 30982  004CC8                     l3027:
 30983                           
 30984                           ; BSR set to: 0
 30985                           
 30986                           ; BSR set to: 0
 30987  004CC8  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30988  004CCA  D7F8               	goto	l3028
 30989  004CCC                     u11240:
 30990                           
 30991                           ; BSR set to: 0
 30992                           
 30993                           ; BSR set to: 0
 30994                           
 30995                           ; BSR set to: 0
 30996  004CCC  90D8               	bcf	status,0,c
 30997  004CCE  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 30998  004CD0  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30999  004CD2  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 31000  004CD4  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 31001                           
 31002                           ; BSR set to: 0
 31003  004CD6  518D               	movf	___lldiv@divisor& (0+255),w,b
 31004  004CD8  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 31005  004CDA  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 31006  004CDC  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 31007  004CDE  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 31008  004CE0  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 31009  004CE2  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 31010  004CE4  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 31011  004CE6  A0D8               	btfss	status,0,c
 31012  004CE8  D009               	goto	l3031
 31013                           
 31014                           ; BSR set to: 0
 31015  004CEA  518D               	movf	___lldiv@divisor& (0+255),w,b
 31016  004CEC  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 31017  004CEE  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 31018  004CF0  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 31019  004CF2  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 31020  004CF4  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 31021  004CF6  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 31022  004CF8  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 31023                           
 31024                           ; BSR set to: 0
 31025  004CFA  8191               	bsf	___lldiv@quotient& (0+255),0,b
 31026  004CFC                     l3031:
 31027                           
 31028                           ; BSR set to: 0
 31029                           
 31030                           ; BSR set to: 0
 31031  004CFC  90D8               	bcf	status,0,c
 31032  004CFE  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 31033  004D00  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 31034  004D02  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 31035  004D04  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 31036                           
 31037                           ; BSR set to: 0
 31038  004D06  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 31039  004D08  D7E1               	goto	u11240
 31040  004D0A                     l3032:
 31041                           
 31042                           ; BSR set to: 0
 31043                           
 31044                           ; BSR set to: 0
 31045  004D0A  C091  F089         	movff	___lldiv@quotient,?___lldiv
 31046  004D0E  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 31047  004D12  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 31048  004D16  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 31049                           
 31050                           ; BSR set to: 0
 31051  004D1A  0012               	return		;funcret
 31052  004D1C                     __end_of___lldiv:
 31053                           	opt stack 0
 31054                           tosu	equ	0xFFF
 31055                           tosh	equ	0xFFE
 31056                           tosl	equ	0xFFD
 31057                           pclath	equ	0xFFA
 31058                           tblptru	equ	0xFF8
 31059                           tblptrh	equ	0xFF7
 31060                           tblptrl	equ	0xFF6
 31061                           tablat	equ	0xFF5
 31062                           prodh	equ	0xFF4
 31063                           prodl	equ	0xFF3
 31064                           intcon	equ	0xFF2
 31065                           intcon2	equ	0xFF1
 31066                           intcon3	equ	0xFF0
 31067                           indf0	equ	0xFEF
 31068                           postinc0	equ	0xFEE
 31069                           plusw0	equ	0xFEB
 31070                           fsr0h	equ	0xFEA
 31071                           fsr0l	equ	0xFE9
 31072                           wreg	equ	0xFE8
 31073                           indf1	equ	0xFE7
 31074                           postinc1	equ	0xFE6
 31075                           postdec1	equ	0xFE5
 31076                           plusw1	equ	0xFE3
 31077                           fsr1h	equ	0xFE2
 31078                           fsr1l	equ	0xFE1
 31079                           indf2	equ	0xFDF
 31080                           postinc2	equ	0xFDE
 31081                           postdec2	equ	0xFDD
 31082                           plusw2	equ	0xFDB
 31083                           fsr2h	equ	0xFDA
 31084                           fsr2l	equ	0xFD9
 31085                           status	equ	0xFD8
 31086                           
 31087 ;; *************** function _I2cSetConfig *****************
 31088 ;; Defined at:
 31089 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31090 ;; Parameters:    Size  Location     Type
 31091 ;;		None
 31092 ;; Auto vars:     Size  Location     Type
 31093 ;;		None
 31094 ;; Return value:  Size  Location     Type
 31095 ;;                  1    wreg      void 
 31096 ;; Registers used:
 31097 ;;		wreg, status,2
 31098 ;; Tracked objects:
 31099 ;;		On entry : 0/0
 31100 ;;		On exit  : 0/0
 31101 ;;		Unchanged: 0/0
 31102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31107 ;;Total ram usage:        0 bytes
 31108 ;; Hardware stack levels used:    1
 31109 ;; Hardware stack levels required when called:   11
 31110 ;; This function calls:
 31111 ;;		Nothing
 31112 ;; This function is called by:
 31113 ;;		_I2cSlv_MainTask
 31114 ;; This function uses a non-reentrant model
 31115 ;;
 31116                           
 31117                           	psect	text144
 31118  005DEC                     __ptext144:
 31119                           	opt stack 0
 31120  005DEC                     _I2cSetConfig:
 31121                           	opt stack 16
 31122                           
 31123                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 31124                           
 31125                           ; BSR set to: 0
 31126                           ;incstack = 0
 31127  005DEC  0E80               	movlw	128
 31128  005DEE  0103               	movlb	3	; () banked
 31129  005DF0  6F52               	movwf	_I2cConfig& (0+255),b
 31130  005DF2  0E1A               	movlw	26
 31131  005DF4  6F53               	movwf	(_I2cConfig+1)& (0+255),b
 31132  005DF6  0E06               	movlw	6
 31133  005DF8  6F54               	movwf	(_I2cConfig+2)& (0+255),b
 31134  005DFA  0E00               	movlw	0
 31135  005DFC  6F55               	movwf	(_I2cConfig+3)& (0+255),b
 31136                           
 31137                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 31138  005DFE  0E00               	movlw	0
 31139  005E00  6F56               	movwf	(_I2cConfig+4)& (0+255),b
 31140  005E02  0E6C               	movlw	108
 31141  005E04  6F57               	movwf	(_I2cConfig+5)& (0+255),b
 31142  005E06  0EDC               	movlw	220
 31143  005E08  6F58               	movwf	(_I2cConfig+6)& (0+255),b
 31144  005E0A  0E02               	movlw	2
 31145  005E0C  6F59               	movwf	(_I2cConfig+7)& (0+255),b
 31146                           
 31147                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 31148  005E0E  0E08               	movlw	8
 31149  005E10  6F5A               	movwf	(_I2cConfig+8)& (0+255),b
 31150                           
 31151                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 31152  005E12  0E01               	movlw	1
 31153  005E14  6F5B               	movwf	(_I2cConfig+9)& (0+255),b
 31154                           
 31155                           ; BSR set to: 3
 31156  005E16  0012               	return		;funcret
 31157  005E18                     __end_of_I2cSetConfig:
 31158                           	opt stack 0
 31159                           tosu	equ	0xFFF
 31160                           tosh	equ	0xFFE
 31161                           tosl	equ	0xFFD
 31162                           pclath	equ	0xFFA
 31163                           tblptru	equ	0xFF8
 31164                           tblptrh	equ	0xFF7
 31165                           tblptrl	equ	0xFF6
 31166                           tablat	equ	0xFF5
 31167                           prodh	equ	0xFF4
 31168                           prodl	equ	0xFF3
 31169                           intcon	equ	0xFF2
 31170                           intcon2	equ	0xFF1
 31171                           intcon3	equ	0xFF0
 31172                           indf0	equ	0xFEF
 31173                           postinc0	equ	0xFEE
 31174                           plusw0	equ	0xFEB
 31175                           fsr0h	equ	0xFEA
 31176                           fsr0l	equ	0xFE9
 31177                           wreg	equ	0xFE8
 31178                           indf1	equ	0xFE7
 31179                           postinc1	equ	0xFE6
 31180                           postdec1	equ	0xFE5
 31181                           plusw1	equ	0xFE3
 31182                           fsr1h	equ	0xFE2
 31183                           fsr1l	equ	0xFE1
 31184                           indf2	equ	0xFDF
 31185                           postinc2	equ	0xFDE
 31186                           postdec2	equ	0xFDD
 31187                           plusw2	equ	0xFDB
 31188                           fsr2h	equ	0xFDA
 31189                           fsr2l	equ	0xFD9
 31190                           status	equ	0xFD8
 31191                           
 31192 ;; *************** function _I2cSendMsgSm *****************
 31193 ;; Defined at:
 31194 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31195 ;; Parameters:    Size  Location     Type
 31196 ;;		None
 31197 ;; Auto vars:     Size  Location     Type
 31198 ;;		None
 31199 ;; Return value:  Size  Location     Type
 31200 ;;                  1    wreg      void 
 31201 ;; Registers used:
 31202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31203 ;; Tracked objects:
 31204 ;;		On entry : 0/0
 31205 ;;		On exit  : 0/0
 31206 ;;		Unchanged: 0/0
 31207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31212 ;;Total ram usage:        0 bytes
 31213 ;; Hardware stack levels used:    1
 31214 ;; Hardware stack levels required when called:   13
 31215 ;; This function calls:
 31216 ;;		_I2c_ReadData
 31217 ;;		_I2c_WriteData
 31218 ;;		_ReceiveEvt
 31219 ;; This function is called by:
 31220 ;;		_I2cSlv_MainTask
 31221 ;; This function uses a non-reentrant model
 31222 ;;
 31223                           
 31224                           	psect	text145
 31225  003EB2                     __ptext145:
 31226                           	opt stack 0
 31227  003EB2                     _I2cSendMsgSm:
 31228                           	opt stack 14
 31229                           
 31230                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 31231                           ;i2c_slv.c: 122: switch(I2cComState)
 31232                           
 31233                           ; BSR set to: 3
 31234                           ;incstack = 0
 31235  003EB2  D04F               	goto	l1379
 31236  003EB4                     
 31237                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 31238  003EB4  0ED8               	movlw	low _I2cWriteDataEvt
 31239  003EB6  0100               	movlb	0	; () banked
 31240  003EB8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31241  003EBA  0E00               	movlw	high _I2cWriteDataEvt
 31242  003EBC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31243  003EBE  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 31244  003EC2  0900               	iorlw	0
 31245  003EC4  B4D8               	btfsc	status,2,c
 31246  003EC6  D007               	goto	l1381
 31247                           
 31248                           ;i2c_slv.c: 127: {
 31249                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 31250  003EC8  0E01               	movlw	1
 31251  003ECA  0101               	movlb	1	; () banked
 31252  003ECC  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31253                           
 31254                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 31255  003ECE  0E01               	movlw	1
 31256  003ED0  0100               	movlb	0	; () banked
 31257  003ED2  6FCE               	movwf	_I2cComSts& (0+255),b
 31258                           
 31259                           ;i2c_slv.c: 132: }
 31260  003ED4  0012               	return	
 31261  003ED6                     l1381:
 31262                           
 31263                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 31264                           
 31265                           ; BSR set to: 0
 31266  003ED6  0ED7               	movlw	low _I2cReadDataEvt
 31267  003ED8  0100               	movlb	0	; () banked
 31268  003EDA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31269  003EDC  0E00               	movlw	high _I2cReadDataEvt
 31270  003EDE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31271  003EE0  ECDF  F02E         	call	_ReceiveEvt	;wreg free
 31272  003EE4  0900               	iorlw	0
 31273  003EE6  B4D8               	btfsc	status,2,c
 31274  003EE8  D007               	goto	l1383
 31275                           
 31276                           ;i2c_slv.c: 134: {
 31277                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 31278  003EEA  0E02               	movlw	2
 31279  003EEC  0101               	movlb	1	; () banked
 31280  003EEE  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31281                           
 31282                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 31283  003EF0  0E02               	movlw	2
 31284  003EF2  0100               	movlb	0	; () banked
 31285  003EF4  6FCE               	movwf	_I2cComSts& (0+255),b
 31286                           
 31287                           ;i2c_slv.c: 139: }
 31288  003EF6  0012               	return	
 31289  003EF8                     l1383:
 31290                           
 31291                           ;i2c_slv.c: 140: else
 31292                           ;i2c_slv.c: 141: {
 31293                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 31294                           
 31295                           ; BSR set to: 0
 31296  003EF8  0E00               	movlw	0
 31297  003EFA  0100               	movlb	0	; () banked
 31298  003EFC  6FCE               	movwf	_I2cComSts& (0+255),b
 31299                           
 31300                           ; BSR set to: 0
 31301                           ;i2c_slv.c: 144: }
 31302                           ;i2c_slv.c: 145: break;
 31303                           
 31304                           ; BSR set to: 0
 31305  003EFE  0012               	return	
 31306  003F00                     
 31307                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 31308                           
 31309                           ; BSR set to: 0
 31310  003F00  0E9E               	movlw	low _I2cTxPacket
 31311  003F02  0100               	movlb	0	; () banked
 31312  003F04  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 31313  003F06  0E03               	movlw	high _I2cTxPacket
 31314  003F08  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 31315  003F0A  EC5D  F00F         	call	_I2c_WriteData	;wreg free
 31316  003F0E  0900               	iorlw	0
 31317  003F10  B4D8               	btfsc	status,2,c
 31318  003F12  0012               	return	
 31319                           
 31320                           ;i2c_slv.c: 150: {
 31321                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 31322  003F14  0E03               	movlw	3
 31323  003F16  0101               	movlb	1	; () banked
 31324  003F18  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31325                           
 31326                           ; BSR set to: 1
 31327                           ;i2c_slv.c: 153: }
 31328                           ;i2c_slv.c: 154: break;
 31329  003F1A  0012               	return	
 31330  003F1C                     
 31331                           ; BSR set to: 1
 31332                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 31333                           
 31334                           ; BSR set to: 1
 31335  003F1C  0E98               	movlw	low _I2cRxPacket
 31336  003F1E  0100               	movlb	0	; () banked
 31337  003F20  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 31338  003F22  0E03               	movlw	high _I2cRxPacket
 31339  003F24  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 31340  003F26  EC14  F010         	call	_I2c_ReadData	;wreg free
 31341  003F2A  0900               	iorlw	0
 31342  003F2C  B4D8               	btfsc	status,2,c
 31343  003F2E  0012               	return	
 31344                           
 31345                           ;i2c_slv.c: 159: {
 31346                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 31347  003F30  0E04               	movlw	4
 31348  003F32  0101               	movlb	1	; () banked
 31349  003F34  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31350                           
 31351                           ; BSR set to: 1
 31352                           ;i2c_slv.c: 162: }
 31353                           ;i2c_slv.c: 164: break;
 31354  003F36  0012               	return	
 31355  003F38                     
 31356                           ; BSR set to: 1
 31357                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 31358                           
 31359                           ; BSR set to: 1
 31360  003F38  0E00               	movlw	0
 31361  003F3A  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31362                           
 31363                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 31364  003F3C  0E00               	movlw	0
 31365  003F3E  0100               	movlb	0	; () banked
 31366  003F40  6FCE               	movwf	_I2cComSts& (0+255),b
 31367                           
 31368                           ;i2c_slv.c: 171: break;
 31369  003F42  0012               	return	
 31370  003F44                     
 31371                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 31372                           
 31373                           ; BSR set to: 0
 31374  003F44  0E00               	movlw	0
 31375  003F46  0101               	movlb	1	; () banked
 31376  003F48  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31377                           
 31378                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 31379  003F4A  0E00               	movlw	0
 31380  003F4C  0100               	movlb	0	; () banked
 31381  003F4E  6FCE               	movwf	_I2cComSts& (0+255),b
 31382                           
 31383                           ; BSR set to: 0
 31384                           ;i2c_slv.c: 182: }
 31385                           
 31386                           ; BSR set to: 0
 31387                           ;i2c_slv.c: 181: break;
 31388                           
 31389                           ;i2c_slv.c: 180: default:
 31390                           
 31391                           ;i2c_slv.c: 178: break;
 31392  003F50  0012               	return	
 31393  003F52                     l1379:
 31394                           
 31395                           ; BSR set to: 0
 31396  003F52  0101               	movlb	1	; () banked
 31397  003F54  51E9               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 31398                           
 31399                           ; Switch size 1, requested type "space"
 31400                           ; Number of cases is 5, Range of values is 0 to 4
 31401                           ; switch strategies available:
 31402                           ; Name         Instructions Cycles
 31403                           ; simple_byte           16     9 (average)
 31404                           ;	Chosen strategy is simple_byte
 31405  003F56  0A00               	xorlw	0	; case 0
 31406  003F58  B4D8               	btfsc	status,2,c
 31407  003F5A  D7AC               	goto	l1380
 31408  003F5C  0A01               	xorlw	1	; case 1
 31409  003F5E  B4D8               	btfsc	status,2,c
 31410  003F60  D7CF               	goto	l1386
 31411  003F62  0A03               	xorlw	3	; case 2
 31412  003F64  B4D8               	btfsc	status,2,c
 31413  003F66  D7DA               	goto	l1388
 31414  003F68  0A01               	xorlw	1	; case 3
 31415  003F6A  B4D8               	btfsc	status,2,c
 31416  003F6C  D7E5               	goto	l1390
 31417  003F6E  0A07               	xorlw	7	; case 4
 31418  003F70  A4D8               	btfss	status,2,c
 31419  003F72  0012               	return	
 31420  003F74  D7E7               	goto	l1391
 31421  003F76                     __end_of_I2cSendMsgSm:
 31422                           	opt stack 0
 31423                           tosu	equ	0xFFF
 31424                           tosh	equ	0xFFE
 31425                           tosl	equ	0xFFD
 31426                           pclath	equ	0xFFA
 31427                           tblptru	equ	0xFF8
 31428                           tblptrh	equ	0xFF7
 31429                           tblptrl	equ	0xFF6
 31430                           tablat	equ	0xFF5
 31431                           prodh	equ	0xFF4
 31432                           prodl	equ	0xFF3
 31433                           intcon	equ	0xFF2
 31434                           intcon2	equ	0xFF1
 31435                           intcon3	equ	0xFF0
 31436                           indf0	equ	0xFEF
 31437                           postinc0	equ	0xFEE
 31438                           plusw0	equ	0xFEB
 31439                           fsr0h	equ	0xFEA
 31440                           fsr0l	equ	0xFE9
 31441                           wreg	equ	0xFE8
 31442                           indf1	equ	0xFE7
 31443                           postinc1	equ	0xFE6
 31444                           postdec1	equ	0xFE5
 31445                           plusw1	equ	0xFE3
 31446                           fsr1h	equ	0xFE2
 31447                           fsr1l	equ	0xFE1
 31448                           indf2	equ	0xFDF
 31449                           postinc2	equ	0xFDE
 31450                           postdec2	equ	0xFDD
 31451                           plusw2	equ	0xFDB
 31452                           fsr2h	equ	0xFDA
 31453                           fsr2l	equ	0xFD9
 31454                           status	equ	0xFD8
 31455                           
 31456 ;; *************** function _ReceiveEvt *****************
 31457 ;; Defined at:
 31458 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31459 ;; Parameters:    Size  Location     Type
 31460 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31461 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 31462 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 31463 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 31464 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 31465 ;;		 -> ActivateRiDetection(1), 
 31466 ;; Auto vars:     Size  Location     Type
 31467 ;;  EventStatus     1   32[BANK0 ] enum E7727
 31468 ;; Return value:  Size  Location     Type
 31469 ;;                  1    wreg      enum E7699
 31470 ;; Registers used:
 31471 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31472 ;; Tracked objects:
 31473 ;;		On entry : 0/0
 31474 ;;		On exit  : 0/0
 31475 ;;		Unchanged: 0/0
 31476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31477 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31481 ;;Total ram usage:        4 bytes
 31482 ;; Hardware stack levels used:    1
 31483 ;; Hardware stack levels required when called:   11
 31484 ;; This function calls:
 31485 ;;		Nothing
 31486 ;; This function is called by:
 31487 ;;		_MdmCntSm
 31488 ;;		_CheckModem
 31489 ;;		_ModemEvtParser
 31490 ;;		_GetSmsSm
 31491 ;;		_SendSmsSm
 31492 ;;		_Mdm_IsSmsReceived
 31493 ;;		_Mdm_IsRinging
 31494 ;;		_GetCallerNumber
 31495 ;;		_InitGprsNetwork
 31496 ;;		_HttpGetMethod
 31497 ;;		_I2cSendMsgSm
 31498 ;;		_I2cSlv_I2cReadMsgSts
 31499 ;;		_RiSm
 31500 ;;		_Mdm_GetSmsData
 31501 ;;		_GsmGprsTerminal
 31502 ;; This function uses a non-reentrant model
 31503 ;;
 31504                           
 31505                           	psect	text146
 31506  005DBE                     __ptext146:
 31507                           	opt stack 0
 31508  005DBE                     _ReceiveEvt:
 31509                           	opt stack 13
 31510                           
 31511                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 31512                           
 31513                           ;incstack = 0
 31514  005DBE  0E00               	movlw	0
 31515  005DC0  0100               	movlb	0	; () banked
 31516  005DC2  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31517                           
 31518                           ; BSR set to: 0
 31519                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 31520  005DC4  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31521  005DC8  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31522  005DCC  0E02               	movlw	2
 31523  005DCE  18DE               	xorwf	postinc2,w,c
 31524  005DD0  A4D8               	btfss	status,2,c
 31525  005DD2  D008               	goto	l832
 31526                           
 31527                           ; BSR set to: 0
 31528                           ;os_ser.c: 106: {
 31529                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 31530  005DD4  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31531  005DD8  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31532  005DDC  0E01               	movlw	1
 31533  005DDE  6EDF               	movwf	indf2,c
 31534                           
 31535                           ; BSR set to: 0
 31536                           ;os_ser.c: 110: EventStatus = EventReceived;
 31537  005DE0  0E01               	movlw	1
 31538  005DE2  D001               	goto	L54
 31539  005DE4                     l832:
 31540                           
 31541                           ; BSR set to: 0
 31542                           ;os_ser.c: 112: else
 31543                           ;os_ser.c: 113: {
 31544                           ;os_ser.c: 115: EventStatus = EventIdle;
 31545                           
 31546                           ; BSR set to: 0
 31547  005DE4  0E00               	movlw	0
 31548  005DE6                     L54:
 31549  005DE6  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31550                           
 31551                           ; BSR set to: 0
 31552                           ;os_ser.c: 116: }
 31553                           ;os_ser.c: 119: return(EventStatus);
 31554  005DE8  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 31555  005DEA  0012               	return	
 31556  005DEC                     __end_of_ReceiveEvt:
 31557                           	opt stack 0
 31558                           tosu	equ	0xFFF
 31559                           tosh	equ	0xFFE
 31560                           tosl	equ	0xFFD
 31561                           pclath	equ	0xFFA
 31562                           tblptru	equ	0xFF8
 31563                           tblptrh	equ	0xFF7
 31564                           tblptrl	equ	0xFF6
 31565                           tablat	equ	0xFF5
 31566                           prodh	equ	0xFF4
 31567                           prodl	equ	0xFF3
 31568                           intcon	equ	0xFF2
 31569                           intcon2	equ	0xFF1
 31570                           intcon3	equ	0xFF0
 31571                           indf0	equ	0xFEF
 31572                           postinc0	equ	0xFEE
 31573                           plusw0	equ	0xFEB
 31574                           fsr0h	equ	0xFEA
 31575                           fsr0l	equ	0xFE9
 31576                           wreg	equ	0xFE8
 31577                           indf1	equ	0xFE7
 31578                           postinc1	equ	0xFE6
 31579                           postdec1	equ	0xFE5
 31580                           plusw1	equ	0xFE3
 31581                           fsr1h	equ	0xFE2
 31582                           fsr1l	equ	0xFE1
 31583                           indf2	equ	0xFDF
 31584                           postinc2	equ	0xFDE
 31585                           postdec2	equ	0xFDD
 31586                           plusw2	equ	0xFDB
 31587                           fsr2h	equ	0xFDA
 31588                           fsr2l	equ	0xFD9
 31589                           status	equ	0xFD8
 31590                           
 31591 ;; *************** function _I2c_WriteData *****************
 31592 ;; Defined at:
 31593 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31594 ;; Parameters:    Size  Location     Type
 31595 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 31596 ;;		 -> I2cTxPacket(5), 
 31597 ;; Auto vars:     Size  Location     Type
 31598 ;;		None
 31599 ;; Return value:  Size  Location     Type
 31600 ;;                  1    wreg      enum E7740
 31601 ;; Registers used:
 31602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31603 ;; Tracked objects:
 31604 ;;		On entry : 0/0
 31605 ;;		On exit  : 0/0
 31606 ;;		Unchanged: 0/0
 31607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31608 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31610 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31611 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31612 ;;Total ram usage:        4 bytes
 31613 ;; Hardware stack levels used:    1
 31614 ;; Hardware stack levels required when called:   12
 31615 ;; This function calls:
 31616 ;;		_CheckAckStatus
 31617 ;;		_CheckTxStatus
 31618 ;;		_StartCondition
 31619 ;;		_StopCondition
 31620 ;;		_WriteByte
 31621 ;; This function is called by:
 31622 ;;		_I2cSendMsgSm
 31623 ;; This function uses a non-reentrant model
 31624 ;;
 31625                           
 31626                           	psect	text147
 31627  001EBA                     __ptext147:
 31628                           	opt stack 0
 31629  001EBA                     _I2c_WriteData:
 31630                           	opt stack 14
 31631                           
 31632                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 31633                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 31634                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 31635                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 31636                           ;i2c_drv.c: 260: switch (I2cWriteState)
 31637                           
 31638                           ; BSR set to: 0
 31639                           ;incstack = 0
 31640  001EBA  D095               	goto	l160
 31641  001EBC                     
 31642                           ;i2c_drv.c: 264: StartCondition();
 31643  001EBC  EC63  F031         	call	_StartCondition	;wreg free
 31644                           
 31645                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 31646  001EC0  0E00               	movlw	0
 31647  001EC2  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31648                           
 31649                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 31650  001EC4  0E01               	movlw	1
 31651  001EC6  D084               	goto	L61
 31652  001EC8                     
 31653                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 31654  001EC8  0100               	movlb	0	; () banked
 31655  001ECA  EE20 F001          	lfsr	2,1
 31656  001ECE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31657  001ED0  26D9               	addwf	fsr2l,f,c
 31658  001ED2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31659  001ED4  22DA               	addwfc	fsr2h,f,c
 31660  001ED6  50DF               	movf	indf2,w,c
 31661  001ED8  6F80               	movwf	??_I2c_WriteData& (0+255),b
 31662  001EDA  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31663  001EDE  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31664  001EE2  50DF               	movf	indf2,w,c
 31665  001EE4  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 31666  001EE6  90D8               	bcf	status,0,c
 31667  001EE8  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 31668  001EEA  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 31669  001EEC  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31670  001EF0  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31671  001EF4  6EDF               	movwf	indf2,c
 31672                           
 31673                           ; BSR set to: 0
 31674                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 31675  001EF6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31676  001EFA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31677  001EFE  50DF               	movf	indf2,w,c
 31678  001F00  EC41  F031         	call	_WriteByte
 31679                           
 31680                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 31681  001F04  0E02               	movlw	2
 31682  001F06  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31683  001F08                     
 31684                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 31685  001F08  EC4B  F031         	call	_CheckTxStatus	;wreg free
 31686  001F0C  0900               	iorlw	0
 31687  001F0E  A4D8               	btfss	status,2,c
 31688  001F10  D089               	goto	l162
 31689                           
 31690                           ;i2c_drv.c: 282: {
 31691                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 31692  001F12  0E03               	movlw	3
 31693  001F14  D01A               	goto	L63
 31694  001F16                     
 31695                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 31696  001F16  0100               	movlb	0	; () banked
 31697  001F18  EE20 F002          	lfsr	2,2
 31698  001F1C  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31699  001F1E  26D9               	addwf	fsr2l,f,c
 31700  001F20  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31701  001F22  22DA               	addwfc	fsr2h,f,c
 31702  001F24  CFDE F080          	movff	postinc2,??_I2c_WriteData
 31703  001F28  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 31704  001F2C  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 31705  001F30  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 31706  001F34  50DF               	movf	indf2,w,c
 31707  001F36  EC41  F031         	call	_WriteByte
 31708                           
 31709                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 31710  001F3A  0E04               	movlw	4
 31711  001F3C  D049               	goto	L61
 31712  001F3E                     
 31713                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 31714  001F3E  EC4B  F031         	call	_CheckTxStatus	;wreg free
 31715  001F42  0900               	iorlw	0
 31716  001F44  A4D8               	btfss	status,2,c
 31717  001F46  D06E               	goto	l162
 31718                           
 31719                           ;i2c_drv.c: 300: {
 31720                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 31721  001F48  0E05               	movlw	5
 31722  001F4A                     L63:
 31723  001F4A  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31724                           
 31725                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 31726  001F4C  0E08               	movlw	8
 31727  001F4E  D040               	goto	L61
 31728  001F50                     
 31729                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 31730  001F50  0100               	movlb	0	; () banked
 31731  001F52  EE20 F004          	lfsr	2,4
 31732  001F56  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31733  001F58  26D9               	addwf	fsr2l,f,c
 31734  001F5A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31735  001F5C  22DA               	addwfc	fsr2h,f,c
 31736  001F5E  50DF               	movf	indf2,w,c
 31737  001F60  B4D8               	btfsc	status,2,c
 31738  001F62  D010               	goto	l170
 31739                           
 31740                           ; BSR set to: 0
 31741                           ;i2c_drv.c: 310: {
 31742                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 31743  001F64  EE20 F004          	lfsr	2,4
 31744  001F68  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31745  001F6A  26D9               	addwf	fsr2l,f,c
 31746  001F6C  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31747  001F6E  22DA               	addwfc	fsr2h,f,c
 31748  001F70  06DF               	decf	indf2,f,c
 31749                           
 31750                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 31751  001F72  EE20 F002          	lfsr	2,2
 31752  001F76  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31753  001F78  26D9               	addwf	fsr2l,f,c
 31754  001F7A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31755  001F7C  22DA               	addwfc	fsr2h,f,c
 31756  001F7E  2ADE               	incf	postinc2,f,c
 31757  001F80  0E00               	movlw	0
 31758  001F82  22DD               	addwfc	postdec2,f,c
 31759  001F84                     l170:
 31760                           
 31761                           ; BSR set to: 0
 31762                           ;i2c_drv.c: 315: }
 31763                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 31764  001F84  EE20 F004          	lfsr	2,4
 31765  001F88  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31766  001F8A  26D9               	addwf	fsr2l,f,c
 31767  001F8C  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31768  001F8E  22DA               	addwfc	fsr2h,f,c
 31769  001F90  50DF               	movf	indf2,w,c
 31770  001F92  A4D8               	btfss	status,2,c
 31771  001F94  D002               	goto	l171
 31772                           
 31773                           ; BSR set to: 0
 31774                           ;i2c_drv.c: 319: {
 31775                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 31776  001F96  0E06               	movlw	6
 31777  001F98  D01B               	goto	L61
 31778  001F9A                     l171:
 31779                           
 31780                           ; BSR set to: 0
 31781                           ;i2c_drv.c: 323: else
 31782                           ;i2c_drv.c: 324: {
 31783                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 31784                           
 31785                           ; BSR set to: 0
 31786  001F9A  0E03               	movlw	3
 31787  001F9C  D019               	goto	L61
 31788  001F9E                     
 31789                           ;i2c_drv.c: 332: StopCondition();
 31790                           
 31791                           ; BSR set to: 0
 31792  001F9E  EC61  F031         	call	_StopCondition	;wreg free
 31793                           
 31794                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 31795  001FA2  0E07               	movlw	7
 31796  001FA4  D015               	goto	L61
 31797  001FA6                     
 31798                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 31799  001FA6  0E00               	movlw	0
 31800  001FA8  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31801                           
 31802                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 31803  001FAA  0E00               	movlw	0
 31804  001FAC  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31805                           
 31806                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 31807  001FAE  0E02               	movlw	2
 31808  001FB0  D018               	goto	L62
 31809  001FB2                     
 31810                           ;i2c_drv.c: 347: TentativeCounter++;
 31811  001FB2  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 31812                           
 31813                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 31814  001FB4  EC50  F031         	call	_CheckAckStatus	;wreg free
 31815  001FB8  0900               	iorlw	0
 31816  001FBA  A4D8               	btfss	status,2,c
 31817  001FBC  D005               	goto	l176
 31818                           
 31819                           ;i2c_drv.c: 350: {
 31820                           ;i2c_drv.c: 352: TentativeCounter = 0;
 31821  001FBE  0E00               	movlw	0
 31822  001FC0  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31823                           
 31824                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 31825  001FC2  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 31826                           
 31827                           ;i2c_drv.c: 355: }
 31828  001FC6  D02E               	goto	l162
 31829  001FC8                     l176:
 31830                           
 31831                           ;i2c_drv.c: 356: else
 31832                           ;i2c_drv.c: 357: {
 31833                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 31834  001FC8  0E02               	movlw	2
 31835  001FCA  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 31836  001FCC  D02B               	goto	l162
 31837                           
 31838                           ;i2c_drv.c: 360: {
 31839                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 31840  001FCE  0E09               	movlw	9
 31841  001FD0                     L61:
 31842  001FD0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31843                           
 31844                           ;i2c_drv.c: 363: }
 31845                           ;i2c_drv.c: 364: }
 31846                           ;i2c_drv.c: 365: break;
 31847  001FD2  D028               	goto	l162
 31848  001FD4                     
 31849                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 31850  001FD4  0E00               	movlw	0
 31851  001FD6  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31852                           
 31853                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 31854  001FD8  0E00               	movlw	0
 31855  001FDA  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31856                           
 31857                           ;i2c_drv.c: 372: TentativeCounter = 0;
 31858  001FDC  0E00               	movlw	0
 31859  001FDE  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31860                           
 31861                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 31862  001FE0  0E01               	movlw	1
 31863  001FE2                     L62:
 31864  001FE2  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31865                           
 31866                           ;i2c_drv.c: 379: }
 31867                           
 31868                           ;i2c_drv.c: 378: break;
 31869                           
 31870                           ;i2c_drv.c: 377: default:
 31871                           
 31872                           ;i2c_drv.c: 375: break;
 31873  001FE4  D01F               	goto	l162
 31874  001FE6                     l160:
 31875  001FE6  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 31876                           
 31877                           ; Switch size 1, requested type "space"
 31878                           ; Number of cases is 10, Range of values is 0 to 9
 31879                           ; switch strategies available:
 31880                           ; Name         Instructions Cycles
 31881                           ; simple_byte           31    16 (average)
 31882                           ;	Chosen strategy is simple_byte
 31883  001FE8  0A00               	xorlw	0	; case 0
 31884  001FEA  B4D8               	btfsc	status,2,c
 31885  001FEC  D767               	goto	l161
 31886  001FEE  0A01               	xorlw	1	; case 1
 31887  001FF0  B4D8               	btfsc	status,2,c
 31888  001FF2  D76A               	goto	l163
 31889  001FF4  0A03               	xorlw	3	; case 2
 31890  001FF6  B4D8               	btfsc	status,2,c
 31891  001FF8  D787               	goto	l164
 31892  001FFA  0A01               	xorlw	1	; case 3
 31893  001FFC  B4D8               	btfsc	status,2,c
 31894  001FFE  D78B               	goto	l166
 31895  002000  0A07               	xorlw	7	; case 4
 31896  002002  B4D8               	btfsc	status,2,c
 31897  002004  D79C               	goto	l167
 31898  002006  0A01               	xorlw	1	; case 5
 31899  002008  B4D8               	btfsc	status,2,c
 31900  00200A  D7A2               	goto	l169
 31901  00200C  0A03               	xorlw	3	; case 6
 31902  00200E  B4D8               	btfsc	status,2,c
 31903  002010  D7C6               	goto	l173
 31904  002012  0A01               	xorlw	1	; case 7
 31905  002014  B4D8               	btfsc	status,2,c
 31906  002016  D7C7               	goto	l174
 31907  002018  0A0F               	xorlw	15	; case 8
 31908  00201A  B4D8               	btfsc	status,2,c
 31909  00201C  D7CA               	goto	l175
 31910  00201E  0A01               	xorlw	1	; case 9
 31911  002020  B4D8               	btfsc	status,2,c
 31912  002022  D7D8               	goto	l179
 31913  002024                     l162:
 31914                           
 31915                           ;i2c_drv.c: 382: return WriteStatus;
 31916  002024  5035               	movf	I2c_WriteData@WriteStatus,w,c
 31917  002026  0012               	return	
 31918  002028                     __end_of_I2c_WriteData:
 31919                           	opt stack 0
 31920                           tosu	equ	0xFFF
 31921                           tosh	equ	0xFFE
 31922                           tosl	equ	0xFFD
 31923                           pclath	equ	0xFFA
 31924                           tblptru	equ	0xFF8
 31925                           tblptrh	equ	0xFF7
 31926                           tblptrl	equ	0xFF6
 31927                           tablat	equ	0xFF5
 31928                           prodh	equ	0xFF4
 31929                           prodl	equ	0xFF3
 31930                           intcon	equ	0xFF2
 31931                           intcon2	equ	0xFF1
 31932                           intcon3	equ	0xFF0
 31933                           indf0	equ	0xFEF
 31934                           postinc0	equ	0xFEE
 31935                           plusw0	equ	0xFEB
 31936                           fsr0h	equ	0xFEA
 31937                           fsr0l	equ	0xFE9
 31938                           wreg	equ	0xFE8
 31939                           indf1	equ	0xFE7
 31940                           postinc1	equ	0xFE6
 31941                           postdec1	equ	0xFE5
 31942                           plusw1	equ	0xFE3
 31943                           fsr1h	equ	0xFE2
 31944                           fsr1l	equ	0xFE1
 31945                           indf2	equ	0xFDF
 31946                           postinc2	equ	0xFDE
 31947                           postdec2	equ	0xFDD
 31948                           plusw2	equ	0xFDB
 31949                           fsr2h	equ	0xFDA
 31950                           fsr2l	equ	0xFD9
 31951                           status	equ	0xFD8
 31952                           
 31953 ;; *************** function _I2c_ReadData *****************
 31954 ;; Defined at:
 31955 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31956 ;; Parameters:    Size  Location     Type
 31957 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 31958 ;;		 -> I2cRxPacket(6), 
 31959 ;; Auto vars:     Size  Location     Type
 31960 ;;		None
 31961 ;; Return value:  Size  Location     Type
 31962 ;;                  1    wreg      enum E7787
 31963 ;; Registers used:
 31964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31965 ;; Tracked objects:
 31966 ;;		On entry : 0/0
 31967 ;;		On exit  : 0/0
 31968 ;;		Unchanged: 0/0
 31969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31970 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31973 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31974 ;;Total ram usage:        4 bytes
 31975 ;; Hardware stack levels used:    1
 31976 ;; Hardware stack levels required when called:   12
 31977 ;; This function calls:
 31978 ;;		_CheckAckStatus
 31979 ;;		_CheckTxStatus
 31980 ;;		_EnableReceiver
 31981 ;;		_GenerateEvt
 31982 ;;		_ReadByte
 31983 ;;		_SetAckStatus
 31984 ;;		_StartCondition
 31985 ;;		_StopCondition
 31986 ;;		_WriteByte
 31987 ;; This function is called by:
 31988 ;;		_I2cSendMsgSm
 31989 ;; This function uses a non-reentrant model
 31990 ;;
 31991                           
 31992                           	psect	text148
 31993  002028                     __ptext148:
 31994                           	opt stack 0
 31995  002028                     _I2c_ReadData:
 31996                           	opt stack 14
 31997                           
 31998                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 31999                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 32000                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 32001                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 32002                           ;i2c_drv.c: 402: switch (I2cReadState)
 32003                           
 32004                           ;incstack = 0
 32005  002028  D090               	goto	l192
 32006  00202A                     
 32007                           ;i2c_drv.c: 406: StartCondition();
 32008  00202A  EC63  F031         	call	_StartCondition	;wreg free
 32009                           
 32010                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 32011  00202E  0E00               	movlw	0
 32012  002030  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32013                           
 32014                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 32015  002032  0E01               	movlw	1
 32016  002034  D083               	goto	L71
 32017  002036                     
 32018                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 32019  002036  0100               	movlb	0	; () banked
 32020  002038  EE20 F001          	lfsr	2,1
 32021  00203C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32022  00203E  26D9               	addwf	fsr2l,f,c
 32023  002040  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32024  002042  22DA               	addwfc	fsr2h,f,c
 32025  002044  50DF               	movf	indf2,w,c
 32026  002046  6F82               	movwf	??_I2c_ReadData& (0+255),b
 32027  002048  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32028  00204C  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32029  002050  50DF               	movf	indf2,w,c
 32030  002052  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 32031  002054  90D8               	bcf	status,0,c
 32032  002056  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 32033  002058  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 32034  00205A  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32035  00205E  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32036  002062  6EDF               	movwf	indf2,c
 32037                           
 32038                           ; BSR set to: 0
 32039                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 32040  002064  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32041  002068  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32042  00206C  50DF               	movf	indf2,w,c
 32043  00206E  EC41  F031         	call	_WriteByte
 32044                           
 32045                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 32046  002072  0E02               	movlw	2
 32047  002074  D063               	goto	L71
 32048  002076                     
 32049                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 32050  002076  EC4B  F031         	call	_CheckTxStatus	;wreg free
 32051  00207A  0900               	iorlw	0
 32052  00207C  A4D8               	btfss	status,2,c
 32053  00207E  D081               	goto	l194
 32054                           
 32055                           ;i2c_drv.c: 425: {
 32056                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 32057  002080  0E03               	movlw	3
 32058  002082  D05C               	goto	L71
 32059  002084                     
 32060                           ;i2c_drv.c: 433: TentativeCounter++;
 32061  002084  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 32062                           
 32063                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 32064  002086  EC50  F031         	call	_CheckAckStatus	;wreg free
 32065  00208A  0900               	iorlw	0
 32066  00208C  A4D8               	btfss	status,2,c
 32067  00208E  D004               	goto	l199
 32068                           
 32069                           ;i2c_drv.c: 436: {
 32070                           ;i2c_drv.c: 438: TentativeCounter = 0;
 32071  002090  0E00               	movlw	0
 32072  002092  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 32073  002094                     
 32074                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 32075  002094  0E04               	movlw	4
 32076  002096  D052               	goto	L71
 32077  002098                     l199:
 32078                           
 32079                           ;i2c_drv.c: 442: else
 32080                           ;i2c_drv.c: 443: {
 32081                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 32082  002098  0E02               	movlw	2
 32083  00209A  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 32084  00209C  D072               	goto	l194
 32085                           
 32086                           ;i2c_drv.c: 446: {
 32087                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 32088  00209E  0E08               	movlw	8
 32089  0020A0  D04D               	goto	L71
 32090  0020A2                     
 32091                           ;i2c_drv.c: 455: EnableReceiver();
 32092  0020A2  EC65  F031         	call	_EnableReceiver	;wreg free
 32093                           
 32094                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 32095  0020A6  0E05               	movlw	5
 32096  0020A8  D049               	goto	L71
 32097  0020AA                     
 32098                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 32099  0020AA  EC4B  F031         	call	_CheckTxStatus	;wreg free
 32100  0020AE  0900               	iorlw	0
 32101  0020B0  A4D8               	btfss	status,2,c
 32102  0020B2  D067               	goto	l194
 32103                           
 32104                           ;i2c_drv.c: 463: {
 32105                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 32106  0020B4  0100               	movlb	0	; () banked
 32107  0020B6  EE20 F002          	lfsr	2,2
 32108  0020BA  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32109  0020BC  26D9               	addwf	fsr2l,f,c
 32110  0020BE  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32111  0020C0  22DA               	addwfc	fsr2h,f,c
 32112  0020C2  CFDE F082          	movff	postinc2,??_I2c_ReadData
 32113  0020C6  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 32114  0020CA  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 32115  0020CE  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 32116  0020D2  EC46  F031         	call	_ReadByte	;wreg free
 32117  0020D6  6EDF               	movwf	indf2,c
 32118                           
 32119                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 32120  0020D8  0100               	movlb	0	; () banked
 32121  0020DA  EE20 F002          	lfsr	2,2
 32122  0020DE  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32123  0020E0  26D9               	addwf	fsr2l,f,c
 32124  0020E2  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32125  0020E4  22DA               	addwfc	fsr2h,f,c
 32126  0020E6  2ADE               	incf	postinc2,f,c
 32127  0020E8  0E00               	movlw	0
 32128  0020EA  22DD               	addwfc	postdec2,f,c
 32129                           
 32130                           ; BSR set to: 0
 32131                           ;i2c_drv.c: 469: DataCounter++;
 32132  0020EC  2A33               	incf	I2c_ReadData@DataCounter,f,c
 32133                           
 32134                           ; BSR set to: 0
 32135                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 32136  0020EE  0E06               	movlw	6
 32137  0020F0  D025               	goto	L71
 32138  0020F2                     
 32139                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 32140                           
 32141                           ; BSR set to: 0
 32142  0020F2  0100               	movlb	0	; () banked
 32143  0020F4  EE20 F004          	lfsr	2,4
 32144  0020F8  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32145  0020FA  26D9               	addwf	fsr2l,f,c
 32146  0020FC  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32147  0020FE  22DA               	addwfc	fsr2h,f,c
 32148  002100  50DE               	movf	postinc2,w,c
 32149  002102  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 32150  002104  A0D8               	btfss	status,0,c
 32151  002106  D008               	goto	l206
 32152                           
 32153                           ; BSR set to: 0
 32154                           ;i2c_drv.c: 478: {
 32155                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 32156  002108  0E01               	movlw	1
 32157  00210A  ECDB  F030         	call	_SetAckStatus
 32158                           
 32159                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 32160  00210E  0E07               	movlw	7
 32161  002110  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32162                           
 32163                           ;i2c_drv.c: 484: DataCounter = 0;
 32164  002112  0E00               	movlw	0
 32165  002114  6E33               	movwf	I2c_ReadData@DataCounter,c
 32166                           
 32167                           ;i2c_drv.c: 485: }
 32168  002116  D035               	goto	l194
 32169  002118                     l206:
 32170                           
 32171                           ;i2c_drv.c: 486: else
 32172                           ;i2c_drv.c: 487: {
 32173                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 32174  002118  0E00               	movlw	0
 32175  00211A  ECDB  F030         	call	_SetAckStatus
 32176  00211E  D7BA               	goto	L72
 32177  002120                     
 32178                           ;i2c_drv.c: 497: StopCondition();
 32179  002120  EC61  F031         	call	_StopCondition	;wreg free
 32180                           
 32181                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 32182  002124  0E02               	movlw	2
 32183  002126  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32184                           
 32185                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 32186  002128  0E05               	movlw	5
 32187  00212A  0100               	movlb	0	; () banked
 32188  00212C  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 32189  00212E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 32190  002130  0E00               	movlw	0
 32191  002132  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32192  002134  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 32193  002136  ECA3  F030         	call	_GenerateEvt	;wreg free
 32194                           
 32195                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 32196  00213A  0E00               	movlw	0
 32197  00213C                     L71:
 32198  00213C  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32199                           
 32200                           ;i2c_drv.c: 504: break;
 32201  00213E  D021               	goto	l194
 32202  002140                     
 32203                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 32204  002140  0E00               	movlw	0
 32205  002142  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32206                           
 32207                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 32208  002144  0E01               	movlw	1
 32209  002146  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32210                           
 32211                           ;i2c_drv.c: 515: }
 32212                           
 32213                           ;i2c_drv.c: 514: break;
 32214                           
 32215                           ;i2c_drv.c: 513: default:
 32216                           
 32217                           ;i2c_drv.c: 511: break;
 32218  002148  D01C               	goto	l194
 32219  00214A                     l192:
 32220  00214A  5034               	movf	I2c_ReadData@I2cReadState,w,c
 32221                           
 32222                           ; Switch size 1, requested type "space"
 32223                           ; Number of cases is 9, Range of values is 0 to 8
 32224                           ; switch strategies available:
 32225                           ; Name         Instructions Cycles
 32226                           ; simple_byte           28    15 (average)
 32227                           ;	Chosen strategy is simple_byte
 32228  00214C  0A00               	xorlw	0	; case 0
 32229  00214E  B4D8               	btfsc	status,2,c
 32230  002150  D76C               	goto	l193
 32231  002152  0A01               	xorlw	1	; case 1
 32232  002154  B4D8               	btfsc	status,2,c
 32233  002156  D76F               	goto	l195
 32234  002158  0A03               	xorlw	3	; case 2
 32235  00215A  B4D8               	btfsc	status,2,c
 32236  00215C  D78C               	goto	l196
 32237  00215E  0A01               	xorlw	1	; case 3
 32238  002160  B4D8               	btfsc	status,2,c
 32239  002162  D790               	goto	l198
 32240  002164  0A07               	xorlw	7	; case 4
 32241  002166  B4D8               	btfsc	status,2,c
 32242  002168  D79C               	goto	l202
 32243  00216A  0A01               	xorlw	1	; case 5
 32244  00216C  B4D8               	btfsc	status,2,c
 32245  00216E  D79D               	goto	l203
 32246  002170  0A03               	xorlw	3	; case 6
 32247  002172  B4D8               	btfsc	status,2,c
 32248  002174  D7BE               	goto	l205
 32249  002176  0A01               	xorlw	1	; case 7
 32250  002178  B4D8               	btfsc	status,2,c
 32251  00217A  D7D2               	goto	l208
 32252  00217C  0A0F               	xorlw	15	; case 8
 32253  00217E  B4D8               	btfsc	status,2,c
 32254  002180  D7DF               	goto	l209
 32255  002182                     l194:
 32256                           
 32257                           ;i2c_drv.c: 518: return ReadStatus;
 32258  002182  5031               	movf	I2c_ReadData@ReadStatus,w,c
 32259  002184  0012               	return	
 32260  002186                     __end_of_I2c_ReadData:
 32261                           	opt stack 0
 32262                           tosu	equ	0xFFF
 32263                           tosh	equ	0xFFE
 32264                           tosl	equ	0xFFD
 32265                           pclath	equ	0xFFA
 32266                           tblptru	equ	0xFF8
 32267                           tblptrh	equ	0xFF7
 32268                           tblptrl	equ	0xFF6
 32269                           tablat	equ	0xFF5
 32270                           prodh	equ	0xFF4
 32271                           prodl	equ	0xFF3
 32272                           intcon	equ	0xFF2
 32273                           intcon2	equ	0xFF1
 32274                           intcon3	equ	0xFF0
 32275                           indf0	equ	0xFEF
 32276                           postinc0	equ	0xFEE
 32277                           plusw0	equ	0xFEB
 32278                           fsr0h	equ	0xFEA
 32279                           fsr0l	equ	0xFE9
 32280                           wreg	equ	0xFE8
 32281                           indf1	equ	0xFE7
 32282                           postinc1	equ	0xFE6
 32283                           postdec1	equ	0xFE5
 32284                           plusw1	equ	0xFE3
 32285                           fsr1h	equ	0xFE2
 32286                           fsr1l	equ	0xFE1
 32287                           indf2	equ	0xFDF
 32288                           postinc2	equ	0xFDE
 32289                           postdec2	equ	0xFDD
 32290                           plusw2	equ	0xFDB
 32291                           fsr2h	equ	0xFDA
 32292                           fsr2l	equ	0xFD9
 32293                           status	equ	0xFD8
 32294                           
 32295 ;; *************** function _WriteByte *****************
 32296 ;; Defined at:
 32297 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32298 ;; Parameters:    Size  Location     Type
 32299 ;;  Byte            1    wreg     unsigned char 
 32300 ;; Auto vars:     Size  Location     Type
 32301 ;;  Byte            1   29[BANK0 ] unsigned char 
 32302 ;; Return value:  Size  Location     Type
 32303 ;;                  1    wreg      void 
 32304 ;; Registers used:
 32305 ;;		wreg
 32306 ;; Tracked objects:
 32307 ;;		On entry : 0/0
 32308 ;;		On exit  : 0/0
 32309 ;;		Unchanged: 0/0
 32310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32315 ;;Total ram usage:        1 bytes
 32316 ;; Hardware stack levels used:    1
 32317 ;; Hardware stack levels required when called:   11
 32318 ;; This function calls:
 32319 ;;		Nothing
 32320 ;; This function is called by:
 32321 ;;		_I2c_WriteData
 32322 ;;		_I2c_ReadData
 32323 ;; This function uses a non-reentrant model
 32324 ;;
 32325                           
 32326                           	psect	text149
 32327  006282                     __ptext149:
 32328                           	opt stack 0
 32329  006282                     _WriteByte:
 32330                           	opt stack 14
 32331                           
 32332                           ;incstack = 0
 32333                           ;WriteByte@Byte stored from wreg
 32334  006282  0100               	movlb	0	; () banked
 32335  006284  6F7D               	movwf	WriteByte@Byte& (0+255),b
 32336                           
 32337                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 32338  006286  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 32339  00628A  0012               	return		;funcret
 32340  00628C                     __end_of_WriteByte:
 32341                           	opt stack 0
 32342                           tosu	equ	0xFFF
 32343                           tosh	equ	0xFFE
 32344                           tosl	equ	0xFFD
 32345                           pclath	equ	0xFFA
 32346                           tblptru	equ	0xFF8
 32347                           tblptrh	equ	0xFF7
 32348                           tblptrl	equ	0xFF6
 32349                           tablat	equ	0xFF5
 32350                           prodh	equ	0xFF4
 32351                           prodl	equ	0xFF3
 32352                           intcon	equ	0xFF2
 32353                           intcon2	equ	0xFF1
 32354                           intcon3	equ	0xFF0
 32355                           indf0	equ	0xFEF
 32356                           postinc0	equ	0xFEE
 32357                           plusw0	equ	0xFEB
 32358                           fsr0h	equ	0xFEA
 32359                           fsr0l	equ	0xFE9
 32360                           wreg	equ	0xFE8
 32361                           indf1	equ	0xFE7
 32362                           postinc1	equ	0xFE6
 32363                           postdec1	equ	0xFE5
 32364                           plusw1	equ	0xFE3
 32365                           fsr1h	equ	0xFE2
 32366                           fsr1l	equ	0xFE1
 32367                           indf2	equ	0xFDF
 32368                           postinc2	equ	0xFDE
 32369                           postdec2	equ	0xFDD
 32370                           plusw2	equ	0xFDB
 32371                           fsr2h	equ	0xFDA
 32372                           fsr2l	equ	0xFD9
 32373                           status	equ	0xFD8
 32374                           
 32375 ;; *************** function _StopCondition *****************
 32376 ;; Defined at:
 32377 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32378 ;; Parameters:    Size  Location     Type
 32379 ;;		None
 32380 ;; Auto vars:     Size  Location     Type
 32381 ;;		None
 32382 ;; Return value:  Size  Location     Type
 32383 ;;                  1    wreg      void 
 32384 ;; Registers used:
 32385 ;;		status,2, status,0
 32386 ;; Tracked objects:
 32387 ;;		On entry : 0/0
 32388 ;;		On exit  : 0/0
 32389 ;;		Unchanged: 0/0
 32390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32395 ;;Total ram usage:        0 bytes
 32396 ;; Hardware stack levels used:    1
 32397 ;; Hardware stack levels required when called:   11
 32398 ;; This function calls:
 32399 ;;		Nothing
 32400 ;; This function is called by:
 32401 ;;		_I2c_WriteData
 32402 ;;		_I2c_ReadData
 32403 ;; This function uses a non-reentrant model
 32404 ;;
 32405                           
 32406                           	psect	text150
 32407  0062C2                     __ptext150:
 32408                           	opt stack 0
 32409  0062C2                     _StopCondition:
 32410                           	opt stack 14
 32411                           
 32412                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 32413                           
 32414                           ;incstack = 0
 32415  0062C2  8471               	bsf	3953,2,c	;volatile
 32416  0062C4  0012               	return		;funcret
 32417  0062C6                     __end_of_StopCondition:
 32418                           	opt stack 0
 32419                           tosu	equ	0xFFF
 32420                           tosh	equ	0xFFE
 32421                           tosl	equ	0xFFD
 32422                           pclath	equ	0xFFA
 32423                           tblptru	equ	0xFF8
 32424                           tblptrh	equ	0xFF7
 32425                           tblptrl	equ	0xFF6
 32426                           tablat	equ	0xFF5
 32427                           prodh	equ	0xFF4
 32428                           prodl	equ	0xFF3
 32429                           intcon	equ	0xFF2
 32430                           intcon2	equ	0xFF1
 32431                           intcon3	equ	0xFF0
 32432                           indf0	equ	0xFEF
 32433                           postinc0	equ	0xFEE
 32434                           plusw0	equ	0xFEB
 32435                           fsr0h	equ	0xFEA
 32436                           fsr0l	equ	0xFE9
 32437                           wreg	equ	0xFE8
 32438                           indf1	equ	0xFE7
 32439                           postinc1	equ	0xFE6
 32440                           postdec1	equ	0xFE5
 32441                           plusw1	equ	0xFE3
 32442                           fsr1h	equ	0xFE2
 32443                           fsr1l	equ	0xFE1
 32444                           indf2	equ	0xFDF
 32445                           postinc2	equ	0xFDE
 32446                           postdec2	equ	0xFDD
 32447                           plusw2	equ	0xFDB
 32448                           fsr2h	equ	0xFDA
 32449                           fsr2l	equ	0xFD9
 32450                           status	equ	0xFD8
 32451                           
 32452 ;; *************** function _StartCondition *****************
 32453 ;; Defined at:
 32454 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32455 ;; Parameters:    Size  Location     Type
 32456 ;;		None
 32457 ;; Auto vars:     Size  Location     Type
 32458 ;;		None
 32459 ;; Return value:  Size  Location     Type
 32460 ;;                  1    wreg      void 
 32461 ;; Registers used:
 32462 ;;		status,2, status,0
 32463 ;; Tracked objects:
 32464 ;;		On entry : 0/0
 32465 ;;		On exit  : 0/0
 32466 ;;		Unchanged: 0/0
 32467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32472 ;;Total ram usage:        0 bytes
 32473 ;; Hardware stack levels used:    1
 32474 ;; Hardware stack levels required when called:   11
 32475 ;; This function calls:
 32476 ;;		Nothing
 32477 ;; This function is called by:
 32478 ;;		_I2c_WriteData
 32479 ;;		_I2c_ReadData
 32480 ;; This function uses a non-reentrant model
 32481 ;;
 32482                           
 32483                           	psect	text151
 32484  0062C6                     __ptext151:
 32485                           	opt stack 0
 32486  0062C6                     _StartCondition:
 32487                           	opt stack 14
 32488                           
 32489                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 32490                           
 32491                           ;incstack = 0
 32492  0062C6  8071               	bsf	3953,0,c	;volatile
 32493  0062C8  0012               	return		;funcret
 32494  0062CA                     __end_of_StartCondition:
 32495                           	opt stack 0
 32496                           tosu	equ	0xFFF
 32497                           tosh	equ	0xFFE
 32498                           tosl	equ	0xFFD
 32499                           pclath	equ	0xFFA
 32500                           tblptru	equ	0xFF8
 32501                           tblptrh	equ	0xFF7
 32502                           tblptrl	equ	0xFF6
 32503                           tablat	equ	0xFF5
 32504                           prodh	equ	0xFF4
 32505                           prodl	equ	0xFF3
 32506                           intcon	equ	0xFF2
 32507                           intcon2	equ	0xFF1
 32508                           intcon3	equ	0xFF0
 32509                           indf0	equ	0xFEF
 32510                           postinc0	equ	0xFEE
 32511                           plusw0	equ	0xFEB
 32512                           fsr0h	equ	0xFEA
 32513                           fsr0l	equ	0xFE9
 32514                           wreg	equ	0xFE8
 32515                           indf1	equ	0xFE7
 32516                           postinc1	equ	0xFE6
 32517                           postdec1	equ	0xFE5
 32518                           plusw1	equ	0xFE3
 32519                           fsr1h	equ	0xFE2
 32520                           fsr1l	equ	0xFE1
 32521                           indf2	equ	0xFDF
 32522                           postinc2	equ	0xFDE
 32523                           postdec2	equ	0xFDD
 32524                           plusw2	equ	0xFDB
 32525                           fsr2h	equ	0xFDA
 32526                           fsr2l	equ	0xFD9
 32527                           status	equ	0xFD8
 32528                           
 32529 ;; *************** function _SetAckStatus *****************
 32530 ;; Defined at:
 32531 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32532 ;; Parameters:    Size  Location     Type
 32533 ;;  AckSts          1    wreg     unsigned char 
 32534 ;; Auto vars:     Size  Location     Type
 32535 ;;  AckSts          1   29[BANK0 ] unsigned char 
 32536 ;; Return value:  Size  Location     Type
 32537 ;;                  1    wreg      void 
 32538 ;; Registers used:
 32539 ;;		wreg
 32540 ;; Tracked objects:
 32541 ;;		On entry : 0/0
 32542 ;;		On exit  : 0/0
 32543 ;;		Unchanged: 0/0
 32544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32549 ;;Total ram usage:        1 bytes
 32550 ;; Hardware stack levels used:    1
 32551 ;; Hardware stack levels required when called:   11
 32552 ;; This function calls:
 32553 ;;		Nothing
 32554 ;; This function is called by:
 32555 ;;		_I2c_ReadData
 32556 ;; This function uses a non-reentrant model
 32557 ;;
 32558                           
 32559                           	psect	text152
 32560  0061B6                     __ptext152:
 32561                           	opt stack 0
 32562  0061B6                     _SetAckStatus:
 32563                           	opt stack 14
 32564                           
 32565                           ;incstack = 0
 32566                           ;SetAckStatus@AckSts stored from wreg
 32567  0061B6  0100               	movlb	0	; () banked
 32568  0061B8  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 32569                           
 32570                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 32571  0061BA  0100               	movlb	0	; () banked
 32572  0061BC  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 32573  0061BE  D002               	bra	u11415
 32574  0061C0  9A71               	bcf	3953,5,c	;volatile
 32575  0061C2  D001               	bra	u11416
 32576  0061C4                     u11415:
 32577  0061C4  8A71               	bsf	3953,5,c	;volatile
 32578  0061C6                     u11416:
 32579                           
 32580                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 32581  0061C6  8871               	bsf	3953,4,c	;volatile
 32582  0061C8  0012               	return		;funcret
 32583  0061CA                     __end_of_SetAckStatus:
 32584                           	opt stack 0
 32585                           tosu	equ	0xFFF
 32586                           tosh	equ	0xFFE
 32587                           tosl	equ	0xFFD
 32588                           pclath	equ	0xFFA
 32589                           tblptru	equ	0xFF8
 32590                           tblptrh	equ	0xFF7
 32591                           tblptrl	equ	0xFF6
 32592                           tablat	equ	0xFF5
 32593                           prodh	equ	0xFF4
 32594                           prodl	equ	0xFF3
 32595                           intcon	equ	0xFF2
 32596                           intcon2	equ	0xFF1
 32597                           intcon3	equ	0xFF0
 32598                           indf0	equ	0xFEF
 32599                           postinc0	equ	0xFEE
 32600                           plusw0	equ	0xFEB
 32601                           fsr0h	equ	0xFEA
 32602                           fsr0l	equ	0xFE9
 32603                           wreg	equ	0xFE8
 32604                           indf1	equ	0xFE7
 32605                           postinc1	equ	0xFE6
 32606                           postdec1	equ	0xFE5
 32607                           plusw1	equ	0xFE3
 32608                           fsr1h	equ	0xFE2
 32609                           fsr1l	equ	0xFE1
 32610                           indf2	equ	0xFDF
 32611                           postinc2	equ	0xFDE
 32612                           postdec2	equ	0xFDD
 32613                           plusw2	equ	0xFDB
 32614                           fsr2h	equ	0xFDA
 32615                           fsr2l	equ	0xFD9
 32616                           status	equ	0xFD8
 32617                           
 32618 ;; *************** function _ReadByte *****************
 32619 ;; Defined at:
 32620 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32621 ;; Parameters:    Size  Location     Type
 32622 ;;		None
 32623 ;; Auto vars:     Size  Location     Type
 32624 ;;  Byte            1   29[BANK0 ] unsigned char 
 32625 ;; Return value:  Size  Location     Type
 32626 ;;                  1    wreg      unsigned char 
 32627 ;; Registers used:
 32628 ;;		wreg, status,2
 32629 ;; Tracked objects:
 32630 ;;		On entry : 0/0
 32631 ;;		On exit  : 0/0
 32632 ;;		Unchanged: 0/0
 32633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32637 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32638 ;;Total ram usage:        1 bytes
 32639 ;; Hardware stack levels used:    1
 32640 ;; Hardware stack levels required when called:   11
 32641 ;; This function calls:
 32642 ;;		Nothing
 32643 ;; This function is called by:
 32644 ;;		_I2c_ReadData
 32645 ;; This function uses a non-reentrant model
 32646 ;;
 32647                           
 32648                           	psect	text153
 32649  00628C                     __ptext153:
 32650                           	opt stack 0
 32651  00628C                     _ReadByte:
 32652                           	opt stack 14
 32653                           
 32654                           ;i2c_drv.c: 207: UINT8 Byte;
 32655                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 32656                           
 32657                           ;incstack = 0
 32658  00628C  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 32659                           
 32660                           ;i2c_drv.c: 213: return Byte;
 32661  006290  0100               	movlb	0	; () banked
 32662  006292  517D               	movf	ReadByte@Byte& (0+255),w,b
 32663  006294  0012               	return	
 32664  006296                     __end_of_ReadByte:
 32665                           	opt stack 0
 32666                           tosu	equ	0xFFF
 32667                           tosh	equ	0xFFE
 32668                           tosl	equ	0xFFD
 32669                           pclath	equ	0xFFA
 32670                           tblptru	equ	0xFF8
 32671                           tblptrh	equ	0xFF7
 32672                           tblptrl	equ	0xFF6
 32673                           tablat	equ	0xFF5
 32674                           prodh	equ	0xFF4
 32675                           prodl	equ	0xFF3
 32676                           intcon	equ	0xFF2
 32677                           intcon2	equ	0xFF1
 32678                           intcon3	equ	0xFF0
 32679                           indf0	equ	0xFEF
 32680                           postinc0	equ	0xFEE
 32681                           plusw0	equ	0xFEB
 32682                           fsr0h	equ	0xFEA
 32683                           fsr0l	equ	0xFE9
 32684                           wreg	equ	0xFE8
 32685                           indf1	equ	0xFE7
 32686                           postinc1	equ	0xFE6
 32687                           postdec1	equ	0xFE5
 32688                           plusw1	equ	0xFE3
 32689                           fsr1h	equ	0xFE2
 32690                           fsr1l	equ	0xFE1
 32691                           indf2	equ	0xFDF
 32692                           postinc2	equ	0xFDE
 32693                           postdec2	equ	0xFDD
 32694                           plusw2	equ	0xFDB
 32695                           fsr2h	equ	0xFDA
 32696                           fsr2l	equ	0xFD9
 32697                           status	equ	0xFD8
 32698                           
 32699 ;; *************** function _GenerateEvt *****************
 32700 ;; Defined at:
 32701 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32702 ;; Parameters:    Size  Location     Type
 32703 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32704 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32705 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32706 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 32707 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 32708 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32709 ;; Auto vars:     Size  Location     Type
 32710 ;;  EventStatus     1   31[BANK0 ] enum E7727
 32711 ;; Return value:  Size  Location     Type
 32712 ;;                  1    wreg      enum E7699
 32713 ;; Registers used:
 32714 ;;		wreg, fsr2l, fsr2h, status,2
 32715 ;; Tracked objects:
 32716 ;;		On entry : 0/0
 32717 ;;		On exit  : 0/0
 32718 ;;		Unchanged: 0/0
 32719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32723 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32724 ;;Total ram usage:        3 bytes
 32725 ;; Hardware stack levels used:    1
 32726 ;; Hardware stack levels required when called:   11
 32727 ;; This function calls:
 32728 ;;		Nothing
 32729 ;; This function is called by:
 32730 ;;		_I2c_ReadData
 32731 ;;		_CheckModem
 32732 ;;		_TurnOnModem
 32733 ;;		_ConfigureModem
 32734 ;;		_ModemEvtParser
 32735 ;;		_GetSmsSm
 32736 ;;		_Mdm_RequestSmsData
 32737 ;;		_I2cSlv_SendI2cMsg
 32738 ;;		_I2cSlv_ReceiveI2cMsg
 32739 ;;		_RiSm
 32740 ;;		_Mdm_SendSmsData
 32741 ;;		_MdmHttp_InitGprsNetwork
 32742 ;;		_MdmHttp_GetMethod
 32743 ;;		_Alarm
 32744 ;; This function uses a non-reentrant model
 32745 ;;
 32746                           
 32747                           	psect	text154
 32748  006146                     __ptext154:
 32749                           	opt stack 0
 32750  006146                     _GenerateEvt:
 32751                           	opt stack 13
 32752                           
 32753                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32754                           
 32755                           ; BSR set to: 0
 32756                           ;incstack = 0
 32757  006146  0E00               	movlw	0
 32758  006148  0100               	movlb	0	; () banked
 32759  00614A  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32760                           
 32761                           ; BSR set to: 0
 32762                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32763  00614C  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 32764  006150  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 32765  006154  0E02               	movlw	2
 32766  006156  6EDF               	movwf	indf2,c
 32767                           
 32768                           ; BSR set to: 0
 32769                           ;os_ser.c: 83: EventStatus = EventSent;
 32770  006158  0E02               	movlw	2
 32771  00615A  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32772  00615C  0012               	return	
 32773  00615E                     __end_of_GenerateEvt:
 32774                           	opt stack 0
 32775                           tosu	equ	0xFFF
 32776                           tosh	equ	0xFFE
 32777                           tosl	equ	0xFFD
 32778                           pclath	equ	0xFFA
 32779                           tblptru	equ	0xFF8
 32780                           tblptrh	equ	0xFF7
 32781                           tblptrl	equ	0xFF6
 32782                           tablat	equ	0xFF5
 32783                           prodh	equ	0xFF4
 32784                           prodl	equ	0xFF3
 32785                           intcon	equ	0xFF2
 32786                           intcon2	equ	0xFF1
 32787                           intcon3	equ	0xFF0
 32788                           indf0	equ	0xFEF
 32789                           postinc0	equ	0xFEE
 32790                           plusw0	equ	0xFEB
 32791                           fsr0h	equ	0xFEA
 32792                           fsr0l	equ	0xFE9
 32793                           wreg	equ	0xFE8
 32794                           indf1	equ	0xFE7
 32795                           postinc1	equ	0xFE6
 32796                           postdec1	equ	0xFE5
 32797                           plusw1	equ	0xFE3
 32798                           fsr1h	equ	0xFE2
 32799                           fsr1l	equ	0xFE1
 32800                           indf2	equ	0xFDF
 32801                           postinc2	equ	0xFDE
 32802                           postdec2	equ	0xFDD
 32803                           plusw2	equ	0xFDB
 32804                           fsr2h	equ	0xFDA
 32805                           fsr2l	equ	0xFD9
 32806                           status	equ	0xFD8
 32807                           
 32808 ;; *************** function _EnableReceiver *****************
 32809 ;; Defined at:
 32810 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32811 ;; Parameters:    Size  Location     Type
 32812 ;;		None
 32813 ;; Auto vars:     Size  Location     Type
 32814 ;;		None
 32815 ;; Return value:  Size  Location     Type
 32816 ;;                  1    wreg      void 
 32817 ;; Registers used:
 32818 ;;		status,2, status,0
 32819 ;; Tracked objects:
 32820 ;;		On entry : 0/0
 32821 ;;		On exit  : 0/0
 32822 ;;		Unchanged: 0/0
 32823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32828 ;;Total ram usage:        0 bytes
 32829 ;; Hardware stack levels used:    1
 32830 ;; Hardware stack levels required when called:   11
 32831 ;; This function calls:
 32832 ;;		Nothing
 32833 ;; This function is called by:
 32834 ;;		_I2c_ReadData
 32835 ;; This function uses a non-reentrant model
 32836 ;;
 32837                           
 32838                           	psect	text155
 32839  0062CA                     __ptext155:
 32840                           	opt stack 0
 32841  0062CA                     _EnableReceiver:
 32842                           	opt stack 14
 32843                           
 32844                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 32845                           
 32846                           ; BSR set to: 0
 32847                           ;incstack = 0
 32848  0062CA  8671               	bsf	3953,3,c	;volatile
 32849  0062CC  0012               	return		;funcret
 32850  0062CE                     __end_of_EnableReceiver:
 32851                           	opt stack 0
 32852                           tosu	equ	0xFFF
 32853                           tosh	equ	0xFFE
 32854                           tosl	equ	0xFFD
 32855                           pclath	equ	0xFFA
 32856                           tblptru	equ	0xFF8
 32857                           tblptrh	equ	0xFF7
 32858                           tblptrl	equ	0xFF6
 32859                           tablat	equ	0xFF5
 32860                           prodh	equ	0xFF4
 32861                           prodl	equ	0xFF3
 32862                           intcon	equ	0xFF2
 32863                           intcon2	equ	0xFF1
 32864                           intcon3	equ	0xFF0
 32865                           indf0	equ	0xFEF
 32866                           postinc0	equ	0xFEE
 32867                           plusw0	equ	0xFEB
 32868                           fsr0h	equ	0xFEA
 32869                           fsr0l	equ	0xFE9
 32870                           wreg	equ	0xFE8
 32871                           indf1	equ	0xFE7
 32872                           postinc1	equ	0xFE6
 32873                           postdec1	equ	0xFE5
 32874                           plusw1	equ	0xFE3
 32875                           fsr1h	equ	0xFE2
 32876                           fsr1l	equ	0xFE1
 32877                           indf2	equ	0xFDF
 32878                           postinc2	equ	0xFDE
 32879                           postdec2	equ	0xFDD
 32880                           plusw2	equ	0xFDB
 32881                           fsr2h	equ	0xFDA
 32882                           fsr2l	equ	0xFD9
 32883                           status	equ	0xFD8
 32884                           
 32885 ;; *************** function _CheckTxStatus *****************
 32886 ;; Defined at:
 32887 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32888 ;; Parameters:    Size  Location     Type
 32889 ;;		None
 32890 ;; Auto vars:     Size  Location     Type
 32891 ;;		None
 32892 ;; Return value:  Size  Location     Type
 32893 ;;                  1    wreg      unsigned char 
 32894 ;; Registers used:
 32895 ;;		wreg, status,2, status,0
 32896 ;; Tracked objects:
 32897 ;;		On entry : 0/0
 32898 ;;		On exit  : 0/0
 32899 ;;		Unchanged: 0/0
 32900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32905 ;;Total ram usage:        0 bytes
 32906 ;; Hardware stack levels used:    1
 32907 ;; Hardware stack levels required when called:   11
 32908 ;; This function calls:
 32909 ;;		Nothing
 32910 ;; This function is called by:
 32911 ;;		_I2c_WriteData
 32912 ;;		_I2c_ReadData
 32913 ;; This function uses a non-reentrant model
 32914 ;;
 32915                           
 32916                           	psect	text156
 32917  006296                     __ptext156:
 32918                           	opt stack 0
 32919  006296                     _CheckTxStatus:
 32920                           	opt stack 14
 32921                           
 32922                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 32923                           
 32924                           ;incstack = 0
 32925  006296  4073               	rrncf	3955,w,c	;volatile
 32926  006298  42E8               	rrncf	wreg,f,c
 32927  00629A  0B3F               	andlw	63
 32928  00629C  0B01               	andlw	1
 32929  00629E  0012               	return	
 32930  0062A0                     __end_of_CheckTxStatus:
 32931                           	opt stack 0
 32932                           tosu	equ	0xFFF
 32933                           tosh	equ	0xFFE
 32934                           tosl	equ	0xFFD
 32935                           pclath	equ	0xFFA
 32936                           tblptru	equ	0xFF8
 32937                           tblptrh	equ	0xFF7
 32938                           tblptrl	equ	0xFF6
 32939                           tablat	equ	0xFF5
 32940                           prodh	equ	0xFF4
 32941                           prodl	equ	0xFF3
 32942                           intcon	equ	0xFF2
 32943                           intcon2	equ	0xFF1
 32944                           intcon3	equ	0xFF0
 32945                           indf0	equ	0xFEF
 32946                           postinc0	equ	0xFEE
 32947                           plusw0	equ	0xFEB
 32948                           fsr0h	equ	0xFEA
 32949                           fsr0l	equ	0xFE9
 32950                           wreg	equ	0xFE8
 32951                           indf1	equ	0xFE7
 32952                           postinc1	equ	0xFE6
 32953                           postdec1	equ	0xFE5
 32954                           plusw1	equ	0xFE3
 32955                           fsr1h	equ	0xFE2
 32956                           fsr1l	equ	0xFE1
 32957                           indf2	equ	0xFDF
 32958                           postinc2	equ	0xFDE
 32959                           postdec2	equ	0xFDD
 32960                           plusw2	equ	0xFDB
 32961                           fsr2h	equ	0xFDA
 32962                           fsr2l	equ	0xFD9
 32963                           status	equ	0xFD8
 32964                           
 32965 ;; *************** function _CheckAckStatus *****************
 32966 ;; Defined at:
 32967 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32968 ;; Parameters:    Size  Location     Type
 32969 ;;		None
 32970 ;; Auto vars:     Size  Location     Type
 32971 ;;		None
 32972 ;; Return value:  Size  Location     Type
 32973 ;;                  1    wreg      unsigned char 
 32974 ;; Registers used:
 32975 ;;		wreg, status,2, status,0
 32976 ;; Tracked objects:
 32977 ;;		On entry : 0/0
 32978 ;;		On exit  : 0/0
 32979 ;;		Unchanged: 0/0
 32980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32985 ;;Total ram usage:        0 bytes
 32986 ;; Hardware stack levels used:    1
 32987 ;; Hardware stack levels required when called:   11
 32988 ;; This function calls:
 32989 ;;		Nothing
 32990 ;; This function is called by:
 32991 ;;		_I2c_WriteData
 32992 ;;		_I2c_ReadData
 32993 ;; This function uses a non-reentrant model
 32994 ;;
 32995                           
 32996                           	psect	text157
 32997  0062A0                     __ptext157:
 32998                           	opt stack 0
 32999  0062A0                     _CheckAckStatus:
 33000                           	opt stack 14
 33001                           
 33002                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 33003                           
 33004                           ;incstack = 0
 33005  0062A0  4471               	rlncf	3953,w,c	;volatile
 33006  0062A2  46E8               	rlncf	wreg,f,c
 33007  0062A4  0B03               	andlw	3
 33008  0062A6  0B01               	andlw	1
 33009  0062A8  0012               	return	
 33010  0062AA                     __end_of_CheckAckStatus:
 33011                           	opt stack 0
 33012                           tosu	equ	0xFFF
 33013                           tosh	equ	0xFFE
 33014                           tosl	equ	0xFFD
 33015                           pclath	equ	0xFFA
 33016                           tblptru	equ	0xFF8
 33017                           tblptrh	equ	0xFF7
 33018                           tblptrl	equ	0xFF6
 33019                           tablat	equ	0xFF5
 33020                           prodh	equ	0xFF4
 33021                           prodl	equ	0xFF3
 33022                           intcon	equ	0xFF2
 33023                           intcon2	equ	0xFF1
 33024                           intcon3	equ	0xFF0
 33025                           indf0	equ	0xFEF
 33026                           postinc0	equ	0xFEE
 33027                           plusw0	equ	0xFEB
 33028                           fsr0h	equ	0xFEA
 33029                           fsr0l	equ	0xFE9
 33030                           wreg	equ	0xFE8
 33031                           indf1	equ	0xFE7
 33032                           postinc1	equ	0xFE6
 33033                           postdec1	equ	0xFE5
 33034                           plusw1	equ	0xFE3
 33035                           fsr1h	equ	0xFE2
 33036                           fsr1l	equ	0xFE1
 33037                           indf2	equ	0xFDF
 33038                           postinc2	equ	0xFDE
 33039                           postdec2	equ	0xFDD
 33040                           plusw2	equ	0xFDB
 33041                           fsr2h	equ	0xFDA
 33042                           fsr2l	equ	0xFD9
 33043                           status	equ	0xFD8
 33044                           
 33045 ;; *************** function _LowPriorityIsr *****************
 33046 ;; Defined at:
 33047 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33048 ;; Parameters:    Size  Location     Type
 33049 ;;		None
 33050 ;; Auto vars:     Size  Location     Type
 33051 ;;		None
 33052 ;; Return value:  Size  Location     Type
 33053 ;;                  1    wreg      void 
 33054 ;; Registers used:
 33055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33056 ;; Tracked objects:
 33057 ;;		On entry : 0/0
 33058 ;;		On exit  : 0/0
 33059 ;;		Unchanged: 0/0
 33060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33063 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33064 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33065 ;;Total ram usage:       21 bytes
 33066 ;; Hardware stack levels used:    1
 33067 ;; Hardware stack levels required when called:   10
 33068 ;; This function calls:
 33069 ;;		_Tmr_Tmr2Isr
 33070 ;; This function is called by:
 33071 ;;		Interrupt level 1
 33072 ;; This function uses a non-reentrant model
 33073 ;;
 33074                           
 33075                           	psect	intcodelo
 33076  000018                     __pintcodelo:
 33077                           	opt stack 0
 33078  000018                     _LowPriorityIsr:
 33079                           	opt stack 8
 33080                           
 33081                           ;incstack = 0
 33082  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 33083  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 33084  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 33085  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 33086  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 33087  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 33088  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 33089  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 33090  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 33091  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 33092  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 33093  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 33094  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 33095  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 33096  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 33097  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 33098  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 33099  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 33100  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 33101  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 33102  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 33103  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 33104                           
 33105                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 33106  00006E  B29E               	btfsc	3998,1,c	;volatile
 33107                           
 33108                           ;irq.c: 259: {
 33109                           ;irq.c: 261: Tmr_Tmr2Isr();
 33110  000070  EC93  F02F         	call	_Tmr_Tmr2Isr	;wreg free
 33111  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 33112  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 33113  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 33114  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 33115  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 33116  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 33117  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 33118  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 33119  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 33120  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 33121  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 33122  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 33123  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 33124  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 33125  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 33126  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 33127  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 33128  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 33129  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 33130  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 33131  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 33132  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 33133  0000CA  0010               	retfie	
 33134  0000CC                     __end_of_LowPriorityIsr:
 33135                           	opt stack 0
 33136                           tosu	equ	0xFFF
 33137                           tosh	equ	0xFFE
 33138                           tosl	equ	0xFFD
 33139                           pclatu	equ	0xFFB
 33140                           pclath	equ	0xFFA
 33141                           tblptru	equ	0xFF8
 33142                           tblptrh	equ	0xFF7
 33143                           tblptrl	equ	0xFF6
 33144                           tablat	equ	0xFF5
 33145                           prodh	equ	0xFF4
 33146                           prodl	equ	0xFF3
 33147                           intcon	equ	0xFF2
 33148                           intcon2	equ	0xFF1
 33149                           intcon3	equ	0xFF0
 33150                           indf0	equ	0xFEF
 33151                           postinc0	equ	0xFEE
 33152                           plusw0	equ	0xFEB
 33153                           fsr0h	equ	0xFEA
 33154                           fsr0l	equ	0xFE9
 33155                           wreg	equ	0xFE8
 33156                           indf1	equ	0xFE7
 33157                           postinc1	equ	0xFE6
 33158                           postdec1	equ	0xFE5
 33159                           plusw1	equ	0xFE3
 33160                           fsr1h	equ	0xFE2
 33161                           fsr1l	equ	0xFE1
 33162                           bsr	equ	0xFE0
 33163                           indf2	equ	0xFDF
 33164                           postinc2	equ	0xFDE
 33165                           postdec2	equ	0xFDD
 33166                           plusw2	equ	0xFDB
 33167                           fsr2h	equ	0xFDA
 33168                           fsr2l	equ	0xFD9
 33169                           status	equ	0xFD8
 33170                           
 33171 ;; *************** function _Tmr_Tmr2Isr *****************
 33172 ;; Defined at:
 33173 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 33174 ;; Parameters:    Size  Location     Type
 33175 ;;		None
 33176 ;; Auto vars:     Size  Location     Type
 33177 ;;		None
 33178 ;; Return value:  Size  Location     Type
 33179 ;;                  1    wreg      void 
 33180 ;; Registers used:
 33181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33182 ;; Tracked objects:
 33183 ;;		On entry : 0/0
 33184 ;;		On exit  : 0/0
 33185 ;;		Unchanged: 0/0
 33186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33191 ;;Total ram usage:        0 bytes
 33192 ;; Hardware stack levels used:    1
 33193 ;; Hardware stack levels required when called:    9
 33194 ;; This function calls:
 33195 ;;		Absolute function
 33196 ;;		_Sch_SchmIntService
 33197 ;; This function is called by:
 33198 ;;		_LowPriorityIsr
 33199 ;; This function uses a non-reentrant model
 33200 ;;
 33201                           
 33202                           	psect	text159
 33203  005F26                     __ptext159:
 33204                           	opt stack 0
 33205  005F26                     _Tmr_Tmr2Isr:
 33206                           	opt stack 8
 33207                           
 33208                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 33209                           
 33210                           ;incstack = 0
 33211  005F26  929E               	bcf	3998,1,c	;volatile
 33212                           
 33213                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 33214  005F28  0101               	movlb	1	; () banked
 33215  005F2A  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 33216  005F2C  11D4               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33217  005F2E  B4D8               	btfsc	status,2,c
 33218  005F30  0012               	return	
 33219                           
 33220                           ; BSR set to: 1
 33221                           ;tmr_drv.c: 315: {
 33222                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 33223  005F32  D801               	call	i1u1481_28
 33224  005F34  0012               	return	
 33225  005F36                     i1u1481_28:
 33226  005F36  0005               	push	
 33227  005F38  6EFA               	movwf	pclath,c
 33228  005F3A  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 33229  005F3C  6EFD               	movwf	tosl,c
 33230  005F3E  51D4               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33231  005F40  6EFE               	movwf	tosh,c
 33232  005F42  50F8               	movf	tblptru,w,c
 33233  005F44  6EFF               	movwf	tosu,c
 33234  005F46  50FA               	movf	pclath,w,c
 33235  005F48  0012               	return		;indir
 33236  005F4A                     __end_of_Tmr_Tmr2Isr:
 33237                           	opt stack 0
 33238                           tosu	equ	0xFFF
 33239                           tosh	equ	0xFFE
 33240                           tosl	equ	0xFFD
 33241                           pclatu	equ	0xFFB
 33242                           pclath	equ	0xFFA
 33243                           tblptru	equ	0xFF8
 33244                           tblptrh	equ	0xFF7
 33245                           tblptrl	equ	0xFF6
 33246                           tablat	equ	0xFF5
 33247                           prodh	equ	0xFF4
 33248                           prodl	equ	0xFF3
 33249                           intcon	equ	0xFF2
 33250                           intcon2	equ	0xFF1
 33251                           intcon3	equ	0xFF0
 33252                           indf0	equ	0xFEF
 33253                           postinc0	equ	0xFEE
 33254                           plusw0	equ	0xFEB
 33255                           fsr0h	equ	0xFEA
 33256                           fsr0l	equ	0xFE9
 33257                           wreg	equ	0xFE8
 33258                           indf1	equ	0xFE7
 33259                           postinc1	equ	0xFE6
 33260                           postdec1	equ	0xFE5
 33261                           plusw1	equ	0xFE3
 33262                           fsr1h	equ	0xFE2
 33263                           fsr1l	equ	0xFE1
 33264                           bsr	equ	0xFE0
 33265                           indf2	equ	0xFDF
 33266                           postinc2	equ	0xFDE
 33267                           postdec2	equ	0xFDD
 33268                           plusw2	equ	0xFDB
 33269                           fsr2h	equ	0xFDA
 33270                           fsr2l	equ	0xFD9
 33271                           status	equ	0xFD8
 33272                           
 33273 ;; *************** function _Sch_SchmIntService *****************
 33274 ;; Defined at:
 33275 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33276 ;; Parameters:    Size  Location     Type
 33277 ;;		None
 33278 ;; Auto vars:     Size  Location     Type
 33279 ;;		None
 33280 ;; Return value:  Size  Location     Type
 33281 ;;                  1    wreg      void 
 33282 ;; Registers used:
 33283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33284 ;; Tracked objects:
 33285 ;;		On entry : 0/0
 33286 ;;		On exit  : 0/0
 33287 ;;		Unchanged: 0/0
 33288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33293 ;;Total ram usage:        0 bytes
 33294 ;; Hardware stack levels used:    1
 33295 ;; Hardware stack levels required when called:    8
 33296 ;; This function calls:
 33297 ;;		_OsAlrm_ProcessOsAlarms
 33298 ;;		_UpdateOsCounters
 33299 ;;		_UpdateSchFlag
 33300 ;; This function is called by:
 33301 ;;		_SystemInit
 33302 ;;		_Tmr_Tmr2Isr
 33303 ;; This function uses a non-reentrant model
 33304 ;;
 33305                           
 33306                           	psect	text160
 33307  006250                     __ptext160:
 33308                           	opt stack 0
 33309  006250                     _Sch_SchmIntService:
 33310                           	opt stack 8
 33311                           
 33312                           ;os_sched.c: 217: UpdateSchFlag();
 33313                           
 33314                           ;incstack = 0
 33315  006250  EC49  F030         	call	_UpdateSchFlag	;wreg free
 33316                           
 33317                           ;os_sched.c: 219: UpdateOsCounters();
 33318  006254  EC18  F031         	call	_UpdateOsCounters	;wreg free
 33319                           
 33320                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 33321  006258  EC6E  F011         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 33322  00625C  0012               	return		;funcret
 33323  00625E                     __end_of_Sch_SchmIntService:
 33324                           	opt stack 0
 33325                           tosu	equ	0xFFF
 33326                           tosh	equ	0xFFE
 33327                           tosl	equ	0xFFD
 33328                           pclatu	equ	0xFFB
 33329                           pclath	equ	0xFFA
 33330                           tblptru	equ	0xFF8
 33331                           tblptrh	equ	0xFF7
 33332                           tblptrl	equ	0xFF6
 33333                           tablat	equ	0xFF5
 33334                           prodh	equ	0xFF4
 33335                           prodl	equ	0xFF3
 33336                           intcon	equ	0xFF2
 33337                           intcon2	equ	0xFF1
 33338                           intcon3	equ	0xFF0
 33339                           indf0	equ	0xFEF
 33340                           postinc0	equ	0xFEE
 33341                           plusw0	equ	0xFEB
 33342                           fsr0h	equ	0xFEA
 33343                           fsr0l	equ	0xFE9
 33344                           wreg	equ	0xFE8
 33345                           indf1	equ	0xFE7
 33346                           postinc1	equ	0xFE6
 33347                           postdec1	equ	0xFE5
 33348                           plusw1	equ	0xFE3
 33349                           fsr1h	equ	0xFE2
 33350                           fsr1l	equ	0xFE1
 33351                           bsr	equ	0xFE0
 33352                           indf2	equ	0xFDF
 33353                           postinc2	equ	0xFDE
 33354                           postdec2	equ	0xFDD
 33355                           plusw2	equ	0xFDB
 33356                           fsr2h	equ	0xFDA
 33357                           fsr2l	equ	0xFD9
 33358                           status	equ	0xFD8
 33359                           
 33360 ;; *************** function _UpdateSchFlag *****************
 33361 ;; Defined at:
 33362 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33363 ;; Parameters:    Size  Location     Type
 33364 ;;		None
 33365 ;; Auto vars:     Size  Location     Type
 33366 ;;		None
 33367 ;; Return value:  Size  Location     Type
 33368 ;;                  1    wreg      void 
 33369 ;; Registers used:
 33370 ;;		wreg, status,2, status,0
 33371 ;; Tracked objects:
 33372 ;;		On entry : 0/0
 33373 ;;		On exit  : 0/0
 33374 ;;		Unchanged: 0/0
 33375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33380 ;;Total ram usage:        0 bytes
 33381 ;; Hardware stack levels used:    1
 33382 ;; Hardware stack levels required when called:    4
 33383 ;; This function calls:
 33384 ;;		Nothing
 33385 ;; This function is called by:
 33386 ;;		_Sch_SchmIntService
 33387 ;; This function uses a non-reentrant model
 33388 ;;
 33389                           
 33390                           	psect	text161
 33391  006092                     __ptext161:
 33392                           	opt stack 0
 33393  006092                     _UpdateSchFlag:
 33394                           	opt stack 11
 33395                           
 33396                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 33397                           ;os_sched.c: 138: InterruptCounter++;
 33398                           
 33399                           ;incstack = 0
 33400  006092  0102               	movlb	2	; () banked
 33401  006094  4BDE               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 33402  006096  2BDF               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 33403                           
 33404                           ; BSR set to: 2
 33405                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 33406  006098  51DE               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 33407  00609A  11DF               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 33408  00609C  B4D8               	btfsc	status,2,c
 33409  00609E  0012               	return	
 33410                           
 33411                           ; BSR set to: 2
 33412                           ;os_sched.c: 141: {
 33413                           ;os_sched.c: 143: InterruptCounter = 0;
 33414  0060A0  0E00               	movlw	0
 33415  0060A2  6FDF               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 33416  0060A4  0E00               	movlw	0
 33417  0060A6  6FDE               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 33418                           
 33419                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 33420  0060A8  0E00               	movlw	0
 33421  0060AA  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 33422  0060AC  0012               	return	
 33423  0060AE                     __end_of_UpdateSchFlag:
 33424                           	opt stack 0
 33425                           tosu	equ	0xFFF
 33426                           tosh	equ	0xFFE
 33427                           tosl	equ	0xFFD
 33428                           pclatu	equ	0xFFB
 33429                           pclath	equ	0xFFA
 33430                           tblptru	equ	0xFF8
 33431                           tblptrh	equ	0xFF7
 33432                           tblptrl	equ	0xFF6
 33433                           tablat	equ	0xFF5
 33434                           prodh	equ	0xFF4
 33435                           prodl	equ	0xFF3
 33436                           intcon	equ	0xFF2
 33437                           intcon2	equ	0xFF1
 33438                           intcon3	equ	0xFF0
 33439                           indf0	equ	0xFEF
 33440                           postinc0	equ	0xFEE
 33441                           plusw0	equ	0xFEB
 33442                           fsr0h	equ	0xFEA
 33443                           fsr0l	equ	0xFE9
 33444                           wreg	equ	0xFE8
 33445                           indf1	equ	0xFE7
 33446                           postinc1	equ	0xFE6
 33447                           postdec1	equ	0xFE5
 33448                           plusw1	equ	0xFE3
 33449                           fsr1h	equ	0xFE2
 33450                           fsr1l	equ	0xFE1
 33451                           bsr	equ	0xFE0
 33452                           indf2	equ	0xFDF
 33453                           postinc2	equ	0xFDE
 33454                           postdec2	equ	0xFDD
 33455                           plusw2	equ	0xFDB
 33456                           fsr2h	equ	0xFDA
 33457                           fsr2l	equ	0xFD9
 33458                           status	equ	0xFD8
 33459                           
 33460 ;; *************** function _UpdateOsCounters *****************
 33461 ;; Defined at:
 33462 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33463 ;; Parameters:    Size  Location     Type
 33464 ;;		None
 33465 ;; Auto vars:     Size  Location     Type
 33466 ;;		None
 33467 ;; Return value:  Size  Location     Type
 33468 ;;                  1    wreg      void 
 33469 ;; Registers used:
 33470 ;;		wreg, status,2, status,0
 33471 ;; Tracked objects:
 33472 ;;		On entry : 0/0
 33473 ;;		On exit  : 0/0
 33474 ;;		Unchanged: 0/0
 33475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33480 ;;Total ram usage:        0 bytes
 33481 ;; Hardware stack levels used:    1
 33482 ;; Hardware stack levels required when called:    4
 33483 ;; This function calls:
 33484 ;;		Nothing
 33485 ;; This function is called by:
 33486 ;;		_Sch_SchmIntService
 33487 ;; This function uses a non-reentrant model
 33488 ;;
 33489                           
 33490                           	psect	text162
 33491  006230                     __ptext162:
 33492                           	opt stack 0
 33493  006230                     _UpdateOsCounters:
 33494                           	opt stack 11
 33495                           
 33496                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 33497                           
 33498                           ; BSR set to: 2
 33499                           ;incstack = 0
 33500  006230  0E01               	movlw	1
 33501  006232  0103               	movlb	3	; () banked
 33502  006234  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 33503  006236  0E00               	movlw	0
 33504  006238  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 33505  00623A  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 33506  00623C  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 33507                           
 33508                           ; BSR set to: 3
 33509  00623E  0012               	return		;funcret
 33510  006240                     __end_of_UpdateOsCounters:
 33511                           	opt stack 0
 33512                           tosu	equ	0xFFF
 33513                           tosh	equ	0xFFE
 33514                           tosl	equ	0xFFD
 33515                           pclatu	equ	0xFFB
 33516                           pclath	equ	0xFFA
 33517                           tblptru	equ	0xFF8
 33518                           tblptrh	equ	0xFF7
 33519                           tblptrl	equ	0xFF6
 33520                           tablat	equ	0xFF5
 33521                           prodh	equ	0xFF4
 33522                           prodl	equ	0xFF3
 33523                           intcon	equ	0xFF2
 33524                           intcon2	equ	0xFF1
 33525                           intcon3	equ	0xFF0
 33526                           indf0	equ	0xFEF
 33527                           postinc0	equ	0xFEE
 33528                           plusw0	equ	0xFEB
 33529                           fsr0h	equ	0xFEA
 33530                           fsr0l	equ	0xFE9
 33531                           wreg	equ	0xFE8
 33532                           indf1	equ	0xFE7
 33533                           postinc1	equ	0xFE6
 33534                           postdec1	equ	0xFE5
 33535                           plusw1	equ	0xFE3
 33536                           fsr1h	equ	0xFE2
 33537                           fsr1l	equ	0xFE1
 33538                           bsr	equ	0xFE0
 33539                           indf2	equ	0xFDF
 33540                           postinc2	equ	0xFDE
 33541                           postdec2	equ	0xFDD
 33542                           plusw2	equ	0xFDB
 33543                           fsr2h	equ	0xFDA
 33544                           fsr2l	equ	0xFD9
 33545                           status	equ	0xFD8
 33546                           
 33547 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 33548 ;; Defined at:
 33549 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33550 ;; Parameters:    Size  Location     Type
 33551 ;;		None
 33552 ;; Auto vars:     Size  Location     Type
 33553 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 33554 ;; Return value:  Size  Location     Type
 33555 ;;                  1    wreg      void 
 33556 ;; Registers used:
 33557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33558 ;; Tracked objects:
 33559 ;;		On entry : 0/0
 33560 ;;		On exit  : 0/0
 33561 ;;		Unchanged: 0/0
 33562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33565 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33566 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33567 ;;Total ram usage:       10 bytes
 33568 ;; Hardware stack levels used:    1
 33569 ;; Hardware stack levels required when called:    7
 33570 ;; This function calls:
 33571 ;;		_I2cDummyTx
 33572 ;;		_OsAlrm_ClearOsAlarm
 33573 ;;		i1___wmul
 33574 ;; This function is called by:
 33575 ;;		_Sch_SchmIntService
 33576 ;; This function uses a non-reentrant model
 33577 ;;
 33578                           
 33579                           	psect	text163
 33580  0022DC                     __ptext163:
 33581                           	opt stack 0
 33582  0022DC                     _OsAlrm_ProcessOsAlarms:
 33583                           	opt stack 8
 33584                           
 33585                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 33586                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 33587                           
 33588                           ; BSR set to: 3
 33589                           ;incstack = 0
 33590  0022DC  0E00               	movlw	0
 33591  0022DE  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 33592  0022E0  0E00               	movlw	0
 33593  0022E2  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 33594  0022E4  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33595  0022E6  E105               	bnz	i1u1452_20
 33596  0022E8  0E14               	movlw	20
 33597  0022EA  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33598  0022EC  B0D8               	btfsc	status,0,c
 33599  0022EE  0012               	return	
 33600  0022F0  D001               	goto	i1l742
 33601  0022F2                     i1u1452_20:
 33602  0022F2  0012               	return	
 33603  0022F4                     i1l742:
 33604                           
 33605                           ;os_alarms.c: 121: {
 33606                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 33607  0022F4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33608  0022F8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33609  0022FC  0E00               	movlw	0
 33610  0022FE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33611  002300  0E0B               	movlw	11
 33612  002302  6E1B               	movwf	i1___wmul@multiplicand,c
 33613  002304  EC4A  F02F         	call	i1___wmul	;wreg free
 33614  002308  0E00               	movlw	low _OsAlarms
 33615  00230A  2419               	addwf	?i1___wmul,w,c
 33616  00230C  6ED9               	movwf	fsr2l,c
 33617  00230E  0E06               	movlw	high _OsAlarms
 33618  002310  201A               	addwfc	?i1___wmul+1,w,c
 33619  002312  6EDA               	movwf	fsr2h,c
 33620  002314  04DE               	decf	postinc2,w,c
 33621  002316  A4D8               	btfss	status,2,c
 33622  002318  D086               	goto	i1u1456_29
 33623                           
 33624                           ;os_alarms.c: 124: {
 33625                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 33626  00231A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33627  00231E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33628  002322  0E00               	movlw	0
 33629  002324  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33630  002326  0E0B               	movlw	11
 33631  002328  6E1B               	movwf	i1___wmul@multiplicand,c
 33632  00232A  EC4A  F02F         	call	i1___wmul	;wreg free
 33633  00232E  0E01               	movlw	1
 33634  002330  2619               	addwf	?i1___wmul,f,c
 33635  002332  0E00               	movlw	0
 33636  002334  221A               	addwfc	?i1___wmul+1,f,c
 33637  002336  0E00               	movlw	low _OsAlarms
 33638  002338  2419               	addwf	?i1___wmul,w,c
 33639  00233A  6ED9               	movwf	fsr2l,c
 33640  00233C  0E06               	movlw	high _OsAlarms
 33641  00233E  201A               	addwfc	?i1___wmul+1,w,c
 33642  002340  6EDA               	movwf	fsr2h,c
 33643  002342  2ADE               	incf	postinc2,f,c
 33644  002344  0E00               	movlw	0
 33645  002346  22DE               	addwfc	postinc2,f,c
 33646  002348  22DE               	addwfc	postinc2,f,c
 33647  00234A  22DE               	addwfc	postinc2,f,c
 33648                           
 33649                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 33650  00234C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33651  002350  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33652  002354  0E00               	movlw	0
 33653  002356  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33654  002358  0E0B               	movlw	11
 33655  00235A  6E1B               	movwf	i1___wmul@multiplicand,c
 33656  00235C  EC4A  F02F         	call	i1___wmul	;wreg free
 33657  002360  0E05               	movlw	5
 33658  002362  2619               	addwf	?i1___wmul,f,c
 33659  002364  0E00               	movlw	0
 33660  002366  221A               	addwfc	?i1___wmul+1,f,c
 33661  002368  0E00               	movlw	low _OsAlarms
 33662  00236A  2419               	addwf	?i1___wmul,w,c
 33663  00236C  6ED9               	movwf	fsr2l,c
 33664  00236E  0E06               	movlw	high _OsAlarms
 33665  002370  201A               	addwfc	?i1___wmul+1,w,c
 33666  002372  6EDA               	movwf	fsr2h,c
 33667  002374  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33668  002378  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33669  00237C  0E00               	movlw	0
 33670  00237E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33671  002380  0E0B               	movlw	11
 33672  002382  6E1B               	movwf	i1___wmul@multiplicand,c
 33673  002384  EC4A  F02F         	call	i1___wmul	;wreg free
 33674  002388  0E01               	movlw	1
 33675  00238A  2619               	addwf	?i1___wmul,f,c
 33676  00238C  0E00               	movlw	0
 33677  00238E  221A               	addwfc	?i1___wmul+1,f,c
 33678  002390  0E00               	movlw	low _OsAlarms
 33679  002392  2419               	addwf	?i1___wmul,w,c
 33680  002394  6EE1               	movwf	fsr1l,c
 33681  002396  0E06               	movlw	high _OsAlarms
 33682  002398  201A               	addwfc	?i1___wmul+1,w,c
 33683  00239A  6EE2               	movwf	fsr1h,c
 33684  00239C  50DE               	movf	postinc2,w,c
 33685  00239E  5CE6               	subwf	postinc1,w,c
 33686  0023A0  50DE               	movf	postinc2,w,c
 33687  0023A2  58E6               	subwfb	postinc1,w,c
 33688  0023A4  50DE               	movf	postinc2,w,c
 33689  0023A6  58E6               	subwfb	postinc1,w,c
 33690  0023A8  50DE               	movf	postinc2,w,c
 33691  0023AA  58E6               	subwfb	postinc1,w,c
 33692  0023AC  A0D8               	btfss	status,0,c
 33693  0023AE  D03B               	goto	i1u1456_29
 33694                           
 33695                           ;os_alarms.c: 129: {
 33696                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 33697  0023B0  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33698  0023B2  EC8C  F029         	call	_OsAlrm_ClearOsAlarm
 33699                           
 33700                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 33701  0023B6  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33702  0023BA  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33703  0023BE  0E00               	movlw	0
 33704  0023C0  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33705  0023C2  0E0B               	movlw	11
 33706  0023C4  6E1B               	movwf	i1___wmul@multiplicand,c
 33707  0023C6  EC4A  F02F         	call	i1___wmul	;wreg free
 33708  0023CA  0E09               	movlw	9
 33709  0023CC  2619               	addwf	?i1___wmul,f,c
 33710  0023CE  0E00               	movlw	0
 33711  0023D0  221A               	addwfc	?i1___wmul+1,f,c
 33712  0023D2  0E00               	movlw	low _OsAlarms
 33713  0023D4  2419               	addwf	?i1___wmul,w,c
 33714  0023D6  6ED9               	movwf	fsr2l,c
 33715  0023D8  0E06               	movlw	high _OsAlarms
 33716  0023DA  201A               	addwfc	?i1___wmul+1,w,c
 33717  0023DC  6EDA               	movwf	fsr2h,c
 33718  0023DE  50DE               	movf	postinc2,w,c
 33719  0023E0  10DE               	iorwf	postinc2,w,c
 33720  0023E2  B4D8               	btfsc	status,2,c
 33721  0023E4  D020               	goto	i1u1456_29
 33722                           
 33723                           ;os_alarms.c: 134: {
 33724                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 33725  0023E6  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33726  0023EA  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33727  0023EE  0E00               	movlw	0
 33728  0023F0  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33729  0023F2  0E0B               	movlw	11
 33730  0023F4  6E1B               	movwf	i1___wmul@multiplicand,c
 33731  0023F6  EC4A  F02F         	call	i1___wmul	;wreg free
 33732  0023FA  0E09               	movlw	9
 33733  0023FC  2619               	addwf	?i1___wmul,f,c
 33734  0023FE  0E00               	movlw	0
 33735  002400  221A               	addwfc	?i1___wmul+1,f,c
 33736  002402  0E00               	movlw	low _OsAlarms
 33737  002404  2419               	addwf	?i1___wmul,w,c
 33738  002406  6ED9               	movwf	fsr2l,c
 33739  002408  0E06               	movlw	high _OsAlarms
 33740  00240A  201A               	addwfc	?i1___wmul+1,w,c
 33741  00240C  6EDA               	movwf	fsr2h,c
 33742  00240E  D801               	call	i1u1456_28
 33743  002410  D00A               	goto	i1u1456_29
 33744  002412                     i1u1456_28:
 33745  002412  0005               	push	
 33746  002414  6EFA               	movwf	pclath,c
 33747  002416  50DE               	movf	postinc2,w,c
 33748  002418  6EFD               	movwf	tosl,c
 33749  00241A  50DE               	movf	postinc2,w,c
 33750  00241C  6EFE               	movwf	tosh,c
 33751  00241E  50F8               	movf	tblptru,w,c
 33752  002420  6EFF               	movwf	tosu,c
 33753  002422  50FA               	movf	pclath,w,c
 33754  002424  0012               	return		;indir
 33755  002426                     i1u1456_29:
 33756  002426  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 33757  002428  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 33758  00242A  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33759  00242C  E101               	bnz	i1l747
 33760  00242E  D75C               	goto	L73
 33761  002430                     i1l747:
 33762  002430  0012               	return		;funcret
 33763  002432                     __end_of_OsAlrm_ProcessOsAlarms:
 33764                           	opt stack 0
 33765                           tosu	equ	0xFFF
 33766                           tosh	equ	0xFFE
 33767                           tosl	equ	0xFFD
 33768                           pclatu	equ	0xFFB
 33769                           pclath	equ	0xFFA
 33770                           tblptru	equ	0xFF8
 33771                           tblptrh	equ	0xFF7
 33772                           tblptrl	equ	0xFF6
 33773                           tablat	equ	0xFF5
 33774                           prodh	equ	0xFF4
 33775                           prodl	equ	0xFF3
 33776                           intcon	equ	0xFF2
 33777                           intcon2	equ	0xFF1
 33778                           intcon3	equ	0xFF0
 33779                           indf0	equ	0xFEF
 33780                           postinc0	equ	0xFEE
 33781                           plusw0	equ	0xFEB
 33782                           fsr0h	equ	0xFEA
 33783                           fsr0l	equ	0xFE9
 33784                           wreg	equ	0xFE8
 33785                           indf1	equ	0xFE7
 33786                           postinc1	equ	0xFE6
 33787                           postdec1	equ	0xFE5
 33788                           plusw1	equ	0xFE3
 33789                           fsr1h	equ	0xFE2
 33790                           fsr1l	equ	0xFE1
 33791                           bsr	equ	0xFE0
 33792                           indf2	equ	0xFDF
 33793                           postinc2	equ	0xFDE
 33794                           postdec2	equ	0xFDD
 33795                           plusw2	equ	0xFDB
 33796                           fsr2h	equ	0xFDA
 33797                           fsr2l	equ	0xFD9
 33798                           status	equ	0xFD8
 33799                           
 33800 ;; *************** function i1___wmul *****************
 33801 ;; Defined at:
 33802 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33803 ;; Parameters:    Size  Location     Type
 33804 ;;  multiplier      2   24[COMRAM] unsigned int 
 33805 ;;  multiplicand    2   26[COMRAM] unsigned int 
 33806 ;; Auto vars:     Size  Location     Type
 33807 ;;  __wmul          2   28[COMRAM] unsigned int 
 33808 ;; Return value:  Size  Location     Type
 33809 ;;                  2   24[COMRAM] unsigned int 
 33810 ;; Registers used:
 33811 ;;		wreg, status,2, status,0, prodl, prodh
 33812 ;; Tracked objects:
 33813 ;;		On entry : 0/0
 33814 ;;		On exit  : 0/0
 33815 ;;		Unchanged: 0/0
 33816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33820 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33821 ;;Total ram usage:        6 bytes
 33822 ;; Hardware stack levels used:    1
 33823 ;; Hardware stack levels required when called:    4
 33824 ;; This function calls:
 33825 ;;		Nothing
 33826 ;; This function is called by:
 33827 ;;		_OsAlrm_ProcessOsAlarms
 33828 ;; This function uses a non-reentrant model
 33829 ;;
 33830                           
 33831                           	psect	text164
 33832  005E94                     __ptext164:
 33833                           	opt stack 0
 33834  005E94                     i1___wmul:
 33835                           	opt stack 10
 33836                           
 33837                           ;incstack = 0
 33838  005E94  5019               	movf	i1___wmul@multiplier,w,c
 33839  005E96  021B               	mulwf	i1___wmul@multiplicand,c
 33840  005E98  CFF3 F01D          	movff	prodl,i1___wmul@product
 33841  005E9C  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 33842  005EA0  5019               	movf	i1___wmul@multiplier,w,c
 33843  005EA2  021C               	mulwf	i1___wmul@multiplicand+1,c
 33844  005EA4  50F3               	movf	prodl,w,c
 33845  005EA6  261E               	addwf	i1___wmul@product+1,f,c
 33846  005EA8  501A               	movf	i1___wmul@multiplier+1,w,c
 33847  005EAA  021B               	mulwf	i1___wmul@multiplicand,c
 33848  005EAC  50F3               	movf	prodl,w,c
 33849  005EAE  261E               	addwf	i1___wmul@product+1,f,c
 33850  005EB0  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 33851  005EB4  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 33852  005EB8  0012               	return	
 33853  005EBA                     __end_ofi1___wmul:
 33854                           	opt stack 0
 33855                           tosu	equ	0xFFF
 33856                           tosh	equ	0xFFE
 33857                           tosl	equ	0xFFD
 33858                           pclatu	equ	0xFFB
 33859                           pclath	equ	0xFFA
 33860                           tblptru	equ	0xFF8
 33861                           tblptrh	equ	0xFF7
 33862                           tblptrl	equ	0xFF6
 33863                           tablat	equ	0xFF5
 33864                           prodh	equ	0xFF4
 33865                           prodl	equ	0xFF3
 33866                           intcon	equ	0xFF2
 33867                           intcon2	equ	0xFF1
 33868                           intcon3	equ	0xFF0
 33869                           indf0	equ	0xFEF
 33870                           postinc0	equ	0xFEE
 33871                           plusw0	equ	0xFEB
 33872                           fsr0h	equ	0xFEA
 33873                           fsr0l	equ	0xFE9
 33874                           wreg	equ	0xFE8
 33875                           indf1	equ	0xFE7
 33876                           postinc1	equ	0xFE6
 33877                           postdec1	equ	0xFE5
 33878                           plusw1	equ	0xFE3
 33879                           fsr1h	equ	0xFE2
 33880                           fsr1l	equ	0xFE1
 33881                           bsr	equ	0xFE0
 33882                           indf2	equ	0xFDF
 33883                           postinc2	equ	0xFDE
 33884                           postdec2	equ	0xFDD
 33885                           plusw2	equ	0xFDB
 33886                           fsr2h	equ	0xFDA
 33887                           fsr2l	equ	0xFD9
 33888                           status	equ	0xFD8
 33889                           
 33890 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 33891 ;; Defined at:
 33892 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33893 ;; Parameters:    Size  Location     Type
 33894 ;;  OsAlarmId       1    wreg     unsigned char 
 33895 ;; Auto vars:     Size  Location     Type
 33896 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 33897 ;; Return value:  Size  Location     Type
 33898 ;;                  1    wreg      void 
 33899 ;; Registers used:
 33900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33901 ;; Tracked objects:
 33902 ;;		On entry : 0/0
 33903 ;;		On exit  : 0/0
 33904 ;;		Unchanged: 0/0
 33905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33910 ;;Total ram usage:        1 bytes
 33911 ;; Hardware stack levels used:    1
 33912 ;; Hardware stack levels required when called:    4
 33913 ;; This function calls:
 33914 ;;		Nothing
 33915 ;; This function is called by:
 33916 ;;		_OsAlrm_ProcessOsAlarms
 33917 ;; This function uses a non-reentrant model
 33918 ;;
 33919                           
 33920                           	psect	text165
 33921  005318                     __ptext165:
 33922                           	opt stack 0
 33923  005318                     _OsAlrm_ClearOsAlarm:
 33924                           	opt stack 10
 33925                           
 33926                           ;incstack = 0
 33927                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 33928  005318  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 33929                           
 33930                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 33931  00531A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33932  00531C  0D0B               	mullw	11
 33933  00531E  0E00               	movlw	low _OsAlarms
 33934  005320  24F3               	addwf	prodl,w,c
 33935  005322  6ED9               	movwf	fsr2l,c
 33936  005324  0E06               	movlw	high _OsAlarms
 33937  005326  20F4               	addwfc	prodh,w,c
 33938  005328  6EDA               	movwf	fsr2h,c
 33939  00532A  0E00               	movlw	0
 33940  00532C  6EDF               	movwf	indf2,c
 33941                           
 33942                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 33943  00532E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33944  005330  0D0B               	mullw	11
 33945  005332  0E01               	movlw	1
 33946  005334  26F3               	addwf	prodl,f,c
 33947  005336  0E00               	movlw	0
 33948  005338  22F4               	addwfc	prodh,f,c
 33949  00533A  0E00               	movlw	low _OsAlarms
 33950  00533C  24F3               	addwf	prodl,w,c
 33951  00533E  6ED9               	movwf	fsr2l,c
 33952  005340  0E06               	movlw	high _OsAlarms
 33953  005342  20F4               	addwfc	prodh,w,c
 33954  005344  6EDA               	movwf	fsr2h,c
 33955  005346  6ADE               	clrf	postinc2,c
 33956  005348  6ADE               	clrf	postinc2,c
 33957  00534A  6ADE               	clrf	postinc2,c
 33958  00534C  6ADD               	clrf	postdec2,c
 33959                           
 33960                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 33961  00534E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33962  005350  0D0B               	mullw	11
 33963  005352  0E05               	movlw	5
 33964  005354  26F3               	addwf	prodl,f,c
 33965  005356  0E00               	movlw	0
 33966  005358  22F4               	addwfc	prodh,f,c
 33967  00535A  0E00               	movlw	low _OsAlarms
 33968  00535C  24F3               	addwf	prodl,w,c
 33969  00535E  6ED9               	movwf	fsr2l,c
 33970  005360  0E06               	movlw	high _OsAlarms
 33971  005362  20F4               	addwfc	prodh,w,c
 33972  005364  6EDA               	movwf	fsr2h,c
 33973  005366  6ADE               	clrf	postinc2,c
 33974  005368  6ADE               	clrf	postinc2,c
 33975  00536A  6ADE               	clrf	postinc2,c
 33976  00536C  6ADD               	clrf	postdec2,c
 33977  00536E  0012               	return		;funcret
 33978  005370                     __end_of_OsAlrm_ClearOsAlarm:
 33979                           	opt stack 0
 33980                           tosu	equ	0xFFF
 33981                           tosh	equ	0xFFE
 33982                           tosl	equ	0xFFD
 33983                           pclatu	equ	0xFFB
 33984                           pclath	equ	0xFFA
 33985                           tblptru	equ	0xFF8
 33986                           tblptrh	equ	0xFF7
 33987                           tblptrl	equ	0xFF6
 33988                           tablat	equ	0xFF5
 33989                           prodh	equ	0xFF4
 33990                           prodl	equ	0xFF3
 33991                           intcon	equ	0xFF2
 33992                           intcon2	equ	0xFF1
 33993                           intcon3	equ	0xFF0
 33994                           indf0	equ	0xFEF
 33995                           postinc0	equ	0xFEE
 33996                           plusw0	equ	0xFEB
 33997                           fsr0h	equ	0xFEA
 33998                           fsr0l	equ	0xFE9
 33999                           wreg	equ	0xFE8
 34000                           indf1	equ	0xFE7
 34001                           postinc1	equ	0xFE6
 34002                           postdec1	equ	0xFE5
 34003                           plusw1	equ	0xFE3
 34004                           fsr1h	equ	0xFE2
 34005                           fsr1l	equ	0xFE1
 34006                           bsr	equ	0xFE0
 34007                           indf2	equ	0xFDF
 34008                           postinc2	equ	0xFDE
 34009                           postdec2	equ	0xFDD
 34010                           plusw2	equ	0xFDB
 34011                           fsr2h	equ	0xFDA
 34012                           fsr2l	equ	0xFD9
 34013                           status	equ	0xFD8
 34014                           
 34015 ;; *************** function _I2cDummyTx *****************
 34016 ;; Defined at:
 34017 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34018 ;; Parameters:    Size  Location     Type
 34019 ;;		None
 34020 ;; Auto vars:     Size  Location     Type
 34021 ;;		None
 34022 ;; Return value:  Size  Location     Type
 34023 ;;                  1    wreg      void 
 34024 ;; Registers used:
 34025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34026 ;; Tracked objects:
 34027 ;;		On entry : 0/0
 34028 ;;		On exit  : 0/0
 34029 ;;		Unchanged: 0/0
 34030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34035 ;;Total ram usage:        0 bytes
 34036 ;; Hardware stack levels used:    1
 34037 ;; Hardware stack levels required when called:    6
 34038 ;; This function calls:
 34039 ;;		i1_I2cSlv_SendI2cMsg
 34040 ;; This function is called by:
 34041 ;;		_I2cSlv_MainTask
 34042 ;;		_OsAlrm_ProcessOsAlarms
 34043 ;; This function uses a non-reentrant model
 34044 ;;
 34045                           
 34046                           	psect	text166
 34047  0060AE                     __ptext166:
 34048                           	opt stack 0
 34049  0060AE                     _I2cDummyTx:
 34050                           	opt stack 8
 34051                           
 34052                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 34053                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 34054                           
 34055                           ;incstack = 0
 34056  0060AE  0EFE               	movlw	low I2cDummyTx@DummyBuffer
 34057  0060B0  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 34058  0060B2  0E01               	movlw	high I2cDummyTx@DummyBuffer
 34059  0060B4  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 34060  0060B6  0E00               	movlw	0
 34061  0060B8  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 34062  0060BA  0E01               	movlw	1
 34063  0060BC  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 34064  0060BE  ECC9  F02D         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 34065                           
 34066                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 34067  0060C2  0E01               	movlw	1
 34068  0060C4  0101               	movlb	1	; () banked
 34069  0060C6  6FEA               	movwf	_I2cBusStatus& (0+255),b
 34070                           
 34071                           ; BSR set to: 1
 34072  0060C8  0012               	return		;funcret
 34073  0060CA                     __end_of_I2cDummyTx:
 34074                           	opt stack 0
 34075                           tosu	equ	0xFFF
 34076                           tosh	equ	0xFFE
 34077                           tosl	equ	0xFFD
 34078                           pclatu	equ	0xFFB
 34079                           pclath	equ	0xFFA
 34080                           tblptru	equ	0xFF8
 34081                           tblptrh	equ	0xFF7
 34082                           tblptrl	equ	0xFF6
 34083                           tablat	equ	0xFF5
 34084                           prodh	equ	0xFF4
 34085                           prodl	equ	0xFF3
 34086                           intcon	equ	0xFF2
 34087                           intcon2	equ	0xFF1
 34088                           intcon3	equ	0xFF0
 34089                           indf0	equ	0xFEF
 34090                           postinc0	equ	0xFEE
 34091                           plusw0	equ	0xFEB
 34092                           fsr0h	equ	0xFEA
 34093                           fsr0l	equ	0xFE9
 34094                           wreg	equ	0xFE8
 34095                           indf1	equ	0xFE7
 34096                           postinc1	equ	0xFE6
 34097                           postdec1	equ	0xFE5
 34098                           plusw1	equ	0xFE3
 34099                           fsr1h	equ	0xFE2
 34100                           fsr1l	equ	0xFE1
 34101                           bsr	equ	0xFE0
 34102                           indf2	equ	0xFDF
 34103                           postinc2	equ	0xFDE
 34104                           postdec2	equ	0xFDD
 34105                           plusw2	equ	0xFDB
 34106                           fsr2h	equ	0xFDA
 34107                           fsr2l	equ	0xFD9
 34108                           status	equ	0xFD8
 34109                           
 34110 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 34111 ;; Defined at:
 34112 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34113 ;; Parameters:    Size  Location     Type
 34114 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 34115 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 34116 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 34117 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 34118 ;;  DataLenght      1   30[COMRAM] unsigned char 
 34119 ;; Auto vars:     Size  Location     Type
 34120 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 34121 ;; Return value:  Size  Location     Type
 34122 ;;                  1    wreg      unsigned char 
 34123 ;; Registers used:
 34124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34125 ;; Tracked objects:
 34126 ;;		On entry : 0/0
 34127 ;;		On exit  : 0/0
 34128 ;;		Unchanged: 0/0
 34129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34133 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34134 ;;Total ram usage:        5 bytes
 34135 ;; Hardware stack levels used:    1
 34136 ;; Hardware stack levels required when called:    5
 34137 ;; This function calls:
 34138 ;;		i1_GenerateEvt
 34139 ;; This function is called by:
 34140 ;;		_I2cDummyTx
 34141 ;; This function uses a non-reentrant model
 34142 ;;
 34143                           
 34144                           	psect	text167
 34145  005B92                     __ptext167:
 34146                           	opt stack 0
 34147  005B92                     i1_I2cSlv_SendI2cMsg:
 34148                           	opt stack 8
 34149                           
 34150                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 34151                           
 34152                           ; BSR set to: 1
 34153                           ;incstack = 0
 34154  005B92  0E00               	movlw	0
 34155  005B94  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34156                           
 34157                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 34158  005B96  0100               	movlb	0	; () banked
 34159  005B98  05CE               	decf	_I2cComSts& (0+255),w,b
 34160  005B9A  B4D8               	btfsc	status,2,c
 34161  005B9C  D014               	goto	i1l1409
 34162                           
 34163                           ; BSR set to: 0
 34164                           ;i2c_slv.c: 257: {
 34165                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 34166  005B9E  C01E  F39E         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 34167                           
 34168                           ; BSR set to: 0
 34169                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 34170  005BA2  0E00               	movlw	0
 34171  005BA4  0103               	movlb	3	; () banked
 34172  005BA6  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 34173                           
 34174                           ; BSR set to: 3
 34175                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 34176  005BA8  C01F  F3A2         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 34177                           
 34178                           ; BSR set to: 3
 34179                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 34180  005BAC  C01C  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 34181  005BB0  C01D  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 34182                           
 34183                           ; BSR set to: 3
 34184                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 34185  005BB4  0ED8               	movlw	low _I2cWriteDataEvt
 34186  005BB6  6E19               	movwf	i1GenerateEvt@Event,c
 34187  005BB8  0E00               	movlw	high _I2cWriteDataEvt
 34188  005BBA  6E1A               	movwf	i1GenerateEvt@Event+1,c
 34189  005BBC  ECC5  F030         	call	i1_GenerateEvt	;wreg free
 34190                           
 34191                           ;i2c_slv.c: 267: TxSts = 1u;
 34192  005BC0  0E01               	movlw	1
 34193  005BC2  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34194                           
 34195                           ;i2c_slv.c: 268: }
 34196  005BC4  0012               	return	
 34197  005BC6                     i1l1409:
 34198                           
 34199                           ;i2c_slv.c: 269: else
 34200                           ;i2c_slv.c: 270: {
 34201                           ;i2c_slv.c: 272: TxSts = 0u;
 34202  005BC6  0E00               	movlw	0
 34203  005BC8  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34204  005BCA  0012               	return	
 34205  005BCC                     __end_ofi1_I2cSlv_SendI2cMsg:
 34206                           	opt stack 0
 34207                           tosu	equ	0xFFF
 34208                           tosh	equ	0xFFE
 34209                           tosl	equ	0xFFD
 34210                           pclatu	equ	0xFFB
 34211                           pclath	equ	0xFFA
 34212                           tblptru	equ	0xFF8
 34213                           tblptrh	equ	0xFF7
 34214                           tblptrl	equ	0xFF6
 34215                           tablat	equ	0xFF5
 34216                           prodh	equ	0xFF4
 34217                           prodl	equ	0xFF3
 34218                           intcon	equ	0xFF2
 34219                           intcon2	equ	0xFF1
 34220                           intcon3	equ	0xFF0
 34221                           indf0	equ	0xFEF
 34222                           postinc0	equ	0xFEE
 34223                           plusw0	equ	0xFEB
 34224                           fsr0h	equ	0xFEA
 34225                           fsr0l	equ	0xFE9
 34226                           wreg	equ	0xFE8
 34227                           indf1	equ	0xFE7
 34228                           postinc1	equ	0xFE6
 34229                           postdec1	equ	0xFE5
 34230                           plusw1	equ	0xFE3
 34231                           fsr1h	equ	0xFE2
 34232                           fsr1l	equ	0xFE1
 34233                           bsr	equ	0xFE0
 34234                           indf2	equ	0xFDF
 34235                           postinc2	equ	0xFDE
 34236                           postdec2	equ	0xFDD
 34237                           plusw2	equ	0xFDB
 34238                           fsr2h	equ	0xFDA
 34239                           fsr2l	equ	0xFD9
 34240                           status	equ	0xFD8
 34241                           
 34242 ;; *************** function i1_GenerateEvt *****************
 34243 ;; Defined at:
 34244 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34245 ;; Parameters:    Size  Location     Type
 34246 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 34247 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34248 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34249 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34250 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34251 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34252 ;; Auto vars:     Size  Location     Type
 34253 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 34254 ;; Return value:  Size  Location     Type
 34255 ;;                  1    wreg      enum E7699
 34256 ;; Registers used:
 34257 ;;		wreg, fsr2l, fsr2h, status,2
 34258 ;; Tracked objects:
 34259 ;;		On entry : 0/0
 34260 ;;		On exit  : 0/0
 34261 ;;		Unchanged: 0/0
 34262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34267 ;;Total ram usage:        3 bytes
 34268 ;; Hardware stack levels used:    1
 34269 ;; Hardware stack levels required when called:    4
 34270 ;; This function calls:
 34271 ;;		Nothing
 34272 ;; This function is called by:
 34273 ;;		i1_I2cSlv_SendI2cMsg
 34274 ;; This function uses a non-reentrant model
 34275 ;;
 34276                           
 34277                           	psect	text168
 34278  00618A                     __ptext168:
 34279                           	opt stack 0
 34280  00618A                     i1_GenerateEvt:
 34281                           	opt stack 8
 34282                           
 34283                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34284                           
 34285                           ;incstack = 0
 34286  00618A  0E00               	movlw	0
 34287  00618C  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34288                           
 34289                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34290  00618E  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 34291  006192  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 34292  006196  0E02               	movlw	2
 34293  006198  6EDF               	movwf	indf2,c
 34294                           
 34295                           ;os_ser.c: 83: EventStatus = EventSent;
 34296  00619A  0E02               	movlw	2
 34297  00619C  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34298  00619E  0012               	return	
 34299  0061A0                     __end_ofi1_GenerateEvt:
 34300                           	opt stack 0
 34301                           tosu	equ	0xFFF
 34302                           tosh	equ	0xFFE
 34303                           tosl	equ	0xFFD
 34304                           pclatu	equ	0xFFB
 34305                           pclath	equ	0xFFA
 34306                           tblptru	equ	0xFF8
 34307                           tblptrh	equ	0xFF7
 34308                           tblptrl	equ	0xFF6
 34309                           tablat	equ	0xFF5
 34310                           prodh	equ	0xFF4
 34311                           prodl	equ	0xFF3
 34312                           intcon	equ	0xFF2
 34313                           intcon2	equ	0xFF1
 34314                           intcon3	equ	0xFF0
 34315                           indf0	equ	0xFEF
 34316                           postinc0	equ	0xFEE
 34317                           plusw0	equ	0xFEB
 34318                           fsr0h	equ	0xFEA
 34319                           fsr0l	equ	0xFE9
 34320                           wreg	equ	0xFE8
 34321                           indf1	equ	0xFE7
 34322                           postinc1	equ	0xFE6
 34323                           postdec1	equ	0xFE5
 34324                           plusw1	equ	0xFE3
 34325                           fsr1h	equ	0xFE2
 34326                           fsr1l	equ	0xFE1
 34327                           bsr	equ	0xFE0
 34328                           indf2	equ	0xFDF
 34329                           postinc2	equ	0xFDE
 34330                           postdec2	equ	0xFDD
 34331                           plusw2	equ	0xFDB
 34332                           fsr2h	equ	0xFDA
 34333                           fsr2l	equ	0xFD9
 34334                           status	equ	0xFD8
 34335                           
 34336 ;; *************** function _HighPriorityIsr *****************
 34337 ;; Defined at:
 34338 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 34339 ;; Parameters:    Size  Location     Type
 34340 ;;		None
 34341 ;; Auto vars:     Size  Location     Type
 34342 ;;		None
 34343 ;; Return value:  Size  Location     Type
 34344 ;;                  1    wreg      void 
 34345 ;; Registers used:
 34346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34347 ;; Tracked objects:
 34348 ;;		On entry : 0/0
 34349 ;;		On exit  : 0/0
 34350 ;;		Unchanged: 0/0
 34351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34354 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34355 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34356 ;;Total ram usage:       18 bytes
 34357 ;; Hardware stack levels used:    1
 34358 ;; Hardware stack levels required when called:    3
 34359 ;; This function calls:
 34360 ;;		_Mcu_Int0Isr
 34361 ;;		_Mcu_Int1Isr
 34362 ;;		_Rtcc_RtcIsr
 34363 ;;		_Uart_Uart1RxIsr
 34364 ;; This function is called by:
 34365 ;;		Interrupt level 2
 34366 ;; This function uses a non-reentrant model
 34367 ;;
 34368                           
 34369                           	psect	intcode
 34370  000008                     __pintcode:
 34371                           	opt stack 0
 34372  000008                     _HighPriorityIsr:
 34373                           	opt stack 8
 34374                           
 34375                           ;incstack = 0
 34376  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34377  00000A  EF2C  F021         	goto	int_func
 34378                           tosu	equ	0xFFF
 34379                           tosh	equ	0xFFE
 34380                           tosl	equ	0xFFD
 34381                           pclatu	equ	0xFFB
 34382                           pclath	equ	0xFFA
 34383                           tblptru	equ	0xFF8
 34384                           tblptrh	equ	0xFF7
 34385                           tblptrl	equ	0xFF6
 34386                           tablat	equ	0xFF5
 34387                           prodh	equ	0xFF4
 34388                           prodl	equ	0xFF3
 34389                           intcon	equ	0xFF2
 34390                           intcon2	equ	0xFF1
 34391                           intcon3	equ	0xFF0
 34392                           indf0	equ	0xFEF
 34393                           postinc0	equ	0xFEE
 34394                           plusw0	equ	0xFEB
 34395                           fsr0h	equ	0xFEA
 34396                           fsr0l	equ	0xFE9
 34397                           wreg	equ	0xFE8
 34398                           indf1	equ	0xFE7
 34399                           postinc1	equ	0xFE6
 34400                           postdec1	equ	0xFE5
 34401                           plusw1	equ	0xFE3
 34402                           fsr1h	equ	0xFE2
 34403                           fsr1l	equ	0xFE1
 34404                           bsr	equ	0xFE0
 34405                           indf2	equ	0xFDF
 34406                           postinc2	equ	0xFDE
 34407                           postdec2	equ	0xFDD
 34408                           plusw2	equ	0xFDB
 34409                           fsr2h	equ	0xFDA
 34410                           fsr2l	equ	0xFD9
 34411                           status	equ	0xFD8
 34412                           
 34413                           	psect	intcode_body
 34414  004258                     __pintcode_body:
 34415                           	opt stack 8
 34416  004258                     int_func:
 34417                           	opt stack 8
 34418  004258  CFFA F007          	movff	pclath,??_HighPriorityIsr
 34419  00425C  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 34420  004260  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 34421  004264  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 34422  004268  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 34423  00426C  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 34424  004270  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 34425  004274  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 34426  004278  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 34427  00427C  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 34428  004280  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 34429  004284  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 34430  004288  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 34431  00428C  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 34432  004290  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 34433  004294  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 34434  004298  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 34435  00429C  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 34436                           
 34437                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 34438  0042A0  B2F2               	btfsc	intcon,1,c	;volatile
 34439                           
 34440                           ;irq.c: 158: {
 34441                           ;irq.c: 160: Mcu_Int0Isr();
 34442  0042A2  EC6B  F031         	call	_Mcu_Int0Isr	;wreg free
 34443                           
 34444                           ;irq.c: 161: }
 34445                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 34446  0042A6  B0F0               	btfsc	intcon3,0,c	;volatile
 34447                           
 34448                           ;irq.c: 167: {
 34449                           ;irq.c: 169: Mcu_Int1Isr();
 34450  0042A8  EC69  F031         	call	_Mcu_Int1Isr	;wreg free
 34451                           
 34452                           ;irq.c: 170: }
 34453                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 34454  0042AC  B0A4               	btfsc	4004,0,c	;volatile
 34455                           
 34456                           ;irq.c: 203: {
 34457                           ;irq.c: 205: Rtcc_RtcIsr();
 34458  0042AE  EC67  F031         	call	_Rtcc_RtcIsr	;wreg free
 34459                           
 34460                           ;irq.c: 206: }
 34461                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 34462  0042B2  BA9E               	btfsc	3998,5,c	;volatile
 34463                           
 34464                           ;irq.c: 212: {
 34465                           ;irq.c: 214: Uart_Uart1RxIsr();
 34466  0042B4  EC20  F031         	call	_Uart_Uart1RxIsr	;wreg free
 34467  0042B8  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 34468  0042BC  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 34469  0042C0  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 34470  0042C4  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 34471  0042C8  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 34472  0042CC  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 34473  0042D0  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 34474  0042D4  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 34475  0042D8  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 34476  0042DC  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 34477  0042E0  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 34478  0042E4  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 34479  0042E8  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 34480  0042EC  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 34481  0042F0  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 34482  0042F4  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 34483  0042F8  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 34484  0042FC  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 34485  004300  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34486  004302  0011               	retfie		f
 34487  004304                     __end_of_HighPriorityIsr:
 34488                           	opt stack 0
 34489                           tosu	equ	0xFFF
 34490                           tosh	equ	0xFFE
 34491                           tosl	equ	0xFFD
 34492                           pclatu	equ	0xFFB
 34493                           pclath	equ	0xFFA
 34494                           tblptru	equ	0xFF8
 34495                           tblptrh	equ	0xFF7
 34496                           tblptrl	equ	0xFF6
 34497                           tablat	equ	0xFF5
 34498                           prodh	equ	0xFF4
 34499                           prodl	equ	0xFF3
 34500                           intcon	equ	0xFF2
 34501                           intcon2	equ	0xFF1
 34502                           intcon3	equ	0xFF0
 34503                           indf0	equ	0xFEF
 34504                           postinc0	equ	0xFEE
 34505                           plusw0	equ	0xFEB
 34506                           fsr0h	equ	0xFEA
 34507                           fsr0l	equ	0xFE9
 34508                           wreg	equ	0xFE8
 34509                           indf1	equ	0xFE7
 34510                           postinc1	equ	0xFE6
 34511                           postdec1	equ	0xFE5
 34512                           plusw1	equ	0xFE3
 34513                           fsr1h	equ	0xFE2
 34514                           fsr1l	equ	0xFE1
 34515                           bsr	equ	0xFE0
 34516                           indf2	equ	0xFDF
 34517                           postinc2	equ	0xFDE
 34518                           postdec2	equ	0xFDD
 34519                           plusw2	equ	0xFDB
 34520                           fsr2h	equ	0xFDA
 34521                           fsr2l	equ	0xFD9
 34522                           status	equ	0xFD8
 34523                           
 34524 ;; *************** function _Uart_Uart1RxIsr *****************
 34525 ;; Defined at:
 34526 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34527 ;; Parameters:    Size  Location     Type
 34528 ;;		None
 34529 ;; Auto vars:     Size  Location     Type
 34530 ;;		None
 34531 ;; Return value:  Size  Location     Type
 34532 ;;                  1    wreg      void 
 34533 ;; Registers used:
 34534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34535 ;; Tracked objects:
 34536 ;;		On entry : 0/0
 34537 ;;		On exit  : 0/0
 34538 ;;		Unchanged: 0/0
 34539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34544 ;;Total ram usage:        0 bytes
 34545 ;; Hardware stack levels used:    1
 34546 ;; Hardware stack levels required when called:    2
 34547 ;; This function calls:
 34548 ;;		_Uart_MdmGsmGprsReadService
 34549 ;; This function is called by:
 34550 ;;		_HighPriorityIsr
 34551 ;; This function uses a non-reentrant model
 34552 ;;
 34553                           
 34554                           	psect	text170
 34555  006240                     __ptext170:
 34556                           	opt stack 0
 34557  006240                     _Uart_Uart1RxIsr:
 34558                           	opt stack 8
 34559                           
 34560                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 34561                           ;uart_drv.c: 590: UartRxData = RCREG1;
 34562                           
 34563                           ;incstack = 0
 34564  006240  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 34565                           
 34566                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 34567  006244  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 34568  006248  0E01               	movlw	1
 34569  00624A  ECC8  F01D         	call	_Uart_MdmGsmGprsReadService
 34570  00624E  0012               	return		;funcret
 34571  006250                     __end_of_Uart_Uart1RxIsr:
 34572                           	opt stack 0
 34573                           tosu	equ	0xFFF
 34574                           tosh	equ	0xFFE
 34575                           tosl	equ	0xFFD
 34576                           pclatu	equ	0xFFB
 34577                           pclath	equ	0xFFA
 34578                           tblptru	equ	0xFF8
 34579                           tblptrh	equ	0xFF7
 34580                           tblptrl	equ	0xFF6
 34581                           tablat	equ	0xFF5
 34582                           prodh	equ	0xFF4
 34583                           prodl	equ	0xFF3
 34584                           intcon	equ	0xFF2
 34585                           intcon2	equ	0xFF1
 34586                           intcon3	equ	0xFF0
 34587                           indf0	equ	0xFEF
 34588                           postinc0	equ	0xFEE
 34589                           plusw0	equ	0xFEB
 34590                           fsr0h	equ	0xFEA
 34591                           fsr0l	equ	0xFE9
 34592                           wreg	equ	0xFE8
 34593                           indf1	equ	0xFE7
 34594                           postinc1	equ	0xFE6
 34595                           postdec1	equ	0xFE5
 34596                           plusw1	equ	0xFE3
 34597                           fsr1h	equ	0xFE2
 34598                           fsr1l	equ	0xFE1
 34599                           bsr	equ	0xFE0
 34600                           indf2	equ	0xFDF
 34601                           postinc2	equ	0xFDE
 34602                           postdec2	equ	0xFDD
 34603                           plusw2	equ	0xFDB
 34604                           fsr2h	equ	0xFDA
 34605                           fsr2l	equ	0xFD9
 34606                           status	equ	0xFD8
 34607                           
 34608 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 34609 ;; Defined at:
 34610 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34611 ;; Parameters:    Size  Location     Type
 34612 ;;  Module          1    wreg     unsigned char 
 34613 ;;  UartData        1    3[COMRAM] unsigned char 
 34614 ;; Auto vars:     Size  Location     Type
 34615 ;;  Module          1    0[COMRAM] unsigned char 
 34616 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 34617 ;; Return value:  Size  Location     Type
 34618 ;;                  1    wreg      void 
 34619 ;; Registers used:
 34620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34621 ;; Tracked objects:
 34622 ;;		On entry : 0/0
 34623 ;;		On exit  : 0/0
 34624 ;;		Unchanged: 0/0
 34625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34626 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34630 ;;Total ram usage:        3 bytes
 34631 ;; Hardware stack levels used:    1
 34632 ;; Hardware stack levels required when called:    1
 34633 ;; This function calls:
 34634 ;;		i2_GenerateEvt
 34635 ;; This function is called by:
 34636 ;;		_Uart_Uart1RxIsr
 34637 ;; This function uses a non-reentrant model
 34638 ;;
 34639                           
 34640                           	psect	text171
 34641  003B90                     __ptext171:
 34642                           	opt stack 0
 34643  003B90                     _Uart_MdmGsmGprsReadService:
 34644                           	opt stack 8
 34645                           
 34646                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 34647                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 34648                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 34649                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 34650                           
 34651                           ;incstack = 0
 34652  003B90  0E00               	movlw	0
 34653  003B92  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34654  003B94  0E00               	movlw	0
 34655  003B96  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34656                           
 34657                           ;uart_drv.c: 383: switch (RxState)
 34658  003B98  D058               	goto	i2l680
 34659  003B9A                     
 34660                           ;uart_drv.c: 387: if (UartData == '\r')
 34661  003B9A  0E0D               	movlw	13
 34662  003B9C  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34663  003B9E  A4D8               	btfss	status,2,c
 34664  003BA0  D003               	goto	i2l682
 34665                           
 34666                           ;uart_drv.c: 388: {
 34667                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 34668  003BA2  0E01               	movlw	1
 34669  003BA4  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34670                           
 34671                           ;uart_drv.c: 391: }
 34672  003BA6  0012               	return	
 34673  003BA8                     i2l682:
 34674                           
 34675                           ;uart_drv.c: 392: else
 34676                           ;uart_drv.c: 393: {
 34677                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 34678  003BA8  0E90               	movlw	144
 34679  003BAA  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34680  003BAC  0E01               	movlw	1
 34681  003BAE  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34682  003BB0  B0D8               	btfsc	status,0,c
 34683  003BB2  0012               	return	
 34684                           
 34685                           ;uart_drv.c: 395: {
 34686                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 34687  003BB4  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34688  003BB6  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34689  003BB8  6ED9               	movwf	fsr2l,c
 34690  003BBA  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34691  003BBC  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34692  003BBE  6EDA               	movwf	fsr2h,c
 34693  003BC0  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 34694                           
 34695                           ;uart_drv.c: 399: RxCounter++;
 34696  003BC4  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 34697  003BC6  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 34698                           
 34699                           ;uart_drv.c: 400: }
 34700                           ;uart_drv.c: 401: }
 34701                           ;uart_drv.c: 402: break;
 34702  003BC8  0012               	return	
 34703  003BCA                     
 34704                           ;uart_drv.c: 406: if (UartData == '\n')
 34705  003BCA  0E0A               	movlw	10
 34706  003BCC  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34707  003BCE  A4D8               	btfss	status,2,c
 34708  003BD0  D035               	goto	i2l688
 34709                           
 34710                           ;uart_drv.c: 407: {
 34711                           ;uart_drv.c: 409: if (RxCounter > 0)
 34712  003BD2  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34713  003BD4  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34714  003BD6  B4D8               	btfsc	status,2,c
 34715  003BD8  D031               	goto	i2l688
 34716                           
 34717                           ;uart_drv.c: 410: {
 34718                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 34719  003BDA  0E00               	movlw	0
 34720  003BDC  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34721  003BDE  0E00               	movlw	0
 34722  003BE0  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34723  003BE2  D010               	goto	i2l689
 34724  003BE4                     
 34725                           ;uart_drv.c: 413: {
 34726                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 34727  003BE4  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34728  003BE6  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34729  003BE8  6ED9               	movwf	fsr2l,c
 34730  003BEA  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34731  003BEC  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34732  003BEE  6EDA               	movwf	fsr2h,c
 34733  003BF0  0E58               	movlw	low _RxBuffer
 34734  003BF2  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34735  003BF4  6EE1               	movwf	fsr1l,c
 34736  003BF6  0E0C               	movlw	high _RxBuffer
 34737  003BF8  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34738  003BFA  6EE2               	movwf	fsr1h,c
 34739  003BFC  CFDF FFE7          	movff	indf2,indf1
 34740  003C00  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 34741  003C02  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 34742  003C04                     i2l689:
 34743  003C04  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34744  003C06  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34745  003C08  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34746  003C0A  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34747  003C0C  A0D8               	btfss	status,0,c
 34748  003C0E  D7EA               	goto	i2l690
 34749                           
 34750                           ;uart_drv.c: 415: }
 34751                           ;uart_drv.c: 417: RxLen = RxCounter;
 34752  003C10  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 34753  003C14  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 34754                           
 34755                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 34756  003C18  0E3C               	movlw	low _NewStringReceived
 34757  003C1A  6E01               	movwf	i2GenerateEvt@Event,c
 34758  003C1C  0E00               	movlw	high _NewStringReceived
 34759  003C1E  6E02               	movwf	i2GenerateEvt@Event+1,c
 34760  003C20  ECD0  F030         	call	i2_GenerateEvt	;wreg free
 34761                           
 34762                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 34763  003C24  0E3B               	movlw	low _NewMdmEvtParserRequest
 34764  003C26  6E01               	movwf	i2GenerateEvt@Event,c
 34765  003C28  0E00               	movlw	high _NewMdmEvtParserRequest
 34766  003C2A  6E02               	movwf	i2GenerateEvt@Event+1,c
 34767  003C2C  ECD0  F030         	call	i2_GenerateEvt	;wreg free
 34768                           
 34769                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 34770  003C30  0E3A               	movlw	low _NewStringMdmTerminal
 34771  003C32  6E01               	movwf	i2GenerateEvt@Event,c
 34772  003C34  0E00               	movlw	high _NewStringMdmTerminal
 34773  003C36  6E02               	movwf	i2GenerateEvt@Event+1,c
 34774  003C38  ECD0  F030         	call	i2_GenerateEvt	;wreg free
 34775  003C3C                     i2l688:
 34776                           
 34777                           ;uart_drv.c: 427: }
 34778                           ;uart_drv.c: 429: RxState = ReadData;
 34779                           
 34780                           ;uart_drv.c: 424: else
 34781                           ;uart_drv.c: 425: {
 34782                           
 34783                           ;uart_drv.c: 422: }
 34784                           ;uart_drv.c: 423: }
 34785  003C3C  0E00               	movlw	0
 34786  003C3E  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34787                           
 34788                           ;uart_drv.c: 431: RxCounter = 0;
 34789  003C40  0E00               	movlw	0
 34790  003C42  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 34791  003C44  0E00               	movlw	0
 34792  003C46  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 34793                           
 34794                           ;uart_drv.c: 436: }
 34795                           
 34796                           ;uart_drv.c: 435: break;
 34797                           
 34798                           ;uart_drv.c: 434: default:
 34799                           
 34800                           ;uart_drv.c: 432: break;
 34801  003C48  0012               	return	
 34802  003C4A                     i2l680:
 34803  003C4A  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 34804                           
 34805                           ; Switch size 1, requested type "space"
 34806                           ; Number of cases is 2, Range of values is 0 to 1
 34807                           ; switch strategies available:
 34808                           ; Name         Instructions Cycles
 34809                           ; simple_byte            7     4 (average)
 34810                           ;	Chosen strategy is simple_byte
 34811  003C4C  0A00               	xorlw	0	; case 0
 34812  003C4E  B4D8               	btfsc	status,2,c
 34813  003C50  D7A4               	goto	i2l681
 34814  003C52  0A01               	xorlw	1	; case 1
 34815  003C54  A4D8               	btfss	status,2,c
 34816  003C56  0012               	return	
 34817  003C58  D7B8               	goto	i2l686
 34818  003C5A                     __end_of_Uart_MdmGsmGprsReadService:
 34819                           	opt stack 0
 34820                           tosu	equ	0xFFF
 34821                           tosh	equ	0xFFE
 34822                           tosl	equ	0xFFD
 34823                           pclatu	equ	0xFFB
 34824                           pclath	equ	0xFFA
 34825                           tblptru	equ	0xFF8
 34826                           tblptrh	equ	0xFF7
 34827                           tblptrl	equ	0xFF6
 34828                           tablat	equ	0xFF5
 34829                           prodh	equ	0xFF4
 34830                           prodl	equ	0xFF3
 34831                           intcon	equ	0xFF2
 34832                           intcon2	equ	0xFF1
 34833                           intcon3	equ	0xFF0
 34834                           indf0	equ	0xFEF
 34835                           postinc0	equ	0xFEE
 34836                           plusw0	equ	0xFEB
 34837                           fsr0h	equ	0xFEA
 34838                           fsr0l	equ	0xFE9
 34839                           wreg	equ	0xFE8
 34840                           indf1	equ	0xFE7
 34841                           postinc1	equ	0xFE6
 34842                           postdec1	equ	0xFE5
 34843                           plusw1	equ	0xFE3
 34844                           fsr1h	equ	0xFE2
 34845                           fsr1l	equ	0xFE1
 34846                           bsr	equ	0xFE0
 34847                           indf2	equ	0xFDF
 34848                           postinc2	equ	0xFDE
 34849                           postdec2	equ	0xFDD
 34850                           plusw2	equ	0xFDB
 34851                           fsr2h	equ	0xFDA
 34852                           fsr2l	equ	0xFD9
 34853                           status	equ	0xFD8
 34854                           
 34855 ;; *************** function i2_GenerateEvt *****************
 34856 ;; Defined at:
 34857 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34858 ;; Parameters:    Size  Location     Type
 34859 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 34860 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34861 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34862 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34863 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34864 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34865 ;; Auto vars:     Size  Location     Type
 34866 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 34867 ;; Return value:  Size  Location     Type
 34868 ;;                  1    wreg      enum E7699
 34869 ;; Registers used:
 34870 ;;		wreg, fsr2l, fsr2h, status,2
 34871 ;; Tracked objects:
 34872 ;;		On entry : 0/0
 34873 ;;		On exit  : 0/0
 34874 ;;		Unchanged: 0/0
 34875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34880 ;;Total ram usage:        3 bytes
 34881 ;; Hardware stack levels used:    1
 34882 ;; This function calls:
 34883 ;;		Nothing
 34884 ;; This function is called by:
 34885 ;;		_Uart_MdmGsmGprsReadService
 34886 ;; This function uses a non-reentrant model
 34887 ;;
 34888                           
 34889                           	psect	text172
 34890  0061A0                     __ptext172:
 34891                           	opt stack 0
 34892  0061A0                     i2_GenerateEvt:
 34893                           	opt stack 8
 34894                           
 34895                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34896                           
 34897                           ;incstack = 0
 34898  0061A0  0E00               	movlw	0
 34899  0061A2  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34900                           
 34901                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34902  0061A4  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 34903  0061A8  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 34904  0061AC  0E02               	movlw	2
 34905  0061AE  6EDF               	movwf	indf2,c
 34906                           
 34907                           ;os_ser.c: 83: EventStatus = EventSent;
 34908  0061B0  0E02               	movlw	2
 34909  0061B2  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34910  0061B4  0012               	return	
 34911  0061B6                     __end_ofi2_GenerateEvt:
 34912                           	opt stack 0
 34913                           tosu	equ	0xFFF
 34914                           tosh	equ	0xFFE
 34915                           tosl	equ	0xFFD
 34916                           pclatu	equ	0xFFB
 34917                           pclath	equ	0xFFA
 34918                           tblptru	equ	0xFF8
 34919                           tblptrh	equ	0xFF7
 34920                           tblptrl	equ	0xFF6
 34921                           tablat	equ	0xFF5
 34922                           prodh	equ	0xFF4
 34923                           prodl	equ	0xFF3
 34924                           intcon	equ	0xFF2
 34925                           intcon2	equ	0xFF1
 34926                           intcon3	equ	0xFF0
 34927                           indf0	equ	0xFEF
 34928                           postinc0	equ	0xFEE
 34929                           plusw0	equ	0xFEB
 34930                           fsr0h	equ	0xFEA
 34931                           fsr0l	equ	0xFE9
 34932                           wreg	equ	0xFE8
 34933                           indf1	equ	0xFE7
 34934                           postinc1	equ	0xFE6
 34935                           postdec1	equ	0xFE5
 34936                           plusw1	equ	0xFE3
 34937                           fsr1h	equ	0xFE2
 34938                           fsr1l	equ	0xFE1
 34939                           bsr	equ	0xFE0
 34940                           indf2	equ	0xFDF
 34941                           postinc2	equ	0xFDE
 34942                           postdec2	equ	0xFDD
 34943                           plusw2	equ	0xFDB
 34944                           fsr2h	equ	0xFDA
 34945                           fsr2l	equ	0xFD9
 34946                           status	equ	0xFD8
 34947                           
 34948 ;; *************** function _Rtcc_RtcIsr *****************
 34949 ;; Defined at:
 34950 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 34951 ;; Parameters:    Size  Location     Type
 34952 ;;		None
 34953 ;; Auto vars:     Size  Location     Type
 34954 ;;		None
 34955 ;; Return value:  Size  Location     Type
 34956 ;;                  1    wreg      void 
 34957 ;; Registers used:
 34958 ;;		wreg, status,2, status,0
 34959 ;; Tracked objects:
 34960 ;;		On entry : 0/0
 34961 ;;		On exit  : 0/0
 34962 ;;		Unchanged: 0/0
 34963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34968 ;;Total ram usage:        0 bytes
 34969 ;; Hardware stack levels used:    1
 34970 ;; This function calls:
 34971 ;;		Nothing
 34972 ;; This function is called by:
 34973 ;;		_HighPriorityIsr
 34974 ;; This function uses a non-reentrant model
 34975 ;;
 34976                           
 34977                           	psect	text173
 34978  0062CE                     __ptext173:
 34979                           	opt stack 0
 34980  0062CE                     _Rtcc_RtcIsr:
 34981                           	opt stack 10
 34982                           
 34983                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 34984                           
 34985                           ;incstack = 0
 34986  0062CE  90A4               	bcf	4004,0,c	;volatile
 34987  0062D0  0012               	return	
 34988  0062D2                     __end_of_Rtcc_RtcIsr:
 34989                           	opt stack 0
 34990                           tosu	equ	0xFFF
 34991                           tosh	equ	0xFFE
 34992                           tosl	equ	0xFFD
 34993                           pclatu	equ	0xFFB
 34994                           pclath	equ	0xFFA
 34995                           tblptru	equ	0xFF8
 34996                           tblptrh	equ	0xFF7
 34997                           tblptrl	equ	0xFF6
 34998                           tablat	equ	0xFF5
 34999                           prodh	equ	0xFF4
 35000                           prodl	equ	0xFF3
 35001                           intcon	equ	0xFF2
 35002                           intcon2	equ	0xFF1
 35003                           intcon3	equ	0xFF0
 35004                           indf0	equ	0xFEF
 35005                           postinc0	equ	0xFEE
 35006                           plusw0	equ	0xFEB
 35007                           fsr0h	equ	0xFEA
 35008                           fsr0l	equ	0xFE9
 35009                           wreg	equ	0xFE8
 35010                           indf1	equ	0xFE7
 35011                           postinc1	equ	0xFE6
 35012                           postdec1	equ	0xFE5
 35013                           plusw1	equ	0xFE3
 35014                           fsr1h	equ	0xFE2
 35015                           fsr1l	equ	0xFE1
 35016                           bsr	equ	0xFE0
 35017                           indf2	equ	0xFDF
 35018                           postinc2	equ	0xFDE
 35019                           postdec2	equ	0xFDD
 35020                           plusw2	equ	0xFDB
 35021                           fsr2h	equ	0xFDA
 35022                           fsr2l	equ	0xFD9
 35023                           status	equ	0xFD8
 35024                           
 35025 ;; *************** function _Mcu_Int1Isr *****************
 35026 ;; Defined at:
 35027 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35028 ;; Parameters:    Size  Location     Type
 35029 ;;		None
 35030 ;; Auto vars:     Size  Location     Type
 35031 ;;		None
 35032 ;; Return value:  Size  Location     Type
 35033 ;;                  1    wreg      void 
 35034 ;; Registers used:
 35035 ;;		wreg, status,2, status,0
 35036 ;; Tracked objects:
 35037 ;;		On entry : 0/0
 35038 ;;		On exit  : 0/0
 35039 ;;		Unchanged: 0/0
 35040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35045 ;;Total ram usage:        0 bytes
 35046 ;; Hardware stack levels used:    1
 35047 ;; This function calls:
 35048 ;;		Nothing
 35049 ;; This function is called by:
 35050 ;;		_HighPriorityIsr
 35051 ;; This function uses a non-reentrant model
 35052 ;;
 35053                           
 35054                           	psect	text174
 35055  0062D2                     __ptext174:
 35056                           	opt stack 0
 35057  0062D2                     _Mcu_Int1Isr:
 35058                           	opt stack 10
 35059                           
 35060                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 35061                           
 35062                           ;incstack = 0
 35063  0062D2  90F0               	bcf	intcon3,0,c	;volatile
 35064  0062D4  0012               	return	
 35065  0062D6                     __end_of_Mcu_Int1Isr:
 35066                           	opt stack 0
 35067                           tosu	equ	0xFFF
 35068                           tosh	equ	0xFFE
 35069                           tosl	equ	0xFFD
 35070                           pclatu	equ	0xFFB
 35071                           pclath	equ	0xFFA
 35072                           tblptru	equ	0xFF8
 35073                           tblptrh	equ	0xFF7
 35074                           tblptrl	equ	0xFF6
 35075                           tablat	equ	0xFF5
 35076                           prodh	equ	0xFF4
 35077                           prodl	equ	0xFF3
 35078                           intcon	equ	0xFF2
 35079                           intcon2	equ	0xFF1
 35080                           intcon3	equ	0xFF0
 35081                           indf0	equ	0xFEF
 35082                           postinc0	equ	0xFEE
 35083                           plusw0	equ	0xFEB
 35084                           fsr0h	equ	0xFEA
 35085                           fsr0l	equ	0xFE9
 35086                           wreg	equ	0xFE8
 35087                           indf1	equ	0xFE7
 35088                           postinc1	equ	0xFE6
 35089                           postdec1	equ	0xFE5
 35090                           plusw1	equ	0xFE3
 35091                           fsr1h	equ	0xFE2
 35092                           fsr1l	equ	0xFE1
 35093                           bsr	equ	0xFE0
 35094                           indf2	equ	0xFDF
 35095                           postinc2	equ	0xFDE
 35096                           postdec2	equ	0xFDD
 35097                           plusw2	equ	0xFDB
 35098                           fsr2h	equ	0xFDA
 35099                           fsr2l	equ	0xFD9
 35100                           status	equ	0xFD8
 35101                           
 35102 ;; *************** function _Mcu_Int0Isr *****************
 35103 ;; Defined at:
 35104 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35105 ;; Parameters:    Size  Location     Type
 35106 ;;		None
 35107 ;; Auto vars:     Size  Location     Type
 35108 ;;		None
 35109 ;; Return value:  Size  Location     Type
 35110 ;;                  1    wreg      void 
 35111 ;; Registers used:
 35112 ;;		wreg, status,2, status,0
 35113 ;; Tracked objects:
 35114 ;;		On entry : 0/0
 35115 ;;		On exit  : 0/0
 35116 ;;		Unchanged: 0/0
 35117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35122 ;;Total ram usage:        0 bytes
 35123 ;; Hardware stack levels used:    1
 35124 ;; This function calls:
 35125 ;;		Nothing
 35126 ;; This function is called by:
 35127 ;;		_HighPriorityIsr
 35128 ;; This function uses a non-reentrant model
 35129 ;;
 35130                           
 35131                           	psect	text175
 35132  0062D6                     __ptext175:
 35133                           	opt stack 0
 35134  0062D6                     _Mcu_Int0Isr:
 35135                           	opt stack 10
 35136                           
 35137                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 35138                           
 35139                           ;incstack = 0
 35140  0062D6  92F2               	bcf	intcon,1,c	;volatile
 35141  0062D8  0012               	return	
 35142  0062DA                     __end_of_Mcu_Int0Isr:
 35143                           	opt stack 0
 35144                           tosu	equ	0xFFF
 35145                           tosh	equ	0xFFE
 35146                           tosl	equ	0xFFD
 35147                           pclatu	equ	0xFFB
 35148                           pclath	equ	0xFFA
 35149                           tblptru	equ	0xFF8
 35150                           tblptrh	equ	0xFF7
 35151                           tblptrl	equ	0xFF6
 35152                           tablat	equ	0xFF5
 35153                           prodh	equ	0xFF4
 35154                           prodl	equ	0xFF3
 35155                           intcon	equ	0xFF2
 35156                           intcon2	equ	0xFF1
 35157                           intcon3	equ	0xFF0
 35158                           indf0	equ	0xFEF
 35159                           postinc0	equ	0xFEE
 35160                           plusw0	equ	0xFEB
 35161                           fsr0h	equ	0xFEA
 35162                           fsr0l	equ	0xFE9
 35163                           wreg	equ	0xFE8
 35164                           indf1	equ	0xFE7
 35165                           postinc1	equ	0xFE6
 35166                           postdec1	equ	0xFE5
 35167                           plusw1	equ	0xFE3
 35168                           fsr1h	equ	0xFE2
 35169                           fsr1l	equ	0xFE1
 35170                           bsr	equ	0xFE0
 35171                           indf2	equ	0xFDF
 35172                           postinc2	equ	0xFDE
 35173                           postdec2	equ	0xFDD
 35174                           plusw2	equ	0xFDB
 35175                           fsr2h	equ	0xFDA
 35176                           fsr2l	equ	0xFD9
 35177                           status	equ	0xFD8
 35178                           tosu	equ	0xFFF
 35179                           tosh	equ	0xFFE
 35180                           tosl	equ	0xFFD
 35181                           pclatu	equ	0xFFB
 35182                           pclath	equ	0xFFA
 35183                           tblptru	equ	0xFF8
 35184                           tblptrh	equ	0xFF7
 35185                           tblptrl	equ	0xFF6
 35186                           tablat	equ	0xFF5
 35187                           prodh	equ	0xFF4
 35188                           prodl	equ	0xFF3
 35189                           intcon	equ	0xFF2
 35190                           intcon2	equ	0xFF1
 35191                           intcon3	equ	0xFF0
 35192                           indf0	equ	0xFEF
 35193                           postinc0	equ	0xFEE
 35194                           plusw0	equ	0xFEB
 35195                           fsr0h	equ	0xFEA
 35196                           fsr0l	equ	0xFE9
 35197                           wreg	equ	0xFE8
 35198                           indf1	equ	0xFE7
 35199                           postinc1	equ	0xFE6
 35200                           postdec1	equ	0xFE5
 35201                           plusw1	equ	0xFE3
 35202                           fsr1h	equ	0xFE2
 35203                           fsr1l	equ	0xFE1
 35204                           bsr	equ	0xFE0
 35205                           indf2	equ	0xFDF
 35206                           postinc2	equ	0xFDE
 35207                           postdec2	equ	0xFDD
 35208                           plusw2	equ	0xFDB
 35209                           fsr2h	equ	0xFDA
 35210                           fsr2l	equ	0xFD9
 35211                           status	equ	0xFD8
 35212                           
 35213                           	psect	text176
 35214  000000                     __ptext176:
 35215                           	opt stack 0
 35216                           tosu	equ	0xFFF
 35217                           tosh	equ	0xFFE
 35218                           tosl	equ	0xFFD
 35219                           pclatu	equ	0xFFB
 35220                           pclath	equ	0xFFA
 35221                           tblptru	equ	0xFF8
 35222                           tblptrh	equ	0xFF7
 35223                           tblptrl	equ	0xFF6
 35224                           tablat	equ	0xFF5
 35225                           prodh	equ	0xFF4
 35226                           prodl	equ	0xFF3
 35227                           intcon	equ	0xFF2
 35228                           intcon2	equ	0xFF1
 35229                           intcon3	equ	0xFF0
 35230                           indf0	equ	0xFEF
 35231                           postinc0	equ	0xFEE
 35232                           plusw0	equ	0xFEB
 35233                           fsr0h	equ	0xFEA
 35234                           fsr0l	equ	0xFE9
 35235                           wreg	equ	0xFE8
 35236                           indf1	equ	0xFE7
 35237                           postinc1	equ	0xFE6
 35238                           postdec1	equ	0xFE5
 35239                           plusw1	equ	0xFE3
 35240                           fsr1h	equ	0xFE2
 35241                           fsr1l	equ	0xFE1
 35242                           bsr	equ	0xFE0
 35243                           indf2	equ	0xFDF
 35244                           postinc2	equ	0xFDE
 35245                           postdec2	equ	0xFDD
 35246                           plusw2	equ	0xFDB
 35247                           fsr2h	equ	0xFDA
 35248                           fsr2l	equ	0xFD9
 35249                           status	equ	0xFD8
 35250                           
 35251                           	psect	rparam
 35252  0000                     tosu	equ	0xFFF
 35253                           tosh	equ	0xFFE
 35254                           tosl	equ	0xFFD
 35255                           pclatu	equ	0xFFB
 35256                           pclath	equ	0xFFA
 35257                           tblptru	equ	0xFF8
 35258                           tblptrh	equ	0xFF7
 35259                           tblptrl	equ	0xFF6
 35260                           tablat	equ	0xFF5
 35261                           prodh	equ	0xFF4
 35262                           prodl	equ	0xFF3
 35263                           intcon	equ	0xFF2
 35264                           intcon2	equ	0xFF1
 35265                           intcon3	equ	0xFF0
 35266                           indf0	equ	0xFEF
 35267                           postinc0	equ	0xFEE
 35268                           plusw0	equ	0xFEB
 35269                           fsr0h	equ	0xFEA
 35270                           fsr0l	equ	0xFE9
 35271                           wreg	equ	0xFE8
 35272                           indf1	equ	0xFE7
 35273                           postinc1	equ	0xFE6
 35274                           postdec1	equ	0xFE5
 35275                           plusw1	equ	0xFE3
 35276                           fsr1h	equ	0xFE2
 35277                           fsr1l	equ	0xFE1
 35278                           bsr	equ	0xFE0
 35279                           indf2	equ	0xFDF
 35280                           postinc2	equ	0xFDE
 35281                           postdec2	equ	0xFDD
 35282                           plusw2	equ	0xFDB
 35283                           fsr2h	equ	0xFDA
 35284                           fsr2l	equ	0xFD9
 35285                           status	equ	0xFD8
 35286                           
 35287                           	psect	temp
 35288  000042                     btemp:
 35289                           	opt stack 0
 35290  000042                     	ds	1
 35291  0000                     int$flags	set	btemp
 35292  0000                     wtemp6	set	btemp+1
 35293                           tosu	equ	0xFFF
 35294                           tosh	equ	0xFFE
 35295                           tosl	equ	0xFFD
 35296                           pclatu	equ	0xFFB
 35297                           pclath	equ	0xFFA
 35298                           tblptru	equ	0xFF8
 35299                           tblptrh	equ	0xFF7
 35300                           tblptrl	equ	0xFF6
 35301                           tablat	equ	0xFF5
 35302                           prodh	equ	0xFF4
 35303                           prodl	equ	0xFF3
 35304                           intcon	equ	0xFF2
 35305                           intcon2	equ	0xFF1
 35306                           intcon3	equ	0xFF0
 35307                           indf0	equ	0xFEF
 35308                           postinc0	equ	0xFEE
 35309                           plusw0	equ	0xFEB
 35310                           fsr0h	equ	0xFEA
 35311                           fsr0l	equ	0xFE9
 35312                           wreg	equ	0xFE8
 35313                           indf1	equ	0xFE7
 35314                           postinc1	equ	0xFE6
 35315                           postdec1	equ	0xFE5
 35316                           plusw1	equ	0xFE3
 35317                           fsr1h	equ	0xFE2
 35318                           fsr1l	equ	0xFE1
 35319                           bsr	equ	0xFE0
 35320                           indf2	equ	0xFDF
 35321                           postinc2	equ	0xFDE
 35322                           postdec2	equ	0xFDD
 35323                           plusw2	equ	0xFDB
 35324                           fsr2h	equ	0xFDA
 35325                           fsr2l	equ	0xFD9
 35326                           status	equ	0xFD8


Data Sizes:
    Strings     394
    Constant    567
    Data        184
    BSS         2321
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      5     256
    BANK4           192      0     151
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), 

    blinkForSeconds@blinkTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@phone(BANK4[14]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[14]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), 
		 -> PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[14]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> callerNumber(BANK3[14]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@ClipString(BANK0[5]), 
		 -> ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8950 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4613$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4613$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4613$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4613$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3066$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3056$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3056$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3032$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3032$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3032$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3032$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2533_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2533_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 14
		 -> callerNumber(BANK3[14]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_30(CODE[12]), STR_29(CODE[19]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), 
		 -> STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_Eeprom_Read
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _GetCallerNumber->_ClearBuffer
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _StringCompare->_GetCallerNumber
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  670393
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  665762
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  332974
                                              0 BANK3      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  332788
                                              0 BANK3      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          25    25      0   72412
                                              0 BANK1      4     4      0
                        _ClearBuffer
                        _Eeprom_Read
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   16081
                   _Led_SetLedStatus
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11928
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_HangPhoneCall                                    0     0      0    2647
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Read                                          7     4      3   23938
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (5) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   70348
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   11578
                                             48 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    1792
                                             37 BANK0     11     5      6
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8643
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13894
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2647
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6931
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6931
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2669
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      5     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      97      14       78.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     979       8        0.0%
DATA                 0      0     C99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 19 17:23:48 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5318  
                              _USB_SD_Ptr FC35                 __size_of_Mdm_SetSmsFormat 0050  
                    __size_of_TurnOnModem 0046                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 6056               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 2186  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 20A2                                       l203 20AA  
                                     l205 20F2                                       l206 2118  
                                     l208 2120                                       l160 1FE6  
                                     l209 2140                                       l161 1EBC  
                                     l162 2024                                       l170 1F84  
                                     l171 1F9A                                       l163 1EC8  
                                     l315 443A                                       l323 4406  
                                     l164 1F08                                       l316 43B0  
                                     l420 49E8                                       l500 4898  
                                     l173 1F9E                                       l325 4420  
                                     l421 4A08                                       l237 6062  
                                     l174 1FA6                                       l166 1F16  
                                     l318 43BA                                       l422 4A14  
             __end_of_USBStdGetDscHandler 2CF4                                       l510 486A  
                                     l502 482A                                       l175 1FB2  
                                     l167 1F3E                                       l319 43E0  
                                     l423 4A20                                       l511 485A  
                                     l503 481A                                       l192 214A  
                                     l176 1FC8                                       l416 4A34  
                                     l424 4A2C                                       l512 487E  
                                     l504 4840                                       l520 572C  
                                     l193 202A                                       l169 1F50  
                                     l417 49DA                                       l441 17EC  
                                     l513 485E                                       l505 481E  
                                     l521 56F8                                       l194 2182  
                                     l418 4A62                                       l442 15F4  
                                     l514 4864                                       l506 4824  
                                     l530 31D0                                       l195 2036  
                                     l179 1FD4                                       l419 49E2  
                                     l523 5712                                       l531 3236  
                                     l196 2076                                       l700 5944  
                                     l444 163C                                       l532 31FC  
                                     l445 1684                                       l541 6020  
                                     l198 2084                                       l446 16CC  
                                     l199 2098                                       l631 2A0A  
                                     l447 1714                                       l448 175C  
                                     l528 323C                                       l633 2A82  
                                     l625 2996                                       l449 17A4  
                                     l529 3228                                       l538 6024  
                                     l546 3CB2                                       l651 567C  
                                     l707 5AAA                                       l627 29BA  
                                     l715 5A1E                                       l539 601C  
                                     l547 3CCE                                       l660 56A0  
                                     l652 5676                                       l716 59F4  
                                     l709 5AC4                                       l629 29E2  
                                     l718 5A0C                                       l639 6048  
                                     l832 5DE4                                       l844 3D86  
                                     l668 0C44                                       _BDT 000400  
                                     l790 607E                                       l855 4D7E  
                                     l775 2F36                                       l864 4AD6  
                                     l856 4D24                                       l857 4D98  
                                     l698 5928                                       l858 4D54  
                                     l867 4AE8                                       l982 2560  
                                     l983 2434                                       l985 2458  
                                     l987 2472                                       l988 24A6  
                                     l989 2518                                       l998 253C  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                        ?_blinkForSeconds 0093                   __end_of_HighPriorityIsr 4304  
                          ??_Mdm_MainTask 00AA                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 5C6C                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CD  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 59E8  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2432  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 57CE  
         InitGprsNetwork@GprsNetInitState 01ED                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 57E6  
                                    l1110 55CE                               RiSm@Counter 02E2  
                                    l1031 393C                                      l1111 55E2  
                                    l1032 3976                                      l1033 399C  
                                    l1009 5800                                      l1121 563A  
                                    l1027 39D4                                      l1035 39BC  
                                    l2003 50FA                                      l1107 55F4  
                                    l1220 0DE8                                      l1028 392C  
                                    l1052 1E8E                                      l1060 1E60  
                                    l1108 55B8                                      l1221 0E22  
                                    l1053 1DA2                                      l2005 5100  
                                    l1222 0E96                                      l1070 2BA8  
                                    l1223 0E5E                                      l1071 2AA0  
                                    l1055 1EA8                                      l2104 5D78  
                                    l1216 1078                                      l1056 1DD4  
                                    l1152 5F20                                      l1136 5EFC  
                                    l3000 438A                                      l2105 5D66  
                                    l1233 1010                                      l1225 0F3E  
                                    l1217 0DD0                                      l2113 5454  
                                    l1401 53B2                                      l1250 05F4  
                                    l1234 1054                                      l1226 0F78  
                                    l1074 2ABC                                      l1058 1E2A  
                                    l2114 541E                                      l1402 5372  
                                    l2107 5D6C                                      l1219 10B0  
                                    l1227 0FB8                                      l1075 2AD4  
                                    l2211 5556                                      l1091 1B80  
                                    l2060 27EE                                      l2108 5D72  
                                    l1252 0AB6                                      l1260 07F2  
                                    l1228 0FBC                                      l2212 552C  
                                    l1092 19FE                                      l1156 5BF6  
                                    l2116 5430                                      l1404 53AC  
                                    l2061 26D0                                      l1261 082C  
                                    l1253 060C                                      l1229 1000  
                                    l2213 5552                                      l2117 5442  
                                    l2062 2804                                      l1270 096E  
                                    l1262 0856                                      l1254 0646  
                                    l1238 106E                                      l1078 2B46  
                                    l1414 59E2                                      l3110 5D1C  
                                    l3031 4CFC                                      l2063 26F8  
                                    l1263 0890                                      l1255 0680  
                                    l1095 1A1A                                      l3111 5D0A  
                                    l3032 4D0A                                      l2064 277C  
                                    l2224 5C2A                                      l1264 08CA  
                                    l1256 06BA                                      l1096 1AD0  
                                    l1440 37AA                                      l3104 5772  
                                    l2073 32FC                                      l2225 5C16  
                                    l1249 0A54                                      l1265 090E  
                                    l1257 073E                                      l1097 1AF4  
                                    l1409 5A9C                                      l3105 5750  
                                    l1601 21D0                                      l2074 3244  
                                    l2090 44AC                                      l2218 50EA  
                                    l1282 0A42                                      l1274 097E  
                                    l1258 06F6                                      l1442 3808  
                                    l3027 4CC8                                      l2075 3318  
                                    l2083 44D0                                      l2091 44BA  
                                    l2219 50AA                                      l1283 0A4A  
                                    l1275 09AA                                      l1419 600C  
                                    l1443 381C                                      l2403 041E  
                                    l1603 21F8                                      l1291 5788  
                                    l1380 3EB4                                      l3028 4CBC  
                                    l2076 3262                                      l2084 4462  
                                    l2412 0524                                      l1700 362E  
                                    l1620 1C20                                      l1612 1BD6  
                                    l1381 3ED6                                      l2085 44F8  
                                    l1277 09C4                                      l1269 092A  
                                    l1437 3842                                      l1445 383A  
                                    l2413 0570                                      l2405 045E  
                                    l1605 2238                                      l1621 1C2C  
                                    l1613 1BCC                                      l1390 3F38  
                                    l2078 32D2                                      l2086 4472  
                                    l1278 0A32                                      l1438 378C  
                                    l2406 0578                                      l2430 10DE  
                                    l1710 2D50                                      l1630 1CC0  
                                    l1614 1BCA                                      l2182 4B74  
                                    l1391 3F44                                      l1383 3EF8  
                                    l2087 4484                                      l1439 3858  
                                    l3311 34AE                                      l1703 36AA  
                                    l1711 2D2A                                      l1623 1C54  
                                    l2183 4AFA                                      l3080 54E0  
                                    l2088 449E                                      l3312 3466  
                                    l2408 04B4                                      l3240 51D4  
                                    l2432 10FA                                      l1704 3670  
                                    l1640 586A                                      l1288 57BA  
                                    l2096 3AB2                                      l3081 54D8  
                                    l3313 347E                                      l3305 3426  
                                    l2409 0478                                      l2441 114E  
                                    l1713 2DC8                                      l1641 587A  
                                    l1633 1CE6                                      l1625 1C6A  
                                    l1617 1BF2                                      l2097 39FA  
                                    l2185 4B60                                      l1386 3F00  
                                    l3090 58F6                                      l3314 348E  
                                    l3306 3420                                      l1714 2DAE  
                                    l1730 2CDC                                      l1722 3378  
                                    l1810 351C                                      l1626 1C76  
                                    l1618 1C02                                      l1379 3F52  
                                    l3091 58EE                                      l2371 0152  
                                    l3251 5A38                                      l2427 131E  
                                    l2443 128E                                      l1731 2BD8  
                                    l1811 3530                                      l1635 1D0A  
                                    l1627 1CA0                                      l1619 1C0A  
                                    l2099 3A08                                      l1388 3F1C  
                                    l3084 5500                                      l2620 54BC  
                                    l2540 4560                                      l3308 344E  
                                    l2372 01E2                                      l2380 01D0  
                                    l3236 51C4                                      l3252 5A32  
                                    l2428 10B8                                      l1900 41CE  
                                    l1724 33EC                                      l1812 3536  
                                    l1628 1CAC                                      l2452 60EC  
              USBConfigureEndpoint@handle 0083                                      l3085 550A  
                                    l1645 4052                                      l3245 5CB2  
                                    l3317 34EC                                      l3237 51BE  
                                    l2445 12F8                                      l2437 110E  
                                    l1733 2BEC                                      l1805 3596  
                                    l1637 1D28                                      l2542 458C  
                                    l3094 590E                                      l3246 5CA8  
                                    l2390 0304                                      l2374 01AE  
                                    l2630 3882                                      l1902 41E6  
                                    l1822 137E                                      l1734 2C74  
                                    l1750 413A                                      l1814 353C  
                                    l1806 3506                                      l1670 4690  
                                    l2543 459C                                      l1647 407C  
                                    l3095 5918                                      l3343 5D56  
                                    l3271 18C8                                      l2367 05D2  
                                    l2391 02C6                                      l2375 019C  
                                    l2631 38E4                                      l3239 51DE  
                                    l2447 1318                                      l2439 112E  
                                    l1903 41F4                                      l1831 14EA  
                                    l1823 1384                                      l1743 417C  
                                    l1815 355A                                      l2455 60E6  
                                    l2560 471E                                      l3280 1902  
                                    l3360 5B14                                      l2368 00E2  
                                    l2640 3904                                      l1664 3B0C  
                                    l1904 4212                                      l1736 2C7C  
                                    l1744 4102                                      l1816 3576  
                                    l1808 3510                                      l1672 46AA  
                                    l2472 5F5A                                      l2553 4760  
                                    l2561 4736                                      l1649 40D8  
                                    l1921 493A                                      l3353 5FA8  
                                    l2385 0392                                      l1905 422A  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2CCC  
                                    l1809 3516                                      l1681 30D4  
                                    l2473 5F4C                                      l2618 54B0  
                                    l2554 46E0                                      l2386 0326  
                                    l2634 3888                                      l1834 14D0  
                                    l1682 307C                                      l3291 6142  
                                    l3283 1914                                      l3267 185C  
                                    l2387 02B4                                      l1843 15C6  
                                    l1827 143E                                      l1739 2CD4  
                                    l1747 4192                                      l1771 49C2  
                                    l2475 5F54                                      l2812 374C  
                                    l1924 48E8                                      l3348 5E64  
                                    l3284 1980                                      l3364 612A  
                                    l2388 0250                                      l2636 38D0  
                                    l1676 47E2                                      l1836 1532  
                                    l1828 1440                                      l1748 4114  
                                    l1772 49BC                                      l2813 370E  
                                    l1925 4914                                      l3277 18D8  
                                    l3269 1874                                      l2397 0402  
                                    l2637 38B2                                      l2629 3868  
                                    l1837 153E                                      l1829 145C  
                                    l1749 411A                                      l1757 5852  
                                    l1765 5B4C                                      l2581 3042  
                                    l2654 527A                                      l2566 5B84  
                                    l2806 36BA                                      l1926 48EE  
                                    l3286 19A6                                      l3278 18E8  
                                    l2398 03D2                                      l1790 3FA8  
                                    l1782 4FDA                                      l1838 15BA  
                                    l1686 30FE                                      l1758 5850  
                                    l1766 5B4A                                      l2582 2F4E  
                                    l2655 528E                                      l2559 4776  
                                    l2815 3780                                      l2807 36B4  
                                    l3287 19E0                                      l1951 283A  
                                    l1695 35FA                                      l1791 3FAE  
                                    l2832 4C76                                      l1960 28A4  
                                    l1792 402A                                      l1784 5028  
                                    l2592 303E                                      l2584 2F68  
                                    l2833 4C80                                      l2825 4C28  
                                    l2841 4DD6                                      l2809 36FC  
                                    l1953 286E                                      l1697 3604  
                                    l1793 3FF0                                      l2834 4C8E  
                                    l2826 4C38                                      l2842 4DCE  
                                    l2586 2FC6                                      l1963 291E  
                                    l1699 3668                                      l1795 4010  
                                    l2587 2FB6                                      l2828 4C56  
                                    l1964 28E6                                      l1956 2880  
                                    l2829 4C4E                                      l2845 4DEE  
                                    l1957 2884                                      l1949 282C  
                                    l2589 3006                                      l2846 4DF8  
                                    l2838 4DB4                                      l1990 5EBC  
                                    l2847 4E06                                      l2839 4DC0  
                                    l1967 2938                                      l1959 28DC  
              __size_of_Mdm_IsSmsReceived 0024                                      l1968 293C  
                                    l1992 5EC2                                _Led1OutSts 01FC  
                                    l1899 4234                                      l1997 5106  
                                    l1989 5ECC                                      l2993 58C0  
                                    l2987 5FEC                                      l2997 430C  
                                    l2999 4348                                      STR_1 FFE5  
                                    STR_2 FF74                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE96                                      STR_9 FECA  
                              _Led2OutSts 01FA                                _Led3OutSts 01F8  
                                    u8205 5728                                      u8206 572A  
                   ??_USBCtrlTrfTxService 007D                                      u8175 5702  
                                    _UCFG 000F39                                      u8176 5704  
                                    u8185 570E                                      u8186 5710  
                                    u8195 571C                                      u8196 571E  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9675 5E26                                      u9676 5E28  
                                    u9685 5E32                                      u9686 5E34  
                                    u9695 5E3E                                      u9696 5E40  
                              _AlarmEvent 01F7                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 62AA  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 36B2  
                                    _main 626C                           ??_Mdm_IsRinging 0081  
                                    _itoa 589A                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 5C02                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4304                                      _xtoi 3410  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 62B2  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 49D4  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5A28                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 54C0   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 615E  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 35DA                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 6200  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 008E                            _GetElapsedTime 3D22  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 5370                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
                     __size_of_I2cDummyTx 001C                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 5AA4  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDB8  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DC                                     l11133 6062  
                                   l13323 5C4A                                     l11805 5D0A  
                                   l13423 21C8                                     l14065 1D9A  
                                   l13187 49EE                                     l11843 3604  
                                   l13451 2230                                     l12821 3748  
                                   l12671 5750                                     l14089 1E5A  
                                   l15081 4E8C                                     l14453 09A4  
                                   l11949 3370                                     l14605 1CB8  
                                   l15093 2E22                                     l14287 0FB0  
                                   l15441 5150                                     l15439 5120  
                                   l13859 459C                                     l13939 323C  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4C98  
                                   STR_10 FF4A                                     STR_11 FF58  
                                   STR_12 FF9C                                     STR_20 FF3C  
                                   STR_13 FF66                                     STR_21 FE6C  
                                   STR_30 FFA9                                     STR_14 FEB5  
                                   STR_31 FFD7                                     STR_15 FEF3  
                                   STR_23 FEDF                                     STR_24 FFF4  
                                   STR_16 FF2B                                     STR_25 FFF4  
                                   STR_17 FF82                                     STR_26 FE93  
                                   STR_18 FF8F                                     STR_27 FF1A  
                                   STR_28 FFB5                           __end_of___awmod 4E10  
                                   STR_29 FF07         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 4D1C                                     ?_utoa 008A  
                                   u10410 3656                                     u11300 5D46  
                                   u12110 4DDA                                     u10430 3698  
                                   u11240 4CCC                                     u10600 2CC0  
                                   u10417 364C                                     u12050 4C5A  
                                   u10530 33A4                           ___awdiv@divisor 007F  
                                   u10437 368E                                     u13030 04BE  
                                   u11415 61C4                                     u10607 2CB6  
                                   u11416 61C6                                     u11520 5AD2  
                                   u11280 5E60                                     u12145 56C6  
                                   u12305 0B9E                                     u11370 5AF8  
                                   u10570 2C3E                    __end_of_USBDeviceTasks 1D32  
                                   u12420 5562                                     u10900 58FA  
                                   u10820 1554                                     u10580 2C6E  
                                   u12325 0C78                                     u13205 61D8  
                                   u12430 50E2                                     u12350 5952  
                                   u13230 4418                                     u13310 24CE  
                                   u11470 29DE                                     u11390 5B04  
                                   u13150 391C                                     u12510 21EC  
                                   u13206 61DA                                     u12335 0C98  
                                   ?_xtoi 0083                                     u13240 4432  
                                   u12345 0D22                                     u13401 1D5E  
                                   u12265 6184                                     u10577 2C34  
                                   u13330 24E2                                     u12266 6186  
                                   u13090 5206                                     u13411 1D70  
                                   u10587 2C64                                     u11900 189E  
                                   u14300 290E                                     u12540 2294  
                                   u12437 50D8                                     u12285 0AF4  
                                   u10870 54E4                                     u14310 2926  
                                   u12295 0B14                                     u11680 48C4  
                                   u11920 18AE                                     u13265 616E  
                                   u13097 51FC                                     u13266 6172  
                                   u13195 4E74                                     u14307 2904  
                                   u10980 5672                                     u11870 1864  
                                   u14190 1D2E                                     u13391 1D4C  
                                   u14351 508C                                     u13480 1EAE  
                                   u14280 28CC                                     u14450 46F0  
               ?_USBCtrlEPServiceComplete 0001                                     u14611 4B52  
                                   u14621 4B6A                                     u14287 28C2  
                                   u14738 4EBE                                     u14739 4EEC  
                                   u14778 2EEA                                     u14779 2F18  
                         __end_of___lwdiv 5514                           __end_of___lwmod 5922  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 22F4                                     i1l747 2430  
                                   i2l680 3C4A                                     i2l681 3B9A  
                                   i2l690 3BE4                                     i2l682 3BA8  
                                   i2l686 3BCA                                     i2l688 3C3C  
                                   i2l689 3C04                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B0  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E9  
                                   _USTAT 000F64                   __end_of_LedStateMachine 44FE  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 46DE                             _StringCompare 5514  
                                   _sd000 FE68                                     _sd001 FE21  
                                   _sd002 FDFB            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3AC4  
                             _ApnLenLocal 01F1                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5D60  
                         __end_of_isdigit 5FF4                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 5C02  
                         __end_of_isspace 5E6C               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0038                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 5FB0  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 5EBA                 __end_of_Rtcc_GetRtccValue 4A68  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4F5E                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5370  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 392A  
                         __end_of_tolower 612E                       __end_of_Mcu_Int0Isr 62DA  
                     __end_of_Mcu_Int1Isr 62D6                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 6146  
                  __end_of_GetElapsedTime 3DEA                     __end_of_UartSetConfig 5268  
                  __size_of_initGprsModem 009E               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 60FE  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2BC6  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 5E18                            _InitSchedTimer 5D90  
                         __initialization 2584                          __end_of_MdmCntSm 4456  
                    __end_of_I2c_ReadData 2186                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 3F76                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 2F3A                              __end_of_atoi 378A  
                            __end_of_main 6278                       StringCompare@Result 008D  
                            __end_of_itoa 58DE                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01E1                              __end_of_utoa 43AE  
                            __end_of_xtoi 34F6                  __end_of_Rtcm_SetRtccDate 5418  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6296                      initGprsModem@initMdm 01D6  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03CD  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE56  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 48AA  
                              _ReceiveEvt 5DBE          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 6220  
                          ?_StringCompare 0085                          __end_of_Terminal 05EC  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4D1C                              _cdc_mem_type 01E2  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03EE  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3C5A                _Uart_MdmGsmGprsReadService 3B90  
              __end_of_UsbDevice_MainTask 5EDE                           getsUSBUSART@len 0086  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6056  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 546C  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1409 5BC6                               _GenerateEvt 6146  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC3D  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 4FCA                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 5DBE                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 62CA  
                              _UartConfig 0324                      __end_of_Mdm_MainTask 5606  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CC  
                           ??_Term_MainSm 00A7                                    _Relay1 01DC  
                                  _Relay2 01DB                                    _Relay3 01DA  
                                  _Relay4 01D9                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 57CC  
                                  _SmsLen 00D3                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 56F2                                    ___lmul 5268  
                    _I2cSlv_ReceiveI2cMsg 59A8                        TurnOnModem@Counter 02DC  
                            ?_putUSBUSART 0083                                    ___wmul 5E6C  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5606  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5418  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4940  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5856           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 573E                    __size_of_HttpGetMethod 04D0  
                                  _memset 5D00                                    clear_0 2630  
                                  clear_1 2642                                    clear_2 264E  
                                  clear_3 265A                                    clear_4 2666  
                                  clear_5 2672                                    clear_6 267E  
                                  clear_7 268A                                    clear_8 2696  
                                  clear_9 26A2                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E6                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EE                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F4  
                      ?_USBEnableEndpoint 0085                                    _strcat 51B4  
                                  _strcpy 5C9E                                    _strlen 5A28  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5B1E  
                HttpGetMethod@UartMessage 0100                             _initGprsModem 46DE  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 04BF  
                     ModemEvtParser@F9104 03C4                       ModemEvtParser@F9106 03BF  
                     ModemEvtParser@F9108 03BA                              _CDCTxService 2816  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC34  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 0339                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 62C2  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 53C4                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 62D6  
                             _Mcu_Int1Isr 62D2                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A8  
                    _controlTransferState 00CB                     __end_ofi1_GenerateEvt 61A0  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4B86  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 02E4  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 26C0                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 62CE                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0188               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01F6                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 56A4  
         I2cSlv_QueryI2cData@TimeoutTimer 0347                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5096  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FE  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02E0  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 589A                               _InitNetwork 00DA  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE6C                             __end_of_sd001 FE3F  
                           __end_of_sd002 FE21                              __pidataBANK0 62DA  
                            __pidataBANK1 62DB                              __pidataBANK2 625E  
                            __pidataBANK3 5966                              __pidataBANK4 60FE  
                            __pidataBANK5 5566                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 5922  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 5C6C  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 60CA               __end_of_USBCtrlTrfInHandler 4038  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 0085  
                    StringCompare@String2 0087                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 618A                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 008B             I2cSlv_QueryI2cData@I2cOpState 01E8  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 5CD0                                _cdc_notice 044A  
                   __end_of_Tmr_TmrBPrSet 3242                       __end_of_Rtcc_RtcIsr 62D2  
                              _cdc_rx_len 00C6                         __end_of_MsgFormat FD2F  
                              _cdc_tx_len 00C4                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 5BCC                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E3                            ClearBuffer@Len 007F  
                         _secondsAppTimer 44FE                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 5E18                    _USBStdGetStatusHandler 40F6  
                       __end_of_SendSmsSm 1BAA       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01F0                            _Rtcc_RtcConfig 45A0  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 0572                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 61B6                  __end_of_Uart_WriteString 5AE2  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 5F4A                               _SetBaudRate 56A4  
               initGprsModem@modemCounter 03B8               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01F2                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 3154  
                               ?_TmrBInit 007D                             _CheckTxStatus 6296  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                       MyApp_Task@cmpString 0100  
                               ?_Terminal 0001                                   ?___lmul 007D  
                            _Led_MainTask 39F8                            _Rtcc_UnlockRtc 6200  
                            _I2cBusStatus 01EA                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2E18  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2028  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE56                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 4940                     __end_of_UpdateSchFlag 60AE  
                            _EepromBuffer 049A                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00D8                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 2E18                         __end_of_WriteByte 628C  
                      _USBCheckStdRequest 34F6                         _configDescriptor1 FDB8  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 0486  
             __end_of_USBCtrlTrfTxService 36B2                       _USBStdSetCfgHandler 332A  
                       triggerRelay@F8982 03CB                   __size_of_ConfigureModem 00CE  
                  I2cSlv_QueryI2cData@Ret 01E7                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 5DEC                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4640  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 0087  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2028  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 3EB2                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DF            __end_of_Pm_DsReleasePinControl 62B8  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 011A                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E1                  __size_of_blinkForSeconds 003A  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 002A  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FD  
                     _I2cSlv_QueryI2cData 378A                                   _Led2Sts 01FB  
                                 _Led3Sts 01F9                __end_of_Sch_SchmIntService 625E  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0090  
                           _cdc_trf_state 00C5                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 62BE  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   __end_of_Mdm_IsRinging 5F26                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CB                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DE                                   _RelayB2 01DD  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D7                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4EF2  
                  __end_of_Rtcc_UnlockRtc 6210                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 61CA  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD2F                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6074                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6174             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 4C12                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 4D9E                                   ___lldiv 4C98  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 54C0                         ??_USBStallHandler 007D  
                                 ___lwmod 58DE                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 62CE                      __size_of_putUSBUSART 0022  
                                 __pcinit 2584                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CE  
                     __end_of_TurnOnModem 5812                           __size_of_memset 0030  
                               _I2cConfig 0352                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDFB                                   __ramtop 0F00  
                             Terminal@Len 03AC                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 626C                                   __ptext1 5CD0  
                                 __ptext2 6278                                   __ptext3 62B2  
                                 __ptext4 6056                                   __ptext5 60CA  
                                 __ptext6 5E18                                   __ptext7 5D90  
                                 __ptext8 3C5A                                   __ptext9 3154  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 45A0  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 5D30                                   _isdigit 5FD2  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 26AE  
                                 clear_11 26BA                          ___awmod@dividend 007D  
                       ??_InitializeTasks 03FB                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 01D3       __end_of_Tmr_RegisterTmr2IsrCallback 6282  
             _Tmr_RegisterTmr2IsrCallback 6278                                   _isspace 5E42  
                            _Mdm_MainTask 55B6                                   _isupper 5F8E  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 22DC  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC3D  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 5F26  
                                 _sprintf 385C                                   _tolower 6116  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 6240  
                        _HttpGetDataLocal 03A3                  __end_of_Mdm_SetSmsFormat 5656  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 4258  
                                 _toupper 612E           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 26C0  
                            _getsUSBUSART 48AA                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DB  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC3B  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC34  
                          _ModemEvtParser 1D32                                   int_func 4258  
                         _USB1msTickCount 0318           _dummy_encapsulated_cmd_response 0377  
                               i1u1452_20 22F2                                 i1u1456_28 2412  
                               i1u1456_29 2426                                 i1u1481_28 5F36  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 6092  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 615E  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 5C9E  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 4640  
                      _UsbDevice_MainTask 5EBA                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 62BE                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 3054  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01EB  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2584  
                         _RtccIsrCallback 02E8          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C7  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 5F6C                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 61DC                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 6016                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02EA                          _HttpGetMethodSts 01EF  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E4                           ??_HttpGetMethod 009D  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 1EBA                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D5  
                   __end_of_StopCondition 62C6                  __size_of_HighPriorityIsr 42FC  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 036E                                 _Led2Blink 0365  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 035C  
            __end_of_USBTransferOnePacket 40F6                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0392                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 181C  
               __end_of_Rtcc_SetRtcStatus 6174                                 _Led2Pulse 038C  
                               _Led3Pulse 0386                         _I2cSlv_SendI2cMsg 5A66  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                       ??_blinkForSeconds 0095                           ??_ScheduleTasks 03FB  
                          _Tmr_TmrBConfig 3C5A                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 61DC                         _OsAlrm_SetOsAlarm 3DEA  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 56F2  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 57CC  
                               _ClipEvent 00DE                              ??_MyApp_Task 00B0  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00D9  
                  _USBCtrlTrfSetupHandler 4B86                        ?_OsAlrm_SetOsAlarm 0083  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 22DC  
   __end_of_USBIncrement1msInternalTimers 5F8E    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 5F6C               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 52C0                            _CheckAckStatus 62A0  
                          __end_of___wmul 5E94                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 61EE                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 5786                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 5D30  
                      _UartTxBufferStatus 5656                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E5                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 6250                                 _MdmStatus 00D1  
                          __end_of_strcat 5210                            __end_of_strcpy 5CD0  
                          __end_of_strlen 5A66                            __end_of_strtol 19F2  
                     start_initialization 2584                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 392A  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 5C38  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4814           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC3F                        __end_of_MyApp_Task 3054  
                        _UpdateOsCounters 6230                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3B90                 __end_of_I2cSlv_SendI2cMsg 5AA4  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 49D4                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 6220  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3D22                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3EB2                    __end_of_Tmr_TmrBIrqSet 573E  
                               _TaskTable 05A4                                 _RingEvent 00DF  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D4                         __size_of_ReadByte 000A  
                               _RtcConfig 03B4                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 5210  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 5DEC  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 60E4  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 62AA  
                                ??___lmul 0085                             _isxdigit$6469 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BC6                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 4D9E                        HttpGetMethod@Index 01C8  
                             __pdataBANK0 00E2                               __pdataBANK1 01FF  
                             __pdataBANK2 02F3                               __pdataBANK3 03BA  
                             __pdataBANK4 04BF                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 546C  
                  __end_of_ConfigureModem 39F8                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D6            __end_of_USBStdGetStatusHandler 41A8  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC3F  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5566                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03FB  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002F  
                  MyApp_Task@blinkSeconds 01D5                              _SetAckStatus 61B6  
                            _isalpha$6459 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6282                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6193 007E             UpdateSchFlag@InterruptCounter 02DE  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 59E8  
     InitGprsNetwork@GprsNetInitNextState 00D0                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 6036                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5B58              __end_of_LedBlinkStateMachine 2816  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 5812                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 60CA  
              __end_of_USBCheckCDCRequest 4258              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5318                           ?_Tmr_TmrBIrqSet 007D  
                    MyApp_Task@blinkTicks 03F9                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 6036  
                            ??_StringCopy 0083                          _Led_SetLedStatus 5D60  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 5FF4                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC34                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 546C                                 __ptext101 378A  
                               __ptext110 1D32                                 __ptext102 4D1C  
                               __ptext111 5C38                                 __ptext103 5A66  
                               __ptext120 43AE                                 __ptext112 5514  
                               __ptext104 59A8                                 __ptext121 62AA  
                               __ptext113 2A94                                 __ptext105 5FF4  
                               __ptext130 4A68                                 __ptext122 0DC8  
                               __ptext114 392A                                 __ptext106 5210  
                           Terminal@Index 00A6                                 __ptext131 3D22  
                               __ptext123 05EC                                 __ptext115 0ABC  
                               __ptext107 57CC                                 __ptext140 5E6C  
                               __ptext132 61EE                                 __ptext124 5AA4  
                               __ptext116 295C                                 __ptext108 19F2  
                               __ptext141 4E10                                 __ptext133 5C02  
                               __ptext125 5922                                 __ptext117 5268  
                               __ptext109 59E8                                 __ptext150 62C2  
                               __ptext142 56A4                                 __ptext134 4456  
                               __ptext126 6036                                 __ptext118 52C0  
                               __ptext151 62C6                                 __ptext143 4C98  
                               __ptext135 3242                                 __ptext127 5656  
                               __ptext119 2432                                 __ptext160 6250  
                               __ptext152 61B6                                 __ptext144 5DEC  
                               __ptext136 5D60                                 __ptext128 5096  
                               __ptext161 6092                                 __ptext153 628C  
                               __ptext145 3EB2                                 __ptext137 26CE  
                               __ptext129 5156                                 __ptext170 6240  
                               __ptext162 6230                                 __ptext154 6146  
                               __ptext146 5DBE                                 __ptext138 54C0  
                               __ptext171 3B90                                 __ptext163 22DC  
                               __ptext155 62CA                                 __ptext147 1EBA  
                               __ptext139 3DEA                                 __ptext172 61A0  
                               __ptext164 5E94                                 __ptext156 6296  
                               __ptext148 2028                                 __ptext173 62CE  
                               __ptext165 5318                                 __ptext157 62A0  
                               __ptext149 6282                                 __ptext174 62D2  
                               __ptext166 60AE                                 __ptext175 62D6  
                               __ptext167 5B92                                 __ptext159 5F26  
                               __ptext176 0000                                 __ptext168 618A  
                                ?___awmod 007D                        _Sch_SchmIntService 6250  
                         _InitializeTasks 4E82                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04B4                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0398  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 4038                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 0440                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039E  
          InitializeTasks@ActiveTaskIndex 03FD                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 5030                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 5030  
              ConfigureModem@DelayCounter 02D8                        __end_of_StringCopy 50F8  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00E0  
                         Terminal@SwTimer 04A9                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 01D8  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02DA  
                        _OsTmr_StartTimer 5156                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 618A  
              __end_of_Mcu_StartSystemPll 6074                              _PhoneNumbLen 00D2  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 5F4A  
                           _Rtcm_MainTask 4AF8                            ___wmul@product 0081  
                ModemEvtParser@ClipString 009A                          SendSmsSm@SwTimer 03E3  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 0028  
         HttpGetMethod@GetMethodNextState 00CF                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 4E10                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 5D00                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      MyApp_Task@memoryFlag 00E2  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4AF8  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A9                      _USBConfigureEndpoint 477C  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2432                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5E94                     __end_of_initGprsModem 477C  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 62B2                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E6                                  _ApnLocal 02D6  
                          _StartCondition 62C6                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0089               HttpGetMethod@GetMethodState 01EC  
                           _Tmr_TmrBPrSet 3154                         _NewStringReceived 003C  
                            _isspace$6462 007E                          _UartSetConfigLow 52C0  
                                _GetSmsSm 2A94                   __end_of_USBStallHandler 5856  
                    Mdm_DrvMainFn@Options 0001                           _blinkForSeconds 5B58  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03D8  
                                _MdmCntSm 43AE                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 2598  
                               copy_data1 25B8                                 copy_data2 25D8  
                               copy_data3 260A              __end_of_LedPulseStateMachine 332A  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 3410                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 628C  
                           i2_GenerateEvt 61A0                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE68  
               __end_of_I2c_InitI2cModule 4E82                                  _MsgReady FE3F  
                         ??_Term_MainTask 00A7                   __end_of_InitializeTasks 4EF2  
              initGprsModem@isInitialized 01D7                   ?_USBCtrlTrfSetupHandler 0001  
             __end_of_I2cSlv_QueryI2cData 385C                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 4814  
                    __size_of_SetBaudRate 004E                              ?_TurnOnModem 0001  
                                _TxBuffer 0320                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DD  
                         _SetUartBaudRate 295C              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EBA                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                           MyApp_Task@F9007 03C8  
                __end_of_UpdateOsCounters 6240                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02F0                             _UpdateSchFlag 6092  
                     __end_of_putUSBUSART 5FD2                               _line_coding 037F  
                            _Rtcc_LockRtc 6210              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 26CE                    __end_of_StartCondition 62CA  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F3                 Rtcm_GetRtccDate@LocalDate 008A  
                I2c_WriteData@WriteStatus 0035                              _isupper$6465 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0090  
                        _GetOsTickCounter 61EE                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A8  
                ModemEvtParser@RingString 00A4                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                         MyApp_Task@phone 04C9                                  __ptext10 56F2  
                                __ptext11 6016                                  __ptext20 5EBA  
                                __ptext12 4814                                  __ptext21 5786  
                                __ptext13 6074                           ??_UartWriteByte 007E  
                                __ptext30 5C6C                                  __ptext22 55B6  
                                __ptext14 2E18                                  __ptext31 5812  
                                __ptext23 5370                                  __ptext15 4E82  
                                __ptext40 332A                                  __ptext32 5F6C  
                                __ptext24 62B8                                  __ptext16 2F3A  
                                __ptext41 40F6                                  __ptext33 2186  
                                __ptext25 5F4A                                  __ptext17 60E4  
                                __ptext50 2CF4                                  __ptext42 2BC6  
                                __ptext34 4940                                  __ptext26 61CA  
                                __ptext18 4AF8                                  __ptext51 3AC4  
                                __ptext43 135A                                  __ptext35 573E  
                                __ptext27 62BE                                  __ptext19 39F8  
                                __ptext60 00D0                                  __ptext52 3F76  
                                __ptext44 50F8                                  __ptext36 4B86  
                                __ptext28 1BAA                                  __ptext61 3410  
                                __ptext53 35DA                                  __ptext45 41A8  
                                __ptext37 3054                                  __ptext29 5B1E  
                                __ptext70 5FB0                                  __ptext62 6116  
                                __ptext54 2816                                  __ptext46 4EF2  
                                __ptext38 4640                                  __ptext71 589A  
                                __ptext63 5AE2                                  __ptext55 10B6  
                                __ptext47 5856                                  __ptext39 34F6  
                                __ptext80 15EE                                  __ptext72 4304  
                                __ptext64 181C                                  __ptext56 5A28  
                                __ptext48 477C                                  __ptext81 4D9E  
                                __ptext73 58DE                                  __ptext65 612E  
                                __ptext57 51B4                                  __ptext49 4FCA  
                                __ptext90 46DE                                  __ptext82 4C12  
                                __ptext74 48AA                                  __ptext66 5E42  
                                __ptext58 385C                                  __ptext91 5606  
                                __ptext83 6210                                  __ptext75 4038  
                                __ptext67 5D30                                  __ptext59 5D00  
                                __ptext92 5B58                                  __ptext84 5030  
                                __ptext76 36B2                                  __ptext68 5F8E  
                                __ptext93 44FE                                  __ptext85 49D4  
                                __ptext77 5FD2                                  __ptext69 5C9E  
                                __ptext94 6220                                  __ptext86 615E  
                                __ptext78 53C4                                  __ptext95 5EDE  
                                __ptext87 45A0                                  __ptext79 6200  
                                __ptext96 5F02                                  __ptext88 6174  
                                __ptext97 61DC                                  __ptext89 4F5E  
                                __ptext98 5418                                  __ptext99 5BCC  
                        __size_of_isupper 0022                                _I2cDummyTx 60AE  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 5EDE  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4C12  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 62A0                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 62B8                        ??_USBCtrlEPService 0097  
                                _isxdigit 5AE2                             _Mdm_IsRinging 5F02  
                     _USBCtrlTrfInHandler 3F76                  I2c_ReadData@I2cReadState 0034  
              __end_of_Mdm_RequestSmsData 6230                     __end_of_ScheduleTasks 2F3A  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4FCA  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3AC4  
                     ??_Mdm_IsSmsReceived 0081                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 03FF                                strtol@sign 0093  
                         Term_MainSm@Data 0454                            _PhoneNumberLen 0322  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                 blinkForSeconds@blinkTicks 0093  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5B92  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5B92  
                __end_of_Mcu_ConfigExtInt 60E4                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C8                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 6016                  __end_of_Led_SetLedStatus 5D90  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 53C4  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 5F02  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 4A68                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0156   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5156  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 50F8  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2A94                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009F                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5966                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 5BCC  
                __end_of_Rtcm_GetRtccDate 5096                               _putUSBUSART 5FB0  
                     _USBCtrlTrfRxService 2CF4                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 5B1E  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 51B4  
                    _LedPulseStateMachine 3242                        _USBCheckCDCRequest 41A8  
                     _USBCtrlTrfTxService 35DA                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                          _Rtcc_AlarmConfig 4F5E  
                         ??_Tmr_TmrBPrSet 009A                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01E0  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5786  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5E42                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CA                                _WDTCONbits 000FC0  
                  MyApp_Task@memoryResult 0103                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 4456  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 62C2  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00C9                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 5C38  
                    __end_of_CDCTxService 295C                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC3B  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F5                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 61CA  
